INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py ../bws_domain/bws_domain_actions.pddl ../bws_domain/problem_size_23/bws_problem_23_8.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.010s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.011s wall-clock]
1750 relevant atoms
1173 auxiliary atoms
2923 final queue length
5092 total queue pushes
Completing instantiation... [0.010s CPU, 0.018s wall-clock]
Instantiating: [0.030s CPU, 0.031s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.010s CPU, 0.000s wall-clock]
Choosing groups...
24 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.007s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.027s wall-clock]
1564 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
46 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.014s wall-clock]
Reordering and filtering variables...
47 of 47 variables necessary.
24 of 47 mutex groups necessary.
1058 of 1058 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.007s wall-clock]
Translator variables: 47
Translator derived variables: 0
Translator facts: 600
Translator goal facts: 23
Translator mutex groups: 24
Translator total mutex groups size: 576
Translator operators: 1058
Translator axioms: 0
Translator task size: 9112
Translator peak memory: 37484 KB
Writing output... [0.000s CPU, 0.005s wall-clock]
Done! [0.090s CPU, 0.095s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.1493e-05s, 24488 KB] reading input...
[t=0.00301268s, 25428 KB] done reading input!
[t=0.00406411s, 25824 KB] Initializing landmark count heuristic...
[t=0.00411809s, 25824 KB] Generating landmark graph...
[t=0.00419444s, 25824 KB] Building a landmark graph with reasonable orders.
[t=0.00427756s, 25956 KB] Initializing Exploration...
[t=0.0046501s, 26256 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0162639s, 26656 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0163607s, 26656 KB] Landmarks generation time: 0.012179s
[t=0.0163892s, 26656 KB] Discovered 105 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0164054s, 26656 KB] 391 edges
[t=0.0164245s, 26656 KB] approx. reasonable orders
[t=0.0164333s, 26656 KB] approx. obedient reasonable orders
[t=0.0164584s, 26656 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0164674s, 26656 KB] Landmarks generation time: 0.0123469s
[t=0.0164769s, 26656 KB] Discovered 105 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0164849s, 26656 KB] 391 edges
[t=0.0164948s, 26656 KB] Landmark graph generation time: 0.0123837s
[t=0.0165029s, 26656 KB] Landmark graph contains 105 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0165107s, 26656 KB] Landmark graph contains 391 orderings.
[t=0.0168683s, 26656 KB] Simplifying 4186 unary operators... done! [3174 unary operators]
[t=0.0178691s, 26656 KB] time to simplify: 0.00107375s
[t=0.0180142s, 26656 KB] Initializing additive heuristic...
[t=0.0180298s, 26656 KB] Initializing FF heuristic...
[t=0.0180802s, 26656 KB] Building successor generator...done!
[t=0.0183018s, 26656 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0183103s, 26656 KB] time for successor generation creation: 0.000187843s
[t=0.0183412s, 26656 KB] Variables: 47
[t=0.0183496s, 26656 KB] FactPairs: 600
[t=0.0183578s, 26656 KB] Bytes per state: 20
[t=0.0184888s, 26656 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0185231s, 26656 KB] 47 initial landmarks, 23 goal landmarks
[t=0.0185927s, 26656 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 58
[t=0.0186027s, 26656 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0186113s, 26656 KB] g=0, 1 evaluated, 0 expanded
[t=0.018626s, 26656 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 58
[t=0.0186347s, 26656 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0186822s, 26656 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 57
[t=0.0186912s, 26656 KB] g=1, 2 evaluated, 1 expanded
[t=0.0187911s, 26656 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0188005s, 26656 KB] g=1, 5 evaluated, 4 expanded
[t=0.0188663s, 26656 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0188753s, 26656 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0188836s, 26656 KB] g=2, 7 evaluated, 6 expanded
[t=0.0189213s, 26656 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0189306s, 26656 KB] g=3, 8 evaluated, 7 expanded
[t=0.0189682s, 26656 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0189774s, 26656 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0189859s, 26656 KB] g=4, 9 evaluated, 8 expanded
[t=0.0190498s, 26656 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0190588s, 26656 KB] g=5, 11 evaluated, 10 expanded
[t=0.0190959s, 26656 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0191054s, 26656 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0191139s, 26656 KB] g=6, 12 evaluated, 11 expanded
[t=0.0193127s, 26656 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0193223s, 26656 KB] g=8, 19 evaluated, 18 expanded
[t=0.0199064s, 26656 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0199203s, 26656 KB] g=10, 40 evaluated, 39 expanded
[t=0.0200732s, 26656 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.020084s, 26656 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0200927s, 26656 KB] g=10, 45 evaluated, 44 expanded
[t=0.0202898s, 26656 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0203009s, 26656 KB] g=12, 52 evaluated, 51 expanded
[t=0.0205576s, 26656 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0205716s, 26656 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0205801s, 26656 KB] g=14, 61 evaluated, 60 expanded
[t=0.0208288s, 26656 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0208465s, 26656 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0208567s, 26656 KB] g=16, 69 evaluated, 68 expanded
[t=0.0211191s, 26656 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0211307s, 26656 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0211407s, 26656 KB] g=18, 78 evaluated, 77 expanded
[t=0.0212127s, 26656 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.021222s, 26656 KB] g=19, 80 evaluated, 79 expanded
[t=0.0212612s, 26656 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0212706s, 26656 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0212792s, 26656 KB] g=20, 81 evaluated, 80 expanded
[t=0.0214261s, 26656 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0214371s, 26656 KB] g=21, 86 evaluated, 85 expanded
[t=0.0214755s, 26656 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0214848s, 26656 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0214937s, 26656 KB] g=22, 87 evaluated, 86 expanded
[t=0.0217456s, 26656 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0217558s, 26656 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0217646s, 26656 KB] g=24, 96 evaluated, 95 expanded
[t=0.0222997s, 26656 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0223157s, 26656 KB] g=28, 115 evaluated, 114 expanded
[t=0.0225084s, 26656 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0225194s, 26656 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0225276s, 26656 KB] g=30, 122 evaluated, 121 expanded
[t=0.0231058s, 26656 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0231173s, 26656 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0231261s, 26656 KB] g=34, 143 evaluated, 142 expanded
[t=0.0233244s, 26656 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0233338s, 26656 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0233423s, 26656 KB] g=36, 150 evaluated, 149 expanded
[t=0.0241909s, 26656 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0242044s, 26656 KB] g=42, 181 evaluated, 180 expanded
[t=0.0244362s, 26656 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0244469s, 26656 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0244564s, 26656 KB] g=44, 189 evaluated, 188 expanded
[t=0.0246259s, 26656 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0246358s, 26656 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0246442s, 26656 KB] g=46, 195 evaluated, 194 expanded
[t=0.0248379s, 26656 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0248496s, 26656 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0248583s, 26656 KB] g=48, 202 evaluated, 201 expanded
[t=0.0250212s, 26656 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0250308s, 26656 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0250392s, 26656 KB] g=50, 208 evaluated, 207 expanded
[t=0.0251964s, 26656 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0252059s, 26656 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.025215s, 26656 KB] g=52, 214 evaluated, 213 expanded
[t=0.0253476s, 26656 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0253574s, 26656 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.025366s, 26656 KB] g=52, 219 evaluated, 218 expanded
[t=0.0255194s, 26656 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0255292s, 26656 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0255379s, 26656 KB] g=54, 225 evaluated, 224 expanded
[t=0.025998s, 26656 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0260143s, 26656 KB] g=57, 242 evaluated, 241 expanded
[t=0.0260514s, 26656 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0260609s, 26656 KB] g=58, 243 evaluated, 242 expanded
[t=0.0261733s, 26656 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0261848s, 26656 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0261936s, 26656 KB] g=60, 247 evaluated, 246 expanded
[t=0.0264977s, 26656 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0265089s, 26656 KB] g=64, 258 evaluated, 257 expanded
[t=0.0266182s, 26656 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0266284s, 26656 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0266395s, 26656 KB] g=66, 262 evaluated, 261 expanded
[t=0.0272213s, 26656 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0272352s, 26656 KB] g=74, 285 evaluated, 284 expanded
[t=0.0273479s, 26656 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0273587s, 26656 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0273676s, 26656 KB] g=76, 289 evaluated, 288 expanded
[t=0.0285937s, 26656 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0286192s, 26656 KB] g=98, 342 evaluated, 341 expanded
[t=0.028821s, 26656 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0288392s, 26656 KB] g=102, 351 evaluated, 350 expanded
[t=0.0289112s, 26656 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0289215s, 26656 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0289301s, 26656 KB] g=104, 354 evaluated, 353 expanded
[t=0.0292105s, 26656 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.029221s, 26656 KB] g=116, 370 evaluated, 369 expanded
[t=0.0292873s, 26656 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0292973s, 26656 KB] g=120, 374 evaluated, 373 expanded
[t=0.0293154s, 26656 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0293247s, 26656 KB] g=121, 375 evaluated, 374 expanded
[t=0.0293418s, 26656 KB] Solution found!
[t=0.0293546s, 26656 KB] Actual search time: 0.0108252s
unstack b21 b4 (1)
put-down b21 (1)
unstack b12 b22 (1)
stack b12 b4 (1)
unstack b22 b18 (1)
put-down b22 (1)
unstack b20 b15 (1)
put-down b20 (1)
unstack b6 b16 (1)
stack b6 b15 (1)
unstack b16 b10 (1)
put-down b16 (1)
unstack b10 b19 (1)
stack b10 b20 (1)
unstack b19 b14 (1)
stack b19 b22 (1)
unstack b14 b11 (1)
stack b14 b5 (1)
unstack b11 b23 (1)
stack b11 b14 (1)
unstack b23 b3 (1)
stack b23 b21 (1)
unstack b3 b1 (1)
stack b3 b19 (1)
unstack b12 b4 (1)
put-down b12 (1)
pick-up b4 (1)
stack b4 b16 (1)
pick-up b12 (1)
stack b12 b4 (1)
unstack b6 b15 (1)
put-down b6 (1)
pick-up b15 (1)
stack b15 b1 (1)
pick-up b6 (1)
stack b6 b15 (1)
unstack b11 b14 (1)
put-down b11 (1)
unstack b14 b5 (1)
put-down b14 (1)
unstack b5 b17 (1)
stack b5 b3 (1)
pick-up b11 (1)
stack b11 b14 (1)
unstack b17 b13 (1)
stack b17 b6 (1)
unstack b13 b2 (1)
stack b13 b10 (1)
unstack b2 b9 (1)
stack b2 b7 (1)
pick-up b9 (1)
stack b9 b8 (1)
pick-up b18 (1)
stack b18 b9 (1)
unstack b2 b7 (1)
put-down b2 (1)
pick-up b7 (1)
stack b7 b13 (1)
pick-up b2 (1)
stack b2 b7 (1)
unstack b11 b14 (1)
put-down b11 (1)
pick-up b14 (1)
stack b14 b5 (1)
pick-up b11 (1)
stack b11 b14 (1)
unstack b12 b4 (1)
put-down b12 (1)
unstack b4 b16 (1)
put-down b4 (1)
pick-up b16 (1)
stack b16 b2 (1)
pick-up b12 (1)
stack b12 b4 (1)
unstack b16 b2 (1)
put-down b16 (1)
unstack b2 b7 (1)
put-down b2 (1)
pick-up b16 (1)
stack b16 b2 (1)
unstack b12 b4 (1)
put-down b12 (1)
pick-up b4 (1)
stack b4 b16 (1)
pick-up b12 (1)
stack b12 b4 (1)
unstack b7 b13 (1)
put-down b7 (1)
unstack b13 b10 (1)
put-down b13 (1)
pick-up b7 (1)
stack b7 b13 (1)
unstack b10 b20 (1)
put-down b10 (1)
pick-up b20 (1)
stack b20 b17 (1)
pick-up b10 (1)
stack b10 b20 (1)
unstack b7 b13 (1)
put-down b7 (1)
pick-up b13 (1)
stack b13 b10 (1)
pick-up b7 (1)
stack b7 b13 (1)
unstack b12 b4 (1)
put-down b12 (1)
unstack b4 b16 (1)
put-down b4 (1)
pick-up b12 (1)
stack b12 b4 (1)
unstack b16 b2 (1)
put-down b16 (1)
pick-up b2 (1)
stack b2 b7 (1)
pick-up b16 (1)
stack b16 b2 (1)
unstack b12 b4 (1)
put-down b12 (1)
pick-up b4 (1)
stack b4 b16 (1)
pick-up b12 (1)
stack b12 b4 (1)
[t=0.0293655s, 26656 KB] Plan length: 122 step(s).
[t=0.0293655s, 26656 KB] Plan cost: 122
[t=0.0293655s, 26656 KB] Expanded 375 state(s).
[t=0.0293655s, 26656 KB] Reopened 0 state(s).
[t=0.0293655s, 26656 KB] Evaluated 376 state(s).
[t=0.0293655s, 26656 KB] Evaluations: 752
[t=0.0293655s, 26656 KB] Generated 3592 state(s).
[t=0.0293655s, 26656 KB] Dead ends: 0 state(s).
[t=0.0293655s, 26656 KB] Number of registered states: 376
[t=0.0293655s, 26656 KB] Int hash set load factor: 376/512 = 0.734375
[t=0.0293655s, 26656 KB] Int hash set resizes: 9
[t=0.0293655s, 26656 KB] Search time: 0.0108771s
[t=0.0293655s, 26656 KB] Total time: 0.0293655s
Solution found.
Peak memory: 26656 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.16s
