INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py ../bws_domain/bws_domain_actions.pddl ../bws_domain/problem_size_29/bws_problem_29_3.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.017s wall-clock]
2728 relevant atoms
1827 auxiliary atoms
4555 final queue length
7979 total queue pushes
Completing instantiation... [0.030s CPU, 0.030s wall-clock]
Instantiating: [0.050s CPU, 0.049s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.002s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
30 uncovered facts
Choosing groups: [0.010s CPU, 0.002s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.010s CPU, 0.012s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.001s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.001s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.002s wall-clock]
Translating task: [0.050s CPU, 0.050s wall-clock]
2494 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
58 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.020s wall-clock]
Reordering and filtering variables...
59 of 59 variables necessary.
30 of 59 mutex groups necessary.
1682 of 1682 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.012s wall-clock]
Translator variables: 59
Translator derived variables: 0
Translator facts: 930
Translator goal facts: 29
Translator mutex groups: 30
Translator total mutex groups size: 900
Translator operators: 1682
Translator axioms: 0
Translator task size: 14446
Translator peak memory: 40824 KB
Writing output... [0.010s CPU, 0.009s wall-clock]
Done! [0.160s CPU, 0.158s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.1084e-05s, 24488 KB] reading input...
[t=0.00488059s, 26220 KB] done reading input!
[t=0.00653629s, 26616 KB] Initializing landmark count heuristic...
[t=0.00660374s, 26616 KB] Generating landmark graph...
[t=0.00680164s, 26748 KB] Building a landmark graph with reasonable orders.
[t=0.00691672s, 26748 KB] Initializing Exploration...
[t=0.00741492s, 27200 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0356651s, 28656 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0358471s, 28656 KB] Landmarks generation time: 0.0290533s
[t=0.0358759s, 28656 KB] Discovered 140 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.035914s, 28656 KB] 1799 edges
[t=0.0359261s, 28656 KB] approx. reasonable orders
[t=0.0396959s, 28656 KB] approx. obedient reasonable orders
[t=0.0398115s, 28656 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0398357s, 28656 KB] Landmarks generation time: 0.0332276s
[t=0.0398463s, 28656 KB] Discovered 140 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.039855s, 28656 KB] 1838 edges
[t=0.0398638s, 28656 KB] Landmark graph generation time: 0.0332675s
[t=0.0398731s, 28656 KB] Landmark graph contains 140 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0398817s, 28656 KB] Landmark graph contains 1838 orderings.
[t=0.0405119s, 28680 KB] Simplifying 6670 unary operators... done! [5046 unary operators]
[t=0.0422621s, 28680 KB] time to simplify: 0.00177732s
[t=0.0423787s, 28680 KB] Initializing additive heuristic...
[t=0.0424004s, 28680 KB] Initializing FF heuristic...
[t=0.0424571s, 28680 KB] Building successor generator...done!
[t=0.0427816s, 28680 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0427938s, 28680 KB] time for successor generation creation: 0.000285008s
[t=0.0428133s, 28680 KB] Variables: 59
[t=0.0428228s, 28680 KB] FactPairs: 930
[t=0.0428319s, 28680 KB] Bytes per state: 24
[t=0.0430258s, 28680 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0430696s, 28680 KB] 59 initial landmarks, 29 goal landmarks
[t=0.043165s, 28680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 81
[t=0.0431759s, 28680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 56
[t=0.0431853s, 28680 KB] g=0, 1 evaluated, 0 expanded
[t=0.0432012s, 28680 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 81
[t=0.0432127s, 28680 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 56
[t=0.0433543s, 28680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 55
[t=0.0433698s, 28680 KB] g=1, 3 evaluated, 2 expanded
[t=0.0434455s, 28680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 78
[t=0.0434614s, 28680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 54
[t=0.0434736s, 28680 KB] g=2, 4 evaluated, 3 expanded
[t=0.0435472s, 28680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 53
[t=0.0435604s, 28680 KB] g=3, 5 evaluated, 4 expanded
[t=0.043634s, 28680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 75
[t=0.0436479s, 28680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 52
[t=0.0436602s, 28680 KB] g=4, 6 evaluated, 5 expanded
[t=0.0438112s, 28680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 74
[t=0.0438242s, 28680 KB] g=6, 9 evaluated, 8 expanded
[t=0.0441676s, 28680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 73
[t=0.0441896s, 28680 KB] g=9, 15 evaluated, 14 expanded
[t=0.0446101s, 28680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 72
[t=0.0446366s, 28680 KB] g=12, 21 evaluated, 20 expanded
[t=0.0452796s, 28680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 71
[t=0.0453392s, 28680 KB] g=14, 31 evaluated, 30 expanded
[t=0.0455187s, 28680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 68
[t=0.0455301s, 28680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 51
[t=0.0455391s, 28680 KB] g=16, 35 evaluated, 34 expanded
[t=0.0457494s, 28680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 67
[t=0.0457603s, 28680 KB] g=18, 40 evaluated, 39 expanded
[t=0.0460015s, 28680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 66
[t=0.0460114s, 28680 KB] g=20, 46 evaluated, 45 expanded
[t=0.0462949s, 28680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 65
[t=0.04631s, 28680 KB] g=22, 53 evaluated, 52 expanded
[t=0.0466432s, 28680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 50
[t=0.0466538s, 28680 KB] g=24, 61 evaluated, 60 expanded
[t=0.0467052s, 28680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 64
[t=0.0467145s, 28680 KB] g=24, 62 evaluated, 61 expanded
[t=0.0478294s, 28680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 63
[t=0.0478467s, 28680 KB] g=27, 87 evaluated, 86 expanded
[t=0.0489461s, 28680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 62
[t=0.0489686s, 28680 KB] g=30, 111 evaluated, 110 expanded
[t=0.0500429s, 28680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 61
[t=0.0500714s, 28680 KB] g=32, 136 evaluated, 135 expanded
[t=0.0505425s, 28680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 60
[t=0.0505623s, 28680 KB] g=33, 146 evaluated, 145 expanded
[t=0.05066s, 28680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 58
[t=0.0506706s, 28680 KB] g=34, 148 evaluated, 147 expanded
[t=0.0511564s, 28680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 49
[t=0.0511744s, 28680 KB] g=30, 159 evaluated, 158 expanded
[t=0.0517233s, 28680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 57
[t=0.0517407s, 28680 KB] g=36, 172 evaluated, 171 expanded
[t=0.0527143s, 28680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0527712s, 28680 KB] g=38, 193 evaluated, 192 expanded
[t=0.0544111s, 28680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0544429s, 28680 KB] g=40, 223 evaluated, 222 expanded
[t=0.0557451s, 28680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0557579s, 28680 KB] g=42, 254 evaluated, 253 expanded
[t=0.0563488s, 28680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.056361s, 28680 KB] g=43, 267 evaluated, 266 expanded
[t=0.0564181s, 28680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0564308s, 28680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 48
[t=0.0564435s, 28680 KB] g=44, 268 evaluated, 267 expanded
[t=0.0571795s, 28680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 47
[t=0.0571916s, 28680 KB] g=46, 285 evaluated, 284 expanded
[t=0.0572471s, 28680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0572577s, 28680 KB] g=46, 286 evaluated, 285 expanded
[t=0.0585071s, 28680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0585349s, 28680 KB] g=46, 315 evaluated, 314 expanded
[t=0.0590394s, 28680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0590546s, 28680 KB] g=47, 325 evaluated, 324 expanded
[t=0.0591164s, 28680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0591263s, 28680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0591354s, 28680 KB] g=48, 326 evaluated, 325 expanded
[t=0.059889s, 28680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.0599046s, 28680 KB] g=50, 343 evaluated, 342 expanded
[t=0.0599651s, 28680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0599762s, 28680 KB] g=50, 344 evaluated, 343 expanded
[t=0.0612212s, 28680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.061244s, 28680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0612532s, 28680 KB] g=52, 373 evaluated, 372 expanded
[t=0.0618958s, 28680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0619164s, 28680 KB] g=54, 388 evaluated, 387 expanded
[t=0.0619749s, 28680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0619847s, 28680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0619949s, 28680 KB] g=54, 389 evaluated, 388 expanded
[t=0.0626614s, 28680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0626765s, 28680 KB] g=56, 405 evaluated, 404 expanded
[t=0.0627361s, 28680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0627462s, 28680 KB] g=56, 406 evaluated, 405 expanded
[t=0.0635965s, 28680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0636098s, 28680 KB] g=57, 426 evaluated, 425 expanded
[t=0.0636652s, 28680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0636744s, 28680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0636832s, 28680 KB] g=58, 427 evaluated, 426 expanded
[t=0.0643781s, 28680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0643922s, 28680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0644015s, 28680 KB] g=60, 443 evaluated, 442 expanded
[t=0.0650342s, 28680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0650469s, 28680 KB] g=62, 458 evaluated, 457 expanded
[t=0.0651052s, 28680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0651168s, 28680 KB] g=62, 459 evaluated, 458 expanded
[t=0.0661649s, 28680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0661854s, 28680 KB] g=64, 484 evaluated, 483 expanded
[t=0.066549s, 28680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0665696s, 28680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.066581s, 28680 KB] g=64, 492 evaluated, 491 expanded
[t=0.0671416s, 28680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0671566s, 28680 KB] g=66, 505 evaluated, 504 expanded
[t=0.0675254s, 28680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0675408s, 28680 KB] g=66, 513 evaluated, 512 expanded
[t=0.0679695s, 28680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0679976s, 28680 KB] g=68, 523 evaluated, 522 expanded
[t=0.0685299s, 28680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0685426s, 28680 KB] g=68, 535 evaluated, 534 expanded
[t=0.0688956s, 28680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0689127s, 28680 KB] g=70, 543 evaluated, 542 expanded
[t=0.0698816s, 28680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0699513s, 28680 KB] g=72, 560 evaluated, 559 expanded
[t=0.0702236s, 28680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0702489s, 28680 KB] g=70, 564 evaluated, 563 expanded
[t=0.0712031s, 28680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0712404s, 28680 KB] g=72, 580 evaluated, 579 expanded
[t=0.0716093s, 28680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0716223s, 28680 KB] g=74, 588 evaluated, 587 expanded
[t=0.0717608s, 28680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0717705s, 28680 KB] g=74, 591 evaluated, 590 expanded
[t=0.072251s, 28680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0722631s, 28680 KB] g=76, 602 evaluated, 601 expanded
[t=0.0723582s, 28680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0723686s, 28680 KB] g=76, 604 evaluated, 603 expanded
[t=0.0727601s, 28680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0727708s, 28680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0727797s, 28680 KB] g=78, 613 evaluated, 612 expanded
[t=0.0732429s, 28680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0732527s, 28680 KB] g=82, 624 evaluated, 623 expanded
[t=0.0734704s, 28680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0734799s, 28680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0734896s, 28680 KB] g=84, 629 evaluated, 628 expanded
[t=0.089329s, 28680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0893953s, 28680 KB] g=100, 970 evaluated, 969 expanded
[t=0.0903579s, 28680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0903703s, 28680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0903804s, 28680 KB] g=106, 993 evaluated, 992 expanded
[t=0.0979796s, 28680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0980364s, 28680 KB] g=122, 1174 evaluated, 1173 expanded
[t=0.0986198s, 28680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0986336s, 28680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0986424s, 28680 KB] g=128, 1188 evaluated, 1187 expanded
[t=0.176333s, 28680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.176423s, 28680 KB] g=166, 2957 evaluated, 2956 expanded
[t=0.177119s, 28680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.177132s, 28680 KB] g=170, 2973 evaluated, 2972 expanded
[t=0.177305s, 28680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.177321s, 28680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.177332s, 28680 KB] g=172, 2977 evaluated, 2976 expanded
[t=0.183285s, 28680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.183383s, 28680 KB] g=188, 3117 evaluated, 3116 expanded
[t=0.184664s, 28680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.184679s, 28680 KB] g=196, 3148 evaluated, 3147 expanded
[t=0.185045s, 28680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.185057s, 28680 KB] g=200, 3157 evaluated, 3156 expanded
[t=0.185186s, 28680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.185197s, 28680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.185207s, 28680 KB] g=202, 3160 evaluated, 3159 expanded
[t=0.216261s, 28680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.216354s, 28680 KB] g=248, 4002 evaluated, 4001 expanded
[t=0.217117s, 28680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.217129s, 28680 KB] g=256, 4028 evaluated, 4027 expanded
[t=0.217196s, 28680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.217206s, 28680 KB] g=256, 4030 evaluated, 4029 expanded
[t=0.217296s, 28680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.217306s, 28680 KB] g=258, 4033 evaluated, 4032 expanded
[t=0.218355s, 28680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.218366s, 28680 KB] g=274, 4074 evaluated, 4073 expanded
[t=0.218595s, 28680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.218604s, 28680 KB] g=282, 4084 evaluated, 4083 expanded
[t=0.218699s, 28680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.218711s, 28680 KB] g=286, 4088 evaluated, 4087 expanded
[t=0.218735s, 28680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.218744s, 28680 KB] g=287, 4089 evaluated, 4088 expanded
[t=0.218761s, 28680 KB] Solution found!
[t=0.218781s, 28680 KB] Actual search time: 0.175708s
unstack b23 b13 (1)
put-down b23 (1)
unstack b13 b2 (1)
put-down b13 (1)
unstack b2 b20 (1)
put-down b2 (1)
unstack b20 b8 (1)
put-down b20 (1)
unstack b8 b7 (1)
put-down b8 (1)
pick-up b20 (1)
stack b20 b8 (1)
unstack b7 b9 (1)
put-down b7 (1)
unstack b9 b17 (1)
stack b9 b2 (1)
unstack b17 b25 (1)
put-down b17 (1)
unstack b25 b14 (1)
put-down b25 (1)
unstack b14 b11 (1)
put-down b14 (1)
unstack b11 b4 (1)
put-down b11 (1)
unstack b4 b28 (1)
put-down b4 (1)
unstack b28 b10 (1)
put-down b28 (1)
unstack b10 b18 (1)
put-down b10 (1)
unstack b18 b21 (1)
put-down b18 (1)
unstack b21 b1 (1)
stack b21 b18 (1)
unstack b1 b12 (1)
put-down b1 (1)
unstack b12 b15 (1)
put-down b12 (1)
unstack b15 b6 (1)
put-down b15 (1)
unstack b6 b26 (1)
stack b6 b20 (1)
unstack b26 b5 (1)
put-down b26 (1)
unstack b5 b24 (1)
stack b5 b6 (1)
unstack b24 b3 (1)
stack b24 b13 (1)
pick-up b28 (1)
stack b28 b5 (1)
unstack b3 b19 (1)
stack b3 b4 (1)
unstack b19 b29 (1)
stack b19 b23 (1)
unstack b29 b27 (1)
stack b29 b11 (1)
unstack b27 b22 (1)
put-down b27 (1)
pick-up b16 (1)
stack b16 b27 (1)
pick-up b22 (1)
stack b22 b9 (1)
pick-up b14 (1)
stack b14 b19 (1)
pick-up b15 (1)
stack b15 b3 (1)
pick-up b1 (1)
stack b1 b15 (1)
pick-up b25 (1)
stack b25 b29 (1)
pick-up b10 (1)
stack b10 b25 (1)
pick-up b17 (1)
stack b17 b10 (1)
pick-up b7 (1)
stack b7 b1 (1)
pick-up b12 (1)
stack b12 b7 (1)
unstack b21 b18 (1)
put-down b21 (1)
pick-up b18 (1)
stack b18 b22 (1)
pick-up b21 (1)
stack b21 b18 (1)
unstack b28 b5 (1)
put-down b28 (1)
unstack b5 b6 (1)
put-down b5 (1)
pick-up b28 (1)
stack b28 b5 (1)
unstack b6 b20 (1)
put-down b6 (1)
unstack b20 b8 (1)
put-down b20 (1)
pick-up b8 (1)
stack b8 b17 (1)
pick-up b20 (1)
stack b20 b8 (1)
pick-up b6 (1)
stack b6 b20 (1)
unstack b28 b5 (1)
put-down b28 (1)
pick-up b5 (1)
stack b5 b6 (1)
pick-up b28 (1)
stack b28 b5 (1)
unstack b21 b18 (1)
put-down b21 (1)
unstack b18 b22 (1)
put-down b18 (1)
pick-up b21 (1)
stack b21 b18 (1)
unstack b22 b9 (1)
put-down b22 (1)
unstack b9 b2 (1)
put-down b9 (1)
pick-up b2 (1)
stack b2 b12 (1)
pick-up b9 (1)
stack b9 b2 (1)
pick-up b22 (1)
stack b22 b9 (1)
unstack b21 b18 (1)
put-down b21 (1)
pick-up b18 (1)
stack b18 b22 (1)
pick-up b21 (1)
stack b21 b18 (1)
unstack b28 b5 (1)
put-down b28 (1)
unstack b5 b6 (1)
put-down b5 (1)
pick-up b28 (1)
stack b28 b5 (1)
unstack b6 b20 (1)
put-down b6 (1)
unstack b20 b8 (1)
put-down b20 (1)
unstack b8 b17 (1)
put-down b8 (1)
pick-up b20 (1)
stack b20 b8 (1)
pick-up b6 (1)
stack b6 b20 (1)
unstack b28 b5 (1)
put-down b28 (1)
pick-up b5 (1)
stack b5 b6 (1)
pick-up b28 (1)
stack b28 b5 (1)
unstack b17 b10 (1)
put-down b17 (1)
unstack b10 b25 (1)
put-down b10 (1)
pick-up b17 (1)
stack b17 b10 (1)
unstack b25 b29 (1)
put-down b25 (1)
unstack b29 b11 (1)
put-down b29 (1)
pick-up b11 (1)
stack b11 b14 (1)
pick-up b29 (1)
stack b29 b11 (1)
pick-up b25 (1)
stack b25 b29 (1)
unstack b17 b10 (1)
put-down b17 (1)
pick-up b10 (1)
stack b10 b25 (1)
pick-up b17 (1)
stack b17 b10 (1)
unstack b28 b5 (1)
put-down b28 (1)
unstack b5 b6 (1)
put-down b5 (1)
unstack b6 b20 (1)
put-down b6 (1)
pick-up b5 (1)
stack b5 b6 (1)
pick-up b28 (1)
stack b28 b5 (1)
unstack b20 b8 (1)
put-down b20 (1)
pick-up b8 (1)
stack b8 b17 (1)
pick-up b20 (1)
stack b20 b8 (1)
unstack b28 b5 (1)
put-down b28 (1)
unstack b5 b6 (1)
put-down b5 (1)
pick-up b28 (1)
stack b28 b5 (1)
pick-up b6 (1)
stack b6 b20 (1)
unstack b28 b5 (1)
put-down b28 (1)
pick-up b5 (1)
stack b5 b6 (1)
pick-up b28 (1)
stack b28 b5 (1)
unstack b21 b18 (1)
put-down b21 (1)
unstack b18 b22 (1)
put-down b18 (1)
pick-up b21 (1)
stack b21 b18 (1)
unstack b22 b9 (1)
put-down b22 (1)
unstack b9 b2 (1)
put-down b9 (1)
unstack b2 b12 (1)
put-down b2 (1)
pick-up b9 (1)
stack b9 b2 (1)
pick-up b22 (1)
stack b22 b9 (1)
unstack b21 b18 (1)
put-down b21 (1)
pick-up b18 (1)
stack b18 b22 (1)
pick-up b21 (1)
stack b21 b18 (1)
unstack b12 b7 (1)
put-down b12 (1)
unstack b7 b1 (1)
put-down b7 (1)
unstack b1 b15 (1)
put-down b1 (1)
pick-up b7 (1)
stack b7 b1 (1)
pick-up b12 (1)
stack b12 b7 (1)
unstack b15 b3 (1)
put-down b15 (1)
unstack b3 b4 (1)
put-down b3 (1)
pick-up b15 (1)
stack b15 b3 (1)
pick-up b4 (1)
stack b4 b28 (1)
unstack b15 b3 (1)
put-down b15 (1)
pick-up b3 (1)
stack b3 b4 (1)
pick-up b15 (1)
stack b15 b3 (1)
unstack b12 b7 (1)
put-down b12 (1)
unstack b7 b1 (1)
put-down b7 (1)
pick-up b1 (1)
stack b1 b15 (1)
pick-up b7 (1)
stack b7 b1 (1)
pick-up b12 (1)
stack b12 b7 (1)
unstack b21 b18 (1)
put-down b21 (1)
unstack b18 b22 (1)
put-down b18 (1)
unstack b22 b9 (1)
put-down b22 (1)
pick-up b18 (1)
stack b18 b22 (1)
pick-up b21 (1)
stack b21 b18 (1)
unstack b9 b2 (1)
put-down b9 (1)
pick-up b2 (1)
stack b2 b12 (1)
pick-up b9 (1)
stack b9 b2 (1)
unstack b21 b18 (1)
put-down b21 (1)
unstack b18 b22 (1)
put-down b18 (1)
pick-up b21 (1)
stack b21 b18 (1)
pick-up b22 (1)
stack b22 b9 (1)
unstack b21 b18 (1)
put-down b21 (1)
pick-up b18 (1)
stack b18 b22 (1)
pick-up b21 (1)
stack b21 b18 (1)
[t=0.218792s, 28680 KB] Plan length: 288 step(s).
[t=0.218792s, 28680 KB] Plan cost: 288
[t=0.218792s, 28680 KB] Expanded 4089 state(s).
[t=0.218792s, 28680 KB] Reopened 0 state(s).
[t=0.218792s, 28680 KB] Evaluated 4090 state(s).
[t=0.218792s, 28680 KB] Evaluations: 8180
[t=0.218792s, 28680 KB] Generated 42863 state(s).
[t=0.218792s, 28680 KB] Dead ends: 0 state(s).
[t=0.218792s, 28680 KB] Number of registered states: 4090
[t=0.218792s, 28680 KB] Int hash set load factor: 4090/8192 = 0.499268
[t=0.218792s, 28680 KB] Int hash set resizes: 13
[t=0.218792s, 28680 KB] Search time: 0.175767s
[t=0.218792s, 28680 KB] Total time: 0.218792s
Solution found.
Peak memory: 28680 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.44s
