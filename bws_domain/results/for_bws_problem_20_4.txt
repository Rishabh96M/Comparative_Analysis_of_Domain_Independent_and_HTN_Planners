INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py ../bws_domain/bws_domain_actions.pddl ../bws_domain/problem_size_20/bws_problem_20_4.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.004s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.011s wall-clock]
1342 relevant atoms
900 auxiliary atoms
2242 final queue length
3885 total queue pushes
Completing instantiation... [0.030s CPU, 0.023s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
21 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.007s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.020s wall-clock]
1180 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
40 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.010s wall-clock]
Reordering and filtering variables...
41 of 41 variables necessary.
21 of 41 mutex groups necessary.
800 of 800 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 41
Translator derived variables: 0
Translator facts: 462
Translator goal facts: 20
Translator mutex groups: 21
Translator total mutex groups size: 441
Translator operators: 800
Translator axioms: 0
Translator task size: 6904
Translator peak memory: 35944 KB
Writing output... [0.000s CPU, 0.004s wall-clock]
Done! [0.090s CPU, 0.090s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=3.6436e-05s, 24488 KB] reading input...
[t=0.00238128s, 25180 KB] done reading input!
[t=0.00340711s, 25444 KB] Initializing landmark count heuristic...
[t=0.00344743s, 25444 KB] Generating landmark graph...
[t=0.00351276s, 25576 KB] Building a landmark graph with reasonable orders.
[t=0.00357534s, 25576 KB] Initializing Exploration...
[t=0.00381774s, 25744 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0117925s, 26140 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.011846s, 26140 KB] Landmarks generation time: 0.00833121s
[t=0.0118602s, 26140 KB] Discovered 92 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0118784s, 26140 KB] 440 edges
[t=0.0118979s, 26140 KB] approx. reasonable orders
[t=0.0122316s, 26140 KB] approx. obedient reasonable orders
[t=0.0122586s, 26140 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.012268s, 26140 KB] Landmarks generation time: 0.00881802s
[t=0.0122778s, 26140 KB] Discovered 92 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0122862s, 26140 KB] 442 edges
[t=0.0122947s, 26140 KB] Landmark graph generation time: 0.00885446s
[t=0.0123038s, 26140 KB] Landmark graph contains 92 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0123123s, 26140 KB] Landmark graph contains 442 orderings.
[t=0.0126008s, 26336 KB] Simplifying 3160 unary operators... done! [2400 unary operators]
[t=0.0133505s, 26336 KB] time to simplify: 0.000803619s
[t=0.0134555s, 26336 KB] Initializing additive heuristic...
[t=0.0134695s, 26336 KB] Initializing FF heuristic...
[t=0.0135214s, 26336 KB] Building successor generator...done!
[t=0.0136906s, 26336 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0137007s, 26336 KB] time for successor generation creation: 0.000135071s
[t=0.0137135s, 26336 KB] Variables: 41
[t=0.0137225s, 26336 KB] FactPairs: 462
[t=0.0137313s, 26336 KB] Bytes per state: 16
[t=0.0138218s, 26336 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0138556s, 26336 KB] 41 initial landmarks, 20 goal landmarks
[t=0.013902s, 26336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.013912s, 26336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0139209s, 26336 KB] g=0, 1 evaluated, 0 expanded
[t=0.0139338s, 26336 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0139426s, 26336 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.013978s, 26336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0139869s, 26336 KB] g=1, 2 evaluated, 1 expanded
[t=0.0140194s, 26336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.014029s, 26336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0140377s, 26336 KB] g=2, 3 evaluated, 2 expanded
[t=0.0141374s, 26336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0141467s, 26336 KB] g=4, 7 evaluated, 6 expanded
[t=0.0141776s, 26336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0141864s, 26336 KB] g=4, 8 evaluated, 7 expanded
[t=0.0143051s, 26336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0143147s, 26336 KB] g=6, 13 evaluated, 12 expanded
[t=0.0144123s, 26336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0144215s, 26336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0144296s, 26336 KB] g=8, 17 evaluated, 16 expanded
[t=0.0145036s, 26336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0145125s, 26336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0145205s, 26336 KB] g=10, 20 evaluated, 19 expanded
[t=0.0146388s, 26336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0146486s, 26336 KB] g=13, 25 evaluated, 24 expanded
[t=0.0146804s, 26336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0146894s, 26336 KB] g=14, 26 evaluated, 25 expanded
[t=0.0147673s, 26336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0147772s, 26336 KB] g=15, 29 evaluated, 28 expanded
[t=0.0148087s, 26336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0148176s, 26336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0148258s, 26336 KB] g=16, 30 evaluated, 29 expanded
[t=0.0149443s, 26336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0149534s, 26336 KB] g=18, 35 evaluated, 34 expanded
[t=0.0150052s, 26336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.015014s, 26336 KB] g=18, 37 evaluated, 36 expanded
[t=0.0151513s, 26336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0151608s, 26336 KB] g=20, 43 evaluated, 42 expanded
[t=0.0152356s, 26336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0152447s, 26336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0152529s, 26336 KB] g=22, 46 evaluated, 45 expanded
[t=0.0165381s, 26336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.016555s, 26336 KB] g=34, 106 evaluated, 105 expanded
[t=0.0167428s, 26336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0167552s, 26336 KB] g=36, 114 evaluated, 113 expanded
[t=0.0169419s, 26336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0169535s, 26336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0169636s, 26336 KB] g=38, 122 evaluated, 121 expanded
[t=0.0171075s, 26336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0171177s, 26336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0171261s, 26336 KB] g=40, 128 evaluated, 127 expanded
[t=0.0173008s, 26336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0173137s, 26336 KB] g=43, 134 evaluated, 133 expanded
[t=0.0173717s, 26336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0173814s, 26336 KB] g=44, 136 evaluated, 135 expanded
[t=0.0175241s, 26336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.017534s, 26336 KB] g=46, 142 evaluated, 141 expanded
[t=0.017589s, 26336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0175991s, 26336 KB] g=46, 144 evaluated, 143 expanded
[t=0.017819s, 26336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0178298s, 26336 KB] g=48, 154 evaluated, 153 expanded
[t=0.0179468s, 26336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0179581s, 26336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0179662s, 26336 KB] g=50, 159 evaluated, 158 expanded
[t=0.0180857s, 26336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0180953s, 26336 KB] g=51, 164 evaluated, 163 expanded
[t=0.0181272s, 26336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0181363s, 26336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0181474s, 26336 KB] g=52, 165 evaluated, 164 expanded
[t=0.0183063s, 26336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0183165s, 26336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0183248s, 26336 KB] g=54, 172 evaluated, 171 expanded
[t=0.0184384s, 26336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0184477s, 26336 KB] g=54, 177 evaluated, 176 expanded
[t=0.0185622s, 26336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0185717s, 26336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0185804s, 26336 KB] g=56, 182 evaluated, 181 expanded
[t=0.0199424s, 26336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.019957s, 26336 KB] g=64, 246 evaluated, 245 expanded
[t=0.020052s, 26336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0200646s, 26336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0200736s, 26336 KB] g=66, 250 evaluated, 249 expanded
[t=0.0213327s, 26336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0213523s, 26336 KB] g=76, 308 evaluated, 307 expanded
[t=0.0214483s, 26336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0214592s, 26336 KB] g=78, 312 evaluated, 311 expanded
[t=0.021759s, 26336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0217717s, 26336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0217802s, 26336 KB] g=84, 326 evaluated, 325 expanded
[t=0.026822s, 26336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0268483s, 26336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0268579s, 26336 KB] g=118, 565 evaluated, 564 expanded
[t=0.052198s, 26336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0522885s, 26336 KB] g=154, 1688 evaluated, 1687 expanded
[t=0.0523825s, 26336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0523943s, 26336 KB] g=156, 1692 evaluated, 1691 expanded
[t=0.053527s, 26336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0535448s, 26336 KB] g=168, 1746 evaluated, 1745 expanded
[t=0.0537221s, 26336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0537323s, 26336 KB] g=172, 1755 evaluated, 1754 expanded
[t=0.0537935s, 26336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0538028s, 26336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0538111s, 26336 KB] g=174, 1758 evaluated, 1757 expanded
[t=0.0551727s, 26336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0551854s, 26336 KB] g=196, 1844 evaluated, 1843 expanded
[t=0.0553158s, 26336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0553261s, 26336 KB] g=200, 1853 evaluated, 1852 expanded
[t=0.0553739s, 26336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0553846s, 26336 KB] g=202, 1856 evaluated, 1855 expanded
[t=0.0555188s, 26336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0555319s, 26336 KB] g=210, 1867 evaluated, 1866 expanded
[t=0.0555489s, 26336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0555686s, 26336 KB] g=211, 1868 evaluated, 1867 expanded
[t=0.0555881s, 26336 KB] Solution found!
[t=0.0556112s, 26336 KB] Actual search time: 0.0417567s
unstack b10 b14 (1)
put-down b10 (1)
unstack b6 b5 (1)
put-down b6 (1)
unstack b5 b2 (1)
stack b5 b11 (1)
pick-up b14 (1)
stack b14 b6 (1)
unstack b2 b18 (1)
stack b2 b14 (1)
unstack b18 b15 (1)
put-down b18 (1)
unstack b15 b4 (1)
stack b15 b5 (1)
unstack b4 b17 (1)
put-down b4 (1)
pick-up b18 (1)
stack b18 b15 (1)
unstack b17 b13 (1)
put-down b17 (1)
unstack b13 b3 (1)
stack b13 b4 (1)
unstack b18 b15 (1)
put-down b18 (1)
unstack b15 b5 (1)
put-down b15 (1)
pick-up b18 (1)
stack b18 b15 (1)
unstack b5 b11 (1)
put-down b5 (1)
unstack b11 b8 (1)
put-down b11 (1)
unstack b8 b20 (1)
stack b8 b3 (1)
unstack b20 b7 (1)
stack b20 b10 (1)
pick-up b11 (1)
stack b11 b8 (1)
pick-up b5 (1)
stack b5 b11 (1)
unstack b7 b12 (1)
put-down b7 (1)
unstack b12 b16 (1)
stack b12 b17 (1)
pick-up b7 (1)
stack b7 b12 (1)
unstack b16 b1 (1)
put-down b16 (1)
unstack b1 b9 (1)
stack b1 b18 (1)
unstack b9 b19 (1)
stack b9 b13 (1)
pick-up b19 (1)
stack b19 b2 (1)
pick-up b16 (1)
stack b16 b19 (1)
unstack b7 b12 (1)
put-down b7 (1)
unstack b12 b17 (1)
put-down b12 (1)
pick-up b17 (1)
stack b17 b1 (1)
pick-up b12 (1)
stack b12 b17 (1)
pick-up b7 (1)
stack b7 b12 (1)
unstack b5 b11 (1)
put-down b5 (1)
unstack b11 b8 (1)
put-down b11 (1)
pick-up b5 (1)
stack b5 b11 (1)
unstack b8 b3 (1)
put-down b8 (1)
pick-up b3 (1)
stack b3 b16 (1)
pick-up b8 (1)
stack b8 b3 (1)
unstack b5 b11 (1)
put-down b5 (1)
pick-up b11 (1)
stack b11 b8 (1)
pick-up b5 (1)
stack b5 b11 (1)
unstack b7 b12 (1)
put-down b7 (1)
unstack b12 b17 (1)
put-down b12 (1)
unstack b17 b1 (1)
put-down b17 (1)
pick-up b12 (1)
stack b12 b17 (1)
pick-up b7 (1)
stack b7 b12 (1)
unstack b1 b18 (1)
put-down b1 (1)
unstack b18 b15 (1)
put-down b18 (1)
pick-up b1 (1)
stack b1 b18 (1)
unstack b5 b11 (1)
put-down b5 (1)
pick-up b15 (1)
stack b15 b5 (1)
unstack b1 b18 (1)
put-down b1 (1)
pick-up b18 (1)
stack b18 b15 (1)
pick-up b1 (1)
stack b1 b18 (1)
unstack b7 b12 (1)
put-down b7 (1)
unstack b12 b17 (1)
put-down b12 (1)
pick-up b17 (1)
stack b17 b1 (1)
pick-up b12 (1)
stack b12 b17 (1)
pick-up b7 (1)
stack b7 b12 (1)
unstack b11 b8 (1)
put-down b11 (1)
unstack b8 b3 (1)
put-down b8 (1)
pick-up b11 (1)
stack b11 b8 (1)
unstack b3 b16 (1)
put-down b3 (1)
unstack b16 b19 (1)
put-down b16 (1)
pick-up b3 (1)
stack b3 b16 (1)
unstack b11 b8 (1)
put-down b11 (1)
pick-up b8 (1)
stack b8 b3 (1)
pick-up b11 (1)
stack b11 b8 (1)
unstack b19 b2 (1)
put-down b19 (1)
unstack b2 b14 (1)
put-down b2 (1)
pick-up b19 (1)
stack b19 b2 (1)
unstack b14 b6 (1)
put-down b14 (1)
pick-up b6 (1)
stack b6 b20 (1)
pick-up b14 (1)
stack b14 b6 (1)
unstack b19 b2 (1)
put-down b19 (1)
pick-up b2 (1)
stack b2 b14 (1)
pick-up b19 (1)
stack b19 b2 (1)
unstack b11 b8 (1)
put-down b11 (1)
unstack b8 b3 (1)
put-down b8 (1)
pick-up b11 (1)
stack b11 b8 (1)
unstack b3 b16 (1)
put-down b3 (1)
pick-up b16 (1)
stack b16 b19 (1)
pick-up b3 (1)
stack b3 b16 (1)
unstack b11 b8 (1)
put-down b11 (1)
pick-up b8 (1)
stack b8 b3 (1)
pick-up b11 (1)
stack b11 b8 (1)
unstack b7 b12 (1)
put-down b7 (1)
unstack b12 b17 (1)
put-down b12 (1)
unstack b17 b1 (1)
put-down b17 (1)
pick-up b12 (1)
stack b12 b17 (1)
pick-up b7 (1)
stack b7 b12 (1)
unstack b1 b18 (1)
put-down b1 (1)
unstack b18 b15 (1)
put-down b18 (1)
pick-up b1 (1)
stack b1 b18 (1)
unstack b15 b5 (1)
put-down b15 (1)
pick-up b5 (1)
stack b5 b11 (1)
pick-up b15 (1)
stack b15 b5 (1)
unstack b1 b18 (1)
put-down b1 (1)
pick-up b18 (1)
stack b18 b15 (1)
pick-up b1 (1)
stack b1 b18 (1)
unstack b7 b12 (1)
put-down b7 (1)
unstack b12 b17 (1)
put-down b12 (1)
pick-up b17 (1)
stack b17 b1 (1)
pick-up b12 (1)
stack b12 b17 (1)
pick-up b7 (1)
stack b7 b12 (1)
[t=0.0556268s, 26336 KB] Plan length: 212 step(s).
[t=0.0556268s, 26336 KB] Plan cost: 212
[t=0.0556268s, 26336 KB] Expanded 1868 state(s).
[t=0.0556268s, 26336 KB] Reopened 0 state(s).
[t=0.0556268s, 26336 KB] Evaluated 1869 state(s).
[t=0.0556268s, 26336 KB] Evaluations: 3738
[t=0.0556268s, 26336 KB] Generated 13267 state(s).
[t=0.0556268s, 26336 KB] Dead ends: 0 state(s).
[t=0.0556268s, 26336 KB] Number of registered states: 1869
[t=0.0556268s, 26336 KB] Int hash set load factor: 1869/2048 = 0.912598
[t=0.0556268s, 26336 KB] Int hash set resizes: 11
[t=0.0556268s, 26336 KB] Search time: 0.0418055s
[t=0.0556268s, 26336 KB] Total time: 0.0556268s
Solution found.
Peak memory: 26336 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.21s
