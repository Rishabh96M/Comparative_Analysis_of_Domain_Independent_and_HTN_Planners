INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py ../bws_domain/bws_domain_actions.pddl ../bws_domain/problem_size_25/bws_problem_25_3.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.009s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.012s wall-clock]
2052 relevant atoms
1375 auxiliary atoms
3427 final queue length
5981 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.033s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
26 uncovered facts
Choosing groups: [0.000s CPU, 0.002s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.008s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.029s wall-clock]
1850 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
50 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.017s wall-clock]
Reordering and filtering variables...
51 of 51 variables necessary.
26 of 51 mutex groups necessary.
1250 of 1250 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.008s wall-clock]
Translator variables: 51
Translator derived variables: 0
Translator facts: 702
Translator goal facts: 25
Translator mutex groups: 26
Translator total mutex groups size: 676
Translator operators: 1250
Translator axioms: 0
Translator task size: 10754
Translator peak memory: 38388 KB
Writing output... [0.000s CPU, 0.006s wall-clock]
Done! [0.100s CPU, 0.113s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=3.8745e-05s, 24488 KB] reading input...
[t=0.00337765s, 25632 KB] done reading input!
[t=0.00418929s, 26028 KB] Initializing landmark count heuristic...
[t=0.00421673s, 26028 KB] Generating landmark graph...
[t=0.00428578s, 26160 KB] Building a landmark graph with reasonable orders.
[t=0.0043519s, 26160 KB] Initializing Exploration...
[t=0.00468091s, 26532 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0201011s, 27060 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0201602s, 27060 KB] Landmarks generation time: 0.0158749s
[t=0.0201742s, 27060 KB] Discovered 120 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0201918s, 27060 KB] 623 edges
[t=0.020201s, 27060 KB] approx. reasonable orders
[t=0.0240126s, 27060 KB] approx. obedient reasonable orders
[t=0.0240466s, 27060 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0240567s, 27060 KB] Landmarks generation time: 0.019837s
[t=0.0240659s, 27060 KB] Discovered 120 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0240738s, 27060 KB] 683 edges
[t=0.0240818s, 27060 KB] Landmark graph generation time: 0.0198716s
[t=0.0240899s, 27060 KB] Landmark graph contains 120 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0240975s, 27060 KB] Landmark graph contains 683 orderings.
[t=0.0244693s, 27060 KB] Simplifying 4950 unary operators... done! [3750 unary operators]
[t=0.025618s, 27192 KB] time to simplify: 0.00122502s
[t=0.0257649s, 27192 KB] Initializing additive heuristic...
[t=0.0257807s, 27192 KB] Initializing FF heuristic...
[t=0.0258317s, 27192 KB] Building successor generator...done!
[t=0.0260416s, 27192 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0260498s, 27192 KB] time for successor generation creation: 0.00017697s
[t=0.0260619s, 27192 KB] Variables: 51
[t=0.0260698s, 27192 KB] FactPairs: 702
[t=0.0260775s, 27192 KB] Bytes per state: 20
[t=0.0261562s, 27192 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0261882s, 27192 KB] 51 initial landmarks, 25 goal landmarks
[t=0.0262433s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 69
[t=0.0262525s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 49
[t=0.0262606s, 27192 KB] g=0, 1 evaluated, 0 expanded
[t=0.0262739s, 27192 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 69
[t=0.026282s, 27192 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 49
[t=0.0264483s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 68
[t=0.0264576s, 27192 KB] g=2, 6 evaluated, 5 expanded
[t=0.02668s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 48
[t=0.0266887s, 27192 KB] g=4, 13 evaluated, 12 expanded
[t=0.0267274s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 67
[t=0.0267358s, 27192 KB] g=4, 14 evaluated, 13 expanded
[t=0.0270599s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 66
[t=0.0270699s, 27192 KB] g=6, 25 evaluated, 24 expanded
[t=0.0275123s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 65
[t=0.0275217s, 27192 KB] g=8, 40 evaluated, 39 expanded
[t=0.027736s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 47
[t=0.0277464s, 27192 KB] g=8, 47 evaluated, 46 expanded
[t=0.0279897s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 64
[t=0.0279987s, 27192 KB] g=10, 55 evaluated, 54 expanded
[t=0.0284699s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 63
[t=0.0284798s, 27192 KB] g=12, 71 evaluated, 70 expanded
[t=0.0290445s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 62
[t=0.0290547s, 27192 KB] g=14, 90 evaluated, 89 expanded
[t=0.0291868s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 46
[t=0.0291957s, 27192 KB] g=12, 94 evaluated, 93 expanded
[t=0.0293211s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0293296s, 27192 KB] g=13, 98 evaluated, 97 expanded
[t=0.0294037s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 60
[t=0.029413s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.0294208s, 27192 KB] g=14, 100 evaluated, 99 expanded
[t=0.0296648s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.029674s, 27192 KB] g=16, 108 evaluated, 107 expanded
[t=0.0299523s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.029962s, 27192 KB] g=18, 117 evaluated, 116 expanded
[t=0.030001s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 58
[t=0.03001s, 27192 KB] g=18, 118 evaluated, 117 expanded
[t=0.0300788s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0300872s, 27192 KB] g=19, 120 evaluated, 119 expanded
[t=0.0301538s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0301621s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0301699s, 27192 KB] g=20, 122 evaluated, 121 expanded
[t=0.0304481s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0304574s, 27192 KB] g=22, 131 evaluated, 130 expanded
[t=0.0304983s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0305064s, 27192 KB] g=22, 132 evaluated, 131 expanded
[t=0.0309513s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0309607s, 27192 KB] g=24, 147 evaluated, 146 expanded
[t=0.0310018s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0310105s, 27192 KB] g=24, 148 evaluated, 147 expanded
[t=0.0315336s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0315434s, 27192 KB] g=26, 166 evaluated, 165 expanded
[t=0.0318427s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.031853s, 27192 KB] g=28, 175 evaluated, 174 expanded
[t=0.0322079s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0322179s, 27192 KB] g=28, 187 evaluated, 186 expanded
[t=0.0327941s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0328042s, 27192 KB] g=30, 206 evaluated, 205 expanded
[t=0.032843s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0328517s, 27192 KB] g=30, 207 evaluated, 206 expanded
[t=0.0336029s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0336132s, 27192 KB] g=32, 232 evaluated, 231 expanded
[t=0.0342435s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0342534s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.034261s, 27192 KB] g=36, 253 evaluated, 252 expanded
[t=0.034523s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.034532s, 27192 KB] g=38, 261 evaluated, 260 expanded
[t=0.0345722s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0345807s, 27192 KB] g=38, 262 evaluated, 261 expanded
[t=0.035021s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0350302s, 27192 KB] g=40, 277 evaluated, 276 expanded
[t=0.0350686s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0350792s, 27192 KB] g=40, 278 evaluated, 277 expanded
[t=0.0355514s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0355611s, 27192 KB] g=42, 294 evaluated, 293 expanded
[t=0.0361895s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0362001s, 27192 KB] g=44, 315 evaluated, 314 expanded
[t=0.0368206s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0368305s, 27192 KB] g=46, 336 evaluated, 335 expanded
[t=0.0372975s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.037307s, 27192 KB] g=46, 352 evaluated, 351 expanded
[t=0.0376008s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0376102s, 27192 KB] g=48, 362 evaluated, 361 expanded
[t=0.0377347s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0377433s, 27192 KB] g=48, 366 evaluated, 365 expanded
[t=0.0383032s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0383125s, 27192 KB] g=50, 385 evaluated, 384 expanded
[t=0.0389558s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0389662s, 27192 KB] g=52, 407 evaluated, 406 expanded
[t=0.0392726s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0392821s, 27192 KB] g=52, 417 evaluated, 416 expanded
[t=0.0393812s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0393901s, 27192 KB] g=54, 420 evaluated, 419 expanded
[t=0.0401583s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0401686s, 27192 KB] g=54, 446 evaluated, 445 expanded
[t=0.041278s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0412882s, 27192 KB] g=56, 483 evaluated, 482 expanded
[t=0.04223s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0422409s, 27192 KB] g=58, 513 evaluated, 512 expanded
[t=0.0430665s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0430833s, 27192 KB] g=60, 538 evaluated, 537 expanded
[t=0.0439278s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.043941s, 27192 KB] g=62, 566 evaluated, 565 expanded
[t=0.0445413s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0445515s, 27192 KB] g=64, 586 evaluated, 585 expanded
[t=0.0451561s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0451661s, 27192 KB] g=66, 606 evaluated, 605 expanded
[t=0.0456412s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0456511s, 27192 KB] g=68, 622 evaluated, 621 expanded
[t=0.0461573s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.046167s, 27192 KB] g=70, 639 evaluated, 638 expanded
[t=0.0466246s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0466375s, 27192 KB] g=72, 655 evaluated, 654 expanded
[t=0.0470189s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.047029s, 27192 KB] g=74, 668 evaluated, 667 expanded
[t=0.0472948s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0473036s, 27192 KB] g=76, 677 evaluated, 676 expanded
[t=0.0473697s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0473783s, 27192 KB] g=76, 679 evaluated, 678 expanded
[t=0.0475799s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0475885s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0475963s, 27192 KB] g=78, 686 evaluated, 685 expanded
[t=0.0481458s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.048157s, 27192 KB] g=84, 705 evaluated, 704 expanded
[t=0.0484432s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0484527s, 27192 KB] g=86, 715 evaluated, 714 expanded
[t=0.0485711s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.04858s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0485879s, 27192 KB] g=88, 719 evaluated, 718 expanded
[t=0.0494269s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0494364s, 27192 KB] g=84, 749 evaluated, 748 expanded
[t=0.0506244s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0506345s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0506425s, 27192 KB] g=92, 792 evaluated, 791 expanded
[t=0.0507605s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0507688s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0507766s, 27192 KB] g=94, 796 evaluated, 795 expanded
[t=0.0558205s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0558499s, 27192 KB] g=113, 977 evaluated, 976 expanded
[t=0.0558887s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0558975s, 27192 KB] g=114, 978 evaluated, 977 expanded
[t=0.0560176s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0560265s, 27192 KB] g=116, 982 evaluated, 981 expanded
[t=0.0562002s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.056209s, 27192 KB] g=118, 988 evaluated, 987 expanded
[t=0.0569237s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0569334s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0569413s, 27192 KB] g=128, 1014 evaluated, 1013 expanded
[t=0.192943s, 27984 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.193031s, 27984 KB] g=212, 5717 evaluated, 5716 expanded
[t=0.193495s, 27984 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.193506s, 27984 KB] g=216, 5733 evaluated, 5732 expanded
[t=0.193619s, 27984 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.193633s, 27984 KB] g=218, 5737 evaluated, 5736 expanded
[t=0.195008s, 27984 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.195019s, 27984 KB] g=230, 5791 evaluated, 5790 expanded
[t=0.195241s, 27984 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.195252s, 27984 KB] g=234, 5800 evaluated, 5799 expanded
[t=0.195328s, 27984 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.195339s, 27984 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.195347s, 27984 KB] g=236, 5803 evaluated, 5802 expanded
[t=0.200375s, 27984 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.200398s, 27984 KB] g=270, 6050 evaluated, 6049 expanded
[t=0.200568s, 27984 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.200578s, 27984 KB] g=274, 6059 evaluated, 6058 expanded
[t=0.20064s, 27984 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.200649s, 27984 KB] g=276, 6062 evaluated, 6061 expanded
[t=0.201231s, 27984 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.201241s, 27984 KB] g=292, 6099 evaluated, 6098 expanded
[t=0.201394s, 27984 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.201404s, 27984 KB] g=300, 6110 evaluated, 6109 expanded
[t=0.201425s, 28116 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.201443s, 28116 KB] g=300, 6111 evaluated, 6110 expanded
[t=0.201462s, 28116 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.201471s, 28116 KB] g=301, 6112 evaluated, 6111 expanded
[t=0.201485s, 28116 KB] Solution found!
[t=0.2015s, 28116 KB] Actual search time: 0.175311s
unstack b19 b15 (1)
put-down b19 (1)
unstack b15 b9 (1)
stack b15 b21 (1)
unstack b2 b12 (1)
put-down b2 (1)
unstack b12 b23 (1)
stack b12 b15 (1)
unstack b23 b8 (1)
put-down b23 (1)
unstack b8 b16 (1)
stack b8 b19 (1)
unstack b16 b11 (1)
put-down b16 (1)
unstack b11 b1 (1)
put-down b11 (1)
unstack b1 b13 (1)
stack b1 b12 (1)
unstack b13 b10 (1)
put-down b13 (1)
pick-up b2 (1)
stack b2 b1 (1)
pick-up b20 (1)
stack b20 b10 (1)
unstack b9 b4 (1)
put-down b9 (1)
unstack b4 b22 (1)
stack b4 b20 (1)
pick-up b11 (1)
stack b11 b4 (1)
unstack b22 b7 (1)
put-down b22 (1)
unstack b7 b14 (1)
put-down b7 (1)
unstack b14 b24 (1)
stack b14 b11 (1)
unstack b2 b1 (1)
put-down b2 (1)
unstack b1 b12 (1)
put-down b1 (1)
unstack b12 b15 (1)
put-down b12 (1)
unstack b15 b21 (1)
put-down b15 (1)
unstack b21 b5 (1)
put-down b21 (1)
unstack b24 b17 (1)
put-down b24 (1)
unstack b5 b18 (1)
put-down b5 (1)
unstack b18 b6 (1)
put-down b18 (1)
unstack b6 b3 (1)
stack b6 b22 (1)
pick-up b21 (1)
stack b21 b6 (1)
pick-up b15 (1)
stack b15 b21 (1)
pick-up b12 (1)
stack b12 b15 (1)
pick-up b1 (1)
stack b1 b12 (1)
pick-up b2 (1)
stack b2 b1 (1)
pick-up b24 (1)
stack b24 b2 (1)
pick-up b23 (1)
stack b23 b24 (1)
pick-up b18 (1)
stack b18 b23 (1)
pick-up b5 (1)
stack b5 b3 (1)
pick-up b7 (1)
stack b7 b18 (1)
pick-up b9 (1)
stack b9 b14 (1)
pick-up b17 (1)
stack b17 b9 (1)
unstack b8 b19 (1)
put-down b8 (1)
pick-up b19 (1)
stack b19 b13 (1)
pick-up b8 (1)
stack b8 b19 (1)
unstack b5 b3 (1)
put-down b5 (1)
unstack b3 b25 (1)
put-down b3 (1)
pick-up b25 (1)
stack b25 b8 (1)
pick-up b3 (1)
stack b3 b25 (1)
pick-up b5 (1)
stack b5 b3 (1)
unstack b17 b9 (1)
put-down b17 (1)
unstack b9 b14 (1)
put-down b9 (1)
unstack b14 b11 (1)
put-down b14 (1)
pick-up b9 (1)
stack b9 b14 (1)
pick-up b17 (1)
stack b17 b9 (1)
unstack b11 b4 (1)
put-down b11 (1)
unstack b4 b20 (1)
put-down b4 (1)
unstack b20 b10 (1)
put-down b20 (1)
pick-up b10 (1)
stack b10 b7 (1)
pick-up b20 (1)
stack b20 b10 (1)
pick-up b4 (1)
stack b4 b20 (1)
pick-up b11 (1)
stack b11 b4 (1)
unstack b17 b9 (1)
put-down b17 (1)
unstack b9 b14 (1)
put-down b9 (1)
pick-up b14 (1)
stack b14 b11 (1)
pick-up b17 (1)
stack b17 b9 (1)
unstack b14 b11 (1)
put-down b14 (1)
unstack b11 b4 (1)
put-down b11 (1)
pick-up b14 (1)
stack b14 b11 (1)
unstack b17 b9 (1)
put-down b17 (1)
pick-up b9 (1)
stack b9 b14 (1)
pick-up b17 (1)
stack b17 b9 (1)
unstack b4 b20 (1)
put-down b4 (1)
unstack b20 b10 (1)
put-down b20 (1)
pick-up b4 (1)
stack b4 b20 (1)
unstack b10 b7 (1)
put-down b10 (1)
unstack b7 b18 (1)
put-down b7 (1)
unstack b18 b23 (1)
put-down b18 (1)
pick-up b7 (1)
stack b7 b18 (1)
pick-up b10 (1)
stack b10 b7 (1)
unstack b4 b20 (1)
put-down b4 (1)
pick-up b20 (1)
stack b20 b10 (1)
pick-up b4 (1)
stack b4 b20 (1)
unstack b17 b9 (1)
put-down b17 (1)
unstack b9 b14 (1)
put-down b9 (1)
pick-up b17 (1)
stack b17 b9 (1)
unstack b14 b11 (1)
put-down b14 (1)
pick-up b11 (1)
stack b11 b4 (1)
pick-up b14 (1)
stack b14 b11 (1)
unstack b17 b9 (1)
put-down b17 (1)
pick-up b9 (1)
stack b9 b14 (1)
pick-up b17 (1)
stack b17 b9 (1)
unstack b23 b24 (1)
put-down b23 (1)
unstack b24 b2 (1)
put-down b24 (1)
pick-up b23 (1)
stack b23 b24 (1)
unstack b2 b1 (1)
put-down b2 (1)
unstack b1 b12 (1)
put-down b1 (1)
pick-up b2 (1)
stack b2 b1 (1)
unstack b23 b24 (1)
put-down b23 (1)
pick-up b24 (1)
stack b24 b2 (1)
pick-up b23 (1)
stack b23 b24 (1)
unstack b12 b15 (1)
put-down b12 (1)
unstack b15 b21 (1)
put-down b15 (1)
pick-up b12 (1)
stack b12 b15 (1)
unstack b21 b6 (1)
put-down b21 (1)
unstack b6 b22 (1)
put-down b6 (1)
pick-up b22 (1)
stack b22 b5 (1)
pick-up b6 (1)
stack b6 b22 (1)
pick-up b21 (1)
stack b21 b6 (1)
unstack b12 b15 (1)
put-down b12 (1)
pick-up b15 (1)
stack b15 b21 (1)
pick-up b12 (1)
stack b12 b15 (1)
unstack b23 b24 (1)
put-down b23 (1)
unstack b24 b2 (1)
put-down b24 (1)
pick-up b23 (1)
stack b23 b24 (1)
unstack b2 b1 (1)
put-down b2 (1)
pick-up b1 (1)
stack b1 b12 (1)
pick-up b2 (1)
stack b2 b1 (1)
unstack b23 b24 (1)
put-down b23 (1)
pick-up b24 (1)
stack b24 b2 (1)
pick-up b23 (1)
stack b23 b24 (1)
unstack b17 b9 (1)
put-down b17 (1)
unstack b9 b14 (1)
put-down b9 (1)
pick-up b17 (1)
stack b17 b9 (1)
unstack b14 b11 (1)
put-down b14 (1)
unstack b11 b4 (1)
put-down b11 (1)
unstack b4 b20 (1)
put-down b4 (1)
pick-up b11 (1)
stack b11 b4 (1)
pick-up b14 (1)
stack b14 b11 (1)
unstack b17 b9 (1)
put-down b17 (1)
pick-up b9 (1)
stack b9 b14 (1)
pick-up b17 (1)
stack b17 b9 (1)
unstack b20 b10 (1)
put-down b20 (1)
unstack b10 b7 (1)
put-down b10 (1)
pick-up b20 (1)
stack b20 b10 (1)
unstack b7 b18 (1)
put-down b7 (1)
pick-up b18 (1)
stack b18 b23 (1)
pick-up b7 (1)
stack b7 b18 (1)
unstack b20 b10 (1)
put-down b20 (1)
pick-up b10 (1)
stack b10 b7 (1)
pick-up b20 (1)
stack b20 b10 (1)
unstack b17 b9 (1)
put-down b17 (1)
unstack b9 b14 (1)
put-down b9 (1)
unstack b14 b11 (1)
put-down b14 (1)
pick-up b9 (1)
stack b9 b14 (1)
pick-up b17 (1)
stack b17 b9 (1)
unstack b11 b4 (1)
put-down b11 (1)
pick-up b4 (1)
stack b4 b20 (1)
pick-up b11 (1)
stack b11 b4 (1)
unstack b17 b9 (1)
put-down b17 (1)
unstack b9 b14 (1)
put-down b9 (1)
pick-up b14 (1)
stack b14 b11 (1)
pick-up b9 (1)
stack b9 b14 (1)
pick-up b17 (1)
stack b17 b9 (1)
[t=0.201511s, 28116 KB] Plan length: 302 step(s).
[t=0.201511s, 28116 KB] Plan cost: 302
[t=0.201511s, 28116 KB] Expanded 6112 state(s).
[t=0.201511s, 28116 KB] Reopened 0 state(s).
[t=0.201511s, 28116 KB] Evaluated 6113 state(s).
[t=0.201511s, 28116 KB] Evaluations: 12226
[t=0.201511s, 28116 KB] Generated 49752 state(s).
[t=0.201511s, 28116 KB] Dead ends: 0 state(s).
[t=0.201511s, 28116 KB] Number of registered states: 6113
[t=0.201511s, 28116 KB] Int hash set load factor: 6113/8192 = 0.746216
[t=0.201511s, 28116 KB] Int hash set resizes: 13
[t=0.201511s, 28116 KB] Search time: 0.175355s
[t=0.201511s, 28116 KB] Total time: 0.201511s
Solution found.
Peak memory: 28116 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.35s
