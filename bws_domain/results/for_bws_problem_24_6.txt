INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py ../bws_domain/bws_domain_actions.pddl ../bws_domain/problem_size_24/bws_problem_24_6.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.009s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.012s wall-clock]
1898 relevant atoms
1272 auxiliary atoms
3170 final queue length
5528 total queue pushes
Completing instantiation... [0.020s CPU, 0.019s wall-clock]
Instantiating: [0.030s CPU, 0.032s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
25 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.007s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.027s wall-clock]
1704 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
48 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.017s wall-clock]
Reordering and filtering variables...
49 of 49 variables necessary.
25 of 49 mutex groups necessary.
1152 of 1152 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.007s wall-clock]
Translator variables: 49
Translator derived variables: 0
Translator facts: 650
Translator goal facts: 24
Translator mutex groups: 25
Translator total mutex groups size: 625
Translator operators: 1152
Translator axioms: 0
Translator task size: 9916
Translator peak memory: 37884 KB
Writing output... [0.000s CPU, 0.006s wall-clock]
Done! [0.090s CPU, 0.107s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=1.764e-05s, 24488 KB] reading input...
[t=0.00326806s, 25532 KB] done reading input!
[t=0.00414138s, 25928 KB] Initializing landmark count heuristic...
[t=0.00416823s, 25928 KB] Generating landmark graph...
[t=0.00424072s, 25928 KB] Building a landmark graph with reasonable orders.
[t=0.00432607s, 26060 KB] Initializing Exploration...
[t=0.00466107s, 26388 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0176287s, 26916 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0177231s, 26916 KB] Landmarks generation time: 0.0134817s
[t=0.0177498s, 26916 KB] Discovered 111 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0177661s, 26916 KB] 513 edges
[t=0.0177771s, 26916 KB] approx. reasonable orders
[t=0.0186975s, 26916 KB] approx. obedient reasonable orders
[t=0.0187316s, 26916 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0187409s, 26916 KB] Landmarks generation time: 0.0145695s
[t=0.0187504s, 26916 KB] Discovered 111 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0187581s, 26916 KB] 527 edges
[t=0.0187661s, 26916 KB] Landmark graph generation time: 0.0146044s
[t=0.0187742s, 26916 KB] Landmark graph contains 111 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0187818s, 26916 KB] Landmark graph contains 527 orderings.
[t=0.0191187s, 26916 KB] Simplifying 4560 unary operators... done! [3456 unary operators]
[t=0.020166s, 26916 KB] time to simplify: 0.00112449s
[t=0.0203243s, 26916 KB] Initializing additive heuristic...
[t=0.0203397s, 26916 KB] Initializing FF heuristic...
[t=0.0203998s, 26916 KB] Building successor generator...done!
[t=0.0206017s, 26916 KB] peak memory difference for successor generator creation: 0 KB
[t=0.02061s, 26916 KB] time for successor generation creation: 0.000168967s
[t=0.0206226s, 26916 KB] Variables: 49
[t=0.0206307s, 26916 KB] FactPairs: 650
[t=0.0206386s, 26916 KB] Bytes per state: 20
[t=0.0207494s, 26916 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0207869s, 26916 KB] 49 initial landmarks, 24 goal landmarks
[t=0.0208416s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 62
[t=0.020851s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0208597s, 26916 KB] g=0, 1 evaluated, 0 expanded
[t=0.0208739s, 26916 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 62
[t=0.0208829s, 26916 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0210462s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 61
[t=0.0210566s, 26916 KB] g=1, 6 evaluated, 5 expanded
[t=0.0210964s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 60
[t=0.0211063s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.021115s, 26916 KB] g=2, 7 evaluated, 6 expanded
[t=0.0212759s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.0212868s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0212953s, 26916 KB] g=4, 12 evaluated, 11 expanded
[t=0.0214182s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 58
[t=0.0214271s, 26916 KB] g=6, 16 evaluated, 15 expanded
[t=0.0214913s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 57
[t=0.0215s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0215079s, 26916 KB] g=6, 18 evaluated, 17 expanded
[t=0.0215991s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0216084s, 26916 KB] g=8, 21 evaluated, 20 expanded
[t=0.0217268s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0217355s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0217433s, 26916 KB] g=10, 25 evaluated, 24 expanded
[t=0.0218606s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0218699s, 26916 KB] g=11, 29 evaluated, 28 expanded
[t=0.0220507s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0220605s, 26916 KB] g=14, 35 evaluated, 34 expanded
[t=0.022249s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.022258s, 26916 KB] g=16, 41 evaluated, 40 expanded
[t=0.0224576s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0224663s, 26916 KB] g=18, 48 evaluated, 47 expanded
[t=0.0225853s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0225937s, 26916 KB] g=19, 52 evaluated, 51 expanded
[t=0.0226314s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0226397s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0226473s, 26916 KB] g=20, 53 evaluated, 52 expanded
[t=0.0229012s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0229098s, 26916 KB] g=22, 62 evaluated, 61 expanded
[t=0.0229473s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0229558s, 26916 KB] g=22, 63 evaluated, 62 expanded
[t=0.0233492s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0233583s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0233662s, 26916 KB] g=24, 77 evaluated, 76 expanded
[t=0.0237803s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0237891s, 26916 KB] g=27, 92 evaluated, 91 expanded
[t=0.0240144s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0240229s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0240305s, 26916 KB] g=30, 100 evaluated, 99 expanded
[t=0.0242848s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0242934s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0243013s, 26916 KB] g=32, 109 evaluated, 108 expanded
[t=0.0244995s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0245082s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0245163s, 26916 KB] g=34, 116 evaluated, 115 expanded
[t=0.0246912s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0247002s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0247085s, 26916 KB] g=36, 122 evaluated, 121 expanded
[t=0.0253611s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0253745s, 26916 KB] g=41, 143 evaluated, 142 expanded
[t=0.0254127s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0254216s, 26916 KB] g=42, 144 evaluated, 143 expanded
[t=0.0256516s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0256613s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0256699s, 26916 KB] g=44, 152 evaluated, 151 expanded
[t=0.0258693s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0258821s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0258905s, 26916 KB] g=46, 159 evaluated, 158 expanded
[t=0.0260605s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0260692s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0260771s, 26916 KB] g=48, 165 evaluated, 164 expanded
[t=0.027594s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0276061s, 26916 KB] g=56, 220 evaluated, 219 expanded
[t=0.0277001s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0277189s, 26916 KB] g=58, 223 evaluated, 222 expanded
[t=0.0279479s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0279578s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0279691s, 26916 KB] g=60, 231 evaluated, 230 expanded
[t=0.0281559s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0281647s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0281726s, 26916 KB] g=62, 238 evaluated, 237 expanded
[t=0.0283225s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0283312s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.028339s, 26916 KB] g=64, 244 evaluated, 243 expanded
[t=0.0284202s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.028429s, 26916 KB] g=65, 247 evaluated, 246 expanded
[t=0.0284628s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0284712s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0284789s, 26916 KB] g=66, 248 evaluated, 247 expanded
[t=0.0285381s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0285466s, 26916 KB] g=67, 250 evaluated, 249 expanded
[t=0.0285794s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0285878s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0285955s, 26916 KB] g=68, 251 evaluated, 250 expanded
[t=0.0286776s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0286867s, 26916 KB] g=69, 254 evaluated, 253 expanded
[t=0.0287205s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0287288s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0287365s, 26916 KB] g=70, 255 evaluated, 254 expanded
[t=0.028877s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0288857s, 26916 KB] g=71, 260 evaluated, 259 expanded
[t=0.0289182s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0289265s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0289342s, 26916 KB] g=72, 261 evaluated, 260 expanded
[t=0.0290623s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0290712s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.029081s, 26916 KB] g=74, 266 evaluated, 265 expanded
[t=0.0303776s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0303884s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0303966s, 26916 KB] g=84, 318 evaluated, 317 expanded
[t=0.0311696s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0311794s, 26916 KB] g=96, 348 evaluated, 347 expanded
[t=0.0313719s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0313808s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0313887s, 26916 KB] g=102, 355 evaluated, 354 expanded
[t=0.0467308s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0467665s, 26916 KB] g=108, 963 evaluated, 962 expanded
[t=0.0470016s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0470116s, 26916 KB] g=112, 972 evaluated, 971 expanded
[t=0.0470952s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0471041s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0471118s, 26916 KB] g=114, 975 evaluated, 974 expanded
[t=0.049348s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0493607s, 26916 KB] g=136, 1074 evaluated, 1073 expanded
[t=0.0495288s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0495379s, 26916 KB] g=140, 1083 evaluated, 1082 expanded
[t=0.0495987s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0496074s, 26916 KB] g=142, 1086 evaluated, 1085 expanded
[t=0.0497768s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0497855s, 26916 KB] g=150, 1097 evaluated, 1096 expanded
[t=0.0498028s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0498111s, 26916 KB] g=151, 1098 evaluated, 1097 expanded
[t=0.0498257s, 26916 KB] Solution found!
[t=0.0498366s, 26916 KB] Actual search time: 0.0290457s
unstack b5 b15 (1)
stack b5 b13 (1)
pick-up b18 (1)
stack b18 b9 (1)
pick-up b4 (1)
stack b4 b18 (1)
unstack b21 b20 (1)
put-down b21 (1)
unstack b20 b7 (1)
stack b20 b15 (1)
unstack b7 b14 (1)
put-down b7 (1)
unstack b14 b22 (1)
put-down b14 (1)
unstack b22 b6 (1)
put-down b22 (1)
unstack b6 b23 (1)
put-down b6 (1)
unstack b23 b16 (1)
put-down b23 (1)
pick-up b14 (1)
stack b14 b16 (1)
pick-up b21 (1)
stack b21 b6 (1)
unstack b14 b16 (1)
put-down b14 (1)
unstack b16 b10 (1)
put-down b16 (1)
unstack b10 b11 (1)
stack b10 b20 (1)
pick-up b11 (1)
stack b11 b4 (1)
pick-up b14 (1)
stack b14 b16 (1)
pick-up b22 (1)
stack b22 b10 (1)
unstack b5 b13 (1)
put-down b5 (1)
unstack b13 b1 (1)
put-down b13 (1)
unstack b1 b8 (1)
stack b1 b22 (1)
pick-up b13 (1)
stack b13 b1 (1)
pick-up b5 (1)
stack b5 b13 (1)
unstack b11 b4 (1)
put-down b11 (1)
pick-up b8 (1)
stack b8 b11 (1)
unstack b4 b18 (1)
put-down b4 (1)
unstack b18 b9 (1)
put-down b18 (1)
unstack b9 b2 (1)
stack b9 b14 (1)
unstack b2 b12 (1)
put-down b2 (1)
unstack b12 b19 (1)
stack b12 b8 (1)
pick-up b18 (1)
stack b18 b9 (1)
unstack b19 b3 (1)
stack b19 b21 (1)
unstack b3 b17 (1)
stack b3 b19 (1)
unstack b17 b24 (1)
put-down b17 (1)
pick-up b24 (1)
stack b24 b23 (1)
pick-up b7 (1)
stack b7 b17 (1)
pick-up b4 (1)
stack b4 b18 (1)
unstack b3 b19 (1)
put-down b3 (1)
unstack b19 b21 (1)
put-down b19 (1)
pick-up b3 (1)
stack b3 b19 (1)
unstack b21 b6 (1)
put-down b21 (1)
pick-up b6 (1)
stack b6 b12 (1)
pick-up b21 (1)
stack b21 b6 (1)
unstack b3 b19 (1)
put-down b3 (1)
pick-up b19 (1)
stack b19 b21 (1)
pick-up b3 (1)
stack b3 b19 (1)
unstack b4 b18 (1)
put-down b4 (1)
unstack b18 b9 (1)
put-down b18 (1)
pick-up b4 (1)
stack b4 b18 (1)
unstack b9 b14 (1)
put-down b9 (1)
unstack b14 b16 (1)
put-down b14 (1)
pick-up b16 (1)
stack b16 b2 (1)
pick-up b14 (1)
stack b14 b16 (1)
pick-up b9 (1)
stack b9 b14 (1)
unstack b4 b18 (1)
put-down b4 (1)
pick-up b18 (1)
stack b18 b9 (1)
pick-up b4 (1)
stack b4 b18 (1)
unstack b3 b19 (1)
put-down b3 (1)
unstack b19 b21 (1)
put-down b19 (1)
unstack b21 b6 (1)
put-down b21 (1)
pick-up b19 (1)
stack b19 b21 (1)
pick-up b3 (1)
stack b3 b19 (1)
unstack b6 b12 (1)
put-down b6 (1)
unstack b12 b8 (1)
put-down b12 (1)
pick-up b6 (1)
stack b6 b12 (1)
unstack b8 b11 (1)
put-down b8 (1)
pick-up b11 (1)
stack b11 b4 (1)
pick-up b8 (1)
stack b8 b11 (1)
unstack b6 b12 (1)
put-down b6 (1)
pick-up b12 (1)
stack b12 b8 (1)
pick-up b6 (1)
stack b6 b12 (1)
unstack b3 b19 (1)
put-down b3 (1)
unstack b19 b21 (1)
put-down b19 (1)
pick-up b21 (1)
stack b21 b6 (1)
pick-up b19 (1)
stack b19 b21 (1)
pick-up b3 (1)
stack b3 b19 (1)
[t=0.0498457s, 26916 KB] Plan length: 152 step(s).
[t=0.0498457s, 26916 KB] Plan cost: 152
[t=0.0498457s, 26916 KB] Expanded 1098 state(s).
[t=0.0498457s, 26916 KB] Reopened 0 state(s).
[t=0.0498457s, 26916 KB] Evaluated 1099 state(s).
[t=0.0498457s, 26916 KB] Evaluations: 2198
[t=0.0498457s, 26916 KB] Generated 9574 state(s).
[t=0.0498457s, 26916 KB] Dead ends: 0 state(s).
[t=0.0498457s, 26916 KB] Number of registered states: 1099
[t=0.0498457s, 26916 KB] Int hash set load factor: 1099/2048 = 0.536621
[t=0.0498457s, 26916 KB] Int hash set resizes: 11
[t=0.0498457s, 26916 KB] Search time: 0.0290968s
[t=0.0498457s, 26916 KB] Total time: 0.0498457s
Solution found.
Peak memory: 26916 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.19s
