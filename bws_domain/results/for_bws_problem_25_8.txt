INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py ../bws_domain/bws_domain_actions.pddl ../bws_domain/problem_size_25/bws_problem_25_8.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.014s wall-clock]
2052 relevant atoms
1375 auxiliary atoms
3427 final queue length
5981 total queue pushes
Completing instantiation... [0.020s CPU, 0.025s wall-clock]
Instantiating: [0.040s CPU, 0.041s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
26 uncovered facts
Choosing groups: [0.000s CPU, 0.002s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.009s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.002s wall-clock]
Translating task: [0.030s CPU, 0.033s wall-clock]
1850 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
50 propositions removed
Detecting unreachable propositions: [0.030s CPU, 0.023s wall-clock]
Reordering and filtering variables...
51 of 51 variables necessary.
26 of 51 mutex groups necessary.
1250 of 1250 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.008s wall-clock]
Translator variables: 51
Translator derived variables: 0
Translator facts: 702
Translator goal facts: 25
Translator mutex groups: 26
Translator total mutex groups size: 676
Translator operators: 1250
Translator axioms: 0
Translator task size: 10754
Translator peak memory: 38388 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.120s CPU, 0.126s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.1607e-05s, 24488 KB] reading input...
[t=0.00361735s, 25632 KB] done reading input!
[t=0.00448367s, 26028 KB] Initializing landmark count heuristic...
[t=0.00451421s, 26028 KB] Generating landmark graph...
[t=0.00458903s, 26160 KB] Building a landmark graph with reasonable orders.
[t=0.00466098s, 26160 KB] Initializing Exploration...
[t=0.00501332s, 26532 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0229509s, 27192 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0230453s, 27192 KB] Landmarks generation time: 0.0184737s
[t=0.0230927s, 27192 KB] Discovered 122 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0231129s, 27192 KB] 1019 edges
[t=0.0231243s, 27192 KB] approx. reasonable orders
[t=0.029065s, 27192 KB] approx. obedient reasonable orders
[t=0.0293705s, 27192 KB] Removed 1 reasonable or obedient reasonable orders
[t=0.0293853s, 27192 KB] Landmarks generation time: 0.0248688s
[t=0.0293961s, 27192 KB] Discovered 122 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0294049s, 27192 KB] 1113 edges
[t=0.0294136s, 27192 KB] Landmark graph generation time: 0.0249079s
[t=0.0294239s, 27192 KB] Landmark graph contains 122 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.029443s, 27192 KB] Landmark graph contains 1113 orderings.
[t=0.0299203s, 27192 KB] Simplifying 4950 unary operators... done! [3750 unary operators]
[t=0.0311153s, 27192 KB] time to simplify: 0.00127841s
[t=0.0312755s, 27192 KB] Initializing additive heuristic...
[t=0.0312929s, 27192 KB] Initializing FF heuristic...
[t=0.0313755s, 27192 KB] Building successor generator...done!
[t=0.0316436s, 27360 KB] peak memory difference for successor generator creation: 168 KB
[t=0.0316529s, 27360 KB] time for successor generation creation: 0.00022849s
[t=0.0316671s, 27360 KB] Variables: 51
[t=0.0316762s, 27360 KB] FactPairs: 702
[t=0.0316849s, 27360 KB] Bytes per state: 20
[t=0.0317944s, 27360 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.031829s, 27360 KB] 51 initial landmarks, 25 goal landmarks
[t=0.0318977s, 27360 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 71
[t=0.0319082s, 27360 KB] New best heuristic value for ff(transform = adapt_costs(one)): 50
[t=0.0319175s, 27360 KB] g=0, 1 evaluated, 0 expanded
[t=0.0319323s, 27360 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 71
[t=0.0319414s, 27360 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 50
[t=0.0320238s, 27360 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 70
[t=0.0320338s, 27360 KB] g=1, 3 evaluated, 2 expanded
[t=0.0323361s, 27360 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 69
[t=0.0323486s, 27360 KB] g=4, 12 evaluated, 11 expanded
[t=0.0326013s, 27360 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 68
[t=0.0326173s, 27360 KB] g=6, 19 evaluated, 18 expanded
[t=0.0329451s, 27360 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 67
[t=0.0329574s, 27360 KB] g=8, 29 evaluated, 28 expanded
[t=0.0332154s, 27360 KB] New best heuristic value for ff(transform = adapt_costs(one)): 49
[t=0.0332261s, 27360 KB] g=9, 37 evaluated, 36 expanded
[t=0.0332689s, 27360 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 64
[t=0.0332786s, 27360 KB] New best heuristic value for ff(transform = adapt_costs(one)): 48
[t=0.0332872s, 27360 KB] g=10, 38 evaluated, 37 expanded
[t=0.0335712s, 27360 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 61
[t=0.0335821s, 27360 KB] New best heuristic value for ff(transform = adapt_costs(one)): 46
[t=0.0335911s, 27360 KB] g=12, 47 evaluated, 46 expanded
[t=0.0338787s, 27360 KB] New best heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0338924s, 27360 KB] g=14, 56 evaluated, 55 expanded
[t=0.0339667s, 27360 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 60
[t=0.0339797s, 27360 KB] g=14, 58 evaluated, 57 expanded
[t=0.0344532s, 27360 KB] New best heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.0344814s, 27360 KB] g=16, 73 evaluated, 72 expanded
[t=0.0345865s, 27360 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.0345972s, 27360 KB] g=16, 76 evaluated, 75 expanded
[t=0.0350127s, 27360 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 58
[t=0.035027s, 27360 KB] g=17, 89 evaluated, 88 expanded
[t=0.0350767s, 27360 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0350862s, 27360 KB] g=18, 90 evaluated, 89 expanded
[t=0.0352291s, 27360 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.035241s, 27360 KB] g=18, 94 evaluated, 93 expanded
[t=0.0357751s, 27360 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.035789s, 27360 KB] g=20, 111 evaluated, 110 expanded
[t=0.0359s, 27360 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0359096s, 27360 KB] g=20, 114 evaluated, 113 expanded
[t=0.036015s, 27360 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0360242s, 27360 KB] g=21, 117 evaluated, 116 expanded
[t=0.0360979s, 27360 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0361077s, 27360 KB] g=22, 119 evaluated, 118 expanded
[t=0.0365126s, 27360 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.036526s, 27360 KB] g=23, 131 evaluated, 130 expanded
[t=0.0367965s, 27360 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0368069s, 27360 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0368158s, 27360 KB] g=24, 139 evaluated, 138 expanded
[t=0.0369841s, 27360 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0369952s, 27360 KB] g=25, 144 evaluated, 143 expanded
[t=0.0372573s, 27360 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0372675s, 27360 KB] g=26, 152 evaluated, 151 expanded
[t=0.0375425s, 27360 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0375546s, 27360 KB] g=28, 160 evaluated, 159 expanded
[t=0.0380508s, 27360 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0380642s, 27360 KB] g=30, 175 evaluated, 174 expanded
[t=0.0382038s, 27360 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0382147s, 27360 KB] g=30, 179 evaluated, 178 expanded
[t=0.0386243s, 27360 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.038634s, 27360 KB] g=32, 192 evaluated, 191 expanded
[t=0.0393404s, 27360 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0393516s, 27360 KB] g=34, 214 evaluated, 213 expanded
[t=0.0403041s, 27360 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0403165s, 27360 KB] g=33, 244 evaluated, 243 expanded
[t=0.0403858s, 27360 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0403958s, 27360 KB] g=34, 245 evaluated, 244 expanded
[t=0.0405715s, 27360 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0405872s, 27360 KB] g=35, 250 evaluated, 249 expanded
[t=0.0406337s, 27360 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0406735s, 27360 KB] g=36, 251 evaluated, 250 expanded
[t=0.0410573s, 27360 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0410935s, 27360 KB] g=37, 260 evaluated, 259 expanded
[t=0.041173s, 27360 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0411856s, 27360 KB] g=38, 262 evaluated, 261 expanded
[t=0.0417466s, 27360 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0417574s, 27360 KB] g=40, 279 evaluated, 278 expanded
[t=0.0423019s, 27360 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0423174s, 27360 KB] g=42, 295 evaluated, 294 expanded
[t=0.042943s, 27360 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0429567s, 27360 KB] g=43, 313 evaluated, 312 expanded
[t=0.0430322s, 27360 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0430416s, 27360 KB] g=44, 315 evaluated, 314 expanded
[t=0.0435299s, 27360 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0435396s, 27360 KB] g=46, 330 evaluated, 329 expanded
[t=0.0438142s, 27360 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0438239s, 27360 KB] g=48, 338 evaluated, 337 expanded
[t=0.0441252s, 27360 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0441352s, 27360 KB] g=50, 347 evaluated, 346 expanded
[t=0.0445521s, 27360 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0445638s, 27360 KB] g=52, 359 evaluated, 358 expanded
[t=0.04658s, 27360 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0465932s, 27360 KB] g=58, 423 evaluated, 422 expanded
[t=0.0513999s, 27360 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0514441s, 27360 KB] g=66, 574 evaluated, 573 expanded
[t=0.0516105s, 27360 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0516222s, 27360 KB] g=68, 579 evaluated, 578 expanded
[t=0.0552078s, 27360 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0552386s, 27360 KB] g=76, 693 evaluated, 692 expanded
[t=0.0554044s, 27360 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0554143s, 27360 KB] g=76, 698 evaluated, 697 expanded
[t=0.0556308s, 27360 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0556408s, 27360 KB] g=78, 704 evaluated, 703 expanded
[t=0.0586433s, 27360 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0586725s, 27360 KB] g=90, 802 evaluated, 801 expanded
[t=0.0592986s, 27360 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0593095s, 27360 KB] g=94, 823 evaluated, 822 expanded
[t=0.0594904s, 27360 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0594997s, 27360 KB] g=96, 829 evaluated, 828 expanded
[t=0.0610637s, 27360 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0610765s, 27360 KB] g=112, 887 evaluated, 886 expanded
[t=0.0613651s, 27360 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0613747s, 27360 KB] g=120, 899 evaluated, 898 expanded
[t=0.0614628s, 27360 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0614728s, 27360 KB] g=124, 903 evaluated, 902 expanded
[t=0.0614942s, 27360 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0615035s, 27360 KB] g=125, 904 evaluated, 903 expanded
[t=0.0615208s, 27360 KB] Solution found!
[t=0.0615334s, 27360 KB] Actual search time: 0.0297017s
unstack b2 b23 (1)
put-down b2 (1)
unstack b10 b7 (1)
put-down b10 (1)
unstack b23 b4 (1)
put-down b23 (1)
unstack b4 b9 (1)
put-down b4 (1)
unstack b9 b13 (1)
put-down b9 (1)
unstack b7 b17 (1)
stack b7 b9 (1)
unstack b17 b3 (1)
stack b17 b23 (1)
unstack b3 b25 (1)
stack b3 b4 (1)
unstack b25 b15 (1)
stack b25 b7 (1)
unstack b15 b12 (1)
stack b15 b17 (1)
unstack b12 b24 (1)
put-down b12 (1)
pick-up b2 (1)
stack b2 b12 (1)
pick-up b21 (1)
stack b21 b15 (1)
unstack b24 b18 (1)
put-down b24 (1)
unstack b18 b1 (1)
put-down b18 (1)
unstack b1 b20 (1)
stack b1 b5 (1)
unstack b20 b14 (1)
put-down b20 (1)
unstack b14 b19 (1)
put-down b14 (1)
unstack b19 b8 (1)
put-down b19 (1)
pick-up b13 (1)
stack b13 b18 (1)
unstack b8 b11 (1)
stack b8 b10 (1)
unstack b11 b6 (1)
put-down b11 (1)
pick-up b24 (1)
stack b24 b8 (1)
unstack b6 b22 (1)
stack b6 b20 (1)
unstack b22 b16 (1)
stack b22 b13 (1)
pick-up b16 (1)
stack b16 b3 (1)
unstack b1 b5 (1)
put-down b1 (1)
pick-up b5 (1)
stack b5 b16 (1)
pick-up b1 (1)
stack b1 b5 (1)
unstack b22 b13 (1)
put-down b22 (1)
unstack b13 b18 (1)
put-down b13 (1)
pick-up b18 (1)
stack b18 b11 (1)
pick-up b13 (1)
stack b13 b18 (1)
pick-up b22 (1)
stack b22 b13 (1)
unstack b24 b8 (1)
put-down b24 (1)
unstack b8 b10 (1)
put-down b8 (1)
pick-up b10 (1)
stack b10 b6 (1)
pick-up b8 (1)
stack b8 b10 (1)
pick-up b24 (1)
stack b24 b8 (1)
unstack b21 b15 (1)
put-down b21 (1)
unstack b15 b17 (1)
put-down b15 (1)
pick-up b21 (1)
stack b21 b15 (1)
unstack b17 b23 (1)
put-down b17 (1)
pick-up b23 (1)
stack b23 b22 (1)
pick-up b17 (1)
stack b17 b23 (1)
unstack b21 b15 (1)
put-down b21 (1)
pick-up b15 (1)
stack b15 b17 (1)
pick-up b21 (1)
stack b21 b15 (1)
unstack b1 b5 (1)
put-down b1 (1)
unstack b5 b16 (1)
put-down b5 (1)
unstack b16 b3 (1)
put-down b16 (1)
pick-up b5 (1)
stack b5 b16 (1)
pick-up b1 (1)
stack b1 b5 (1)
unstack b3 b4 (1)
put-down b3 (1)
pick-up b4 (1)
stack b4 b19 (1)
pick-up b3 (1)
stack b3 b4 (1)
unstack b1 b5 (1)
put-down b1 (1)
unstack b5 b16 (1)
put-down b5 (1)
pick-up b1 (1)
stack b1 b5 (1)
pick-up b16 (1)
stack b16 b3 (1)
unstack b1 b5 (1)
put-down b1 (1)
pick-up b5 (1)
stack b5 b16 (1)
pick-up b1 (1)
stack b1 b5 (1)
[t=0.0615437s, 27360 KB] Plan length: 126 step(s).
[t=0.0615437s, 27360 KB] Plan cost: 126
[t=0.0615437s, 27360 KB] Expanded 904 state(s).
[t=0.0615437s, 27360 KB] Reopened 0 state(s).
[t=0.0615437s, 27360 KB] Evaluated 905 state(s).
[t=0.0615437s, 27360 KB] Evaluations: 1810
[t=0.0615437s, 27360 KB] Generated 10595 state(s).
[t=0.0615437s, 27360 KB] Dead ends: 0 state(s).
[t=0.0615437s, 27360 KB] Number of registered states: 905
[t=0.0615437s, 27360 KB] Int hash set load factor: 905/1024 = 0.883789
[t=0.0615437s, 27360 KB] Int hash set resizes: 10
[t=0.0615437s, 27360 KB] Search time: 0.0297496s
[t=0.0615437s, 27360 KB] Total time: 0.0615437s
Solution found.
Peak memory: 27360 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.23s
