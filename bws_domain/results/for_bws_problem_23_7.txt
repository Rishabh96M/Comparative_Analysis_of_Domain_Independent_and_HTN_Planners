INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py ../bws_domain/bws_domain_actions.pddl ../bws_domain/problem_size_23/bws_problem_23_7.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.009s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.010s wall-clock]
1750 relevant atoms
1173 auxiliary atoms
2923 final queue length
5091 total queue pushes
Completing instantiation... [0.020s CPU, 0.017s wall-clock]
Instantiating: [0.030s CPU, 0.028s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
24 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.006s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
1564 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
46 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.011s wall-clock]
Reordering and filtering variables...
47 of 47 variables necessary.
24 of 47 mutex groups necessary.
1058 of 1058 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 47
Translator derived variables: 0
Translator facts: 600
Translator goal facts: 23
Translator mutex groups: 24
Translator total mutex groups size: 576
Translator operators: 1058
Translator axioms: 0
Translator task size: 9112
Translator peak memory: 37488 KB
Writing output... [0.000s CPU, 0.005s wall-clock]
Done! [0.080s CPU, 0.092s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=1.9428e-05s, 24488 KB] reading input...
[t=0.00282474s, 25428 KB] done reading input!
[t=0.00358385s, 25824 KB] Initializing landmark count heuristic...
[t=0.00360949s, 25824 KB] Generating landmark graph...
[t=0.0036721s, 25824 KB] Building a landmark graph with reasonable orders.
[t=0.00373383s, 25956 KB] Initializing Exploration...
[t=0.0040177s, 26256 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0160716s, 26652 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0161537s, 26652 KB] Landmarks generation time: 0.0124827s
[t=0.0161675s, 26652 KB] Discovered 106 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0161831s, 26652 KB] 505 edges
[t=0.0161921s, 26652 KB] approx. reasonable orders
[t=0.0171675s, 26652 KB] approx. obedient reasonable orders
[t=0.0171965s, 26652 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0172053s, 26652 KB] Landmarks generation time: 0.0135938s
[t=0.0172145s, 26652 KB] Discovered 106 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.017222s, 26652 KB] 520 edges
[t=0.0172304s, 26652 KB] Landmark graph generation time: 0.0136277s
[t=0.0172401s, 26652 KB] Landmark graph contains 106 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0172477s, 26652 KB] Landmark graph contains 520 orderings.
[t=0.0175729s, 26652 KB] Simplifying 4186 unary operators... done! [3174 unary operators]
[t=0.0185272s, 26652 KB] time to simplify: 0.00101837s
[t=0.0186538s, 26652 KB] Initializing additive heuristic...
[t=0.0186679s, 26652 KB] Initializing FF heuristic...
[t=0.0187175s, 26652 KB] Building successor generator...done!
[t=0.0188971s, 26652 KB] peak memory difference for successor generator creation: 0 KB
[t=0.018905s, 26652 KB] time for successor generation creation: 0.000148619s
[t=0.0189159s, 26652 KB] Variables: 47
[t=0.0189237s, 26652 KB] FactPairs: 600
[t=0.0189312s, 26652 KB] Bytes per state: 20
[t=0.0190192s, 26652 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0190504s, 26652 KB] 47 initial landmarks, 23 goal landmarks
[t=0.0191016s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.0191105s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0191186s, 26652 KB] g=0, 1 evaluated, 0 expanded
[t=0.019132s, 26652 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.0191404s, 26652 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0192357s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0192447s, 26652 KB] g=1, 4 evaluated, 3 expanded
[t=0.0192809s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0192893s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.019297s, 26652 KB] g=2, 5 evaluated, 4 expanded
[t=0.0194082s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0194166s, 26652 KB] g=3, 9 evaluated, 8 expanded
[t=0.0194511s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0194594s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.019467s, 26652 KB] g=4, 10 evaluated, 9 expanded
[t=0.0195014s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0195099s, 26652 KB] g=5, 11 evaluated, 10 expanded
[t=0.0195449s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0195534s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0195611s, 26652 KB] g=6, 12 evaluated, 11 expanded
[t=0.0197242s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0197327s, 26652 KB] g=8, 18 evaluated, 17 expanded
[t=0.0197943s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0198029s, 26652 KB] g=9, 20 evaluated, 19 expanded
[t=0.0198406s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0198491s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0198623s, 26652 KB] g=10, 21 evaluated, 20 expanded
[t=0.0200539s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0200637s, 26652 KB] g=12, 28 evaluated, 27 expanded
[t=0.0201537s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0201628s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0201713s, 26652 KB] g=12, 31 evaluated, 30 expanded
[t=0.0203558s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0203662s, 26652 KB] g=14, 37 evaluated, 36 expanded
[t=0.0204339s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0204426s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0204503s, 26652 KB] g=14, 39 evaluated, 38 expanded
[t=0.0205866s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0205951s, 26652 KB] g=15, 44 evaluated, 43 expanded
[t=0.0207335s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0207421s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0207499s, 26652 KB] g=16, 49 evaluated, 48 expanded
[t=0.0208605s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.020869s, 26652 KB] g=17, 53 evaluated, 52 expanded
[t=0.0211861s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0211954s, 26652 KB] g=19, 65 evaluated, 64 expanded
[t=0.0213323s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0213415s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.021349s, 26652 KB] g=20, 70 evaluated, 69 expanded
[t=0.0215123s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0215214s, 26652 KB] g=22, 76 evaluated, 75 expanded
[t=0.0215834s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0215921s, 26652 KB] g=23, 78 evaluated, 77 expanded
[t=0.0216275s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0216359s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0216438s, 26652 KB] g=24, 79 evaluated, 78 expanded
[t=0.0218543s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.021863s, 26652 KB] g=26, 87 evaluated, 86 expanded
[t=0.02195s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0219587s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0219668s, 26652 KB] g=26, 90 evaluated, 89 expanded
[t=0.0221285s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.022137s, 26652 KB] g=28, 96 evaluated, 95 expanded
[t=0.0223243s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0223329s, 26652 KB] g=30, 103 evaluated, 102 expanded
[t=0.0223682s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0223767s, 26652 KB] g=30, 104 evaluated, 103 expanded
[t=0.0224652s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0224745s, 26652 KB] g=31, 107 evaluated, 106 expanded
[t=0.0225363s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0225449s, 26652 KB] g=32, 109 evaluated, 108 expanded
[t=0.0227091s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0227182s, 26652 KB] g=32, 115 evaluated, 114 expanded
[t=0.0229656s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0229835s, 26652 KB] g=34, 124 evaluated, 123 expanded
[t=0.0231008s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0231104s, 26652 KB] g=34, 128 evaluated, 127 expanded
[t=0.0234244s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0234372s, 26652 KB] g=36, 138 evaluated, 137 expanded
[t=0.0236061s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0236157s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0236244s, 26652 KB] g=38, 144 evaluated, 143 expanded
[t=0.0240056s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0240148s, 26652 KB] g=41, 158 evaluated, 157 expanded
[t=0.0240515s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0240608s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0240692s, 26652 KB] g=42, 159 evaluated, 158 expanded
[t=0.0242621s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0242749s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0242833s, 26652 KB] g=44, 166 evaluated, 165 expanded
[t=0.0244292s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0244379s, 26652 KB] g=44, 171 evaluated, 170 expanded
[t=0.024486s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0244948s, 26652 KB] g=46, 172 evaluated, 171 expanded
[t=0.0249072s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.024917s, 26652 KB] g=46, 187 evaluated, 186 expanded
[t=0.025185s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0251944s, 26652 KB] g=48, 197 evaluated, 196 expanded
[t=0.0253054s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0253143s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0253221s, 26652 KB] g=50, 201 evaluated, 200 expanded
[t=0.0257252s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0257346s, 26652 KB] g=54, 217 evaluated, 216 expanded
[t=0.0258188s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0258273s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0258352s, 26652 KB] g=56, 220 evaluated, 219 expanded
[t=0.0262869s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0263001s, 26652 KB] g=66, 238 evaluated, 237 expanded
[t=0.0264136s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0264226s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.026431s, 26652 KB] g=68, 242 evaluated, 241 expanded
[t=0.0266515s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0266608s, 26652 KB] g=72, 251 evaluated, 250 expanded
[t=0.0267422s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0267516s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0267596s, 26652 KB] g=74, 254 evaluated, 253 expanded
[t=0.0413362s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0413764s, 26652 KB] g=116, 848 evaluated, 847 expanded
[t=0.0421177s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.042139s, 26652 KB] g=124, 877 evaluated, 876 expanded
[t=0.042195s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0422052s, 26652 KB] g=124, 879 evaluated, 878 expanded
[t=0.0422817s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0422912s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0422996s, 26652 KB] g=126, 882 evaluated, 881 expanded
[t=0.043014s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0430242s, 26652 KB] g=142, 919 evaluated, 918 expanded
[t=0.0431932s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0432031s, 26652 KB] g=150, 930 evaluated, 929 expanded
[t=0.0432217s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0432308s, 26652 KB] g=151, 931 evaluated, 930 expanded
[t=0.0432464s, 26652 KB] Solution found!
[t=0.0432609s, 26652 KB] Actual search time: 0.0242083s
unstack b19 b8 (1)
put-down b19 (1)
unstack b6 b1 (1)
put-down b6 (1)
unstack b1 b22 (1)
stack b1 b6 (1)
unstack b16 b17 (1)
put-down b16 (1)
unstack b17 b4 (1)
stack b17 b19 (1)
unstack b4 b21 (1)
stack b4 b16 (1)
unstack b21 b9 (1)
stack b21 b22 (1)
pick-up b8 (1)
stack b8 b4 (1)
unstack b9 b5 (1)
put-down b9 (1)
unstack b5 b12 (1)
stack b5 b21 (1)
unstack b12 b18 (1)
put-down b12 (1)
unstack b18 b23 (1)
put-down b18 (1)
pick-up b9 (1)
stack b9 b12 (1)
unstack b2 b13 (1)
put-down b2 (1)
unstack b13 b15 (1)
put-down b13 (1)
unstack b15 b10 (1)
stack b15 b5 (1)
pick-up b10 (1)
stack b10 b8 (1)
pick-up b2 (1)
stack b2 b10 (1)
pick-up b13 (1)
stack b13 b2 (1)
unstack b23 b7 (1)
put-down b23 (1)
unstack b7 b3 (1)
stack b7 b14 (1)
unstack b3 b11 (1)
stack b3 b13 (1)
pick-up b20 (1)
stack b20 b3 (1)
pick-up b11 (1)
stack b11 b20 (1)
pick-up b23 (1)
stack b23 b7 (1)
unstack b9 b12 (1)
put-down b9 (1)
pick-up b12 (1)
stack b12 b11 (1)
pick-up b9 (1)
stack b9 b12 (1)
unstack b15 b5 (1)
put-down b15 (1)
unstack b5 b21 (1)
put-down b5 (1)
pick-up b15 (1)
stack b15 b5 (1)
unstack b21 b22 (1)
put-down b21 (1)
pick-up b22 (1)
stack b22 b18 (1)
pick-up b21 (1)
stack b21 b22 (1)
unstack b15 b5 (1)
put-down b15 (1)
pick-up b5 (1)
stack b5 b21 (1)
pick-up b15 (1)
stack b15 b5 (1)
unstack b9 b12 (1)
put-down b9 (1)
unstack b12 b11 (1)
put-down b12 (1)
pick-up b9 (1)
stack b9 b12 (1)
unstack b11 b20 (1)
put-down b11 (1)
unstack b20 b3 (1)
put-down b20 (1)
unstack b3 b13 (1)
put-down b3 (1)
pick-up b20 (1)
stack b20 b3 (1)
pick-up b11 (1)
stack b11 b20 (1)
unstack b9 b12 (1)
put-down b9 (1)
pick-up b12 (1)
stack b12 b11 (1)
pick-up b9 (1)
stack b9 b12 (1)
unstack b13 b2 (1)
put-down b13 (1)
unstack b2 b10 (1)
put-down b2 (1)
unstack b10 b8 (1)
put-down b10 (1)
pick-up b2 (1)
stack b2 b10 (1)
pick-up b13 (1)
stack b13 b2 (1)
unstack b8 b4 (1)
put-down b8 (1)
unstack b4 b16 (1)
put-down b4 (1)
pick-up b16 (1)
stack b16 b23 (1)
pick-up b4 (1)
stack b4 b16 (1)
pick-up b8 (1)
stack b8 b4 (1)
unstack b13 b2 (1)
put-down b13 (1)
unstack b2 b10 (1)
put-down b2 (1)
pick-up b10 (1)
stack b10 b8 (1)
pick-up b2 (1)
stack b2 b10 (1)
pick-up b13 (1)
stack b13 b2 (1)
unstack b9 b12 (1)
put-down b9 (1)
unstack b12 b11 (1)
put-down b12 (1)
unstack b11 b20 (1)
put-down b11 (1)
pick-up b12 (1)
stack b12 b11 (1)
pick-up b9 (1)
stack b9 b12 (1)
unstack b20 b3 (1)
put-down b20 (1)
pick-up b3 (1)
stack b3 b13 (1)
pick-up b20 (1)
stack b20 b3 (1)
unstack b9 b12 (1)
put-down b9 (1)
unstack b12 b11 (1)
put-down b12 (1)
pick-up b11 (1)
stack b11 b20 (1)
pick-up b12 (1)
stack b12 b11 (1)
pick-up b9 (1)
stack b9 b12 (1)
[t=0.0432705s, 26652 KB] Plan length: 152 step(s).
[t=0.0432705s, 26652 KB] Plan cost: 152
[t=0.0432705s, 26652 KB] Expanded 931 state(s).
[t=0.0432705s, 26652 KB] Reopened 0 state(s).
[t=0.0432705s, 26652 KB] Evaluated 932 state(s).
[t=0.0432705s, 26652 KB] Evaluations: 1864
[t=0.0432705s, 26652 KB] Generated 8267 state(s).
[t=0.0432705s, 26652 KB] Dead ends: 0 state(s).
[t=0.0432705s, 26652 KB] Number of registered states: 932
[t=0.0432705s, 26652 KB] Int hash set load factor: 932/1024 = 0.910156
[t=0.0432705s, 26652 KB] Int hash set resizes: 10
[t=0.0432705s, 26652 KB] Search time: 0.0242517s
[t=0.0432705s, 26652 KB] Total time: 0.0432705s
Solution found.
Peak memory: 26652 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.18s
