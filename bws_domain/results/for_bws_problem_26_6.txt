INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py ../bws_domain/bws_domain_actions.pddl ../bws_domain/problem_size_26/bws_problem_26_6.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.009s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.000s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
2212 relevant atoms
1482 auxiliary atoms
3694 final queue length
6456 total queue pushes
Completing instantiation... [0.020s CPU, 0.022s wall-clock]
Instantiating: [0.030s CPU, 0.036s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
27 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.008s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.031s wall-clock]
2002 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
52 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.018s wall-clock]
Reordering and filtering variables...
53 of 53 variables necessary.
27 of 53 mutex groups necessary.
1352 of 1352 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.008s wall-clock]
Translator variables: 53
Translator derived variables: 0
Translator facts: 756
Translator goal facts: 26
Translator mutex groups: 27
Translator total mutex groups size: 729
Translator operators: 1352
Translator axioms: 0
Translator task size: 11626
Translator peak memory: 38896 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.110s CPU, 0.119s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=1.8666e-05s, 24488 KB] reading input...
[t=0.00365356s, 25744 KB] done reading input!
[t=0.00456885s, 26140 KB] Initializing landmark count heuristic...
[t=0.00460305s, 26140 KB] Generating landmark graph...
[t=0.00467977s, 26272 KB] Building a landmark graph with reasonable orders.
[t=0.0048288s, 26272 KB] Initializing Exploration...
[t=0.00541783s, 26680 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.021884s, 27208 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0219682s, 27208 KB] Landmarks generation time: 0.0173038s
[t=0.0219965s, 27208 KB] Discovered 119 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0220115s, 27208 KB] 442 edges
[t=0.0220208s, 27208 KB] approx. reasonable orders
[t=0.0220295s, 27208 KB] approx. obedient reasonable orders
[t=0.0220555s, 27208 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0220646s, 27208 KB] Landmarks generation time: 0.017459s
[t=0.0220739s, 27208 KB] Discovered 119 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0220818s, 27208 KB] 442 edges
[t=0.0220902s, 27208 KB] Landmark graph generation time: 0.0174939s
[t=0.0220985s, 27208 KB] Landmark graph contains 119 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0221067s, 27208 KB] Landmark graph contains 442 orderings.
[t=0.0225265s, 27208 KB] Simplifying 5356 unary operators... done! [4056 unary operators]
[t=0.0238533s, 27340 KB] time to simplify: 0.00142794s
[t=0.0240298s, 27340 KB] Initializing additive heuristic...
[t=0.0240459s, 27340 KB] Initializing FF heuristic...
[t=0.0240958s, 27340 KB] Building successor generator...done!
[t=0.0243222s, 27340 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0243303s, 27340 KB] time for successor generation creation: 0.000194279s
[t=0.0243607s, 27340 KB] Variables: 53
[t=0.024369s, 27340 KB] FactPairs: 756
[t=0.0243769s, 27340 KB] Bytes per state: 20
[t=0.0244626s, 27340 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0244944s, 27340 KB] 53 initial landmarks, 26 goal landmarks
[t=0.0245789s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 66
[t=0.0245882s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 46
[t=0.0245962s, 27340 KB] g=0, 1 evaluated, 0 expanded
[t=0.0246092s, 27340 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 66
[t=0.0246175s, 27340 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 46
[t=0.0248946s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 64
[t=0.0249035s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0249111s, 27340 KB] g=2, 8 evaluated, 7 expanded
[t=0.0251095s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 62
[t=0.025118s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.0251259s, 27340 KB] g=4, 14 evaluated, 13 expanded
[t=0.0253245s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.025333s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0253406s, 27340 KB] g=6, 20 evaluated, 19 expanded
[t=0.0255066s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 58
[t=0.025515s, 27340 KB] g=8, 25 evaluated, 24 expanded
[t=0.0260921s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 57
[t=0.0261028s, 27340 KB] g=10, 43 evaluated, 42 expanded
[t=0.0263345s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0263435s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0263514s, 27340 KB] g=10, 50 evaluated, 49 expanded
[t=0.0265488s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.026558s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0265659s, 27340 KB] g=12, 56 evaluated, 55 expanded
[t=0.0267634s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0267779s, 27340 KB] g=14, 62 evaluated, 61 expanded
[t=0.0268222s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0268305s, 27340 KB] g=15, 63 evaluated, 62 expanded
[t=0.0269917s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0270022s, 27340 KB] g=17, 66 evaluated, 65 expanded
[t=0.0270753s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0270845s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0270923s, 27340 KB] g=18, 68 evaluated, 67 expanded
[t=0.027352s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0273606s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0273684s, 27340 KB] g=20, 76 evaluated, 75 expanded
[t=0.0280131s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0280241s, 27340 KB] g=23, 96 evaluated, 95 expanded
[t=0.0285236s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0285329s, 27340 KB] g=26, 112 evaluated, 111 expanded
[t=0.0288253s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0288349s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0288429s, 27340 KB] g=28, 121 evaluated, 120 expanded
[t=0.0291083s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0291174s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0291255s, 27340 KB] g=30, 129 evaluated, 128 expanded
[t=0.0292906s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0292993s, 27340 KB] g=31, 134 evaluated, 133 expanded
[t=0.0293401s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.029349s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0293567s, 27340 KB] g=32, 135 evaluated, 134 expanded
[t=0.0296443s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0296533s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.029661s, 27340 KB] g=34, 144 evaluated, 143 expanded
[t=0.0299228s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0299321s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0299402s, 27340 KB] g=36, 152 evaluated, 151 expanded
[t=0.0306258s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0306357s, 27340 KB] g=39, 174 evaluated, 173 expanded
[t=0.0306807s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.030689s, 27340 KB] g=40, 175 evaluated, 174 expanded
[t=0.030915s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0309237s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0309313s, 27340 KB] g=42, 182 evaluated, 181 expanded
[t=0.0311552s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0311666s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0311746s, 27340 KB] g=44, 189 evaluated, 188 expanded
[t=0.0320909s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0321025s, 27340 KB] g=48, 218 evaluated, 217 expanded
[t=0.032267s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.032276s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0322837s, 27340 KB] g=50, 223 evaluated, 222 expanded
[t=0.034158s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0341682s, 27340 KB] g=58, 284 evaluated, 283 expanded
[t=0.0344331s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0344449s, 27340 KB] g=60, 292 evaluated, 291 expanded
[t=0.0346404s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0346499s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0346581s, 27340 KB] g=62, 298 evaluated, 297 expanded
[t=0.0348795s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0348881s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0348959s, 27340 KB] g=64, 305 evaluated, 304 expanded
[t=0.0350873s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0350958s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0351034s, 27340 KB] g=66, 311 evaluated, 310 expanded
[t=0.0352633s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0352717s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0352869s, 27340 KB] g=68, 316 evaluated, 315 expanded
[t=0.0356829s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0356925s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0357009s, 27340 KB] g=72, 328 evaluated, 327 expanded
[t=0.0358871s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0359184s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0359266s, 27340 KB] g=74, 333 evaluated, 332 expanded
[t=0.0377499s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0377617s, 27340 KB] g=82, 392 evaluated, 391 expanded
[t=0.0382625s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0382744s, 27340 KB] g=86, 408 evaluated, 407 expanded
[t=0.0384046s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0384141s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0384223s, 27340 KB] g=88, 412 evaluated, 411 expanded
[t=0.0439662s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0439859s, 27340 KB] g=116, 599 evaluated, 598 expanded
[t=0.0441331s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0441428s, 27340 KB] g=118, 604 evaluated, 603 expanded
[t=0.0442616s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0442757s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0442839s, 27340 KB] g=120, 608 evaluated, 607 expanded
[t=0.0447849s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0447948s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0448025s, 27340 KB] g=126, 627 evaluated, 626 expanded
[t=0.0457347s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0457452s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0457534s, 27340 KB] g=144, 660 evaluated, 659 expanded
[t=0.0516132s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0516295s, 27340 KB] g=136, 885 evaluated, 884 expanded
[t=0.0517368s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0517477s, 27340 KB] g=138, 889 evaluated, 888 expanded
[t=0.0519523s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0519621s, 27340 KB] g=142, 898 evaluated, 897 expanded
[t=0.0520379s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0520521s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0520603s, 27340 KB] g=144, 901 evaluated, 900 expanded
[t=0.0524101s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0524201s, 27340 KB] g=156, 918 evaluated, 917 expanded
[t=0.0524917s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0525009s, 27340 KB] g=160, 922 evaluated, 921 expanded
[t=0.0525241s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0525332s, 27340 KB] g=161, 923 evaluated, 922 expanded
[t=0.0525491s, 27340 KB] Solution found!
[t=0.0525709s, 27340 KB] Actual search time: 0.0280891s
unstack b11 b20 (1)
stack b11 b13 (1)
unstack b17 b26 (1)
stack b17 b5 (1)
unstack b20 b4 (1)
stack b20 b11 (1)
unstack b3 b24 (1)
put-down b3 (1)
unstack b24 b15 (1)
stack b24 b26 (1)
unstack b15 b19 (1)
stack b15 b8 (1)
unstack b19 b10 (1)
put-down b19 (1)
unstack b10 b12 (1)
put-down b10 (1)
unstack b12 b18 (1)
stack b12 b19 (1)
unstack b18 b16 (1)
stack b18 b4 (1)
unstack b15 b8 (1)
put-down b15 (1)
unstack b8 b14 (1)
put-down b8 (1)
unstack b14 b6 (1)
stack b14 b20 (1)
pick-up b15 (1)
stack b15 b8 (1)
unstack b6 b23 (1)
stack b6 b14 (1)
unstack b23 b25 (1)
put-down b23 (1)
unstack b25 b7 (1)
stack b25 b3 (1)
pick-up b7 (1)
stack b7 b18 (1)
unstack b17 b5 (1)
put-down b17 (1)
unstack b5 b1 (1)
stack b5 b24 (1)
pick-up b10 (1)
stack b10 b1 (1)
pick-up b17 (1)
stack b17 b5 (1)
unstack b15 b8 (1)
put-down b15 (1)
pick-up b8 (1)
stack b8 b6 (1)
pick-up b15 (1)
stack b15 b8 (1)
unstack b17 b5 (1)
put-down b17 (1)
unstack b5 b24 (1)
put-down b5 (1)
unstack b24 b26 (1)
put-down b24 (1)
unstack b26 b21 (1)
stack b26 b23 (1)
pick-up b17 (1)
stack b17 b5 (1)
unstack b21 b22 (1)
stack b21 b16 (1)
unstack b22 b2 (1)
stack b22 b17 (1)
pick-up b2 (1)
stack b2 b15 (1)
pick-up b24 (1)
stack b24 b26 (1)
unstack b12 b19 (1)
put-down b12 (1)
pick-up b19 (1)
stack b19 b21 (1)
pick-up b12 (1)
stack b12 b19 (1)
unstack b22 b17 (1)
put-down b22 (1)
unstack b17 b5 (1)
put-down b17 (1)
pick-up b22 (1)
stack b22 b17 (1)
pick-up b5 (1)
stack b5 b24 (1)
unstack b22 b17 (1)
put-down b22 (1)
pick-up b17 (1)
stack b17 b5 (1)
pick-up b22 (1)
stack b22 b17 (1)
unstack b2 b15 (1)
put-down b2 (1)
unstack b15 b8 (1)
put-down b15 (1)
pick-up b2 (1)
stack b2 b15 (1)
unstack b8 b6 (1)
put-down b8 (1)
unstack b6 b14 (1)
put-down b6 (1)
pick-up b8 (1)
stack b8 b6 (1)
unstack b2 b15 (1)
put-down b2 (1)
pick-up b15 (1)
stack b15 b8 (1)
pick-up b2 (1)
stack b2 b15 (1)
unstack b14 b20 (1)
put-down b14 (1)
unstack b20 b11 (1)
put-down b20 (1)
pick-up b14 (1)
stack b14 b20 (1)
unstack b11 b13 (1)
put-down b11 (1)
unstack b13 b9 (1)
stack b13 b25 (1)
pick-up b11 (1)
stack b11 b13 (1)
pick-up b9 (1)
stack b9 b22 (1)
unstack b11 b13 (1)
put-down b11 (1)
unstack b13 b25 (1)
put-down b13 (1)
pick-up b11 (1)
stack b11 b13 (1)
unstack b25 b3 (1)
put-down b25 (1)
pick-up b3 (1)
stack b3 b9 (1)
pick-up b25 (1)
stack b25 b3 (1)
unstack b11 b13 (1)
put-down b11 (1)
pick-up b13 (1)
stack b13 b25 (1)
pick-up b11 (1)
stack b11 b13 (1)
unstack b14 b20 (1)
put-down b14 (1)
pick-up b20 (1)
stack b20 b11 (1)
pick-up b14 (1)
stack b14 b20 (1)
unstack b2 b15 (1)
put-down b2 (1)
unstack b15 b8 (1)
put-down b15 (1)
pick-up b2 (1)
stack b2 b15 (1)
unstack b8 b6 (1)
put-down b8 (1)
pick-up b6 (1)
stack b6 b14 (1)
pick-up b8 (1)
stack b8 b6 (1)
unstack b2 b15 (1)
put-down b2 (1)
pick-up b15 (1)
stack b15 b8 (1)
pick-up b2 (1)
stack b2 b15 (1)
[t=0.0525956s, 27340 KB] Plan length: 162 step(s).
[t=0.0525956s, 27340 KB] Plan cost: 162
[t=0.0525956s, 27340 KB] Expanded 923 state(s).
[t=0.0525956s, 27340 KB] Reopened 0 state(s).
[t=0.0525956s, 27340 KB] Evaluated 924 state(s).
[t=0.0525956s, 27340 KB] Evaluations: 1848
[t=0.0525956s, 27340 KB] Generated 8446 state(s).
[t=0.0525956s, 27340 KB] Dead ends: 0 state(s).
[t=0.0525956s, 27340 KB] Number of registered states: 924
[t=0.0525956s, 27340 KB] Int hash set load factor: 924/1024 = 0.902344
[t=0.0525956s, 27340 KB] Int hash set resizes: 10
[t=0.0525956s, 27340 KB] Search time: 0.0281332s
[t=0.0525956s, 27340 KB] Total time: 0.0525956s
Solution found.
Peak memory: 27340 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.21s
