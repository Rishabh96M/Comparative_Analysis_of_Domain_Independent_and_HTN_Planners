INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py ../bws_domain/bws_domain_actions.pddl ../bws_domain/problem_size_25/bws_problem_25_9.pddl --sas-file output.sas
Parsing...
Parsing: [0.010s CPU, 0.009s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.012s wall-clock]
2052 relevant atoms
1375 auxiliary atoms
3427 final queue length
5984 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.033s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
26 uncovered facts
Choosing groups: [0.000s CPU, 0.002s wall-clock]
Building translation key... [0.010s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.007s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.030s wall-clock]
1850 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
50 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.018s wall-clock]
Reordering and filtering variables...
51 of 51 variables necessary.
26 of 51 mutex groups necessary.
1250 of 1250 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.007s wall-clock]
Translator variables: 51
Translator derived variables: 0
Translator facts: 702
Translator goal facts: 25
Translator mutex groups: 26
Translator total mutex groups size: 676
Translator operators: 1250
Translator axioms: 0
Translator task size: 10754
Translator peak memory: 38384 KB
Writing output... [0.010s CPU, 0.006s wall-clock]
Done! [0.110s CPU, 0.113s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=1.881e-05s, 24488 KB] reading input...
[t=0.00337078s, 25632 KB] done reading input!
[t=0.0041799s, 26028 KB] Initializing landmark count heuristic...
[t=0.00421474s, 26028 KB] Generating landmark graph...
[t=0.00428422s, 26160 KB] Building a landmark graph with reasonable orders.
[t=0.00435086s, 26160 KB] Initializing Exploration...
[t=0.00470275s, 26532 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0194042s, 27060 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.019588s, 27060 KB] Landmarks generation time: 0.0153197s
[t=0.019621s, 27060 KB] Discovered 113 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0196745s, 27060 KB] 611 edges
[t=0.0196943s, 27060 KB] approx. reasonable orders
[t=0.0197032s, 27060 KB] approx. obedient reasonable orders
[t=0.0197389s, 27060 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0197486s, 27060 KB] Landmarks generation time: 0.0155327s
[t=0.0197595s, 27060 KB] Discovered 113 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0197728s, 27060 KB] 611 edges
[t=0.0197855s, 27060 KB] Landmark graph generation time: 0.0155806s
[t=0.0197971s, 27060 KB] Landmark graph contains 113 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0198051s, 27060 KB] Landmark graph contains 611 orderings.
[t=0.0203567s, 27060 KB] Simplifying 4950 unary operators... done! [3750 unary operators]
[t=0.0215653s, 27192 KB] time to simplify: 0.00128978s
[t=0.0217228s, 27192 KB] Initializing additive heuristic...
[t=0.0217397s, 27192 KB] Initializing FF heuristic...
[t=0.0217919s, 27192 KB] Building successor generator...done!
[t=0.0220153s, 27192 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0220247s, 27192 KB] time for successor generation creation: 0.000187604s
[t=0.0220381s, 27192 KB] Variables: 51
[t=0.0220466s, 27192 KB] FactPairs: 702
[t=0.0220551s, 27192 KB] Bytes per state: 20
[t=0.0221414s, 27192 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0221817s, 27192 KB] 51 initial landmarks, 25 goal landmarks
[t=0.0222456s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 62
[t=0.0222609s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.0222694s, 27192 KB] g=0, 1 evaluated, 0 expanded
[t=0.0222846s, 27192 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 62
[t=0.0222935s, 27192 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.0224035s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 61
[t=0.0224127s, 27192 KB] g=1, 4 evaluated, 3 expanded
[t=0.0226335s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0226434s, 27192 KB] g=1, 11 evaluated, 10 expanded
[t=0.0227134s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.022722s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0227302s, 27192 KB] g=2, 13 evaluated, 12 expanded
[t=0.0227997s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 58
[t=0.0228085s, 27192 KB] g=3, 15 evaluated, 14 expanded
[t=0.0231436s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 57
[t=0.0231539s, 27192 KB] g=5, 26 evaluated, 25 expanded
[t=0.023195s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0232039s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.023212s, 27192 KB] g=6, 27 evaluated, 26 expanded
[t=0.0234271s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0234361s, 27192 KB] g=8, 34 evaluated, 33 expanded
[t=0.0235049s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0235137s, 27192 KB] g=8, 36 evaluated, 35 expanded
[t=0.023756s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0237654s, 27192 KB] g=9, 44 evaluated, 43 expanded
[t=0.0238354s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0238481s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0238564s, 27192 KB] g=10, 46 evaluated, 45 expanded
[t=0.0241253s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0241387s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0241477s, 27192 KB] g=12, 54 evaluated, 53 expanded
[t=0.0243361s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0243451s, 27192 KB] g=14, 60 evaluated, 59 expanded
[t=0.0247875s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.024797s, 27192 KB] g=16, 74 evaluated, 73 expanded
[t=0.0249283s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0249374s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0249454s, 27192 KB] g=16, 78 evaluated, 77 expanded
[t=0.0251907s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0251998s, 27192 KB] g=18, 86 evaluated, 85 expanded
[t=0.0254451s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0254539s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.025462s, 27192 KB] g=20, 94 evaluated, 93 expanded
[t=0.0259509s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0259601s, 27192 KB] g=22, 110 evaluated, 109 expanded
[t=0.0262453s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0262569s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.026265s, 27192 KB] g=24, 118 evaluated, 117 expanded
[t=0.0265044s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.026521s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0265352s, 27192 KB] g=25, 125 evaluated, 124 expanded
[t=0.0266096s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0266235s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0266339s, 27192 KB] g=26, 126 evaluated, 125 expanded
[t=0.0269306s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0269403s, 27192 KB] g=27, 134 evaluated, 133 expanded
[t=0.0269813s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0269899s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0269977s, 27192 KB] g=28, 135 evaluated, 134 expanded
[t=0.0272837s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0272933s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0273045s, 27192 KB] g=30, 144 evaluated, 143 expanded
[t=0.0275988s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0276086s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0276169s, 27192 KB] g=32, 153 evaluated, 152 expanded
[t=0.0278734s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.027883s, 27192 KB] g=33, 161 evaluated, 160 expanded
[t=0.0279286s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0279376s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0279454s, 27192 KB] g=34, 162 evaluated, 161 expanded
[t=0.0282276s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0282366s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0282442s, 27192 KB] g=36, 171 evaluated, 170 expanded
[t=0.028465s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0284737s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0284817s, 27192 KB] g=38, 178 evaluated, 177 expanded
[t=0.0287036s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0287123s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0287203s, 27192 KB] g=40, 185 evaluated, 184 expanded
[t=0.029121s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0291304s, 27192 KB] g=43, 198 evaluated, 197 expanded
[t=0.0292025s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.029211s, 27192 KB] g=44, 200 evaluated, 199 expanded
[t=0.0293366s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0293449s, 27192 KB] g=45, 204 evaluated, 203 expanded
[t=0.0293831s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0293914s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0293994s, 27192 KB] g=46, 205 evaluated, 204 expanded
[t=0.0294373s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0294456s, 27192 KB] g=47, 206 evaluated, 205 expanded
[t=0.0294829s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0294913s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0294994s, 27192 KB] g=48, 207 evaluated, 206 expanded
[t=0.0296732s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0296819s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0296898s, 27192 KB] g=50, 213 evaluated, 212 expanded
[t=0.0298343s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.029843s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0298508s, 27192 KB] g=52, 218 evaluated, 217 expanded
[t=0.0300593s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0300683s, 27192 KB] g=55, 225 evaluated, 224 expanded
[t=0.0301057s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0301143s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.030122s, 27192 KB] g=56, 226 evaluated, 225 expanded
[t=0.0302471s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0302622s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.030272s, 27192 KB] g=58, 230 evaluated, 229 expanded
[t=0.0305202s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0305291s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.030537s, 27192 KB] g=62, 239 evaluated, 238 expanded
[t=0.0306235s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0306318s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0306395s, 27192 KB] g=64, 242 evaluated, 241 expanded
[t=0.03102s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0310291s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0310368s, 27192 KB] g=76, 258 evaluated, 257 expanded
[t=0.0311203s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0311285s, 27192 KB] g=80, 262 evaluated, 261 expanded
[t=0.0311476s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0311557s, 27192 KB] g=81, 263 evaluated, 262 expanded
[t=0.0311712s, 27192 KB] Solution found!
[t=0.031181s, 27192 KB] Actual search time: 0.00899328s
unstack b7 b21 (1)
put-down b7 (1)
unstack b12 b20 (1)
put-down b12 (1)
unstack b21 b17 (1)
stack b21 b7 (1)
unstack b11 b8 (1)
put-down b11 (1)
unstack b8 b22 (1)
put-down b8 (1)
pick-up b14 (1)
stack b14 b18 (1)
unstack b15 b4 (1)
put-down b15 (1)
unstack b4 b19 (1)
stack b4 b20 (1)
unstack b22 b2 (1)
put-down b22 (1)
unstack b2 b24 (1)
put-down b2 (1)
pick-up b17 (1)
stack b17 b2 (1)
unstack b24 b23 (1)
stack b24 b15 (1)
unstack b23 b25 (1)
put-down b23 (1)
unstack b25 b13 (1)
put-down b25 (1)
unstack b13 b9 (1)
stack b13 b1 (1)
unstack b9 b6 (1)
stack b9 b4 (1)
unstack b6 b3 (1)
put-down b6 (1)
pick-up b12 (1)
stack b12 b3 (1)
pick-up b19 (1)
stack b19 b13 (1)
pick-up b22 (1)
stack b22 b9 (1)
unstack b12 b3 (1)
put-down b12 (1)
unstack b3 b16 (1)
stack b3 b24 (1)
unstack b16 b10 (1)
stack b16 b22 (1)
unstack b10 b5 (1)
stack b10 b19 (1)
pick-up b11 (1)
stack b11 b5 (1)
pick-up b12 (1)
stack b12 b3 (1)
unstack b14 b18 (1)
put-down b14 (1)
pick-up b18 (1)
stack b18 b11 (1)
pick-up b14 (1)
stack b14 b18 (1)
unstack b17 b2 (1)
put-down b17 (1)
pick-up b2 (1)
stack b2 b6 (1)
pick-up b17 (1)
stack b17 b2 (1)
unstack b12 b3 (1)
put-down b12 (1)
unstack b3 b24 (1)
put-down b3 (1)
pick-up b12 (1)
stack b12 b3 (1)
unstack b24 b15 (1)
put-down b24 (1)
pick-up b15 (1)
stack b15 b25 (1)
pick-up b24 (1)
stack b24 b15 (1)
unstack b12 b3 (1)
put-down b12 (1)
pick-up b3 (1)
stack b3 b24 (1)
pick-up b12 (1)
stack b12 b3 (1)
[t=0.0311898s, 27192 KB] Plan length: 82 step(s).
[t=0.0311898s, 27192 KB] Plan cost: 82
[t=0.0311898s, 27192 KB] Expanded 263 state(s).
[t=0.0311898s, 27192 KB] Reopened 0 state(s).
[t=0.0311898s, 27192 KB] Evaluated 264 state(s).
[t=0.0311898s, 27192 KB] Evaluations: 528
[t=0.0311898s, 27192 KB] Generated 3126 state(s).
[t=0.0311898s, 27192 KB] Dead ends: 0 state(s).
[t=0.0311898s, 27192 KB] Number of registered states: 264
[t=0.0311898s, 27192 KB] Int hash set load factor: 264/512 = 0.515625
[t=0.0311898s, 27192 KB] Int hash set resizes: 9
[t=0.0311898s, 27192 KB] Search time: 0.0090488s
[t=0.0311898s, 27192 KB] Total time: 0.0311898s
Solution found.
Peak memory: 27192 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.18s
