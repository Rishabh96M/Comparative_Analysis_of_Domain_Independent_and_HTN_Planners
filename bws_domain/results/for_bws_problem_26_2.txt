INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py ../bws_domain/bws_domain_actions.pddl ../bws_domain/problem_size_26/bws_problem_26_2.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.009s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.010s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
2212 relevant atoms
1482 auxiliary atoms
3694 final queue length
6453 total queue pushes
Completing instantiation... [0.020s CPU, 0.021s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.002s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
27 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.008s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.032s wall-clock]
2002 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
52 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.019s wall-clock]
Reordering and filtering variables...
53 of 53 variables necessary.
27 of 53 mutex groups necessary.
1352 of 1352 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.008s wall-clock]
Translator variables: 53
Translator derived variables: 0
Translator facts: 756
Translator goal facts: 26
Translator mutex groups: 27
Translator total mutex groups size: 729
Translator operators: 1352
Translator axioms: 0
Translator task size: 11626
Translator peak memory: 38900 KB
Writing output... [0.010s CPU, 0.008s wall-clock]
Done! [0.120s CPU, 0.123s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.3381e-05s, 24488 KB] reading input...
[t=0.0037858s, 25744 KB] done reading input!
[t=0.00464539s, 26140 KB] Initializing landmark count heuristic...
[t=0.00467291s, 26140 KB] Generating landmark graph...
[t=0.00475266s, 26272 KB] Building a landmark graph with reasonable orders.
[t=0.00482404s, 26272 KB] Initializing Exploration...
[t=0.00517693s, 26680 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0239829s, 27340 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0240597s, 27340 KB] Landmarks generation time: 0.0193092s
[t=0.0240751s, 27340 KB] Discovered 126 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0240917s, 27340 KB] 787 edges
[t=0.0241018s, 27340 KB] approx. reasonable orders
[t=0.0241117s, 27340 KB] approx. obedient reasonable orders
[t=0.0241457s, 27340 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0241565s, 27340 KB] Landmarks generation time: 0.019482s
[t=0.0241662s, 27340 KB] Discovered 126 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0241754s, 27340 KB] 787 edges
[t=0.0241836s, 27340 KB] Landmark graph generation time: 0.0195184s
[t=0.0241925s, 27340 KB] Landmark graph contains 126 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0242008s, 27340 KB] Landmark graph contains 787 orderings.
[t=0.0246287s, 27340 KB] Simplifying 5356 unary operators... done! [4056 unary operators]
[t=0.025815s, 27340 KB] time to simplify: 0.00126616s
[t=0.0259684s, 27340 KB] Initializing additive heuristic...
[t=0.0259848s, 27340 KB] Initializing FF heuristic...
[t=0.0260336s, 27340 KB] Building successor generator...done!
[t=0.0263019s, 27340 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0263104s, 27340 KB] time for successor generation creation: 0.000239816s
[t=0.0263225s, 27340 KB] Variables: 53
[t=0.0263492s, 27340 KB] FactPairs: 756
[t=0.0263567s, 27340 KB] Bytes per state: 20
[t=0.0264462s, 27340 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0264792s, 27340 KB] 53 initial landmarks, 26 goal landmarks
[t=0.0265376s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 73
[t=0.0265475s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 51
[t=0.0265554s, 27340 KB] g=0, 1 evaluated, 0 expanded
[t=0.0265676s, 27340 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 73
[t=0.0265756s, 27340 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 51
[t=0.0267572s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 72
[t=0.0267663s, 27340 KB] g=2, 6 evaluated, 5 expanded
[t=0.0270633s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 50
[t=0.0270727s, 27340 KB] g=3, 15 evaluated, 14 expanded
[t=0.0271144s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 69
[t=0.0271228s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 49
[t=0.0271312s, 27340 KB] g=4, 16 evaluated, 15 expanded
[t=0.0273025s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 68
[t=0.0273113s, 27340 KB] g=6, 21 evaluated, 20 expanded
[t=0.027672s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 67
[t=0.027681s, 27340 KB] g=8, 32 evaluated, 31 expanded
[t=0.0279124s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 65
[t=0.0279208s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 48
[t=0.0279288s, 27340 KB] g=10, 39 evaluated, 38 expanded
[t=0.0279696s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 64
[t=0.0279784s, 27340 KB] g=11, 40 evaluated, 39 expanded
[t=0.0280227s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 62
[t=0.0280311s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 46
[t=0.0280389s, 27340 KB] g=12, 41 evaluated, 40 expanded
[t=0.0282704s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.0282855s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0282938s, 27340 KB] g=14, 48 evaluated, 47 expanded
[t=0.0284603s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.028469s, 27340 KB] g=15, 53 evaluated, 52 expanded
[t=0.0285113s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0285197s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0285274s, 27340 KB] g=16, 54 evaluated, 53 expanded
[t=0.0287591s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0287679s, 27340 KB] g=18, 61 evaluated, 60 expanded
[t=0.0288751s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0288835s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0288913s, 27340 KB] g=18, 64 evaluated, 63 expanded
[t=0.0290955s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.029104s, 27340 KB] g=20, 70 evaluated, 69 expanded
[t=0.0292084s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0292174s, 27340 KB] g=20, 73 evaluated, 72 expanded
[t=0.0293844s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0293929s, 27340 KB] g=21, 78 evaluated, 77 expanded
[t=0.0294674s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0294757s, 27340 KB] g=22, 80 evaluated, 79 expanded
[t=0.0296801s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0296886s, 27340 KB] g=24, 86 evaluated, 85 expanded
[t=0.0297975s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0298066s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0298144s, 27340 KB] g=24, 89 evaluated, 88 expanded
[t=0.0299898s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0299987s, 27340 KB] g=26, 94 evaluated, 93 expanded
[t=0.0305764s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0305866s, 27340 KB] g=26, 111 evaluated, 110 expanded
[t=0.0306289s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0306375s, 27340 KB] g=29, 112 evaluated, 111 expanded
[t=0.0311003s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0311097s, 27340 KB] g=32, 126 evaluated, 125 expanded
[t=0.0316938s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0317034s, 27340 KB] g=34, 143 evaluated, 142 expanded
[t=0.0320527s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0320658s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0320752s, 27340 KB] g=36, 153 evaluated, 152 expanded
[t=0.0323454s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0323542s, 27340 KB] g=38, 161 evaluated, 160 expanded
[t=0.0324378s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0324516s, 27340 KB] g=38, 163 evaluated, 162 expanded
[t=0.0327036s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0327184s, 27340 KB] g=39, 169 evaluated, 168 expanded
[t=0.0334234s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0334615s, 27340 KB] g=42, 184 evaluated, 183 expanded
[t=0.0338183s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0338286s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0338374s, 27340 KB] g=44, 194 evaluated, 193 expanded
[t=0.0341583s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0341702s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0341783s, 27340 KB] g=46, 203 evaluated, 202 expanded
[t=0.0348027s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0348125s, 27340 KB] g=50, 222 evaluated, 221 expanded
[t=0.0350869s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0350956s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0351038s, 27340 KB] g=52, 230 evaluated, 229 expanded
[t=0.0359601s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0359701s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0359784s, 27340 KB] g=56, 256 evaluated, 255 expanded
[t=0.0362686s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0362779s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0362861s, 27340 KB] g=58, 264 evaluated, 263 expanded
[t=0.037637s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0376466s, 27340 KB] g=62, 306 evaluated, 305 expanded
[t=0.0378491s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0378579s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.037866s, 27340 KB] g=64, 312 evaluated, 311 expanded
[t=0.0414632s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0414792s, 27340 KB] g=72, 425 evaluated, 424 expanded
[t=0.0417139s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0417241s, 27340 KB] g=74, 432 evaluated, 431 expanded
[t=0.0420151s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0420249s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0420341s, 27340 KB] g=76, 441 evaluated, 440 expanded
[t=0.0422959s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0423061s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0423141s, 27340 KB] g=78, 449 evaluated, 448 expanded
[t=0.0425725s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0425817s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0425899s, 27340 KB] g=80, 457 evaluated, 456 expanded
[t=0.0427901s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0427995s, 27340 KB] g=81, 463 evaluated, 462 expanded
[t=0.0428401s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0428486s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.042857s, 27340 KB] g=82, 464 evaluated, 463 expanded
[t=0.0431164s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0431246s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0431321s, 27340 KB] g=84, 472 evaluated, 471 expanded
[t=0.0433325s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0433413s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0433492s, 27340 KB] g=86, 478 evaluated, 477 expanded
[t=0.0440424s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0440513s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.044059s, 27340 KB] g=90, 499 evaluated, 498 expanded
[t=0.0442739s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0442824s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0442901s, 27340 KB] g=92, 505 evaluated, 504 expanded
[t=0.0451874s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0451974s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0452058s, 27340 KB] g=98, 534 evaluated, 533 expanded
[t=0.0460772s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0460866s, 27340 KB] g=106, 561 evaluated, 560 expanded
[t=0.0463062s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0463163s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0463245s, 27340 KB] g=108, 567 evaluated, 566 expanded
[t=0.0473434s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0473528s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0473606s, 27340 KB] g=120, 599 evaluated, 598 expanded
[t=0.0476534s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0476625s, 27340 KB] g=124, 608 evaluated, 607 expanded
[t=0.0477657s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0477741s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0477821s, 27340 KB] g=126, 611 evaluated, 610 expanded
[t=0.058235s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0582641s, 27340 KB] g=164, 958 evaluated, 957 expanded
[t=0.0585294s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0585389s, 27340 KB] g=168, 967 evaluated, 966 expanded
[t=0.0586287s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0586375s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.058645s, 27340 KB] g=170, 970 evaluated, 969 expanded
[t=0.0595274s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0595367s, 27340 KB] g=186, 1008 evaluated, 1007 expanded
[t=0.059735s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0597442s, 27340 KB] g=194, 1018 evaluated, 1017 expanded
[t=0.0598188s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0598274s, 27340 KB] g=198, 1022 evaluated, 1021 expanded
[t=0.059855s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0598714s, 27340 KB] g=199, 1023 evaluated, 1022 expanded
[t=0.0598872s, 27340 KB] Solution found!
[t=0.059899s, 27340 KB] Actual search time: 0.0334176s
unstack b15 b16 (1)
put-down b15 (1)
unstack b16 b19 (1)
put-down b16 (1)
unstack b14 b6 (1)
put-down b14 (1)
unstack b19 b21 (1)
put-down b19 (1)
unstack b20 b12 (1)
stack b20 b21 (1)
unstack b12 b22 (1)
stack b12 b16 (1)
unstack b6 b25 (1)
stack b6 b20 (1)
unstack b25 b7 (1)
put-down b25 (1)
pick-up b19 (1)
stack b19 b25 (1)
unstack b7 b9 (1)
put-down b7 (1)
unstack b9 b11 (1)
stack b9 b15 (1)
pick-up b22 (1)
stack b22 b7 (1)
unstack b11 b1 (1)
put-down b11 (1)
unstack b1 b17 (1)
put-down b1 (1)
unstack b17 b3 (1)
put-down b17 (1)
unstack b3 b10 (1)
put-down b3 (1)
unstack b10 b24 (1)
put-down b10 (1)
pick-up b1 (1)
stack b1 b17 (1)
unstack b24 b23 (1)
put-down b24 (1)
unstack b23 b2 (1)
put-down b23 (1)
unstack b2 b4 (1)
stack b2 b6 (1)
pick-up b23 (1)
stack b23 b4 (1)
pick-up b14 (1)
stack b14 b24 (1)
unstack b23 b4 (1)
put-down b23 (1)
pick-up b4 (1)
stack b4 b3 (1)
pick-up b23 (1)
stack b23 b4 (1)
unstack b1 b17 (1)
put-down b1 (1)
pick-up b17 (1)
stack b17 b10 (1)
pick-up b1 (1)
stack b1 b17 (1)
unstack b22 b7 (1)
put-down b22 (1)
pick-up b7 (1)
stack b7 b11 (1)
pick-up b22 (1)
stack b22 b7 (1)
unstack b2 b6 (1)
put-down b2 (1)
unstack b6 b20 (1)
put-down b6 (1)
unstack b20 b21 (1)
put-down b20 (1)
unstack b21 b8 (1)
stack b21 b14 (1)
unstack b8 b18 (1)
put-down b8 (1)
unstack b18 b13 (1)
stack b18 b2 (1)
unstack b13 b26 (1)
stack b13 b22 (1)
unstack b26 b5 (1)
stack b26 b1 (1)
pick-up b5 (1)
stack b5 b19 (1)
pick-up b20 (1)
stack b20 b21 (1)
pick-up b6 (1)
stack b6 b20 (1)
unstack b9 b15 (1)
put-down b9 (1)
pick-up b15 (1)
stack b15 b26 (1)
pick-up b9 (1)
stack b9 b15 (1)
unstack b18 b2 (1)
put-down b18 (1)
pick-up b2 (1)
stack b2 b6 (1)
pick-up b18 (1)
stack b18 b2 (1)
unstack b23 b4 (1)
put-down b23 (1)
unstack b4 b3 (1)
put-down b4 (1)
pick-up b3 (1)
stack b3 b18 (1)
pick-up b4 (1)
stack b4 b3 (1)
pick-up b23 (1)
stack b23 b4 (1)
unstack b13 b22 (1)
put-down b13 (1)
unstack b22 b7 (1)
put-down b22 (1)
pick-up b13 (1)
stack b13 b22 (1)
unstack b7 b11 (1)
put-down b7 (1)
pick-up b11 (1)
stack b11 b8 (1)
pick-up b7 (1)
stack b7 b11 (1)
unstack b13 b22 (1)
put-down b13 (1)
pick-up b22 (1)
stack b22 b7 (1)
pick-up b13 (1)
stack b13 b22 (1)
unstack b23 b4 (1)
put-down b23 (1)
unstack b4 b3 (1)
put-down b4 (1)
pick-up b23 (1)
stack b23 b4 (1)
unstack b3 b18 (1)
put-down b3 (1)
unstack b18 b2 (1)
put-down b18 (1)
unstack b2 b6 (1)
put-down b2 (1)
pick-up b18 (1)
stack b18 b2 (1)
pick-up b3 (1)
stack b3 b18 (1)
unstack b23 b4 (1)
put-down b23 (1)
pick-up b4 (1)
stack b4 b3 (1)
pick-up b23 (1)
stack b23 b4 (1)
unstack b6 b20 (1)
put-down b6 (1)
unstack b20 b21 (1)
put-down b20 (1)
pick-up b6 (1)
stack b6 b20 (1)
unstack b21 b14 (1)
put-down b21 (1)
unstack b14 b24 (1)
put-down b14 (1)
pick-up b24 (1)
stack b24 b13 (1)
pick-up b14 (1)
stack b14 b24 (1)
pick-up b21 (1)
stack b21 b14 (1)
unstack b6 b20 (1)
put-down b6 (1)
pick-up b20 (1)
stack b20 b21 (1)
pick-up b6 (1)
stack b6 b20 (1)
unstack b23 b4 (1)
put-down b23 (1)
unstack b4 b3 (1)
put-down b4 (1)
unstack b3 b18 (1)
put-down b3 (1)
pick-up b4 (1)
stack b4 b3 (1)
pick-up b23 (1)
stack b23 b4 (1)
unstack b18 b2 (1)
put-down b18 (1)
pick-up b2 (1)
stack b2 b6 (1)
pick-up b18 (1)
stack b18 b2 (1)
unstack b23 b4 (1)
put-down b23 (1)
unstack b4 b3 (1)
put-down b4 (1)
pick-up b23 (1)
stack b23 b4 (1)
pick-up b3 (1)
stack b3 b18 (1)
unstack b23 b4 (1)
put-down b23 (1)
pick-up b4 (1)
stack b4 b3 (1)
pick-up b23 (1)
stack b23 b4 (1)
[t=0.0599084s, 27340 KB] Plan length: 200 step(s).
[t=0.0599084s, 27340 KB] Plan cost: 200
[t=0.0599084s, 27340 KB] Expanded 1023 state(s).
[t=0.0599084s, 27340 KB] Reopened 0 state(s).
[t=0.0599084s, 27340 KB] Evaluated 1024 state(s).
[t=0.0599084s, 27340 KB] Evaluations: 2048
[t=0.0599084s, 27340 KB] Generated 9454 state(s).
[t=0.0599084s, 27340 KB] Dead ends: 0 state(s).
[t=0.0599084s, 27340 KB] Number of registered states: 1024
[t=0.0599084s, 27340 KB] Int hash set load factor: 1024/2048 = 0.5
[t=0.0599084s, 27340 KB] Int hash set resizes: 11
[t=0.0599084s, 27340 KB] Search time: 0.0334626s
[t=0.0599084s, 27340 KB] Total time: 0.0599084s
Solution found.
Peak memory: 27340 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.22s
