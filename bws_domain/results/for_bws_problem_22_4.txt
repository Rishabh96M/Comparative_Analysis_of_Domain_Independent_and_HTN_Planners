INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py ../bws_domain/bws_domain_actions.pddl ../bws_domain/problem_size_22/bws_problem_22_4.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.009s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.009s wall-clock]
1608 relevant atoms
1078 auxiliary atoms
2686 final queue length
4668 total queue pushes
Completing instantiation... [0.020s CPU, 0.015s wall-clock]
Instantiating: [0.030s CPU, 0.026s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
23 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.006s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.023s wall-clock]
1430 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
44 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.010s wall-clock]
Reordering and filtering variables...
45 of 45 variables necessary.
23 of 45 mutex groups necessary.
968 of 968 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 45
Translator derived variables: 0
Translator facts: 552
Translator goal facts: 22
Translator mutex groups: 23
Translator total mutex groups size: 529
Translator operators: 968
Translator axioms: 0
Translator task size: 8342
Translator peak memory: 36972 KB
Writing output... [0.000s CPU, 0.005s wall-clock]
Done! [0.080s CPU, 0.086s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=1.9591e-05s, 24488 KB] reading input...
[t=0.0027034s, 25340 KB] done reading input!
[t=0.00354963s, 25736 KB] Initializing landmark count heuristic...
[t=0.0036078s, 25736 KB] Generating landmark graph...
[t=0.00369424s, 25736 KB] Building a landmark graph with reasonable orders.
[t=0.00375826s, 25736 KB] Initializing Exploration...
[t=0.00401786s, 26000 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0159612s, 26660 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0160217s, 26660 KB] Landmarks generation time: 0.0123275s
[t=0.0160341s, 26660 KB] Discovered 107 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0160496s, 26660 KB] 805 edges
[t=0.0160588s, 26660 KB] approx. reasonable orders
[t=0.0166116s, 26660 KB] approx. obedient reasonable orders
[t=0.0166396s, 26660 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0166486s, 26660 KB] Landmarks generation time: 0.0130385s
[t=0.0166581s, 26660 KB] Discovered 107 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0166661s, 26660 KB] 812 edges
[t=0.0166741s, 26660 KB] Landmark graph generation time: 0.0130731s
[t=0.0166823s, 26660 KB] Landmark graph contains 107 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0166901s, 26660 KB] Landmark graph contains 812 orderings.
[t=0.0170028s, 26660 KB] Simplifying 3828 unary operators... done! [2904 unary operators]
[t=0.0179356s, 26660 KB] time to simplify: 0.000947054s
[t=0.0180072s, 26660 KB] Initializing additive heuristic...
[t=0.0180211s, 26660 KB] Initializing FF heuristic...
[t=0.0180705s, 26660 KB] Building successor generator...done!
[t=0.0182558s, 26660 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0182643s, 26660 KB] time for successor generation creation: 0.000152424s
[t=0.0182756s, 26660 KB] Variables: 45
[t=0.0182834s, 26660 KB] FactPairs: 552
[t=0.0182913s, 26660 KB] Bytes per state: 20
[t=0.0183844s, 26660 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0184163s, 26660 KB] 45 initial landmarks, 22 goal landmarks
[t=0.0184677s, 26660 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 62
[t=0.0184773s, 26660 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0184861s, 26660 KB] g=0, 1 evaluated, 0 expanded
[t=0.0184989s, 26660 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 62
[t=0.0185081s, 26660 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0185491s, 26660 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0185586s, 26660 KB] g=1, 2 evaluated, 1 expanded
[t=0.0185959s, 26660 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.018605s, 26660 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0186133s, 26660 KB] g=2, 3 evaluated, 2 expanded
[t=0.0186766s, 26660 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 58
[t=0.0186855s, 26660 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0186942s, 26660 KB] g=3, 5 evaluated, 4 expanded
[t=0.0187298s, 26660 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0187389s, 26660 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0187472s, 26660 KB] g=4, 6 evaluated, 5 expanded
[t=0.0187831s, 26660 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0187923s, 26660 KB] g=5, 7 evaluated, 6 expanded
[t=0.0189321s, 26660 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.018941s, 26660 KB] g=8, 12 evaluated, 11 expanded
[t=0.0190018s, 26660 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0190135s, 26660 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0190252s, 26660 KB] g=6, 14 evaluated, 13 expanded
[t=0.0190618s, 26660 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0190706s, 26660 KB] g=7, 15 evaluated, 14 expanded
[t=0.0191547s, 26660 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0191665s, 26660 KB] g=9, 18 evaluated, 17 expanded
[t=0.0193182s, 26660 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0193271s, 26660 KB] g=11, 24 evaluated, 23 expanded
[t=0.0194839s, 26660 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0194992s, 26660 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.019509s, 26660 KB] g=14, 30 evaluated, 29 expanded
[t=0.019614s, 26660 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0196222s, 26660 KB] g=16, 34 evaluated, 33 expanded
[t=0.0196776s, 26660 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.019686s, 26660 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0196935s, 26660 KB] g=17, 36 evaluated, 35 expanded
[t=0.0197261s, 26660 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0197343s, 26660 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.019742s, 26660 KB] g=18, 37 evaluated, 36 expanded
[t=0.0198698s, 26660 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0198787s, 26660 KB] g=20, 42 evaluated, 41 expanded
[t=0.0200075s, 26660 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0200166s, 26660 KB] g=22, 47 evaluated, 46 expanded
[t=0.0201682s, 26660 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0201766s, 26660 KB] g=24, 53 evaluated, 52 expanded
[t=0.0202342s, 26660 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0202428s, 26660 KB] g=24, 55 evaluated, 54 expanded
[t=0.0204651s, 26660 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0204737s, 26660 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0204813s, 26660 KB] g=26, 64 evaluated, 63 expanded
[t=0.0206143s, 26660 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0206227s, 26660 KB] g=28, 69 evaluated, 68 expanded
[t=0.0206817s, 26660 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0206904s, 26660 KB] g=28, 71 evaluated, 70 expanded
[t=0.0208886s, 26660 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0208985s, 26660 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0209063s, 26660 KB] g=30, 79 evaluated, 78 expanded
[t=0.0210853s, 26660 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0210939s, 26660 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0211016s, 26660 KB] g=32, 86 evaluated, 85 expanded
[t=0.0212353s, 26660 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0212442s, 26660 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0212522s, 26660 KB] g=34, 91 evaluated, 90 expanded
[t=0.0213594s, 26660 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0213681s, 26660 KB] g=34, 95 evaluated, 94 expanded
[t=0.0214522s, 26660 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.021463s, 26660 KB] g=35, 98 evaluated, 97 expanded
[t=0.0214972s, 26660 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0215055s, 26660 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.021513s, 26660 KB] g=36, 99 evaluated, 98 expanded
[t=0.0215786s, 26660 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0215919s, 26660 KB] g=37, 101 evaluated, 100 expanded
[t=0.0216286s, 26660 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0216372s, 26660 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0216446s, 26660 KB] g=38, 102 evaluated, 101 expanded
[t=0.0217053s, 26660 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0217136s, 26660 KB] g=39, 104 evaluated, 103 expanded
[t=0.0217486s, 26660 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0217567s, 26660 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0217648s, 26660 KB] g=40, 105 evaluated, 104 expanded
[t=0.0219248s, 26660 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0219339s, 26660 KB] g=42, 111 evaluated, 110 expanded
[t=0.021994s, 26660 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0220025s, 26660 KB] g=42, 113 evaluated, 112 expanded
[t=0.0221587s, 26660 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0221671s, 26660 KB] g=43, 119 evaluated, 118 expanded
[t=0.0222011s, 26660 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0222092s, 26660 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0222168s, 26660 KB] g=44, 120 evaluated, 119 expanded
[t=0.0223457s, 26660 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.022354s, 26660 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0223617s, 26660 KB] g=46, 125 evaluated, 124 expanded
[t=0.0225201s, 26660 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0225287s, 26660 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0225367s, 26660 KB] g=48, 131 evaluated, 130 expanded
[t=0.0228756s, 26660 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.022885s, 26660 KB] g=51, 145 evaluated, 144 expanded
[t=0.0231732s, 26660 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0231832s, 26660 KB] g=54, 157 evaluated, 156 expanded
[t=0.0232664s, 26660 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.023275s, 26660 KB] g=55, 160 evaluated, 159 expanded
[t=0.023332s, 26660 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0233403s, 26660 KB] g=56, 162 evaluated, 161 expanded
[t=0.0234487s, 26660 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0234581s, 26660 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0234661s, 26660 KB] g=58, 166 evaluated, 165 expanded
[t=0.0237252s, 26660 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0237362s, 26660 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0237444s, 26660 KB] g=62, 176 evaluated, 175 expanded
[t=0.0238476s, 26660 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0238565s, 26660 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0238646s, 26660 KB] g=64, 180 evaluated, 179 expanded
[t=0.0244073s, 26660 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0244171s, 26660 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0244257s, 26660 KB] g=72, 203 evaluated, 202 expanded
[t=0.0244807s, 26660 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0244893s, 26660 KB] g=72, 205 evaluated, 204 expanded
[t=0.0245662s, 26660 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0245744s, 26660 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0245824s, 26660 KB] g=74, 208 evaluated, 207 expanded
[t=0.0252398s, 26660 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0252494s, 26660 KB] g=88, 240 evaluated, 239 expanded
[t=0.0253104s, 26660 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.025319s, 26660 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0253267s, 26660 KB] g=90, 243 evaluated, 242 expanded
[t=0.0253967s, 26660 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0254049s, 26660 KB] g=94, 247 evaluated, 246 expanded
[t=0.0254231s, 26660 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0254312s, 26660 KB] g=95, 248 evaluated, 247 expanded
[t=0.0254456s, 26660 KB] Solution found!
[t=0.0254554s, 26660 KB] Actual search time: 0.00703532s
unstack b10 b22 (1)
put-down b10 (1)
unstack b8 b1 (1)
put-down b8 (1)
unstack b22 b14 (1)
stack b22 b10 (1)
unstack b1 b19 (1)
put-down b1 (1)
unstack b14 b5 (1)
put-down b14 (1)
unstack b5 b12 (1)
put-down b5 (1)
pick-up b14 (1)
stack b14 b12 (1)
unstack b19 b16 (1)
put-down b19 (1)
unstack b16 b6 (1)
put-down b16 (1)
unstack b6 b9 (1)
put-down b6 (1)
unstack b9 b4 (1)
put-down b9 (1)
unstack b4 b2 (1)
stack b4 b9 (1)
pick-up b1 (1)
stack b1 b4 (1)
unstack b2 b15 (1)
put-down b2 (1)
unstack b15 b7 (1)
put-down b15 (1)
pick-up b5 (1)
stack b5 b2 (1)
unstack b7 b21 (1)
stack b7 b6 (1)
unstack b21 b13 (1)
put-down b21 (1)
unstack b13 b18 (1)
put-down b13 (1)
unstack b18 b11 (1)
stack b18 b21 (1)
unstack b11 b3 (1)
stack b11 b19 (1)
unstack b3 b17 (1)
stack b3 b11 (1)
unstack b17 b20 (1)
stack b17 b15 (1)
pick-up b20 (1)
stack b20 b22 (1)
unstack b3 b11 (1)
put-down b3 (1)
unstack b11 b19 (1)
put-down b11 (1)
pick-up b19 (1)
stack b19 b7 (1)
pick-up b11 (1)
stack b11 b19 (1)
pick-up b3 (1)
stack b3 b11 (1)
unstack b5 b2 (1)
put-down b5 (1)
pick-up b2 (1)
stack b2 b20 (1)
pick-up b5 (1)
stack b5 b2 (1)
unstack b1 b4 (1)
put-down b1 (1)
unstack b4 b9 (1)
put-down b4 (1)
pick-up b9 (1)
stack b9 b13 (1)
pick-up b4 (1)
stack b4 b9 (1)
pick-up b1 (1)
stack b1 b4 (1)
unstack b3 b11 (1)
put-down b3 (1)
unstack b11 b19 (1)
put-down b11 (1)
pick-up b3 (1)
stack b3 b11 (1)
unstack b19 b7 (1)
put-down b19 (1)
unstack b7 b6 (1)
put-down b7 (1)
pick-up b6 (1)
stack b6 b17 (1)
pick-up b7 (1)
stack b7 b6 (1)
pick-up b19 (1)
stack b19 b7 (1)
unstack b3 b11 (1)
put-down b3 (1)
pick-up b11 (1)
stack b11 b19 (1)
pick-up b3 (1)
stack b3 b11 (1)
[t=0.025464s, 26660 KB] Plan length: 96 step(s).
[t=0.025464s, 26660 KB] Plan cost: 96
[t=0.025464s, 26660 KB] Expanded 248 state(s).
[t=0.025464s, 26660 KB] Reopened 0 state(s).
[t=0.025464s, 26660 KB] Evaluated 249 state(s).
[t=0.025464s, 26660 KB] Evaluations: 498
[t=0.025464s, 26660 KB] Generated 2514 state(s).
[t=0.025464s, 26660 KB] Dead ends: 0 state(s).
[t=0.025464s, 26660 KB] Number of registered states: 249
[t=0.025464s, 26660 KB] Int hash set load factor: 249/256 = 0.972656
[t=0.025464s, 26660 KB] Int hash set resizes: 8
[t=0.025464s, 26660 KB] Search time: 0.00707998s
[t=0.025464s, 26660 KB] Total time: 0.025464s
Solution found.
Peak memory: 26660 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.14s
