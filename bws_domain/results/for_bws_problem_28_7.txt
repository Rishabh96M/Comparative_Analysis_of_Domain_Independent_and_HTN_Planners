INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py ../bws_domain/bws_domain_actions.pddl ../bws_domain/problem_size_28/bws_problem_28_7.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.009s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.014s wall-clock]
2550 relevant atoms
1708 auxiliary atoms
4258 final queue length
7455 total queue pushes
Completing instantiation... [0.030s CPU, 0.024s wall-clock]
Instantiating: [0.040s CPU, 0.040s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
29 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.009s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.040s CPU, 0.039s wall-clock]
2324 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
56 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.017s wall-clock]
Reordering and filtering variables...
57 of 57 variables necessary.
29 of 57 mutex groups necessary.
1568 of 1568 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.009s wall-clock]
Translator variables: 57
Translator derived variables: 0
Translator facts: 870
Translator goal facts: 28
Translator mutex groups: 29
Translator total mutex groups size: 841
Translator operators: 1568
Translator axioms: 0
Translator task size: 13472
Translator peak memory: 40316 KB
Writing output... [0.010s CPU, 0.008s wall-clock]
Done! [0.130s CPU, 0.134s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=1.9946e-05s, 24488 KB] reading input...
[t=0.00431851s, 26076 KB] done reading input!
[t=0.00516564s, 26472 KB] Initializing landmark count heuristic...
[t=0.00519395s, 26472 KB] Generating landmark graph...
[t=0.00527334s, 26604 KB] Building a landmark graph with reasonable orders.
[t=0.00541904s, 26604 KB] Initializing Exploration...
[t=0.00584325s, 27016 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.028456s, 27680 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0285442s, 27680 KB] Landmarks generation time: 0.0232746s
[t=0.0285658s, 27680 KB] Discovered 130 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0285825s, 27680 KB] 624 edges
[t=0.0285924s, 27680 KB] approx. reasonable orders
[t=0.0289857s, 27680 KB] approx. obedient reasonable orders
[t=0.0290323s, 27680 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0290567s, 27680 KB] Landmarks generation time: 0.0238611s
[t=0.0290663s, 27680 KB] Discovered 130 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0290739s, 27680 KB] 628 edges
[t=0.0290823s, 27680 KB] Landmark graph generation time: 0.0238956s
[t=0.0290911s, 27680 KB] Landmark graph contains 130 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0290991s, 27680 KB] Landmark graph contains 628 orderings.
[t=0.0295963s, 27704 KB] Simplifying 6216 unary operators... done! [4704 unary operators]
[t=0.0314403s, 27836 KB] time to simplify: 0.00197275s
[t=0.0316587s, 27836 KB] Initializing additive heuristic...
[t=0.0316793s, 27836 KB] Initializing FF heuristic...
[t=0.0317352s, 27836 KB] Building successor generator...done!
[t=0.031994s, 27836 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0320029s, 27836 KB] time for successor generation creation: 0.00023021s
[t=0.0320153s, 27836 KB] Variables: 57
[t=0.0320236s, 27836 KB] FactPairs: 870
[t=0.0320316s, 27836 KB] Bytes per state: 24
[t=0.0321162s, 27836 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.032149s, 27836 KB] 57 initial landmarks, 28 goal landmarks
[t=0.0322132s, 27836 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 73
[t=0.0322223s, 27836 KB] New best heuristic value for ff(transform = adapt_costs(one)): 52
[t=0.0322311s, 27836 KB] g=0, 1 evaluated, 0 expanded
[t=0.0322452s, 27836 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 73
[t=0.032254s, 27836 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 52
[t=0.0325388s, 27836 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 72
[t=0.0325488s, 27836 KB] g=2, 8 evaluated, 7 expanded
[t=0.0326977s, 27836 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 71
[t=0.032708s, 27836 KB] New best heuristic value for ff(transform = adapt_costs(one)): 51
[t=0.0327187s, 27836 KB] g=2, 11 evaluated, 10 expanded
[t=0.0329173s, 27836 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 70
[t=0.0329257s, 27836 KB] g=4, 16 evaluated, 15 expanded
[t=0.0336663s, 27836 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 69
[t=0.0336943s, 27836 KB] g=6, 34 evaluated, 33 expanded
[t=0.033866s, 27836 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 68
[t=0.0338834s, 27836 KB] New best heuristic value for ff(transform = adapt_costs(one)): 50
[t=0.0338958s, 27836 KB] g=6, 37 evaluated, 36 expanded
[t=0.0342313s, 27836 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 67
[t=0.0342472s, 27836 KB] g=8, 43 evaluated, 42 expanded
[t=0.0343684s, 27836 KB] New best heuristic value for ff(transform = adapt_costs(one)): 49
[t=0.034383s, 27836 KB] g=8, 45 evaluated, 44 expanded
[t=0.0348694s, 27836 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 66
[t=0.0348986s, 27836 KB] g=10, 55 evaluated, 54 expanded
[t=0.0352061s, 27836 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 65
[t=0.0352253s, 27836 KB] g=13, 62 evaluated, 61 expanded
[t=0.0354295s, 27836 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 62
[t=0.0354437s, 27836 KB] New best heuristic value for ff(transform = adapt_costs(one)): 48
[t=0.0354521s, 27836 KB] g=16, 67 evaluated, 66 expanded
[t=0.0355354s, 27836 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 61
[t=0.0355453s, 27836 KB] g=17, 69 evaluated, 68 expanded
[t=0.035592s, 27836 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.0356007s, 27836 KB] New best heuristic value for ff(transform = adapt_costs(one)): 47
[t=0.0356086s, 27836 KB] g=18, 70 evaluated, 69 expanded
[t=0.0358696s, 27836 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 57
[t=0.0358789s, 27836 KB] New best heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0358872s, 27836 KB] g=20, 77 evaluated, 76 expanded
[t=0.0361448s, 27836 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0361537s, 27836 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0361616s, 27836 KB] g=22, 84 evaluated, 83 expanded
[t=0.0363843s, 27836 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.036393s, 27836 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.036401s, 27836 KB] g=24, 90 evaluated, 89 expanded
[t=0.0369739s, 27836 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0369859s, 27836 KB] g=29, 105 evaluated, 104 expanded
[t=0.0370346s, 27836 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0370433s, 27836 KB] g=30, 106 evaluated, 105 expanded
[t=0.0371623s, 27836 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0371711s, 27836 KB] g=31, 109 evaluated, 108 expanded
[t=0.0374285s, 27836 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0374378s, 27836 KB] g=32, 116 evaluated, 115 expanded
[t=0.0375888s, 27836 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0375974s, 27836 KB] g=33, 120 evaluated, 119 expanded
[t=0.0379636s, 27836 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0379728s, 27836 KB] g=36, 130 evaluated, 129 expanded
[t=0.0380547s, 27836 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0380633s, 27836 KB] g=37, 132 evaluated, 131 expanded
[t=0.0381102s, 27836 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0381188s, 27836 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0381267s, 27836 KB] g=38, 133 evaluated, 132 expanded
[t=0.0383169s, 27836 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0383254s, 27836 KB] g=39, 138 evaluated, 137 expanded
[t=0.0383722s, 27836 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0383806s, 27836 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0383885s, 27836 KB] g=40, 139 evaluated, 138 expanded
[t=0.03857s, 27836 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0385872s, 27836 KB] g=41, 142 evaluated, 141 expanded
[t=0.0388559s, 27836 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0388652s, 27836 KB] g=43, 149 evaluated, 148 expanded
[t=0.0389123s, 27836 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0389276s, 27836 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0389462s, 27836 KB] g=44, 150 evaluated, 149 expanded
[t=0.039247s, 27836 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0392564s, 27836 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0392643s, 27836 KB] g=46, 158 evaluated, 157 expanded
[t=0.040386s, 27836 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0403966s, 27836 KB] g=50, 189 evaluated, 188 expanded
[t=0.0407049s, 27836 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0407158s, 27836 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0407243s, 27836 KB] g=52, 197 evaluated, 196 expanded
[t=0.0418932s, 27836 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0419029s, 27836 KB] g=57, 230 evaluated, 229 expanded
[t=0.0419495s, 27836 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0419578s, 27836 KB] g=58, 231 evaluated, 230 expanded
[t=0.0422811s, 27836 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0422903s, 27836 KB] g=60, 240 evaluated, 239 expanded
[t=0.0423708s, 27836 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0423794s, 27836 KB] g=60, 242 evaluated, 241 expanded
[t=0.0429203s, 27836 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.04293s, 27836 KB] g=62, 257 evaluated, 256 expanded
[t=0.0430457s, 27836 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0430541s, 27836 KB] g=62, 260 evaluated, 259 expanded
[t=0.0434421s, 27836 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0434511s, 27836 KB] g=64, 271 evaluated, 270 expanded
[t=0.043976s, 27836 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0439852s, 27836 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0439927s, 27836 KB] g=66, 286 evaluated, 285 expanded
[t=0.0442092s, 27836 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0442176s, 27836 KB] g=66, 292 evaluated, 291 expanded
[t=0.0444323s, 27836 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0444408s, 27836 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0444486s, 27836 KB] g=68, 298 evaluated, 297 expanded
[t=0.0453847s, 27836 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0453952s, 27836 KB] g=74, 324 evaluated, 323 expanded
[t=0.045692s, 27836 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0457033s, 27836 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0457121s, 27836 KB] g=76, 332 evaluated, 331 expanded
[t=0.0459346s, 27836 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0459465s, 27836 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0459553s, 27836 KB] g=78, 338 evaluated, 337 expanded
[t=0.0462146s, 27836 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0462237s, 27836 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0462317s, 27836 KB] g=80, 345 evaluated, 344 expanded
[t=0.0464177s, 27836 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.046426s, 27836 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0464336s, 27836 KB] g=80, 350 evaluated, 349 expanded
[t=0.0466862s, 27836 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0467057s, 27836 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0467135s, 27836 KB] g=82, 357 evaluated, 356 expanded
[t=0.0469057s, 27836 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0469148s, 27836 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0469242s, 27836 KB] g=84, 362 evaluated, 361 expanded
[t=0.0473963s, 27836 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0474213s, 27836 KB] g=87, 375 evaluated, 374 expanded
[t=0.0474659s, 27836 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0474746s, 27836 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0474825s, 27836 KB] g=88, 376 evaluated, 375 expanded
[t=0.0476248s, 27836 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0476336s, 27836 KB] g=89, 380 evaluated, 379 expanded
[t=0.0476762s, 27836 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0476847s, 27836 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0476927s, 27836 KB] g=90, 381 evaluated, 380 expanded
[t=0.0477993s, 27836 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0478083s, 27836 KB] g=91, 384 evaluated, 383 expanded
[t=0.0478524s, 27836 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0478716s, 27836 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0478795s, 27836 KB] g=92, 385 evaluated, 384 expanded
[t=0.0480662s, 27836 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0480778s, 27836 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0480859s, 27836 KB] g=94, 390 evaluated, 389 expanded
[t=0.0486053s, 27836 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0486317s, 27836 KB] g=98, 406 evaluated, 405 expanded
[t=0.0487618s, 27836 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0487712s, 27836 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0487788s, 27836 KB] g=100, 410 evaluated, 409 expanded
[t=0.0493955s, 27836 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0494049s, 27836 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0494125s, 27836 KB] g=108, 433 evaluated, 432 expanded
[t=0.0494713s, 27836 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0494824s, 27836 KB] g=108, 435 evaluated, 434 expanded
[t=0.0495659s, 27836 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0495745s, 27836 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0495821s, 27836 KB] g=110, 438 evaluated, 437 expanded
[t=0.0497735s, 27836 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.049782s, 27836 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0497898s, 27836 KB] g=118, 447 evaluated, 446 expanded
[t=0.0498165s, 27836 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0498248s, 27836 KB] g=118, 448 evaluated, 447 expanded
[t=0.0498443s, 27836 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0498527s, 27836 KB] g=119, 449 evaluated, 448 expanded
[t=0.049869s, 27836 KB] Solution found!
[t=0.0498795s, 27836 KB] Actual search time: 0.0177277s
unstack b28 b10 (1)
stack b28 b16 (1)
unstack b1 b8 (1)
put-down b1 (1)
unstack b8 b24 (1)
stack b8 b9 (1)
pick-up b24 (1)
stack b24 b10 (1)
unstack b7 b19 (1)
put-down b7 (1)
unstack b28 b16 (1)
put-down b28 (1)
unstack b16 b13 (1)
put-down b16 (1)
unstack b13 b12 (1)
put-down b13 (1)
unstack b12 b6 (1)
stack b12 b8 (1)
pick-up b1 (1)
stack b1 b13 (1)
pick-up b19 (1)
stack b19 b6 (1)
pick-up b28 (1)
stack b28 b16 (1)
unstack b24 b10 (1)
put-down b24 (1)
unstack b10 b11 (1)
put-down b10 (1)
unstack b11 b2 (1)
put-down b11 (1)
pick-up b10 (1)
stack b10 b11 (1)
unstack b2 b5 (1)
put-down b2 (1)
unstack b5 b14 (1)
put-down b5 (1)
unstack b14 b3 (1)
put-down b14 (1)
unstack b3 b21 (1)
stack b3 b24 (1)
unstack b21 b22 (1)
put-down b21 (1)
unstack b22 b17 (1)
stack b22 b28 (1)
pick-up b5 (1)
stack b5 b17 (1)
unstack b3 b24 (1)
put-down b3 (1)
pick-up b24 (1)
stack b24 b10 (1)
pick-up b3 (1)
stack b3 b24 (1)
unstack b5 b17 (1)
put-down b5 (1)
unstack b17 b25 (1)
put-down b17 (1)
unstack b25 b15 (1)
put-down b25 (1)
pick-up b17 (1)
stack b17 b25 (1)
pick-up b5 (1)
stack b5 b17 (1)
unstack b15 b27 (1)
put-down b15 (1)
pick-up b27 (1)
stack b27 b7 (1)
pick-up b2 (1)
stack b2 b27 (1)
unstack b12 b8 (1)
put-down b12 (1)
unstack b8 b9 (1)
put-down b8 (1)
unstack b9 b26 (1)
stack b9 b5 (1)
pick-up b12 (1)
stack b12 b8 (1)
unstack b26 b23 (1)
stack b26 b14 (1)
unstack b23 b4 (1)
stack b23 b19 (1)
pick-up b15 (1)
stack b15 b4 (1)
pick-up b21 (1)
stack b21 b23 (1)
unstack b15 b4 (1)
put-down b15 (1)
unstack b4 b20 (1)
stack b4 b1 (1)
unstack b20 b18 (1)
put-down b20 (1)
pick-up b18 (1)
stack b18 b26 (1)
pick-up b15 (1)
stack b15 b4 (1)
unstack b12 b8 (1)
put-down b12 (1)
pick-up b8 (1)
stack b8 b9 (1)
pick-up b12 (1)
stack b12 b8 (1)
unstack b2 b27 (1)
put-down b2 (1)
unstack b27 b7 (1)
put-down b27 (1)
pick-up b7 (1)
stack b7 b20 (1)
pick-up b27 (1)
stack b27 b7 (1)
pick-up b2 (1)
stack b2 b27 (1)
unstack b22 b28 (1)
put-down b22 (1)
unstack b28 b16 (1)
put-down b28 (1)
pick-up b16 (1)
stack b16 b15 (1)
pick-up b28 (1)
stack b28 b16 (1)
pick-up b22 (1)
stack b22 b28 (1)
[t=0.0498887s, 27836 KB] Plan length: 120 step(s).
[t=0.0498887s, 27836 KB] Plan cost: 120
[t=0.0498887s, 27836 KB] Expanded 449 state(s).
[t=0.0498887s, 27836 KB] Reopened 0 state(s).
[t=0.0498887s, 27836 KB] Evaluated 450 state(s).
[t=0.0498887s, 27836 KB] Evaluations: 900
[t=0.0498887s, 27836 KB] Generated 4602 state(s).
[t=0.0498887s, 27836 KB] Dead ends: 0 state(s).
[t=0.0498887s, 27836 KB] Number of registered states: 450
[t=0.0498887s, 27836 KB] Int hash set load factor: 450/512 = 0.878906
[t=0.0498887s, 27836 KB] Int hash set resizes: 9
[t=0.0498887s, 27836 KB] Search time: 0.0177731s
[t=0.0498887s, 27836 KB] Total time: 0.0498887s
Solution found.
Peak memory: 27836 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.21s
