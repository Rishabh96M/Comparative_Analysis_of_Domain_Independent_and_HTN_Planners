INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py ../bws_domain/bws_domain_actions.pddl ../bws_domain/problem_size_27/bws_problem_27_2.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.014s wall-clock]
2378 relevant atoms
1593 auxiliary atoms
3971 final queue length
6943 total queue pushes
Completing instantiation... [0.030s CPU, 0.023s wall-clock]
Instantiating: [0.040s CPU, 0.039s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
28 uncovered facts
Choosing groups: [0.000s CPU, 0.002s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.008s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.040s CPU, 0.039s wall-clock]
2160 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
54 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.016s wall-clock]
Reordering and filtering variables...
55 of 55 variables necessary.
28 of 55 mutex groups necessary.
1458 of 1458 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.009s wall-clock]
Translator variables: 55
Translator derived variables: 0
Translator facts: 812
Translator goal facts: 27
Translator mutex groups: 28
Translator total mutex groups size: 784
Translator operators: 1458
Translator axioms: 0
Translator task size: 12532
Translator peak memory: 39544 KB
Writing output... [0.010s CPU, 0.010s wall-clock]
Done! [0.120s CPU, 0.126s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.0353e-05s, 24488 KB] reading input...
[t=0.00411323s, 25936 KB] done reading input!
[t=0.00493354s, 26332 KB] Initializing landmark count heuristic...
[t=0.00495894s, 26332 KB] Generating landmark graph...
[t=0.0050342s, 26332 KB] Building a landmark graph with reasonable orders.
[t=0.00510641s, 26464 KB] Initializing Exploration...
[t=0.00549271s, 26732 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0262987s, 27788 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0263835s, 27788 KB] Landmarks generation time: 0.0213571s
[t=0.0264041s, 27788 KB] Discovered 130 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0264191s, 27788 KB] 1007 edges
[t=0.0264285s, 27788 KB] approx. reasonable orders
[t=0.0279899s, 27788 KB] approx. obedient reasonable orders
[t=0.0280378s, 27788 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0280479s, 27788 KB] Landmarks generation time: 0.0230873s
[t=0.0280573s, 27788 KB] Discovered 130 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0280686s, 27788 KB] 1025 edges
[t=0.0280791s, 27788 KB] Landmark graph generation time: 0.0231291s
[t=0.0280904s, 27788 KB] Landmark graph contains 130 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0281014s, 27788 KB] Landmark graph contains 1025 orderings.
[t=0.0286693s, 27788 KB] Simplifying 5778 unary operators... done! [4374 unary operators]
[t=0.0300634s, 27788 KB] time to simplify: 0.00148708s
[t=0.030239s, 27788 KB] Initializing additive heuristic...
[t=0.0302576s, 27788 KB] Initializing FF heuristic...
[t=0.0303092s, 27788 KB] Building successor generator...done!
[t=0.0305821s, 27788 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0305914s, 27788 KB] time for successor generation creation: 0.000232819s
[t=0.0306039s, 27788 KB] Variables: 55
[t=0.030612s, 27788 KB] FactPairs: 812
[t=0.0306202s, 27788 KB] Bytes per state: 24
[t=0.0307032s, 27788 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0307351s, 27788 KB] 55 initial landmarks, 27 goal landmarks
[t=0.0308064s, 27788 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 75
[t=0.0308155s, 27788 KB] New best heuristic value for ff(transform = adapt_costs(one)): 52
[t=0.0308235s, 27788 KB] g=0, 1 evaluated, 0 expanded
[t=0.030836s, 27788 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 75
[t=0.0308447s, 27788 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 52
[t=0.0309658s, 27788 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 73
[t=0.0309745s, 27788 KB] New best heuristic value for ff(transform = adapt_costs(one)): 51
[t=0.0309824s, 27788 KB] g=2, 4 evaluated, 3 expanded
[t=0.0310613s, 27788 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 72
[t=0.0310698s, 27788 KB] g=4, 6 evaluated, 5 expanded
[t=0.0311127s, 27788 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 71
[t=0.0311211s, 27788 KB] g=5, 7 evaluated, 6 expanded
[t=0.0313313s, 27788 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 70
[t=0.0313401s, 27788 KB] g=8, 13 evaluated, 12 expanded
[t=0.0315s, 27788 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 69
[t=0.031511s, 27788 KB] g=9, 17 evaluated, 16 expanded
[t=0.03159s, 27788 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 68
[t=0.031599s, 27788 KB] g=11, 19 evaluated, 18 expanded
[t=0.0317099s, 27788 KB] New best heuristic value for ff(transform = adapt_costs(one)): 50
[t=0.031719s, 27788 KB] g=13, 22 evaluated, 21 expanded
[t=0.0317617s, 27788 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 65
[t=0.0317702s, 27788 KB] New best heuristic value for ff(transform = adapt_costs(one)): 49
[t=0.031778s, 27788 KB] g=14, 23 evaluated, 22 expanded
[t=0.0318541s, 27788 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 64
[t=0.0318626s, 27788 KB] g=15, 25 evaluated, 24 expanded
[t=0.0323287s, 27788 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 62
[t=0.0323422s, 27788 KB] New best heuristic value for ff(transform = adapt_costs(one)): 47
[t=0.0323509s, 27788 KB] g=18, 39 evaluated, 38 expanded
[t=0.0326222s, 27788 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.032631s, 27788 KB] New best heuristic value for ff(transform = adapt_costs(one)): 46
[t=0.0326389s, 27788 KB] g=20, 47 evaluated, 46 expanded
[t=0.0330999s, 27788 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 58
[t=0.033109s, 27788 KB] g=23, 60 evaluated, 59 expanded
[t=0.0331602s, 27788 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0331699s, 27788 KB] g=24, 61 evaluated, 60 expanded
[t=0.0333854s, 27788 KB] New best heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0333942s, 27788 KB] g=25, 67 evaluated, 66 expanded
[t=0.0334398s, 27788 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0334486s, 27788 KB] New best heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.0334567s, 27788 KB] g=26, 68 evaluated, 67 expanded
[t=0.0337758s, 27788 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0337847s, 27788 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0337926s, 27788 KB] g=28, 77 evaluated, 76 expanded
[t=0.0340767s, 27788 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0340866s, 27788 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.034095s, 27788 KB] g=30, 85 evaluated, 84 expanded
[t=0.0343208s, 27788 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0343296s, 27788 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0343377s, 27788 KB] g=32, 91 evaluated, 90 expanded
[t=0.0345551s, 27788 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.034564s, 27788 KB] g=34, 97 evaluated, 96 expanded
[t=0.0348107s, 27788 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0348196s, 27788 KB] g=36, 104 evaluated, 103 expanded
[t=0.0348987s, 27788 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0349074s, 27788 KB] g=36, 106 evaluated, 105 expanded
[t=0.0368356s, 27788 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0368528s, 27788 KB] g=43, 161 evaluated, 160 expanded
[t=0.0370761s, 27788 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0370859s, 27788 KB] g=45, 167 evaluated, 166 expanded
[t=0.0377579s, 27788 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0377679s, 27788 KB] g=48, 186 evaluated, 185 expanded
[t=0.038485s, 27788 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0384946s, 27788 KB] g=52, 207 evaluated, 206 expanded
[t=0.0385378s, 27788 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0385464s, 27788 KB] g=53, 208 evaluated, 207 expanded
[t=0.0438403s, 27788 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0438618s, 27788 KB] g=60, 361 evaluated, 360 expanded
[t=0.0446389s, 27788 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0446643s, 27788 KB] g=62, 377 evaluated, 376 expanded
[t=0.0449967s, 27788 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0450069s, 27788 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0450191s, 27788 KB] g=64, 385 evaluated, 384 expanded
[t=0.0456918s, 27788 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0457107s, 27788 KB] g=66, 399 evaluated, 398 expanded
[t=0.0459525s, 27788 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0459633s, 27788 KB] g=66, 405 evaluated, 404 expanded
[t=0.0466285s, 27788 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0466443s, 27788 KB] g=68, 420 evaluated, 419 expanded
[t=0.0471693s, 27788 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0471832s, 27788 KB] g=68, 434 evaluated, 433 expanded
[t=0.0474181s, 27788 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0474298s, 27788 KB] g=70, 440 evaluated, 439 expanded
[t=0.0481444s, 27788 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0481544s, 27788 KB] g=70, 460 evaluated, 459 expanded
[t=0.0482018s, 27788 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0482112s, 27788 KB] g=72, 461 evaluated, 460 expanded
[t=0.048895s, 27788 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0489047s, 27788 KB] g=74, 480 evaluated, 479 expanded
[t=0.0490661s, 27788 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0490808s, 27788 KB] g=72, 484 evaluated, 483 expanded
[t=0.0496787s, 27788 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0496887s, 27788 KB] g=74, 500 evaluated, 499 expanded
[t=0.0497747s, 27788 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0497839s, 27788 KB] g=74, 502 evaluated, 501 expanded
[t=0.0503276s, 27788 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0503384s, 27788 KB] g=76, 516 evaluated, 515 expanded
[t=0.0506748s, 27788 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0506936s, 27788 KB] g=78, 525 evaluated, 524 expanded
[t=0.0507431s, 27788 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0507522s, 27788 KB] g=79, 526 evaluated, 525 expanded
[t=0.0516646s, 27788 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0516802s, 27788 KB] g=83, 550 evaluated, 549 expanded
[t=0.0517274s, 27788 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.051736s, 27788 KB] g=84, 551 evaluated, 550 expanded
[t=0.0524562s, 27788 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0524758s, 27788 KB] g=86, 571 evaluated, 570 expanded
[t=0.053035s, 27788 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0530479s, 27788 KB] g=88, 586 evaluated, 585 expanded
[t=0.0531285s, 27788 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0531372s, 27788 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0531511s, 27788 KB] g=88, 588 evaluated, 587 expanded
[t=0.0535076s, 27788 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0535176s, 27788 KB] g=90, 598 evaluated, 597 expanded
[t=0.0536s, 27788 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0536097s, 27788 KB] g=90, 600 evaluated, 599 expanded
[t=0.0536912s, 27788 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0537101s, 27788 KB] g=91, 602 evaluated, 601 expanded
[t=0.0538014s, 27788 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0538099s, 27788 KB] g=92, 604 evaluated, 603 expanded
[t=0.0542333s, 27788 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0542429s, 27788 KB] g=94, 616 evaluated, 615 expanded
[t=0.0542865s, 27788 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0542949s, 27788 KB] g=95, 617 evaluated, 616 expanded
[t=0.0545732s, 27788 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0545831s, 27788 KB] g=96, 625 evaluated, 624 expanded
[t=0.0546582s, 27788 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0546667s, 27788 KB] g=97, 627 evaluated, 626 expanded
[t=0.0550185s, 27788 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0550282s, 27788 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0550363s, 27788 KB] g=100, 637 evaluated, 636 expanded
[t=0.0550789s, 27788 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0550872s, 27788 KB] g=101, 638 evaluated, 637 expanded
[t=0.0551294s, 27788 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0551375s, 27788 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0551451s, 27788 KB] g=102, 639 evaluated, 638 expanded
[t=0.0578416s, 27788 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0578549s, 27788 KB] g=110, 718 evaluated, 717 expanded
[t=0.0581328s, 27788 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0581429s, 27788 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0581506s, 27788 KB] g=112, 726 evaluated, 725 expanded
[t=0.0598942s, 27788 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.059905s, 27788 KB] g=120, 777 evaluated, 776 expanded
[t=0.0604419s, 27788 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0604515s, 27788 KB] g=124, 793 evaluated, 792 expanded
[t=0.0605926s, 27788 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0606012s, 27788 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.060609s, 27788 KB] g=126, 797 evaluated, 796 expanded
[t=0.0651181s, 27788 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0651434s, 27788 KB] g=142, 927 evaluated, 926 expanded
[t=0.0660982s, 27788 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0661155s, 27788 KB] g=150, 954 evaluated, 953 expanded
[t=0.0664277s, 27788 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0664379s, 27788 KB] g=154, 963 evaluated, 962 expanded
[t=0.0665506s, 27788 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0665657s, 27788 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0665741s, 27788 KB] g=156, 966 evaluated, 965 expanded
[t=0.0698453s, 27788 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0698638s, 27788 KB] g=186, 1072 evaluated, 1071 expanded
[t=0.0701074s, 27788 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0701165s, 27788 KB] g=190, 1081 evaluated, 1080 expanded
[t=0.0702042s, 27788 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0702131s, 27788 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0702208s, 27788 KB] g=192, 1084 evaluated, 1083 expanded
[t=0.0706001s, 27788 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0706098s, 27788 KB] g=204, 1101 evaluated, 1100 expanded
[t=0.0706879s, 27788 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0706968s, 27788 KB] g=208, 1105 evaluated, 1104 expanded
[t=0.0707169s, 27788 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0707252s, 27788 KB] g=209, 1106 evaluated, 1105 expanded
[t=0.0707416s, 27788 KB] Solution found!
[t=0.0707549s, 27788 KB] Actual search time: 0.0400174s
unstack b2 b25 (1)
stack b2 b7 (1)
unstack b25 b14 (1)
put-down b25 (1)
unstack b14 b3 (1)
put-down b14 (1)
unstack b3 b27 (1)
put-down b3 (1)
unstack b27 b1 (1)
put-down b27 (1)
unstack b1 b17 (1)
put-down b1 (1)
unstack b17 b12 (1)
put-down b17 (1)
unstack b12 b8 (1)
put-down b12 (1)
pick-up b14 (1)
stack b14 b17 (1)
unstack b8 b9 (1)
stack b8 b25 (1)
unstack b2 b7 (1)
put-down b2 (1)
unstack b7 b4 (1)
stack b7 b8 (1)
unstack b4 b23 (1)
put-down b4 (1)
pick-up b12 (1)
stack b12 b4 (1)
pick-up b2 (1)
stack b2 b7 (1)
unstack b23 b18 (1)
stack b23 b9 (1)
unstack b18 b24 (1)
put-down b18 (1)
unstack b24 b26 (1)
put-down b24 (1)
pick-up b1 (1)
stack b1 b24 (1)
unstack b26 b10 (1)
put-down b26 (1)
unstack b1 b24 (1)
put-down b1 (1)
unstack b10 b13 (1)
put-down b10 (1)
unstack b13 b15 (1)
put-down b13 (1)
pick-up b10 (1)
stack b10 b15 (1)
pick-up b1 (1)
stack b1 b24 (1)
unstack b23 b9 (1)
put-down b23 (1)
unstack b1 b24 (1)
put-down b1 (1)
unstack b10 b15 (1)
put-down b10 (1)
unstack b15 b11 (1)
put-down b15 (1)
unstack b11 b22 (1)
put-down b11 (1)
unstack b22 b20 (1)
put-down b22 (1)
unstack b20 b6 (1)
put-down b20 (1)
unstack b6 b5 (1)
stack b6 b23 (1)
pick-up b13 (1)
stack b13 b6 (1)
pick-up b27 (1)
stack b27 b5 (1)
pick-up b9 (1)
stack b9 b22 (1)
pick-up b1 (1)
stack b1 b24 (1)
pick-up b10 (1)
stack b10 b15 (1)
pick-up b26 (1)
stack b26 b10 (1)
unstack b1 b24 (1)
put-down b1 (1)
unstack b27 b5 (1)
put-down b27 (1)
unstack b5 b16 (1)
stack b5 b3 (1)
unstack b16 b19 (1)
stack b16 b26 (1)
unstack b19 b21 (1)
stack b19 b20 (1)
pick-up b21 (1)
stack b21 b2 (1)
pick-up b1 (1)
stack b1 b24 (1)
pick-up b18 (1)
stack b18 b16 (1)
pick-up b27 (1)
stack b27 b5 (1)
unstack b1 b24 (1)
put-down b1 (1)
pick-up b24 (1)
stack b24 b19 (1)
pick-up b1 (1)
stack b1 b24 (1)
unstack b27 b5 (1)
put-down b27 (1)
unstack b5 b3 (1)
put-down b5 (1)
pick-up b3 (1)
stack b3 b21 (1)
pick-up b5 (1)
stack b5 b3 (1)
pick-up b27 (1)
stack b27 b5 (1)
unstack b13 b6 (1)
put-down b13 (1)
unstack b6 b23 (1)
put-down b6 (1)
pick-up b13 (1)
stack b13 b6 (1)
pick-up b23 (1)
stack b23 b9 (1)
unstack b13 b6 (1)
put-down b13 (1)
pick-up b6 (1)
stack b6 b23 (1)
pick-up b13 (1)
stack b13 b6 (1)
unstack b18 b16 (1)
put-down b18 (1)
unstack b16 b26 (1)
put-down b16 (1)
unstack b26 b10 (1)
put-down b26 (1)
pick-up b16 (1)
stack b16 b26 (1)
pick-up b18 (1)
stack b18 b16 (1)
unstack b10 b15 (1)
put-down b10 (1)
pick-up b15 (1)
stack b15 b11 (1)
pick-up b10 (1)
stack b10 b15 (1)
unstack b18 b16 (1)
put-down b18 (1)
unstack b16 b26 (1)
put-down b16 (1)
pick-up b18 (1)
stack b18 b16 (1)
pick-up b26 (1)
stack b26 b10 (1)
unstack b18 b16 (1)
put-down b18 (1)
pick-up b16 (1)
stack b16 b26 (1)
pick-up b18 (1)
stack b18 b16 (1)
unstack b27 b5 (1)
put-down b27 (1)
unstack b5 b3 (1)
put-down b5 (1)
pick-up b27 (1)
stack b27 b5 (1)
unstack b3 b21 (1)
put-down b3 (1)
unstack b21 b2 (1)
put-down b21 (1)
pick-up b3 (1)
stack b3 b21 (1)
unstack b27 b5 (1)
put-down b27 (1)
pick-up b5 (1)
stack b5 b3 (1)
pick-up b27 (1)
stack b27 b5 (1)
unstack b2 b7 (1)
put-down b2 (1)
unstack b7 b8 (1)
put-down b7 (1)
pick-up b2 (1)
stack b2 b7 (1)
unstack b8 b25 (1)
put-down b8 (1)
pick-up b25 (1)
stack b25 b18 (1)
pick-up b8 (1)
stack b8 b25 (1)
unstack b2 b7 (1)
put-down b2 (1)
pick-up b7 (1)
stack b7 b8 (1)
pick-up b2 (1)
stack b2 b7 (1)
unstack b27 b5 (1)
put-down b27 (1)
unstack b5 b3 (1)
put-down b5 (1)
pick-up b27 (1)
stack b27 b5 (1)
unstack b3 b21 (1)
put-down b3 (1)
pick-up b21 (1)
stack b21 b2 (1)
pick-up b3 (1)
stack b3 b21 (1)
unstack b27 b5 (1)
put-down b27 (1)
pick-up b5 (1)
stack b5 b3 (1)
pick-up b27 (1)
stack b27 b5 (1)
[t=0.0707645s, 27788 KB] Plan length: 210 step(s).
[t=0.0707645s, 27788 KB] Plan cost: 210
[t=0.0707645s, 27788 KB] Expanded 1106 state(s).
[t=0.0707645s, 27788 KB] Reopened 0 state(s).
[t=0.0707645s, 27788 KB] Evaluated 1107 state(s).
[t=0.0707645s, 27788 KB] Evaluations: 2214
[t=0.0707645s, 27788 KB] Generated 12482 state(s).
[t=0.0707645s, 27788 KB] Dead ends: 0 state(s).
[t=0.0707645s, 27788 KB] Number of registered states: 1107
[t=0.0707645s, 27788 KB] Int hash set load factor: 1107/2048 = 0.540527
[t=0.0707645s, 27788 KB] Int hash set resizes: 11
[t=0.0707645s, 27788 KB] Search time: 0.0400617s
[t=0.0707645s, 27788 KB] Total time: 0.0707645s
Solution found.
Peak memory: 27788 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.23s
