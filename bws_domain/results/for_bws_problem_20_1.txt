INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py ../bws_domain/bws_domain_actions.pddl ../bws_domain/problem_size_20/bws_problem_20_1.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.000s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.000s CPU, 0.008s wall-clock]
1342 relevant atoms
900 auxiliary atoms
2242 final queue length
3885 total queue pushes
Completing instantiation... [0.020s CPU, 0.013s wall-clock]
Instantiating: [0.020s CPU, 0.022s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
21 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.005s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.020s wall-clock]
1180 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
40 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.011s wall-clock]
Reordering and filtering variables...
41 of 41 variables necessary.
21 of 41 mutex groups necessary.
800 of 800 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.005s wall-clock]
Translator variables: 41
Translator derived variables: 0
Translator facts: 462
Translator goal facts: 20
Translator mutex groups: 21
Translator total mutex groups size: 441
Translator operators: 800
Translator axioms: 0
Translator task size: 6904
Translator peak memory: 35944 KB
Writing output... [0.010s CPU, 0.005s wall-clock]
Done! [0.070s CPU, 0.073s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=1.6998e-05s, 24488 KB] reading input...
[t=0.00204306s, 25180 KB] done reading input!
[t=0.00278726s, 25444 KB] Initializing landmark count heuristic...
[t=0.00281275s, 25444 KB] Generating landmark graph...
[t=0.0028653s, 25576 KB] Building a landmark graph with reasonable orders.
[t=0.0029144s, 25576 KB] Initializing Exploration...
[t=0.00313691s, 25744 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0120415s, 26276 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0121417s, 26276 KB] Landmarks generation time: 0.00927688s
[t=0.012155s, 26276 KB] Discovered 96 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0121727s, 26276 KB] 476 edges
[t=0.0121828s, 26276 KB] approx. reasonable orders
[t=0.0134656s, 26276 KB] approx. obedient reasonable orders
[t=0.013491s, 26276 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0134999s, 26276 KB] Landmarks generation time: 0.0106839s
[t=0.0135086s, 26276 KB] Discovered 96 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0135162s, 26276 KB] 500 edges
[t=0.0135242s, 26276 KB] Landmark graph generation time: 0.0107183s
[t=0.0135324s, 26276 KB] Landmark graph contains 96 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.01354s, 26276 KB] Landmark graph contains 500 orderings.
[t=0.0138318s, 26276 KB] Simplifying 3160 unary operators... done! [2400 unary operators]
[t=0.0145382s, 26276 KB] time to simplify: 0.000757003s
[t=0.0146405s, 26276 KB] Initializing additive heuristic...
[t=0.0146533s, 26276 KB] Initializing FF heuristic...
[t=0.0146997s, 26276 KB] Building successor generator...done!
[t=0.0148472s, 26276 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0148552s, 26276 KB] time for successor generation creation: 0.00011803s
[t=0.0148661s, 26276 KB] Variables: 41
[t=0.0148742s, 26276 KB] FactPairs: 462
[t=0.0148822s, 26276 KB] Bytes per state: 16
[t=0.0149655s, 26276 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0149968s, 26276 KB] 41 initial landmarks, 20 goal landmarks
[t=0.0150412s, 26276 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0150506s, 26276 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.015059s, 26276 KB] g=0, 1 evaluated, 0 expanded
[t=0.0150718s, 26276 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0150802s, 26276 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0151596s, 26276 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0151688s, 26276 KB] g=1, 4 evaluated, 3 expanded
[t=0.0153271s, 26276 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.015336s, 26276 KB] g=3, 11 evaluated, 10 expanded
[t=0.0155095s, 26276 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0155182s, 26276 KB] g=5, 19 evaluated, 18 expanded
[t=0.0157729s, 26276 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0157819s, 26276 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0157899s, 26276 KB] g=8, 31 evaluated, 30 expanded
[t=0.0158431s, 26276 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0158626s, 26276 KB] g=9, 32 evaluated, 31 expanded
[t=0.0159018s, 26276 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0159105s, 26276 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0159185s, 26276 KB] g=10, 33 evaluated, 32 expanded
[t=0.0160817s, 26276 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0160905s, 26276 KB] g=12, 40 evaluated, 39 expanded
[t=0.0164064s, 26276 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0164157s, 26276 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0164236s, 26276 KB] g=14, 55 evaluated, 54 expanded
[t=0.0165756s, 26276 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0165873s, 26276 KB] g=16, 62 evaluated, 61 expanded
[t=0.0166186s, 26276 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0166271s, 26276 KB] g=17, 63 evaluated, 62 expanded
[t=0.0166579s, 26276 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0166664s, 26276 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0166742s, 26276 KB] g=18, 64 evaluated, 63 expanded
[t=0.0167304s, 26276 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0167389s, 26276 KB] g=19, 66 evaluated, 65 expanded
[t=0.0167701s, 26276 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0167786s, 26276 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0167863s, 26276 KB] g=20, 67 evaluated, 66 expanded
[t=0.0169822s, 26276 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0169908s, 26276 KB] g=22, 76 evaluated, 75 expanded
[t=0.0170422s, 26276 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0170509s, 26276 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0170586s, 26276 KB] g=22, 78 evaluated, 77 expanded
[t=0.0172117s, 26276 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0172203s, 26276 KB] g=24, 85 evaluated, 84 expanded
[t=0.0173128s, 26276 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0173214s, 26276 KB] g=24, 89 evaluated, 88 expanded
[t=0.0175751s, 26276 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.017584s, 26276 KB] g=26, 101 evaluated, 100 expanded
[t=0.0177168s, 26276 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0177258s, 26276 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0177336s, 26276 KB] g=28, 107 evaluated, 106 expanded
[t=0.0179068s, 26276 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0179155s, 26276 KB] g=30, 115 evaluated, 114 expanded
[t=0.0180873s, 26276 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0180959s, 26276 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.018104s, 26276 KB] g=32, 123 evaluated, 122 expanded
[t=0.0185498s, 26276 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0185604s, 26276 KB] g=35, 144 evaluated, 143 expanded
[t=0.0185924s, 26276 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0186013s, 26276 KB] g=36, 145 evaluated, 144 expanded
[t=0.0187709s, 26276 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0187797s, 26276 KB] g=38, 153 evaluated, 152 expanded
[t=0.0188295s, 26276 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.018838s, 26276 KB] g=38, 155 evaluated, 154 expanded
[t=0.0191229s, 26276 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0191322s, 26276 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0191402s, 26276 KB] g=40, 169 evaluated, 168 expanded
[t=0.0193085s, 26276 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.019319s, 26276 KB] g=40, 177 evaluated, 176 expanded
[t=0.0193706s, 26276 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0193792s, 26276 KB] g=41, 179 evaluated, 178 expanded
[t=0.0195136s, 26276 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0195225s, 26276 KB] g=43, 185 evaluated, 184 expanded
[t=0.0195744s, 26276 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0195829s, 26276 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0195907s, 26276 KB] g=44, 187 evaluated, 186 expanded
[t=0.0197818s, 26276 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.019792s, 26276 KB] g=46, 196 evaluated, 195 expanded
[t=0.019847s, 26276 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0198562s, 26276 KB] g=46, 198 evaluated, 197 expanded
[t=0.0201182s, 26276 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0201284s, 26276 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0201363s, 26276 KB] g=48, 210 evaluated, 209 expanded
[t=0.0202664s, 26276 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0202753s, 26276 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0202832s, 26276 KB] g=50, 216 evaluated, 215 expanded
[t=0.0203918s, 26276 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0204005s, 26276 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0204084s, 26276 KB] g=52, 221 evaluated, 220 expanded
[t=0.0204959s, 26276 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0205046s, 26276 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0205123s, 26276 KB] g=54, 225 evaluated, 224 expanded
[t=0.0206196s, 26276 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0206282s, 26276 KB] g=58, 230 evaluated, 229 expanded
[t=0.0206963s, 26276 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.020705s, 26276 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.020713s, 26276 KB] g=60, 233 evaluated, 232 expanded
[t=0.0217973s, 26276 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0218067s, 26276 KB] g=74, 287 evaluated, 286 expanded
[t=0.0218917s, 26276 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0219001s, 26276 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0219079s, 26276 KB] g=76, 291 evaluated, 290 expanded
[t=0.0220888s, 26276 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0220975s, 26276 KB] g=80, 300 evaluated, 299 expanded
[t=0.0221622s, 26276 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0221707s, 26276 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0221784s, 26276 KB] g=82, 303 evaluated, 302 expanded
[t=0.0266881s, 26276 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.026729s, 26276 KB] g=116, 534 evaluated, 533 expanded
[t=0.0268778s, 26276 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0268886s, 26276 KB] g=120, 543 evaluated, 542 expanded
[t=0.0269396s, 26276 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0269484s, 26276 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0269562s, 26276 KB] g=122, 546 evaluated, 545 expanded
[t=0.0271761s, 26276 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0271856s, 26276 KB] g=134, 563 evaluated, 562 expanded
[t=0.0272401s, 26276 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0272487s, 26276 KB] g=138, 567 evaluated, 566 expanded
[t=0.0272644s, 26276 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0272735s, 26276 KB] g=139, 568 evaluated, 567 expanded
[t=0.0272874s, 26276 KB] Solution found!
[t=0.0272981s, 26276 KB] Actual search time: 0.012298s
unstack b11 b17 (1)
put-down b11 (1)
unstack b17 b2 (1)
put-down b17 (1)
unstack b3 b4 (1)
put-down b3 (1)
unstack b2 b14 (1)
stack b2 b11 (1)
unstack b14 b13 (1)
put-down b14 (1)
unstack b13 b19 (1)
put-down b13 (1)
unstack b19 b10 (1)
stack b19 b13 (1)
unstack b10 b15 (1)
put-down b10 (1)
unstack b15 b16 (1)
put-down b15 (1)
unstack b16 b8 (1)
stack b16 b14 (1)
pick-up b3 (1)
stack b3 b10 (1)
pick-up b8 (1)
stack b8 b4 (1)
unstack b20 b9 (1)
put-down b20 (1)
unstack b9 b7 (1)
stack b9 b15 (1)
unstack b7 b1 (1)
put-down b7 (1)
pick-up b1 (1)
stack b1 b19 (1)
unstack b8 b4 (1)
put-down b8 (1)
unstack b4 b6 (1)
stack b4 b1 (1)
unstack b6 b5 (1)
put-down b6 (1)
unstack b5 b12 (1)
stack b5 b2 (1)
unstack b12 b18 (1)
put-down b12 (1)
pick-up b17 (1)
stack b17 b18 (1)
pick-up b20 (1)
stack b20 b5 (1)
pick-up b12 (1)
stack b12 b20 (1)
pick-up b6 (1)
stack b6 b12 (1)
pick-up b7 (1)
stack b7 b6 (1)
pick-up b8 (1)
stack b8 b4 (1)
unstack b3 b10 (1)
put-down b3 (1)
pick-up b10 (1)
stack b10 b7 (1)
pick-up b3 (1)
stack b3 b10 (1)
unstack b8 b4 (1)
put-down b8 (1)
unstack b4 b1 (1)
put-down b4 (1)
pick-up b8 (1)
stack b8 b4 (1)
unstack b1 b19 (1)
put-down b1 (1)
unstack b19 b13 (1)
put-down b19 (1)
pick-up b13 (1)
stack b13 b9 (1)
pick-up b19 (1)
stack b19 b13 (1)
pick-up b1 (1)
stack b1 b19 (1)
unstack b8 b4 (1)
put-down b8 (1)
pick-up b4 (1)
stack b4 b1 (1)
pick-up b8 (1)
stack b8 b4 (1)
unstack b3 b10 (1)
put-down b3 (1)
unstack b10 b7 (1)
put-down b10 (1)
pick-up b3 (1)
stack b3 b10 (1)
unstack b7 b6 (1)
put-down b7 (1)
unstack b6 b12 (1)
put-down b6 (1)
pick-up b7 (1)
stack b7 b6 (1)
unstack b3 b10 (1)
put-down b3 (1)
pick-up b10 (1)
stack b10 b7 (1)
pick-up b3 (1)
stack b3 b10 (1)
unstack b12 b20 (1)
put-down b12 (1)
unstack b20 b5 (1)
put-down b20 (1)
pick-up b12 (1)
stack b12 b20 (1)
unstack b5 b2 (1)
put-down b5 (1)
unstack b2 b11 (1)
put-down b2 (1)
pick-up b11 (1)
stack b11 b8 (1)
pick-up b2 (1)
stack b2 b11 (1)
pick-up b5 (1)
stack b5 b2 (1)
unstack b12 b20 (1)
put-down b12 (1)
pick-up b20 (1)
stack b20 b5 (1)
pick-up b12 (1)
stack b12 b20 (1)
unstack b3 b10 (1)
put-down b3 (1)
unstack b10 b7 (1)
put-down b10 (1)
pick-up b3 (1)
stack b3 b10 (1)
unstack b7 b6 (1)
put-down b7 (1)
pick-up b6 (1)
stack b6 b12 (1)
pick-up b7 (1)
stack b7 b6 (1)
unstack b3 b10 (1)
put-down b3 (1)
pick-up b10 (1)
stack b10 b7 (1)
pick-up b3 (1)
stack b3 b10 (1)
[t=0.027307s, 26276 KB] Plan length: 140 step(s).
[t=0.027307s, 26276 KB] Plan cost: 140
[t=0.027307s, 26276 KB] Expanded 568 state(s).
[t=0.027307s, 26276 KB] Reopened 0 state(s).
[t=0.027307s, 26276 KB] Evaluated 569 state(s).
[t=0.027307s, 26276 KB] Evaluations: 1138
[t=0.027307s, 26276 KB] Generated 4517 state(s).
[t=0.027307s, 26276 KB] Dead ends: 0 state(s).
[t=0.027307s, 26276 KB] Number of registered states: 569
[t=0.027307s, 26276 KB] Int hash set load factor: 569/1024 = 0.555664
[t=0.027307s, 26276 KB] Int hash set resizes: 10
[t=0.027307s, 26276 KB] Search time: 0.0123418s
[t=0.027307s, 26276 KB] Total time: 0.027307s
Solution found.
Peak memory: 26276 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.15s
