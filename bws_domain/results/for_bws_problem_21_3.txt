INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py ../bws_domain/bws_domain_actions.pddl ../bws_domain/problem_size_21/bws_problem_21_3.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.009s wall-clock]
1472 relevant atoms
987 auxiliary atoms
2459 final queue length
4269 total queue pushes
Completing instantiation... [0.020s CPU, 0.015s wall-clock]
Instantiating: [0.030s CPU, 0.027s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
22 uncovered facts
Choosing groups: [0.000s CPU, 0.002s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.007s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.010s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
1302 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
42 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.011s wall-clock]
Reordering and filtering variables...
43 of 43 variables necessary.
22 of 43 mutex groups necessary.
882 of 882 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 43
Translator derived variables: 0
Translator facts: 506
Translator goal facts: 21
Translator mutex groups: 22
Translator total mutex groups size: 484
Translator operators: 882
Translator axioms: 0
Translator task size: 7606
Translator peak memory: 36456 KB
Writing output... [0.000s CPU, 0.005s wall-clock]
Done! [0.080s CPU, 0.083s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.347e-05s, 24488 KB] reading input...
[t=0.00272721s, 25268 KB] done reading input!
[t=0.00366207s, 25664 KB] Initializing landmark count heuristic...
[t=0.00369633s, 25664 KB] Generating landmark graph...
[t=0.0037547s, 25664 KB] Building a landmark graph with reasonable orders.
[t=0.00380968s, 25664 KB] Initializing Exploration...
[t=0.0040648s, 25852 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0130265s, 26380 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.01316s, 26380 KB] Landmarks generation time: 0.00940646s
[t=0.0131762s, 26380 KB] Discovered 92 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0131924s, 26380 KB] 379 edges
[t=0.013203s, 26380 KB] approx. reasonable orders
[t=0.0134616s, 26380 KB] approx. obedient reasonable orders
[t=0.0134989s, 26380 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0135091s, 26380 KB] Landmarks generation time: 0.00981009s
[t=0.0135204s, 26380 KB] Discovered 92 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0135383s, 26380 KB] 383 edges
[t=0.0135481s, 26380 KB] Landmark graph generation time: 0.00985876s
[t=0.0135576s, 26380 KB] Landmark graph contains 92 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0135659s, 26380 KB] Landmark graph contains 383 orderings.
[t=0.0139895s, 26380 KB] Simplifying 3486 unary operators... done! [2646 unary operators]
[t=0.0148689s, 26380 KB] time to simplify: 0.00094716s
[t=0.0149937s, 26380 KB] Initializing additive heuristic...
[t=0.0150075s, 26380 KB] Initializing FF heuristic...
[t=0.0151072s, 26380 KB] Building successor generator...done!
[t=0.0152983s, 26380 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0153081s, 26380 KB] time for successor generation creation: 0.000153181s
[t=0.0153229s, 26380 KB] Variables: 43
[t=0.0153316s, 26380 KB] FactPairs: 506
[t=0.0153401s, 26380 KB] Bytes per state: 16
[t=0.0155509s, 26380 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0155965s, 26380 KB] 43 initial landmarks, 21 goal landmarks
[t=0.0156649s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0156761s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0156855s, 26380 KB] g=0, 1 evaluated, 0 expanded
[t=0.0157035s, 26380 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0157126s, 26380 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0158031s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0158134s, 26380 KB] g=1, 4 evaluated, 3 expanded
[t=0.0158484s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0158576s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0158681s, 26380 KB] g=2, 5 evaluated, 4 expanded
[t=0.0159967s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0160067s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0160152s, 26380 KB] g=4, 10 evaluated, 9 expanded
[t=0.0161395s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0161494s, 26380 KB] g=6, 15 evaluated, 14 expanded
[t=0.0163664s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0163765s, 26380 KB] g=8, 24 evaluated, 23 expanded
[t=0.0167023s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.01672s, 26380 KB] g=11, 36 evaluated, 35 expanded
[t=0.0167808s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0167909s, 26380 KB] g=12, 38 evaluated, 37 expanded
[t=0.0169278s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0169376s, 26380 KB] g=13, 43 evaluated, 42 expanded
[t=0.0169737s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.016983s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0170056s, 26380 KB] g=14, 44 evaluated, 43 expanded
[t=0.017185s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.017202s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0172109s, 26380 KB] g=16, 50 evaluated, 49 expanded
[t=0.0174371s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0174475s, 26380 KB] g=19, 59 evaluated, 58 expanded
[t=0.0175086s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0175191s, 26380 KB] g=20, 61 evaluated, 60 expanded
[t=0.0176802s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0176894s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0176976s, 26380 KB] g=22, 67 evaluated, 66 expanded
[t=0.0178668s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0178824s, 26380 KB] g=25, 73 evaluated, 72 expanded
[t=0.0179862s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0179958s, 26380 KB] g=27, 77 evaluated, 76 expanded
[t=0.0180297s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0180387s, 26380 KB] g=28, 78 evaluated, 77 expanded
[t=0.0182177s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0182289s, 26380 KB] g=30, 85 evaluated, 84 expanded
[t=0.0182629s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0182723s, 26380 KB] g=30, 86 evaluated, 85 expanded
[t=0.0186046s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0186159s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0186256s, 26380 KB] g=32, 100 evaluated, 99 expanded
[t=0.0191758s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0191875s, 26380 KB] g=34, 124 evaluated, 123 expanded
[t=0.0288119s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0288561s, 26380 KB] g=52, 541 evaluated, 540 expanded
[t=0.0290856s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0290979s, 26380 KB] g=54, 550 evaluated, 549 expanded
[t=0.0292992s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0293131s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0293216s, 26380 KB] g=56, 557 evaluated, 556 expanded
[t=0.0302604s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0302757s, 26380 KB] g=54, 598 evaluated, 597 expanded
[t=0.030486s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0304965s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.030505s, 26380 KB] g=56, 607 evaluated, 606 expanded
[t=0.0306859s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0306951s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0307037s, 26380 KB] g=58, 615 evaluated, 614 expanded
[t=0.0308702s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0308798s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0308887s, 26380 KB] g=60, 622 evaluated, 621 expanded
[t=0.0310609s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0310871s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0310958s, 26380 KB] g=62, 629 evaluated, 628 expanded
[t=0.0312619s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0312724s, 26380 KB] g=65, 636 evaluated, 635 expanded
[t=0.0313288s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0313383s, 26380 KB] g=66, 638 evaluated, 637 expanded
[t=0.0314637s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0314737s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0314824s, 26380 KB] g=68, 643 evaluated, 642 expanded
[t=0.03187s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0318803s, 26380 KB] g=72, 660 evaluated, 659 expanded
[t=0.0319795s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0319889s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0319974s, 26380 KB] g=74, 664 evaluated, 663 expanded
[t=0.0322572s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0322738s, 26380 KB] g=78, 675 evaluated, 674 expanded
[t=0.0323696s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.032379s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0323881s, 26380 KB] g=80, 679 evaluated, 678 expanded
[t=0.0353268s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0353507s, 26380 KB] g=96, 818 evaluated, 817 expanded
[t=0.0359789s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0359903s, 26380 KB] g=104, 850 evaluated, 849 expanded
[t=0.036054s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0360643s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0360735s, 26380 KB] g=106, 853 evaluated, 852 expanded
[t=0.0372885s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0373125s, 26380 KB] g=126, 924 evaluated, 923 expanded
[t=0.0373382s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0373475s, 26380 KB] g=127, 925 evaluated, 924 expanded
[t=0.037372s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0373811s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0373895s, 26380 KB] g=128, 926 evaluated, 925 expanded
[t=0.0375232s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0375329s, 26380 KB] g=132, 935 evaluated, 934 expanded
[t=0.0375812s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0375905s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0376056s, 26380 KB] g=134, 938 evaluated, 937 expanded
[t=0.0377326s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0377423s, 26380 KB] g=142, 948 evaluated, 947 expanded
[t=0.037794s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0378035s, 26380 KB] g=146, 952 evaluated, 951 expanded
[t=0.0378244s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0378362s, 26380 KB] g=147, 953 evaluated, 952 expanded
[t=0.0378513s, 26380 KB] Solution found!
[t=0.0378652s, 26380 KB] Actual search time: 0.0222652s
unstack b21 b20 (1)
put-down b21 (1)
unstack b13 b14 (1)
stack b13 b21 (1)
unstack b14 b18 (1)
put-down b14 (1)
unstack b20 b12 (1)
put-down b20 (1)
unstack b18 b4 (1)
put-down b18 (1)
unstack b4 b8 (1)
stack b4 b2 (1)
unstack b8 b5 (1)
stack b8 b14 (1)
pick-up b18 (1)
stack b18 b4 (1)
unstack b5 b19 (1)
put-down b5 (1)
unstack b19 b10 (1)
stack b19 b18 (1)
pick-up b5 (1)
stack b5 b19 (1)
unstack b10 b16 (1)
put-down b10 (1)
unstack b16 b11 (1)
put-down b16 (1)
unstack b11 b1 (1)
stack b11 b3 (1)
pick-up b1 (1)
stack b1 b20 (1)
pick-up b16 (1)
stack b16 b1 (1)
pick-up b10 (1)
stack b10 b16 (1)
unstack b5 b19 (1)
put-down b5 (1)
unstack b19 b18 (1)
put-down b19 (1)
pick-up b5 (1)
stack b5 b19 (1)
unstack b18 b4 (1)
put-down b18 (1)
unstack b4 b2 (1)
put-down b4 (1)
pick-up b18 (1)
stack b18 b4 (1)
unstack b2 b17 (1)
put-down b2 (1)
unstack b17 b15 (1)
put-down b17 (1)
unstack b15 b6 (1)
stack b15 b12 (1)
unstack b6 b7 (1)
stack b6 b13 (1)
pick-up b17 (1)
stack b17 b6 (1)
unstack b7 b9 (1)
stack b7 b5 (1)
pick-up b2 (1)
stack b2 b17 (1)
pick-up b9 (1)
stack b9 b10 (1)
unstack b11 b3 (1)
put-down b11 (1)
pick-up b3 (1)
stack b3 b9 (1)
pick-up b11 (1)
stack b11 b3 (1)
unstack b8 b14 (1)
put-down b8 (1)
pick-up b14 (1)
stack b14 b7 (1)
pick-up b8 (1)
stack b8 b14 (1)
unstack b18 b4 (1)
put-down b18 (1)
pick-up b4 (1)
stack b4 b2 (1)
pick-up b18 (1)
stack b18 b4 (1)
unstack b8 b14 (1)
put-down b8 (1)
unstack b14 b7 (1)
put-down b14 (1)
unstack b7 b5 (1)
put-down b7 (1)
pick-up b14 (1)
stack b14 b7 (1)
pick-up b8 (1)
stack b8 b14 (1)
unstack b5 b19 (1)
put-down b5 (1)
pick-up b19 (1)
stack b19 b18 (1)
pick-up b5 (1)
stack b5 b19 (1)
unstack b8 b14 (1)
put-down b8 (1)
unstack b14 b7 (1)
put-down b14 (1)
pick-up b7 (1)
stack b7 b5 (1)
pick-up b14 (1)
stack b14 b7 (1)
pick-up b8 (1)
stack b8 b14 (1)
unstack b11 b3 (1)
put-down b11 (1)
unstack b3 b9 (1)
put-down b3 (1)
unstack b9 b10 (1)
put-down b9 (1)
pick-up b3 (1)
stack b3 b9 (1)
pick-up b11 (1)
stack b11 b3 (1)
unstack b10 b16 (1)
put-down b10 (1)
unstack b16 b1 (1)
put-down b16 (1)
unstack b1 b20 (1)
put-down b1 (1)
pick-up b10 (1)
stack b10 b16 (1)
pick-up b20 (1)
stack b20 b15 (1)
pick-up b1 (1)
stack b1 b20 (1)
unstack b10 b16 (1)
put-down b10 (1)
pick-up b16 (1)
stack b16 b1 (1)
pick-up b10 (1)
stack b10 b16 (1)
unstack b11 b3 (1)
put-down b11 (1)
unstack b3 b9 (1)
put-down b3 (1)
pick-up b11 (1)
stack b11 b3 (1)
pick-up b9 (1)
stack b9 b10 (1)
unstack b11 b3 (1)
put-down b11 (1)
pick-up b3 (1)
stack b3 b9 (1)
pick-up b11 (1)
stack b11 b3 (1)
[t=0.0378755s, 26380 KB] Plan length: 148 step(s).
[t=0.0378755s, 26380 KB] Plan cost: 148
[t=0.0378755s, 26380 KB] Expanded 953 state(s).
[t=0.0378755s, 26380 KB] Reopened 0 state(s).
[t=0.0378755s, 26380 KB] Evaluated 954 state(s).
[t=0.0378755s, 26380 KB] Evaluations: 1908
[t=0.0378755s, 26380 KB] Generated 7796 state(s).
[t=0.0378755s, 26380 KB] Dead ends: 0 state(s).
[t=0.0378755s, 26380 KB] Number of registered states: 954
[t=0.0378755s, 26380 KB] Int hash set load factor: 954/1024 = 0.931641
[t=0.0378755s, 26380 KB] Int hash set resizes: 10
[t=0.0378755s, 26380 KB] Search time: 0.022326s
[t=0.0378755s, 26380 KB] Total time: 0.0378755s
Solution found.
Peak memory: 26380 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.18s
