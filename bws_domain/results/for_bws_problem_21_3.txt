INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py ../bws_domain/bws_domain_actions.pddl ../bws_domain/problem_size_21/bws_problem_21_3.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.009s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.008s wall-clock]
1472 relevant atoms
987 auxiliary atoms
2459 final queue length
4269 total queue pushes
Completing instantiation... [0.020s CPU, 0.014s wall-clock]
Instantiating: [0.030s CPU, 0.024s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
22 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.006s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.021s wall-clock]
1302 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
42 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.010s wall-clock]
Reordering and filtering variables...
43 of 43 variables necessary.
22 of 43 mutex groups necessary.
882 of 882 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 43
Translator derived variables: 0
Translator facts: 506
Translator goal facts: 21
Translator mutex groups: 22
Translator total mutex groups size: 484
Translator operators: 882
Translator axioms: 0
Translator task size: 7606
Translator peak memory: 36456 KB
Writing output... [0.000s CPU, 0.004s wall-clock]
Done! [0.070s CPU, 0.080s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=1.9923e-05s, 24488 KB] reading input...
[t=0.00258513s, 25268 KB] done reading input!
[t=0.00349436s, 25664 KB] Initializing landmark count heuristic...
[t=0.00352792s, 25664 KB] Generating landmark graph...
[t=0.00358246s, 25664 KB] Building a landmark graph with reasonable orders.
[t=0.0036356s, 25664 KB] Initializing Exploration...
[t=0.00387651s, 25852 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0121482s, 26380 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0121856s, 26380 KB] Landmarks generation time: 0.00860284s
[t=0.0121989s, 26380 KB] Discovered 92 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.012214s, 26380 KB] 379 edges
[t=0.0122234s, 26380 KB] approx. reasonable orders
[t=0.012392s, 26380 KB] approx. obedient reasonable orders
[t=0.0124142s, 26380 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0124224s, 26380 KB] Landmarks generation time: 0.00889095s
[t=0.0124309s, 26380 KB] Discovered 92 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0124384s, 26380 KB] 383 edges
[t=0.0124458s, 26380 KB] Landmark graph generation time: 0.00892448s
[t=0.0124536s, 26380 KB] Landmark graph contains 92 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0124613s, 26380 KB] Landmark graph contains 383 orderings.
[t=0.0127134s, 26380 KB] Simplifying 3486 unary operators... done! [2646 unary operators]
[t=0.0135195s, 26380 KB] time to simplify: 0.000860874s
[t=0.0136243s, 26380 KB] Initializing additive heuristic...
[t=0.0136375s, 26380 KB] Initializing FF heuristic...
[t=0.0136825s, 26380 KB] Building successor generator...done!
[t=0.0138388s, 26380 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0138468s, 26380 KB] time for successor generation creation: 0.000126283s
[t=0.0138578s, 26380 KB] Variables: 43
[t=0.0138656s, 26380 KB] FactPairs: 506
[t=0.0138733s, 26380 KB] Bytes per state: 16
[t=0.013952s, 26380 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.013983s, 26380 KB] 43 initial landmarks, 21 goal landmarks
[t=0.014025s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0140342s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0140428s, 26380 KB] g=0, 1 evaluated, 0 expanded
[t=0.0140554s, 26380 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0140637s, 26380 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0141472s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.014156s, 26380 KB] g=1, 4 evaluated, 3 expanded
[t=0.0141881s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0141968s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0142045s, 26380 KB] g=2, 5 evaluated, 4 expanded
[t=0.0143336s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0143424s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0143502s, 26380 KB] g=4, 10 evaluated, 9 expanded
[t=0.0144712s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0144803s, 26380 KB] g=6, 15 evaluated, 14 expanded
[t=0.0146868s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0146962s, 26380 KB] g=8, 24 evaluated, 23 expanded
[t=0.0149805s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0149902s, 26380 KB] g=11, 36 evaluated, 35 expanded
[t=0.0150477s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0150564s, 26380 KB] g=12, 38 evaluated, 37 expanded
[t=0.0151725s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0151811s, 26380 KB] g=13, 43 evaluated, 42 expanded
[t=0.0152128s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0152212s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0152325s, 26380 KB] g=14, 44 evaluated, 43 expanded
[t=0.0153734s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0153824s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.01539s, 26380 KB] g=16, 50 evaluated, 49 expanded
[t=0.0155991s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0156243s, 26380 KB] g=19, 59 evaluated, 58 expanded
[t=0.0156805s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0156892s, 26380 KB] g=20, 61 evaluated, 60 expanded
[t=0.0158406s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0158495s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0158653s, 26380 KB] g=22, 67 evaluated, 66 expanded
[t=0.0160103s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.016019s, 26380 KB] g=25, 73 evaluated, 72 expanded
[t=0.0161223s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0161316s, 26380 KB] g=27, 77 evaluated, 76 expanded
[t=0.0161647s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0161733s, 26380 KB] g=28, 78 evaluated, 77 expanded
[t=0.0163609s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0163707s, 26380 KB] g=30, 85 evaluated, 84 expanded
[t=0.0164059s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0164239s, 26380 KB] g=30, 86 evaluated, 85 expanded
[t=0.0167815s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0167981s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0168067s, 26380 KB] g=32, 100 evaluated, 99 expanded
[t=0.0173735s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0173863s, 26380 KB] g=34, 124 evaluated, 123 expanded
[t=0.0267184s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0267628s, 26380 KB] g=52, 541 evaluated, 540 expanded
[t=0.0269755s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.026986s, 26380 KB] g=54, 550 evaluated, 549 expanded
[t=0.02715s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0271588s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0271664s, 26380 KB] g=56, 557 evaluated, 556 expanded
[t=0.0280658s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.028076s, 26380 KB] g=54, 598 evaluated, 597 expanded
[t=0.0282823s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0282912s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0283099s, 26380 KB] g=56, 607 evaluated, 606 expanded
[t=0.0285073s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0285169s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0285251s, 26380 KB] g=58, 615 evaluated, 614 expanded
[t=0.0287228s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0287325s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0287405s, 26380 KB] g=60, 622 evaluated, 621 expanded
[t=0.0289309s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0289411s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0289493s, 26380 KB] g=62, 629 evaluated, 628 expanded
[t=0.0291201s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.029129s, 26380 KB] g=65, 636 evaluated, 635 expanded
[t=0.0291996s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0292082s, 26380 KB] g=66, 638 evaluated, 637 expanded
[t=0.029339s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0293475s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0293555s, 26380 KB] g=68, 643 evaluated, 642 expanded
[t=0.0297282s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0297374s, 26380 KB] g=72, 660 evaluated, 659 expanded
[t=0.0298301s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0298388s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0298464s, 26380 KB] g=74, 664 evaluated, 663 expanded
[t=0.0300825s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0300913s, 26380 KB] g=78, 675 evaluated, 674 expanded
[t=0.0301805s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0301889s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0301965s, 26380 KB] g=80, 679 evaluated, 678 expanded
[t=0.0331314s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0331532s, 26380 KB] g=96, 818 evaluated, 817 expanded
[t=0.0337883s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0337991s, 26380 KB] g=104, 850 evaluated, 849 expanded
[t=0.0338611s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0338702s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0338782s, 26380 KB] g=106, 853 evaluated, 852 expanded
[t=0.035033s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0350615s, 26380 KB] g=126, 924 evaluated, 923 expanded
[t=0.0350853s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0350938s, 26380 KB] g=127, 925 evaluated, 924 expanded
[t=0.0351185s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0351273s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0351357s, 26380 KB] g=128, 926 evaluated, 925 expanded
[t=0.0352651s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0352736s, 26380 KB] g=132, 935 evaluated, 934 expanded
[t=0.0353203s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0353291s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0353406s, 26380 KB] g=134, 938 evaluated, 937 expanded
[t=0.0354646s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0354736s, 26380 KB] g=142, 948 evaluated, 947 expanded
[t=0.0355245s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0355328s, 26380 KB] g=146, 952 evaluated, 951 expanded
[t=0.0355485s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0355567s, 26380 KB] g=147, 953 evaluated, 952 expanded
[t=0.0355701s, 26380 KB] Solution found!
[t=0.0355808s, 26380 KB] Actual search time: 0.0215953s
unstack b21 b20 (1)
put-down b21 (1)
unstack b13 b14 (1)
stack b13 b21 (1)
unstack b14 b18 (1)
put-down b14 (1)
unstack b20 b12 (1)
put-down b20 (1)
unstack b18 b4 (1)
put-down b18 (1)
unstack b4 b8 (1)
stack b4 b2 (1)
unstack b8 b5 (1)
stack b8 b14 (1)
pick-up b18 (1)
stack b18 b4 (1)
unstack b5 b19 (1)
put-down b5 (1)
unstack b19 b10 (1)
stack b19 b18 (1)
pick-up b5 (1)
stack b5 b19 (1)
unstack b10 b16 (1)
put-down b10 (1)
unstack b16 b11 (1)
put-down b16 (1)
unstack b11 b1 (1)
stack b11 b3 (1)
pick-up b1 (1)
stack b1 b20 (1)
pick-up b16 (1)
stack b16 b1 (1)
pick-up b10 (1)
stack b10 b16 (1)
unstack b5 b19 (1)
put-down b5 (1)
unstack b19 b18 (1)
put-down b19 (1)
pick-up b5 (1)
stack b5 b19 (1)
unstack b18 b4 (1)
put-down b18 (1)
unstack b4 b2 (1)
put-down b4 (1)
pick-up b18 (1)
stack b18 b4 (1)
unstack b2 b17 (1)
put-down b2 (1)
unstack b17 b15 (1)
put-down b17 (1)
unstack b15 b6 (1)
stack b15 b12 (1)
unstack b6 b7 (1)
stack b6 b13 (1)
pick-up b17 (1)
stack b17 b6 (1)
unstack b7 b9 (1)
stack b7 b5 (1)
pick-up b2 (1)
stack b2 b17 (1)
pick-up b9 (1)
stack b9 b10 (1)
unstack b11 b3 (1)
put-down b11 (1)
pick-up b3 (1)
stack b3 b9 (1)
pick-up b11 (1)
stack b11 b3 (1)
unstack b8 b14 (1)
put-down b8 (1)
pick-up b14 (1)
stack b14 b7 (1)
pick-up b8 (1)
stack b8 b14 (1)
unstack b18 b4 (1)
put-down b18 (1)
pick-up b4 (1)
stack b4 b2 (1)
pick-up b18 (1)
stack b18 b4 (1)
unstack b8 b14 (1)
put-down b8 (1)
unstack b14 b7 (1)
put-down b14 (1)
unstack b7 b5 (1)
put-down b7 (1)
pick-up b14 (1)
stack b14 b7 (1)
pick-up b8 (1)
stack b8 b14 (1)
unstack b5 b19 (1)
put-down b5 (1)
pick-up b19 (1)
stack b19 b18 (1)
pick-up b5 (1)
stack b5 b19 (1)
unstack b8 b14 (1)
put-down b8 (1)
unstack b14 b7 (1)
put-down b14 (1)
pick-up b7 (1)
stack b7 b5 (1)
pick-up b14 (1)
stack b14 b7 (1)
pick-up b8 (1)
stack b8 b14 (1)
unstack b11 b3 (1)
put-down b11 (1)
unstack b3 b9 (1)
put-down b3 (1)
unstack b9 b10 (1)
put-down b9 (1)
pick-up b3 (1)
stack b3 b9 (1)
pick-up b11 (1)
stack b11 b3 (1)
unstack b10 b16 (1)
put-down b10 (1)
unstack b16 b1 (1)
put-down b16 (1)
unstack b1 b20 (1)
put-down b1 (1)
pick-up b10 (1)
stack b10 b16 (1)
pick-up b20 (1)
stack b20 b15 (1)
pick-up b1 (1)
stack b1 b20 (1)
unstack b10 b16 (1)
put-down b10 (1)
pick-up b16 (1)
stack b16 b1 (1)
pick-up b10 (1)
stack b10 b16 (1)
unstack b11 b3 (1)
put-down b11 (1)
unstack b3 b9 (1)
put-down b3 (1)
pick-up b11 (1)
stack b11 b3 (1)
pick-up b9 (1)
stack b9 b10 (1)
unstack b11 b3 (1)
put-down b11 (1)
pick-up b3 (1)
stack b3 b9 (1)
pick-up b11 (1)
stack b11 b3 (1)
[t=0.0355897s, 26380 KB] Plan length: 148 step(s).
[t=0.0355897s, 26380 KB] Plan cost: 148
[t=0.0355897s, 26380 KB] Expanded 953 state(s).
[t=0.0355897s, 26380 KB] Reopened 0 state(s).
[t=0.0355897s, 26380 KB] Evaluated 954 state(s).
[t=0.0355897s, 26380 KB] Evaluations: 1908
[t=0.0355897s, 26380 KB] Generated 7796 state(s).
[t=0.0355897s, 26380 KB] Dead ends: 0 state(s).
[t=0.0355897s, 26380 KB] Number of registered states: 954
[t=0.0355897s, 26380 KB] Int hash set load factor: 954/1024 = 0.931641
[t=0.0355897s, 26380 KB] Int hash set resizes: 10
[t=0.0355897s, 26380 KB] Search time: 0.021638s
[t=0.0355897s, 26380 KB] Total time: 0.0355897s
Solution found.
Peak memory: 26380 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.14s
