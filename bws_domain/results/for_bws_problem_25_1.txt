INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py ../bws_domain/bws_domain_actions.pddl ../bws_domain/problem_size_25/bws_problem_25_1.pddl --sas-file output.sas
Parsing...
Parsing: [0.010s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.000s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.012s wall-clock]
2052 relevant atoms
1375 auxiliary atoms
3427 final queue length
5985 total queue pushes
Completing instantiation... [0.020s CPU, 0.023s wall-clock]
Instantiating: [0.030s CPU, 0.037s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
26 uncovered facts
Choosing groups: [0.010s CPU, 0.002s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.008s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.032s wall-clock]
1850 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
50 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.022s wall-clock]
Reordering and filtering variables...
51 of 51 variables necessary.
26 of 51 mutex groups necessary.
1250 of 1250 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.009s wall-clock]
Translator variables: 51
Translator derived variables: 0
Translator facts: 702
Translator goal facts: 25
Translator mutex groups: 26
Translator total mutex groups size: 676
Translator operators: 1250
Translator axioms: 0
Translator task size: 10754
Translator peak memory: 38384 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.120s CPU, 0.120s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.0899e-05s, 24488 KB] reading input...
[t=0.00402662s, 25632 KB] done reading input!
[t=0.00519338s, 26028 KB] Initializing landmark count heuristic...
[t=0.00523764s, 26028 KB] Generating landmark graph...
[t=0.00533335s, 26160 KB] Building a landmark graph with reasonable orders.
[t=0.00541939s, 26160 KB] Initializing Exploration...
[t=0.0059508s, 26532 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0214525s, 27060 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0215451s, 27060 KB] Landmarks generation time: 0.0162103s
[t=0.0215609s, 27060 KB] Discovered 114 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.021578s, 27060 KB] 398 edges
[t=0.0215886s, 27060 KB] approx. reasonable orders
[t=0.0243678s, 27060 KB] approx. obedient reasonable orders
[t=0.024412s, 27060 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0244229s, 27060 KB] Landmarks generation time: 0.019183s
[t=0.0244332s, 27060 KB] Discovered 114 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0244418s, 27060 KB] 439 edges
[t=0.0244505s, 27060 KB] Landmark graph generation time: 0.0192199s
[t=0.0244594s, 27060 KB] Landmark graph contains 114 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0244686s, 27060 KB] Landmark graph contains 439 orderings.
[t=0.0249775s, 27060 KB] Simplifying 4950 unary operators... done! [3750 unary operators]
[t=0.0262358s, 27060 KB] time to simplify: 0.00136505s
[t=0.0264194s, 27060 KB] Initializing additive heuristic...
[t=0.0264359s, 27060 KB] Initializing FF heuristic...
[t=0.0265184s, 27060 KB] Building successor generator...done!
[t=0.0267561s, 27060 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0267656s, 27060 KB] time for successor generation creation: 0.000202416s
[t=0.0267863s, 27060 KB] Variables: 51
[t=0.0267953s, 27060 KB] FactPairs: 702
[t=0.0268069s, 27060 KB] Bytes per state: 20
[t=0.0269613s, 27060 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0270041s, 27060 KB] 51 initial landmarks, 25 goal landmarks
[t=0.0271243s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 63
[t=0.0271359s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 46
[t=0.0271457s, 27060 KB] g=0, 1 evaluated, 0 expanded
[t=0.0271673s, 27060 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 63
[t=0.0271827s, 27060 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 46
[t=0.0274532s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 62
[t=0.0274631s, 27060 KB] g=1, 9 evaluated, 8 expanded
[t=0.0277441s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0277543s, 27060 KB] g=2, 17 evaluated, 16 expanded
[t=0.0282493s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.0282598s, 27060 KB] g=4, 32 evaluated, 31 expanded
[t=0.028459s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 61
[t=0.0284683s, 27060 KB] g=3, 38 evaluated, 37 expanded
[t=0.0290736s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 60
[t=0.0290864s, 27060 KB] g=6, 56 evaluated, 55 expanded
[t=0.0297729s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.0297831s, 27060 KB] g=8, 77 evaluated, 76 expanded
[t=0.0302871s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0302973s, 27060 KB] g=8, 93 evaluated, 92 expanded
[t=0.0304686s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 58
[t=0.0304817s, 27060 KB] g=10, 98 evaluated, 97 expanded
[t=0.0307887s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0308026s, 27060 KB] g=10, 107 evaluated, 106 expanded
[t=0.0313202s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0313387s, 27060 KB] g=12, 121 evaluated, 120 expanded
[t=0.0315444s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 57
[t=0.0315549s, 27060 KB] g=12, 127 evaluated, 126 expanded
[t=0.0323732s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0323918s, 27060 KB] g=14, 153 evaluated, 152 expanded
[t=0.0330139s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0330265s, 27060 KB] g=16, 172 evaluated, 171 expanded
[t=0.0332538s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0332644s, 27060 KB] g=16, 179 evaluated, 178 expanded
[t=0.0335706s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0335811s, 27060 KB] g=18, 188 evaluated, 187 expanded
[t=0.0340995s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0341093s, 27060 KB] g=17, 204 evaluated, 203 expanded
[t=0.0341868s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0341962s, 27060 KB] g=18, 206 evaluated, 205 expanded
[t=0.0347079s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0347182s, 27060 KB] g=22, 222 evaluated, 221 expanded
[t=0.0352097s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.035222s, 27060 KB] g=20, 237 evaluated, 236 expanded
[t=0.0353008s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0353102s, 27060 KB] g=24, 239 evaluated, 238 expanded
[t=0.0361555s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0361674s, 27060 KB] g=22, 265 evaluated, 264 expanded
[t=0.0373186s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0373386s, 27060 KB] g=24, 299 evaluated, 298 expanded
[t=0.0384756s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0384881s, 27060 KB] g=26, 334 evaluated, 333 expanded
[t=0.0387578s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0387681s, 27060 KB] g=29, 342 evaluated, 341 expanded
[t=0.0388437s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.038853s, 27060 KB] g=30, 344 evaluated, 343 expanded
[t=0.0394926s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0395029s, 27060 KB] g=32, 364 evaluated, 363 expanded
[t=0.0395765s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0395864s, 27060 KB] g=28, 366 evaluated, 365 expanded
[t=0.0400659s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0400764s, 27060 KB] g=34, 381 evaluated, 380 expanded
[t=0.0405925s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0406046s, 27060 KB] g=30, 397 evaluated, 396 expanded
[t=0.0406916s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.040701s, 27060 KB] g=36, 399 evaluated, 398 expanded
[t=0.0412312s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0412498s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0412588s, 27060 KB] g=38, 416 evaluated, 415 expanded
[t=0.0415198s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0415348s, 27060 KB] g=40, 423 evaluated, 422 expanded
[t=0.0415779s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0415951s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.041604s, 27060 KB] g=40, 424 evaluated, 423 expanded
[t=0.0418306s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0418411s, 27060 KB] g=42, 431 evaluated, 430 expanded
[t=0.0418838s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0418934s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0419021s, 27060 KB] g=42, 432 evaluated, 431 expanded
[t=0.0420674s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0420776s, 27060 KB] g=44, 437 evaluated, 436 expanded
[t=0.0423363s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0423471s, 27060 KB] g=46, 445 evaluated, 444 expanded
[t=0.0426358s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0426471s, 27060 KB] g=48, 454 evaluated, 453 expanded
[t=0.0430264s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0430367s, 27060 KB] g=50, 466 evaluated, 465 expanded
[t=0.0432044s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0432139s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0432224s, 27060 KB] g=52, 471 evaluated, 470 expanded
[t=0.0440112s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0440229s, 27060 KB] g=58, 496 evaluated, 495 expanded
[t=0.0442522s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0442619s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0442704s, 27060 KB] g=60, 503 evaluated, 502 expanded
[t=0.0444631s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0444726s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0444812s, 27060 KB] g=62, 509 evaluated, 508 expanded
[t=0.0453748s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0453884s, 27060 KB] g=68, 537 evaluated, 536 expanded
[t=0.0455633s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0455741s, 27060 KB] g=70, 542 evaluated, 541 expanded
[t=0.0457059s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0457153s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0457236s, 27060 KB] g=72, 546 evaluated, 545 expanded
[t=0.0470265s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0470375s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0470475s, 27060 KB] g=84, 590 evaluated, 589 expanded
[t=0.0473751s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0473849s, 27060 KB] g=88, 601 evaluated, 600 expanded
[t=0.0475402s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0475526s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0475614s, 27060 KB] g=90, 606 evaluated, 605 expanded
[t=0.0517383s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0517554s, 27060 KB] g=122, 750 evaluated, 749 expanded
[t=0.0521196s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0521314s, 27060 KB] g=124, 763 evaluated, 762 expanded
[t=0.0521951s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.052205s, 27060 KB] g=125, 765 evaluated, 764 expanded
[t=0.0522413s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0522515s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0522605s, 27060 KB] g=126, 766 evaluated, 765 expanded
[t=0.0522965s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0523057s, 27060 KB] g=127, 767 evaluated, 766 expanded
[t=0.0523412s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0523513s, 27060 KB] g=128, 768 evaluated, 767 expanded
[t=0.0525114s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0525215s, 27060 KB] g=130, 774 evaluated, 773 expanded
[t=0.05265s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.052662s, 27060 KB] g=128, 778 evaluated, 777 expanded
[t=0.0527185s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0527281s, 27060 KB] g=129, 780 evaluated, 779 expanded
[t=0.0527624s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0527714s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0527796s, 27060 KB] g=130, 781 evaluated, 780 expanded
[t=0.0528803s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0528906s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0528991s, 27060 KB] g=132, 785 evaluated, 784 expanded
[t=0.0531032s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0531168s, 27060 KB] g=136, 794 evaluated, 793 expanded
[t=0.053216s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0532348s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0532495s, 27060 KB] g=138, 797 evaluated, 796 expanded
[t=0.0536143s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0536525s, 27060 KB] g=150, 815 evaluated, 814 expanded
[t=0.05373s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0537463s, 27060 KB] g=154, 819 evaluated, 818 expanded
[t=0.0537656s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.053777s, 27060 KB] g=155, 820 evaluated, 819 expanded
[t=0.0537934s, 27060 KB] Solution found!
[t=0.0538099s, 27060 KB] Actual search time: 0.0268023s
pick-up b19 (1)
stack b19 b18 (1)
unstack b2 b3 (1)
stack b2 b15 (1)
unstack b25 b11 (1)
put-down b25 (1)
unstack b11 b8 (1)
stack b11 b19 (1)
unstack b14 b22 (1)
stack b14 b8 (1)
unstack b22 b10 (1)
stack b22 b11 (1)
unstack b10 b9 (1)
put-down b10 (1)
unstack b9 b4 (1)
stack b9 b2 (1)
pick-up b10 (1)
stack b10 b4 (1)
unstack b7 b16 (1)
put-down b7 (1)
unstack b16 b6 (1)
stack b16 b10 (1)
unstack b6 b13 (1)
stack b6 b20 (1)
unstack b14 b8 (1)
put-down b14 (1)
unstack b8 b1 (1)
stack b8 b22 (1)
unstack b1 b21 (1)
put-down b1 (1)
pick-up b14 (1)
stack b14 b8 (1)
unstack b21 b23 (1)
stack b21 b1 (1)
unstack b23 b24 (1)
stack b23 b13 (1)
pick-up b24 (1)
stack b24 b14 (1)
pick-up b3 (1)
stack b3 b21 (1)
pick-up b7 (1)
stack b7 b23 (1)
unstack b16 b10 (1)
put-down b16 (1)
unstack b10 b4 (1)
put-down b10 (1)
unstack b4 b5 (1)
stack b4 b25 (1)
pick-up b10 (1)
stack b10 b4 (1)
pick-up b16 (1)
stack b16 b10 (1)
unstack b9 b2 (1)
put-down b9 (1)
unstack b2 b15 (1)
put-down b2 (1)
unstack b15 b12 (1)
stack b15 b6 (1)
pick-up b2 (1)
stack b2 b15 (1)
pick-up b9 (1)
stack b9 b2 (1)
unstack b7 b23 (1)
put-down b7 (1)
unstack b23 b13 (1)
put-down b23 (1)
pick-up b13 (1)
stack b13 b24 (1)
pick-up b23 (1)
stack b23 b13 (1)
pick-up b7 (1)
stack b7 b23 (1)
unstack b16 b10 (1)
put-down b16 (1)
unstack b10 b4 (1)
put-down b10 (1)
pick-up b16 (1)
stack b16 b10 (1)
unstack b4 b25 (1)
put-down b4 (1)
pick-up b25 (1)
stack b25 b5 (1)
pick-up b4 (1)
stack b4 b25 (1)
unstack b16 b10 (1)
put-down b16 (1)
pick-up b10 (1)
stack b10 b4 (1)
pick-up b16 (1)
stack b16 b10 (1)
unstack b7 b23 (1)
put-down b7 (1)
unstack b23 b13 (1)
put-down b23 (1)
pick-up b7 (1)
stack b7 b23 (1)
unstack b13 b24 (1)
put-down b13 (1)
unstack b24 b14 (1)
put-down b24 (1)
pick-up b13 (1)
stack b13 b24 (1)
unstack b7 b23 (1)
put-down b7 (1)
pick-up b23 (1)
stack b23 b13 (1)
pick-up b7 (1)
stack b7 b23 (1)
unstack b14 b8 (1)
put-down b14 (1)
unstack b8 b22 (1)
put-down b8 (1)
pick-up b14 (1)
stack b14 b8 (1)
unstack b22 b11 (1)
put-down b22 (1)
unstack b11 b19 (1)
put-down b11 (1)
unstack b19 b18 (1)
put-down b19 (1)
unstack b18 b17 (1)
stack b18 b3 (1)
pick-up b17 (1)
stack b17 b16 (1)
pick-up b12 (1)
stack b12 b17 (1)
pick-up b19 (1)
stack b19 b18 (1)
pick-up b11 (1)
stack b11 b19 (1)
pick-up b22 (1)
stack b22 b11 (1)
unstack b14 b8 (1)
put-down b14 (1)
pick-up b8 (1)
stack b8 b22 (1)
pick-up b14 (1)
stack b14 b8 (1)
unstack b7 b23 (1)
put-down b7 (1)
unstack b23 b13 (1)
put-down b23 (1)
pick-up b7 (1)
stack b7 b23 (1)
unstack b13 b24 (1)
put-down b13 (1)
pick-up b24 (1)
stack b24 b14 (1)
pick-up b13 (1)
stack b13 b24 (1)
unstack b7 b23 (1)
put-down b7 (1)
pick-up b23 (1)
stack b23 b13 (1)
pick-up b7 (1)
stack b7 b23 (1)
[t=0.0538199s, 27060 KB] Plan length: 156 step(s).
[t=0.0538199s, 27060 KB] Plan cost: 156
[t=0.0538199s, 27060 KB] Expanded 820 state(s).
[t=0.0538199s, 27060 KB] Reopened 0 state(s).
[t=0.0538199s, 27060 KB] Evaluated 821 state(s).
[t=0.0538199s, 27060 KB] Evaluations: 1642
[t=0.0538199s, 27060 KB] Generated 8507 state(s).
[t=0.0538199s, 27060 KB] Dead ends: 0 state(s).
[t=0.0538199s, 27060 KB] Number of registered states: 821
[t=0.0538199s, 27060 KB] Int hash set load factor: 821/1024 = 0.801758
[t=0.0538199s, 27060 KB] Int hash set resizes: 10
[t=0.0538199s, 27060 KB] Search time: 0.0268605s
[t=0.0538199s, 27060 KB] Total time: 0.0538199s
Solution found.
Peak memory: 27060 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.23s
