INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py ../bws_domain/bws_domain_actions.pddl ../bws_domain/problem_size_20/bws_problem_20_9.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.008s wall-clock]
1342 relevant atoms
900 auxiliary atoms
2242 final queue length
3885 total queue pushes
Completing instantiation... [0.010s CPU, 0.014s wall-clock]
Instantiating: [0.020s CPU, 0.024s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.003s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
21 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.008s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.020s wall-clock]
1180 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
40 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.010s wall-clock]
Reordering and filtering variables...
41 of 41 variables necessary.
21 of 41 mutex groups necessary.
800 of 800 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 41
Translator derived variables: 0
Translator facts: 462
Translator goal facts: 20
Translator mutex groups: 21
Translator total mutex groups size: 441
Translator operators: 800
Translator axioms: 0
Translator task size: 6904
Translator peak memory: 35944 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.080s CPU, 0.080s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.1027e-05s, 24488 KB] reading input...
[t=0.00224936s, 25180 KB] done reading input!
[t=0.00319091s, 25444 KB] Initializing landmark count heuristic...
[t=0.00323807s, 25444 KB] Generating landmark graph...
[t=0.00332256s, 25576 KB] Building a landmark graph with reasonable orders.
[t=0.00337722s, 25576 KB] Initializing Exploration...
[t=0.00368972s, 25744 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0126425s, 26272 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0127456s, 26272 KB] Landmarks generation time: 0.00942565s
[t=0.0127635s, 26272 KB] Discovered 98 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0127871s, 26272 KB] 518 edges
[t=0.0127985s, 26272 KB] approx. reasonable orders
[t=0.0163257s, 26272 KB] approx. obedient reasonable orders
[t=0.0164s, 26272 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.016421s, 26272 KB] Landmarks generation time: 0.0131856s
[t=0.0164379s, 26272 KB] Discovered 98 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0164514s, 26272 KB] 569 edges
[t=0.0164654s, 26272 KB] Landmark graph generation time: 0.0132404s
[t=0.0164811s, 26272 KB] Landmark graph contains 98 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.016494s, 26272 KB] Landmark graph contains 569 orderings.
[t=0.0169759s, 26272 KB] Simplifying 3160 unary operators... done! [2400 unary operators]
[t=0.0178948s, 26272 KB] time to simplify: 0.00100059s
[t=0.0180554s, 26272 KB] Initializing additive heuristic...
[t=0.0180831s, 26272 KB] Initializing FF heuristic...
[t=0.0181871s, 26272 KB] Building successor generator...done!
[t=0.0184696s, 26272 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0184872s, 26272 KB] time for successor generation creation: 0.000213894s
[t=0.0185076s, 26272 KB] Variables: 41
[t=0.0185228s, 26272 KB] FactPairs: 462
[t=0.0185381s, 26272 KB] Bytes per state: 16
[t=0.0186598s, 26272 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0187055s, 26272 KB] 41 initial landmarks, 20 goal landmarks
[t=0.0187701s, 26272 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 57
[t=0.0187848s, 26272 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0188s, 26272 KB] g=0, 1 evaluated, 0 expanded
[t=0.0188316s, 26272 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 57
[t=0.0188477s, 26272 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0189038s, 26272 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0189213s, 26272 KB] g=1, 2 evaluated, 1 expanded
[t=0.0189766s, 26272 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0189939s, 26272 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0190089s, 26272 KB] g=2, 3 evaluated, 2 expanded
[t=0.0191521s, 26272 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0191665s, 26272 KB] g=4, 7 evaluated, 6 expanded
[t=0.0192125s, 26272 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0192351s, 26272 KB] g=4, 8 evaluated, 7 expanded
[t=0.0195211s, 26272 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0195374s, 26272 KB] g=6, 16 evaluated, 15 expanded
[t=0.019584s, 26272 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0196099s, 26272 KB] g=7, 17 evaluated, 16 expanded
[t=0.0196644s, 26272 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0196829s, 26272 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0196983s, 26272 KB] g=8, 18 evaluated, 17 expanded
[t=0.0198516s, 26272 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0198833s, 26272 KB] g=9, 22 evaluated, 21 expanded
[t=0.0199182s, 26272 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0199279s, 26272 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0199403s, 26272 KB] g=10, 23 evaluated, 22 expanded
[t=0.0201366s, 26272 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0201674s, 26272 KB] g=12, 28 evaluated, 27 expanded
[t=0.0202227s, 26272 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0202377s, 26272 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0202508s, 26272 KB] g=12, 29 evaluated, 28 expanded
[t=0.0204258s, 26272 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0204482s, 26272 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0204644s, 26272 KB] g=14, 34 evaluated, 33 expanded
[t=0.0206412s, 26272 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0206559s, 26272 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.020665s, 26272 KB] g=16, 39 evaluated, 38 expanded
[t=0.0208064s, 26272 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0208365s, 26272 KB] g=18, 43 evaluated, 42 expanded
[t=0.0209876s, 26272 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0210189s, 26272 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0210277s, 26272 KB] g=20, 47 evaluated, 46 expanded
[t=0.0210988s, 26272 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0211183s, 26272 KB] g=21, 49 evaluated, 48 expanded
[t=0.0211726s, 26272 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0211901s, 26272 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0212061s, 26272 KB] g=22, 50 evaluated, 49 expanded
[t=0.0213334s, 26272 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0213515s, 26272 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0213658s, 26272 KB] g=23, 53 evaluated, 52 expanded
[t=0.0214202s, 26272 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0214395s, 26272 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0214543s, 26272 KB] g=24, 54 evaluated, 53 expanded
[t=0.0215491s, 26272 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0215667s, 26272 KB] g=25, 56 evaluated, 55 expanded
[t=0.021623s, 26272 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0216397s, 26272 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0216528s, 26272 KB] g=26, 57 evaluated, 56 expanded
[t=0.0218447s, 26272 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0218684s, 26272 KB] g=28, 62 evaluated, 61 expanded
[t=0.0219249s, 26272 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0219429s, 26272 KB] g=28, 63 evaluated, 62 expanded
[t=0.0221897s, 26272 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0222144s, 26272 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0222311s, 26272 KB] g=30, 69 evaluated, 68 expanded
[t=0.0223888s, 26272 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0224131s, 26272 KB] g=32, 73 evaluated, 72 expanded
[t=0.0224679s, 26272 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0224869s, 26272 KB] g=32, 74 evaluated, 73 expanded
[t=0.0227143s, 26272 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0227406s, 26272 KB] g=34, 80 evaluated, 79 expanded
[t=0.0228607s, 26272 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0228836s, 26272 KB] g=34, 83 evaluated, 82 expanded
[t=0.0230109s, 26272 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0230309s, 26272 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0230468s, 26272 KB] g=36, 86 evaluated, 85 expanded
[t=0.0231324s, 26272 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0231539s, 26272 KB] g=37, 88 evaluated, 87 expanded
[t=0.0232055s, 26272 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0232255s, 26272 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0232415s, 26272 KB] g=38, 89 evaluated, 88 expanded
[t=0.0233575s, 26272 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0233755s, 26272 KB] g=39, 92 evaluated, 91 expanded
[t=0.0234243s, 26272 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0234443s, 26272 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0234594s, 26272 KB] g=40, 93 evaluated, 92 expanded
[t=0.0235681s, 26272 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0235871s, 26272 KB] g=41, 96 evaluated, 95 expanded
[t=0.0236381s, 26272 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0236555s, 26272 KB] g=42, 97 evaluated, 96 expanded
[t=0.0239109s, 26272 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0239398s, 26272 KB] g=44, 105 evaluated, 104 expanded
[t=0.0239892s, 26272 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0240093s, 26272 KB] g=46, 106 evaluated, 105 expanded
[t=0.0240833s, 26272 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0241032s, 26272 KB] g=47, 108 evaluated, 107 expanded
[t=0.0242117s, 26272 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0242302s, 26272 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0242465s, 26272 KB] g=48, 111 evaluated, 110 expanded
[t=0.0242888s, 26272 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.024309s, 26272 KB] g=49, 112 evaluated, 111 expanded
[t=0.0244084s, 26272 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0244282s, 26272 KB] g=52, 115 evaluated, 114 expanded
[t=0.0245218s, 26272 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0245403s, 26272 KB] g=54, 118 evaluated, 117 expanded
[t=0.0247279s, 26272 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0247551s, 26272 KB] g=56, 125 evaluated, 124 expanded
[t=0.0248202s, 26272 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0248381s, 26272 KB] g=57, 127 evaluated, 126 expanded
[t=0.0249393s, 26272 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.024969s, 26272 KB] g=60, 130 evaluated, 129 expanded
[t=0.0250096s, 26272 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0250274s, 26272 KB] g=61, 131 evaluated, 130 expanded
[t=0.025117s, 26272 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0251351s, 26272 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0251514s, 26272 KB] g=64, 134 evaluated, 133 expanded
[t=0.0251855s, 26272 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0252027s, 26272 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0252177s, 26272 KB] g=65, 135 evaluated, 134 expanded
[t=0.0252471s, 26272 KB] Solution found!
[t=0.0252685s, 26272 KB] Actual search time: 0.0065499s
unstack b1 b6 (1)
put-down b1 (1)
unstack b12 b2 (1)
stack b12 b6 (1)
unstack b3 b17 (1)
put-down b3 (1)
unstack b17 b5 (1)
put-down b17 (1)
unstack b5 b20 (1)
put-down b5 (1)
unstack b20 b10 (1)
stack b20 b17 (1)
unstack b10 b9 (1)
stack b10 b5 (1)
pick-up b3 (1)
stack b3 b10 (1)
unstack b12 b6 (1)
put-down b12 (1)
unstack b6 b14 (1)
stack b6 b20 (1)
unstack b14 b4 (1)
put-down b14 (1)
unstack b4 b15 (1)
put-down b4 (1)
unstack b15 b11 (1)
stack b15 b3 (1)
unstack b11 b16 (1)
stack b11 b9 (1)
pick-up b12 (1)
stack b12 b6 (1)
unstack b16 b8 (1)
stack b16 b11 (1)
unstack b8 b18 (1)
stack b8 b2 (1)
unstack b18 b19 (1)
stack b18 b12 (1)
unstack b19 b7 (1)
stack b19 b1 (1)
unstack b7 b13 (1)
stack b7 b18 (1)
pick-up b13 (1)
stack b13 b16 (1)
unstack b8 b2 (1)
put-down b8 (1)
pick-up b2 (1)
stack b2 b7 (1)
pick-up b8 (1)
stack b8 b2 (1)
unstack b13 b16 (1)
put-down b13 (1)
unstack b16 b11 (1)
put-down b16 (1)
unstack b11 b9 (1)
put-down b11 (1)
pick-up b9 (1)
stack b9 b14 (1)
pick-up b13 (1)
stack b13 b16 (1)
pick-up b11 (1)
stack b11 b9 (1)
unstack b13 b16 (1)
put-down b13 (1)
pick-up b16 (1)
stack b16 b11 (1)
pick-up b13 (1)
stack b13 b16 (1)
[t=0.0252872s, 26272 KB] Plan length: 66 step(s).
[t=0.0252872s, 26272 KB] Plan cost: 66
[t=0.0252872s, 26272 KB] Expanded 135 state(s).
[t=0.0252872s, 26272 KB] Reopened 0 state(s).
[t=0.0252872s, 26272 KB] Evaluated 136 state(s).
[t=0.0252872s, 26272 KB] Evaluations: 272
[t=0.0252872s, 26272 KB] Generated 1039 state(s).
[t=0.0252872s, 26272 KB] Dead ends: 0 state(s).
[t=0.0252872s, 26272 KB] Number of registered states: 136
[t=0.0252872s, 26272 KB] Int hash set load factor: 136/256 = 0.53125
[t=0.0252872s, 26272 KB] Int hash set resizes: 8
[t=0.0252872s, 26272 KB] Search time: 0.00662799s
[t=0.0252872s, 26272 KB] Total time: 0.0252872s
Solution found.
Peak memory: 26272 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.16s
