INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py ../bws_domain/bws_domain_actions.pddl ../bws_domain/problem_size_24/bws_problem_24_8.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.009s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.011s wall-clock]
1898 relevant atoms
1272 auxiliary atoms
3170 final queue length
5525 total queue pushes
Completing instantiation... [0.020s CPU, 0.018s wall-clock]
Instantiating: [0.030s CPU, 0.031s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
25 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.007s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.028s wall-clock]
1704 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
48 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.017s wall-clock]
Reordering and filtering variables...
49 of 49 variables necessary.
25 of 49 mutex groups necessary.
1152 of 1152 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.007s wall-clock]
Translator variables: 49
Translator derived variables: 0
Translator facts: 650
Translator goal facts: 24
Translator mutex groups: 25
Translator total mutex groups size: 625
Translator operators: 1152
Translator axioms: 0
Translator task size: 9916
Translator peak memory: 37884 KB
Writing output... [0.000s CPU, 0.006s wall-clock]
Done! [0.090s CPU, 0.105s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=1.7378e-05s, 24488 KB] reading input...
[t=0.00367165s, 25532 KB] done reading input!
[t=0.00451253s, 25928 KB] Initializing landmark count heuristic...
[t=0.00454274s, 25928 KB] Generating landmark graph...
[t=0.00461004s, 25928 KB] Building a landmark graph with reasonable orders.
[t=0.00467569s, 26060 KB] Initializing Exploration...
[t=0.00498326s, 26388 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0192098s, 26916 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0192647s, 26916 KB] Landmarks generation time: 0.0146574s
[t=0.0192805s, 26916 KB] Discovered 116 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0192963s, 26916 KB] 665 edges
[t=0.0193058s, 26916 KB] approx. reasonable orders
[t=0.0215436s, 26916 KB] approx. obedient reasonable orders
[t=0.0215826s, 26916 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0215917s, 26916 KB] Landmarks generation time: 0.0170463s
[t=0.0216012s, 26916 KB] Discovered 116 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0216095s, 26916 KB] 691 edges
[t=0.0216175s, 26916 KB] Landmark graph generation time: 0.0170815s
[t=0.0216257s, 26916 KB] Landmark graph contains 116 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0216333s, 26916 KB] Landmark graph contains 691 orderings.
[t=0.0219892s, 26916 KB] Simplifying 4560 unary operators... done! [3456 unary operators]
[t=0.0230074s, 26916 KB] time to simplify: 0.00108712s
[t=0.0231434s, 26916 KB] Initializing additive heuristic...
[t=0.0231587s, 26916 KB] Initializing FF heuristic...
[t=0.023207s, 26916 KB] Building successor generator...done!
[t=0.0234326s, 26916 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0234408s, 26916 KB] time for successor generation creation: 0.000191334s
[t=0.0234536s, 26916 KB] Variables: 49
[t=0.0234759s, 26916 KB] FactPairs: 650
[t=0.0234842s, 26916 KB] Bytes per state: 20
[t=0.0235721s, 26916 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0236027s, 26916 KB] 49 initial landmarks, 24 goal landmarks
[t=0.0236542s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 67
[t=0.023663s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 47
[t=0.0236706s, 26916 KB] g=0, 1 evaluated, 0 expanded
[t=0.0236823s, 26916 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 67
[t=0.0236902s, 26916 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 47
[t=0.023761s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 46
[t=0.0237696s, 26916 KB] g=1, 3 evaluated, 2 expanded
[t=0.0238074s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 64
[t=0.0238157s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.023823s, 26916 KB] g=2, 4 evaluated, 3 expanded
[t=0.0238892s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 63
[t=0.0238973s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.0239048s, 26916 KB] g=3, 6 evaluated, 5 expanded
[t=0.0239419s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 61
[t=0.0239501s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0239577s, 26916 KB] g=4, 7 evaluated, 6 expanded
[t=0.0240806s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 60
[t=0.0240896s, 26916 KB] g=6, 11 evaluated, 10 expanded
[t=0.0242658s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0242742s, 26916 KB] g=7, 17 evaluated, 16 expanded
[t=0.0243107s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 57
[t=0.024319s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0243267s, 26916 KB] g=8, 18 evaluated, 17 expanded
[t=0.0244716s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0244806s, 26916 KB] g=10, 23 evaluated, 22 expanded
[t=0.0245445s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0245568s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0245649s, 26916 KB] g=10, 25 evaluated, 24 expanded
[t=0.0246836s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0246923s, 26916 KB] g=12, 29 evaluated, 28 expanded
[t=0.0249801s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0249901s, 26916 KB] g=14, 39 evaluated, 38 expanded
[t=0.0250291s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0250383s, 26916 KB] g=15, 40 evaluated, 39 expanded
[t=0.0250763s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0250848s, 26916 KB] g=16, 41 evaluated, 40 expanded
[t=0.025449s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0254584s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0254661s, 26916 KB] g=18, 54 evaluated, 53 expanded
[t=0.0255033s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0255116s, 26916 KB] g=19, 55 evaluated, 54 expanded
[t=0.0258237s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0258329s, 26916 KB] g=20, 66 evaluated, 65 expanded
[t=0.0258964s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0259053s, 26916 KB] g=21, 68 evaluated, 67 expanded
[t=0.0261587s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0261672s, 26916 KB] g=23, 77 evaluated, 76 expanded
[t=0.0265044s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0265138s, 26916 KB] g=25, 89 evaluated, 88 expanded
[t=0.0267994s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0268086s, 26916 KB] g=26, 99 evaluated, 98 expanded
[t=0.0269819s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.026991s, 26916 KB] g=28, 105 evaluated, 104 expanded
[t=0.0274762s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0274985s, 26916 KB] g=30, 121 evaluated, 120 expanded
[t=0.0276187s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0276281s, 26916 KB] g=28, 125 evaluated, 124 expanded
[t=0.0280546s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0280646s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0280753s, 26916 KB] g=30, 140 evaluated, 139 expanded
[t=0.0281147s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0281233s, 26916 KB] g=31, 141 evaluated, 140 expanded
[t=0.0284319s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0284416s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0284528s, 26916 KB] g=32, 152 evaluated, 151 expanded
[t=0.0284901s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0284987s, 26916 KB] g=33, 153 evaluated, 152 expanded
[t=0.0287299s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0287416s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0287502s, 26916 KB] g=34, 161 evaluated, 160 expanded
[t=0.0287889s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0287984s, 26916 KB] g=35, 162 evaluated, 161 expanded
[t=0.0290806s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0290899s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0290983s, 26916 KB] g=36, 172 evaluated, 171 expanded
[t=0.0291356s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0291441s, 26916 KB] g=37, 173 evaluated, 172 expanded
[t=0.0295063s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0295156s, 26916 KB] g=40, 186 evaluated, 185 expanded
[t=0.0298262s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0298354s, 26916 KB] g=40, 197 evaluated, 196 expanded
[t=0.0300087s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0300175s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0300256s, 26916 KB] g=42, 203 evaluated, 202 expanded
[t=0.0301703s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0301792s, 26916 KB] g=44, 208 evaluated, 207 expanded
[t=0.0391509s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0391844s, 26916 KB] g=74, 529 evaluated, 528 expanded
[t=0.0394969s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0395085s, 26916 KB] g=76, 539 evaluated, 538 expanded
[t=0.0398733s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0398834s, 26916 KB] g=78, 552 evaluated, 551 expanded
[t=0.0404082s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0404183s, 26916 KB] g=80, 571 evaluated, 570 expanded
[t=0.0408809s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0408906s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0408986s, 26916 KB] g=82, 588 evaluated, 587 expanded
[t=0.0411771s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0411861s, 26916 KB] g=84, 598 evaluated, 597 expanded
[t=0.0412238s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0412327s, 26916 KB] g=84, 599 evaluated, 598 expanded
[t=0.0416387s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0416479s, 26916 KB] g=86, 614 evaluated, 613 expanded
[t=0.0418513s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0418599s, 26916 KB] g=86, 621 evaluated, 620 expanded
[t=0.0420593s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0420678s, 26916 KB] g=88, 628 evaluated, 627 expanded
[t=0.0421576s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0421697s, 26916 KB] g=87, 631 evaluated, 630 expanded
[t=0.0424506s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0424603s, 26916 KB] g=90, 641 evaluated, 640 expanded
[t=0.0425527s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.042562s, 26916 KB] g=91, 644 evaluated, 643 expanded
[t=0.0428699s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0428794s, 26916 KB] g=95, 655 evaluated, 654 expanded
[t=0.0430485s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0430572s, 26916 KB] g=96, 661 evaluated, 660 expanded
[t=0.0431716s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0431804s, 26916 KB] g=97, 665 evaluated, 664 expanded
[t=0.0432153s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0432235s, 26916 KB] g=98, 666 evaluated, 665 expanded
[t=0.043436s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0434461s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0434546s, 26916 KB] g=98, 673 evaluated, 672 expanded
[t=0.0435434s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0435517s, 26916 KB] g=99, 676 evaluated, 675 expanded
[t=0.0435857s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.043594s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0436017s, 26916 KB] g=100, 677 evaluated, 676 expanded
[t=0.0443117s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.044321s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0443288s, 26916 KB] g=106, 706 evaluated, 705 expanded
[t=0.0450636s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0450732s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.045081s, 26916 KB] g=112, 735 evaluated, 734 expanded
[t=0.0454807s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0454901s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0454978s, 26916 KB] g=120, 750 evaluated, 749 expanded
[t=0.0455838s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0455922s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0455998s, 26916 KB] g=122, 753 evaluated, 752 expanded
[t=0.0509511s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0509747s, 26916 KB] g=156, 975 evaluated, 974 expanded
[t=0.051199s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0512091s, 26916 KB] g=160, 984 evaluated, 983 expanded
[t=0.0512872s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0512962s, 26916 KB] g=162, 987 evaluated, 986 expanded
[t=0.0520291s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0520424s, 26916 KB] g=178, 1024 evaluated, 1023 expanded
[t=0.0522587s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0522815s, 26916 KB] g=186, 1034 evaluated, 1033 expanded
[t=0.0523523s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0523635s, 26916 KB] g=190, 1038 evaluated, 1037 expanded
[t=0.0523994s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0524079s, 26916 KB] g=191, 1039 evaluated, 1038 expanded
[t=0.0524232s, 26916 KB] Solution found!
[t=0.0524351s, 26916 KB] Actual search time: 0.0288305s
unstack b20 b17 (1)
put-down b20 (1)
unstack b17 b6 (1)
put-down b17 (1)
unstack b22 b11 (1)
put-down b22 (1)
unstack b11 b9 (1)
put-down b11 (1)
unstack b6 b8 (1)
stack b6 b9 (1)
unstack b16 b5 (1)
put-down b16 (1)
unstack b5 b12 (1)
put-down b5 (1)
unstack b12 b24 (1)
stack b12 b5 (1)
unstack b24 b2 (1)
stack b24 b11 (1)
pick-up b22 (1)
stack b22 b2 (1)
unstack b8 b4 (1)
put-down b8 (1)
unstack b4 b23 (1)
put-down b4 (1)
unstack b23 b13 (1)
stack b23 b6 (1)
unstack b13 b15 (1)
stack b13 b4 (1)
unstack b15 b18 (1)
stack b15 b22 (1)
pick-up b16 (1)
stack b16 b23 (1)
unstack b18 b7 (1)
stack b18 b20 (1)
unstack b7 b19 (1)
stack b7 b18 (1)
unstack b12 b5 (1)
put-down b12 (1)
pick-up b5 (1)
stack b5 b15 (1)
pick-up b12 (1)
stack b12 b5 (1)
unstack b16 b23 (1)
put-down b16 (1)
unstack b13 b4 (1)
put-down b13 (1)
unstack b23 b6 (1)
put-down b23 (1)
unstack b6 b9 (1)
put-down b6 (1)
pick-up b23 (1)
stack b23 b6 (1)
pick-up b13 (1)
stack b13 b4 (1)
pick-up b16 (1)
stack b16 b23 (1)
unstack b13 b4 (1)
put-down b13 (1)
unstack b12 b5 (1)
put-down b12 (1)
unstack b5 b15 (1)
put-down b5 (1)
pick-up b12 (1)
stack b12 b5 (1)
unstack b15 b22 (1)
put-down b15 (1)
unstack b22 b2 (1)
put-down b22 (1)
pick-up b15 (1)
stack b15 b22 (1)
unstack b2 b21 (1)
put-down b2 (1)
unstack b21 b10 (1)
stack b21 b16 (1)
unstack b10 b3 (1)
put-down b10 (1)
unstack b3 b14 (1)
stack b3 b8 (1)
unstack b14 b1 (1)
stack b14 b13 (1)
pick-up b1 (1)
stack b1 b24 (1)
pick-up b19 (1)
stack b19 b14 (1)
pick-up b2 (1)
stack b2 b21 (1)
pick-up b4 (1)
stack b4 b1 (1)
pick-up b9 (1)
stack b9 b3 (1)
unstack b19 b14 (1)
put-down b19 (1)
unstack b14 b13 (1)
put-down b14 (1)
pick-up b13 (1)
stack b13 b4 (1)
pick-up b14 (1)
stack b14 b13 (1)
pick-up b19 (1)
stack b19 b14 (1)
unstack b15 b22 (1)
put-down b15 (1)
pick-up b22 (1)
stack b22 b2 (1)
pick-up b15 (1)
stack b15 b22 (1)
unstack b12 b5 (1)
put-down b12 (1)
pick-up b5 (1)
stack b5 b15 (1)
pick-up b12 (1)
stack b12 b5 (1)
unstack b9 b3 (1)
put-down b9 (1)
unstack b3 b8 (1)
put-down b3 (1)
pick-up b8 (1)
stack b8 b10 (1)
pick-up b3 (1)
stack b3 b8 (1)
pick-up b9 (1)
stack b9 b3 (1)
unstack b12 b5 (1)
put-down b12 (1)
unstack b5 b15 (1)
put-down b5 (1)
pick-up b12 (1)
stack b12 b5 (1)
unstack b15 b22 (1)
put-down b15 (1)
unstack b22 b2 (1)
put-down b22 (1)
unstack b2 b21 (1)
put-down b2 (1)
pick-up b22 (1)
stack b22 b2 (1)
pick-up b15 (1)
stack b15 b22 (1)
unstack b12 b5 (1)
put-down b12 (1)
pick-up b5 (1)
stack b5 b15 (1)
pick-up b12 (1)
stack b12 b5 (1)
unstack b21 b16 (1)
put-down b21 (1)
unstack b16 b23 (1)
put-down b16 (1)
pick-up b21 (1)
stack b21 b16 (1)
unstack b23 b6 (1)
put-down b23 (1)
pick-up b6 (1)
stack b6 b9 (1)
pick-up b23 (1)
stack b23 b6 (1)
unstack b21 b16 (1)
put-down b21 (1)
pick-up b16 (1)
stack b16 b23 (1)
pick-up b21 (1)
stack b21 b16 (1)
unstack b12 b5 (1)
put-down b12 (1)
unstack b5 b15 (1)
put-down b5 (1)
unstack b15 b22 (1)
put-down b15 (1)
pick-up b5 (1)
stack b5 b15 (1)
pick-up b12 (1)
stack b12 b5 (1)
unstack b22 b2 (1)
put-down b22 (1)
pick-up b2 (1)
stack b2 b21 (1)
pick-up b22 (1)
stack b22 b2 (1)
unstack b12 b5 (1)
put-down b12 (1)
unstack b5 b15 (1)
put-down b5 (1)
pick-up b12 (1)
stack b12 b5 (1)
pick-up b15 (1)
stack b15 b22 (1)
unstack b12 b5 (1)
put-down b12 (1)
pick-up b5 (1)
stack b5 b15 (1)
pick-up b12 (1)
stack b12 b5 (1)
[t=0.0524447s, 26916 KB] Plan length: 192 step(s).
[t=0.0524447s, 26916 KB] Plan cost: 192
[t=0.0524447s, 26916 KB] Expanded 1039 state(s).
[t=0.0524447s, 26916 KB] Reopened 0 state(s).
[t=0.0524447s, 26916 KB] Evaluated 1040 state(s).
[t=0.0524447s, 26916 KB] Evaluations: 2080
[t=0.0524447s, 26916 KB] Generated 10460 state(s).
[t=0.0524447s, 26916 KB] Dead ends: 0 state(s).
[t=0.0524447s, 26916 KB] Number of registered states: 1040
[t=0.0524447s, 26916 KB] Int hash set load factor: 1040/2048 = 0.507812
[t=0.0524447s, 26916 KB] Int hash set resizes: 11
[t=0.0524447s, 26916 KB] Search time: 0.0288731s
[t=0.0524447s, 26916 KB] Total time: 0.0524447s
Solution found.
Peak memory: 26916 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.19s
