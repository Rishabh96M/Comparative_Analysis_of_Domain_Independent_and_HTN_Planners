INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py ../bws_domain/bws_domain_actions.pddl ../bws_domain/problem_size_22/bws_problem_22_9.pddl --sas-file output.sas
Parsing...
Parsing: [0.010s CPU, 0.009s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.009s wall-clock]
1608 relevant atoms
1078 auxiliary atoms
2686 final queue length
4672 total queue pushes
Completing instantiation... [0.020s CPU, 0.016s wall-clock]
Instantiating: [0.030s CPU, 0.026s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
23 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.006s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.010s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.023s wall-clock]
1430 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
44 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.011s wall-clock]
Reordering and filtering variables...
45 of 45 variables necessary.
23 of 45 mutex groups necessary.
968 of 968 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 45
Translator derived variables: 0
Translator facts: 552
Translator goal facts: 22
Translator mutex groups: 23
Translator total mutex groups size: 529
Translator operators: 968
Translator axioms: 0
Translator task size: 8342
Translator peak memory: 36976 KB
Writing output... [0.000s CPU, 0.005s wall-clock]
Done! [0.090s CPU, 0.089s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.1861e-05s, 24488 KB] reading input...
[t=0.0025581s, 25340 KB] done reading input!
[t=0.00336911s, 25736 KB] Initializing landmark count heuristic...
[t=0.00339725s, 25736 KB] Generating landmark graph...
[t=0.00345742s, 25736 KB] Building a landmark graph with reasonable orders.
[t=0.00351361s, 25736 KB] Initializing Exploration...
[t=0.00377132s, 26000 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0136667s, 26532 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0137582s, 26532 KB] Landmarks generation time: 0.0103037s
[t=0.0137735s, 26532 KB] Discovered 99 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0137908s, 26532 KB] 345 edges
[t=0.0138009s, 26532 KB] approx. reasonable orders
[t=0.014022s, 26532 KB] approx. obedient reasonable orders
[t=0.0140468s, 26532 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0140566s, 26532 KB] Landmarks generation time: 0.0106576s
[t=0.0140663s, 26532 KB] Discovered 99 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0140741s, 26532 KB] 349 edges
[t=0.0140825s, 26532 KB] Landmark graph generation time: 0.0106923s
[t=0.0140911s, 26532 KB] Landmark graph contains 99 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0140991s, 26532 KB] Landmark graph contains 349 orderings.
[t=0.0144926s, 26532 KB] Simplifying 3828 unary operators... done! [2904 unary operators]
[t=0.0154138s, 26532 KB] time to simplify: 0.00098304s
[t=0.0155341s, 26532 KB] Initializing additive heuristic...
[t=0.0155491s, 26532 KB] Initializing FF heuristic...
[t=0.0155997s, 26532 KB] Building successor generator...done!
[t=0.0157722s, 26532 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0157814s, 26532 KB] time for successor generation creation: 0.000142561s
[t=0.0157921s, 26532 KB] Variables: 45
[t=0.0158s, 26532 KB] FactPairs: 552
[t=0.0158082s, 26532 KB] Bytes per state: 20
[t=0.015901s, 26532 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0159324s, 26532 KB] 45 initial landmarks, 22 goal landmarks
[t=0.0159818s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0159906s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0159987s, 26532 KB] g=0, 1 evaluated, 0 expanded
[t=0.0160123s, 26532 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0160209s, 26532 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0162626s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0162731s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0162815s, 26532 KB] g=2, 10 evaluated, 9 expanded
[t=0.0164381s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0164478s, 26532 KB] g=4, 16 evaluated, 15 expanded
[t=0.01653s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0165387s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0165466s, 26532 KB] g=4, 19 evaluated, 18 expanded
[t=0.0166961s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0167047s, 26532 KB] g=6, 25 evaluated, 24 expanded
[t=0.0168079s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0168163s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0168239s, 26532 KB] g=6, 29 evaluated, 28 expanded
[t=0.0169522s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0169607s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0169683s, 26532 KB] g=8, 34 evaluated, 33 expanded
[t=0.0171178s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0171263s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0171339s, 26532 KB] g=10, 40 evaluated, 39 expanded
[t=0.0171907s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.017203s, 26532 KB] g=11, 42 evaluated, 41 expanded
[t=0.017237s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0172453s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0172529s, 26532 KB] g=12, 43 evaluated, 42 expanded
[t=0.0173316s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0173398s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0173474s, 26532 KB] g=13, 46 evaluated, 45 expanded
[t=0.0173801s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0173884s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0173959s, 26532 KB] g=14, 47 evaluated, 46 expanded
[t=0.0175466s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0175551s, 26532 KB] g=16, 53 evaluated, 52 expanded
[t=0.0177018s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0177103s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0177179s, 26532 KB] g=18, 59 evaluated, 58 expanded
[t=0.0185502s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0185597s, 26532 KB] g=26, 94 evaluated, 93 expanded
[t=0.0187402s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.018751s, 26532 KB] g=28, 101 evaluated, 100 expanded
[t=0.0189151s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0189242s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0189316s, 26532 KB] g=30, 107 evaluated, 106 expanded
[t=0.0194743s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0194893s, 26532 KB] g=35, 129 evaluated, 128 expanded
[t=0.0195485s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0195578s, 26532 KB] g=36, 131 evaluated, 130 expanded
[t=0.0198513s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0198608s, 26532 KB] g=38, 143 evaluated, 142 expanded
[t=0.0200369s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0200456s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0200536s, 26532 KB] g=40, 150 evaluated, 149 expanded
[t=0.0201549s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0201634s, 26532 KB] g=41, 154 evaluated, 153 expanded
[t=0.0201968s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0202049s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0202124s, 26532 KB] g=42, 155 evaluated, 154 expanded
[t=0.0203636s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.020372s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0203803s, 26532 KB] g=44, 161 evaluated, 160 expanded
[t=0.0213026s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0213161s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.021327s, 26532 KB] g=50, 201 evaluated, 200 expanded
[t=0.0231315s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0231457s, 26532 KB] g=60, 278 evaluated, 277 expanded
[t=0.0232033s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.023212s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0232202s, 26532 KB] g=62, 280 evaluated, 279 expanded
[t=0.0233891s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0233978s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0234054s, 26532 KB] g=64, 287 evaluated, 286 expanded
[t=0.0235296s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0235387s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0235461s, 26532 KB] g=66, 292 evaluated, 291 expanded
[t=0.0238026s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0238116s, 26532 KB] g=70, 303 evaluated, 302 expanded
[t=0.0239119s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0239214s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0239335s, 26532 KB] g=72, 307 evaluated, 306 expanded
[t=0.0242946s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0243085s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0243208s, 26532 KB] g=78, 321 evaluated, 320 expanded
[t=0.0251179s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0251362s, 26532 KB] g=92, 351 evaluated, 350 expanded
[t=0.0252337s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0252447s, 26532 KB] g=92, 354 evaluated, 353 expanded
[t=0.0253522s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0253621s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0253726s, 26532 KB] g=94, 358 evaluated, 357 expanded
[t=0.0256038s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0256163s, 26532 KB] g=98, 367 evaluated, 366 expanded
[t=0.0257006s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0257106s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0257218s, 26532 KB] g=100, 370 evaluated, 369 expanded
[t=0.0401277s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0401725s, 26532 KB] g=142, 1008 evaluated, 1007 expanded
[t=0.0409177s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0409377s, 26532 KB] g=150, 1039 evaluated, 1038 expanded
[t=0.0411492s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0411607s, 26532 KB] g=154, 1048 evaluated, 1047 expanded
[t=0.0412684s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.041283s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0412957s, 26532 KB] g=156, 1051 evaluated, 1050 expanded
[t=0.0419613s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0419756s, 26532 KB] g=172, 1086 evaluated, 1085 expanded
[t=0.0421352s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.042146s, 26532 KB] g=180, 1096 evaluated, 1095 expanded
[t=0.0422106s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0422211s, 26532 KB] g=184, 1100 evaluated, 1099 expanded
[t=0.0422428s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0422528s, 26532 KB] g=185, 1101 evaluated, 1100 expanded
[t=0.0422722s, 26532 KB] Solution found!
[t=0.0422866s, 26532 KB] Actual search time: 0.0263518s
unstack b15 b18 (1)
stack b15 b22 (1)
unstack b3 b5 (1)
stack b3 b8 (1)
unstack b5 b20 (1)
stack b5 b15 (1)
unstack b18 b9 (1)
stack b18 b20 (1)
unstack b9 b12 (1)
stack b9 b3 (1)
unstack b12 b17 (1)
stack b12 b5 (1)
unstack b17 b21 (1)
put-down b17 (1)
unstack b21 b7 (1)
put-down b21 (1)
pick-up b7 (1)
stack b7 b18 (1)
unstack b9 b3 (1)
put-down b9 (1)
unstack b3 b8 (1)
put-down b3 (1)
unstack b8 b16 (1)
put-down b8 (1)
pick-up b21 (1)
stack b21 b16 (1)
pick-up b3 (1)
stack b3 b8 (1)
pick-up b9 (1)
stack b9 b3 (1)
unstack b21 b16 (1)
put-down b21 (1)
unstack b16 b6 (1)
put-down b16 (1)
unstack b6 b4 (1)
stack b6 b9 (1)
unstack b4 b2 (1)
stack b4 b1 (1)
unstack b2 b19 (1)
stack b2 b21 (1)
unstack b19 b10 (1)
stack b19 b14 (1)
pick-up b16 (1)
stack b16 b6 (1)
unstack b2 b21 (1)
put-down b2 (1)
pick-up b21 (1)
stack b21 b16 (1)
pick-up b2 (1)
stack b2 b21 (1)
unstack b12 b5 (1)
put-down b12 (1)
unstack b5 b15 (1)
put-down b5 (1)
pick-up b12 (1)
stack b12 b5 (1)
unstack b15 b22 (1)
put-down b15 (1)
unstack b22 b11 (1)
stack b22 b2 (1)
unstack b11 b13 (1)
put-down b11 (1)
pick-up b13 (1)
stack b13 b4 (1)
pick-up b15 (1)
stack b15 b22 (1)
unstack b19 b14 (1)
put-down b19 (1)
pick-up b14 (1)
stack b14 b13 (1)
pick-up b19 (1)
stack b19 b14 (1)
unstack b12 b5 (1)
put-down b12 (1)
pick-up b5 (1)
stack b5 b15 (1)
pick-up b12 (1)
stack b12 b5 (1)
unstack b19 b14 (1)
put-down b19 (1)
unstack b14 b13 (1)
put-down b14 (1)
pick-up b19 (1)
stack b19 b14 (1)
unstack b13 b4 (1)
put-down b13 (1)
unstack b4 b1 (1)
put-down b4 (1)
pick-up b1 (1)
stack b1 b11 (1)
pick-up b4 (1)
stack b4 b1 (1)
pick-up b13 (1)
stack b13 b4 (1)
unstack b19 b14 (1)
put-down b19 (1)
pick-up b14 (1)
stack b14 b13 (1)
pick-up b19 (1)
stack b19 b14 (1)
unstack b12 b5 (1)
put-down b12 (1)
unstack b5 b15 (1)
put-down b5 (1)
pick-up b12 (1)
stack b12 b5 (1)
unstack b15 b22 (1)
put-down b15 (1)
unstack b22 b2 (1)
put-down b22 (1)
unstack b2 b21 (1)
put-down b2 (1)
pick-up b22 (1)
stack b22 b2 (1)
pick-up b15 (1)
stack b15 b22 (1)
unstack b12 b5 (1)
put-down b12 (1)
pick-up b5 (1)
stack b5 b15 (1)
pick-up b12 (1)
stack b12 b5 (1)
unstack b21 b16 (1)
put-down b21 (1)
unstack b16 b6 (1)
put-down b16 (1)
unstack b6 b9 (1)
put-down b6 (1)
pick-up b16 (1)
stack b16 b6 (1)
pick-up b21 (1)
stack b21 b16 (1)
unstack b9 b3 (1)
put-down b9 (1)
unstack b3 b8 (1)
put-down b3 (1)
pick-up b8 (1)
stack b8 b10 (1)
pick-up b3 (1)
stack b3 b8 (1)
pick-up b9 (1)
stack b9 b3 (1)
unstack b21 b16 (1)
put-down b21 (1)
unstack b16 b6 (1)
put-down b16 (1)
pick-up b21 (1)
stack b21 b16 (1)
pick-up b6 (1)
stack b6 b9 (1)
unstack b21 b16 (1)
put-down b21 (1)
pick-up b16 (1)
stack b16 b6 (1)
pick-up b21 (1)
stack b21 b16 (1)
unstack b12 b5 (1)
put-down b12 (1)
unstack b5 b15 (1)
put-down b5 (1)
unstack b15 b22 (1)
put-down b15 (1)
pick-up b5 (1)
stack b5 b15 (1)
pick-up b12 (1)
stack b12 b5 (1)
unstack b22 b2 (1)
put-down b22 (1)
pick-up b2 (1)
stack b2 b21 (1)
pick-up b22 (1)
stack b22 b2 (1)
unstack b12 b5 (1)
put-down b12 (1)
unstack b5 b15 (1)
put-down b5 (1)
pick-up b12 (1)
stack b12 b5 (1)
pick-up b15 (1)
stack b15 b22 (1)
unstack b12 b5 (1)
put-down b12 (1)
pick-up b5 (1)
stack b5 b15 (1)
pick-up b12 (1)
stack b12 b5 (1)
[t=0.042297s, 26532 KB] Plan length: 186 step(s).
[t=0.042297s, 26532 KB] Plan cost: 186
[t=0.042297s, 26532 KB] Expanded 1101 state(s).
[t=0.042297s, 26532 KB] Reopened 0 state(s).
[t=0.042297s, 26532 KB] Evaluated 1102 state(s).
[t=0.042297s, 26532 KB] Evaluations: 2204
[t=0.042297s, 26532 KB] Generated 9455 state(s).
[t=0.042297s, 26532 KB] Dead ends: 0 state(s).
[t=0.042297s, 26532 KB] Number of registered states: 1102
[t=0.042297s, 26532 KB] Int hash set load factor: 1102/2048 = 0.538086
[t=0.042297s, 26532 KB] Int hash set resizes: 11
[t=0.042297s, 26532 KB] Search time: 0.0263963s
[t=0.042297s, 26532 KB] Total time: 0.042297s
Solution found.
Peak memory: 26532 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.17s
