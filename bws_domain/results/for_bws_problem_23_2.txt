INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py ../bws_domain/bws_domain_actions.pddl ../bws_domain/problem_size_23/bws_problem_23_2.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.020s wall-clock]
1750 relevant atoms
1173 auxiliary atoms
2923 final queue length
5089 total queue pushes
Completing instantiation... [0.020s CPU, 0.019s wall-clock]
Instantiating: [0.040s CPU, 0.041s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
24 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.008s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.027s wall-clock]
1564 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
46 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
47 of 47 variables necessary.
24 of 47 mutex groups necessary.
1058 of 1058 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.007s wall-clock]
Translator variables: 47
Translator derived variables: 0
Translator facts: 600
Translator goal facts: 23
Translator mutex groups: 24
Translator total mutex groups size: 576
Translator operators: 1058
Translator axioms: 0
Translator task size: 9112
Translator peak memory: 37488 KB
Writing output... [0.000s CPU, 0.006s wall-clock]
Done! [0.100s CPU, 0.106s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=1.8118e-05s, 24488 KB] reading input...
[t=0.00335689s, 25428 KB] done reading input!
[t=0.00436872s, 25824 KB] Initializing landmark count heuristic...
[t=0.00441601s, 25824 KB] Generating landmark graph...
[t=0.00450196s, 25824 KB] Building a landmark graph with reasonable orders.
[t=0.00457621s, 25956 KB] Initializing Exploration...
[t=0.00490699s, 26256 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0176866s, 26656 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.017773s, 26656 KB] Landmarks generation time: 0.0132703s
[t=0.0177878s, 26656 KB] Discovered 110 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.017805s, 26656 KB] 466 edges
[t=0.0178151s, 26656 KB] approx. reasonable orders
[t=0.0220344s, 26656 KB] approx. obedient reasonable orders
[t=0.0221094s, 26656 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0221218s, 26656 KB] Landmarks generation time: 0.0177168s
[t=0.0221459s, 26656 KB] Discovered 110 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0221548s, 26656 KB] 524 edges
[t=0.0221639s, 26656 KB] Landmark graph generation time: 0.0177548s
[t=0.0221725s, 26656 KB] Landmark graph contains 110 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0221815s, 26656 KB] Landmark graph contains 524 orderings.
[t=0.0225323s, 26656 KB] Simplifying 4186 unary operators... done! [3174 unary operators]
[t=0.0235412s, 26788 KB] time to simplify: 0.00107482s
[t=0.0236732s, 26788 KB] Initializing additive heuristic...
[t=0.023689s, 26788 KB] Initializing FF heuristic...
[t=0.0237398s, 26788 KB] Building successor generator...done!
[t=0.0239404s, 26788 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0239495s, 26788 KB] time for successor generation creation: 0.000166815s
[t=0.0239633s, 26788 KB] Variables: 47
[t=0.0239748s, 26788 KB] FactPairs: 600
[t=0.0239859s, 26788 KB] Bytes per state: 20
[t=0.0241615s, 26788 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0242283s, 26788 KB] 47 initial landmarks, 23 goal landmarks
[t=0.0243103s, 26788 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 63
[t=0.0243267s, 26788 KB] New best heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0243411s, 26788 KB] g=0, 1 evaluated, 0 expanded
[t=0.0243636s, 26788 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 63
[t=0.0243773s, 26788 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0245522s, 26788 KB] New best heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.0245694s, 26788 KB] g=1, 4 evaluated, 3 expanded
[t=0.0246359s, 26788 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 60
[t=0.0246506s, 26788 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0246646s, 26788 KB] g=2, 5 evaluated, 4 expanded
[t=0.0248574s, 26788 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.0248951s, 26788 KB] g=3, 9 evaluated, 8 expanded
[t=0.0250477s, 26788 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 58
[t=0.0250615s, 26788 KB] g=5, 12 evaluated, 11 expanded
[t=0.0254614s, 26788 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 57
[t=0.025477s, 26788 KB] g=8, 24 evaluated, 23 expanded
[t=0.025571s, 26788 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0255803s, 26788 KB] g=9, 27 evaluated, 26 expanded
[t=0.0260305s, 26788 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0260399s, 26788 KB] g=12, 43 evaluated, 42 expanded
[t=0.0264279s, 26788 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0264378s, 26788 KB] g=14, 57 evaluated, 56 expanded
[t=0.0265026s, 26788 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0265119s, 26788 KB] g=14, 59 evaluated, 58 expanded
[t=0.0269883s, 26788 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0269978s, 26788 KB] g=16, 76 evaluated, 75 expanded
[t=0.0270998s, 26788 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.027115s, 26788 KB] g=16, 79 evaluated, 78 expanded
[t=0.0274853s, 26788 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0274956s, 26788 KB] g=18, 92 evaluated, 91 expanded
[t=0.0276686s, 26788 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0276788s, 26788 KB] g=18, 98 evaluated, 97 expanded
[t=0.0283052s, 26788 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0283187s, 26788 KB] g=20, 120 evaluated, 119 expanded
[t=0.0285844s, 26788 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0285944s, 26788 KB] g=21, 129 evaluated, 128 expanded
[t=0.0286604s, 26788 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0286708s, 26788 KB] g=22, 131 evaluated, 130 expanded
[t=0.0290951s, 26788 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.029105s, 26788 KB] g=22, 146 evaluated, 145 expanded
[t=0.0293407s, 26788 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0293503s, 26788 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0293589s, 26788 KB] g=24, 154 evaluated, 153 expanded
[t=0.029623s, 26788 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0296328s, 26788 KB] g=26, 163 evaluated, 162 expanded
[t=0.0297005s, 26788 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0297108s, 26788 KB] g=26, 165 evaluated, 164 expanded
[t=0.0301831s, 26788 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0301937s, 26788 KB] g=28, 182 evaluated, 181 expanded
[t=0.0302335s, 26788 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0302428s, 26788 KB] g=28, 183 evaluated, 182 expanded
[t=0.0308387s, 26788 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0308527s, 26788 KB] g=30, 204 evaluated, 203 expanded
[t=0.031148s, 26788 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0311619s, 26788 KB] g=32, 214 evaluated, 213 expanded
[t=0.0315933s, 26788 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0316051s, 26788 KB] g=32, 229 evaluated, 228 expanded
[t=0.031705s, 26788 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0317153s, 26788 KB] g=34, 232 evaluated, 231 expanded
[t=0.0322865s, 26788 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0323032s, 26788 KB] g=34, 251 evaluated, 250 expanded
[t=0.0331268s, 26788 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0331421s, 26788 KB] g=36, 279 evaluated, 278 expanded
[t=0.0335929s, 26788 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0336043s, 26788 KB] g=38, 294 evaluated, 293 expanded
[t=0.0340662s, 26788 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0340801s, 26788 KB] g=40, 309 evaluated, 308 expanded
[t=0.0341462s, 26788 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0341563s, 26788 KB] g=38, 311 evaluated, 310 expanded
[t=0.0349818s, 26788 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0350028s, 26788 KB] g=40, 339 evaluated, 338 expanded
[t=0.0350453s, 26788 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0350556s, 26788 KB] g=42, 340 evaluated, 339 expanded
[t=0.035468s, 26788 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0354822s, 26788 KB] g=44, 354 evaluated, 353 expanded
[t=0.0359962s, 26788 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0360093s, 26788 KB] g=42, 372 evaluated, 371 expanded
[t=0.0366062s, 26788 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0366216s, 26788 KB] g=44, 393 evaluated, 392 expanded
[t=0.0380166s, 26788 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0380362s, 26788 KB] g=50, 444 evaluated, 443 expanded
[t=0.0463629s, 26788 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0463951s, 26788 KB] g=64, 758 evaluated, 757 expanded
[t=0.0553904s, 26788 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0554917s, 26788 KB] g=82, 1080 evaluated, 1079 expanded
[t=0.10025s, 27052 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.100329s, 27052 KB] g=104, 2653 evaluated, 2652 expanded
[t=0.100586s, 27052 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.100599s, 27052 KB] g=106, 2662 evaluated, 2661 expanded
[t=0.100822s, 27052 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.100833s, 27052 KB] g=108, 2670 evaluated, 2669 expanded
[t=0.100973s, 27052 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.100984s, 27052 KB] g=109, 2675 evaluated, 2674 expanded
[t=0.101234s, 27052 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.101244s, 27052 KB] g=112, 2684 evaluated, 2683 expanded
[t=0.101657s, 27052 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.101693s, 27052 KB] g=114, 2695 evaluated, 2694 expanded
[t=0.10221s, 27052 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.102238s, 27052 KB] g=116, 2710 evaluated, 2709 expanded
[t=0.102571s, 27052 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.102582s, 27052 KB] g=112, 2722 evaluated, 2721 expanded
[t=0.102698s, 27052 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.102709s, 27052 KB] g=118, 2726 evaluated, 2725 expanded
[t=0.102854s, 27052 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.102864s, 27052 KB] g=114, 2731 evaluated, 2730 expanded
[t=0.103185s, 27052 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.103196s, 27052 KB] g=120, 2743 evaluated, 2742 expanded
[t=0.103472s, 27052 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.103484s, 27052 KB] g=121, 2753 evaluated, 2752 expanded
[t=0.103705s, 27052 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.103715s, 27052 KB] g=122, 2761 evaluated, 2760 expanded
[t=0.103907s, 27052 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.103916s, 27052 KB] g=123, 2768 evaluated, 2767 expanded
[t=0.104157s, 27052 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.104177s, 27052 KB] g=124, 2776 evaluated, 2775 expanded
[t=0.104354s, 27052 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.104365s, 27052 KB] g=125, 2782 evaluated, 2781 expanded
[t=0.104612s, 27052 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.104623s, 27052 KB] g=128, 2791 evaluated, 2790 expanded
[t=0.104711s, 27052 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.104721s, 27052 KB] g=129, 2794 evaluated, 2793 expanded
[t=0.104988s, 27052 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.105002s, 27052 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.105011s, 27052 KB] g=132, 2803 evaluated, 2802 expanded
[t=0.105095s, 27052 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.105106s, 27052 KB] g=133, 2806 evaluated, 2805 expanded
[t=0.10514s, 27052 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.105149s, 27052 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.105158s, 27052 KB] g=134, 2807 evaluated, 2806 expanded
[t=0.105546s, 27052 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.10556s, 27052 KB] g=138, 2823 evaluated, 2822 expanded
[t=0.105666s, 27052 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.105676s, 27052 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.105684s, 27052 KB] g=140, 2827 evaluated, 2826 expanded
[t=0.106334s, 27052 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.106347s, 27052 KB] g=148, 2855 evaluated, 2854 expanded
[t=0.106421s, 27052 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.106431s, 27052 KB] g=149, 2858 evaluated, 2857 expanded
[t=0.106678s, 27052 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.106691s, 27052 KB] g=151, 2869 evaluated, 2868 expanded
[t=0.10681s, 27052 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.106821s, 27052 KB] g=152, 2874 evaluated, 2873 expanded
[t=0.10692s, 27052 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.10693s, 27052 KB] g=152, 2878 evaluated, 2877 expanded
[t=0.106963s, 27052 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.106972s, 27052 KB] g=154, 2879 evaluated, 2878 expanded
[t=0.107124s, 27052 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.107136s, 27052 KB] g=153, 2886 evaluated, 2885 expanded
[t=0.107308s, 27052 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.107318s, 27052 KB] g=154, 2894 evaluated, 2893 expanded
[t=0.107444s, 27052 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.107455s, 27052 KB] g=155, 2900 evaluated, 2899 expanded
[t=0.107562s, 27052 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.107571s, 27052 KB] g=156, 2905 evaluated, 2904 expanded
[t=0.107654s, 27052 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.107672s, 27052 KB] g=157, 2909 evaluated, 2908 expanded
[t=0.107731s, 27052 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.107743s, 27052 KB] g=158, 2911 evaluated, 2910 expanded
[t=0.107836s, 27052 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.107851s, 27052 KB] g=160, 2915 evaluated, 2914 expanded
[t=0.107897s, 27052 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.107907s, 27052 KB] g=160, 2917 evaluated, 2916 expanded
[t=0.107968s, 27052 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.107978s, 27052 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.107987s, 27052 KB] g=162, 2920 evaluated, 2919 expanded
[t=0.108168s, 27052 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.108181s, 27052 KB] g=170, 2931 evaluated, 2930 expanded
[t=0.108244s, 27052 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.108264s, 27052 KB] g=174, 2935 evaluated, 2934 expanded
[t=0.108289s, 27052 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.108301s, 27052 KB] g=175, 2936 evaluated, 2935 expanded
[t=0.108323s, 27052 KB] Solution found!
[t=0.108344s, 27052 KB] Actual search time: 0.0841141s
unstack b20 b2 (1)
put-down b20 (1)
unstack b3 b11 (1)
put-down b3 (1)
unstack b11 b4 (1)
put-down b11 (1)
unstack b17 b16 (1)
put-down b17 (1)
unstack b16 b10 (1)
put-down b16 (1)
unstack b10 b22 (1)
put-down b10 (1)
unstack b19 b5 (1)
stack b19 b10 (1)
pick-up b17 (1)
stack b17 b22 (1)
unstack b2 b13 (1)
stack b2 b5 (1)
unstack b4 b1 (1)
put-down b4 (1)
unstack b1 b8 (1)
put-down b1 (1)
unstack b8 b21 (1)
stack b8 b2 (1)
pick-up b21 (1)
stack b21 b4 (1)
pick-up b3 (1)
stack b3 b21 (1)
unstack b13 b23 (1)
put-down b13 (1)
unstack b23 b12 (1)
stack b23 b17 (1)
unstack b12 b7 (1)
put-down b12 (1)
pick-up b13 (1)
stack b13 b12 (1)
unstack b7 b9 (1)
stack b7 b8 (1)
unstack b9 b14 (1)
stack b9 b19 (1)
pick-up b11 (1)
stack b11 b14 (1)
pick-up b16 (1)
stack b16 b9 (1)
unstack b11 b14 (1)
put-down b11 (1)
pick-up b14 (1)
stack b14 b7 (1)
pick-up b11 (1)
stack b11 b14 (1)
unstack b3 b21 (1)
put-down b3 (1)
unstack b21 b4 (1)
put-down b21 (1)
pick-up b3 (1)
stack b3 b21 (1)
pick-up b4 (1)
stack b4 b23 (1)
unstack b3 b21 (1)
put-down b3 (1)
pick-up b21 (1)
stack b21 b4 (1)
pick-up b3 (1)
stack b3 b21 (1)
unstack b16 b9 (1)
put-down b16 (1)
unstack b9 b19 (1)
put-down b9 (1)
pick-up b16 (1)
stack b16 b9 (1)
unstack b19 b10 (1)
put-down b19 (1)
pick-up b10 (1)
stack b10 b13 (1)
pick-up b19 (1)
stack b19 b10 (1)
unstack b16 b9 (1)
put-down b16 (1)
pick-up b9 (1)
stack b9 b19 (1)
pick-up b16 (1)
stack b16 b9 (1)
unstack b11 b14 (1)
put-down b11 (1)
unstack b14 b7 (1)
put-down b14 (1)
unstack b7 b8 (1)
put-down b7 (1)
pick-up b14 (1)
stack b14 b7 (1)
pick-up b11 (1)
stack b11 b14 (1)
unstack b8 b2 (1)
put-down b8 (1)
unstack b2 b5 (1)
put-down b2 (1)
pick-up b8 (1)
stack b8 b2 (1)
unstack b5 b6 (1)
put-down b5 (1)
unstack b6 b18 (1)
put-down b6 (1)
unstack b18 b15 (1)
stack b18 b20 (1)
pick-up b15 (1)
stack b15 b1 (1)
pick-up b5 (1)
stack b5 b6 (1)
unstack b3 b21 (1)
put-down b3 (1)
unstack b21 b4 (1)
put-down b21 (1)
unstack b4 b23 (1)
put-down b4 (1)
unstack b23 b17 (1)
put-down b23 (1)
unstack b17 b22 (1)
put-down b17 (1)
pick-up b22 (1)
stack b22 b18 (1)
pick-up b17 (1)
stack b17 b22 (1)
pick-up b23 (1)
stack b23 b17 (1)
pick-up b3 (1)
stack b3 b21 (1)
pick-up b4 (1)
stack b4 b23 (1)
unstack b3 b21 (1)
put-down b3 (1)
pick-up b21 (1)
stack b21 b4 (1)
pick-up b3 (1)
stack b3 b21 (1)
unstack b8 b2 (1)
put-down b8 (1)
pick-up b2 (1)
stack b2 b5 (1)
pick-up b8 (1)
stack b8 b2 (1)
unstack b16 b9 (1)
put-down b16 (1)
unstack b9 b19 (1)
put-down b9 (1)
unstack b19 b10 (1)
put-down b19 (1)
unstack b10 b13 (1)
put-down b10 (1)
unstack b13 b12 (1)
put-down b13 (1)
pick-up b12 (1)
stack b12 b15 (1)
pick-up b13 (1)
stack b13 b12 (1)
pick-up b10 (1)
stack b10 b13 (1)
pick-up b19 (1)
stack b19 b10 (1)
pick-up b9 (1)
stack b9 b19 (1)
pick-up b16 (1)
stack b16 b9 (1)
unstack b11 b14 (1)
put-down b11 (1)
unstack b14 b7 (1)
put-down b14 (1)
pick-up b11 (1)
stack b11 b14 (1)
pick-up b7 (1)
stack b7 b8 (1)
unstack b11 b14 (1)
put-down b11 (1)
pick-up b14 (1)
stack b14 b7 (1)
pick-up b11 (1)
stack b11 b14 (1)
[t=0.108363s, 27052 KB] Plan length: 176 step(s).
[t=0.108363s, 27052 KB] Plan cost: 176
[t=0.108363s, 27052 KB] Expanded 2936 state(s).
[t=0.108363s, 27052 KB] Reopened 0 state(s).
[t=0.108363s, 27052 KB] Evaluated 2937 state(s).
[t=0.108363s, 27052 KB] Evaluations: 5874
[t=0.108363s, 27052 KB] Generated 30187 state(s).
[t=0.108363s, 27052 KB] Dead ends: 0 state(s).
[t=0.108363s, 27052 KB] Number of registered states: 2937
[t=0.108363s, 27052 KB] Int hash set load factor: 2937/4096 = 0.717041
[t=0.108363s, 27052 KB] Int hash set resizes: 12
[t=0.108363s, 27052 KB] Search time: 0.0842021s
[t=0.108363s, 27052 KB] Total time: 0.108363s
Solution found.
Peak memory: 27052 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.27s
