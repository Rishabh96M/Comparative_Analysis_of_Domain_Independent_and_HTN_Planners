INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py ../bws_domain/bws_domain_actions.pddl ../bws_domain/problem_size_23/bws_problem_23_2.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.009s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.010s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.010s wall-clock]
1750 relevant atoms
1173 auxiliary atoms
2923 final queue length
5089 total queue pushes
Completing instantiation... [0.010s CPU, 0.017s wall-clock]
Instantiating: [0.030s CPU, 0.028s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
24 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.007s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.025s wall-clock]
1564 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
46 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.012s wall-clock]
Reordering and filtering variables...
47 of 47 variables necessary.
24 of 47 mutex groups necessary.
1058 of 1058 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 47
Translator derived variables: 0
Translator facts: 600
Translator goal facts: 23
Translator mutex groups: 24
Translator total mutex groups size: 576
Translator operators: 1058
Translator axioms: 0
Translator task size: 9112
Translator peak memory: 37488 KB
Writing output... [0.010s CPU, 0.005s wall-clock]
Done! [0.090s CPU, 0.094s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.419e-05s, 24488 KB] reading input...
[t=0.00314132s, 25428 KB] done reading input!
[t=0.003982s, 25824 KB] Initializing landmark count heuristic...
[t=0.00401206s, 25824 KB] Generating landmark graph...
[t=0.00407759s, 25824 KB] Building a landmark graph with reasonable orders.
[t=0.00414063s, 25956 KB] Initializing Exploration...
[t=0.00444632s, 26256 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.016612s, 26656 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.016677s, 26656 KB] Landmarks generation time: 0.0126011s
[t=0.016691s, 26656 KB] Discovered 110 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0167073s, 26656 KB] 466 edges
[t=0.0167175s, 26656 KB] approx. reasonable orders
[t=0.0200934s, 26656 KB] approx. obedient reasonable orders
[t=0.0201272s, 26656 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0201368s, 26656 KB] Landmarks generation time: 0.0161212s
[t=0.020146s, 26656 KB] Discovered 110 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0201541s, 26656 KB] 524 edges
[t=0.0201622s, 26656 KB] Landmark graph generation time: 0.0161571s
[t=0.0201706s, 26656 KB] Landmark graph contains 110 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0201785s, 26656 KB] Landmark graph contains 524 orderings.
[t=0.0204958s, 26656 KB] Simplifying 4186 unary operators... done! [3174 unary operators]
[t=0.0215155s, 26788 KB] time to simplify: 0.00108557s
[t=0.0216477s, 26788 KB] Initializing additive heuristic...
[t=0.021662s, 26788 KB] Initializing FF heuristic...
[t=0.0217105s, 26788 KB] Building successor generator...done!
[t=0.0218937s, 26788 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0219017s, 26788 KB] time for successor generation creation: 0.00015255s
[t=0.0219137s, 26788 KB] Variables: 47
[t=0.0219216s, 26788 KB] FactPairs: 600
[t=0.0219291s, 26788 KB] Bytes per state: 20
[t=0.022007s, 26788 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0220378s, 26788 KB] 47 initial landmarks, 23 goal landmarks
[t=0.0220873s, 26788 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 63
[t=0.0220963s, 26788 KB] New best heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0221044s, 26788 KB] g=0, 1 evaluated, 0 expanded
[t=0.022117s, 26788 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 63
[t=0.0221253s, 26788 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0222225s, 26788 KB] New best heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.0222318s, 26788 KB] g=1, 4 evaluated, 3 expanded
[t=0.0222691s, 26788 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 60
[t=0.0222775s, 26788 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0222854s, 26788 KB] g=2, 5 evaluated, 4 expanded
[t=0.0224114s, 26788 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.0224201s, 26788 KB] g=3, 9 evaluated, 8 expanded
[t=0.0225153s, 26788 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 58
[t=0.0225239s, 26788 KB] g=5, 12 evaluated, 11 expanded
[t=0.0228507s, 26788 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 57
[t=0.0228601s, 26788 KB] g=8, 24 evaluated, 23 expanded
[t=0.0229487s, 26788 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0229572s, 26788 KB] g=9, 27 evaluated, 26 expanded
[t=0.0233785s, 26788 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0233883s, 26788 KB] g=12, 43 evaluated, 42 expanded
[t=0.0237547s, 26788 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0237643s, 26788 KB] g=14, 57 evaluated, 56 expanded
[t=0.0238253s, 26788 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0238336s, 26788 KB] g=14, 59 evaluated, 58 expanded
[t=0.0242809s, 26788 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0242898s, 26788 KB] g=16, 76 evaluated, 75 expanded
[t=0.0243772s, 26788 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0243902s, 26788 KB] g=16, 79 evaluated, 78 expanded
[t=0.0247318s, 26788 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.024741s, 26788 KB] g=18, 92 evaluated, 91 expanded
[t=0.0249052s, 26788 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0249139s, 26788 KB] g=18, 98 evaluated, 97 expanded
[t=0.0254885s, 26788 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0254982s, 26788 KB] g=20, 120 evaluated, 119 expanded
[t=0.0257589s, 26788 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0257676s, 26788 KB] g=21, 129 evaluated, 128 expanded
[t=0.0258292s, 26788 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0258376s, 26788 KB] g=22, 131 evaluated, 130 expanded
[t=0.02624s, 26788 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.02625s, 26788 KB] g=22, 146 evaluated, 145 expanded
[t=0.0264692s, 26788 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.026478s, 26788 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0264857s, 26788 KB] g=24, 154 evaluated, 153 expanded
[t=0.0267256s, 26788 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0267345s, 26788 KB] g=26, 163 evaluated, 162 expanded
[t=0.0267972s, 26788 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0268057s, 26788 KB] g=26, 165 evaluated, 164 expanded
[t=0.0272411s, 26788 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0272506s, 26788 KB] g=28, 182 evaluated, 181 expanded
[t=0.0272889s, 26788 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0272973s, 26788 KB] g=28, 183 evaluated, 182 expanded
[t=0.027838s, 26788 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0278474s, 26788 KB] g=30, 204 evaluated, 203 expanded
[t=0.0281056s, 26788 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0281143s, 26788 KB] g=32, 214 evaluated, 213 expanded
[t=0.0284995s, 26788 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0285088s, 26788 KB] g=32, 229 evaluated, 228 expanded
[t=0.0285981s, 26788 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0286066s, 26788 KB] g=34, 232 evaluated, 231 expanded
[t=0.0290981s, 26788 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0291076s, 26788 KB] g=34, 251 evaluated, 250 expanded
[t=0.029859s, 26788 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0298704s, 26788 KB] g=36, 279 evaluated, 278 expanded
[t=0.0302648s, 26788 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0302749s, 26788 KB] g=38, 294 evaluated, 293 expanded
[t=0.0306706s, 26788 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0306804s, 26788 KB] g=40, 309 evaluated, 308 expanded
[t=0.0307407s, 26788 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0307494s, 26788 KB] g=38, 311 evaluated, 310 expanded
[t=0.0315438s, 26788 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0315606s, 26788 KB] g=40, 339 evaluated, 338 expanded
[t=0.0315994s, 26788 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0316085s, 26788 KB] g=42, 340 evaluated, 339 expanded
[t=0.0319855s, 26788 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.031996s, 26788 KB] g=44, 354 evaluated, 353 expanded
[t=0.0324761s, 26788 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0324865s, 26788 KB] g=42, 372 evaluated, 371 expanded
[t=0.0330307s, 26788 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0330407s, 26788 KB] g=44, 393 evaluated, 392 expanded
[t=0.034393s, 26788 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.034406s, 26788 KB] g=50, 444 evaluated, 443 expanded
[t=0.0423417s, 26788 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0423678s, 26788 KB] g=64, 758 evaluated, 757 expanded
[t=0.0506056s, 26788 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0506275s, 26788 KB] g=82, 1080 evaluated, 1079 expanded
[t=0.0914773s, 27052 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0915478s, 27052 KB] g=104, 2653 evaluated, 2652 expanded
[t=0.0917986s, 27052 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0918099s, 27052 KB] g=106, 2662 evaluated, 2661 expanded
[t=0.0920209s, 27052 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0920313s, 27052 KB] g=108, 2670 evaluated, 2669 expanded
[t=0.0921636s, 27052 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0921737s, 27052 KB] g=109, 2675 evaluated, 2674 expanded
[t=0.0924054s, 27052 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0924144s, 27052 KB] g=112, 2684 evaluated, 2683 expanded
[t=0.0926964s, 27052 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0927067s, 27052 KB] g=114, 2695 evaluated, 2694 expanded
[t=0.0930901s, 27052 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0930996s, 27052 KB] g=116, 2710 evaluated, 2709 expanded
[t=0.0934057s, 27052 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0934164s, 27052 KB] g=112, 2722 evaluated, 2721 expanded
[t=0.0935289s, 27052 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.093544s, 27052 KB] g=118, 2726 evaluated, 2725 expanded
[t=0.0936917s, 27052 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0937007s, 27052 KB] g=114, 2731 evaluated, 2730 expanded
[t=0.0940035s, 27052 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0940143s, 27052 KB] g=120, 2743 evaluated, 2742 expanded
[t=0.0942769s, 27052 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0942874s, 27052 KB] g=121, 2753 evaluated, 2752 expanded
[t=0.0944957s, 27052 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0945051s, 27052 KB] g=122, 2761 evaluated, 2760 expanded
[t=0.0946857s, 27052 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0946944s, 27052 KB] g=123, 2768 evaluated, 2767 expanded
[t=0.0949033s, 27052 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0949196s, 27052 KB] g=124, 2776 evaluated, 2775 expanded
[t=0.0950782s, 27052 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0950869s, 27052 KB] g=125, 2782 evaluated, 2781 expanded
[t=0.0953152s, 27052 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.095325s, 27052 KB] g=128, 2791 evaluated, 2790 expanded
[t=0.0954074s, 27052 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0954161s, 27052 KB] g=129, 2794 evaluated, 2793 expanded
[t=0.0956495s, 27052 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0956609s, 27052 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.09567s, 27052 KB] g=132, 2803 evaluated, 2802 expanded
[t=0.0957495s, 27052 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0957594s, 27052 KB] g=133, 2806 evaluated, 2805 expanded
[t=0.0957913s, 27052 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0957995s, 27052 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0958071s, 27052 KB] g=134, 2807 evaluated, 2806 expanded
[t=0.0961732s, 27052 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0961865s, 27052 KB] g=138, 2823 evaluated, 2822 expanded
[t=0.0962845s, 27052 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0962934s, 27052 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0963012s, 27052 KB] g=140, 2827 evaluated, 2826 expanded
[t=0.0969002s, 27052 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0969106s, 27052 KB] g=148, 2855 evaluated, 2854 expanded
[t=0.0969785s, 27052 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0969882s, 27052 KB] g=149, 2858 evaluated, 2857 expanded
[t=0.0972197s, 27052 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0972303s, 27052 KB] g=151, 2869 evaluated, 2868 expanded
[t=0.097342s, 27052 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.097352s, 27052 KB] g=152, 2874 evaluated, 2873 expanded
[t=0.0974435s, 27052 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0974522s, 27052 KB] g=152, 2878 evaluated, 2877 expanded
[t=0.0974851s, 27052 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0974946s, 27052 KB] g=154, 2879 evaluated, 2878 expanded
[t=0.0976414s, 27052 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0976514s, 27052 KB] g=153, 2886 evaluated, 2885 expanded
[t=0.0978121s, 27052 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0978209s, 27052 KB] g=154, 2894 evaluated, 2893 expanded
[t=0.0979387s, 27052 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0979484s, 27052 KB] g=155, 2900 evaluated, 2899 expanded
[t=0.098049s, 27052 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0980578s, 27052 KB] g=156, 2905 evaluated, 2904 expanded
[t=0.0981355s, 27052 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0981476s, 27052 KB] g=157, 2909 evaluated, 2908 expanded
[t=0.0982069s, 27052 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0982156s, 27052 KB] g=158, 2911 evaluated, 2910 expanded
[t=0.0982973s, 27052 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0983221s, 27052 KB] g=160, 2915 evaluated, 2914 expanded
[t=0.0983651s, 27052 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0983739s, 27052 KB] g=160, 2917 evaluated, 2916 expanded
[t=0.098433s, 27052 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0984418s, 27052 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0984497s, 27052 KB] g=162, 2920 evaluated, 2919 expanded
[t=0.0986202s, 27052 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0986301s, 27052 KB] g=170, 2931 evaluated, 2930 expanded
[t=0.0986881s, 27052 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0986975s, 27052 KB] g=174, 2935 evaluated, 2934 expanded
[t=0.0987346s, 27052 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.098743s, 27052 KB] g=175, 2936 evaluated, 2935 expanded
[t=0.0987573s, 27052 KB] Solution found!
[t=0.0987711s, 27052 KB] Actual search time: 0.0767303s
unstack b20 b2 (1)
put-down b20 (1)
unstack b3 b11 (1)
put-down b3 (1)
unstack b11 b4 (1)
put-down b11 (1)
unstack b17 b16 (1)
put-down b17 (1)
unstack b16 b10 (1)
put-down b16 (1)
unstack b10 b22 (1)
put-down b10 (1)
unstack b19 b5 (1)
stack b19 b10 (1)
pick-up b17 (1)
stack b17 b22 (1)
unstack b2 b13 (1)
stack b2 b5 (1)
unstack b4 b1 (1)
put-down b4 (1)
unstack b1 b8 (1)
put-down b1 (1)
unstack b8 b21 (1)
stack b8 b2 (1)
pick-up b21 (1)
stack b21 b4 (1)
pick-up b3 (1)
stack b3 b21 (1)
unstack b13 b23 (1)
put-down b13 (1)
unstack b23 b12 (1)
stack b23 b17 (1)
unstack b12 b7 (1)
put-down b12 (1)
pick-up b13 (1)
stack b13 b12 (1)
unstack b7 b9 (1)
stack b7 b8 (1)
unstack b9 b14 (1)
stack b9 b19 (1)
pick-up b11 (1)
stack b11 b14 (1)
pick-up b16 (1)
stack b16 b9 (1)
unstack b11 b14 (1)
put-down b11 (1)
pick-up b14 (1)
stack b14 b7 (1)
pick-up b11 (1)
stack b11 b14 (1)
unstack b3 b21 (1)
put-down b3 (1)
unstack b21 b4 (1)
put-down b21 (1)
pick-up b3 (1)
stack b3 b21 (1)
pick-up b4 (1)
stack b4 b23 (1)
unstack b3 b21 (1)
put-down b3 (1)
pick-up b21 (1)
stack b21 b4 (1)
pick-up b3 (1)
stack b3 b21 (1)
unstack b16 b9 (1)
put-down b16 (1)
unstack b9 b19 (1)
put-down b9 (1)
pick-up b16 (1)
stack b16 b9 (1)
unstack b19 b10 (1)
put-down b19 (1)
pick-up b10 (1)
stack b10 b13 (1)
pick-up b19 (1)
stack b19 b10 (1)
unstack b16 b9 (1)
put-down b16 (1)
pick-up b9 (1)
stack b9 b19 (1)
pick-up b16 (1)
stack b16 b9 (1)
unstack b11 b14 (1)
put-down b11 (1)
unstack b14 b7 (1)
put-down b14 (1)
unstack b7 b8 (1)
put-down b7 (1)
pick-up b14 (1)
stack b14 b7 (1)
pick-up b11 (1)
stack b11 b14 (1)
unstack b8 b2 (1)
put-down b8 (1)
unstack b2 b5 (1)
put-down b2 (1)
pick-up b8 (1)
stack b8 b2 (1)
unstack b5 b6 (1)
put-down b5 (1)
unstack b6 b18 (1)
put-down b6 (1)
unstack b18 b15 (1)
stack b18 b20 (1)
pick-up b15 (1)
stack b15 b1 (1)
pick-up b5 (1)
stack b5 b6 (1)
unstack b3 b21 (1)
put-down b3 (1)
unstack b21 b4 (1)
put-down b21 (1)
unstack b4 b23 (1)
put-down b4 (1)
unstack b23 b17 (1)
put-down b23 (1)
unstack b17 b22 (1)
put-down b17 (1)
pick-up b22 (1)
stack b22 b18 (1)
pick-up b17 (1)
stack b17 b22 (1)
pick-up b23 (1)
stack b23 b17 (1)
pick-up b3 (1)
stack b3 b21 (1)
pick-up b4 (1)
stack b4 b23 (1)
unstack b3 b21 (1)
put-down b3 (1)
pick-up b21 (1)
stack b21 b4 (1)
pick-up b3 (1)
stack b3 b21 (1)
unstack b8 b2 (1)
put-down b8 (1)
pick-up b2 (1)
stack b2 b5 (1)
pick-up b8 (1)
stack b8 b2 (1)
unstack b16 b9 (1)
put-down b16 (1)
unstack b9 b19 (1)
put-down b9 (1)
unstack b19 b10 (1)
put-down b19 (1)
unstack b10 b13 (1)
put-down b10 (1)
unstack b13 b12 (1)
put-down b13 (1)
pick-up b12 (1)
stack b12 b15 (1)
pick-up b13 (1)
stack b13 b12 (1)
pick-up b10 (1)
stack b10 b13 (1)
pick-up b19 (1)
stack b19 b10 (1)
pick-up b9 (1)
stack b9 b19 (1)
pick-up b16 (1)
stack b16 b9 (1)
unstack b11 b14 (1)
put-down b11 (1)
unstack b14 b7 (1)
put-down b14 (1)
pick-up b11 (1)
stack b11 b14 (1)
pick-up b7 (1)
stack b7 b8 (1)
unstack b11 b14 (1)
put-down b11 (1)
pick-up b14 (1)
stack b14 b7 (1)
pick-up b11 (1)
stack b11 b14 (1)
[t=0.0987804s, 27052 KB] Plan length: 176 step(s).
[t=0.0987804s, 27052 KB] Plan cost: 176
[t=0.0987804s, 27052 KB] Expanded 2936 state(s).
[t=0.0987804s, 27052 KB] Reopened 0 state(s).
[t=0.0987804s, 27052 KB] Evaluated 2937 state(s).
[t=0.0987804s, 27052 KB] Evaluations: 5874
[t=0.0987804s, 27052 KB] Generated 30187 state(s).
[t=0.0987804s, 27052 KB] Dead ends: 0 state(s).
[t=0.0987804s, 27052 KB] Number of registered states: 2937
[t=0.0987804s, 27052 KB] Int hash set load factor: 2937/4096 = 0.717041
[t=0.0987804s, 27052 KB] Int hash set resizes: 12
[t=0.0987804s, 27052 KB] Search time: 0.0767737s
[t=0.0987804s, 27052 KB] Total time: 0.0987804s
Solution found.
Peak memory: 27052 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.23s
