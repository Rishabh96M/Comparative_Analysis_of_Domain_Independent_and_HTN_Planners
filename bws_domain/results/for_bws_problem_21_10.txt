INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py ../bws_domain/bws_domain_actions.pddl ../bws_domain/problem_size_21/bws_problem_21_10.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.000s CPU, 0.010s wall-clock]
1472 relevant atoms
987 auxiliary atoms
2459 final queue length
4271 total queue pushes
Completing instantiation... [0.020s CPU, 0.016s wall-clock]
Instantiating: [0.020s CPU, 0.027s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
22 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.010s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.006s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
1302 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
42 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.011s wall-clock]
Reordering and filtering variables...
43 of 43 variables necessary.
22 of 43 mutex groups necessary.
882 of 882 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.005s wall-clock]
Translator variables: 43
Translator derived variables: 0
Translator facts: 506
Translator goal facts: 21
Translator mutex groups: 22
Translator total mutex groups size: 484
Translator operators: 882
Translator axioms: 0
Translator task size: 7606
Translator peak memory: 36456 KB
Writing output... [0.000s CPU, 0.005s wall-clock]
Done! [0.070s CPU, 0.082s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=3.4194e-05s, 24488 KB] reading input...
[t=0.00291555s, 25268 KB] done reading input!
[t=0.00444599s, 25664 KB] Initializing landmark count heuristic...
[t=0.00453357s, 25664 KB] Generating landmark graph...
[t=0.00467856s, 25664 KB] Building a landmark graph with reasonable orders.
[t=0.00479338s, 25664 KB] Initializing Exploration...
[t=0.00522228s, 25852 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0143948s, 26248 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0144531s, 26248 KB] Landmarks generation time: 0.00976451s
[t=0.0144763s, 26248 KB] Discovered 98 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.014493s, 26248 KB] 307 edges
[t=0.0145031s, 26248 KB] approx. reasonable orders
[t=0.0153673s, 26248 KB] approx. obedient reasonable orders
[t=0.0153924s, 26248 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0154022s, 26248 KB] Landmarks generation time: 0.0108622s
[t=0.0154118s, 26248 KB] Discovered 98 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0154201s, 26248 KB] 319 edges
[t=0.0154285s, 26248 KB] Landmark graph generation time: 0.0109018s
[t=0.0154373s, 26248 KB] Landmark graph contains 98 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0154456s, 26248 KB] Landmark graph contains 319 orderings.
[t=0.0157283s, 26248 KB] Simplifying 3486 unary operators... done! [2646 unary operators]
[t=0.016545s, 26380 KB] time to simplify: 0.000881627s
[t=0.0166652s, 26380 KB] Initializing additive heuristic...
[t=0.0166807s, 26380 KB] Initializing FF heuristic...
[t=0.016734s, 26380 KB] Building successor generator...done!
[t=0.0169191s, 26380 KB] peak memory difference for successor generator creation: 0 KB
[t=0.016929s, 26380 KB] time for successor generation creation: 0.000148763s
[t=0.0169438s, 26380 KB] Variables: 43
[t=0.0169526s, 26380 KB] FactPairs: 506
[t=0.0169611s, 26380 KB] Bytes per state: 16
[t=0.0170905s, 26380 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0171285s, 26380 KB] 43 initial landmarks, 21 goal landmarks
[t=0.0171851s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0171951s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0172045s, 26380 KB] g=0, 1 evaluated, 0 expanded
[t=0.0172217s, 26380 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0172313s, 26380 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0173751s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0173854s, 26380 KB] g=1, 6 evaluated, 5 expanded
[t=0.0174232s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0174336s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0174423s, 26380 KB] g=2, 7 evaluated, 6 expanded
[t=0.0176049s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0176149s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0176244s, 26380 KB] g=4, 13 evaluated, 12 expanded
[t=0.0177343s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0177443s, 26380 KB] g=5, 17 evaluated, 16 expanded
[t=0.0177802s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0177901s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0177987s, 26380 KB] g=6, 18 evaluated, 17 expanded
[t=0.0179324s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0179422s, 26380 KB] g=8, 23 evaluated, 22 expanded
[t=0.0179771s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0179864s, 26380 KB] g=9, 24 evaluated, 23 expanded
[t=0.0180207s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.01803s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0180393s, 26380 KB] g=10, 25 evaluated, 24 expanded
[t=0.0182186s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0182334s, 26380 KB] g=12, 32 evaluated, 31 expanded
[t=0.0183943s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.018404s, 26380 KB] g=13, 38 evaluated, 37 expanded
[t=0.0184665s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0184773s, 26380 KB] g=15, 40 evaluated, 39 expanded
[t=0.0185122s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0185221s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.018531s, 26380 KB] g=16, 41 evaluated, 40 expanded
[t=0.0187604s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.018774s, 26380 KB] g=18, 50 evaluated, 49 expanded
[t=0.0188102s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0188215s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0188303s, 26380 KB] g=18, 51 evaluated, 50 expanded
[t=0.0190326s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0190501s, 26380 KB] g=20, 59 evaluated, 58 expanded
[t=0.0191112s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0191252s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0191344s, 26380 KB] g=20, 61 evaluated, 60 expanded
[t=0.0193132s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0193249s, 26380 KB] g=22, 68 evaluated, 67 expanded
[t=0.0194324s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0194423s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0194515s, 26380 KB] g=22, 72 evaluated, 71 expanded
[t=0.0196058s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0196152s, 26380 KB] g=24, 78 evaluated, 77 expanded
[t=0.0199146s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0199249s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0199333s, 26380 KB] g=26, 90 evaluated, 89 expanded
[t=0.0200892s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0200992s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0201081s, 26380 KB] g=28, 96 evaluated, 95 expanded
[t=0.0202886s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0202982s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0203072s, 26380 KB] g=30, 103 evaluated, 102 expanded
[t=0.0204653s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0204748s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0204834s, 26380 KB] g=32, 109 evaluated, 108 expanded
[t=0.0206499s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0206613s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0206703s, 26380 KB] g=34, 115 evaluated, 114 expanded
[t=0.0207973s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0208119s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0208213s, 26380 KB] g=36, 120 evaluated, 119 expanded
[t=0.0209696s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0209798s, 26380 KB] g=39, 126 evaluated, 125 expanded
[t=0.021013s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0210225s, 26380 KB] g=40, 127 evaluated, 126 expanded
[t=0.021134s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0211435s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0211553s, 26380 KB] g=42, 131 evaluated, 130 expanded
[t=0.021236s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0212461s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.021255s, 26380 KB] g=44, 134 evaluated, 133 expanded
[t=0.0228587s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0228756s, 26380 KB] g=56, 205 evaluated, 204 expanded
[t=0.0229752s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0229852s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0229937s, 26380 KB] g=58, 209 evaluated, 208 expanded
[t=0.023132s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0231419s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0231512s, 26380 KB] g=60, 215 evaluated, 214 expanded
[t=0.0232649s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0232747s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0232833s, 26380 KB] g=62, 220 evaluated, 219 expanded
[t=0.0233734s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0233827s, 26380 KB] g=62, 224 evaluated, 223 expanded
[t=0.0234128s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0234223s, 26380 KB] g=65, 225 evaluated, 224 expanded
[t=0.0234738s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0234833s, 26380 KB] g=66, 227 evaluated, 226 expanded
[t=0.0235919s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0236012s, 26380 KB] g=64, 232 evaluated, 231 expanded
[t=0.0236687s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.023678s, 26380 KB] g=68, 235 evaluated, 234 expanded
[t=0.0239462s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0239563s, 26380 KB] g=72, 249 evaluated, 248 expanded
[t=0.0240213s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0240306s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.024039s, 26380 KB] g=74, 252 evaluated, 251 expanded
[t=0.0242603s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0242698s, 26380 KB] g=82, 265 evaluated, 264 expanded
[t=0.0242919s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.024301s, 26380 KB] g=82, 266 evaluated, 265 expanded
[t=0.0243206s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.02433s, 26380 KB] g=83, 267 evaluated, 266 expanded
[t=0.0243452s, 26380 KB] Solution found!
[t=0.0243557s, 26380 KB] Actual search time: 0.00722289s
unstack b20 b9 (1)
put-down b20 (1)
unstack b12 b8 (1)
stack b12 b20 (1)
unstack b8 b19 (1)
stack b8 b9 (1)
unstack b18 b17 (1)
put-down b18 (1)
unstack b17 b6 (1)
put-down b17 (1)
unstack b19 b5 (1)
put-down b19 (1)
unstack b5 b13 (1)
put-down b5 (1)
unstack b13 b21 (1)
put-down b13 (1)
pick-up b18 (1)
stack b18 b13 (1)
pick-up b21 (1)
stack b21 b14 (1)
pick-up b5 (1)
stack b5 b21 (1)
unstack b2 b7 (1)
put-down b2 (1)
unstack b3 b15 (1)
stack b3 b7 (1)
unstack b15 b10 (1)
stack b15 b17 (1)
unstack b10 b11 (1)
stack b10 b3 (1)
pick-up b11 (1)
stack b11 b18 (1)
pick-up b19 (1)
stack b19 b15 (1)
pick-up b2 (1)
stack b2 b10 (1)
unstack b8 b9 (1)
put-down b8 (1)
unstack b9 b1 (1)
stack b9 b2 (1)
pick-up b6 (1)
stack b6 b1 (1)
unstack b9 b2 (1)
put-down b9 (1)
unstack b2 b10 (1)
put-down b2 (1)
pick-up b9 (1)
stack b9 b2 (1)
pick-up b8 (1)
stack b8 b9 (1)
unstack b10 b3 (1)
put-down b10 (1)
unstack b3 b7 (1)
put-down b3 (1)
unstack b7 b4 (1)
stack b7 b12 (1)
unstack b4 b16 (1)
put-down b4 (1)
pick-up b16 (1)
stack b16 b19 (1)
pick-up b10 (1)
stack b10 b3 (1)
unstack b6 b1 (1)
put-down b6 (1)
pick-up b1 (1)
stack b1 b4 (1)
pick-up b6 (1)
stack b6 b1 (1)
unstack b10 b3 (1)
put-down b10 (1)
pick-up b3 (1)
stack b3 b7 (1)
pick-up b10 (1)
stack b10 b3 (1)
unstack b8 b9 (1)
put-down b8 (1)
unstack b9 b2 (1)
put-down b9 (1)
pick-up b2 (1)
stack b2 b10 (1)
pick-up b9 (1)
stack b9 b2 (1)
pick-up b8 (1)
stack b8 b9 (1)
[t=0.0243654s, 26380 KB] Plan length: 84 step(s).
[t=0.0243654s, 26380 KB] Plan cost: 84
[t=0.0243654s, 26380 KB] Expanded 267 state(s).
[t=0.0243654s, 26380 KB] Reopened 0 state(s).
[t=0.0243654s, 26380 KB] Evaluated 268 state(s).
[t=0.0243654s, 26380 KB] Evaluations: 536
[t=0.0243654s, 26380 KB] Generated 2441 state(s).
[t=0.0243654s, 26380 KB] Dead ends: 0 state(s).
[t=0.0243654s, 26380 KB] Number of registered states: 268
[t=0.0243654s, 26380 KB] Int hash set load factor: 268/512 = 0.523438
[t=0.0243654s, 26380 KB] Int hash set resizes: 9
[t=0.0243654s, 26380 KB] Search time: 0.00727539s
[t=0.0243654s, 26380 KB] Total time: 0.0243654s
Solution found.
Peak memory: 26380 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.16s
