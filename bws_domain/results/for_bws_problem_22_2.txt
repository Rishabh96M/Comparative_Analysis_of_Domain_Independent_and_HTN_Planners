INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py ../bws_domain/bws_domain_actions.pddl ../bws_domain/problem_size_22/bws_problem_22_2.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.010s wall-clock]
1608 relevant atoms
1078 auxiliary atoms
2686 final queue length
4670 total queue pushes
Completing instantiation... [0.020s CPU, 0.018s wall-clock]
Instantiating: [0.030s CPU, 0.029s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
23 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.006s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.028s wall-clock]
1430 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
44 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.011s wall-clock]
Reordering and filtering variables...
45 of 45 variables necessary.
23 of 45 mutex groups necessary.
968 of 968 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.007s wall-clock]
Translator variables: 45
Translator derived variables: 0
Translator facts: 552
Translator goal facts: 22
Translator mutex groups: 23
Translator total mutex groups size: 529
Translator operators: 968
Translator axioms: 0
Translator task size: 8342
Translator peak memory: 36976 KB
Writing output... [0.000s CPU, 0.005s wall-clock]
Done! [0.090s CPU, 0.092s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.819e-05s, 24488 KB] reading input...
[t=0.00295758s, 25340 KB] done reading input!
[t=0.00439789s, 25736 KB] Initializing landmark count heuristic...
[t=0.00443954s, 25736 KB] Generating landmark graph...
[t=0.00450293s, 25736 KB] Building a landmark graph with reasonable orders.
[t=0.0045688s, 25736 KB] Initializing Exploration...
[t=0.00486012s, 26000 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0167067s, 26528 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0168027s, 26528 KB] Landmarks generation time: 0.0123017s
[t=0.0168197s, 26528 KB] Discovered 105 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.016841s, 26528 KB] 435 edges
[t=0.0168526s, 26528 KB] approx. reasonable orders
[t=0.017802s, 26528 KB] approx. obedient reasonable orders
[t=0.0178328s, 26528 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0178428s, 26528 KB] Landmarks generation time: 0.0134001s
[t=0.0178529s, 26528 KB] Discovered 105 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.017862s, 26528 KB] 451 edges
[t=0.0178714s, 26528 KB] Landmark graph generation time: 0.0134391s
[t=0.0178804s, 26528 KB] Landmark graph contains 105 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0178888s, 26528 KB] Landmark graph contains 451 orderings.
[t=0.018525s, 26528 KB] Simplifying 3828 unary operators... done! [2904 unary operators]
[t=0.0200657s, 26528 KB] time to simplify: 0.001641s
[t=0.0202331s, 26528 KB] Initializing additive heuristic...
[t=0.0202532s, 26528 KB] Initializing FF heuristic...
[t=0.0203113s, 26528 KB] Building successor generator...done!
[t=0.0205128s, 26528 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0205251s, 26528 KB] time for successor generation creation: 0.000166055s
[t=0.0205412s, 26528 KB] Variables: 45
[t=0.02055s, 26528 KB] FactPairs: 552
[t=0.0205596s, 26528 KB] Bytes per state: 20
[t=0.0206537s, 26528 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0206866s, 26528 KB] 45 initial landmarks, 22 goal landmarks
[t=0.0207357s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 60
[t=0.0207459s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0207551s, 26528 KB] g=0, 1 evaluated, 0 expanded
[t=0.020769s, 26528 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 60
[t=0.0207782s, 26528 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0209116s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.0209223s, 26528 KB] g=1, 5 evaluated, 4 expanded
[t=0.0209643s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 58
[t=0.0209739s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0209828s, 26528 KB] g=2, 6 evaluated, 5 expanded
[t=0.0211454s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0211584s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0211673s, 26528 KB] g=4, 10 evaluated, 9 expanded
[t=0.0212832s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0212926s, 26528 KB] g=6, 14 evaluated, 13 expanded
[t=0.0215388s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0215496s, 26528 KB] g=7, 23 evaluated, 22 expanded
[t=0.0215866s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0215961s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0216048s, 26528 KB] g=8, 24 evaluated, 23 expanded
[t=0.0217685s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.021778s, 26528 KB] g=10, 30 evaluated, 29 expanded
[t=0.0218416s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0218509s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0218592s, 26528 KB] g=10, 32 evaluated, 31 expanded
[t=0.0220255s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0220398s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0220487s, 26528 KB] g=12, 38 evaluated, 37 expanded
[t=0.0220852s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0220943s, 26528 KB] g=13, 39 evaluated, 38 expanded
[t=0.0221295s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0221384s, 26528 KB] g=14, 40 evaluated, 39 expanded
[t=0.0224288s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0224384s, 26528 KB] g=16, 51 evaluated, 50 expanded
[t=0.0229646s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0229773s, 26528 KB] g=19, 71 evaluated, 70 expanded
[t=0.0230153s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0230248s, 26528 KB] g=20, 72 evaluated, 71 expanded
[t=0.023167s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0231764s, 26528 KB] g=21, 77 evaluated, 76 expanded
[t=0.023894s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0239085s, 26528 KB] g=24, 101 evaluated, 100 expanded
[t=0.0242149s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0242246s, 26528 KB] g=26, 113 evaluated, 112 expanded
[t=0.0245844s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0245942s, 26528 KB] g=27, 127 evaluated, 126 expanded
[t=0.025049s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0250592s, 26528 KB] g=30, 144 evaluated, 143 expanded
[t=0.0256961s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0257196s, 26528 KB] g=32, 164 evaluated, 163 expanded
[t=0.0261786s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0261932s, 26528 KB] g=34, 179 evaluated, 178 expanded
[t=0.0263056s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0263159s, 26528 KB] g=32, 183 evaluated, 182 expanded
[t=0.0265793s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0265901s, 26528 KB] g=36, 193 evaluated, 192 expanded
[t=0.0268875s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0269003s, 26528 KB] g=34, 204 evaluated, 203 expanded
[t=0.0270251s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0270379s, 26528 KB] g=34, 208 evaluated, 207 expanded
[t=0.0273255s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0273366s, 26528 KB] g=36, 219 evaluated, 218 expanded
[t=0.0274726s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0274829s, 26528 KB] g=36, 224 evaluated, 223 expanded
[t=0.0277399s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0277505s, 26528 KB] g=38, 234 evaluated, 233 expanded
[t=0.0281192s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0281338s, 26528 KB] g=40, 248 evaluated, 247 expanded
[t=0.0281759s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0281872s, 26528 KB] g=38, 249 evaluated, 248 expanded
[t=0.0286114s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0286283s, 26528 KB] g=42, 262 evaluated, 261 expanded
[t=0.0287218s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0287372s, 26528 KB] g=40, 265 evaluated, 264 expanded
[t=0.0289749s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0289854s, 26528 KB] g=44, 274 evaluated, 273 expanded
[t=0.0292205s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0292311s, 26528 KB] g=42, 283 evaluated, 282 expanded
[t=0.029617s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.029633s, 26528 KB] g=46, 298 evaluated, 297 expanded
[t=0.0303709s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0303914s, 26528 KB] g=44, 327 evaluated, 326 expanded
[t=0.0511991s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0512792s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.051295s, 26528 KB] g=60, 1065 evaluated, 1064 expanded
[t=0.0515215s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0515325s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0515413s, 26528 KB] g=62, 1073 evaluated, 1072 expanded
[t=0.0517487s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0517586s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0517671s, 26528 KB] g=64, 1081 evaluated, 1080 expanded
[t=0.0519281s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0519389s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0519475s, 26528 KB] g=66, 1087 evaluated, 1086 expanded
[t=0.0526654s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0526773s, 26528 KB] g=70, 1116 evaluated, 1115 expanded
[t=0.0528576s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0528674s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0528759s, 26528 KB] g=72, 1123 evaluated, 1122 expanded
[t=0.0536156s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0536269s, 26528 KB] g=76, 1154 evaluated, 1153 expanded
[t=0.053849s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0538598s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0538687s, 26528 KB] g=78, 1163 evaluated, 1162 expanded
[t=0.0547618s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0547788s, 26528 KB] g=76, 1202 evaluated, 1201 expanded
[t=0.0550937s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0551059s, 26528 KB] g=86, 1215 evaluated, 1214 expanded
[t=0.0552534s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0552634s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0552799s, 26528 KB] g=88, 1221 evaluated, 1220 expanded
[t=0.0559144s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0559265s, 26528 KB] g=98, 1248 evaluated, 1247 expanded
[t=0.05603s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0560396s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0560481s, 26528 KB] g=100, 1252 evaluated, 1251 expanded
[t=0.056263s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.056273s, 26528 KB] g=104, 1261 evaluated, 1260 expanded
[t=0.0563505s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0563633s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0563724s, 26528 KB] g=106, 1264 evaluated, 1263 expanded
[t=0.0575078s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0575259s, 26528 KB] g=125, 1320 evaluated, 1319 expanded
[t=0.0575593s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0575693s, 26528 KB] g=126, 1321 evaluated, 1320 expanded
[t=0.0576472s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0576568s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0576655s, 26528 KB] g=128, 1325 evaluated, 1324 expanded
[t=0.0577251s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0577344s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0577429s, 26528 KB] g=130, 1328 evaluated, 1327 expanded
[t=0.0579217s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0579313s, 26528 KB] g=138, 1340 evaluated, 1339 expanded
[t=0.0579548s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0579646s, 26528 KB] g=138, 1341 evaluated, 1340 expanded
[t=0.057982s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0579909s, 26528 KB] g=139, 1342 evaluated, 1341 expanded
[t=0.0580059s, 26528 KB] Solution found!
[t=0.0580244s, 26528 KB] Actual search time: 0.0373352s
unstack b4 b5 (1)
stack b4 b18 (1)
unstack b21 b2 (1)
stack b21 b5 (1)
unstack b3 b8 (1)
put-down b3 (1)
unstack b8 b6 (1)
put-down b8 (1)
unstack b6 b19 (1)
stack b6 b8 (1)
unstack b19 b12 (1)
stack b19 b21 (1)
unstack b12 b10 (1)
put-down b12 (1)
unstack b2 b14 (1)
put-down b2 (1)
unstack b4 b18 (1)
put-down b4 (1)
unstack b18 b17 (1)
stack b18 b19 (1)
unstack b17 b11 (1)
put-down b17 (1)
pick-up b4 (1)
stack b4 b18 (1)
unstack b14 b13 (1)
put-down b14 (1)
unstack b13 b7 (1)
put-down b13 (1)
unstack b7 b9 (1)
stack b7 b11 (1)
unstack b9 b22 (1)
stack b9 b10 (1)
unstack b22 b15 (1)
put-down b22 (1)
pick-up b17 (1)
stack b17 b9 (1)
pick-up b2 (1)
stack b2 b7 (1)
pick-up b12 (1)
stack b12 b2 (1)
pick-up b3 (1)
stack b3 b22 (1)
pick-up b13 (1)
stack b13 b15 (1)
pick-up b14 (1)
stack b14 b13 (1)
unstack b4 b18 (1)
put-down b4 (1)
unstack b18 b19 (1)
put-down b18 (1)
pick-up b4 (1)
stack b4 b18 (1)
unstack b19 b21 (1)
put-down b19 (1)
unstack b21 b5 (1)
put-down b21 (1)
unstack b5 b1 (1)
stack b5 b3 (1)
unstack b1 b16 (1)
put-down b1 (1)
unstack b16 b20 (1)
stack b16 b6 (1)
pick-up b19 (1)
stack b19 b21 (1)
pick-up b20 (1)
stack b20 b14 (1)
unstack b19 b21 (1)
put-down b19 (1)
pick-up b21 (1)
stack b21 b5 (1)
pick-up b19 (1)
stack b19 b21 (1)
unstack b4 b18 (1)
put-down b4 (1)
pick-up b18 (1)
stack b18 b19 (1)
pick-up b4 (1)
stack b4 b18 (1)
unstack b17 b9 (1)
put-down b17 (1)
unstack b9 b10 (1)
put-down b9 (1)
pick-up b10 (1)
stack b10 b20 (1)
pick-up b9 (1)
stack b9 b10 (1)
pick-up b17 (1)
stack b17 b9 (1)
unstack b12 b2 (1)
put-down b12 (1)
unstack b2 b7 (1)
put-down b2 (1)
pick-up b12 (1)
stack b12 b2 (1)
unstack b7 b11 (1)
put-down b7 (1)
pick-up b11 (1)
stack b11 b16 (1)
pick-up b7 (1)
stack b7 b11 (1)
unstack b12 b2 (1)
put-down b12 (1)
pick-up b2 (1)
stack b2 b7 (1)
pick-up b12 (1)
stack b12 b2 (1)
unstack b17 b9 (1)
put-down b17 (1)
unstack b9 b10 (1)
put-down b9 (1)
unstack b10 b20 (1)
put-down b10 (1)
pick-up b9 (1)
stack b9 b10 (1)
pick-up b17 (1)
stack b17 b9 (1)
unstack b20 b14 (1)
put-down b20 (1)
unstack b14 b13 (1)
put-down b14 (1)
unstack b13 b15 (1)
put-down b13 (1)
pick-up b15 (1)
stack b15 b1 (1)
pick-up b13 (1)
stack b13 b15 (1)
pick-up b14 (1)
stack b14 b13 (1)
pick-up b20 (1)
stack b20 b14 (1)
unstack b17 b9 (1)
put-down b17 (1)
unstack b9 b10 (1)
put-down b9 (1)
pick-up b10 (1)
stack b10 b20 (1)
pick-up b9 (1)
stack b9 b10 (1)
pick-up b17 (1)
stack b17 b9 (1)
[t=0.0580353s, 26528 KB] Plan length: 140 step(s).
[t=0.0580353s, 26528 KB] Plan cost: 140
[t=0.0580353s, 26528 KB] Expanded 1342 state(s).
[t=0.0580353s, 26528 KB] Reopened 0 state(s).
[t=0.0580353s, 26528 KB] Evaluated 1343 state(s).
[t=0.0580353s, 26528 KB] Evaluations: 2686
[t=0.0580353s, 26528 KB] Generated 12189 state(s).
[t=0.0580353s, 26528 KB] Dead ends: 0 state(s).
[t=0.0580353s, 26528 KB] Number of registered states: 1343
[t=0.0580353s, 26528 KB] Int hash set load factor: 1343/2048 = 0.655762
[t=0.0580353s, 26528 KB] Int hash set resizes: 11
[t=0.0580353s, 26528 KB] Search time: 0.0373821s
[t=0.0580353s, 26528 KB] Total time: 0.0580353s
Solution found.
Peak memory: 26528 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.19s
