INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py ../bws_domain/bws_domain_actions.pddl ../bws_domain/problem_size_26/bws_problem_26_9.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.009s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.013s wall-clock]
2212 relevant atoms
1482 auxiliary atoms
3694 final queue length
6456 total queue pushes
Completing instantiation... [0.010s CPU, 0.021s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.002s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
27 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.008s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.031s wall-clock]
2002 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
52 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.018s wall-clock]
Reordering and filtering variables...
53 of 53 variables necessary.
27 of 53 mutex groups necessary.
1352 of 1352 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.008s wall-clock]
Translator variables: 53
Translator derived variables: 0
Translator facts: 756
Translator goal facts: 26
Translator mutex groups: 27
Translator total mutex groups size: 729
Translator operators: 1352
Translator axioms: 0
Translator task size: 11626
Translator peak memory: 38896 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.110s CPU, 0.119s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=1.6587e-05s, 24488 KB] reading input...
[t=0.00373121s, 25744 KB] done reading input!
[t=0.00466019s, 26140 KB] Initializing landmark count heuristic...
[t=0.00468836s, 26140 KB] Generating landmark graph...
[t=0.00476927s, 26272 KB] Building a landmark graph with reasonable orders.
[t=0.00484469s, 26272 KB] Initializing Exploration...
[t=0.00524458s, 26680 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0220903s, 27208 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.022158s, 27208 KB] Landmarks generation time: 0.0173887s
[t=0.0221721s, 27208 KB] Discovered 121 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0221862s, 27208 KB] 438 edges
[t=0.0221963s, 27208 KB] approx. reasonable orders
[t=0.0243781s, 27208 KB] approx. obedient reasonable orders
[t=0.0244197s, 27208 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0244288s, 27208 KB] Landmarks generation time: 0.0197373s
[t=0.0244381s, 27208 KB] Discovered 121 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0244456s, 27208 KB] 466 edges
[t=0.0244536s, 27208 KB] Landmark graph generation time: 0.0197725s
[t=0.0244624s, 27208 KB] Landmark graph contains 121 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0244709s, 27208 KB] Landmark graph contains 466 orderings.
[t=0.0249741s, 27208 KB] Simplifying 5356 unary operators... done! [4056 unary operators]
[t=0.0262079s, 27336 KB] time to simplify: 0.00131238s
[t=0.0263627s, 27336 KB] Initializing additive heuristic...
[t=0.0263792s, 27336 KB] Initializing FF heuristic...
[t=0.0264331s, 27336 KB] Building successor generator...done!
[t=0.0266578s, 27336 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0266663s, 27336 KB] time for successor generation creation: 0.000192576s
[t=0.0266783s, 27336 KB] Variables: 53
[t=0.0266861s, 27336 KB] FactPairs: 756
[t=0.0266944s, 27336 KB] Bytes per state: 20
[t=0.0267767s, 27336 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0268081s, 27336 KB] 53 initial landmarks, 26 goal landmarks
[t=0.0268658s, 27336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 68
[t=0.0268749s, 27336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 48
[t=0.0268825s, 27336 KB] g=0, 1 evaluated, 0 expanded
[t=0.0268959s, 27336 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 68
[t=0.0269042s, 27336 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 48
[t=0.0270464s, 27336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 67
[t=0.0270552s, 27336 KB] g=1, 5 evaluated, 4 expanded
[t=0.0271924s, 27336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 47
[t=0.0272012s, 27336 KB] g=1, 9 evaluated, 8 expanded
[t=0.027274s, 27336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 65
[t=0.0272824s, 27336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 46
[t=0.02729s, 27336 KB] g=2, 11 evaluated, 10 expanded
[t=0.0273309s, 27336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0273394s, 27336 KB] g=3, 12 evaluated, 11 expanded
[t=0.0273806s, 27336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 62
[t=0.0273893s, 27336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.0273967s, 27336 KB] g=4, 13 evaluated, 12 expanded
[t=0.0275351s, 27336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 61
[t=0.0275435s, 27336 KB] g=5, 17 evaluated, 16 expanded
[t=0.0276815s, 27336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0276898s, 27336 KB] g=5, 21 evaluated, 20 expanded
[t=0.0277736s, 27336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.0277824s, 27336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0277905s, 27336 KB] g=6, 23 evaluated, 22 expanded
[t=0.0279028s, 27336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 58
[t=0.0279125s, 27336 KB] g=7, 26 evaluated, 25 expanded
[t=0.0282058s, 27336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0282184s, 27336 KB] g=8, 35 evaluated, 34 expanded
[t=0.028259s, 27336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 57
[t=0.0282675s, 27336 KB] g=9, 36 evaluated, 35 expanded
[t=0.0285991s, 27336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0286098s, 27336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0286182s, 27336 KB] g=10, 46 evaluated, 45 expanded
[t=0.0286942s, 27336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.028703s, 27336 KB] g=11, 48 evaluated, 47 expanded
[t=0.0289274s, 27336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.028936s, 27336 KB] g=13, 55 evaluated, 54 expanded
[t=0.0291637s, 27336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0291723s, 27336 KB] g=15, 62 evaluated, 61 expanded
[t=0.0292129s, 27336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0292213s, 27336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0292291s, 27336 KB] g=16, 63 evaluated, 62 expanded
[t=0.0294952s, 27336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0295045s, 27336 KB] g=18, 71 evaluated, 70 expanded
[t=0.0295463s, 27336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0295549s, 27336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0295626s, 27336 KB] g=18, 72 evaluated, 71 expanded
[t=0.0297581s, 27336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0297665s, 27336 KB] g=19, 78 evaluated, 77 expanded
[t=0.0298083s, 27336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0298168s, 27336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0298246s, 27336 KB] g=20, 79 evaluated, 78 expanded
[t=0.0300848s, 27336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0300936s, 27336 KB] g=22, 87 evaluated, 86 expanded
[t=0.0301979s, 27336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0302063s, 27336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0302141s, 27336 KB] g=22, 90 evaluated, 89 expanded
[t=0.0304369s, 27336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0304457s, 27336 KB] g=24, 97 evaluated, 96 expanded
[t=0.0306728s, 27336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0306814s, 27336 KB] g=26, 104 evaluated, 103 expanded
[t=0.0310853s, 27336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0310947s, 27336 KB] g=28, 117 evaluated, 116 expanded
[t=0.0313258s, 27336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0313346s, 27336 KB] g=26, 124 evaluated, 123 expanded
[t=0.0315364s, 27336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0315459s, 27336 KB] g=30, 130 evaluated, 129 expanded
[t=0.0319858s, 27336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0319973s, 27336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0320078s, 27336 KB] g=32, 144 evaluated, 143 expanded
[t=0.0322049s, 27336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0322141s, 27336 KB] g=33, 150 evaluated, 149 expanded
[t=0.0322547s, 27336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0322633s, 27336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0322708s, 27336 KB] g=34, 151 evaluated, 150 expanded
[t=0.0325336s, 27336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0325498s, 27336 KB] g=36, 159 evaluated, 158 expanded
[t=0.0325941s, 27336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0326034s, 27336 KB] g=36, 160 evaluated, 159 expanded
[t=0.0331386s, 27336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.033149s, 27336 KB] g=38, 177 evaluated, 176 expanded
[t=0.0336048s, 27336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0336147s, 27336 KB] g=40, 192 evaluated, 191 expanded
[t=0.0338032s, 27336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0338122s, 27336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0338202s, 27336 KB] g=40, 198 evaluated, 197 expanded
[t=0.0341043s, 27336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0341131s, 27336 KB] g=42, 207 evaluated, 206 expanded
[t=0.0342415s, 27336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0342505s, 27336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0342583s, 27336 KB] g=42, 211 evaluated, 210 expanded
[t=0.0345051s, 27336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0345138s, 27336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0345218s, 27336 KB] g=44, 219 evaluated, 218 expanded
[t=0.0349853s, 27336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0349949s, 27336 KB] g=47, 234 evaluated, 233 expanded
[t=0.0350339s, 27336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0350424s, 27336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0350502s, 27336 KB] g=48, 235 evaluated, 234 expanded
[t=0.0352787s, 27336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0352873s, 27336 KB] g=50, 243 evaluated, 242 expanded
[t=0.0353822s, 27336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0353907s, 27336 KB] g=50, 246 evaluated, 245 expanded
[t=0.0355886s, 27336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0355979s, 27336 KB] g=52, 253 evaluated, 252 expanded
[t=0.0358325s, 27336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0358412s, 27336 KB] g=52, 261 evaluated, 260 expanded
[t=0.0361112s, 27336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0361204s, 27336 KB] g=54, 270 evaluated, 269 expanded
[t=0.0362708s, 27336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0362819s, 27336 KB] g=54, 275 evaluated, 274 expanded
[t=0.036463s, 27336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0364739s, 27336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0364822s, 27336 KB] g=56, 281 evaluated, 280 expanded
[t=0.0366674s, 27336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0366771s, 27336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0366851s, 27336 KB] g=58, 287 evaluated, 286 expanded
[t=0.0368055s, 27336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0368141s, 27336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0368219s, 27336 KB] g=60, 291 evaluated, 290 expanded
[t=0.0373248s, 27336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0373649s, 27336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0373743s, 27336 KB] g=64, 307 evaluated, 306 expanded
[t=0.0375086s, 27336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.037518s, 27336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0375293s, 27336 KB] g=66, 311 evaluated, 310 expanded
[t=0.0381626s, 27336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0381753s, 27336 KB] g=74, 336 evaluated, 335 expanded
[t=0.0384444s, 27336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0384536s, 27336 KB] g=78, 347 evaluated, 346 expanded
[t=0.0385335s, 27336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0385426s, 27336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0385509s, 27336 KB] g=80, 350 evaluated, 349 expanded
[t=0.0387951s, 27336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0388041s, 27336 KB] g=90, 362 evaluated, 361 expanded
[t=0.038867s, 27336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0388757s, 27336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0388837s, 27336 KB] g=92, 365 evaluated, 364 expanded
[t=0.0389568s, 27336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0389652s, 27336 KB] g=96, 369 evaluated, 368 expanded
[t=0.0389838s, 27336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0389921s, 27336 KB] g=97, 370 evaluated, 369 expanded
[t=0.0390095s, 27336 KB] Solution found!
[t=0.0390253s, 27336 KB] Actual search time: 0.0122151s
unstack b8 b1 (1)
put-down b8 (1)
unstack b1 b24 (1)
put-down b1 (1)
unstack b24 b17 (1)
put-down b24 (1)
unstack b14 b18 (1)
stack b14 b22 (1)
unstack b12 b25 (1)
stack b12 b18 (1)
unstack b17 b23 (1)
put-down b17 (1)
unstack b2 b20 (1)
put-down b2 (1)
unstack b20 b6 (1)
put-down b20 (1)
unstack b19 b26 (1)
stack b19 b6 (1)
unstack b26 b10 (1)
stack b26 b1 (1)
pick-up b23 (1)
stack b23 b20 (1)
unstack b10 b5 (1)
put-down b10 (1)
unstack b14 b22 (1)
put-down b14 (1)
unstack b22 b16 (1)
put-down b22 (1)
unstack b16 b11 (1)
stack b16 b23 (1)
unstack b11 b21 (1)
stack b11 b16 (1)
unstack b21 b15 (1)
stack b21 b14 (1)
unstack b15 b3 (1)
put-down b15 (1)
unstack b25 b4 (1)
stack b25 b3 (1)
pick-up b4 (1)
stack b4 b12 (1)
pick-up b15 (1)
stack b15 b4 (1)
pick-up b10 (1)
stack b10 b15 (1)
unstack b19 b6 (1)
put-down b19 (1)
unstack b6 b7 (1)
stack b6 b5 (1)
unstack b7 b9 (1)
stack b7 b19 (1)
pick-up b17 (1)
stack b17 b7 (1)
unstack b9 b13 (1)
stack b9 b25 (1)
pick-up b13 (1)
stack b13 b11 (1)
pick-up b2 (1)
stack b2 b9 (1)
pick-up b22 (1)
stack b22 b13 (1)
unstack b21 b14 (1)
put-down b21 (1)
pick-up b14 (1)
stack b14 b22 (1)
pick-up b21 (1)
stack b21 b14 (1)
unstack b17 b7 (1)
put-down b17 (1)
unstack b7 b19 (1)
put-down b7 (1)
pick-up b17 (1)
stack b17 b7 (1)
pick-up b19 (1)
stack b19 b6 (1)
unstack b17 b7 (1)
put-down b17 (1)
pick-up b7 (1)
stack b7 b19 (1)
pick-up b17 (1)
stack b17 b7 (1)
unstack b2 b9 (1)
put-down b2 (1)
unstack b9 b25 (1)
put-down b9 (1)
pick-up b2 (1)
stack b2 b9 (1)
unstack b25 b3 (1)
put-down b25 (1)
pick-up b3 (1)
stack b3 b10 (1)
pick-up b25 (1)
stack b25 b3 (1)
unstack b2 b9 (1)
put-down b2 (1)
pick-up b9 (1)
stack b9 b25 (1)
pick-up b2 (1)
stack b2 b9 (1)
[t=0.0390348s, 27336 KB] Plan length: 98 step(s).
[t=0.0390348s, 27336 KB] Plan cost: 98
[t=0.0390348s, 27336 KB] Expanded 370 state(s).
[t=0.0390348s, 27336 KB] Reopened 0 state(s).
[t=0.0390348s, 27336 KB] Evaluated 371 state(s).
[t=0.0390348s, 27336 KB] Evaluations: 742
[t=0.0390348s, 27336 KB] Generated 4361 state(s).
[t=0.0390348s, 27336 KB] Dead ends: 0 state(s).
[t=0.0390348s, 27336 KB] Number of registered states: 371
[t=0.0390348s, 27336 KB] Int hash set load factor: 371/512 = 0.724609
[t=0.0390348s, 27336 KB] Int hash set resizes: 9
[t=0.0390348s, 27336 KB] Search time: 0.0122587s
[t=0.0390348s, 27336 KB] Total time: 0.0390348s
Solution found.
Peak memory: 27336 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.19s
