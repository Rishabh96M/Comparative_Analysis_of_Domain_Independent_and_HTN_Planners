INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py ../bws_domain/bws_domain_actions.pddl ../bws_domain/problem_size_25/bws_problem_25_4.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.003s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.010s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.017s wall-clock]
2052 relevant atoms
1375 auxiliary atoms
3427 final queue length
5981 total queue pushes
Completing instantiation... [0.040s CPU, 0.033s wall-clock]
Instantiating: [0.060s CPU, 0.052s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
26 uncovered facts
Choosing groups: [0.000s CPU, 0.002s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.008s wall-clock]
Building STRIPS to SAS dictionary... [0.010s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.031s wall-clock]
1850 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
50 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.021s wall-clock]
Reordering and filtering variables...
51 of 51 variables necessary.
26 of 51 mutex groups necessary.
1250 of 1250 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.008s wall-clock]
Translator variables: 51
Translator derived variables: 0
Translator facts: 702
Translator goal facts: 25
Translator mutex groups: 26
Translator total mutex groups size: 676
Translator operators: 1250
Translator axioms: 0
Translator task size: 10754
Translator peak memory: 38388 KB
Writing output... [0.000s CPU, 0.006s wall-clock]
Done! [0.140s CPU, 0.134s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=3.0261e-05s, 24488 KB] reading input...
[t=0.00363647s, 25632 KB] done reading input!
[t=0.00448249s, 26028 KB] Initializing landmark count heuristic...
[t=0.00451518s, 26028 KB] Generating landmark graph...
[t=0.00459034s, 26160 KB] Building a landmark graph with reasonable orders.
[t=0.00466047s, 26160 KB] Initializing Exploration...
[t=0.00501606s, 26532 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0222925s, 27192 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0223754s, 27192 KB] Landmarks generation time: 0.0177852s
[t=0.0223901s, 27192 KB] Discovered 118 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.02241s, 27192 KB] 852 edges
[t=0.0224203s, 27192 KB] approx. reasonable orders
[t=0.0229129s, 27192 KB] approx. obedient reasonable orders
[t=0.0229497s, 27192 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0229593s, 27192 KB] Landmarks generation time: 0.0184417s
[t=0.0229694s, 27192 KB] Discovered 118 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0229778s, 27192 KB] 859 edges
[t=0.0229866s, 27192 KB] Landmark graph generation time: 0.0184789s
[t=0.0229958s, 27192 KB] Landmark graph contains 118 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.023004s, 27192 KB] Landmark graph contains 859 orderings.
[t=0.0234112s, 27192 KB] Simplifying 4950 unary operators... done! [3750 unary operators]
[t=0.0245849s, 27192 KB] time to simplify: 0.00127152s
[t=0.0247926s, 27336 KB] Initializing additive heuristic...
[t=0.024816s, 27336 KB] Initializing FF heuristic...
[t=0.0248808s, 27336 KB] Building successor generator...done!
[t=0.0251331s, 27336 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0251436s, 27336 KB] time for successor generation creation: 0.000213038s
[t=0.0251597s, 27336 KB] Variables: 51
[t=0.0251684s, 27336 KB] FactPairs: 702
[t=0.0251771s, 27336 KB] Bytes per state: 20
[t=0.0253956s, 27336 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0254387s, 27336 KB] 51 initial landmarks, 25 goal landmarks
[t=0.0255449s, 27336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 67
[t=0.0255552s, 27336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 47
[t=0.0255658s, 27336 KB] g=0, 1 evaluated, 0 expanded
[t=0.0255861s, 27336 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 67
[t=0.0255959s, 27336 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 47
[t=0.0257787s, 27336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 66
[t=0.0257893s, 27336 KB] g=2, 6 evaluated, 5 expanded
[t=0.025957s, 27336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 46
[t=0.0259674s, 27336 KB] g=2, 11 evaluated, 10 expanded
[t=0.0262577s, 27336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 65
[t=0.0262837s, 27336 KB] g=4, 18 evaluated, 17 expanded
[t=0.0265729s, 27336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 64
[t=0.0265948s, 27336 KB] g=6, 25 evaluated, 24 expanded
[t=0.0268116s, 27336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 62
[t=0.0268378s, 27336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0268512s, 27336 KB] g=6, 30 evaluated, 29 expanded
[t=0.0270402s, 27336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 61
[t=0.0270568s, 27336 KB] g=8, 34 evaluated, 33 expanded
[t=0.0274907s, 27336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.0275458s, 27336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.0275565s, 27336 KB] g=10, 44 evaluated, 43 expanded
[t=0.0277336s, 27336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 58
[t=0.0277455s, 27336 KB] g=12, 49 evaluated, 48 expanded
[t=0.0280525s, 27336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 57
[t=0.0280766s, 27336 KB] g=14, 55 evaluated, 54 expanded
[t=0.0285774s, 27336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0285941s, 27336 KB] g=17, 71 evaluated, 70 expanded
[t=0.0288574s, 27336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0288685s, 27336 KB] g=11, 79 evaluated, 78 expanded
[t=0.0289513s, 27336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.028962s, 27336 KB] g=12, 81 evaluated, 80 expanded
[t=0.0293852s, 27336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0293962s, 27336 KB] g=20, 94 evaluated, 93 expanded
[t=0.0294443s, 27336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0294546s, 27336 KB] g=15, 95 evaluated, 94 expanded
[t=0.0295334s, 27336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0295437s, 27336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0295542s, 27336 KB] g=16, 97 evaluated, 96 expanded
[t=0.0297961s, 27336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0298066s, 27336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0298175s, 27336 KB] g=18, 104 evaluated, 103 expanded
[t=0.0300441s, 27336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.030059s, 27336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0300715s, 27336 KB] g=20, 110 evaluated, 109 expanded
[t=0.0302178s, 27336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0302287s, 27336 KB] g=21, 114 evaluated, 113 expanded
[t=0.0305674s, 27336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0305783s, 27336 KB] g=24, 124 evaluated, 123 expanded
[t=0.0309917s, 27336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0310027s, 27336 KB] g=26, 136 evaluated, 135 expanded
[t=0.0312448s, 27336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0312551s, 27336 KB] g=25, 143 evaluated, 142 expanded
[t=0.0313392s, 27336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0313498s, 27336 KB] g=26, 145 evaluated, 144 expanded
[t=0.0315903s, 27336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0316006s, 27336 KB] g=28, 152 evaluated, 151 expanded
[t=0.032036s, 27336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0320483s, 27336 KB] g=30, 165 evaluated, 164 expanded
[t=0.0324563s, 27336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0324672s, 27336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0324789s, 27336 KB] g=32, 177 evaluated, 176 expanded
[t=0.0328137s, 27336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0328247s, 27336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0328356s, 27336 KB] g=34, 187 evaluated, 186 expanded
[t=0.0331082s, 27336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0331187s, 27336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0331296s, 27336 KB] g=36, 195 evaluated, 194 expanded
[t=0.0333678s, 27336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0333815s, 27336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0333928s, 27336 KB] g=37, 202 evaluated, 201 expanded
[t=0.0334396s, 27336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0334501s, 27336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0334608s, 27336 KB] g=38, 203 evaluated, 202 expanded
[t=0.0337619s, 27336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0337724s, 27336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0337832s, 27336 KB] g=40, 212 evaluated, 211 expanded
[t=0.0340241s, 27336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0340353s, 27336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0340466s, 27336 KB] g=42, 219 evaluated, 218 expanded
[t=0.0345089s, 27336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0345206s, 27336 KB] g=45, 233 evaluated, 232 expanded
[t=0.0345708s, 27336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.034581s, 27336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0345925s, 27336 KB] g=46, 234 evaluated, 233 expanded
[t=0.0348366s, 27336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0348503s, 27336 KB] g=47, 241 evaluated, 240 expanded
[t=0.0348989s, 27336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0349097s, 27336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0349207s, 27336 KB] g=48, 242 evaluated, 241 expanded
[t=0.035208s, 27336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.035221s, 27336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0352325s, 27336 KB] g=50, 250 evaluated, 249 expanded
[t=0.0354852s, 27336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0354961s, 27336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0355075s, 27336 KB] g=52, 257 evaluated, 256 expanded
[t=0.0357096s, 27336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.035721s, 27336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.035732s, 27336 KB] g=54, 263 evaluated, 262 expanded
[t=0.0359016s, 27336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0359205s, 27336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0359347s, 27336 KB] g=56, 268 evaluated, 267 expanded
[t=0.0362153s, 27336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0362313s, 27336 KB] g=59, 276 evaluated, 275 expanded
[t=0.0362778s, 27336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0362883s, 27336 KB] g=60, 277 evaluated, 276 expanded
[t=0.0364424s, 27336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0364537s, 27336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0364679s, 27336 KB] g=62, 281 evaluated, 280 expanded
[t=0.0367056s, 27336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0367182s, 27336 KB] g=65, 288 evaluated, 287 expanded
[t=0.0367655s, 27336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0367756s, 27336 KB] g=66, 289 evaluated, 288 expanded
[t=0.0368818s, 27336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.036893s, 27336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0369038s, 27336 KB] g=68, 292 evaluated, 291 expanded
[t=0.0387686s, 27336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0387877s, 27336 KB] g=82, 352 evaluated, 351 expanded
[t=0.0389305s, 27336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0389414s, 27336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0389525s, 27336 KB] g=84, 356 evaluated, 355 expanded
[t=0.0392402s, 27336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0392508s, 27336 KB] g=88, 365 evaluated, 364 expanded
[t=0.0393569s, 27336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0393673s, 27336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0393789s, 27336 KB] g=90, 368 evaluated, 367 expanded
[t=0.051099s, 27336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0511821s, 27336 KB] g=128, 748 evaluated, 747 expanded
[t=0.0514758s, 27336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.051489s, 27336 KB] g=132, 757 evaluated, 756 expanded
[t=0.0515903s, 27336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0516014s, 27336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.051612s, 27336 KB] g=134, 760 evaluated, 759 expanded
[t=0.0525741s, 27336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0525887s, 27336 KB] g=150, 798 evaluated, 797 expanded
[t=0.0528511s, 27336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0528627s, 27336 KB] g=158, 809 evaluated, 808 expanded
[t=0.0528945s, 27336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0529051s, 27336 KB] g=158, 810 evaluated, 809 expanded
[t=0.05293s, 27336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0529401s, 27336 KB] g=159, 811 evaluated, 810 expanded
[t=0.0529613s, 27336 KB] Solution found!
[t=0.0529758s, 27336 KB] Actual search time: 0.0275344s
pick-up b22 (1)
stack b22 b20 (1)
unstack b17 b14 (1)
put-down b17 (1)
unstack b14 b7 (1)
stack b14 b17 (1)
unstack b7 b1 (1)
put-down b7 (1)
unstack b1 b9 (1)
stack b1 b12 (1)
unstack b9 b5 (1)
put-down b9 (1)
unstack b5 b16 (1)
put-down b5 (1)
unstack b16 b19 (1)
put-down b16 (1)
unstack b19 b2 (1)
stack b19 b14 (1)
unstack b2 b3 (1)
stack b2 b9 (1)
unstack b3 b24 (1)
put-down b3 (1)
unstack b1 b12 (1)
put-down b1 (1)
unstack b12 b15 (1)
stack b12 b19 (1)
unstack b15 b18 (1)
stack b15 b7 (1)
unstack b18 b13 (1)
put-down b18 (1)
unstack b13 b23 (1)
stack b13 b2 (1)
pick-up b1 (1)
stack b1 b12 (1)
unstack b24 b8 (1)
stack b24 b15 (1)
unstack b8 b21 (1)
put-down b8 (1)
pick-up b23 (1)
stack b23 b1 (1)
pick-up b5 (1)
stack b5 b13 (1)
unstack b21 b25 (1)
put-down b21 (1)
unstack b25 b4 (1)
put-down b25 (1)
unstack b4 b10 (1)
put-down b4 (1)
unstack b10 b6 (1)
stack b10 b23 (1)
pick-up b18 (1)
stack b18 b10 (1)
pick-up b3 (1)
stack b3 b6 (1)
pick-up b21 (1)
stack b21 b25 (1)
unstack b22 b20 (1)
put-down b22 (1)
unstack b20 b11 (1)
stack b20 b24 (1)
pick-up b22 (1)
stack b22 b20 (1)
unstack b3 b6 (1)
put-down b3 (1)
pick-up b6 (1)
stack b6 b18 (1)
pick-up b3 (1)
stack b3 b6 (1)
unstack b22 b20 (1)
put-down b22 (1)
unstack b20 b24 (1)
put-down b20 (1)
pick-up b22 (1)
stack b22 b20 (1)
unstack b24 b15 (1)
put-down b24 (1)
unstack b15 b7 (1)
put-down b15 (1)
pick-up b7 (1)
stack b7 b11 (1)
pick-up b15 (1)
stack b15 b7 (1)
pick-up b24 (1)
stack b24 b15 (1)
unstack b22 b20 (1)
put-down b22 (1)
pick-up b20 (1)
stack b20 b24 (1)
pick-up b22 (1)
stack b22 b20 (1)
unstack b3 b6 (1)
put-down b3 (1)
unstack b6 b18 (1)
put-down b6 (1)
pick-up b3 (1)
stack b3 b6 (1)
unstack b18 b10 (1)
put-down b18 (1)
unstack b10 b23 (1)
put-down b10 (1)
unstack b23 b1 (1)
put-down b23 (1)
pick-up b10 (1)
stack b10 b23 (1)
pick-up b18 (1)
stack b18 b10 (1)
unstack b3 b6 (1)
put-down b3 (1)
pick-up b6 (1)
stack b6 b18 (1)
pick-up b3 (1)
stack b3 b6 (1)
unstack b1 b12 (1)
put-down b1 (1)
unstack b12 b19 (1)
put-down b12 (1)
pick-up b1 (1)
stack b1 b12 (1)
unstack b19 b14 (1)
put-down b19 (1)
unstack b14 b17 (1)
put-down b14 (1)
pick-up b17 (1)
stack b17 b4 (1)
pick-up b14 (1)
stack b14 b17 (1)
pick-up b19 (1)
stack b19 b14 (1)
unstack b1 b12 (1)
put-down b1 (1)
pick-up b12 (1)
stack b12 b19 (1)
pick-up b1 (1)
stack b1 b12 (1)
unstack b3 b6 (1)
put-down b3 (1)
unstack b6 b18 (1)
put-down b6 (1)
unstack b18 b10 (1)
put-down b18 (1)
pick-up b6 (1)
stack b6 b18 (1)
pick-up b3 (1)
stack b3 b6 (1)
unstack b10 b23 (1)
put-down b10 (1)
pick-up b23 (1)
stack b23 b1 (1)
pick-up b10 (1)
stack b10 b23 (1)
unstack b3 b6 (1)
put-down b3 (1)
unstack b6 b18 (1)
put-down b6 (1)
pick-up b18 (1)
stack b18 b10 (1)
pick-up b6 (1)
stack b6 b18 (1)
pick-up b3 (1)
stack b3 b6 (1)
[t=0.052987s, 27336 KB] Plan length: 160 step(s).
[t=0.052987s, 27336 KB] Plan cost: 160
[t=0.052987s, 27336 KB] Expanded 811 state(s).
[t=0.052987s, 27336 KB] Reopened 0 state(s).
[t=0.052987s, 27336 KB] Evaluated 812 state(s).
[t=0.052987s, 27336 KB] Evaluations: 1624
[t=0.052987s, 27336 KB] Generated 8037 state(s).
[t=0.052987s, 27336 KB] Dead ends: 0 state(s).
[t=0.052987s, 27336 KB] Number of registered states: 812
[t=0.052987s, 27336 KB] Int hash set load factor: 812/2048 = 0.396484
[t=0.052987s, 27336 KB] Int hash set resizes: 11
[t=0.052987s, 27336 KB] Search time: 0.0275929s
[t=0.052987s, 27336 KB] Total time: 0.052987s
Solution found.
Peak memory: 27336 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.25s
