INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py ../bws_domain/bws_domain_actions.pddl ../bws_domain/problem_size_27/bws_problem_27_10.pddl --sas-file output.sas
Parsing...
Parsing: [0.010s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.000s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.014s wall-clock]
2378 relevant atoms
1593 auxiliary atoms
3971 final queue length
6947 total queue pushes
Completing instantiation... [0.020s CPU, 0.023s wall-clock]
Instantiating: [0.030s CPU, 0.039s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
28 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.008s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.040s CPU, 0.037s wall-clock]
2160 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
54 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.016s wall-clock]
Reordering and filtering variables...
55 of 55 variables necessary.
28 of 55 mutex groups necessary.
1458 of 1458 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.008s wall-clock]
Translator variables: 55
Translator derived variables: 0
Translator facts: 812
Translator goal facts: 27
Translator mutex groups: 28
Translator total mutex groups size: 784
Translator operators: 1458
Translator axioms: 0
Translator task size: 12532
Translator peak memory: 39796 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.130s CPU, 0.121s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.2335e-05s, 24488 KB] reading input...
[t=0.00425558s, 25936 KB] done reading input!
[t=0.00511344s, 26332 KB] Initializing landmark count heuristic...
[t=0.00514345s, 26332 KB] Generating landmark graph...
[t=0.00522111s, 26332 KB] Building a landmark graph with reasonable orders.
[t=0.00529673s, 26464 KB] Initializing Exploration...
[t=0.00568298s, 26732 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0244635s, 27392 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0245503s, 27392 KB] Landmarks generation time: 0.0193366s
[t=0.0245712s, 27392 KB] Discovered 123 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0245877s, 27392 KB] 488 edges
[t=0.0245973s, 27392 KB] approx. reasonable orders
[t=0.0246061s, 27392 KB] approx. obedient reasonable orders
[t=0.0246335s, 27392 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0246439s, 27392 KB] Landmarks generation time: 0.0194972s
[t=0.0246529s, 27392 KB] Discovered 123 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0246603s, 27392 KB] 488 edges
[t=0.0246681s, 27392 KB] Landmark graph generation time: 0.0195311s
[t=0.024676s, 27392 KB] Landmark graph contains 123 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0246834s, 27392 KB] Landmark graph contains 488 orderings.
[t=0.0251376s, 27456 KB] Simplifying 5778 unary operators... done! [4374 unary operators]
[t=0.0264452s, 27588 KB] time to simplify: 0.00139455s
[t=0.0266134s, 27588 KB] Initializing additive heuristic...
[t=0.0266307s, 27588 KB] Initializing FF heuristic...
[t=0.0267099s, 27588 KB] Building successor generator...done!
[t=0.0269562s, 27588 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0269652s, 27588 KB] time for successor generation creation: 0.000210289s
[t=0.0269807s, 27588 KB] Variables: 55
[t=0.0269891s, 27588 KB] FactPairs: 812
[t=0.0269966s, 27588 KB] Bytes per state: 24
[t=0.0270844s, 27588 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.027117s, 27588 KB] 54 initial landmarks, 27 goal landmarks
[t=0.027178s, 27588 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 69
[t=0.0271876s, 27588 KB] New best heuristic value for ff(transform = adapt_costs(one)): 49
[t=0.0271963s, 27588 KB] g=0, 1 evaluated, 0 expanded
[t=0.0272101s, 27588 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 69
[t=0.0272186s, 27588 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 49
[t=0.0272653s, 27588 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 68
[t=0.0272736s, 27588 KB] New best heuristic value for ff(transform = adapt_costs(one)): 48
[t=0.0272812s, 27588 KB] g=1, 2 evaluated, 1 expanded
[t=0.0273264s, 27588 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 66
[t=0.027335s, 27588 KB] New best heuristic value for ff(transform = adapt_costs(one)): 47
[t=0.0273428s, 27588 KB] g=2, 3 evaluated, 2 expanded
[t=0.0273875s, 27588 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 65
[t=0.027396s, 27588 KB] New best heuristic value for ff(transform = adapt_costs(one)): 46
[t=0.0274038s, 27588 KB] g=3, 4 evaluated, 3 expanded
[t=0.0274477s, 27588 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 63
[t=0.0274559s, 27588 KB] New best heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0274636s, 27588 KB] g=4, 5 evaluated, 4 expanded
[t=0.027542s, 27588 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 62
[t=0.0275541s, 27588 KB] g=5, 7 evaluated, 6 expanded
[t=0.027952s, 27588 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 61
[t=0.0279645s, 27588 KB] g=7, 17 evaluated, 16 expanded
[t=0.0284162s, 27588 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 60
[t=0.0284271s, 27588 KB] g=10, 29 evaluated, 28 expanded
[t=0.028997s, 27588 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.029014s, 27588 KB] g=12, 44 evaluated, 43 expanded
[t=0.0291674s, 27588 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 58
[t=0.029177s, 27588 KB] g=13, 47 evaluated, 46 expanded
[t=0.0292413s, 27588 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 57
[t=0.0292501s, 27588 KB] New best heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.0292579s, 27588 KB] g=14, 48 evaluated, 47 expanded
[t=0.0295816s, 27588 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0295909s, 27588 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0295986s, 27588 KB] g=16, 57 evaluated, 56 expanded
[t=0.0299062s, 27588 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0299157s, 27588 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0299234s, 27588 KB] g=18, 65 evaluated, 64 expanded
[t=0.0302077s, 27588 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.030217s, 27588 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0302255s, 27588 KB] g=20, 73 evaluated, 72 expanded
[t=0.030471s, 27588 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0304801s, 27588 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.030488s, 27588 KB] g=22, 80 evaluated, 79 expanded
[t=0.0307036s, 27588 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0307124s, 27588 KB] g=23, 86 evaluated, 85 expanded
[t=0.0307564s, 27588 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0307658s, 27588 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0307746s, 27588 KB] g=24, 87 evaluated, 86 expanded
[t=0.0309203s, 27588 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0309293s, 27588 KB] g=25, 91 evaluated, 90 expanded
[t=0.0309735s, 27588 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0309821s, 27588 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.03099s, 27588 KB] g=26, 92 evaluated, 91 expanded
[t=0.0312351s, 27588 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0312441s, 27588 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0312527s, 27588 KB] g=28, 99 evaluated, 98 expanded
[t=0.0319904s, 27588 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0320015s, 27588 KB] g=32, 120 evaluated, 119 expanded
[t=0.0321835s, 27588 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0321929s, 27588 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.032201s, 27588 KB] g=34, 125 evaluated, 124 expanded
[t=0.0326869s, 27588 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0326963s, 27588 KB] g=37, 139 evaluated, 138 expanded
[t=0.0330388s, 27588 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.033048s, 27588 KB] g=39, 149 evaluated, 148 expanded
[t=0.0332285s, 27588 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0332401s, 27588 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0332484s, 27588 KB] g=42, 154 evaluated, 153 expanded
[t=0.0335325s, 27588 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0335421s, 27588 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0335523s, 27588 KB] g=44, 162 evaluated, 161 expanded
[t=0.0343506s, 27588 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0343603s, 27588 KB] g=49, 185 evaluated, 184 expanded
[t=0.034405s, 27588 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0344135s, 27588 KB] g=50, 186 evaluated, 185 expanded
[t=0.0344922s, 27588 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0345009s, 27588 KB] g=51, 188 evaluated, 187 expanded
[t=0.0345448s, 27588 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0345533s, 27588 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0345616s, 27588 KB] g=52, 189 evaluated, 188 expanded
[t=0.0348749s, 27588 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0348842s, 27588 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0348921s, 27588 KB] g=54, 198 evaluated, 197 expanded
[t=0.0351418s, 27588 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0351506s, 27588 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0351584s, 27588 KB] g=55, 205 evaluated, 204 expanded
[t=0.0352018s, 27588 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0352109s, 27588 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0352193s, 27588 KB] g=56, 206 evaluated, 205 expanded
[t=0.0354326s, 27588 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0354412s, 27588 KB] g=57, 212 evaluated, 211 expanded
[t=0.0354855s, 27588 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0354942s, 27588 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.035502s, 27588 KB] g=58, 213 evaluated, 212 expanded
[t=0.0356851s, 27588 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0356937s, 27588 KB] g=59, 218 evaluated, 217 expanded
[t=0.0357405s, 27588 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0357504s, 27588 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0357583s, 27588 KB] g=60, 219 evaluated, 218 expanded
[t=0.0360763s, 27588 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0360857s, 27588 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0360945s, 27588 KB] g=62, 228 evaluated, 227 expanded
[t=0.036367s, 27588 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0363756s, 27588 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0363838s, 27588 KB] g=64, 236 evaluated, 235 expanded
[t=0.0365891s, 27588 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0366095s, 27588 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0366195s, 27588 KB] g=66, 242 evaluated, 241 expanded
[t=0.0369731s, 27588 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.036987s, 27588 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0369946s, 27588 KB] g=68, 252 evaluated, 251 expanded
[t=0.037183s, 27588 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0371925s, 27588 KB] g=71, 257 evaluated, 256 expanded
[t=0.0372703s, 27588 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.037279s, 27588 KB] g=72, 259 evaluated, 258 expanded
[t=0.0374201s, 27588 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0374288s, 27588 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0374366s, 27588 KB] g=74, 263 evaluated, 262 expanded
[t=0.0395535s, 27588 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0395648s, 27588 KB] g=86, 326 evaluated, 325 expanded
[t=0.0400501s, 27588 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0400619s, 27588 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0400699s, 27588 KB] g=92, 340 evaluated, 339 expanded
[t=0.0426511s, 27588 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0426619s, 27588 KB] g=106, 420 evaluated, 419 expanded
[t=0.0427968s, 27588 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0428053s, 27588 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0428132s, 27588 KB] g=108, 424 evaluated, 423 expanded
[t=0.043107s, 27588 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0431165s, 27588 KB] g=112, 433 evaluated, 432 expanded
[t=0.0432213s, 27588 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0432298s, 27588 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0432375s, 27588 KB] g=114, 436 evaluated, 435 expanded
[t=0.0508839s, 27588 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0509043s, 27588 KB] g=148, 678 evaluated, 677 expanded
[t=0.05117s, 27588 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0511792s, 27588 KB] g=152, 687 evaluated, 686 expanded
[t=0.0512731s, 27588 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0512817s, 27588 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0512893s, 27588 KB] g=154, 690 evaluated, 689 expanded
[t=0.0517004s, 27588 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0517095s, 27588 KB] g=166, 707 evaluated, 706 expanded
[t=0.0518093s, 27588 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.05182s, 27588 KB] g=170, 711 evaluated, 710 expanded
[t=0.051844s, 27588 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0518527s, 27588 KB] g=171, 712 evaluated, 711 expanded
[t=0.0518699s, 27588 KB] Solution found!
[t=0.0518813s, 27588 KB] Actual search time: 0.0247612s
unstack b10 b25 (1)
put-down b10 (1)
unstack b13 b26 (1)
put-down b13 (1)
unstack b19 b4 (1)
put-down b19 (1)
unstack b5 b9 (1)
put-down b5 (1)
unstack b15 b24 (1)
put-down b15 (1)
unstack b24 b2 (1)
put-down b24 (1)
unstack b2 b14 (1)
stack b2 b4 (1)
pick-up b14 (1)
stack b14 b15 (1)
unstack b25 b27 (1)
stack b25 b24 (1)
pick-up b19 (1)
stack b19 b27 (1)
unstack b26 b7 (1)
stack b26 b9 (1)
unstack b7 b20 (1)
put-down b7 (1)
unstack b20 b1 (1)
stack b20 b7 (1)
pick-up b5 (1)
stack b5 b1 (1)
unstack b19 b27 (1)
put-down b19 (1)
pick-up b27 (1)
stack b27 b14 (1)
pick-up b19 (1)
stack b19 b27 (1)
unstack b26 b9 (1)
put-down b26 (1)
unstack b9 b6 (1)
put-down b9 (1)
unstack b6 b23 (1)
put-down b6 (1)
unstack b23 b12 (1)
put-down b23 (1)
pick-up b26 (1)
stack b26 b9 (1)
unstack b2 b4 (1)
put-down b2 (1)
unstack b4 b17 (1)
put-down b4 (1)
unstack b17 b16 (1)
stack b17 b25 (1)
unstack b16 b22 (1)
put-down b16 (1)
unstack b22 b8 (1)
stack b22 b26 (1)
unstack b8 b3 (1)
put-down b8 (1)
unstack b3 b21 (1)
put-down b3 (1)
unstack b21 b11 (1)
put-down b21 (1)
pick-up b6 (1)
stack b6 b21 (1)
pick-up b11 (1)
stack b11 b12 (1)
pick-up b4 (1)
stack b4 b17 (1)
pick-up b2 (1)
stack b2 b4 (1)
unstack b11 b12 (1)
put-down b11 (1)
pick-up b12 (1)
stack b12 b22 (1)
pick-up b11 (1)
stack b11 b12 (1)
unstack b19 b27 (1)
put-down b19 (1)
unstack b27 b14 (1)
put-down b27 (1)
pick-up b19 (1)
stack b19 b27 (1)
unstack b14 b15 (1)
put-down b14 (1)
pick-up b15 (1)
stack b15 b11 (1)
pick-up b14 (1)
stack b14 b15 (1)
unstack b19 b27 (1)
put-down b19 (1)
pick-up b27 (1)
stack b27 b14 (1)
pick-up b19 (1)
stack b19 b27 (1)
unstack b2 b4 (1)
put-down b2 (1)
unstack b4 b17 (1)
put-down b4 (1)
pick-up b2 (1)
stack b2 b4 (1)
unstack b17 b25 (1)
put-down b17 (1)
unstack b25 b24 (1)
put-down b25 (1)
pick-up b24 (1)
stack b24 b23 (1)
pick-up b25 (1)
stack b25 b24 (1)
pick-up b17 (1)
stack b17 b25 (1)
unstack b2 b4 (1)
put-down b2 (1)
pick-up b4 (1)
stack b4 b17 (1)
pick-up b2 (1)
stack b2 b4 (1)
unstack b19 b27 (1)
put-down b19 (1)
unstack b27 b14 (1)
put-down b27 (1)
pick-up b19 (1)
stack b19 b27 (1)
unstack b14 b15 (1)
put-down b14 (1)
unstack b15 b11 (1)
put-down b15 (1)
pick-up b14 (1)
stack b14 b15 (1)
unstack b19 b27 (1)
put-down b19 (1)
pick-up b27 (1)
stack b27 b14 (1)
pick-up b19 (1)
stack b19 b27 (1)
unstack b11 b12 (1)
put-down b11 (1)
unstack b12 b22 (1)
put-down b12 (1)
pick-up b11 (1)
stack b11 b12 (1)
unstack b22 b26 (1)
put-down b22 (1)
unstack b26 b9 (1)
put-down b26 (1)
pick-up b9 (1)
stack b9 b3 (1)
pick-up b26 (1)
stack b26 b9 (1)
pick-up b22 (1)
stack b22 b26 (1)
unstack b11 b12 (1)
put-down b11 (1)
pick-up b12 (1)
stack b12 b22 (1)
pick-up b11 (1)
stack b11 b12 (1)
unstack b19 b27 (1)
put-down b19 (1)
unstack b27 b14 (1)
put-down b27 (1)
pick-up b19 (1)
stack b19 b27 (1)
unstack b14 b15 (1)
put-down b14 (1)
pick-up b15 (1)
stack b15 b11 (1)
pick-up b14 (1)
stack b14 b15 (1)
unstack b19 b27 (1)
put-down b19 (1)
pick-up b27 (1)
stack b27 b14 (1)
pick-up b19 (1)
stack b19 b27 (1)
[t=0.051891s, 27588 KB] Plan length: 172 step(s).
[t=0.051891s, 27588 KB] Plan cost: 172
[t=0.051891s, 27588 KB] Expanded 712 state(s).
[t=0.051891s, 27588 KB] Reopened 0 state(s).
[t=0.051891s, 27588 KB] Evaluated 713 state(s).
[t=0.051891s, 27588 KB] Evaluations: 1426
[t=0.051891s, 27588 KB] Generated 9849 state(s).
[t=0.051891s, 27588 KB] Dead ends: 0 state(s).
[t=0.051891s, 27588 KB] Number of registered states: 713
[t=0.051891s, 27588 KB] Int hash set load factor: 713/1024 = 0.696289
[t=0.051891s, 27588 KB] Int hash set resizes: 10
[t=0.051891s, 27588 KB] Search time: 0.0248071s
[t=0.051891s, 27588 KB] Total time: 0.051891s
Solution found.
Peak memory: 27588 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.22s
