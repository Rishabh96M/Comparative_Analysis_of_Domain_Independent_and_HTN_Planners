INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py ../bws_domain/bws_domain_actions.pddl ../bws_domain/problem_size_27/bws_problem_27_1.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.015s wall-clock]
2378 relevant atoms
1593 auxiliary atoms
3971 final queue length
6950 total queue pushes
Completing instantiation... [0.030s CPU, 0.026s wall-clock]
Instantiating: [0.050s CPU, 0.042s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.001s wall-clock]
Choosing groups...
28 uncovered facts
Choosing groups: [0.010s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.009s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.001s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.002s wall-clock]
Translating task: [0.040s CPU, 0.044s wall-clock]
2160 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
54 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.019s wall-clock]
Reordering and filtering variables...
55 of 55 variables necessary.
28 of 55 mutex groups necessary.
1458 of 1458 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.009s wall-clock]
Translator variables: 55
Translator derived variables: 0
Translator facts: 812
Translator goal facts: 27
Translator mutex groups: 28
Translator total mutex groups size: 784
Translator operators: 1458
Translator axioms: 0
Translator task size: 12532
Translator peak memory: 39540 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.140s CPU, 0.135s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.6816e-05s, 24488 KB] reading input...
[t=0.00424141s, 25936 KB] done reading input!
[t=0.00528346s, 26332 KB] Initializing landmark count heuristic...
[t=0.00531913s, 26332 KB] Generating landmark graph...
[t=0.00540451s, 26332 KB] Building a landmark graph with reasonable orders.
[t=0.00548599s, 26464 KB] Initializing Exploration...
[t=0.00607024s, 26732 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.027137s, 27392 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0272533s, 27392 KB] Landmarks generation time: 0.0218569s
[t=0.0272763s, 27392 KB] Discovered 125 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0272955s, 27392 KB] 449 edges
[t=0.0273065s, 27392 KB] approx. reasonable orders
[t=0.0303136s, 27392 KB] approx. obedient reasonable orders
[t=0.0303722s, 27392 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0303844s, 27392 KB] Landmarks generation time: 0.0250638s
[t=0.0303962s, 27392 KB] Discovered 125 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0304052s, 27392 KB] 482 edges
[t=0.0304144s, 27392 KB] Landmark graph generation time: 0.025104s
[t=0.030425s, 27392 KB] Landmark graph contains 125 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0304339s, 27392 KB] Landmark graph contains 482 orderings.
[t=0.0312018s, 27444 KB] Simplifying 5778 unary operators... done! [4374 unary operators]
[t=0.0327568s, 27576 KB] time to simplify: 0.00164909s
[t=0.0329343s, 27576 KB] Initializing additive heuristic...
[t=0.0329524s, 27576 KB] Initializing FF heuristic...
[t=0.0330094s, 27576 KB] Building successor generator...done!
[t=0.0332621s, 27576 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0332718s, 27576 KB] time for successor generation creation: 0.00021547s
[t=0.0332847s, 27576 KB] Variables: 55
[t=0.0332936s, 27576 KB] FactPairs: 812
[t=0.0333021s, 27576 KB] Bytes per state: 24
[t=0.0334034s, 27576 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0334379s, 27576 KB] 55 initial landmarks, 27 goal landmarks
[t=0.0335021s, 27576 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 70
[t=0.0335122s, 27576 KB] New best heuristic value for ff(transform = adapt_costs(one)): 52
[t=0.0335213s, 27576 KB] g=0, 1 evaluated, 0 expanded
[t=0.0335376s, 27576 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 70
[t=0.0335471s, 27576 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 52
[t=0.0336766s, 27576 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 69
[t=0.0336865s, 27576 KB] g=1, 4 evaluated, 3 expanded
[t=0.0337354s, 27576 KB] New best heuristic value for ff(transform = adapt_costs(one)): 51
[t=0.0337453s, 27576 KB] g=2, 5 evaluated, 4 expanded
[t=0.0342996s, 27576 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 67
[t=0.0343105s, 27576 KB] New best heuristic value for ff(transform = adapt_costs(one)): 49
[t=0.0343199s, 27576 KB] g=4, 20 evaluated, 19 expanded
[t=0.0343672s, 27576 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 66
[t=0.0343768s, 27576 KB] g=5, 21 evaluated, 20 expanded
[t=0.0349577s, 27576 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 64
[t=0.0349747s, 27576 KB] New best heuristic value for ff(transform = adapt_costs(one)): 47
[t=0.0349841s, 27576 KB] g=6, 37 evaluated, 36 expanded
[t=0.0350312s, 27576 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 63
[t=0.0350408s, 27576 KB] g=7, 38 evaluated, 37 expanded
[t=0.0356428s, 27576 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 62
[t=0.0356531s, 27576 KB] New best heuristic value for ff(transform = adapt_costs(one)): 46
[t=0.035662s, 27576 KB] g=8, 55 evaluated, 54 expanded
[t=0.0357076s, 27576 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 61
[t=0.0357172s, 27576 KB] g=9, 56 evaluated, 55 expanded
[t=0.0362578s, 27576 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 60
[t=0.0362748s, 27576 KB] New best heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0362841s, 27576 KB] g=10, 71 evaluated, 70 expanded
[t=0.036368s, 27576 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.0363776s, 27576 KB] g=11, 73 evaluated, 72 expanded
[t=0.0369411s, 27576 KB] New best heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.0369568s, 27576 KB] g=12, 88 evaluated, 87 expanded
[t=0.0370028s, 27576 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 58
[t=0.0370129s, 27576 KB] g=13, 89 evaluated, 88 expanded
[t=0.0370952s, 27576 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0371045s, 27576 KB] g=14, 91 evaluated, 90 expanded
[t=0.0376877s, 27576 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0376981s, 27576 KB] g=14, 107 evaluated, 106 expanded
[t=0.0377804s, 27576 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0377903s, 27576 KB] g=16, 109 evaluated, 108 expanded
[t=0.0382654s, 27576 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0382768s, 27576 KB] g=16, 122 evaluated, 121 expanded
[t=0.0386115s, 27576 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.038622s, 27576 KB] g=18, 131 evaluated, 130 expanded
[t=0.0388441s, 27576 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0388536s, 27576 KB] g=18, 137 evaluated, 136 expanded
[t=0.039402s, 27576 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0394124s, 27576 KB] g=20, 152 evaluated, 151 expanded
[t=0.0399003s, 27576 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0399174s, 27576 KB] g=22, 165 evaluated, 164 expanded
[t=0.0400038s, 27576 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0400139s, 27576 KB] g=23, 167 evaluated, 166 expanded
[t=0.0400974s, 27576 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0401067s, 27576 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0401153s, 27576 KB] g=24, 169 evaluated, 168 expanded
[t=0.0401972s, 27576 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0402068s, 27576 KB] g=25, 171 evaluated, 170 expanded
[t=0.0406038s, 27576 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0406146s, 27576 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0406235s, 27576 KB] g=26, 182 evaluated, 181 expanded
[t=0.0407377s, 27576 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0407498s, 27576 KB] g=27, 184 evaluated, 183 expanded
[t=0.0409727s, 27576 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0409828s, 27576 KB] g=27, 190 evaluated, 189 expanded
[t=0.0410284s, 27576 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0410382s, 27576 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0410468s, 27576 KB] g=28, 191 evaluated, 190 expanded
[t=0.0411624s, 27576 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0411731s, 27576 KB] g=29, 194 evaluated, 193 expanded
[t=0.0415008s, 27576 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.04152s, 27576 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.041533s, 27576 KB] g=30, 203 evaluated, 202 expanded
[t=0.0416194s, 27576 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0416296s, 27576 KB] g=31, 205 evaluated, 204 expanded
[t=0.0420356s, 27576 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0420466s, 27576 KB] g=34, 216 evaluated, 215 expanded
[t=0.0423128s, 27576 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0423239s, 27576 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0423332s, 27576 KB] g=36, 223 evaluated, 222 expanded
[t=0.0425567s, 27576 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0425673s, 27576 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0425771s, 27576 KB] g=38, 229 evaluated, 228 expanded
[t=0.0428068s, 27576 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0428176s, 27576 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0428267s, 27576 KB] g=40, 235 evaluated, 234 expanded
[t=0.0428737s, 27576 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.042884s, 27576 KB] g=41, 236 evaluated, 235 expanded
[t=0.0429312s, 27576 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0429419s, 27576 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0429511s, 27576 KB] g=42, 237 evaluated, 236 expanded
[t=0.0431713s, 27576 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0431832s, 27576 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.043192s, 27576 KB] g=44, 243 evaluated, 242 expanded
[t=0.0434417s, 27576 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.043454s, 27576 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0434627s, 27576 KB] g=46, 250 evaluated, 249 expanded
[t=0.0436776s, 27576 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0436886s, 27576 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0436975s, 27576 KB] g=48, 256 evaluated, 255 expanded
[t=0.0452263s, 27576 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.045254s, 27576 KB] g=54, 301 evaluated, 300 expanded
[t=0.04547s, 27576 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0454808s, 27576 KB] g=56, 307 evaluated, 306 expanded
[t=0.0456605s, 27576 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0456712s, 27576 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0456808s, 27576 KB] g=58, 312 evaluated, 311 expanded
[t=0.0488181s, 27576 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.048838s, 27576 KB] g=68, 403 evaluated, 402 expanded
[t=0.0490443s, 27576 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0490598s, 27576 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0490688s, 27576 KB] g=70, 409 evaluated, 408 expanded
[t=0.0498377s, 27576 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0498545s, 27576 KB] g=74, 432 evaluated, 431 expanded
[t=0.050061s, 27576 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0500708s, 27576 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0500796s, 27576 KB] g=76, 438 evaluated, 437 expanded
[t=0.0518482s, 27576 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0518604s, 27576 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0518705s, 27576 KB] g=84, 491 evaluated, 490 expanded
[t=0.052013s, 27576 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0520231s, 27576 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0520319s, 27576 KB] g=86, 495 evaluated, 494 expanded
[t=0.0530629s, 27576 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0530764s, 27576 KB] g=96, 526 evaluated, 525 expanded
[t=0.0532117s, 27576 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0532217s, 27576 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0532305s, 27576 KB] g=98, 530 evaluated, 529 expanded
[t=0.0535051s, 27576 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0535159s, 27576 KB] g=102, 539 evaluated, 538 expanded
[t=0.0536121s, 27576 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0536219s, 27576 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0536305s, 27576 KB] g=104, 542 evaluated, 541 expanded
[t=0.0561005s, 27576 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0561212s, 27576 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0561313s, 27576 KB] g=134, 640 evaluated, 639 expanded
[t=0.0563459s, 27576 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0563572s, 27576 KB] g=138, 649 evaluated, 648 expanded
[t=0.0564351s, 27576 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0564446s, 27576 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0564532s, 27576 KB] g=140, 652 evaluated, 651 expanded
[t=0.0568136s, 27576 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0568293s, 27576 KB] g=152, 670 evaluated, 669 expanded
[t=0.0568987s, 27576 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.05691s, 27576 KB] g=156, 674 evaluated, 673 expanded
[t=0.0569308s, 27576 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0569413s, 27576 KB] g=157, 675 evaluated, 674 expanded
[t=0.0569592s, 27576 KB] Solution found!
[t=0.0569727s, 27576 KB] Actual search time: 0.0235319s
unstack b16 b3 (1)
stack b16 b14 (1)
unstack b11 b5 (1)
stack b11 b2 (1)
unstack b20 b19 (1)
stack b20 b11 (1)
unstack b22 b8 (1)
stack b22 b6 (1)
unstack b27 b12 (1)
stack b27 b5 (1)
pick-up b3 (1)
stack b3 b19 (1)
unstack b8 b18 (1)
stack b8 b27 (1)
unstack b17 b21 (1)
stack b17 b18 (1)
pick-up b21 (1)
stack b21 b20 (1)
unstack b12 b9 (1)
put-down b12 (1)
unstack b9 b1 (1)
stack b9 b3 (1)
unstack b1 b23 (1)
put-down b1 (1)
unstack b23 b25 (1)
stack b23 b9 (1)
unstack b25 b13 (1)
put-down b25 (1)
pick-up b13 (1)
stack b13 b23 (1)
unstack b16 b14 (1)
put-down b16 (1)
unstack b14 b24 (1)
stack b14 b22 (1)
pick-up b16 (1)
stack b16 b14 (1)
unstack b24 b26 (1)
stack b24 b12 (1)
unstack b26 b10 (1)
stack b26 b17 (1)
unstack b10 b4 (1)
stack b10 b26 (1)
unstack b4 b7 (1)
stack b4 b25 (1)
unstack b7 b15 (1)
stack b7 b24 (1)
pick-up b15 (1)
stack b15 b21 (1)
unstack b8 b27 (1)
put-down b8 (1)
unstack b27 b5 (1)
put-down b27 (1)
pick-up b5 (1)
stack b5 b13 (1)
pick-up b27 (1)
stack b27 b5 (1)
pick-up b8 (1)
stack b8 b27 (1)
unstack b10 b26 (1)
put-down b10 (1)
unstack b26 b17 (1)
put-down b26 (1)
unstack b17 b18 (1)
put-down b17 (1)
pick-up b10 (1)
stack b10 b26 (1)
pick-up b18 (1)
stack b18 b1 (1)
pick-up b17 (1)
stack b17 b18 (1)
unstack b10 b26 (1)
put-down b10 (1)
pick-up b26 (1)
stack b26 b17 (1)
pick-up b10 (1)
stack b10 b26 (1)
unstack b7 b24 (1)
put-down b7 (1)
unstack b24 b12 (1)
put-down b24 (1)
pick-up b12 (1)
stack b12 b15 (1)
pick-up b24 (1)
stack b24 b12 (1)
pick-up b7 (1)
stack b7 b24 (1)
unstack b16 b14 (1)
put-down b16 (1)
unstack b14 b22 (1)
put-down b14 (1)
pick-up b16 (1)
stack b16 b14 (1)
unstack b22 b6 (1)
put-down b22 (1)
pick-up b6 (1)
stack b6 b7 (1)
pick-up b22 (1)
stack b22 b6 (1)
unstack b16 b14 (1)
put-down b16 (1)
pick-up b14 (1)
stack b14 b22 (1)
pick-up b16 (1)
stack b16 b14 (1)
unstack b8 b27 (1)
put-down b8 (1)
unstack b27 b5 (1)
put-down b27 (1)
pick-up b8 (1)
stack b8 b27 (1)
unstack b5 b13 (1)
put-down b5 (1)
unstack b13 b23 (1)
put-down b13 (1)
pick-up b5 (1)
stack b5 b13 (1)
unstack b8 b27 (1)
put-down b8 (1)
pick-up b27 (1)
stack b27 b5 (1)
pick-up b8 (1)
stack b8 b27 (1)
unstack b23 b9 (1)
put-down b23 (1)
unstack b9 b3 (1)
put-down b9 (1)
pick-up b23 (1)
stack b23 b9 (1)
unstack b3 b19 (1)
put-down b3 (1)
pick-up b19 (1)
stack b19 b4 (1)
pick-up b3 (1)
stack b3 b19 (1)
unstack b23 b9 (1)
put-down b23 (1)
pick-up b9 (1)
stack b9 b3 (1)
pick-up b23 (1)
stack b23 b9 (1)
unstack b8 b27 (1)
put-down b8 (1)
unstack b27 b5 (1)
put-down b27 (1)
pick-up b8 (1)
stack b8 b27 (1)
unstack b5 b13 (1)
put-down b5 (1)
pick-up b13 (1)
stack b13 b23 (1)
pick-up b5 (1)
stack b5 b13 (1)
unstack b8 b27 (1)
put-down b8 (1)
pick-up b27 (1)
stack b27 b5 (1)
pick-up b8 (1)
stack b8 b27 (1)
[t=0.056983s, 27576 KB] Plan length: 158 step(s).
[t=0.056983s, 27576 KB] Plan cost: 158
[t=0.056983s, 27576 KB] Expanded 675 state(s).
[t=0.056983s, 27576 KB] Reopened 0 state(s).
[t=0.056983s, 27576 KB] Evaluated 676 state(s).
[t=0.056983s, 27576 KB] Evaluations: 1352
[t=0.056983s, 27576 KB] Generated 5893 state(s).
[t=0.056983s, 27576 KB] Dead ends: 0 state(s).
[t=0.056983s, 27576 KB] Number of registered states: 676
[t=0.056983s, 27576 KB] Int hash set load factor: 676/1024 = 0.660156
[t=0.056983s, 27576 KB] Int hash set resizes: 10
[t=0.056983s, 27576 KB] Search time: 0.02358s
[t=0.056983s, 27576 KB] Total time: 0.056983s
Solution found.
Peak memory: 27576 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.25s
