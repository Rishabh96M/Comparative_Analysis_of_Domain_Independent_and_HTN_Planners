INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py ../bws_domain/bws_domain_actions.pddl ../bws_domain/problem_size_20/bws_problem_20_3.pddl --sas-file output.sas
Parsing...
Parsing: [0.010s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.000s CPU, 0.008s wall-clock]
1342 relevant atoms
900 auxiliary atoms
2242 final queue length
3886 total queue pushes
Completing instantiation... [0.020s CPU, 0.015s wall-clock]
Instantiating: [0.020s CPU, 0.025s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
21 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.006s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.020s wall-clock]
1180 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
40 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.010s wall-clock]
Reordering and filtering variables...
41 of 41 variables necessary.
21 of 41 mutex groups necessary.
800 of 800 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.005s wall-clock]
Translator variables: 41
Translator derived variables: 0
Translator facts: 462
Translator goal facts: 20
Translator mutex groups: 21
Translator total mutex groups size: 441
Translator operators: 800
Translator axioms: 0
Translator task size: 6904
Translator peak memory: 35952 KB
Writing output... [0.000s CPU, 0.004s wall-clock]
Done! [0.070s CPU, 0.075s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.0867e-05s, 24488 KB] reading input...
[t=0.00225307s, 25180 KB] done reading input!
[t=0.00309878s, 25444 KB] Initializing landmark count heuristic...
[t=0.00313043s, 25444 KB] Generating landmark graph...
[t=0.00320327s, 25576 KB] Building a landmark graph with reasonable orders.
[t=0.00326323s, 25576 KB] Initializing Exploration...
[t=0.00353712s, 25744 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.012879s, 26140 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0129684s, 26140 KB] Landmarks generation time: 0.00976268s
[t=0.0129851s, 26140 KB] Discovered 89 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0130058s, 26140 KB] 325 edges
[t=0.0130167s, 26140 KB] approx. reasonable orders
[t=0.0134795s, 26140 KB] approx. obedient reasonable orders
[t=0.0135048s, 26140 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0135139s, 26140 KB] Landmarks generation time: 0.0103768s
[t=0.0135236s, 26140 KB] Discovered 89 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0135325s, 26140 KB] 331 edges
[t=0.0135414s, 26140 KB] Landmark graph generation time: 0.0104185s
[t=0.0135506s, 26140 KB] Landmark graph contains 89 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0135588s, 26140 KB] Landmark graph contains 331 orderings.
[t=0.0138811s, 26312 KB] Simplifying 3160 unary operators... done! [2400 unary operators]
[t=0.014649s, 26312 KB] time to simplify: 0.000820032s
[t=0.0147503s, 26312 KB] Initializing additive heuristic...
[t=0.0147643s, 26312 KB] Initializing FF heuristic...
[t=0.0148158s, 26312 KB] Building successor generator...done!
[t=0.0149889s, 26312 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0150014s, 26312 KB] time for successor generation creation: 0.000128129s
[t=0.0150128s, 26312 KB] Variables: 41
[t=0.0150211s, 26312 KB] FactPairs: 462
[t=0.0150297s, 26312 KB] Bytes per state: 16
[t=0.0151402s, 26312 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0151734s, 26312 KB] 41 initial landmarks, 20 goal landmarks
[t=0.0152203s, 26312 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0152446s, 26312 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0152541s, 26312 KB] g=0, 1 evaluated, 0 expanded
[t=0.0152681s, 26312 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0152773s, 26312 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0153128s, 26312 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0153225s, 26312 KB] g=1, 2 evaluated, 1 expanded
[t=0.0155422s, 26312 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0155523s, 26312 KB] g=4, 11 evaluated, 10 expanded
[t=0.0156773s, 26312 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0156873s, 26312 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.015696s, 26312 KB] g=5, 16 evaluated, 15 expanded
[t=0.0157303s, 26312 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0157395s, 26312 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0157481s, 26312 KB] g=6, 17 evaluated, 16 expanded
[t=0.0159148s, 26312 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0159246s, 26312 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0159335s, 26312 KB] g=8, 24 evaluated, 23 expanded
[t=0.0160793s, 26312 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0160886s, 26312 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0160974s, 26312 KB] g=10, 30 evaluated, 29 expanded
[t=0.0161306s, 26312 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0161398s, 26312 KB] g=11, 31 evaluated, 30 expanded
[t=0.0162442s, 26312 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0162542s, 26312 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0162666s, 26312 KB] g=13, 35 evaluated, 34 expanded
[t=0.0162995s, 26312 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.016309s, 26312 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0163177s, 26312 KB] g=14, 36 evaluated, 35 expanded
[t=0.016506s, 26312 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0165162s, 26312 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0165248s, 26312 KB] g=16, 44 evaluated, 43 expanded
[t=0.0165795s, 26312 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0165889s, 26312 KB] g=17, 46 evaluated, 45 expanded
[t=0.0166217s, 26312 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.016631s, 26312 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0166395s, 26312 KB] g=18, 47 evaluated, 46 expanded
[t=0.0170993s, 26312 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0171122s, 26312 KB] g=21, 67 evaluated, 66 expanded
[t=0.0171481s, 26312 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0171586s, 26312 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0171679s, 26312 KB] g=22, 68 evaluated, 67 expanded
[t=0.0173592s, 26312 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0173726s, 26312 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0173813s, 26312 KB] g=24, 76 evaluated, 75 expanded
[t=0.0175173s, 26312 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0175278s, 26312 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0175371s, 26312 KB] g=26, 82 evaluated, 81 expanded
[t=0.0178161s, 26312 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0178267s, 26312 KB] g=29, 94 evaluated, 93 expanded
[t=0.0182365s, 26312 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0182476s, 26312 KB] g=32, 113 evaluated, 112 expanded
[t=0.0184699s, 26312 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0184802s, 26312 KB] g=35, 123 evaluated, 122 expanded
[t=0.0185126s, 26312 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0185225s, 26312 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0185317s, 26312 KB] g=36, 124 evaluated, 123 expanded
[t=0.0187178s, 26312 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0187278s, 26312 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0187369s, 26312 KB] g=38, 132 evaluated, 131 expanded
[t=0.0188951s, 26312 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0189053s, 26312 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0189141s, 26312 KB] g=40, 139 evaluated, 138 expanded
[t=0.0190711s, 26312 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0190827s, 26312 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0190951s, 26312 KB] g=42, 146 evaluated, 145 expanded
[t=0.0192288s, 26312 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0192392s, 26312 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0192483s, 26312 KB] g=44, 152 evaluated, 151 expanded
[t=0.0193604s, 26312 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0193703s, 26312 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0193794s, 26312 KB] g=46, 157 evaluated, 156 expanded
[t=0.0197135s, 26312 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0197248s, 26312 KB] g=50, 173 evaluated, 172 expanded
[t=0.0197986s, 26312 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0198084s, 26312 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0198174s, 26312 KB] g=52, 176 evaluated, 175 expanded
[t=0.0201248s, 26312 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0201403s, 26312 KB] g=54, 189 evaluated, 188 expanded
[t=0.0202172s, 26312 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0202274s, 26312 KB] g=56, 192 evaluated, 191 expanded
[t=0.0203405s, 26312 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0203504s, 26312 KB] g=60, 197 evaluated, 196 expanded
[t=0.0204009s, 26312 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0204109s, 26312 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0204195s, 26312 KB] g=62, 199 evaluated, 198 expanded
[t=0.0214259s, 26312 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0214439s, 26312 KB] g=60, 247 evaluated, 246 expanded
[t=0.0215352s, 26312 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0215451s, 26312 KB] g=62, 251 evaluated, 250 expanded
[t=0.0223174s, 26312 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0223347s, 26312 KB] g=76, 290 evaluated, 289 expanded
[t=0.0223903s, 26312 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0224002s, 26312 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.022409s, 26312 KB] g=78, 293 evaluated, 292 expanded
[t=0.0224711s, 26312 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0224806s, 26312 KB] g=82, 297 evaluated, 296 expanded
[t=0.0224982s, 26312 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.022508s, 26312 KB] g=83, 298 evaluated, 297 expanded
[t=0.0225238s, 26312 KB] Solution found!
[t=0.0225362s, 26312 KB] Actual search time: 0.00736127s
unstack b15 b14 (1)
put-down b15 (1)
unstack b14 b19 (1)
put-down b14 (1)
unstack b19 b9 (1)
put-down b19 (1)
unstack b16 b5 (1)
stack b16 b14 (1)
unstack b5 b1 (1)
stack b5 b16 (1)
unstack b1 b11 (1)
put-down b1 (1)
unstack b11 b20 (1)
put-down b11 (1)
unstack b20 b13 (1)
stack b20 b7 (1)
unstack b13 b12 (1)
put-down b13 (1)
unstack b20 b7 (1)
put-down b20 (1)
unstack b7 b8 (1)
stack b7 b12 (1)
pick-up b15 (1)
stack b15 b8 (1)
pick-up b20 (1)
stack b20 b7 (1)
unstack b15 b8 (1)
put-down b15 (1)
unstack b8 b2 (1)
put-down b8 (1)
pick-up b15 (1)
stack b15 b8 (1)
unstack b2 b4 (1)
put-down b2 (1)
unstack b4 b6 (1)
put-down b4 (1)
unstack b6 b10 (1)
stack b6 b17 (1)
unstack b10 b18 (1)
stack b10 b13 (1)
pick-up b1 (1)
stack b1 b18 (1)
pick-up b2 (1)
stack b2 b4 (1)
pick-up b9 (1)
stack b9 b10 (1)
unstack b15 b8 (1)
put-down b15 (1)
pick-up b8 (1)
stack b8 b6 (1)
pick-up b15 (1)
stack b15 b8 (1)
unstack b5 b16 (1)
put-down b5 (1)
unstack b16 b14 (1)
put-down b16 (1)
pick-up b14 (1)
stack b14 b20 (1)
pick-up b16 (1)
stack b16 b14 (1)
pick-up b5 (1)
stack b5 b16 (1)
unstack b15 b8 (1)
put-down b15 (1)
unstack b8 b6 (1)
put-down b8 (1)
pick-up b15 (1)
stack b15 b8 (1)
unstack b6 b17 (1)
put-down b6 (1)
unstack b17 b3 (1)
put-down b17 (1)
pick-up b3 (1)
stack b3 b5 (1)
pick-up b17 (1)
stack b17 b3 (1)
pick-up b6 (1)
stack b6 b17 (1)
unstack b15 b8 (1)
put-down b15 (1)
pick-up b8 (1)
stack b8 b6 (1)
pick-up b15 (1)
stack b15 b8 (1)
[t=0.0225485s, 26312 KB] Plan length: 84 step(s).
[t=0.0225485s, 26312 KB] Plan cost: 84
[t=0.0225485s, 26312 KB] Expanded 298 state(s).
[t=0.0225485s, 26312 KB] Reopened 0 state(s).
[t=0.0225485s, 26312 KB] Evaluated 299 state(s).
[t=0.0225485s, 26312 KB] Evaluations: 598
[t=0.0225485s, 26312 KB] Generated 2941 state(s).
[t=0.0225485s, 26312 KB] Dead ends: 0 state(s).
[t=0.0225485s, 26312 KB] Number of registered states: 299
[t=0.0225485s, 26312 KB] Int hash set load factor: 299/512 = 0.583984
[t=0.0225485s, 26312 KB] Int hash set resizes: 9
[t=0.0225485s, 26312 KB] Search time: 0.00740857s
[t=0.0225485s, 26312 KB] Total time: 0.0225485s
Solution found.
Peak memory: 26312 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.15s
