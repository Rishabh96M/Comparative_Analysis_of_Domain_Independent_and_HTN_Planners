INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py ../bws_domain/bws_domain_actions.pddl ../bws_domain/problem_size_21/bws_problem_21_6.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.009s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.008s wall-clock]
1472 relevant atoms
987 auxiliary atoms
2459 final queue length
4270 total queue pushes
Completing instantiation... [0.010s CPU, 0.015s wall-clock]
Instantiating: [0.020s CPU, 0.024s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.010s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
22 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.006s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.021s wall-clock]
1302 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
42 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.010s wall-clock]
Reordering and filtering variables...
43 of 43 variables necessary.
22 of 43 mutex groups necessary.
882 of 882 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.005s wall-clock]
Translator variables: 43
Translator derived variables: 0
Translator facts: 506
Translator goal facts: 21
Translator mutex groups: 22
Translator total mutex groups size: 484
Translator operators: 882
Translator axioms: 0
Translator task size: 7606
Translator peak memory: 36456 KB
Writing output... [0.000s CPU, 0.004s wall-clock]
Done! [0.070s CPU, 0.082s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=1.9332e-05s, 24488 KB] reading input...
[t=0.00244653s, 25268 KB] done reading input!
[t=0.00323534s, 25664 KB] Initializing landmark count heuristic...
[t=0.00326919s, 25664 KB] Generating landmark graph...
[t=0.00332366s, 25664 KB] Building a landmark graph with reasonable orders.
[t=0.00337577s, 25664 KB] Initializing Exploration...
[t=0.0036604s, 25852 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0121182s, 26380 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0121921s, 26380 KB] Landmarks generation time: 0.00886936s
[t=0.0122061s, 26380 KB] Discovered 95 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0122246s, 26380 KB] 377 edges
[t=0.0122346s, 26380 KB] approx. reasonable orders
[t=0.0124288s, 26380 KB] approx. obedient reasonable orders
[t=0.0124545s, 26380 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0124632s, 26380 KB] Landmarks generation time: 0.00919064s
[t=0.0124724s, 26380 KB] Discovered 95 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0124801s, 26380 KB] 381 edges
[t=0.0124883s, 26380 KB] Landmark graph generation time: 0.00922604s
[t=0.0124967s, 26380 KB] Landmark graph contains 95 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0125046s, 26380 KB] Landmark graph contains 381 orderings.
[t=0.012839s, 26380 KB] Simplifying 3486 unary operators... done! [2646 unary operators]
[t=0.0137321s, 26380 KB] time to simplify: 0.0009526s
[t=0.0138415s, 26380 KB] Initializing additive heuristic...
[t=0.0138559s, 26380 KB] Initializing FF heuristic...
[t=0.0139105s, 26380 KB] Building successor generator...done!
[t=0.0140892s, 26380 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0140978s, 26380 KB] time for successor generation creation: 0.000146456s
[t=0.0141094s, 26380 KB] Variables: 43
[t=0.0141175s, 26380 KB] FactPairs: 506
[t=0.0141256s, 26380 KB] Bytes per state: 16
[t=0.0142438s, 26380 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0142772s, 26380 KB] 42 initial landmarks, 21 goal landmarks
[t=0.0143238s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0143328s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0143414s, 26380 KB] g=0, 1 evaluated, 0 expanded
[t=0.0143734s, 26380 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0143824s, 26380 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0145488s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0145579s, 26380 KB] g=2, 7 evaluated, 6 expanded
[t=0.0145899s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0145984s, 26380 KB] g=2, 8 evaluated, 7 expanded
[t=0.0147995s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0148084s, 26380 KB] g=4, 17 evaluated, 16 expanded
[t=0.0150374s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0150469s, 26380 KB] g=6, 27 evaluated, 26 expanded
[t=0.0153267s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0153374s, 26380 KB] g=8, 39 evaluated, 38 expanded
[t=0.0155586s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0155699s, 26380 KB] g=10, 48 evaluated, 47 expanded
[t=0.0156898s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0156983s, 26380 KB] g=11, 53 evaluated, 52 expanded
[t=0.0159747s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0159841s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0159918s, 26380 KB] g=14, 65 evaluated, 64 expanded
[t=0.0161937s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0162024s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0162102s, 26380 KB] g=16, 74 evaluated, 73 expanded
[t=0.0164134s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.016429s, 26380 KB] g=19, 83 evaluated, 82 expanded
[t=0.0167003s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0167097s, 26380 KB] g=22, 95 evaluated, 94 expanded
[t=0.016904s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0169131s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0169209s, 26380 KB] g=24, 104 evaluated, 103 expanded
[t=0.0172913s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0173007s, 26380 KB] g=28, 121 evaluated, 120 expanded
[t=0.0174833s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0174921s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0174998s, 26380 KB] g=30, 129 evaluated, 128 expanded
[t=0.0180085s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.018018s, 26380 KB] g=35, 153 evaluated, 152 expanded
[t=0.0180503s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0180591s, 26380 KB] g=36, 154 evaluated, 153 expanded
[t=0.0180913s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0180996s, 26380 KB] g=37, 155 evaluated, 154 expanded
[t=0.0181305s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0181388s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0181462s, 26380 KB] g=38, 156 evaluated, 155 expanded
[t=0.0183682s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.018378s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.018387s, 26380 KB] g=40, 166 evaluated, 165 expanded
[t=0.0185877s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0185971s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.018605s, 26380 KB] g=42, 175 evaluated, 174 expanded
[t=0.0187808s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0187901s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0187979s, 26380 KB] g=44, 183 evaluated, 182 expanded
[t=0.0189111s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.01892s, 26380 KB] g=45, 188 evaluated, 187 expanded
[t=0.0189511s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0189596s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0189672s, 26380 KB] g=46, 189 evaluated, 188 expanded
[t=0.0191221s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0191313s, 26380 KB] g=47, 196 evaluated, 195 expanded
[t=0.0191619s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0191705s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0191781s, 26380 KB] g=48, 197 evaluated, 196 expanded
[t=0.0193755s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0193891s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0193975s, 26380 KB] g=50, 206 evaluated, 205 expanded
[t=0.0198029s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0198133s, 26380 KB] g=54, 224 evaluated, 223 expanded
[t=0.0199722s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.019981s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0199889s, 26380 KB] g=56, 231 evaluated, 230 expanded
[t=0.0207631s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.020773s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0207809s, 26380 KB] g=60, 266 evaluated, 265 expanded
[t=0.0209368s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0209457s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0209534s, 26380 KB] g=62, 273 evaluated, 272 expanded
[t=0.0217134s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0217231s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.021731s, 26380 KB] g=66, 309 evaluated, 308 expanded
[t=0.021867s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0218755s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0218832s, 26380 KB] g=68, 315 evaluated, 314 expanded
[t=0.0224204s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0224298s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0224377s, 26380 KB] g=72, 340 evaluated, 339 expanded
[t=0.022551s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0225597s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0225674s, 26380 KB] g=74, 345 evaluated, 344 expanded
[t=0.0229149s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0229246s, 26380 KB] g=78, 361 evaluated, 360 expanded
[t=0.0230164s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0230253s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.023033s, 26380 KB] g=80, 365 evaluated, 364 expanded
[t=0.0239147s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0239268s, 26380 KB] g=90, 406 evaluated, 405 expanded
[t=0.0240347s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0240437s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0240516s, 26380 KB] g=92, 411 evaluated, 410 expanded
[t=0.0241351s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0241436s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0241513s, 26380 KB] g=94, 415 evaluated, 414 expanded
[t=0.0243174s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0243258s, 26380 KB] g=98, 424 evaluated, 423 expanded
[t=0.0243846s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.024395s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.024403s, 26380 KB] g=100, 427 evaluated, 426 expanded
[t=0.0246718s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0246813s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.024689s, 26380 KB] g=112, 445 evaluated, 444 expanded
[t=0.0247448s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0247533s, 26380 KB] g=116, 449 evaluated, 448 expanded
[t=0.0247695s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0247775s, 26380 KB] g=117, 450 evaluated, 449 expanded
[t=0.024791s, 26380 KB] Solution found!
[t=0.0248009s, 26380 KB] Actual search time: 0.0105197s
pick-up b16 (1)
stack b16 b1 (1)
unstack b18 b3 (1)
put-down b18 (1)
unstack b21 b9 (1)
put-down b21 (1)
unstack b3 b4 (1)
put-down b3 (1)
unstack b4 b20 (1)
put-down b4 (1)
unstack b20 b6 (1)
put-down b20 (1)
unstack b6 b17 (1)
stack b6 b9 (1)
pick-up b17 (1)
stack b17 b5 (1)
unstack b16 b1 (1)
put-down b16 (1)
unstack b1 b11 (1)
put-down b1 (1)
pick-up b20 (1)
stack b20 b11 (1)
pick-up b16 (1)
stack b16 b1 (1)
unstack b20 b11 (1)
put-down b20 (1)
pick-up b11 (1)
stack b11 b6 (1)
pick-up b20 (1)
stack b20 b11 (1)
unstack b17 b5 (1)
put-down b17 (1)
unstack b5 b14 (1)
put-down b5 (1)
unstack b14 b12 (1)
put-down b14 (1)
unstack b12 b15 (1)
put-down b12 (1)
unstack b15 b19 (1)
stack b15 b21 (1)
pick-up b17 (1)
stack b17 b5 (1)
unstack b19 b2 (1)
stack b19 b4 (1)
unstack b2 b7 (1)
stack b2 b18 (1)
unstack b7 b13 (1)
put-down b7 (1)
pick-up b13 (1)
stack b13 b3 (1)
unstack b16 b1 (1)
put-down b16 (1)
pick-up b1 (1)
stack b1 b13 (1)
pick-up b16 (1)
stack b16 b1 (1)
unstack b15 b21 (1)
put-down b15 (1)
pick-up b21 (1)
stack b21 b7 (1)
pick-up b15 (1)
stack b15 b21 (1)
unstack b19 b4 (1)
put-down b19 (1)
pick-up b4 (1)
stack b4 b15 (1)
pick-up b19 (1)
stack b19 b4 (1)
unstack b2 b18 (1)
put-down b2 (1)
pick-up b18 (1)
stack b18 b12 (1)
pick-up b2 (1)
stack b2 b18 (1)
unstack b17 b5 (1)
put-down b17 (1)
pick-up b5 (1)
stack b5 b14 (1)
pick-up b17 (1)
stack b17 b5 (1)
unstack b20 b11 (1)
put-down b20 (1)
unstack b11 b6 (1)
put-down b11 (1)
pick-up b20 (1)
stack b20 b11 (1)
unstack b6 b9 (1)
put-down b6 (1)
unstack b9 b8 (1)
stack b9 b17 (1)
pick-up b6 (1)
stack b6 b9 (1)
unstack b8 b10 (1)
stack b8 b19 (1)
unstack b20 b11 (1)
put-down b20 (1)
pick-up b11 (1)
stack b11 b6 (1)
pick-up b20 (1)
stack b20 b11 (1)
unstack b16 b1 (1)
put-down b16 (1)
unstack b1 b13 (1)
put-down b1 (1)
pick-up b16 (1)
stack b16 b1 (1)
unstack b13 b3 (1)
put-down b13 (1)
pick-up b3 (1)
stack b3 b8 (1)
pick-up b13 (1)
stack b13 b3 (1)
unstack b16 b1 (1)
put-down b16 (1)
pick-up b1 (1)
stack b1 b13 (1)
pick-up b16 (1)
stack b16 b1 (1)
[t=0.0248094s, 26380 KB] Plan length: 118 step(s).
[t=0.0248094s, 26380 KB] Plan cost: 118
[t=0.0248094s, 26380 KB] Expanded 450 state(s).
[t=0.0248094s, 26380 KB] Reopened 0 state(s).
[t=0.0248094s, 26380 KB] Evaluated 451 state(s).
[t=0.0248094s, 26380 KB] Evaluations: 902
[t=0.0248094s, 26380 KB] Generated 3903 state(s).
[t=0.0248094s, 26380 KB] Dead ends: 0 state(s).
[t=0.0248094s, 26380 KB] Number of registered states: 451
[t=0.0248094s, 26380 KB] Int hash set load factor: 451/512 = 0.880859
[t=0.0248094s, 26380 KB] Int hash set resizes: 9
[t=0.0248094s, 26380 KB] Search time: 0.0105746s
[t=0.0248094s, 26380 KB] Total time: 0.0248094s
Solution found.
Peak memory: 26380 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.14s
