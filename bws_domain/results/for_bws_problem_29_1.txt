INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py ../bws_domain/bws_domain_actions.pddl ../bws_domain/problem_size_29/bws_problem_29_1.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.009s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.000s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.015s wall-clock]
2728 relevant atoms
1827 auxiliary atoms
4555 final queue length
7985 total queue pushes
Completing instantiation... [0.030s CPU, 0.026s wall-clock]
Instantiating: [0.040s CPU, 0.043s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
30 uncovered facts
Choosing groups: [0.000s CPU, 0.002s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.009s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.001s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.001s wall-clock]
Translating task: [0.050s CPU, 0.043s wall-clock]
2494 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
58 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.018s wall-clock]
Reordering and filtering variables...
59 of 59 variables necessary.
30 of 59 mutex groups necessary.
1682 of 1682 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.010s wall-clock]
Translator variables: 59
Translator derived variables: 0
Translator facts: 930
Translator goal facts: 29
Translator mutex groups: 30
Translator total mutex groups size: 900
Translator operators: 1682
Translator axioms: 0
Translator task size: 14446
Translator peak memory: 40820 KB
Writing output... [0.010s CPU, 0.008s wall-clock]
Done! [0.140s CPU, 0.143s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.297e-05s, 24488 KB] reading input...
[t=0.00480498s, 26220 KB] done reading input!
[t=0.00562936s, 26616 KB] Initializing landmark count heuristic...
[t=0.00566237s, 26616 KB] Generating landmark graph...
[t=0.00575s, 26748 KB] Building a landmark graph with reasonable orders.
[t=0.00583153s, 26748 KB] Initializing Exploration...
[t=0.00630483s, 27200 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0282972s, 27860 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0283808s, 27860 KB] Landmarks generation time: 0.0226376s
[t=0.0284007s, 27860 KB] Discovered 130 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0284166s, 27860 KB] 428 edges
[t=0.0284261s, 27860 KB] approx. reasonable orders
[t=0.029785s, 27860 KB] approx. obedient reasonable orders
[t=0.0298188s, 27860 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0298289s, 27860 KB] Landmarks generation time: 0.0241629s
[t=0.0298385s, 27860 KB] Discovered 130 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0298462s, 27860 KB] 446 edges
[t=0.0298543s, 27860 KB] Landmark graph generation time: 0.024199s
[t=0.0298629s, 27860 KB] Landmark graph contains 130 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0298707s, 27860 KB] Landmark graph contains 446 orderings.
[t=0.0303816s, 27884 KB] Simplifying 6670 unary operators... done! [5046 unary operators]
[t=0.0322315s, 28016 KB] time to simplify: 0.0019562s
[t=0.0324291s, 28016 KB] Initializing additive heuristic...
[t=0.0324477s, 28016 KB] Initializing FF heuristic...
[t=0.0325194s, 28016 KB] Building successor generator...done!
[t=0.0328034s, 28016 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0328122s, 28016 KB] time for successor generation creation: 0.000248166s
[t=0.0328253s, 28016 KB] Variables: 59
[t=0.0328334s, 28016 KB] FactPairs: 930
[t=0.0328412s, 28016 KB] Bytes per state: 24
[t=0.0329214s, 28016 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0329536s, 28016 KB] 59 initial landmarks, 29 goal landmarks
[t=0.0330164s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 71
[t=0.0330257s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 51
[t=0.033034s, 28016 KB] g=0, 1 evaluated, 0 expanded
[t=0.0330488s, 28016 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 71
[t=0.0330577s, 28016 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 51
[t=0.0333797s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 50
[t=0.0333901s, 28016 KB] g=1, 9 evaluated, 8 expanded
[t=0.0334409s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 68
[t=0.0334504s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 49
[t=0.0334588s, 28016 KB] g=2, 10 evaluated, 9 expanded
[t=0.0337651s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 67
[t=0.0337753s, 28016 KB] g=4, 18 evaluated, 17 expanded
[t=0.0339008s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 66
[t=0.0339095s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 48
[t=0.0339172s, 28016 KB] g=4, 21 evaluated, 20 expanded
[t=0.034196s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 65
[t=0.0342124s, 28016 KB] g=6, 28 evaluated, 27 expanded
[t=0.0343016s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 64
[t=0.0343112s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 47
[t=0.0343194s, 28016 KB] g=6, 30 evaluated, 29 expanded
[t=0.0346071s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 63
[t=0.034617s, 28016 KB] g=8, 37 evaluated, 36 expanded
[t=0.0346696s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 62
[t=0.0346787s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0346871s, 28016 KB] g=8, 38 evaluated, 37 expanded
[t=0.0349671s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 61
[t=0.0349823s, 28016 KB] g=10, 45 evaluated, 44 expanded
[t=0.0351125s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 60
[t=0.0351219s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.03513s, 28016 KB] g=10, 48 evaluated, 47 expanded
[t=0.0353831s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.0353945s, 28016 KB] g=12, 54 evaluated, 53 expanded
[t=0.035733s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0357447s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0357528s, 28016 KB] g=14, 62 evaluated, 61 expanded
[t=0.0358027s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0358116s, 28016 KB] g=15, 63 evaluated, 62 expanded
[t=0.0358601s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0358687s, 28016 KB] g=16, 64 evaluated, 63 expanded
[t=0.0365032s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0365134s, 28016 KB] g=19, 80 evaluated, 79 expanded
[t=0.0370158s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0370259s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0370352s, 28016 KB] g=20, 93 evaluated, 92 expanded
[t=0.0370832s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0370925s, 28016 KB] g=21, 94 evaluated, 93 expanded
[t=0.037709s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.037728s, 28016 KB] g=24, 109 evaluated, 108 expanded
[t=0.0381613s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.038171s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.03818s, 28016 KB] g=26, 120 evaluated, 119 expanded
[t=0.0385738s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0385838s, 28016 KB] g=28, 130 evaluated, 129 expanded
[t=0.038671s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0386803s, 28016 KB] g=28, 132 evaluated, 131 expanded
[t=0.0392533s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.039263s, 28016 KB] g=30, 147 evaluated, 146 expanded
[t=0.0393515s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0393604s, 28016 KB] g=30, 149 evaluated, 148 expanded
[t=0.0399207s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0399321s, 28016 KB] g=32, 163 evaluated, 162 expanded
[t=0.0399788s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0399875s, 28016 KB] g=31, 164 evaluated, 163 expanded
[t=0.0406309s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0406406s, 28016 KB] g=35, 181 evaluated, 180 expanded
[t=0.0412006s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0412101s, 28016 KB] g=37, 196 evaluated, 195 expanded
[t=0.0424299s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0424409s, 28016 KB] g=41, 228 evaluated, 227 expanded
[t=0.0424917s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0425009s, 28016 KB] g=42, 229 evaluated, 228 expanded
[t=0.0430279s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0430374s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0430451s, 28016 KB] g=44, 243 evaluated, 242 expanded
[t=0.0434455s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0434558s, 28016 KB] g=46, 254 evaluated, 253 expanded
[t=0.0435462s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0435785s, 28016 KB] g=46, 256 evaluated, 255 expanded
[t=0.0442116s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0442258s, 28016 KB] g=48, 272 evaluated, 271 expanded
[t=0.0444171s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0444262s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0444343s, 28016 KB] g=48, 277 evaluated, 276 expanded
[t=0.044766s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0447762s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0447866s, 28016 KB] g=50, 286 evaluated, 285 expanded
[t=0.0450945s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.045105s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0451135s, 28016 KB] g=52, 294 evaluated, 293 expanded
[t=0.0471127s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0471226s, 28016 KB] g=58, 349 evaluated, 348 expanded
[t=0.0475026s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0475216s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0475438s, 28016 KB] g=60, 357 evaluated, 356 expanded
[t=0.0479903s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0480145s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0480247s, 28016 KB] g=62, 364 evaluated, 363 expanded
[t=0.051198s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0512084s, 28016 KB] g=72, 453 evaluated, 452 expanded
[t=0.051478s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0514887s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.051497s, 28016 KB] g=74, 460 evaluated, 459 expanded
[t=0.0517558s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0517651s, 28016 KB] g=75, 467 evaluated, 466 expanded
[t=0.0518126s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0518212s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0518292s, 28016 KB] g=76, 468 evaluated, 467 expanded
[t=0.0520871s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0521s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0521085s, 28016 KB] g=78, 475 evaluated, 474 expanded
[t=0.0523618s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0523712s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0523792s, 28016 KB] g=80, 482 evaluated, 481 expanded
[t=0.0525923s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0526013s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0526097s, 28016 KB] g=82, 488 evaluated, 487 expanded
[t=0.0530029s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0530123s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0530211s, 28016 KB] g=86, 499 evaluated, 498 expanded
[t=0.0532049s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0532138s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0532217s, 28016 KB] g=88, 504 evaluated, 503 expanded
[t=0.0538851s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0539017s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0539137s, 28016 KB] g=94, 522 evaluated, 521 expanded
[t=0.0591205s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.059134s, 28016 KB] g=110, 681 evaluated, 680 expanded
[t=0.05934s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0593523s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0593612s, 28016 KB] g=112, 687 evaluated, 686 expanded
[t=0.0595234s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0595329s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0595411s, 28016 KB] g=114, 692 evaluated, 691 expanded
[t=0.0598524s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0598625s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.059872s, 28016 KB] g=118, 703 evaluated, 702 expanded
[t=0.0599894s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0599985s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0600067s, 28016 KB] g=120, 707 evaluated, 706 expanded
[t=0.060241s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0602504s, 28016 KB] g=124, 716 evaluated, 715 expanded
[t=0.0603354s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0603445s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0603534s, 28016 KB] g=126, 719 evaluated, 718 expanded
[t=0.0607083s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0607178s, 28016 KB] g=138, 736 evaluated, 735 expanded
[t=0.0607927s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0608021s, 28016 KB] g=142, 740 evaluated, 739 expanded
[t=0.0608213s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0608337s, 28016 KB] g=143, 741 evaluated, 740 expanded
[t=0.0608511s, 28016 KB] Solution found!
[t=0.0608628s, 28016 KB] Actual search time: 0.0279069s
unstack b4 b18 (1)
put-down b4 (1)
unstack b19 b15 (1)
stack b19 b11 (1)
unstack b22 b20 (1)
stack b22 b15 (1)
pick-up b20 (1)
stack b20 b4 (1)
unstack b29 b13 (1)
stack b29 b28 (1)
unstack b13 b10 (1)
put-down b13 (1)
unstack b10 b1 (1)
stack b10 b19 (1)
unstack b1 b25 (1)
stack b1 b16 (1)
unstack b25 b9 (1)
put-down b25 (1)
unstack b9 b14 (1)
stack b9 b10 (1)
unstack b1 b16 (1)
put-down b1 (1)
unstack b16 b26 (1)
put-down b16 (1)
unstack b26 b23 (1)
stack b26 b14 (1)
unstack b23 b12 (1)
stack b23 b22 (1)
pick-up b1 (1)
stack b1 b16 (1)
pick-up b25 (1)
stack b25 b26 (1)
unstack b12 b5 (1)
put-down b12 (1)
unstack b1 b16 (1)
put-down b1 (1)
unstack b5 b8 (1)
put-down b5 (1)
unstack b24 b21 (1)
put-down b24 (1)
unstack b21 b17 (1)
stack b21 b29 (1)
unstack b17 b27 (1)
stack b17 b8 (1)
pick-up b5 (1)
stack b5 b27 (1)
pick-up b16 (1)
stack b16 b17 (1)
pick-up b1 (1)
stack b1 b16 (1)
pick-up b24 (1)
stack b24 b21 (1)
unstack b23 b22 (1)
put-down b23 (1)
unstack b22 b15 (1)
put-down b22 (1)
pick-up b15 (1)
stack b15 b25 (1)
pick-up b22 (1)
stack b22 b15 (1)
pick-up b23 (1)
stack b23 b22 (1)
unstack b24 b21 (1)
put-down b24 (1)
unstack b21 b29 (1)
put-down b21 (1)
pick-up b24 (1)
stack b24 b21 (1)
unstack b29 b28 (1)
put-down b29 (1)
unstack b28 b3 (1)
stack b28 b9 (1)
unstack b3 b6 (1)
stack b3 b23 (1)
unstack b6 b2 (1)
stack b6 b12 (1)
pick-up b13 (1)
stack b13 b3 (1)
pick-up b2 (1)
stack b2 b18 (1)
pick-up b29 (1)
stack b29 b28 (1)
unstack b5 b27 (1)
put-down b5 (1)
pick-up b27 (1)
stack b27 b2 (1)
pick-up b5 (1)
stack b5 b27 (1)
unstack b29 b28 (1)
put-down b29 (1)
unstack b28 b9 (1)
put-down b28 (1)
pick-up b29 (1)
stack b29 b28 (1)
unstack b24 b21 (1)
put-down b24 (1)
pick-up b21 (1)
stack b21 b29 (1)
pick-up b24 (1)
stack b24 b21 (1)
unstack b9 b10 (1)
put-down b9 (1)
unstack b10 b19 (1)
put-down b10 (1)
pick-up b9 (1)
stack b9 b10 (1)
unstack b19 b11 (1)
put-down b19 (1)
unstack b11 b7 (1)
stack b11 b20 (1)
pick-up b19 (1)
stack b19 b11 (1)
pick-up b7 (1)
stack b7 b13 (1)
unstack b6 b12 (1)
put-down b6 (1)
pick-up b12 (1)
stack b12 b7 (1)
pick-up b6 (1)
stack b6 b12 (1)
unstack b9 b10 (1)
put-down b9 (1)
pick-up b10 (1)
stack b10 b19 (1)
pick-up b9 (1)
stack b9 b10 (1)
unstack b24 b21 (1)
put-down b24 (1)
unstack b21 b29 (1)
put-down b21 (1)
pick-up b24 (1)
stack b24 b21 (1)
unstack b29 b28 (1)
put-down b29 (1)
pick-up b28 (1)
stack b28 b9 (1)
pick-up b29 (1)
stack b29 b28 (1)
unstack b24 b21 (1)
put-down b24 (1)
pick-up b21 (1)
stack b21 b29 (1)
pick-up b24 (1)
stack b24 b21 (1)
[t=0.0608723s, 28016 KB] Plan length: 144 step(s).
[t=0.0608723s, 28016 KB] Plan cost: 144
[t=0.0608723s, 28016 KB] Expanded 741 state(s).
[t=0.0608723s, 28016 KB] Reopened 0 state(s).
[t=0.0608723s, 28016 KB] Evaluated 742 state(s).
[t=0.0608723s, 28016 KB] Evaluations: 1484
[t=0.0608723s, 28016 KB] Generated 7797 state(s).
[t=0.0608723s, 28016 KB] Dead ends: 0 state(s).
[t=0.0608723s, 28016 KB] Number of registered states: 742
[t=0.0608723s, 28016 KB] Int hash set load factor: 742/1024 = 0.724609
[t=0.0608723s, 28016 KB] Int hash set resizes: 10
[t=0.0608723s, 28016 KB] Search time: 0.0279514s
[t=0.0608723s, 28016 KB] Total time: 0.0608723s
Solution found.
Peak memory: 28016 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.23s
