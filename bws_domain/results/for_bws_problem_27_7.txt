INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py ../bws_domain/bws_domain_actions.pddl ../bws_domain/problem_size_27/bws_problem_27_7.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.016s wall-clock]
2378 relevant atoms
1593 auxiliary atoms
3971 final queue length
6946 total queue pushes
Completing instantiation... [0.020s CPU, 0.025s wall-clock]
Instantiating: [0.050s CPU, 0.042s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.003s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.010s CPU, 0.002s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
28 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.011s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.001s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.002s wall-clock]
Translating task: [0.050s CPU, 0.042s wall-clock]
2160 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
54 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.018s wall-clock]
Reordering and filtering variables...
55 of 55 variables necessary.
28 of 55 mutex groups necessary.
1458 of 1458 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.010s wall-clock]
Translator variables: 55
Translator derived variables: 0
Translator facts: 812
Translator goal facts: 27
Translator mutex groups: 28
Translator total mutex groups size: 784
Translator operators: 1458
Translator axioms: 0
Translator task size: 12532
Translator peak memory: 39412 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.140s CPU, 0.138s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.7601e-05s, 24488 KB] reading input...
[t=0.0042212s, 25936 KB] done reading input!
[t=0.0051243s, 26332 KB] Initializing landmark count heuristic...
[t=0.00515602s, 26332 KB] Generating landmark graph...
[t=0.00524526s, 26332 KB] Building a landmark graph with reasonable orders.
[t=0.00532365s, 26464 KB] Initializing Exploration...
[t=0.00572858s, 26732 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0263431s, 27524 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0264702s, 27524 KB] Landmarks generation time: 0.0212362s
[t=0.0264953s, 27524 KB] Discovered 127 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0265167s, 27524 KB] 729 edges
[t=0.0265275s, 27524 KB] approx. reasonable orders
[t=0.0284517s, 27524 KB] approx. obedient reasonable orders
[t=0.0285044s, 27524 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0285145s, 27524 KB] Landmarks generation time: 0.0233569s
[t=0.0285256s, 27524 KB] Discovered 127 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0285344s, 27524 KB] 748 edges
[t=0.0285436s, 27524 KB] Landmark graph generation time: 0.023395s
[t=0.0285528s, 27524 KB] Landmark graph contains 127 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.028562s, 27524 KB] Landmark graph contains 748 orderings.
[t=0.0290898s, 27556 KB] Simplifying 5778 unary operators... done! [4374 unary operators]
[t=0.0305286s, 27556 KB] time to simplify: 0.00153469s
[t=0.0307076s, 27556 KB] Initializing additive heuristic...
[t=0.0307267s, 27556 KB] Initializing FF heuristic...
[t=0.0307843s, 27556 KB] Building successor generator...done!
[t=0.031038s, 27556 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0310471s, 27556 KB] time for successor generation creation: 0.000216036s
[t=0.0310614s, 27556 KB] Variables: 55
[t=0.0310703s, 27556 KB] FactPairs: 812
[t=0.0310797s, 27556 KB] Bytes per state: 24
[t=0.03119s, 27556 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0312268s, 27556 KB] 55 initial landmarks, 27 goal landmarks
[t=0.0312971s, 27556 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 72
[t=0.0313068s, 27556 KB] New best heuristic value for ff(transform = adapt_costs(one)): 52
[t=0.0313155s, 27556 KB] g=0, 1 evaluated, 0 expanded
[t=0.0313304s, 27556 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 72
[t=0.0313399s, 27556 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 52
[t=0.0316494s, 27556 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 71
[t=0.0316618s, 27556 KB] g=2, 9 evaluated, 8 expanded
[t=0.0317198s, 27556 KB] New best heuristic value for ff(transform = adapt_costs(one)): 51
[t=0.0317318s, 27556 KB] g=3, 10 evaluated, 9 expanded
[t=0.0317777s, 27556 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 68
[t=0.0317873s, 27556 KB] New best heuristic value for ff(transform = adapt_costs(one)): 50
[t=0.0317959s, 27556 KB] g=4, 11 evaluated, 10 expanded
[t=0.0320529s, 27556 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 65
[t=0.0320631s, 27556 KB] New best heuristic value for ff(transform = adapt_costs(one)): 48
[t=0.0320729s, 27556 KB] g=6, 18 evaluated, 17 expanded
[t=0.0323333s, 27556 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 62
[t=0.0323448s, 27556 KB] New best heuristic value for ff(transform = adapt_costs(one)): 46
[t=0.0323534s, 27556 KB] g=8, 25 evaluated, 24 expanded
[t=0.0326271s, 27556 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 61
[t=0.032638s, 27556 KB] g=10, 32 evaluated, 31 expanded
[t=0.0327928s, 27556 KB] New best heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0328019s, 27556 KB] g=10, 36 evaluated, 35 expanded
[t=0.0330571s, 27556 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 60
[t=0.0330665s, 27556 KB] g=12, 43 evaluated, 42 expanded
[t=0.0333971s, 27556 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.0334072s, 27556 KB] g=14, 52 evaluated, 51 expanded
[t=0.033883s, 27556 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 58
[t=0.0338934s, 27556 KB] g=16, 65 evaluated, 64 expanded
[t=0.0345462s, 27556 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 57
[t=0.034558s, 27556 KB] g=16, 83 evaluated, 82 expanded
[t=0.0348099s, 27556 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0348198s, 27556 KB] g=18, 90 evaluated, 89 expanded
[t=0.03497s, 27556 KB] New best heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.0349797s, 27556 KB] g=18, 94 evaluated, 93 expanded
[t=0.0353697s, 27556 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.03538s, 27556 KB] g=20, 105 evaluated, 104 expanded
[t=0.0355351s, 27556 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0355446s, 27556 KB] g=21, 109 evaluated, 108 expanded
[t=0.035592s, 27556 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0356012s, 27556 KB] g=22, 110 evaluated, 109 expanded
[t=0.0357657s, 27556 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.035777s, 27556 KB] g=23, 114 evaluated, 113 expanded
[t=0.0358251s, 27556 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0358344s, 27556 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0358428s, 27556 KB] g=24, 115 evaluated, 114 expanded
[t=0.0362452s, 27556 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0362548s, 27556 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0362634s, 27556 KB] g=26, 126 evaluated, 125 expanded
[t=0.0366445s, 27556 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0366545s, 27556 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0366632s, 27556 KB] g=28, 136 evaluated, 135 expanded
[t=0.0370651s, 27556 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0370745s, 27556 KB] g=31, 147 evaluated, 146 expanded
[t=0.0377589s, 27556 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0377698s, 27556 KB] g=35, 166 evaluated, 165 expanded
[t=0.0378178s, 27556 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.037827s, 27556 KB] g=34, 167 evaluated, 166 expanded
[t=0.0378749s, 27556 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0378839s, 27556 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0378924s, 27556 KB] g=36, 168 evaluated, 167 expanded
[t=0.0382993s, 27556 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0383091s, 27556 KB] g=38, 179 evaluated, 178 expanded
[t=0.0383574s, 27556 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0383667s, 27556 KB] g=38, 180 evaluated, 179 expanded
[t=0.0390549s, 27556 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0390645s, 27556 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.039074s, 27556 KB] g=40, 199 evaluated, 198 expanded
[t=0.0394167s, 27556 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0394318s, 27556 KB] g=42, 208 evaluated, 207 expanded
[t=0.0394843s, 27556 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0394941s, 27556 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.039503s, 27556 KB] g=42, 209 evaluated, 208 expanded
[t=0.0398517s, 27556 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0398631s, 27556 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0398718s, 27556 KB] g=44, 218 evaluated, 217 expanded
[t=0.0401685s, 27556 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0401792s, 27556 KB] g=45, 226 evaluated, 225 expanded
[t=0.0402263s, 27556 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0402356s, 27556 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0402439s, 27556 KB] g=46, 227 evaluated, 226 expanded
[t=0.0406092s, 27556 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0406227s, 27556 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0406311s, 27556 KB] g=48, 237 evaluated, 236 expanded
[t=0.0409552s, 27556 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0409666s, 27556 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.040975s, 27556 KB] g=50, 246 evaluated, 245 expanded
[t=0.041235s, 27556 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0412452s, 27556 KB] g=52, 253 evaluated, 252 expanded
[t=0.0412922s, 27556 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0413018s, 27556 KB] g=52, 254 evaluated, 253 expanded
[t=0.0418125s, 27556 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0418233s, 27556 KB] g=54, 268 evaluated, 267 expanded
[t=0.0422301s, 27556 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0422415s, 27556 KB] g=56, 279 evaluated, 278 expanded
[t=0.0427105s, 27556 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0427231s, 27556 KB] g=58, 292 evaluated, 291 expanded
[t=0.0430184s, 27556 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0430298s, 27556 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0430383s, 27556 KB] g=60, 300 evaluated, 299 expanded
[t=0.0432986s, 27556 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0433084s, 27556 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0433171s, 27556 KB] g=62, 307 evaluated, 306 expanded
[t=0.0443837s, 27556 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0444018s, 27556 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0444111s, 27556 KB] g=66, 337 evaluated, 336 expanded
[t=0.0446304s, 27556 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0446425s, 27556 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0446513s, 27556 KB] g=68, 343 evaluated, 342 expanded
[t=0.0458375s, 27556 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0458574s, 27556 KB] g=76, 378 evaluated, 377 expanded
[t=0.0460939s, 27556 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.046106s, 27556 KB] g=78, 385 evaluated, 384 expanded
[t=0.0463576s, 27556 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0463723s, 27556 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0463812s, 27556 KB] g=80, 393 evaluated, 392 expanded
[t=0.0465821s, 27556 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0465943s, 27556 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.046603s, 27556 KB] g=82, 399 evaluated, 398 expanded
[t=0.04677s, 27556 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0467835s, 27556 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0467923s, 27556 KB] g=84, 404 evaluated, 403 expanded
[t=0.0469275s, 27556 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.046938s, 27556 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0469463s, 27556 KB] g=86, 408 evaluated, 407 expanded
[t=0.0475358s, 27556 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0475466s, 27556 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0475565s, 27556 KB] g=92, 427 evaluated, 426 expanded
[t=0.0484086s, 27556 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0484228s, 27556 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0484314s, 27556 KB] g=104, 452 evaluated, 451 expanded
[t=0.0487178s, 27556 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0487285s, 27556 KB] g=108, 461 evaluated, 460 expanded
[t=0.0488271s, 27556 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0488374s, 27556 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0488458s, 27556 KB] g=110, 464 evaluated, 463 expanded
[t=0.0502583s, 27556 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0502695s, 27556 KB] g=128, 519 evaluated, 518 expanded
[t=0.0503446s, 27556 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0503541s, 27556 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0503626s, 27556 KB] g=130, 522 evaluated, 521 expanded
[t=0.0505975s, 27556 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0506069s, 27556 KB] g=138, 534 evaluated, 533 expanded
[t=0.0506348s, 27556 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0506443s, 27556 KB] g=138, 535 evaluated, 534 expanded
[t=0.0506668s, 27556 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0506777s, 27556 KB] g=139, 536 evaluated, 535 expanded
[t=0.0506949s, 27556 KB] Solution found!
[t=0.0507065s, 27556 KB] Actual search time: 0.0194763s
unstack b26 b11 (1)
put-down b26 (1)
unstack b11 b5 (1)
put-down b11 (1)
unstack b27 b9 (1)
stack b27 b11 (1)
unstack b9 b10 (1)
stack b9 b27 (1)
unstack b10 b2 (1)
put-down b10 (1)
pick-up b6 (1)
stack b6 b10 (1)
unstack b2 b4 (1)
put-down b2 (1)
unstack b4 b14 (1)
put-down b4 (1)
unstack b14 b3 (1)
put-down b14 (1)
unstack b3 b20 (1)
put-down b3 (1)
unstack b20 b21 (1)
stack b20 b26 (1)
unstack b21 b16 (1)
put-down b21 (1)
pick-up b19 (1)
stack b19 b21 (1)
pick-up b5 (1)
stack b5 b16 (1)
unstack b8 b15 (1)
put-down b8 (1)
unstack b15 b13 (1)
put-down b15 (1)
unstack b13 b12 (1)
stack b13 b4 (1)
unstack b12 b23 (1)
put-down b12 (1)
pick-up b14 (1)
stack b14 b13 (1)
unstack b23 b17 (1)
stack b23 b2 (1)
unstack b17 b1 (1)
stack b17 b6 (1)
unstack b1 b7 (1)
stack b1 b12 (1)
unstack b7 b18 (1)
put-down b7 (1)
pick-up b15 (1)
stack b15 b7 (1)
pick-up b18 (1)
stack b18 b5 (1)
pick-up b8 (1)
stack b8 b15 (1)
unstack b14 b13 (1)
put-down b14 (1)
unstack b13 b4 (1)
put-down b13 (1)
pick-up b4 (1)
stack b4 b1 (1)
pick-up b13 (1)
stack b13 b4 (1)
pick-up b14 (1)
stack b14 b13 (1)
unstack b20 b26 (1)
put-down b20 (1)
pick-up b26 (1)
stack b26 b14 (1)
pick-up b20 (1)
stack b20 b26 (1)
unstack b18 b5 (1)
put-down b18 (1)
unstack b5 b16 (1)
put-down b5 (1)
unstack b16 b24 (1)
put-down b16 (1)
unstack b24 b22 (1)
stack b24 b23 (1)
unstack b22 b25 (1)
stack b22 b9 (1)
pick-up b16 (1)
stack b16 b24 (1)
pick-up b25 (1)
stack b25 b17 (1)
pick-up b18 (1)
stack b18 b5 (1)
pick-up b3 (1)
stack b3 b22 (1)
unstack b18 b5 (1)
put-down b18 (1)
pick-up b5 (1)
stack b5 b16 (1)
pick-up b18 (1)
stack b18 b5 (1)
unstack b25 b17 (1)
put-down b25 (1)
unstack b17 b6 (1)
put-down b17 (1)
pick-up b25 (1)
stack b25 b17 (1)
unstack b6 b10 (1)
put-down b6 (1)
pick-up b10 (1)
stack b10 b3 (1)
pick-up b6 (1)
stack b6 b10 (1)
unstack b25 b17 (1)
put-down b25 (1)
pick-up b17 (1)
stack b17 b6 (1)
pick-up b25 (1)
stack b25 b17 (1)
unstack b18 b5 (1)
put-down b18 (1)
unstack b5 b16 (1)
put-down b5 (1)
unstack b16 b24 (1)
put-down b16 (1)
pick-up b5 (1)
stack b5 b16 (1)
pick-up b18 (1)
stack b18 b5 (1)
unstack b24 b23 (1)
put-down b24 (1)
unstack b23 b2 (1)
put-down b23 (1)
pick-up b2 (1)
stack b2 b25 (1)
pick-up b23 (1)
stack b23 b2 (1)
pick-up b24 (1)
stack b24 b23 (1)
unstack b18 b5 (1)
put-down b18 (1)
unstack b5 b16 (1)
put-down b5 (1)
pick-up b16 (1)
stack b16 b24 (1)
pick-up b5 (1)
stack b5 b16 (1)
pick-up b18 (1)
stack b18 b5 (1)
[t=0.0507161s, 27556 KB] Plan length: 140 step(s).
[t=0.0507161s, 27556 KB] Plan cost: 140
[t=0.0507161s, 27556 KB] Expanded 536 state(s).
[t=0.0507161s, 27556 KB] Reopened 0 state(s).
[t=0.0507161s, 27556 KB] Evaluated 537 state(s).
[t=0.0507161s, 27556 KB] Evaluations: 1074
[t=0.0507161s, 27556 KB] Generated 5333 state(s).
[t=0.0507161s, 27556 KB] Dead ends: 0 state(s).
[t=0.0507161s, 27556 KB] Number of registered states: 537
[t=0.0507161s, 27556 KB] Int hash set load factor: 537/1024 = 0.524414
[t=0.0507161s, 27556 KB] Int hash set resizes: 10
[t=0.0507161s, 27556 KB] Search time: 0.0195266s
[t=0.0507161s, 27556 KB] Total time: 0.0507161s
Solution found.
Peak memory: 27556 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.24s
