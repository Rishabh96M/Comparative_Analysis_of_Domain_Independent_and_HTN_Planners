INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py ../bws_domain/bws_domain_actions.pddl ../bws_domain/problem_size_22/bws_problem_22_7.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.010s wall-clock]
1608 relevant atoms
1078 auxiliary atoms
2686 final queue length
4672 total queue pushes
Completing instantiation... [0.020s CPU, 0.017s wall-clock]
Instantiating: [0.030s CPU, 0.029s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
23 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.007s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.025s wall-clock]
1430 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
44 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.012s wall-clock]
Reordering and filtering variables...
45 of 45 variables necessary.
23 of 45 mutex groups necessary.
968 of 968 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 45
Translator derived variables: 0
Translator facts: 552
Translator goal facts: 22
Translator mutex groups: 23
Translator total mutex groups size: 529
Translator operators: 968
Translator axioms: 0
Translator task size: 8342
Translator peak memory: 36972 KB
Writing output... [0.000s CPU, 0.005s wall-clock]
Done! [0.080s CPU, 0.088s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=1.9522e-05s, 24488 KB] reading input...
[t=0.00267961s, 25340 KB] done reading input!
[t=0.00428861s, 25736 KB] Initializing landmark count heuristic...
[t=0.0043595s, 25736 KB] Generating landmark graph...
[t=0.00448081s, 25736 KB] Building a landmark graph with reasonable orders.
[t=0.00456186s, 25736 KB] Initializing Exploration...
[t=0.00496735s, 26000 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0170058s, 26524 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0170815s, 26524 KB] Landmarks generation time: 0.0126096s
[t=0.0171078s, 26524 KB] Discovered 99 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0171238s, 26524 KB] 313 edges
[t=0.0171338s, 26524 KB] approx. reasonable orders
[t=0.0189848s, 26524 KB] approx. obedient reasonable orders
[t=0.0190134s, 26524 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0190232s, 26524 KB] Landmarks generation time: 0.0146584s
[t=0.0190328s, 26524 KB] Discovered 99 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0190412s, 26524 KB] 345 edges
[t=0.0190495s, 26524 KB] Landmark graph generation time: 0.0146973s
[t=0.0190584s, 26524 KB] Landmark graph contains 99 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0190667s, 26524 KB] Landmark graph contains 345 orderings.
[t=0.0193695s, 26524 KB] Simplifying 3828 unary operators... done! [2904 unary operators]
[t=0.0202994s, 26524 KB] time to simplify: 0.000994509s
[t=0.0204448s, 26524 KB] Initializing additive heuristic...
[t=0.0204601s, 26524 KB] Initializing FF heuristic...
[t=0.0205363s, 26524 KB] Building successor generator...done!
[t=0.0207403s, 26524 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0207488s, 26524 KB] time for successor generation creation: 0.000167643s
[t=0.0207605s, 26524 KB] Variables: 45
[t=0.0207701s, 26524 KB] FactPairs: 552
[t=0.0207947s, 26524 KB] Bytes per state: 20
[t=0.0208851s, 26524 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0209165s, 26524 KB] 45 initial landmarks, 22 goal landmarks
[t=0.0209967s, 26524 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0210065s, 26524 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0210151s, 26524 KB] g=0, 1 evaluated, 0 expanded
[t=0.0210298s, 26524 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0210384s, 26524 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0212655s, 26524 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.021275s, 26524 KB] g=2, 8 evaluated, 7 expanded
[t=0.0213366s, 26524 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0213459s, 26524 KB] g=2, 10 evaluated, 9 expanded
[t=0.0213812s, 26524 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0213902s, 26524 KB] g=3, 11 evaluated, 10 expanded
[t=0.021425s, 26524 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.021434s, 26524 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0214423s, 26524 KB] g=4, 12 evaluated, 11 expanded
[t=0.0215265s, 26524 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0215357s, 26524 KB] g=5, 15 evaluated, 14 expanded
[t=0.021746s, 26524 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0217553s, 26524 KB] g=7, 23 evaluated, 22 expanded
[t=0.02179s, 26524 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0217989s, 26524 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0218072s, 26524 KB] g=8, 24 evaluated, 23 expanded
[t=0.0220126s, 26524 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0220224s, 26524 KB] g=10, 32 evaluated, 31 expanded
[t=0.0221616s, 26524 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0221715s, 26524 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0221797s, 26524 KB] g=10, 37 evaluated, 36 expanded
[t=0.022365s, 26524 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0223782s, 26524 KB] g=12, 44 evaluated, 43 expanded
[t=0.0228051s, 26524 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.022815s, 26524 KB] g=14, 61 evaluated, 60 expanded
[t=0.0230963s, 26524 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0231055s, 26524 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0231142s, 26524 KB] g=16, 72 evaluated, 71 expanded
[t=0.0231501s, 26524 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0231591s, 26524 KB] g=17, 73 evaluated, 72 expanded
[t=0.0231941s, 26524 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.023203s, 26524 KB] g=18, 74 evaluated, 73 expanded
[t=0.0235881s, 26524 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0235976s, 26524 KB] g=20, 89 evaluated, 88 expanded
[t=0.0237549s, 26524 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.023765s, 26524 KB] g=20, 95 evaluated, 94 expanded
[t=0.0239876s, 26524 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.024s, 26524 KB] g=22, 103 evaluated, 102 expanded
[t=0.0243395s, 26524 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.024353s, 26524 KB] g=22, 116 evaluated, 115 expanded
[t=0.0245177s, 26524 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0245285s, 26524 KB] g=23, 122 evaluated, 121 expanded
[t=0.0245894s, 26524 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0245988s, 26524 KB] g=24, 124 evaluated, 123 expanded
[t=0.0248594s, 26524 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0248692s, 26524 KB] g=26, 134 evaluated, 133 expanded
[t=0.0250284s, 26524 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0250382s, 26524 KB] g=26, 140 evaluated, 139 expanded
[t=0.0251987s, 26524 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0252083s, 26524 KB] g=28, 146 evaluated, 145 expanded
[t=0.0255092s, 26524 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0255189s, 26524 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0255272s, 26524 KB] g=30, 158 evaluated, 157 expanded
[t=0.025562s, 26524 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0255714s, 26524 KB] g=31, 159 evaluated, 158 expanded
[t=0.0257733s, 26524 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0257831s, 26524 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.025792s, 26524 KB] g=32, 167 evaluated, 166 expanded
[t=0.0258268s, 26524 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0258368s, 26524 KB] g=33, 168 evaluated, 167 expanded
[t=0.0276778s, 26524 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0276951s, 26524 KB] g=44, 242 evaluated, 241 expanded
[t=0.0283986s, 26524 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0284715s, 26524 KB] g=46, 268 evaluated, 267 expanded
[t=0.0291544s, 26524 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0291701s, 26524 KB] g=48, 293 evaluated, 292 expanded
[t=0.0294458s, 26524 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0294555s, 26524 KB] g=50, 304 evaluated, 303 expanded
[t=0.0296173s, 26524 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0296266s, 26524 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0296346s, 26524 KB] g=50, 310 evaluated, 309 expanded
[t=0.0298882s, 26524 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0298973s, 26524 KB] g=52, 320 evaluated, 319 expanded
[t=0.0299649s, 26524 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0299743s, 26524 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0299829s, 26524 KB] g=52, 322 evaluated, 321 expanded
[t=0.0302041s, 26524 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0302134s, 26524 KB] g=54, 331 evaluated, 330 expanded
[t=0.0304411s, 26524 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0304504s, 26524 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0304582s, 26524 KB] g=54, 340 evaluated, 339 expanded
[t=0.0306887s, 26524 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0306976s, 26524 KB] g=56, 348 evaluated, 347 expanded
[t=0.0308476s, 26524 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0308572s, 26524 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0308692s, 26524 KB] g=56, 354 evaluated, 353 expanded
[t=0.0311172s, 26524 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0311367s, 26524 KB] g=58, 361 evaluated, 360 expanded
[t=0.031221s, 26524 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0312307s, 26524 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0312394s, 26524 KB] g=58, 364 evaluated, 363 expanded
[t=0.0313897s, 26524 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0313992s, 26524 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0314077s, 26524 KB] g=60, 370 evaluated, 369 expanded
[t=0.0315315s, 26524 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0315414s, 26524 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0315501s, 26524 KB] g=62, 375 evaluated, 374 expanded
[t=0.0316288s, 26524 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0316386s, 26524 KB] g=62, 378 evaluated, 377 expanded
[t=0.0317379s, 26524 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0317471s, 26524 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0317557s, 26524 KB] g=64, 382 evaluated, 381 expanded
[t=0.0324014s, 26524 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0324142s, 26524 KB] g=76, 413 evaluated, 412 expanded
[t=0.0324921s, 26524 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0325023s, 26524 KB] g=77, 417 evaluated, 416 expanded
[t=0.0325292s, 26524 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0325424s, 26524 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0325513s, 26524 KB] g=78, 418 evaluated, 417 expanded
[t=0.0326257s, 26524 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0326354s, 26524 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0326442s, 26524 KB] g=80, 422 evaluated, 421 expanded
[t=0.0327s, 26524 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.03271s, 26524 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0327187s, 26524 KB] g=82, 425 evaluated, 424 expanded
[t=0.032782s, 26524 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0327917s, 26524 KB] g=86, 429 evaluated, 428 expanded
[t=0.0328099s, 26524 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0328191s, 26524 KB] g=87, 430 evaluated, 429 expanded
[t=0.032835s, 26524 KB] Solution found!
[t=0.0328464s, 26524 KB] Actual search time: 0.0119265s
unstack b11 b16 (1)
stack b11 b14 (1)
unstack b16 b19 (1)
put-down b16 (1)
unstack b19 b20 (1)
put-down b19 (1)
unstack b20 b7 (1)
put-down b20 (1)
unstack b8 b3 (1)
stack b8 b11 (1)
unstack b15 b2 (1)
put-down b15 (1)
unstack b3 b22 (1)
put-down b3 (1)
unstack b22 b10 (1)
stack b22 b9 (1)
unstack b10 b18 (1)
put-down b10 (1)
unstack b18 b5 (1)
put-down b18 (1)
unstack b6 b21 (1)
stack b6 b22 (1)
unstack b21 b12 (1)
stack b21 b20 (1)
pick-up b10 (1)
stack b10 b15 (1)
pick-up b12 (1)
stack b12 b8 (1)
pick-up b18 (1)
stack b18 b6 (1)
pick-up b19 (1)
stack b19 b18 (1)
unstack b12 b8 (1)
put-down b12 (1)
unstack b10 b15 (1)
put-down b10 (1)
unstack b8 b11 (1)
put-down b8 (1)
unstack b11 b14 (1)
put-down b11 (1)
unstack b14 b17 (1)
put-down b14 (1)
unstack b17 b13 (1)
put-down b17 (1)
unstack b13 b1 (1)
stack b13 b5 (1)
pick-up b1 (1)
stack b1 b2 (1)
pick-up b14 (1)
stack b14 b1 (1)
pick-up b11 (1)
stack b11 b14 (1)
pick-up b3 (1)
stack b3 b13 (1)
pick-up b17 (1)
stack b17 b3 (1)
pick-up b15 (1)
stack b15 b17 (1)
pick-up b10 (1)
stack b10 b15 (1)
pick-up b8 (1)
stack b8 b11 (1)
pick-up b12 (1)
stack b12 b8 (1)
unstack b19 b18 (1)
put-down b19 (1)
unstack b18 b6 (1)
put-down b18 (1)
pick-up b19 (1)
stack b19 b18 (1)
unstack b6 b22 (1)
put-down b6 (1)
unstack b22 b9 (1)
put-down b22 (1)
unstack b9 b4 (1)
stack b9 b12 (1)
pick-up b7 (1)
stack b7 b4 (1)
pick-up b22 (1)
stack b22 b9 (1)
pick-up b6 (1)
stack b6 b22 (1)
unstack b19 b18 (1)
put-down b19 (1)
pick-up b18 (1)
stack b18 b6 (1)
pick-up b19 (1)
stack b19 b18 (1)
[t=0.0328562s, 26524 KB] Plan length: 88 step(s).
[t=0.0328562s, 26524 KB] Plan cost: 88
[t=0.0328562s, 26524 KB] Expanded 430 state(s).
[t=0.0328562s, 26524 KB] Reopened 0 state(s).
[t=0.0328562s, 26524 KB] Evaluated 431 state(s).
[t=0.0328562s, 26524 KB] Evaluations: 862
[t=0.0328562s, 26524 KB] Generated 4761 state(s).
[t=0.0328562s, 26524 KB] Dead ends: 0 state(s).
[t=0.0328562s, 26524 KB] Number of registered states: 431
[t=0.0328562s, 26524 KB] Int hash set load factor: 431/512 = 0.841797
[t=0.0328562s, 26524 KB] Int hash set resizes: 9
[t=0.0328562s, 26524 KB] Search time: 0.0119715s
[t=0.0328562s, 26524 KB] Total time: 0.0328562s
Solution found.
Peak memory: 26524 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.17s
