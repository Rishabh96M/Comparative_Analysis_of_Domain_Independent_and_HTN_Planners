INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py ../bws_domain/bws_domain_actions.pddl ../bws_domain/problem_size_25/bws_problem_25_7.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.012s wall-clock]
2052 relevant atoms
1375 auxiliary atoms
3427 final queue length
5982 total queue pushes
Completing instantiation... [0.030s CPU, 0.021s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
26 uncovered facts
Choosing groups: [0.000s CPU, 0.002s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.010s CPU, 0.008s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.031s wall-clock]
1850 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
50 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.023s wall-clock]
Reordering and filtering variables...
51 of 51 variables necessary.
26 of 51 mutex groups necessary.
1250 of 1250 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.008s wall-clock]
Translator variables: 51
Translator derived variables: 0
Translator facts: 702
Translator goal facts: 25
Translator mutex groups: 26
Translator total mutex groups size: 676
Translator operators: 1250
Translator axioms: 0
Translator task size: 10754
Translator peak memory: 38388 KB
Writing output... [0.010s CPU, 0.006s wall-clock]
Done! [0.120s CPU, 0.117s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.3267e-05s, 24488 KB] reading input...
[t=0.00457668s, 25632 KB] done reading input!
[t=0.00642453s, 26028 KB] Initializing landmark count heuristic...
[t=0.00648023s, 26028 KB] Generating landmark graph...
[t=0.00656625s, 26160 KB] Building a landmark graph with reasonable orders.
[t=0.0066443s, 26160 KB] Initializing Exploration...
[t=0.00713626s, 26532 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0233377s, 27060 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0234299s, 27060 KB] Landmarks generation time: 0.0168633s
[t=0.0234457s, 27060 KB] Discovered 115 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0234647s, 27060 KB] 605 edges
[t=0.0234751s, 27060 KB] approx. reasonable orders
[t=0.0237622s, 27060 KB] approx. obedient reasonable orders
[t=0.0237952s, 27060 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0238047s, 27060 KB] Landmarks generation time: 0.0173204s
[t=0.0238145s, 27060 KB] Discovered 115 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0238232s, 27060 KB] 609 edges
[t=0.0238318s, 27060 KB] Landmark graph generation time: 0.0173587s
[t=0.0238407s, 27060 KB] Landmark graph contains 115 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0238488s, 27060 KB] Landmark graph contains 609 orderings.
[t=0.0242945s, 27060 KB] Simplifying 4950 unary operators... done! [3750 unary operators]
[t=0.0254921s, 27192 KB] time to simplify: 0.00128692s
[t=0.025659s, 27192 KB] Initializing additive heuristic...
[t=0.0256772s, 27192 KB] Initializing FF heuristic...
[t=0.0257476s, 27192 KB] Building successor generator...done!
[t=0.0261001s, 27192 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0261106s, 27192 KB] time for successor generation creation: 0.000309138s
[t=0.0261311s, 27192 KB] Variables: 51
[t=0.0261471s, 27192 KB] FactPairs: 702
[t=0.0261554s, 27192 KB] Bytes per state: 20
[t=0.0263111s, 27192 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0263516s, 27192 KB] 51 initial landmarks, 25 goal landmarks
[t=0.0264313s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 64
[t=0.0264427s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0264522s, 27192 KB] g=0, 1 evaluated, 0 expanded
[t=0.0264703s, 27192 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 64
[t=0.0264793s, 27192 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0266322s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.0266454s, 27192 KB] g=1, 5 evaluated, 4 expanded
[t=0.0266916s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 61
[t=0.0267014s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0267095s, 27192 KB] g=2, 6 evaluated, 5 expanded
[t=0.0268517s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0269038s, 27192 KB] g=3, 10 evaluated, 9 expanded
[t=0.0270252s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 58
[t=0.0270385s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0270482s, 27192 KB] g=4, 11 evaluated, 10 expanded
[t=0.0272206s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0272363s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0272447s, 27192 KB] g=6, 16 evaluated, 15 expanded
[t=0.0272902s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0273014s, 27192 KB] g=7, 17 evaluated, 16 expanded
[t=0.0275902s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0276047s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0276136s, 27192 KB] g=10, 26 evaluated, 25 expanded
[t=0.0278102s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0278208s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0278299s, 27192 KB] g=12, 32 evaluated, 31 expanded
[t=0.0279407s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0279682s, 27192 KB] g=13, 35 evaluated, 34 expanded
[t=0.0282608s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0282719s, 27192 KB] g=16, 44 evaluated, 43 expanded
[t=0.0285004s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0285104s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0285184s, 27192 KB] g=18, 51 evaluated, 50 expanded
[t=0.0287562s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0287658s, 27192 KB] g=20, 58 evaluated, 57 expanded
[t=0.0288417s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0288512s, 27192 KB] g=21, 60 evaluated, 59 expanded
[t=0.0288958s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0289052s, 27192 KB] g=20, 61 evaluated, 60 expanded
[t=0.02895s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0289591s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0289675s, 27192 KB] g=22, 62 evaluated, 61 expanded
[t=0.0292632s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0292751s, 27192 KB] g=24, 71 evaluated, 70 expanded
[t=0.029405s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0294238s, 27192 KB] g=24, 74 evaluated, 73 expanded
[t=0.0298732s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0298868s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.029896s, 27192 KB] g=26, 87 evaluated, 86 expanded
[t=0.030187s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0301978s, 27192 KB] g=27, 96 evaluated, 95 expanded
[t=0.0302398s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0302488s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0302568s, 27192 KB] g=28, 97 evaluated, 96 expanded
[t=0.0305739s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0305836s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0305917s, 27192 KB] g=30, 107 evaluated, 106 expanded
[t=0.0308737s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.030924s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0309336s, 27192 KB] g=32, 116 evaluated, 115 expanded
[t=0.0311534s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0311661s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0311745s, 27192 KB] g=34, 123 evaluated, 122 expanded
[t=0.0313986s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0314083s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0314164s, 27192 KB] g=36, 130 evaluated, 129 expanded
[t=0.0315748s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0315875s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.031596s, 27192 KB] g=38, 135 evaluated, 134 expanded
[t=0.0320529s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0320636s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.032072s, 27192 KB] g=42, 150 evaluated, 149 expanded
[t=0.0322289s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.032239s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0322476s, 27192 KB] g=44, 155 evaluated, 154 expanded
[t=0.0329609s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0329715s, 27192 KB] g=53, 179 evaluated, 178 expanded
[t=0.0330132s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0330223s, 27192 KB] g=54, 180 evaluated, 179 expanded
[t=0.0331497s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0331589s, 27192 KB] g=55, 184 evaluated, 183 expanded
[t=0.033199s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0332081s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0332164s, 27192 KB] g=56, 185 evaluated, 184 expanded
[t=0.0333971s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0334063s, 27192 KB] g=58, 191 evaluated, 190 expanded
[t=0.0334751s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0334846s, 27192 KB] g=58, 193 evaluated, 192 expanded
[t=0.0336401s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0336491s, 27192 KB] g=60, 198 evaluated, 197 expanded
[t=0.0338059s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0338152s, 27192 KB] g=60, 203 evaluated, 202 expanded
[t=0.0339435s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0339529s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0339648s, 27192 KB] g=62, 207 evaluated, 206 expanded
[t=0.0340714s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.034081s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0340895s, 27192 KB] g=64, 210 evaluated, 209 expanded
[t=0.0342259s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0342352s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0342435s, 27192 KB] g=66, 214 evaluated, 213 expanded
[t=0.0346279s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0346371s, 27192 KB] g=72, 228 evaluated, 227 expanded
[t=0.0347503s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0347593s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0347675s, 27192 KB] g=74, 232 evaluated, 231 expanded
[t=0.0348271s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0348359s, 27192 KB] g=74, 234 evaluated, 233 expanded
[t=0.0349587s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0349723s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0349854s, 27192 KB] g=76, 237 evaluated, 236 expanded
[t=0.0353499s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0353591s, 27192 KB] g=88, 254 evaluated, 253 expanded
[t=0.0354497s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.03546s, 27192 KB] g=92, 258 evaluated, 257 expanded
[t=0.0354797s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0354885s, 27192 KB] g=93, 259 evaluated, 258 expanded
[t=0.0355044s, 27192 KB] Solution found!
[t=0.0355154s, 27192 KB] Actual search time: 0.00915936s
unstack b21 b9 (1)
put-down b21 (1)
unstack b24 b10 (1)
put-down b24 (1)
unstack b19 b1 (1)
stack b19 b21 (1)
unstack b1 b6 (1)
put-down b1 (1)
unstack b6 b18 (1)
stack b6 b10 (1)
unstack b9 b17 (1)
stack b9 b24 (1)
unstack b17 b4 (1)
put-down b17 (1)
unstack b4 b20 (1)
put-down b4 (1)
unstack b20 b16 (1)
stack b20 b18 (1)
unstack b16 b11 (1)
put-down b16 (1)
unstack b11 b15 (1)
stack b11 b6 (1)
unstack b15 b13 (1)
put-down b15 (1)
unstack b13 b5 (1)
stack b13 b9 (1)
unstack b5 b12 (1)
put-down b5 (1)
unstack b12 b7 (1)
stack b12 b13 (1)
pick-up b17 (1)
stack b17 b15 (1)
pick-up b16 (1)
stack b16 b7 (1)
pick-up b2 (1)
stack b2 b20 (1)
pick-up b4 (1)
stack b4 b16 (1)
unstack b17 b15 (1)
put-down b17 (1)
pick-up b15 (1)
stack b15 b5 (1)
pick-up b17 (1)
stack b17 b15 (1)
unstack b2 b20 (1)
put-down b2 (1)
unstack b20 b18 (1)
put-down b20 (1)
pick-up b2 (1)
stack b2 b20 (1)
unstack b18 b23 (1)
put-down b18 (1)
unstack b23 b8 (1)
stack b23 b14 (1)
unstack b8 b25 (1)
stack b8 b19 (1)
unstack b25 b3 (1)
stack b25 b2 (1)
pick-up b1 (1)
stack b1 b25 (1)
pick-up b18 (1)
stack b18 b23 (1)
unstack b3 b22 (1)
stack b3 b12 (1)
pick-up b22 (1)
stack b22 b4 (1)
unstack b18 b23 (1)
put-down b18 (1)
unstack b23 b14 (1)
put-down b23 (1)
pick-up b14 (1)
stack b14 b3 (1)
pick-up b23 (1)
stack b23 b14 (1)
pick-up b18 (1)
stack b18 b23 (1)
unstack b1 b25 (1)
put-down b1 (1)
unstack b25 b2 (1)
put-down b25 (1)
pick-up b1 (1)
stack b1 b25 (1)
unstack b2 b20 (1)
put-down b2 (1)
pick-up b20 (1)
stack b20 b18 (1)
pick-up b2 (1)
stack b2 b20 (1)
unstack b1 b25 (1)
put-down b1 (1)
pick-up b25 (1)
stack b25 b2 (1)
pick-up b1 (1)
stack b1 b25 (1)
[t=0.035525s, 27192 KB] Plan length: 94 step(s).
[t=0.035525s, 27192 KB] Plan cost: 94
[t=0.035525s, 27192 KB] Expanded 259 state(s).
[t=0.035525s, 27192 KB] Reopened 0 state(s).
[t=0.035525s, 27192 KB] Evaluated 260 state(s).
[t=0.035525s, 27192 KB] Evaluations: 520
[t=0.035525s, 27192 KB] Generated 2515 state(s).
[t=0.035525s, 27192 KB] Dead ends: 0 state(s).
[t=0.035525s, 27192 KB] Number of registered states: 260
[t=0.035525s, 27192 KB] Int hash set load factor: 260/512 = 0.507812
[t=0.035525s, 27192 KB] Int hash set resizes: 9
[t=0.035525s, 27192 KB] Search time: 0.00921487s
[t=0.035525s, 27192 KB] Total time: 0.035525s
Solution found.
Peak memory: 27192 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.21s
