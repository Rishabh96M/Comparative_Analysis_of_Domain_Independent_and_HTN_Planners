INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py ../bws_domain/bws_domain_actions.pddl ../bws_domain/problem_size_24/bws_problem_24_5.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.012s wall-clock]
1898 relevant atoms
1272 auxiliary atoms
3170 final queue length
5527 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.034s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.010s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
25 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.008s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.029s wall-clock]
1704 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
48 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.020s wall-clock]
Reordering and filtering variables...
49 of 49 variables necessary.
25 of 49 mutex groups necessary.
1152 of 1152 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.008s wall-clock]
Translator variables: 49
Translator derived variables: 0
Translator facts: 650
Translator goal facts: 24
Translator mutex groups: 25
Translator total mutex groups size: 625
Translator operators: 1152
Translator axioms: 0
Translator task size: 9916
Translator peak memory: 37876 KB
Writing output... [0.010s CPU, 0.006s wall-clock]
Done! [0.110s CPU, 0.109s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.0546e-05s, 24488 KB] reading input...
[t=0.00321477s, 25532 KB] done reading input!
[t=0.00446404s, 25928 KB] Initializing landmark count heuristic...
[t=0.00451581s, 25928 KB] Generating landmark graph...
[t=0.00460032s, 25928 KB] Building a landmark graph with reasonable orders.
[t=0.0046953s, 26060 KB] Initializing Exploration...
[t=0.00507336s, 26388 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0199334s, 26916 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0200109s, 26916 KB] Landmarks generation time: 0.0154127s
[t=0.0200269s, 26916 KB] Discovered 114 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0200443s, 26916 KB] 603 edges
[t=0.0200547s, 26916 KB] approx. reasonable orders
[t=0.0225058s, 26916 KB] approx. obedient reasonable orders
[t=0.0227605s, 26916 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0227867s, 26916 KB] Landmarks generation time: 0.0182747s
[t=0.0228051s, 26916 KB] Discovered 114 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.022814s, 26916 KB] 628 edges
[t=0.0228268s, 26916 KB] Landmark graph generation time: 0.0183228s
[t=0.0228406s, 26916 KB] Landmark graph contains 114 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0228504s, 26916 KB] Landmark graph contains 628 orderings.
[t=0.023885s, 26916 KB] Simplifying 4560 unary operators... done! [3456 unary operators]
[t=0.0252599s, 26916 KB] time to simplify: 0.0014876s
[t=0.0254683s, 26916 KB] Initializing additive heuristic...
[t=0.0254912s, 26916 KB] Initializing FF heuristic...
[t=0.025607s, 26916 KB] Building successor generator...done!
[t=0.0258996s, 26916 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0259102s, 26916 KB] time for successor generation creation: 0.000256025s
[t=0.0259298s, 26916 KB] Variables: 49
[t=0.0259385s, 26916 KB] FactPairs: 650
[t=0.025947s, 26916 KB] Bytes per state: 20
[t=0.0262227s, 26916 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0262785s, 26916 KB] 49 initial landmarks, 24 goal landmarks
[t=0.0263948s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 65
[t=0.0264073s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 46
[t=0.0264165s, 26916 KB] g=0, 1 evaluated, 0 expanded
[t=0.026441s, 26916 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 65
[t=0.0264501s, 26916 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 46
[t=0.0264976s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.026508s, 26916 KB] g=1, 2 evaluated, 1 expanded
[t=0.0265595s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 62
[t=0.0265844s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.0265941s, 26916 KB] g=2, 3 evaluated, 2 expanded
[t=0.0266352s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 61
[t=0.0266443s, 26916 KB] g=3, 4 evaluated, 3 expanded
[t=0.0267447s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 60
[t=0.0267543s, 26916 KB] g=5, 7 evaluated, 6 expanded
[t=0.0271079s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.0271187s, 26916 KB] g=7, 19 evaluated, 18 expanded
[t=0.0273569s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0273663s, 26916 KB] g=4, 27 evaluated, 26 expanded
[t=0.0274344s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0274434s, 26916 KB] g=5, 29 evaluated, 28 expanded
[t=0.0275091s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 57
[t=0.0275182s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0275263s, 26916 KB] g=6, 31 evaluated, 30 expanded
[t=0.0275639s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0275733s, 26916 KB] g=7, 32 evaluated, 31 expanded
[t=0.0276702s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0276865s, 26916 KB] g=9, 35 evaluated, 34 expanded
[t=0.028027s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0280371s, 26916 KB] g=11, 47 evaluated, 46 expanded
[t=0.0283842s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.028394s, 26916 KB] g=14, 59 evaluated, 58 expanded
[t=0.0287448s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0287557s, 26916 KB] g=16, 71 evaluated, 70 expanded
[t=0.0290763s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0290859s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0290942s, 26916 KB] g=18, 82 evaluated, 81 expanded
[t=0.0293523s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0293614s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0293697s, 26916 KB] g=20, 91 evaluated, 90 expanded
[t=0.0296921s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0297029s, 26916 KB] g=23, 102 evaluated, 101 expanded
[t=0.0297432s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0297525s, 26916 KB] g=24, 103 evaluated, 102 expanded
[t=0.0299614s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0299706s, 26916 KB] g=25, 110 evaluated, 109 expanded
[t=0.0301269s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0301403s, 26916 KB] g=26, 115 evaluated, 114 expanded
[t=0.030467s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0304793s, 26916 KB] g=27, 126 evaluated, 125 expanded
[t=0.0307246s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0307354s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0307441s, 26916 KB] g=30, 134 evaluated, 133 expanded
[t=0.0307861s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0307948s, 26916 KB] g=31, 135 evaluated, 134 expanded
[t=0.0308374s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0308564s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0308649s, 26916 KB] g=32, 136 evaluated, 135 expanded
[t=0.0311385s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0311494s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0311578s, 26916 KB] g=34, 145 evaluated, 144 expanded
[t=0.0314297s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0314399s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0314485s, 26916 KB] g=36, 154 evaluated, 153 expanded
[t=0.0317328s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0317448s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0317533s, 26916 KB] g=38, 163 evaluated, 162 expanded
[t=0.0320326s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0320473s, 26916 KB] g=40, 172 evaluated, 171 expanded
[t=0.032117s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0321263s, 26916 KB] g=40, 174 evaluated, 173 expanded
[t=0.032523s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0325366s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0325453s, 26916 KB] g=42, 187 evaluated, 186 expanded
[t=0.032785s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0327944s, 26916 KB] g=44, 195 evaluated, 194 expanded
[t=0.0328631s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0328723s, 26916 KB] g=44, 197 evaluated, 196 expanded
[t=0.0332289s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0332391s, 26916 KB] g=46, 209 evaluated, 208 expanded
[t=0.0333367s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0333466s, 26916 KB] g=46, 212 evaluated, 211 expanded
[t=0.0338733s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.033884s, 26916 KB] g=48, 230 evaluated, 229 expanded
[t=0.0339243s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0339342s, 26916 KB] g=48, 231 evaluated, 230 expanded
[t=0.0342989s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0343098s, 26916 KB] g=50, 243 evaluated, 242 expanded
[t=0.0343771s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0343865s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0343952s, 26916 KB] g=50, 245 evaluated, 244 expanded
[t=0.0346289s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0346383s, 26916 KB] g=52, 253 evaluated, 252 expanded
[t=0.0348012s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.034811s, 26916 KB] g=52, 258 evaluated, 257 expanded
[t=0.0351466s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0351563s, 26916 KB] g=54, 270 evaluated, 269 expanded
[t=0.0352763s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0352854s, 26916 KB] g=54, 274 evaluated, 273 expanded
[t=0.0355369s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0355463s, 26916 KB] g=56, 283 evaluated, 282 expanded
[t=0.035611s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0356203s, 26916 KB] g=56, 285 evaluated, 284 expanded
[t=0.0357673s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0357766s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0357847s, 26916 KB] g=58, 290 evaluated, 289 expanded
[t=0.0371221s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0371375s, 26916 KB] g=68, 338 evaluated, 337 expanded
[t=0.0373072s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0373227s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0373315s, 26916 KB] g=70, 343 evaluated, 342 expanded
[t=0.0377954s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0378151s, 26916 KB] g=74, 359 evaluated, 358 expanded
[t=0.0379331s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0379431s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0379513s, 26916 KB] g=76, 363 evaluated, 362 expanded
[t=0.0396861s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0397141s, 26916 KB] g=90, 425 evaluated, 424 expanded
[t=0.0398069s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0398193s, 26916 KB] g=90, 428 evaluated, 427 expanded
[t=0.0399317s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0399419s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0399503s, 26916 KB] g=92, 432 evaluated, 431 expanded
[t=0.0401811s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0401954s, 26916 KB] g=96, 441 evaluated, 440 expanded
[t=0.0402762s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0402865s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0402952s, 26916 KB] g=98, 444 evaluated, 443 expanded
[t=0.0408902s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0409027s, 26916 KB] g=112, 473 evaluated, 472 expanded
[t=0.0409608s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0409701s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0409782s, 26916 KB] g=114, 476 evaluated, 475 expanded
[t=0.0410467s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0410557s, 26916 KB] g=118, 480 evaluated, 479 expanded
[t=0.0410736s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0410827s, 26916 KB] g=119, 481 evaluated, 480 expanded
[t=0.0410993s, 26916 KB] Solution found!
[t=0.0411117s, 26916 KB] Actual search time: 0.0148234s
unstack b12 b17 (1)
put-down b12 (1)
unstack b23 b16 (1)
stack b23 b2 (1)
unstack b16 b20 (1)
put-down b16 (1)
unstack b17 b15 (1)
put-down b17 (1)
unstack b15 b5 (1)
put-down b15 (1)
unstack b9 b11 (1)
put-down b9 (1)
unstack b5 b19 (1)
put-down b5 (1)
unstack b6 b24 (1)
put-down b6 (1)
pick-up b9 (1)
stack b9 b19 (1)
pick-up b24 (1)
stack b24 b20 (1)
unstack b23 b2 (1)
put-down b23 (1)
unstack b2 b7 (1)
stack b2 b24 (1)
pick-up b23 (1)
stack b23 b2 (1)
unstack b7 b21 (1)
put-down b7 (1)
unstack b21 b1 (1)
stack b21 b11 (1)
unstack b1 b14 (1)
put-down b1 (1)
unstack b14 b10 (1)
stack b14 b1 (1)
unstack b10 b22 (1)
stack b10 b16 (1)
unstack b22 b4 (1)
stack b22 b12 (1)
unstack b4 b13 (1)
stack b4 b21 (1)
unstack b13 b18 (1)
stack b13 b23 (1)
pick-up b17 (1)
stack b17 b4 (1)
unstack b18 b8 (1)
put-down b18 (1)
pick-up b7 (1)
stack b7 b14 (1)
unstack b8 b3 (1)
stack b8 b22 (1)
pick-up b3 (1)
stack b3 b5 (1)
pick-up b6 (1)
stack b6 b3 (1)
pick-up b18 (1)
stack b18 b6 (1)
pick-up b15 (1)
stack b15 b18 (1)
unstack b17 b4 (1)
put-down b17 (1)
unstack b4 b21 (1)
put-down b4 (1)
pick-up b17 (1)
stack b17 b4 (1)
unstack b21 b11 (1)
put-down b21 (1)
pick-up b11 (1)
stack b11 b10 (1)
pick-up b21 (1)
stack b21 b11 (1)
unstack b17 b4 (1)
put-down b17 (1)
pick-up b4 (1)
stack b4 b21 (1)
pick-up b17 (1)
stack b17 b4 (1)
unstack b13 b23 (1)
put-down b13 (1)
unstack b23 b2 (1)
put-down b23 (1)
pick-up b13 (1)
stack b13 b23 (1)
unstack b2 b24 (1)
put-down b2 (1)
unstack b24 b20 (1)
put-down b24 (1)
pick-up b20 (1)
stack b20 b8 (1)
pick-up b24 (1)
stack b24 b20 (1)
pick-up b2 (1)
stack b2 b24 (1)
unstack b13 b23 (1)
put-down b13 (1)
pick-up b23 (1)
stack b23 b2 (1)
pick-up b13 (1)
stack b13 b23 (1)
unstack b15 b18 (1)
put-down b15 (1)
unstack b18 b6 (1)
put-down b18 (1)
pick-up b15 (1)
stack b15 b18 (1)
unstack b6 b3 (1)
put-down b6 (1)
unstack b3 b5 (1)
put-down b3 (1)
pick-up b5 (1)
stack b5 b13 (1)
pick-up b3 (1)
stack b3 b5 (1)
pick-up b6 (1)
stack b6 b3 (1)
unstack b15 b18 (1)
put-down b15 (1)
pick-up b18 (1)
stack b18 b6 (1)
pick-up b15 (1)
stack b15 b18 (1)
[t=0.0411214s, 26916 KB] Plan length: 120 step(s).
[t=0.0411214s, 26916 KB] Plan cost: 120
[t=0.0411214s, 26916 KB] Expanded 481 state(s).
[t=0.0411214s, 26916 KB] Reopened 0 state(s).
[t=0.0411214s, 26916 KB] Evaluated 482 state(s).
[t=0.0411214s, 26916 KB] Evaluations: 964
[t=0.0411214s, 26916 KB] Generated 4647 state(s).
[t=0.0411214s, 26916 KB] Dead ends: 0 state(s).
[t=0.0411214s, 26916 KB] Number of registered states: 482
[t=0.0411214s, 26916 KB] Int hash set load factor: 482/512 = 0.941406
[t=0.0411214s, 26916 KB] Int hash set resizes: 9
[t=0.0411214s, 26916 KB] Search time: 0.0148993s
[t=0.0411214s, 26916 KB] Total time: 0.0411214s
Solution found.
Peak memory: 26916 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.20s
