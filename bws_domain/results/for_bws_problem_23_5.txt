INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py ../bws_domain/bws_domain_actions.pddl ../bws_domain/problem_size_23/bws_problem_23_5.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.009s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.010s wall-clock]
1750 relevant atoms
1173 auxiliary atoms
2923 final queue length
5092 total queue pushes
Completing instantiation... [0.020s CPU, 0.017s wall-clock]
Instantiating: [0.030s CPU, 0.028s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
24 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.007s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
1564 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
46 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.012s wall-clock]
Reordering and filtering variables...
47 of 47 variables necessary.
24 of 47 mutex groups necessary.
1058 of 1058 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 47
Translator derived variables: 0
Translator facts: 600
Translator goal facts: 23
Translator mutex groups: 24
Translator total mutex groups size: 576
Translator operators: 1058
Translator axioms: 0
Translator task size: 9112
Translator peak memory: 37484 KB
Writing output... [0.000s CPU, 0.006s wall-clock]
Done! [0.080s CPU, 0.092s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=1.9251e-05s, 24488 KB] reading input...
[t=0.00283084s, 25428 KB] done reading input!
[t=0.00366087s, 25824 KB] Initializing landmark count heuristic...
[t=0.00368862s, 25824 KB] Generating landmark graph...
[t=0.00375891s, 25824 KB] Building a landmark graph with reasonable orders.
[t=0.00382327s, 25956 KB] Initializing Exploration...
[t=0.00412142s, 26256 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0149686s, 26652 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.015034s, 26652 KB] Landmarks generation time: 0.011276s
[t=0.0150477s, 26652 KB] Discovered 101 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0150633s, 26652 KB] 331 edges
[t=0.0150725s, 26652 KB] approx. reasonable orders
[t=0.0152802s, 26652 KB] approx. obedient reasonable orders
[t=0.0153024s, 26652 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0153107s, 26652 KB] Landmarks generation time: 0.011617s
[t=0.0153202s, 26652 KB] Discovered 101 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0153282s, 26652 KB] 335 edges
[t=0.015336s, 26652 KB] Landmark graph generation time: 0.0116542s
[t=0.015344s, 26652 KB] Landmark graph contains 101 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0153514s, 26652 KB] Landmark graph contains 335 orderings.
[t=0.0156676s, 26652 KB] Simplifying 4186 unary operators... done! [3174 unary operators]
[t=0.0166163s, 26652 KB] time to simplify: 0.00100997s
[t=0.0167397s, 26652 KB] Initializing additive heuristic...
[t=0.0167539s, 26652 KB] Initializing FF heuristic...
[t=0.0168012s, 26652 KB] Building successor generator...done!
[t=0.0169977s, 26652 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0170067s, 26652 KB] time for successor generation creation: 0.00016378s
[t=0.0170202s, 26652 KB] Variables: 47
[t=0.0170293s, 26652 KB] FactPairs: 600
[t=0.0170385s, 26652 KB] Bytes per state: 20
[t=0.0171368s, 26652 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0171697s, 26652 KB] 46 initial landmarks, 23 goal landmarks
[t=0.0172211s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0172302s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0172379s, 26652 KB] g=0, 1 evaluated, 0 expanded
[t=0.0172569s, 26652 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.017265s, 26652 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0173565s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0173652s, 26652 KB] g=1, 4 evaluated, 3 expanded
[t=0.0174009s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0174093s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.017417s, 26652 KB] g=2, 5 evaluated, 4 expanded
[t=0.0176236s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0176332s, 26652 KB] g=4, 13 evaluated, 12 expanded
[t=0.017717s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0177256s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0177332s, 26652 KB] g=4, 16 evaluated, 15 expanded
[t=0.0179122s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0179212s, 26652 KB] g=6, 23 evaluated, 22 expanded
[t=0.0180033s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0180121s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0180198s, 26652 KB] g=6, 26 evaluated, 25 expanded
[t=0.0181053s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0181139s, 26652 KB] g=7, 29 evaluated, 28 expanded
[t=0.0181486s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0181571s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0181646s, 26652 KB] g=8, 30 evaluated, 29 expanded
[t=0.0183762s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0183881s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0183962s, 26652 KB] g=10, 38 evaluated, 37 expanded
[t=0.0185072s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0185157s, 26652 KB] g=11, 42 evaluated, 41 expanded
[t=0.0185512s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0185598s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0185675s, 26652 KB] g=12, 43 evaluated, 42 expanded
[t=0.0187587s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0187676s, 26652 KB] g=14, 50 evaluated, 49 expanded
[t=0.0191805s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0191895s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0191973s, 26652 KB] g=16, 66 evaluated, 65 expanded
[t=0.0193772s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0193867s, 26652 KB] g=18, 73 evaluated, 72 expanded
[t=0.0199408s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0199526s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.019961s, 26652 KB] g=22, 95 evaluated, 94 expanded
[t=0.0201968s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0202064s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0202149s, 26652 KB] g=24, 104 evaluated, 103 expanded
[t=0.0208442s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0208552s, 26652 KB] g=27, 128 evaluated, 127 expanded
[t=0.0209052s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0209162s, 26652 KB] g=28, 129 evaluated, 128 expanded
[t=0.021116s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0211278s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0211362s, 26652 KB] g=30, 136 evaluated, 135 expanded
[t=0.021302s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0213108s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0213187s, 26652 KB] g=32, 142 evaluated, 141 expanded
[t=0.0216515s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0216622s, 26652 KB] g=36, 155 evaluated, 154 expanded
[t=0.0217972s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0218063s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0218142s, 26652 KB] g=38, 160 evaluated, 159 expanded
[t=0.0250402s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0250532s, 26652 KB] g=52, 284 evaluated, 283 expanded
[t=0.025384s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0253942s, 26652 KB] g=58, 297 evaluated, 296 expanded
[t=0.0255034s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0255153s, 26652 KB] g=54, 301 evaluated, 300 expanded
[t=0.0259233s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.025933s, 26652 KB] g=56, 317 evaluated, 316 expanded
[t=0.0264295s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0264392s, 26652 KB] g=58, 337 evaluated, 336 expanded
[t=0.0265244s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0265329s, 26652 KB] g=64, 340 evaluated, 339 expanded
[t=0.0268307s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0268404s, 26652 KB] g=60, 352 evaluated, 351 expanded
[t=0.0270878s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0270973s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0271053s, 26652 KB] g=62, 362 evaluated, 361 expanded
[t=0.0272634s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0272721s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.02728s, 26652 KB] g=64, 368 evaluated, 367 expanded
[t=0.0274164s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0274294s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0274374s, 26652 KB] g=66, 373 evaluated, 372 expanded
[t=0.0277166s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0277268s, 26652 KB] g=69, 384 evaluated, 383 expanded
[t=0.0277596s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0277679s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0277759s, 26652 KB] g=70, 385 evaluated, 384 expanded
[t=0.027929s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0279376s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0279454s, 26652 KB] g=72, 391 evaluated, 390 expanded
[t=0.0280746s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0280832s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.028091s, 26652 KB] g=74, 396 evaluated, 395 expanded
[t=0.0285541s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0285638s, 26652 KB] g=80, 415 evaluated, 414 expanded
[t=0.0286966s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0287054s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.028713s, 26652 KB] g=82, 420 evaluated, 419 expanded
[t=0.028795s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0288033s, 26652 KB] g=82, 423 evaluated, 422 expanded
[t=0.0289084s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0289179s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0289257s, 26652 KB] g=84, 427 evaluated, 426 expanded
[t=0.029686s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0296959s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.029707s, 26652 KB] g=94, 458 evaluated, 457 expanded
[t=0.0328818s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0328935s, 26652 KB] g=120, 592 evaluated, 591 expanded
[t=0.0331324s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0331426s, 26652 KB] g=124, 601 evaluated, 600 expanded
[t=0.0332139s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0332227s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0332305s, 26652 KB] g=126, 604 evaluated, 603 expanded
[t=0.0335315s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0335409s, 26652 KB] g=138, 621 evaluated, 620 expanded
[t=0.0336022s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0336105s, 26652 KB] g=142, 625 evaluated, 624 expanded
[t=0.0336272s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0336354s, 26652 KB] g=143, 626 evaluated, 625 expanded
[t=0.0336501s, 26652 KB] Solution found!
[t=0.0336606s, 26652 KB] Actual search time: 0.0164871s
unstack b18 b15 (1)
put-down b18 (1)
unstack b2 b4 (1)
stack b2 b6 (1)
unstack b20 b19 (1)
stack b20 b1 (1)
unstack b19 b23 (1)
put-down b19 (1)
unstack b23 b22 (1)
stack b23 b20 (1)
unstack b22 b13 (1)
stack b22 b15 (1)
unstack b13 b7 (1)
put-down b13 (1)
pick-up b3 (1)
stack b3 b7 (1)
unstack b4 b11 (1)
put-down b4 (1)
unstack b22 b15 (1)
put-down b22 (1)
pick-up b15 (1)
stack b15 b19 (1)
pick-up b22 (1)
stack b22 b15 (1)
unstack b2 b6 (1)
put-down b2 (1)
unstack b6 b12 (1)
stack b6 b23 (1)
pick-up b2 (1)
stack b2 b6 (1)
pick-up b4 (1)
stack b4 b12 (1)
unstack b2 b6 (1)
put-down b2 (1)
unstack b3 b7 (1)
put-down b3 (1)
unstack b7 b10 (1)
stack b7 b2 (1)
pick-up b3 (1)
stack b3 b7 (1)
unstack b6 b23 (1)
put-down b6 (1)
unstack b23 b20 (1)
put-down b23 (1)
unstack b20 b1 (1)
put-down b20 (1)
unstack b1 b16 (1)
put-down b1 (1)
unstack b16 b17 (1)
stack b16 b14 (1)
pick-up b11 (1)
stack b11 b16 (1)
unstack b17 b5 (1)
put-down b17 (1)
unstack b5 b9 (1)
stack b5 b18 (1)
pick-up b13 (1)
stack b13 b17 (1)
pick-up b1 (1)
stack b1 b13 (1)
pick-up b20 (1)
stack b20 b1 (1)
pick-up b23 (1)
stack b23 b20 (1)
pick-up b6 (1)
stack b6 b23 (1)
unstack b9 b21 (1)
put-down b9 (1)
unstack b21 b8 (1)
put-down b21 (1)
pick-up b8 (1)
stack b8 b4 (1)
pick-up b9 (1)
stack b9 b21 (1)
unstack b11 b16 (1)
put-down b11 (1)
unstack b16 b14 (1)
put-down b16 (1)
pick-up b14 (1)
stack b14 b5 (1)
pick-up b16 (1)
stack b16 b14 (1)
pick-up b11 (1)
stack b11 b16 (1)
unstack b3 b7 (1)
put-down b3 (1)
unstack b7 b2 (1)
put-down b7 (1)
pick-up b2 (1)
stack b2 b6 (1)
pick-up b3 (1)
stack b3 b7 (1)
unstack b2 b6 (1)
put-down b2 (1)
unstack b6 b23 (1)
put-down b6 (1)
pick-up b2 (1)
stack b2 b6 (1)
unstack b3 b7 (1)
put-down b3 (1)
pick-up b7 (1)
stack b7 b2 (1)
pick-up b3 (1)
stack b3 b7 (1)
unstack b23 b20 (1)
put-down b23 (1)
unstack b20 b1 (1)
put-down b20 (1)
pick-up b23 (1)
stack b23 b20 (1)
unstack b1 b13 (1)
put-down b1 (1)
unstack b13 b17 (1)
put-down b13 (1)
pick-up b17 (1)
stack b17 b9 (1)
pick-up b13 (1)
stack b13 b17 (1)
pick-up b1 (1)
stack b1 b13 (1)
unstack b23 b20 (1)
put-down b23 (1)
pick-up b20 (1)
stack b20 b1 (1)
pick-up b23 (1)
stack b23 b20 (1)
unstack b3 b7 (1)
put-down b3 (1)
unstack b7 b2 (1)
put-down b7 (1)
pick-up b3 (1)
stack b3 b7 (1)
unstack b2 b6 (1)
put-down b2 (1)
pick-up b6 (1)
stack b6 b23 (1)
pick-up b2 (1)
stack b2 b6 (1)
unstack b3 b7 (1)
put-down b3 (1)
pick-up b7 (1)
stack b7 b2 (1)
pick-up b3 (1)
stack b3 b7 (1)
[t=0.0336696s, 26652 KB] Plan length: 144 step(s).
[t=0.0336696s, 26652 KB] Plan cost: 144
[t=0.0336696s, 26652 KB] Expanded 626 state(s).
[t=0.0336696s, 26652 KB] Reopened 0 state(s).
[t=0.0336696s, 26652 KB] Evaluated 627 state(s).
[t=0.0336696s, 26652 KB] Evaluations: 1254
[t=0.0336696s, 26652 KB] Generated 6231 state(s).
[t=0.0336696s, 26652 KB] Dead ends: 0 state(s).
[t=0.0336696s, 26652 KB] Number of registered states: 627
[t=0.0336696s, 26652 KB] Int hash set load factor: 627/1024 = 0.612305
[t=0.0336696s, 26652 KB] Int hash set resizes: 10
[t=0.0336696s, 26652 KB] Search time: 0.0165332s
[t=0.0336696s, 26652 KB] Total time: 0.0336696s
Solution found.
Peak memory: 26652 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.16s
