INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py ../bws_domain/bws_domain_actions.pddl ../bws_domain/problem_size_22/bws_problem_22_5.pddl --sas-file output.sas
Parsing...
Parsing: [0.010s CPU, 0.003s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.018s wall-clock]
1608 relevant atoms
1078 auxiliary atoms
2686 final queue length
4669 total queue pushes
Completing instantiation... [0.020s CPU, 0.022s wall-clock]
Instantiating: [0.030s CPU, 0.042s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.003s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.001s wall-clock]
Choosing groups...
23 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.010s CPU, 0.011s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.001s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.002s wall-clock]
Translating task: [0.040s CPU, 0.028s wall-clock]
1430 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
44 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.012s wall-clock]
Reordering and filtering variables...
45 of 45 variables necessary.
23 of 45 mutex groups necessary.
968 of 968 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.008s wall-clock]
Translator variables: 45
Translator derived variables: 0
Translator facts: 552
Translator goal facts: 22
Translator mutex groups: 23
Translator total mutex groups size: 529
Translator operators: 968
Translator axioms: 0
Translator task size: 8342
Translator peak memory: 36976 KB
Writing output... [0.010s CPU, 0.005s wall-clock]
Done! [0.120s CPU, 0.114s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=3.4195e-05s, 24488 KB] reading input...
[t=0.00274185s, 25340 KB] done reading input!
[t=0.00379397s, 25736 KB] Initializing landmark count heuristic...
[t=0.00384614s, 25736 KB] Generating landmark graph...
[t=0.00397076s, 25736 KB] Building a landmark graph with reasonable orders.
[t=0.00404281s, 25736 KB] Initializing Exploration...
[t=0.0043841s, 26000 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0181209s, 26528 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0182152s, 26528 KB] Landmarks generation time: 0.014245s
[t=0.018232s, 26528 KB] Discovered 106 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0182577s, 26528 KB] 619 edges
[t=0.0182716s, 26528 KB] approx. reasonable orders
[t=0.0198674s, 26528 KB] approx. obedient reasonable orders
[t=0.0199013s, 26528 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0199122s, 26528 KB] Landmarks generation time: 0.0160585s
[t=0.019924s, 26528 KB] Discovered 106 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0199358s, 26528 KB] 653 edges
[t=0.0199598s, 26528 KB] Landmark graph generation time: 0.0161225s
[t=0.019971s, 26528 KB] Landmark graph contains 106 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0199814s, 26528 KB] Landmark graph contains 653 orderings.
[t=0.0203139s, 26528 KB] Simplifying 3828 unary operators... done! [2904 unary operators]
[t=0.0213133s, 26528 KB] time to simplify: 0.00110782s
[t=0.0214844s, 26528 KB] Initializing additive heuristic...
[t=0.0215025s, 26528 KB] Initializing FF heuristic...
[t=0.0215703s, 26528 KB] Building successor generator...done!
[t=0.0217682s, 26528 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0217786s, 26528 KB] time for successor generation creation: 0.000162697s
[t=0.0217964s, 26528 KB] Variables: 45
[t=0.021806s, 26528 KB] FactPairs: 552
[t=0.0218171s, 26528 KB] Bytes per state: 20
[t=0.0219342s, 26528 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0219739s, 26528 KB] 45 initial landmarks, 22 goal landmarks
[t=0.0220519s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 61
[t=0.0220655s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0220763s, 26528 KB] g=0, 1 evaluated, 0 expanded
[t=0.022104s, 26528 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 61
[t=0.0221139s, 26528 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0221584s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0221685s, 26528 KB] g=1, 2 evaluated, 1 expanded
[t=0.0222101s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 58
[t=0.0222209s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0222328s, 26528 KB] g=2, 3 evaluated, 2 expanded
[t=0.0222986s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 57
[t=0.0223091s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0223195s, 26528 KB] g=3, 5 evaluated, 4 expanded
[t=0.0223581s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.022368s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.022379s, 26528 KB] g=4, 6 evaluated, 5 expanded
[t=0.0224922s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0225047s, 26528 KB] g=6, 10 evaluated, 9 expanded
[t=0.0226937s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0227044s, 26528 KB] g=7, 17 evaluated, 16 expanded
[t=0.0227446s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0227552s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0227655s, 26528 KB] g=8, 18 evaluated, 17 expanded
[t=0.0229134s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0229256s, 26528 KB] g=10, 23 evaluated, 22 expanded
[t=0.023066s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0230873s, 26528 KB] g=11, 28 evaluated, 27 expanded
[t=0.0231281s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0231388s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.023149s, 26528 KB] g=12, 29 evaluated, 28 expanded
[t=0.0233154s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0233283s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0233394s, 26528 KB] g=14, 35 evaluated, 34 expanded
[t=0.0234796s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.023491s, 26528 KB] g=16, 40 evaluated, 39 expanded
[t=0.0236524s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0236634s, 26528 KB] g=18, 46 evaluated, 45 expanded
[t=0.0237509s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0237745s, 26528 KB] g=18, 49 evaluated, 48 expanded
[t=0.0239374s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.023948s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0239601s, 26528 KB] g=20, 55 evaluated, 54 expanded
[t=0.0240007s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0240108s, 26528 KB] g=21, 56 evaluated, 55 expanded
[t=0.024356s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0243669s, 26528 KB] g=24, 69 evaluated, 68 expanded
[t=0.0245334s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0245441s, 26528 KB] g=22, 75 evaluated, 74 expanded
[t=0.0246856s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0246966s, 26528 KB] g=26, 80 evaluated, 79 expanded
[t=0.0251805s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0251936s, 26528 KB] g=28, 98 evaluated, 97 expanded
[t=0.0256192s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0256333s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0256448s, 26528 KB] g=30, 114 evaluated, 113 expanded
[t=0.0258635s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0258762s, 26528 KB] g=32, 122 evaluated, 121 expanded
[t=0.0259194s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0259316s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0259437s, 26528 KB] g=32, 123 evaluated, 122 expanded
[t=0.0262098s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0262225s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0262336s, 26528 KB] g=34, 132 evaluated, 131 expanded
[t=0.0264537s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0264683s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0264805s, 26528 KB] g=36, 140 evaluated, 139 expanded
[t=0.0266249s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0266431s, 26528 KB] g=37, 145 evaluated, 144 expanded
[t=0.0267942s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0268072s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0268183s, 26528 KB] g=38, 150 evaluated, 149 expanded
[t=0.0269383s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0269508s, 26528 KB] g=39, 154 evaluated, 153 expanded
[t=0.0270974s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0271107s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0271234s, 26528 KB] g=40, 159 evaluated, 158 expanded
[t=0.0272154s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0272279s, 26528 KB] g=41, 162 evaluated, 161 expanded
[t=0.0274483s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0274619s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.027473s, 26528 KB] g=44, 170 evaluated, 169 expanded
[t=0.0276413s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0276542s, 26528 KB] g=46, 176 evaluated, 175 expanded
[t=0.0277208s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0277317s, 26528 KB] g=46, 178 evaluated, 177 expanded
[t=0.0279711s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0279833s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0279948s, 26528 KB] g=48, 187 evaluated, 186 expanded
[t=0.0281337s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0281458s, 26528 KB] g=50, 192 evaluated, 191 expanded
[t=0.0282852s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0282968s, 26528 KB] g=51, 197 evaluated, 196 expanded
[t=0.0283366s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0283468s, 26528 KB] g=52, 198 evaluated, 197 expanded
[t=0.0284619s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0284726s, 26528 KB] g=53, 202 evaluated, 201 expanded
[t=0.028512s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0285237s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0285342s, 26528 KB] g=54, 203 evaluated, 202 expanded
[t=0.0286724s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.028684s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0286946s, 26528 KB] g=56, 208 evaluated, 207 expanded
[t=0.0293359s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.029351s, 26528 KB] g=64, 233 evaluated, 232 expanded
[t=0.0295181s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0295312s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0295431s, 26528 KB] g=66, 239 evaluated, 238 expanded
[t=0.032485s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.032611s, 26528 KB] g=80, 332 evaluated, 331 expanded
[t=0.0327423s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0327548s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.032769s, 26528 KB] g=82, 336 evaluated, 335 expanded
[t=0.0330058s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0330165s, 26528 KB] g=86, 345 evaluated, 344 expanded
[t=0.033103s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0331153s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0331281s, 26528 KB] g=88, 348 evaluated, 347 expanded
[t=0.0351197s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.035136s, 26528 KB] g=110, 438 evaluated, 437 expanded
[t=0.0353099s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0353204s, 26528 KB] g=114, 447 evaluated, 446 expanded
[t=0.0353841s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0353942s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0354055s, 26528 KB] g=116, 450 evaluated, 449 expanded
[t=0.0355739s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0355839s, 26528 KB] g=124, 460 evaluated, 459 expanded
[t=0.0356524s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0356622s, 26528 KB] g=128, 464 evaluated, 463 expanded
[t=0.0356848s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0356946s, 26528 KB] g=129, 465 evaluated, 464 expanded
[t=0.0357135s, 26528 KB] Solution found!
[t=0.0357264s, 26528 KB] Actual search time: 0.013736s
unstack b19 b20 (1)
put-down b19 (1)
unstack b20 b12 (1)
put-down b20 (1)
unstack b21 b22 (1)
put-down b21 (1)
unstack b22 b17 (1)
stack b22 b19 (1)
unstack b17 b7 (1)
put-down b17 (1)
unstack b7 b9 (1)
put-down b7 (1)
pick-up b12 (1)
stack b12 b7 (1)
unstack b2 b14 (1)
put-down b2 (1)
unstack b14 b5 (1)
put-down b14 (1)
unstack b5 b13 (1)
put-down b5 (1)
unstack b13 b15 (1)
put-down b13 (1)
unstack b15 b16 (1)
put-down b15 (1)
unstack b16 b6 (1)
put-down b16 (1)
unstack b6 b4 (1)
stack b6 b2 (1)
pick-up b13 (1)
stack b13 b6 (1)
unstack b4 b3 (1)
stack b4 b5 (1)
pick-up b14 (1)
stack b14 b4 (1)
unstack b3 b8 (1)
stack b3 b17 (1)
pick-up b16 (1)
stack b16 b3 (1)
pick-up b21 (1)
stack b21 b15 (1)
unstack b8 b10 (1)
put-down b8 (1)
unstack b10 b11 (1)
stack b10 b21 (1)
unstack b11 b1 (1)
stack b11 b9 (1)
pick-up b1 (1)
stack b1 b10 (1)
unstack b11 b9 (1)
put-down b11 (1)
unstack b9 b18 (1)
stack b9 b16 (1)
pick-up b8 (1)
stack b8 b18 (1)
pick-up b11 (1)
stack b11 b9 (1)
unstack b13 b6 (1)
put-down b13 (1)
unstack b6 b2 (1)
put-down b6 (1)
pick-up b2 (1)
stack b2 b1 (1)
pick-up b6 (1)
stack b6 b2 (1)
pick-up b13 (1)
stack b13 b6 (1)
unstack b11 b9 (1)
put-down b11 (1)
unstack b9 b16 (1)
put-down b9 (1)
pick-up b11 (1)
stack b11 b9 (1)
unstack b16 b3 (1)
put-down b16 (1)
unstack b3 b17 (1)
put-down b3 (1)
pick-up b17 (1)
stack b17 b14 (1)
pick-up b3 (1)
stack b3 b17 (1)
pick-up b16 (1)
stack b16 b3 (1)
unstack b11 b9 (1)
put-down b11 (1)
pick-up b9 (1)
stack b9 b16 (1)
pick-up b11 (1)
stack b11 b9 (1)
unstack b13 b6 (1)
put-down b13 (1)
unstack b6 b2 (1)
put-down b6 (1)
unstack b2 b1 (1)
put-down b2 (1)
pick-up b6 (1)
stack b6 b2 (1)
pick-up b13 (1)
stack b13 b6 (1)
unstack b1 b10 (1)
put-down b1 (1)
unstack b10 b21 (1)
put-down b10 (1)
pick-up b1 (1)
stack b1 b10 (1)
unstack b21 b15 (1)
put-down b21 (1)
pick-up b15 (1)
stack b15 b11 (1)
pick-up b21 (1)
stack b21 b15 (1)
unstack b1 b10 (1)
put-down b1 (1)
pick-up b10 (1)
stack b10 b21 (1)
pick-up b1 (1)
stack b1 b10 (1)
unstack b13 b6 (1)
put-down b13 (1)
unstack b6 b2 (1)
put-down b6 (1)
pick-up b13 (1)
stack b13 b6 (1)
pick-up b2 (1)
stack b2 b1 (1)
unstack b13 b6 (1)
put-down b13 (1)
pick-up b6 (1)
stack b6 b2 (1)
pick-up b13 (1)
stack b13 b6 (1)
[t=0.0357372s, 26528 KB] Plan length: 130 step(s).
[t=0.0357372s, 26528 KB] Plan cost: 130
[t=0.0357372s, 26528 KB] Expanded 465 state(s).
[t=0.0357372s, 26528 KB] Reopened 0 state(s).
[t=0.0357372s, 26528 KB] Evaluated 466 state(s).
[t=0.0357372s, 26528 KB] Evaluations: 932
[t=0.0357372s, 26528 KB] Generated 4484 state(s).
[t=0.0357372s, 26528 KB] Dead ends: 0 state(s).
[t=0.0357372s, 26528 KB] Number of registered states: 466
[t=0.0357372s, 26528 KB] Int hash set load factor: 466/512 = 0.910156
[t=0.0357372s, 26528 KB] Int hash set resizes: 9
[t=0.0357372s, 26528 KB] Search time: 0.0138036s
[t=0.0357372s, 26528 KB] Total time: 0.0357372s
Solution found.
Peak memory: 26528 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.20s
