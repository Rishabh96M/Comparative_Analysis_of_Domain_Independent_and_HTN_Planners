INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py ../bws_domain/bws_domain_actions.pddl ../bws_domain/problem_size_29/bws_problem_29_6.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.018s wall-clock]
2728 relevant atoms
1827 auxiliary atoms
4555 final queue length
7983 total queue pushes
Completing instantiation... [0.040s CPU, 0.032s wall-clock]
Instantiating: [0.060s CPU, 0.052s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
30 uncovered facts
Choosing groups: [0.000s CPU, 0.002s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.000s CPU, 0.009s wall-clock]
Building STRIPS to SAS dictionary... [0.010s CPU, 0.001s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.001s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.002s wall-clock]
Translating task: [0.050s CPU, 0.052s wall-clock]
2494 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
58 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.022s wall-clock]
Reordering and filtering variables...
59 of 59 variables necessary.
30 of 59 mutex groups necessary.
1682 of 1682 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.012s wall-clock]
Translator variables: 59
Translator derived variables: 0
Translator facts: 930
Translator goal facts: 29
Translator mutex groups: 30
Translator total mutex groups size: 900
Translator operators: 1682
Translator axioms: 0
Translator task size: 14446
Translator peak memory: 40824 KB
Writing output... [0.000s CPU, 0.008s wall-clock]
Done! [0.160s CPU, 0.163s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.6013e-05s, 24488 KB] reading input...
[t=0.00508988s, 26220 KB] done reading input!
[t=0.00610236s, 26616 KB] Initializing landmark count heuristic...
[t=0.00615854s, 26616 KB] Generating landmark graph...
[t=0.00626028s, 26748 KB] Building a landmark graph with reasonable orders.
[t=0.00636807s, 26748 KB] Initializing Exploration...
[t=0.00686806s, 27200 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.032492s, 27992 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0326208s, 27992 KB] Landmarks generation time: 0.026367s
[t=0.0326893s, 27992 KB] Discovered 134 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0327665s, 27992 KB] 687 edges
[t=0.0327966s, 27992 KB] approx. reasonable orders
[t=0.0360394s, 27992 KB] approx. obedient reasonable orders
[t=0.036135s, 27992 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0361474s, 27992 KB] Landmarks generation time: 0.0299861s
[t=0.0361588s, 27992 KB] Discovered 134 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0361678s, 27992 KB] 713 edges
[t=0.036181s, 27992 KB] Landmark graph generation time: 0.0300296s
[t=0.0361897s, 27992 KB] Landmark graph contains 134 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0362134s, 27992 KB] Landmark graph contains 713 orderings.
[t=0.0368293s, 28016 KB] Simplifying 6670 unary operators... done! [5046 unary operators]
[t=0.038443s, 28016 KB] time to simplify: 0.00172001s
[t=0.038648s, 28016 KB] Initializing additive heuristic...
[t=0.0386673s, 28016 KB] Initializing FF heuristic...
[t=0.0387222s, 28016 KB] Building successor generator...done!
[t=0.0390056s, 28016 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0390158s, 28016 KB] time for successor generation creation: 0.000251819s
[t=0.0390298s, 28016 KB] Variables: 59
[t=0.0390389s, 28016 KB] FactPairs: 930
[t=0.0390481s, 28016 KB] Bytes per state: 24
[t=0.0391343s, 28016 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0391697s, 28016 KB] 59 initial landmarks, 29 goal landmarks
[t=0.0392483s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 75
[t=0.0392583s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 53
[t=0.0392671s, 28016 KB] g=0, 1 evaluated, 0 expanded
[t=0.0392815s, 28016 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 75
[t=0.0392907s, 28016 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 53
[t=0.0395945s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 52
[t=0.0396053s, 28016 KB] g=2, 8 evaluated, 7 expanded
[t=0.0396997s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 74
[t=0.0397094s, 28016 KB] g=2, 10 evaluated, 9 expanded
[t=0.0402086s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 73
[t=0.0402207s, 28016 KB] g=4, 22 evaluated, 21 expanded
[t=0.0402889s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 51
[t=0.0402987s, 28016 KB] g=5, 23 evaluated, 22 expanded
[t=0.0403892s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 71
[t=0.0403984s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 50
[t=0.0404066s, 28016 KB] g=6, 25 evaluated, 24 expanded
[t=0.0407109s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 70
[t=0.0407228s, 28016 KB] g=8, 32 evaluated, 31 expanded
[t=0.0409011s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 68
[t=0.0409113s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 48
[t=0.0409202s, 28016 KB] g=8, 36 evaluated, 35 expanded
[t=0.0412199s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 47
[t=0.0412365s, 28016 KB] g=10, 43 evaluated, 42 expanded
[t=0.0413578s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 67
[t=0.0413704s, 28016 KB] g=10, 45 evaluated, 44 expanded
[t=0.0422446s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 66
[t=0.0422786s, 28016 KB] g=12, 59 evaluated, 58 expanded
[t=0.0430799s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 65
[t=0.0431048s, 28016 KB] g=14, 75 evaluated, 74 expanded
[t=0.0436513s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 64
[t=0.0436647s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0436741s, 28016 KB] g=14, 88 evaluated, 87 expanded
[t=0.0440124s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 63
[t=0.0440238s, 28016 KB] g=16, 96 evaluated, 95 expanded
[t=0.0440762s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 62
[t=0.0440858s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.0440943s, 28016 KB] g=16, 97 evaluated, 96 expanded
[t=0.0443454s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 61
[t=0.0443552s, 28016 KB] g=18, 103 evaluated, 102 expanded
[t=0.0449203s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 60
[t=0.0449312s, 28016 KB] g=20, 117 evaluated, 116 expanded
[t=0.0452165s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.0452271s, 28016 KB] g=22, 124 evaluated, 123 expanded
[t=0.0456971s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 58
[t=0.0457097s, 28016 KB] g=24, 135 evaluated, 134 expanded
[t=0.0461291s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 57
[t=0.0461398s, 28016 KB] g=26, 145 evaluated, 144 expanded
[t=0.0466753s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.046686s, 28016 KB] g=28, 158 evaluated, 157 expanded
[t=0.0472606s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0472726s, 28016 KB] g=30, 172 evaluated, 171 expanded
[t=0.0480671s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0480837s, 28016 KB] g=32, 191 evaluated, 190 expanded
[t=0.0490321s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0490472s, 28016 KB] g=34, 214 evaluated, 213 expanded
[t=0.0491425s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0491531s, 28016 KB] g=35, 216 evaluated, 215 expanded
[t=0.0492074s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0492174s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0492267s, 28016 KB] g=36, 217 evaluated, 216 expanded
[t=0.0495647s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.049575s, 28016 KB] g=37, 225 evaluated, 224 expanded
[t=0.0496294s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0496396s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0496486s, 28016 KB] g=38, 226 evaluated, 225 expanded
[t=0.049745s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0497622s, 28016 KB] g=39, 228 evaluated, 227 expanded
[t=0.0506838s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0506956s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0507048s, 28016 KB] g=42, 251 evaluated, 250 expanded
[t=0.0509599s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0509737s, 28016 KB] g=43, 256 evaluated, 255 expanded
[t=0.0510438s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0510543s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0510631s, 28016 KB] g=44, 257 evaluated, 256 expanded
[t=0.0515917s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0516034s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0516122s, 28016 KB] g=46, 270 evaluated, 269 expanded
[t=0.0521836s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0521984s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0522072s, 28016 KB] g=48, 284 evaluated, 283 expanded
[t=0.0527755s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0527873s, 28016 KB] g=50, 298 evaluated, 297 expanded
[t=0.0529216s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0529323s, 28016 KB] g=50, 301 evaluated, 300 expanded
[t=0.0536957s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0537097s, 28016 KB] g=52, 320 evaluated, 319 expanded
[t=0.0539608s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0539715s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.053981s, 28016 KB] g=52, 326 evaluated, 325 expanded
[t=0.0544541s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0544654s, 28016 KB] g=54, 338 evaluated, 337 expanded
[t=0.0545946s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0546071s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0546166s, 28016 KB] g=54, 341 evaluated, 340 expanded
[t=0.055046s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0550639s, 28016 KB] g=56, 352 evaluated, 351 expanded
[t=0.0551904s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0552021s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0552118s, 28016 KB] g=56, 355 evaluated, 354 expanded
[t=0.0556225s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0556473s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0556573s, 28016 KB] g=58, 365 evaluated, 364 expanded
[t=0.0560054s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0560195s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0560293s, 28016 KB] g=60, 374 evaluated, 373 expanded
[t=0.0562994s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0563287s, 28016 KB] g=60, 381 evaluated, 380 expanded
[t=0.0565985s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0566124s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0566231s, 28016 KB] g=62, 388 evaluated, 387 expanded
[t=0.0576839s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0576995s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0577085s, 28016 KB] g=66, 416 evaluated, 415 expanded
[t=0.0579829s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0579954s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0580043s, 28016 KB] g=68, 423 evaluated, 422 expanded
[t=0.0592881s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0593024s, 28016 KB] g=73, 458 evaluated, 457 expanded
[t=0.0593512s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0593614s, 28016 KB] g=74, 459 evaluated, 458 expanded
[t=0.0594113s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0594213s, 28016 KB] g=72, 460 evaluated, 459 expanded
[t=0.0598692s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0598804s, 28016 KB] g=74, 472 evaluated, 471 expanded
[t=0.0599672s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0599799s, 28016 KB] g=76, 473 evaluated, 472 expanded
[t=0.0604352s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0604466s, 28016 KB] g=78, 485 evaluated, 484 expanded
[t=0.0609556s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0609693s, 28016 KB] g=80, 498 evaluated, 497 expanded
[t=0.0616453s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0616626s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0616725s, 28016 KB] g=84, 516 evaluated, 515 expanded
[t=0.0618627s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0618768s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.061886s, 28016 KB] g=86, 521 evaluated, 520 expanded
[t=0.0632599s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0632805s, 28016 KB] g=94, 559 evaluated, 558 expanded
[t=0.063513s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0635228s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0635312s, 28016 KB] g=96, 565 evaluated, 564 expanded
[t=0.064818s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0648313s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0648409s, 28016 KB] g=108, 598 evaluated, 597 expanded
[t=0.0652031s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0652148s, 28016 KB] g=112, 607 evaluated, 606 expanded
[t=0.0653346s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0653506s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0653599s, 28016 KB] g=114, 610 evaluated, 609 expanded
[t=0.069164s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0692053s, 28016 KB] g=144, 715 evaluated, 714 expanded
[t=0.0694638s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0694746s, 28016 KB] g=148, 724 evaluated, 723 expanded
[t=0.0695636s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0695738s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0695823s, 28016 KB] g=150, 727 evaluated, 726 expanded
[t=0.0699671s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0699854s, 28016 KB] g=162, 743 evaluated, 742 expanded
[t=0.070084s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0700961s, 28016 KB] g=166, 747 evaluated, 746 expanded
[t=0.0701265s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0701373s, 28016 KB] g=167, 748 evaluated, 747 expanded
[t=0.0701557s, 28016 KB] Solution found!
[t=0.0701691s, 28016 KB] Actual search time: 0.0309868s
unstack b17 b1 (1)
stack b17 b5 (1)
unstack b1 b11 (1)
put-down b1 (1)
unstack b11 b8 (1)
put-down b11 (1)
unstack b8 b15 (1)
stack b8 b11 (1)
unstack b15 b22 (1)
stack b15 b29 (1)
unstack b26 b14 (1)
put-down b26 (1)
unstack b14 b2 (1)
stack b14 b8 (1)
pick-up b2 (1)
stack b2 b26 (1)
unstack b22 b19 (1)
put-down b22 (1)
unstack b19 b18 (1)
put-down b19 (1)
unstack b15 b29 (1)
put-down b15 (1)
unstack b17 b5 (1)
put-down b17 (1)
unstack b29 b13 (1)
put-down b29 (1)
unstack b13 b24 (1)
put-down b13 (1)
unstack b24 b6 (1)
put-down b24 (1)
unstack b5 b3 (1)
stack b5 b28 (1)
unstack b6 b12 (1)
stack b6 b15 (1)
unstack b12 b27 (1)
put-down b12 (1)
unstack b27 b16 (1)
stack b27 b13 (1)
unstack b16 b23 (1)
put-down b16 (1)
unstack b23 b21 (1)
stack b23 b17 (1)
unstack b21 b7 (1)
stack b21 b6 (1)
unstack b7 b9 (1)
stack b7 b14 (1)
unstack b9 b25 (1)
stack b9 b20 (1)
pick-up b19 (1)
stack b19 b23 (1)
pick-up b22 (1)
stack b22 b9 (1)
pick-up b24 (1)
stack b24 b7 (1)
pick-up b25 (1)
stack b25 b22 (1)
pick-up b16 (1)
stack b16 b25 (1)
pick-up b3 (1)
stack b3 b19 (1)
pick-up b29 (1)
stack b29 b3 (1)
unstack b2 b26 (1)
put-down b2 (1)
pick-up b26 (1)
stack b26 b18 (1)
pick-up b2 (1)
stack b2 b26 (1)
unstack b5 b28 (1)
put-down b5 (1)
unstack b28 b4 (1)
put-down b28 (1)
unstack b4 b10 (1)
stack b4 b1 (1)
pick-up b10 (1)
stack b10 b24 (1)
pick-up b28 (1)
stack b28 b4 (1)
pick-up b5 (1)
stack b5 b28 (1)
unstack b27 b13 (1)
put-down b27 (1)
pick-up b13 (1)
stack b13 b12 (1)
pick-up b27 (1)
stack b27 b13 (1)
unstack b21 b6 (1)
put-down b21 (1)
unstack b6 b15 (1)
put-down b6 (1)
pick-up b15 (1)
stack b15 b29 (1)
pick-up b6 (1)
stack b6 b15 (1)
pick-up b21 (1)
stack b21 b6 (1)
unstack b5 b28 (1)
put-down b5 (1)
unstack b28 b4 (1)
put-down b28 (1)
pick-up b5 (1)
stack b5 b28 (1)
unstack b4 b1 (1)
put-down b4 (1)
pick-up b1 (1)
stack b1 b10 (1)
pick-up b4 (1)
stack b4 b1 (1)
unstack b5 b28 (1)
put-down b5 (1)
pick-up b28 (1)
stack b28 b4 (1)
pick-up b5 (1)
stack b5 b28 (1)
unstack b21 b6 (1)
put-down b21 (1)
unstack b6 b15 (1)
put-down b6 (1)
pick-up b21 (1)
stack b21 b6 (1)
unstack b15 b29 (1)
put-down b15 (1)
unstack b29 b3 (1)
put-down b29 (1)
pick-up b15 (1)
stack b15 b29 (1)
unstack b21 b6 (1)
put-down b21 (1)
pick-up b6 (1)
stack b6 b15 (1)
pick-up b21 (1)
stack b21 b6 (1)
unstack b3 b19 (1)
put-down b3 (1)
unstack b19 b23 (1)
put-down b19 (1)
pick-up b3 (1)
stack b3 b19 (1)
unstack b23 b17 (1)
put-down b23 (1)
pick-up b17 (1)
stack b17 b5 (1)
pick-up b23 (1)
stack b23 b17 (1)
unstack b3 b19 (1)
put-down b3 (1)
pick-up b19 (1)
stack b19 b23 (1)
pick-up b3 (1)
stack b3 b19 (1)
unstack b21 b6 (1)
put-down b21 (1)
unstack b6 b15 (1)
put-down b6 (1)
pick-up b21 (1)
stack b21 b6 (1)
unstack b15 b29 (1)
put-down b15 (1)
pick-up b29 (1)
stack b29 b3 (1)
pick-up b15 (1)
stack b15 b29 (1)
unstack b21 b6 (1)
put-down b21 (1)
pick-up b6 (1)
stack b6 b15 (1)
pick-up b21 (1)
stack b21 b6 (1)
[t=0.0701793s, 28016 KB] Plan length: 168 step(s).
[t=0.0701793s, 28016 KB] Plan cost: 168
[t=0.0701793s, 28016 KB] Expanded 748 state(s).
[t=0.0701793s, 28016 KB] Reopened 0 state(s).
[t=0.0701793s, 28016 KB] Evaluated 749 state(s).
[t=0.0701793s, 28016 KB] Evaluations: 1498
[t=0.0701793s, 28016 KB] Generated 8182 state(s).
[t=0.0701793s, 28016 KB] Dead ends: 0 state(s).
[t=0.0701793s, 28016 KB] Number of registered states: 749
[t=0.0701793s, 28016 KB] Int hash set load factor: 749/1024 = 0.731445
[t=0.0701793s, 28016 KB] Int hash set resizes: 10
[t=0.0701793s, 28016 KB] Search time: 0.0310454s
[t=0.0701793s, 28016 KB] Total time: 0.0701793s
Solution found.
Peak memory: 28016 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.28s
