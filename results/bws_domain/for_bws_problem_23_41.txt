INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_23/bws_problem_23_41.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.010s wall-clock]
1750 relevant atoms
1173 auxiliary atoms
2923 final queue length
5088 total queue pushes
Completing instantiation... [0.020s CPU, 0.018s wall-clock]
Instantiating: [0.030s CPU, 0.030s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.010s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
24 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.007s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.027s wall-clock]
1564 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
46 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.012s wall-clock]
Reordering and filtering variables...
47 of 47 variables necessary.
24 of 47 mutex groups necessary.
1058 of 1058 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.007s wall-clock]
Translator variables: 47
Translator derived variables: 0
Translator facts: 600
Translator goal facts: 18
Translator mutex groups: 24
Translator total mutex groups size: 576
Translator operators: 1058
Translator axioms: 0
Translator task size: 9107
Translator peak memory: 37488 KB
Writing output... [0.000s CPU, 0.005s wall-clock]
Done! [0.090s CPU, 0.094s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.9574e-05s, 24488 KB] reading input...
[t=0.00312516s, 25428 KB] done reading input!
[t=0.00391817s, 25824 KB] Initializing landmark count heuristic...
[t=0.00394766s, 25824 KB] Generating landmark graph...
[t=0.00401484s, 25824 KB] Building a landmark graph with reasonable orders.
[t=0.00407875s, 25956 KB] Initializing Exploration...
[t=0.00438612s, 26256 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0165926s, 26784 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0167371s, 26784 KB] Landmarks generation time: 0.0127243s
[t=0.0167521s, 26784 KB] Discovered 101 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0167726s, 26784 KB] 718 edges
[t=0.016784s, 26784 KB] approx. reasonable orders
[t=0.017257s, 26784 KB] approx. obedient reasonable orders
[t=0.0173037s, 26784 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0173147s, 26784 KB] Landmarks generation time: 0.0133637s
[t=0.0173245s, 26784 KB] Discovered 101 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0173328s, 26784 KB] 723 edges
[t=0.0173427s, 26784 KB] Landmark graph generation time: 0.0134031s
[t=0.0173524s, 26784 KB] Landmark graph contains 101 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0173607s, 26784 KB] Landmark graph contains 723 orderings.
[t=0.0178555s, 26784 KB] Simplifying 4186 unary operators... done! [3174 unary operators]
[t=0.0190511s, 26784 KB] time to simplify: 0.00122297s
[t=0.019152s, 26784 KB] Initializing additive heuristic...
[t=0.0191681s, 26784 KB] Initializing FF heuristic...
[t=0.019247s, 26784 KB] Building successor generator...done!
[t=0.0195131s, 26936 KB] peak memory difference for successor generator creation: 152 KB
[t=0.0195229s, 26936 KB] time for successor generation creation: 0.000226355s
[t=0.0195388s, 26936 KB] Variables: 47
[t=0.0195476s, 26936 KB] FactPairs: 600
[t=0.0195555s, 26936 KB] Bytes per state: 20
[t=0.019671s, 26936 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0197077s, 26936 KB] 47 initial landmarks, 18 goal landmarks
[t=0.0197742s, 26936 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0197844s, 26936 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0197931s, 26936 KB] g=0, 1 evaluated, 0 expanded
[t=0.019806s, 26936 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0198148s, 26936 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0199412s, 26936 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0199527s, 26936 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0199608s, 26936 KB] g=2, 5 evaluated, 4 expanded
[t=0.0200706s, 26936 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0200797s, 26936 KB] g=4, 9 evaluated, 8 expanded
[t=0.0202136s, 26936 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0202227s, 26936 KB] g=6, 14 evaluated, 13 expanded
[t=0.0202565s, 26936 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0202651s, 26936 KB] g=6, 15 evaluated, 14 expanded
[t=0.0203993s, 26936 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0204085s, 26936 KB] g=7, 20 evaluated, 19 expanded
[t=0.0206879s, 26936 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0206983s, 26936 KB] g=10, 31 evaluated, 30 expanded
[t=0.0207865s, 26936 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0207966s, 26936 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0208055s, 26936 KB] g=10, 34 evaluated, 33 expanded
[t=0.0209433s, 26936 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0209526s, 26936 KB] g=12, 39 evaluated, 38 expanded
[t=0.0212355s, 26936 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0212449s, 26936 KB] g=14, 50 evaluated, 49 expanded
[t=0.0214351s, 26936 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0214501s, 26936 KB] g=16, 57 evaluated, 56 expanded
[t=0.0214868s, 26936 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0214961s, 26936 KB] g=16, 58 evaluated, 57 expanded
[t=0.0218814s, 26936 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0218909s, 26936 KB] g=18, 73 evaluated, 72 expanded
[t=0.0219568s, 26936 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0219657s, 26936 KB] g=19, 75 evaluated, 74 expanded
[t=0.0223857s, 26936 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0223967s, 26936 KB] g=22, 90 evaluated, 89 expanded
[t=0.0226996s, 26936 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.022709s, 26936 KB] g=22, 101 evaluated, 100 expanded
[t=0.022746s, 26936 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0227552s, 26936 KB] g=24, 102 evaluated, 101 expanded
[t=0.0232529s, 26936 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0232655s, 26936 KB] g=26, 120 evaluated, 119 expanded
[t=0.0236769s, 26936 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0236875s, 26936 KB] g=28, 135 evaluated, 134 expanded
[t=0.0241139s, 26936 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.024124s, 26936 KB] g=30, 151 evaluated, 150 expanded
[t=0.024449s, 26936 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0244588s, 26936 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0244678s, 26936 KB] g=32, 163 evaluated, 162 expanded
[t=0.0247985s, 26936 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0248081s, 26936 KB] g=34, 175 evaluated, 174 expanded
[t=0.0248459s, 26936 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0248547s, 26936 KB] g=34, 176 evaluated, 175 expanded
[t=0.0254385s, 26936 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0254498s, 26936 KB] g=36, 198 evaluated, 197 expanded
[t=0.0254877s, 26936 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0254968s, 26936 KB] g=36, 199 evaluated, 198 expanded
[t=0.0260655s, 26936 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0260768s, 26936 KB] g=38, 220 evaluated, 219 expanded
[t=0.0261701s, 26936 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0261794s, 26936 KB] g=38, 223 evaluated, 222 expanded
[t=0.0263983s, 26936 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0264087s, 26936 KB] g=39, 231 evaluated, 230 expanded
[t=0.0264733s, 26936 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0264823s, 26936 KB] g=40, 233 evaluated, 232 expanded
[t=0.0267247s, 26936 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0267347s, 26936 KB] g=40, 241 evaluated, 240 expanded
[t=0.0271048s, 26936 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.02712s, 26936 KB] g=42, 254 evaluated, 253 expanded
[t=0.0273407s, 26936 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0273518s, 26936 KB] g=42, 261 evaluated, 260 expanded
[t=0.0277542s, 26936 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0277721s, 26936 KB] g=44, 275 evaluated, 274 expanded
[t=0.0282189s, 26936 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0282425s, 26936 KB] g=46, 290 evaluated, 289 expanded
[t=0.0283619s, 26936 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0283774s, 26936 KB] g=46, 293 evaluated, 292 expanded
[t=0.0287481s, 26936 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0287601s, 26936 KB] g=48, 306 evaluated, 305 expanded
[t=0.0289649s, 26936 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.028975s, 26936 KB] g=48, 313 evaluated, 312 expanded
[t=0.0292549s, 26936 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0292664s, 26936 KB] g=50, 323 evaluated, 322 expanded
[t=0.0294958s, 26936 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0295058s, 26936 KB] g=50, 331 evaluated, 330 expanded
[t=0.0296783s, 26936 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0296882s, 26936 KB] g=52, 337 evaluated, 336 expanded
[t=0.0299662s, 26936 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.029981s, 26936 KB] g=52, 347 evaluated, 346 expanded
[t=0.0302832s, 26936 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0303015s, 26936 KB] g=54, 358 evaluated, 357 expanded
[t=0.0304777s, 26936 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0304962s, 26936 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0305047s, 26936 KB] g=56, 364 evaluated, 363 expanded
[t=0.030874s, 26936 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0308889s, 26936 KB] g=59, 377 evaluated, 376 expanded
[t=0.0309655s, 26936 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0310028s, 26936 KB] g=60, 379 evaluated, 378 expanded
[t=0.0312677s, 26936 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0312844s, 26936 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.031294s, 26936 KB] g=62, 384 evaluated, 383 expanded
[t=0.0315644s, 26936 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0315739s, 26936 KB] g=66, 393 evaluated, 392 expanded
[t=0.0316901s, 26936 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0316995s, 26936 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.031708s, 26936 KB] g=68, 397 evaluated, 396 expanded
[t=0.0319392s, 26936 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0319498s, 26936 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0319583s, 26936 KB] g=72, 405 evaluated, 404 expanded
[t=0.0320735s, 26936 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0320906s, 26936 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0320993s, 26936 KB] g=74, 409 evaluated, 408 expanded
[t=0.0327495s, 26936 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0327604s, 26936 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.032769s, 26936 KB] g=82, 433 evaluated, 432 expanded
[t=0.0328564s, 26936 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0328653s, 26936 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.032874s, 26936 KB] g=84, 436 evaluated, 435 expanded
[t=0.0353529s, 26936 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0353701s, 26936 KB] g=114, 539 evaluated, 538 expanded
[t=0.0355851s, 26936 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0355955s, 26936 KB] g=118, 548 evaluated, 547 expanded
[t=0.0356726s, 26936 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0356835s, 26936 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0356921s, 26936 KB] g=120, 551 evaluated, 550 expanded
[t=0.0360373s, 26936 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0360518s, 26936 KB] g=132, 569 evaluated, 568 expanded
[t=0.0361271s, 26936 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0361372s, 26936 KB] g=136, 573 evaluated, 572 expanded
[t=0.0361556s, 26936 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0361643s, 26936 KB] g=137, 574 evaluated, 573 expanded
[t=0.0361805s, 26936 KB] Solution found!
[t=0.0361919s, 26936 KB] Actual search time: 0.0164816s
unstack b21 b5 (1)
put-down b21 (1)
unstack b10 b1 (1)
put-down b10 (1)
unstack b1 b17 (1)
stack b1 b18 (1)
unstack b17 b7 (1)
put-down b17 (1)
unstack b7 b23 (1)
stack b7 b10 (1)
unstack b23 b3 (1)
put-down b23 (1)
unstack b3 b12 (1)
put-down b3 (1)
unstack b12 b8 (1)
put-down b12 (1)
unstack b8 b16 (1)
put-down b8 (1)
unstack b16 b15 (1)
put-down b16 (1)
unstack b1 b18 (1)
put-down b1 (1)
unstack b15 b20 (1)
put-down b15 (1)
pick-up b17 (1)
stack b17 b15 (1)
unstack b18 b6 (1)
put-down b18 (1)
unstack b20 b2 (1)
put-down b20 (1)
unstack b2 b14 (1)
put-down b2 (1)
unstack b14 b22 (1)
put-down b14 (1)
pick-up b16 (1)
stack b16 b2 (1)
unstack b22 b19 (1)
stack b22 b1 (1)
unstack b19 b4 (1)
stack b19 b8 (1)
unstack b4 b13 (1)
stack b4 b7 (1)
pick-up b5 (1)
stack b5 b22 (1)
unstack b13 b11 (1)
put-down b13 (1)
pick-up b14 (1)
stack b14 b13 (1)
pick-up b18 (1)
stack b18 b14 (1)
pick-up b23 (1)
stack b23 b20 (1)
pick-up b3 (1)
stack b3 b4 (1)
pick-up b6 (1)
stack b6 b23 (1)
unstack b11 b9 (1)
put-down b11 (1)
pick-up b9 (1)
stack b9 b3 (1)
pick-up b11 (1)
stack b11 b9 (1)
unstack b17 b15 (1)
put-down b17 (1)
pick-up b15 (1)
stack b15 b11 (1)
pick-up b17 (1)
stack b17 b15 (1)
unstack b19 b8 (1)
put-down b19 (1)
pick-up b8 (1)
stack b8 b6 (1)
pick-up b19 (1)
stack b19 b8 (1)
unstack b5 b22 (1)
put-down b5 (1)
unstack b22 b1 (1)
put-down b22 (1)
pick-up b1 (1)
stack b1 b18 (1)
pick-up b22 (1)
stack b22 b1 (1)
pick-up b5 (1)
stack b5 b22 (1)
unstack b17 b15 (1)
put-down b17 (1)
unstack b15 b11 (1)
put-down b15 (1)
pick-up b17 (1)
stack b17 b15 (1)
unstack b11 b9 (1)
put-down b11 (1)
unstack b9 b3 (1)
put-down b9 (1)
pick-up b11 (1)
stack b11 b9 (1)
unstack b17 b15 (1)
put-down b17 (1)
pick-up b15 (1)
stack b15 b11 (1)
pick-up b17 (1)
stack b17 b15 (1)
unstack b3 b4 (1)
put-down b3 (1)
unstack b4 b7 (1)
put-down b4 (1)
pick-up b3 (1)
stack b3 b4 (1)
unstack b7 b10 (1)
put-down b7 (1)
pick-up b10 (1)
stack b10 b12 (1)
pick-up b7 (1)
stack b7 b10 (1)
unstack b3 b4 (1)
put-down b3 (1)
pick-up b4 (1)
stack b4 b7 (1)
pick-up b3 (1)
stack b3 b4 (1)
unstack b17 b15 (1)
put-down b17 (1)
unstack b15 b11 (1)
put-down b15 (1)
pick-up b17 (1)
stack b17 b15 (1)
unstack b11 b9 (1)
put-down b11 (1)
pick-up b9 (1)
stack b9 b3 (1)
pick-up b11 (1)
stack b11 b9 (1)
unstack b17 b15 (1)
put-down b17 (1)
pick-up b15 (1)
stack b15 b11 (1)
pick-up b17 (1)
stack b17 b15 (1)
[t=0.0362022s, 26936 KB] Plan length: 138 step(s).
[t=0.0362022s, 26936 KB] Plan cost: 138
[t=0.0362022s, 26936 KB] Expanded 574 state(s).
[t=0.0362022s, 26936 KB] Reopened 0 state(s).
[t=0.0362022s, 26936 KB] Evaluated 575 state(s).
[t=0.0362022s, 26936 KB] Evaluations: 1150
[t=0.0362022s, 26936 KB] Generated 6238 state(s).
[t=0.0362022s, 26936 KB] Dead ends: 0 state(s).
[t=0.0362022s, 26936 KB] Number of registered states: 575
[t=0.0362022s, 26936 KB] Int hash set load factor: 575/1024 = 0.561523
[t=0.0362022s, 26936 KB] Int hash set resizes: 10
[t=0.0362022s, 26936 KB] Search time: 0.016532s
[t=0.0362022s, 26936 KB] Total time: 0.0362022s
Solution found.
Peak memory: 26936 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.18s
