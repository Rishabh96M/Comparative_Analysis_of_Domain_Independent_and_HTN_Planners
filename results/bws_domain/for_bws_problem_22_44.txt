INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_22/bws_problem_22_44.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.010s wall-clock]
1608 relevant atoms
1078 auxiliary atoms
2686 final queue length
4671 total queue pushes
Completing instantiation... [0.020s CPU, 0.018s wall-clock]
Instantiating: [0.030s CPU, 0.029s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
23 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.006s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
1430 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
44 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.014s wall-clock]
Reordering and filtering variables...
45 of 45 variables necessary.
23 of 45 mutex groups necessary.
968 of 968 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.007s wall-clock]
Translator variables: 45
Translator derived variables: 0
Translator facts: 552
Translator goal facts: 18
Translator mutex groups: 23
Translator total mutex groups size: 529
Translator operators: 968
Translator axioms: 0
Translator task size: 8338
Translator peak memory: 36976 KB
Writing output... [0.000s CPU, 0.005s wall-clock]
Done! [0.090s CPU, 0.090s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.3607e-05s, 24488 KB] reading input...
[t=0.00321307s, 25340 KB] done reading input!
[t=0.00443127s, 25736 KB] Initializing landmark count heuristic...
[t=0.0044789s, 25736 KB] Generating landmark graph...
[t=0.00455199s, 25736 KB] Building a landmark graph with reasonable orders.
[t=0.00462136s, 25736 KB] Initializing Exploration...
[t=0.00500738s, 26000 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0155244s, 26528 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.015794s, 26528 KB] Landmarks generation time: 0.011249s
[t=0.015815s, 26528 KB] Discovered 98 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0158548s, 26528 KB] 439 edges
[t=0.015868s, 26528 KB] approx. reasonable orders
[t=0.0190365s, 26528 KB] approx. obedient reasonable orders
[t=0.019308s, 26528 KB] Removed 3 reasonable or obedient reasonable orders
[t=0.0193209s, 26528 KB] Landmarks generation time: 0.0148389s
[t=0.0193307s, 26528 KB] Discovered 98 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0193386s, 26528 KB] 515 edges
[t=0.0193466s, 26528 KB] Landmark graph generation time: 0.0148752s
[t=0.0193547s, 26528 KB] Landmark graph contains 98 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0193626s, 26528 KB] Landmark graph contains 515 orderings.
[t=0.0196771s, 26528 KB] Simplifying 3828 unary operators... done! [2904 unary operators]
[t=0.0205369s, 26528 KB] time to simplify: 0.000920668s
[t=0.0206615s, 26528 KB] Initializing additive heuristic...
[t=0.0206758s, 26528 KB] Initializing FF heuristic...
[t=0.0207261s, 26528 KB] Building successor generator...done!
[t=0.0209504s, 26528 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0209612s, 26528 KB] time for successor generation creation: 0.000182802s
[t=0.0209833s, 26528 KB] Variables: 45
[t=0.0210061s, 26528 KB] FactPairs: 552
[t=0.0210179s, 26528 KB] Bytes per state: 20
[t=0.0211914s, 26528 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.021232s, 26528 KB] 45 initial landmarks, 18 goal landmarks
[t=0.0213127s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0213236s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.021332s, 26528 KB] g=0, 1 evaluated, 0 expanded
[t=0.0213469s, 26528 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0213559s, 26528 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0215216s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0215317s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0215397s, 26528 KB] g=2, 7 evaluated, 6 expanded
[t=0.0216918s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0217025s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0217136s, 26528 KB] g=4, 13 evaluated, 12 expanded
[t=0.0218688s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0218837s, 26528 KB] g=6, 19 evaluated, 18 expanded
[t=0.0219239s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0219323s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.02194s, 26528 KB] g=6, 20 evaluated, 19 expanded
[t=0.0220173s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0220257s, 26528 KB] g=7, 23 evaluated, 22 expanded
[t=0.0222898s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0222984s, 26528 KB] g=10, 34 evaluated, 33 expanded
[t=0.0224032s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0224115s, 26528 KB] g=8, 38 evaluated, 37 expanded
[t=0.0225584s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0225671s, 26528 KB] g=12, 44 evaluated, 43 expanded
[t=0.0227197s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0227289s, 26528 KB] g=10, 50 evaluated, 49 expanded
[t=0.022943s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0229563s, 26528 KB] g=12, 59 evaluated, 58 expanded
[t=0.0230421s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0230572s, 26528 KB] g=14, 62 evaluated, 61 expanded
[t=0.0234859s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0234953s, 26528 KB] g=16, 80 evaluated, 79 expanded
[t=0.0239631s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0239723s, 26528 KB] g=18, 100 evaluated, 99 expanded
[t=0.0240993s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0241079s, 26528 KB] g=16, 105 evaluated, 104 expanded
[t=0.0245228s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.024533s, 26528 KB] g=20, 122 evaluated, 121 expanded
[t=0.0251137s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0251257s, 26528 KB] g=22, 145 evaluated, 144 expanded
[t=0.025162s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0251712s, 26528 KB] g=22, 146 evaluated, 145 expanded
[t=0.0255639s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0255765s, 26528 KB] g=24, 161 evaluated, 160 expanded
[t=0.0257998s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.025809s, 26528 KB] g=24, 170 evaluated, 169 expanded
[t=0.0259866s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0259958s, 26528 KB] g=25, 177 evaluated, 176 expanded
[t=0.0263732s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0263825s, 26528 KB] g=28, 192 evaluated, 191 expanded
[t=0.0267319s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0267419s, 26528 KB] g=30, 206 evaluated, 205 expanded
[t=0.0271312s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0271404s, 26528 KB] g=32, 221 evaluated, 220 expanded
[t=0.0275307s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0275426s, 26528 KB] g=34, 236 evaluated, 235 expanded
[t=0.0279046s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0279142s, 26528 KB] g=36, 250 evaluated, 249 expanded
[t=0.0282056s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.028215s, 26528 KB] g=38, 260 evaluated, 259 expanded
[t=0.0285031s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0285136s, 26528 KB] g=40, 271 evaluated, 270 expanded
[t=0.0305528s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0305655s, 26528 KB] g=46, 358 evaluated, 357 expanded
[t=0.0314227s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0314341s, 26528 KB] g=32, 394 evaluated, 393 expanded
[t=0.0315854s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0315954s, 26528 KB] g=50, 400 evaluated, 399 expanded
[t=0.0318448s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0318536s, 26528 KB] g=52, 410 evaluated, 409 expanded
[t=0.0321703s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0321796s, 26528 KB] g=34, 423 evaluated, 422 expanded
[t=0.0327394s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0327744s, 26528 KB] g=56, 446 evaluated, 445 expanded
[t=0.0329588s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0329712s, 26528 KB] g=58, 453 evaluated, 452 expanded
[t=0.033005s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0330139s, 26528 KB] g=36, 454 evaluated, 453 expanded
[t=0.0337166s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0337321s, 26528 KB] g=38, 483 evaluated, 482 expanded
[t=0.0344678s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0344796s, 26528 KB] g=40, 514 evaluated, 513 expanded
[t=0.0350874s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0350981s, 26528 KB] g=42, 541 evaluated, 540 expanded
[t=0.0360881s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0360991s, 26528 KB] g=44, 586 evaluated, 585 expanded
[t=0.0368586s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0368686s, 26528 KB] g=46, 622 evaluated, 621 expanded
[t=0.037458s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0374696s, 26528 KB] g=48, 649 evaluated, 648 expanded
[t=0.037965s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0379831s, 26528 KB] g=50, 672 evaluated, 671 expanded
[t=0.0386528s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0386635s, 26528 KB] g=52, 705 evaluated, 704 expanded
[t=0.0391693s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0391816s, 26528 KB] g=54, 731 evaluated, 730 expanded
[t=0.0396439s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0396555s, 26528 KB] g=56, 756 evaluated, 755 expanded
[t=0.0397861s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0397949s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0398036s, 26528 KB] g=58, 764 evaluated, 763 expanded
[t=0.0399163s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0399249s, 26528 KB] g=60, 771 evaluated, 770 expanded
[t=0.0400442s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0400528s, 26528 KB] g=62, 778 evaluated, 777 expanded
[t=0.0401095s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0401182s, 26528 KB] g=60, 781 evaluated, 780 expanded
[t=0.0402031s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0402118s, 26528 KB] g=64, 786 evaluated, 785 expanded
[t=0.0403277s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0403365s, 26528 KB] g=66, 793 evaluated, 792 expanded
[t=0.0404844s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0404933s, 26528 KB] g=62, 802 evaluated, 801 expanded
[t=0.0406582s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0406733s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0406821s, 26528 KB] g=64, 813 evaluated, 812 expanded
[t=0.0407414s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0407499s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0407578s, 26528 KB] g=66, 817 evaluated, 816 expanded
[t=0.0408043s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0408128s, 26528 KB] g=68, 820 evaluated, 819 expanded
[t=0.0408339s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0408421s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0408498s, 26528 KB] g=68, 821 evaluated, 820 expanded
[t=0.0408663s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0408745s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.040882s, 26528 KB] g=69, 822 evaluated, 821 expanded
[t=0.0408962s, 26528 KB] Solution found!
[t=0.0409075s, 26528 KB] Actual search time: 0.0196707s
unstack b11 b12 (1)
put-down b11 (1)
unstack b12 b8 (1)
put-down b12 (1)
unstack b19 b4 (1)
stack b19 b11 (1)
unstack b4 b10 (1)
put-down b4 (1)
unstack b10 b14 (1)
put-down b10 (1)
unstack b13 b5 (1)
put-down b13 (1)
unstack b14 b22 (1)
put-down b14 (1)
unstack b21 b6 (1)
put-down b21 (1)
unstack b22 b3 (1)
put-down b22 (1)
unstack b3 b1 (1)
put-down b3 (1)
unstack b9 b20 (1)
put-down b9 (1)
unstack b20 b18 (1)
put-down b20 (1)
unstack b18 b15 (1)
put-down b18 (1)
pick-up b5 (1)
stack b5 b3 (1)
unstack b1 b16 (1)
put-down b1 (1)
unstack b5 b3 (1)
put-down b5 (1)
unstack b16 b17 (1)
put-down b16 (1)
unstack b17 b2 (1)
stack b17 b12 (1)
unstack b2 b7 (1)
put-down b2 (1)
pick-up b4 (1)
stack b4 b17 (1)
pick-up b13 (1)
stack b13 b16 (1)
pick-up b7 (1)
stack b7 b19 (1)
pick-up b21 (1)
stack b21 b7 (1)
pick-up b2 (1)
stack b2 b21 (1)
pick-up b10 (1)
stack b10 b2 (1)
pick-up b3 (1)
stack b3 b10 (1)
pick-up b5 (1)
stack b5 b3 (1)
pick-up b22 (1)
stack b22 b5 (1)
pick-up b1 (1)
stack b1 b22 (1)
pick-up b8 (1)
stack b8 b13 (1)
pick-up b9 (1)
stack b9 b8 (1)
pick-up b14 (1)
stack b14 b9 (1)
pick-up b15 (1)
stack b15 b14 (1)
pick-up b6 (1)
stack b6 b15 (1)
pick-up b18 (1)
stack b18 b6 (1)
[t=0.0409161s, 26528 KB] Plan length: 70 step(s).
[t=0.0409161s, 26528 KB] Plan cost: 70
[t=0.0409161s, 26528 KB] Expanded 822 state(s).
[t=0.0409161s, 26528 KB] Reopened 0 state(s).
[t=0.0409161s, 26528 KB] Evaluated 823 state(s).
[t=0.0409161s, 26528 KB] Evaluations: 1646
[t=0.0409161s, 26528 KB] Generated 10152 state(s).
[t=0.0409161s, 26528 KB] Dead ends: 0 state(s).
[t=0.0409161s, 26528 KB] Number of registered states: 823
[t=0.0409161s, 26528 KB] Int hash set load factor: 823/1024 = 0.803711
[t=0.0409161s, 26528 KB] Int hash set resizes: 10
[t=0.0409161s, 26528 KB] Search time: 0.0197256s
[t=0.0409161s, 26528 KB] Total time: 0.0409161s
Solution found.
Peak memory: 26528 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.17s
