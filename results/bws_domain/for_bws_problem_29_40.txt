INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_29/bws_problem_29_40.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.016s wall-clock]
2728 relevant atoms
1827 auxiliary atoms
4555 final queue length
7980 total queue pushes
Completing instantiation... [0.030s CPU, 0.029s wall-clock]
Instantiating: [0.050s CPU, 0.047s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
30 uncovered facts
Choosing groups: [0.010s CPU, 0.002s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.001s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.001s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.002s wall-clock]
Translating task: [0.050s CPU, 0.050s wall-clock]
2494 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
58 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.021s wall-clock]
Reordering and filtering variables...
59 of 59 variables necessary.
30 of 59 mutex groups necessary.
1682 of 1682 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.012s wall-clock]
Translator variables: 59
Translator derived variables: 0
Translator facts: 930
Translator goal facts: 25
Translator mutex groups: 30
Translator total mutex groups size: 900
Translator operators: 1682
Translator axioms: 0
Translator task size: 14442
Translator peak memory: 40824 KB
Writing output... [0.010s CPU, 0.009s wall-clock]
Done! [0.160s CPU, 0.157s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=1.5975e-05s, 24488 KB] reading input...
[t=0.00494328s, 26220 KB] done reading input!
[t=0.00583602s, 26616 KB] Initializing landmark count heuristic...
[t=0.00586944s, 26616 KB] Generating landmark graph...
[t=0.00598398s, 26748 KB] Building a landmark graph with reasonable orders.
[t=0.00609936s, 26748 KB] Initializing Exploration...
[t=0.00666402s, 27200 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0315495s, 28124 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0316888s, 28124 KB] Landmarks generation time: 0.0257155s
[t=0.0317137s, 28124 KB] Discovered 131 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0317323s, 28124 KB] 961 edges
[t=0.0317426s, 28124 KB] approx. reasonable orders
[t=0.0352132s, 28124 KB] approx. obedient reasonable orders
[t=0.0353189s, 28124 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0353306s, 28124 KB] Landmarks generation time: 0.0294596s
[t=0.0353416s, 28124 KB] Discovered 131 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0353499s, 28124 KB] 999 edges
[t=0.0353601s, 28124 KB] Landmark graph generation time: 0.0294979s
[t=0.0353688s, 28124 KB] Landmark graph contains 131 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.035377s, 28124 KB] Landmark graph contains 999 orderings.
[t=0.0361604s, 28148 KB] Simplifying 6670 unary operators... done! [5046 unary operators]
[t=0.0377867s, 28148 KB] time to simplify: 0.00174688s
[t=0.0380265s, 28148 KB] Initializing additive heuristic...
[t=0.0380499s, 28148 KB] Initializing FF heuristic...
[t=0.0381297s, 28148 KB] Building successor generator...done!
[t=0.0384601s, 28332 KB] peak memory difference for successor generator creation: 184 KB
[t=0.0384716s, 28332 KB] time for successor generation creation: 0.000294179s
[t=0.038488s, 28332 KB] Variables: 59
[t=0.0384966s, 28332 KB] FactPairs: 930
[t=0.038505s, 28332 KB] Bytes per state: 24
[t=0.0385927s, 28332 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.038627s, 28332 KB] 59 initial landmarks, 25 goal landmarks
[t=0.0387014s, 28332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 72
[t=0.0387112s, 28332 KB] New best heuristic value for ff(transform = adapt_costs(one)): 52
[t=0.0387194s, 28332 KB] g=0, 1 evaluated, 0 expanded
[t=0.0387327s, 28332 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 72
[t=0.0387413s, 28332 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 52
[t=0.0389886s, 28332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 70
[t=0.0390036s, 28332 KB] New best heuristic value for ff(transform = adapt_costs(one)): 51
[t=0.0390121s, 28332 KB] g=2, 6 evaluated, 5 expanded
[t=0.0391442s, 28332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 69
[t=0.039155s, 28332 KB] g=4, 9 evaluated, 8 expanded
[t=0.0394475s, 28332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 68
[t=0.0394668s, 28332 KB] New best heuristic value for ff(transform = adapt_costs(one)): 50
[t=0.0394749s, 28332 KB] g=6, 16 evaluated, 15 expanded
[t=0.0396754s, 28332 KB] New best heuristic value for ff(transform = adapt_costs(one)): 49
[t=0.0396849s, 28332 KB] g=8, 21 evaluated, 20 expanded
[t=0.0397698s, 28332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 67
[t=0.0397785s, 28332 KB] g=8, 23 evaluated, 22 expanded
[t=0.0401288s, 28332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 66
[t=0.0401401s, 28332 KB] g=10, 32 evaluated, 31 expanded
[t=0.0405257s, 28332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 65
[t=0.0405353s, 28332 KB] g=12, 42 evaluated, 41 expanded
[t=0.0409731s, 28332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 63
[t=0.0409853s, 28332 KB] New best heuristic value for ff(transform = adapt_costs(one)): 48
[t=0.0409964s, 28332 KB] g=14, 53 evaluated, 52 expanded
[t=0.0412588s, 28332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 62
[t=0.0412759s, 28332 KB] New best heuristic value for ff(transform = adapt_costs(one)): 47
[t=0.0412851s, 28332 KB] g=16, 59 evaluated, 58 expanded
[t=0.0414628s, 28332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 61
[t=0.0414721s, 28332 KB] g=17, 63 evaluated, 62 expanded
[t=0.0415235s, 28332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.0415325s, 28332 KB] New best heuristic value for ff(transform = adapt_costs(one)): 46
[t=0.0415408s, 28332 KB] g=18, 64 evaluated, 63 expanded
[t=0.0417941s, 28332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 58
[t=0.0418036s, 28332 KB] g=20, 70 evaluated, 69 expanded
[t=0.0420953s, 28332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 57
[t=0.0421053s, 28332 KB] g=22, 77 evaluated, 76 expanded
[t=0.0425938s, 28332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0426039s, 28332 KB] g=24, 89 evaluated, 88 expanded
[t=0.0431298s, 28332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0431398s, 28332 KB] g=26, 102 evaluated, 101 expanded
[t=0.0435482s, 28332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0435591s, 28332 KB] g=28, 112 evaluated, 111 expanded
[t=0.0439886s, 28332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0439984s, 28332 KB] New best heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0440089s, 28332 KB] g=30, 123 evaluated, 122 expanded
[t=0.0444169s, 28332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0444294s, 28332 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0444402s, 28332 KB] g=32, 133 evaluated, 132 expanded
[t=0.0448376s, 28332 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0448478s, 28332 KB] g=34, 143 evaluated, 142 expanded
[t=0.0449367s, 28332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.044946s, 28332 KB] g=34, 145 evaluated, 144 expanded
[t=0.0454939s, 28332 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0455034s, 28332 KB] g=36, 159 evaluated, 158 expanded
[t=0.0463784s, 28332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0463883s, 28332 KB] g=39, 181 evaluated, 180 expanded
[t=0.0483574s, 28332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0483757s, 28332 KB] g=42, 231 evaluated, 230 expanded
[t=0.0486816s, 28332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0486945s, 28332 KB] g=43, 238 evaluated, 237 expanded
[t=0.0491938s, 28332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0492097s, 28332 KB] g=46, 250 evaluated, 249 expanded
[t=0.049421s, 28332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0494307s, 28332 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0494389s, 28332 KB] g=46, 255 evaluated, 254 expanded
[t=0.0498661s, 28332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0498814s, 28332 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0498902s, 28332 KB] g=48, 265 evaluated, 264 expanded
[t=0.0503371s, 28332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0503473s, 28332 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0503569s, 28332 KB] g=50, 276 evaluated, 275 expanded
[t=0.0507788s, 28332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0507893s, 28332 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0507982s, 28332 KB] g=52, 286 evaluated, 285 expanded
[t=0.0512535s, 28332 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0512676s, 28332 KB] g=54, 297 evaluated, 296 expanded
[t=0.051321s, 28332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0513325s, 28332 KB] g=54, 298 evaluated, 297 expanded
[t=0.0521973s, 28332 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0522153s, 28332 KB] g=56, 319 evaluated, 318 expanded
[t=0.0523517s, 28332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.052377s, 28332 KB] g=56, 322 evaluated, 321 expanded
[t=0.0529864s, 28332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0529993s, 28332 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0530086s, 28332 KB] g=58, 337 evaluated, 336 expanded
[t=0.0534123s, 28332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0534319s, 28332 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0534416s, 28332 KB] g=60, 346 evaluated, 345 expanded
[t=0.0537298s, 28332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0537403s, 28332 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0537488s, 28332 KB] g=62, 353 evaluated, 352 expanded
[t=0.0540367s, 28332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0540468s, 28332 KB] g=65, 360 evaluated, 359 expanded
[t=0.0547712s, 28332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0547842s, 28332 KB] g=68, 378 evaluated, 377 expanded
[t=0.0550663s, 28332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0550767s, 28332 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0550856s, 28332 KB] g=70, 385 evaluated, 384 expanded
[t=0.056867s, 28332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0568816s, 28332 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0568909s, 28332 KB] g=76, 428 evaluated, 427 expanded
[t=0.061842s, 28332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.061874s, 28332 KB] g=86, 547 evaluated, 546 expanded
[t=0.0622469s, 28332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0622587s, 28332 KB] g=88, 556 evaluated, 555 expanded
[t=0.062565s, 28332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0625853s, 28332 KB] g=90, 563 evaluated, 562 expanded
[t=0.0628375s, 28332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0628471s, 28332 KB] g=92, 569 evaluated, 568 expanded
[t=0.0632435s, 28332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0632537s, 28332 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0632633s, 28332 KB] g=94, 579 evaluated, 578 expanded
[t=0.0670419s, 28332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0670741s, 28332 KB] g=102, 674 evaluated, 673 expanded
[t=0.067463s, 28332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0674783s, 28332 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0674886s, 28332 KB] g=104, 682 evaluated, 681 expanded
[t=0.0709807s, 28332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0710404s, 28332 KB] g=116, 760 evaluated, 759 expanded
[t=0.0714833s, 28332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0715052s, 28332 KB] g=118, 767 evaluated, 766 expanded
[t=0.0717219s, 28332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0717359s, 28332 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0717462s, 28332 KB] g=120, 772 evaluated, 771 expanded
[t=0.0730231s, 28332 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0730538s, 28332 KB] g=124, 797 evaluated, 796 expanded
[t=0.0734183s, 28332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0734374s, 28332 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0734477s, 28332 KB] g=126, 802 evaluated, 801 expanded
[t=0.0740891s, 28332 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0741011s, 28332 KB] g=130, 818 evaluated, 817 expanded
[t=0.0742843s, 28332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0742955s, 28332 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0743093s, 28332 KB] g=132, 822 evaluated, 821 expanded
[t=0.0761298s, 28332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0761421s, 28332 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0761509s, 28332 KB] g=144, 868 evaluated, 867 expanded
[t=0.076519s, 28332 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0765313s, 28332 KB] g=148, 877 evaluated, 876 expanded
[t=0.076662s, 28332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0766732s, 28332 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0766815s, 28332 KB] g=150, 880 evaluated, 879 expanded
[t=0.108985s, 28332 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.10906s, 28332 KB] g=198, 1794 evaluated, 1793 expanded
[t=0.109205s, 28332 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.109214s, 28332 KB] g=200, 1798 evaluated, 1797 expanded
[t=0.110465s, 28332 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.110563s, 28332 KB] g=208, 1826 evaluated, 1825 expanded
[t=0.111007s, 28332 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.111061s, 28332 KB] g=212, 1835 evaluated, 1834 expanded
[t=0.111192s, 28332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.111205s, 28332 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.111217s, 28332 KB] g=214, 1838 evaluated, 1837 expanded
[t=0.112729s, 28332 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.112753s, 28332 KB] g=230, 1877 evaluated, 1876 expanded
[t=0.112998s, 28332 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.113008s, 28332 KB] g=238, 1888 evaluated, 1887 expanded
[t=0.113035s, 28332 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.113044s, 28332 KB] g=238, 1889 evaluated, 1888 expanded
[t=0.113064s, 28332 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.113073s, 28332 KB] g=239, 1890 evaluated, 1889 expanded
[t=0.11309s, 28332 KB] Solution found!
[t=0.113105s, 28332 KB] Actual search time: 0.074476s
unstack b12 b19 (1)
stack b12 b24 (1)
unstack b16 b26 (1)
put-down b16 (1)
unstack b26 b8 (1)
put-down b26 (1)
unstack b19 b14 (1)
stack b19 b8 (1)
unstack b14 b9 (1)
put-down b14 (1)
unstack b9 b7 (1)
put-down b9 (1)
unstack b7 b15 (1)
stack b7 b16 (1)
unstack b15 b2 (1)
put-down b15 (1)
unstack b2 b3 (1)
stack b2 b7 (1)
unstack b3 b5 (1)
put-down b3 (1)
unstack b19 b8 (1)
put-down b19 (1)
unstack b8 b29 (1)
put-down b8 (1)
unstack b29 b10 (1)
put-down b29 (1)
unstack b10 b25 (1)
put-down b10 (1)
unstack b25 b13 (1)
stack b25 b14 (1)
pick-up b13 (1)
stack b13 b26 (1)
pick-up b29 (1)
stack b29 b25 (1)
pick-up b19 (1)
stack b19 b8 (1)
unstack b5 b27 (1)
put-down b5 (1)
unstack b27 b11 (1)
put-down b27 (1)
unstack b11 b4 (1)
stack b11 b5 (1)
unstack b4 b6 (1)
put-down b4 (1)
unstack b6 b18 (1)
stack b6 b29 (1)
unstack b18 b17 (1)
put-down b18 (1)
unstack b17 b23 (1)
stack b17 b12 (1)
unstack b23 b22 (1)
stack b23 b10 (1)
unstack b22 b1 (1)
stack b22 b19 (1)
pick-up b27 (1)
stack b27 b1 (1)
pick-up b3 (1)
stack b3 b18 (1)
pick-up b4 (1)
stack b4 b17 (1)
pick-up b9 (1)
stack b9 b22 (1)
unstack b27 b1 (1)
put-down b27 (1)
unstack b1 b20 (1)
put-down b1 (1)
pick-up b20 (1)
stack b20 b9 (1)
pick-up b27 (1)
stack b27 b1 (1)
unstack b11 b5 (1)
put-down b11 (1)
pick-up b5 (1)
stack b5 b27 (1)
pick-up b11 (1)
stack b11 b5 (1)
unstack b20 b9 (1)
put-down b20 (1)
unstack b9 b22 (1)
put-down b9 (1)
unstack b22 b19 (1)
put-down b22 (1)
unstack b19 b8 (1)
put-down b19 (1)
pick-up b8 (1)
stack b8 b6 (1)
pick-up b19 (1)
stack b19 b8 (1)
pick-up b22 (1)
stack b22 b19 (1)
pick-up b9 (1)
stack b9 b22 (1)
pick-up b20 (1)
stack b20 b9 (1)
unstack b2 b7 (1)
put-down b2 (1)
unstack b7 b16 (1)
put-down b7 (1)
pick-up b16 (1)
stack b16 b20 (1)
pick-up b7 (1)
stack b7 b16 (1)
pick-up b2 (1)
stack b2 b7 (1)
unstack b4 b17 (1)
put-down b4 (1)
unstack b17 b12 (1)
put-down b17 (1)
pick-up b4 (1)
stack b4 b17 (1)
unstack b12 b24 (1)
put-down b12 (1)
unstack b24 b21 (1)
put-down b24 (1)
unstack b21 b28 (1)
stack b21 b3 (1)
pick-up b12 (1)
stack b12 b24 (1)
pick-up b28 (1)
stack b28 b15 (1)
unstack b12 b24 (1)
put-down b12 (1)
pick-up b24 (1)
stack b24 b21 (1)
pick-up b12 (1)
stack b12 b24 (1)
unstack b4 b17 (1)
put-down b4 (1)
pick-up b17 (1)
stack b17 b12 (1)
pick-up b4 (1)
stack b4 b17 (1)
unstack b11 b5 (1)
put-down b11 (1)
unstack b5 b27 (1)
put-down b5 (1)
pick-up b11 (1)
stack b11 b5 (1)
unstack b27 b1 (1)
put-down b27 (1)
pick-up b1 (1)
stack b1 b28 (1)
pick-up b27 (1)
stack b27 b1 (1)
unstack b11 b5 (1)
put-down b11 (1)
pick-up b5 (1)
stack b5 b27 (1)
pick-up b11 (1)
stack b11 b5 (1)
unstack b2 b7 (1)
put-down b2 (1)
unstack b7 b16 (1)
put-down b7 (1)
pick-up b2 (1)
stack b2 b7 (1)
unstack b16 b20 (1)
put-down b16 (1)
unstack b20 b9 (1)
put-down b20 (1)
unstack b9 b22 (1)
put-down b9 (1)
pick-up b20 (1)
stack b20 b9 (1)
pick-up b16 (1)
stack b16 b20 (1)
unstack b2 b7 (1)
put-down b2 (1)
pick-up b7 (1)
stack b7 b16 (1)
pick-up b2 (1)
stack b2 b7 (1)
unstack b22 b19 (1)
put-down b22 (1)
unstack b19 b8 (1)
put-down b19 (1)
unstack b8 b6 (1)
put-down b8 (1)
pick-up b19 (1)
stack b19 b8 (1)
pick-up b22 (1)
stack b22 b19 (1)
unstack b6 b29 (1)
put-down b6 (1)
unstack b29 b25 (1)
put-down b29 (1)
pick-up b6 (1)
stack b6 b29 (1)
unstack b25 b14 (1)
put-down b25 (1)
pick-up b14 (1)
stack b14 b23 (1)
pick-up b25 (1)
stack b25 b14 (1)
unstack b6 b29 (1)
put-down b6 (1)
pick-up b29 (1)
stack b29 b25 (1)
pick-up b6 (1)
stack b6 b29 (1)
unstack b22 b19 (1)
put-down b22 (1)
unstack b19 b8 (1)
put-down b19 (1)
pick-up b22 (1)
stack b22 b19 (1)
pick-up b8 (1)
stack b8 b6 (1)
unstack b22 b19 (1)
put-down b22 (1)
pick-up b19 (1)
stack b19 b8 (1)
pick-up b22 (1)
stack b22 b19 (1)
unstack b2 b7 (1)
put-down b2 (1)
unstack b7 b16 (1)
put-down b7 (1)
unstack b16 b20 (1)
put-down b16 (1)
pick-up b7 (1)
stack b7 b16 (1)
pick-up b2 (1)
stack b2 b7 (1)
unstack b20 b9 (1)
put-down b20 (1)
pick-up b9 (1)
stack b9 b22 (1)
pick-up b20 (1)
stack b20 b9 (1)
unstack b2 b7 (1)
put-down b2 (1)
unstack b7 b16 (1)
put-down b7 (1)
pick-up b16 (1)
stack b16 b20 (1)
pick-up b7 (1)
stack b7 b16 (1)
pick-up b2 (1)
stack b2 b7 (1)
[t=0.113115s, 28332 KB] Plan length: 240 step(s).
[t=0.113115s, 28332 KB] Plan cost: 240
[t=0.113115s, 28332 KB] Expanded 1890 state(s).
[t=0.113115s, 28332 KB] Reopened 0 state(s).
[t=0.113115s, 28332 KB] Evaluated 1891 state(s).
[t=0.113115s, 28332 KB] Evaluations: 3782
[t=0.113115s, 28332 KB] Generated 18446 state(s).
[t=0.113115s, 28332 KB] Dead ends: 0 state(s).
[t=0.113115s, 28332 KB] Number of registered states: 1891
[t=0.113115s, 28332 KB] Int hash set load factor: 1891/4096 = 0.46167
[t=0.113115s, 28332 KB] Int hash set resizes: 12
[t=0.113115s, 28332 KB] Search time: 0.0745231s
[t=0.113115s, 28332 KB] Total time: 0.113115s
Solution found.
Peak memory: 28332 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.32s
