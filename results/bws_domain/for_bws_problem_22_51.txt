INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_22/bws_problem_22_51.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.010s wall-clock]
1608 relevant atoms
1078 auxiliary atoms
2686 final queue length
4670 total queue pushes
Completing instantiation... [0.020s CPU, 0.018s wall-clock]
Instantiating: [0.030s CPU, 0.030s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.003s wall-clock]
Checking invariant weight... [0.000s CPU, 0.001s wall-clock]
Instantiating groups... [0.010s CPU, 0.002s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
23 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.009s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.027s wall-clock]
1430 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
44 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.014s wall-clock]
Reordering and filtering variables...
45 of 45 variables necessary.
23 of 45 mutex groups necessary.
968 of 968 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.009s wall-clock]
Translator variables: 45
Translator derived variables: 0
Translator facts: 552
Translator goal facts: 20
Translator mutex groups: 23
Translator total mutex groups size: 529
Translator operators: 968
Translator axioms: 0
Translator task size: 8340
Translator peak memory: 36976 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.101s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=3.9877e-05s, 24488 KB] reading input...
[t=0.00277286s, 25340 KB] done reading input!
[t=0.00360794s, 25736 KB] Initializing landmark count heuristic...
[t=0.00363779s, 25736 KB] Generating landmark graph...
[t=0.00370539s, 25736 KB] Building a landmark graph with reasonable orders.
[t=0.00376264s, 25736 KB] Initializing Exploration...
[t=0.00405801s, 26000 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0174552s, 26528 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0175393s, 26528 KB] Landmarks generation time: 0.0138344s
[t=0.0175525s, 26528 KB] Discovered 101 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0175837s, 26528 KB] 538 edges
[t=0.0175931s, 26528 KB] approx. reasonable orders
[t=0.0181594s, 26528 KB] approx. obedient reasonable orders
[t=0.0181868s, 26528 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0181986s, 26528 KB] Landmarks generation time: 0.0145673s
[t=0.0182173s, 26528 KB] Discovered 101 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0182252s, 26528 KB] 544 edges
[t=0.0182334s, 26528 KB] Landmark graph generation time: 0.0146024s
[t=0.0182415s, 26528 KB] Landmark graph contains 101 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0182492s, 26528 KB] Landmark graph contains 544 orderings.
[t=0.0185957s, 26528 KB] Simplifying 3828 unary operators... done! [2904 unary operators]
[t=0.0194917s, 26528 KB] time to simplify: 0.000959074s
[t=0.0196159s, 26528 KB] Initializing additive heuristic...
[t=0.0196312s, 26528 KB] Initializing FF heuristic...
[t=0.0196809s, 26528 KB] Building successor generator...done!
[t=0.0198707s, 26528 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0198791s, 26528 KB] time for successor generation creation: 0.00016132s
[t=0.0198906s, 26528 KB] Variables: 45
[t=0.0198987s, 26528 KB] FactPairs: 552
[t=0.0199069s, 26528 KB] Bytes per state: 20
[t=0.0199925s, 26528 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0200298s, 26528 KB] 45 initial landmarks, 20 goal landmarks
[t=0.0200801s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0200904s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0201003s, 26528 KB] g=0, 1 evaluated, 0 expanded
[t=0.0201154s, 26528 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0201293s, 26528 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0202789s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0202889s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0202976s, 26528 KB] g=2, 6 evaluated, 5 expanded
[t=0.020433s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0204428s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0204515s, 26528 KB] g=4, 11 evaluated, 10 expanded
[t=0.0205848s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0205946s, 26528 KB] g=6, 16 evaluated, 15 expanded
[t=0.0207883s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0208084s, 26528 KB] g=8, 23 evaluated, 22 expanded
[t=0.0209217s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0209311s, 26528 KB] g=8, 27 evaluated, 26 expanded
[t=0.0210404s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0210494s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0210576s, 26528 KB] g=10, 31 evaluated, 30 expanded
[t=0.0212401s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0212494s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0212573s, 26528 KB] g=12, 38 evaluated, 37 expanded
[t=0.0214142s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0214229s, 26528 KB] g=14, 44 evaluated, 43 expanded
[t=0.0217585s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0217759s, 26528 KB] g=16, 57 evaluated, 56 expanded
[t=0.022174s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0221844s, 26528 KB] g=16, 73 evaluated, 72 expanded
[t=0.0225264s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0225371s, 26528 KB] g=18, 87 evaluated, 86 expanded
[t=0.022791s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.022801s, 26528 KB] g=20, 97 evaluated, 96 expanded
[t=0.0229771s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0229867s, 26528 KB] g=20, 104 evaluated, 103 expanded
[t=0.0230943s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0231042s, 26528 KB] g=21, 108 evaluated, 107 expanded
[t=0.0231415s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0231502s, 26528 KB] g=22, 109 evaluated, 108 expanded
[t=0.0235582s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0235688s, 26528 KB] g=24, 125 evaluated, 124 expanded
[t=0.0236557s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0236648s, 26528 KB] g=24, 128 evaluated, 127 expanded
[t=0.0241459s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0241573s, 26528 KB] g=26, 146 evaluated, 145 expanded
[t=0.0245538s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0245644s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0245734s, 26528 KB] g=28, 161 evaluated, 160 expanded
[t=0.0248676s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.024896s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0249045s, 26528 KB] g=30, 172 evaluated, 171 expanded
[t=0.0251378s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0251477s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0251557s, 26528 KB] g=32, 181 evaluated, 180 expanded
[t=0.0253917s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0254004s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0254081s, 26528 KB] g=34, 190 evaluated, 189 expanded
[t=0.025642s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0256509s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0256587s, 26528 KB] g=36, 199 evaluated, 198 expanded
[t=0.02589s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.025899s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0259068s, 26528 KB] g=38, 208 evaluated, 207 expanded
[t=0.0261149s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0261242s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0261325s, 26528 KB] g=40, 216 evaluated, 215 expanded
[t=0.0265824s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0265947s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0266036s, 26528 KB] g=44, 234 evaluated, 233 expanded
[t=0.0268055s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0268147s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.026823s, 26528 KB] g=46, 242 evaluated, 241 expanded
[t=0.0274306s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0274423s, 26528 KB] g=50, 266 evaluated, 265 expanded
[t=0.0275968s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0276065s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0276151s, 26528 KB] g=52, 272 evaluated, 271 expanded
[t=0.0282001s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0282107s, 26528 KB] g=56, 296 evaluated, 295 expanded
[t=0.0283455s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0283547s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0283629s, 26528 KB] g=58, 301 evaluated, 300 expanded
[t=0.0288404s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0288513s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0288597s, 26528 KB] g=62, 320 evaluated, 319 expanded
[t=0.0290043s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0290133s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0290209s, 26528 KB] g=64, 325 evaluated, 324 expanded
[t=0.029523s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0295336s, 26528 KB] g=70, 346 evaluated, 345 expanded
[t=0.029658s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0296674s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0296758s, 26528 KB] g=72, 351 evaluated, 350 expanded
[t=0.0297747s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0297836s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0297916s, 26528 KB] g=74, 355 evaluated, 354 expanded
[t=0.0310234s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0310509s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0310601s, 26528 KB] g=86, 406 evaluated, 405 expanded
[t=0.031266s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0312757s, 26528 KB] g=90, 415 evaluated, 414 expanded
[t=0.0313483s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0313573s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0313657s, 26528 KB] g=92, 418 evaluated, 417 expanded
[t=0.0329724s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0329855s, 26528 KB] g=114, 506 evaluated, 505 expanded
[t=0.0331629s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0331734s, 26528 KB] g=118, 515 evaluated, 514 expanded
[t=0.0332288s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0332382s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0332462s, 26528 KB] g=120, 518 evaluated, 517 expanded
[t=0.0333857s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0333948s, 26528 KB] g=128, 528 evaluated, 527 expanded
[t=0.0334509s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0334596s, 26528 KB] g=132, 532 evaluated, 531 expanded
[t=0.0334776s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0334865s, 26528 KB] g=133, 533 evaluated, 532 expanded
[t=0.0335014s, 26528 KB] Solution found!
[t=0.0335124s, 26528 KB] Actual search time: 0.0134795s
unstack b21 b20 (1)
put-down b21 (1)
unstack b4 b9 (1)
put-down b4 (1)
unstack b20 b15 (1)
put-down b20 (1)
unstack b15 b10 (1)
put-down b15 (1)
unstack b10 b2 (1)
stack b10 b21 (1)
unstack b2 b6 (1)
stack b2 b19 (1)
unstack b3 b1 (1)
put-down b3 (1)
unstack b6 b8 (1)
put-down b6 (1)
unstack b8 b14 (1)
put-down b8 (1)
unstack b14 b13 (1)
put-down b14 (1)
unstack b13 b7 (1)
stack b13 b6 (1)
unstack b7 b17 (1)
stack b7 b20 (1)
unstack b17 b18 (1)
stack b17 b1 (1)
unstack b18 b5 (1)
stack b18 b10 (1)
pick-up b5 (1)
stack b5 b2 (1)
unstack b9 b11 (1)
stack b9 b7 (1)
unstack b11 b22 (1)
stack b11 b9 (1)
unstack b22 b12 (1)
stack b22 b14 (1)
pick-up b15 (1)
stack b15 b8 (1)
pick-up b3 (1)
stack b3 b22 (1)
unstack b12 b16 (1)
put-down b12 (1)
pick-up b16 (1)
stack b16 b4 (1)
pick-up b12 (1)
stack b12 b16 (1)
unstack b17 b1 (1)
put-down b17 (1)
pick-up b1 (1)
stack b1 b3 (1)
pick-up b17 (1)
stack b17 b1 (1)
unstack b13 b6 (1)
put-down b13 (1)
pick-up b6 (1)
stack b6 b17 (1)
pick-up b13 (1)
stack b13 b6 (1)
unstack b15 b8 (1)
put-down b15 (1)
pick-up b8 (1)
stack b8 b18 (1)
pick-up b15 (1)
stack b15 b8 (1)
unstack b5 b2 (1)
put-down b5 (1)
unstack b2 b19 (1)
put-down b2 (1)
pick-up b19 (1)
stack b19 b15 (1)
pick-up b2 (1)
stack b2 b19 (1)
pick-up b5 (1)
stack b5 b2 (1)
unstack b11 b9 (1)
put-down b11 (1)
unstack b9 b7 (1)
put-down b9 (1)
pick-up b11 (1)
stack b11 b9 (1)
unstack b7 b20 (1)
put-down b7 (1)
pick-up b20 (1)
stack b20 b12 (1)
pick-up b7 (1)
stack b7 b20 (1)
unstack b11 b9 (1)
put-down b11 (1)
pick-up b9 (1)
stack b9 b7 (1)
pick-up b11 (1)
stack b11 b9 (1)
unstack b13 b6 (1)
put-down b13 (1)
unstack b6 b17 (1)
put-down b6 (1)
unstack b17 b1 (1)
put-down b17 (1)
pick-up b6 (1)
stack b6 b17 (1)
pick-up b13 (1)
stack b13 b6 (1)
unstack b1 b3 (1)
put-down b1 (1)
unstack b3 b22 (1)
put-down b3 (1)
pick-up b1 (1)
stack b1 b3 (1)
unstack b22 b14 (1)
put-down b22 (1)
pick-up b14 (1)
stack b14 b11 (1)
pick-up b22 (1)
stack b22 b14 (1)
unstack b1 b3 (1)
put-down b1 (1)
pick-up b3 (1)
stack b3 b22 (1)
pick-up b1 (1)
stack b1 b3 (1)
unstack b13 b6 (1)
put-down b13 (1)
unstack b6 b17 (1)
put-down b6 (1)
pick-up b13 (1)
stack b13 b6 (1)
pick-up b17 (1)
stack b17 b1 (1)
unstack b13 b6 (1)
put-down b13 (1)
pick-up b6 (1)
stack b6 b17 (1)
pick-up b13 (1)
stack b13 b6 (1)
[t=0.0335216s, 26528 KB] Plan length: 134 step(s).
[t=0.0335216s, 26528 KB] Plan cost: 134
[t=0.0335216s, 26528 KB] Expanded 533 state(s).
[t=0.0335216s, 26528 KB] Reopened 0 state(s).
[t=0.0335216s, 26528 KB] Evaluated 534 state(s).
[t=0.0335216s, 26528 KB] Evaluations: 1068
[t=0.0335216s, 26528 KB] Generated 4342 state(s).
[t=0.0335216s, 26528 KB] Dead ends: 0 state(s).
[t=0.0335216s, 26528 KB] Number of registered states: 534
[t=0.0335216s, 26528 KB] Int hash set load factor: 534/1024 = 0.521484
[t=0.0335216s, 26528 KB] Int hash set resizes: 10
[t=0.0335216s, 26528 KB] Search time: 0.0135295s
[t=0.0335216s, 26528 KB] Total time: 0.0335216s
Solution found.
Peak memory: 26528 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.18s
