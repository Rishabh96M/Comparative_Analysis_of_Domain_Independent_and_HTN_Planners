INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_22/bws_problem_22_80.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.009s wall-clock]
1608 relevant atoms
1078 auxiliary atoms
2686 final queue length
4673 total queue pushes
Completing instantiation... [0.020s CPU, 0.016s wall-clock]
Instantiating: [0.030s CPU, 0.027s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
23 uncovered facts
Choosing groups: [0.010s CPU, 0.002s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.008s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
1430 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
44 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.013s wall-clock]
Reordering and filtering variables...
45 of 45 variables necessary.
23 of 45 mutex groups necessary.
968 of 968 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 45
Translator derived variables: 0
Translator facts: 552
Translator goal facts: 18
Translator mutex groups: 23
Translator total mutex groups size: 529
Translator operators: 968
Translator axioms: 0
Translator task size: 8338
Translator peak memory: 36972 KB
Writing output... [0.010s CPU, 0.005s wall-clock]
Done! [0.090s CPU, 0.089s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.6306e-05s, 24488 KB] reading input...
[t=0.00283732s, 25340 KB] done reading input!
[t=0.00370918s, 25736 KB] Initializing landmark count heuristic...
[t=0.00374862s, 25736 KB] Generating landmark graph...
[t=0.0038272s, 25736 KB] Building a landmark graph with reasonable orders.
[t=0.0038913s, 25736 KB] Initializing Exploration...
[t=0.00421445s, 26000 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0146557s, 26396 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0149117s, 26396 KB] Landmarks generation time: 0.0111092s
[t=0.0149548s, 26396 KB] Discovered 95 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0150025s, 26396 KB] 283 edges
[t=0.0150209s, 26396 KB] approx. reasonable orders
[t=0.0194009s, 26396 KB] approx. obedient reasonable orders
[t=0.0196986s, 26396 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0197129s, 26396 KB] Landmarks generation time: 0.0159638s
[t=0.0197243s, 26396 KB] Discovered 95 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0197331s, 26396 KB] 368 edges
[t=0.0197423s, 26396 KB] Landmark graph generation time: 0.0160021s
[t=0.0197524s, 26396 KB] Landmark graph contains 95 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0197616s, 26396 KB] Landmark graph contains 368 orderings.
[t=0.0201473s, 26396 KB] Simplifying 3828 unary operators... done! [2904 unary operators]
[t=0.0210732s, 26528 KB] time to simplify: 0.000992316s
[t=0.0212066s, 26528 KB] Initializing additive heuristic...
[t=0.0212224s, 26528 KB] Initializing FF heuristic...
[t=0.0212809s, 26528 KB] Building successor generator...done!
[t=0.0214811s, 26528 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0214899s, 26528 KB] time for successor generation creation: 0.00016674s
[t=0.0215018s, 26528 KB] Variables: 45
[t=0.02151s, 26528 KB] FactPairs: 552
[t=0.0215187s, 26528 KB] Bytes per state: 20
[t=0.0216353s, 26528 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0216719s, 26528 KB] 44 initial landmarks, 18 goal landmarks
[t=0.0217287s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0217383s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.021747s, 26528 KB] g=0, 1 evaluated, 0 expanded
[t=0.0217621s, 26528 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0217707s, 26528 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0219911s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0220006s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0220107s, 26528 KB] g=2, 9 evaluated, 8 expanded
[t=0.0222076s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0222185s, 26528 KB] g=4, 16 evaluated, 15 expanded
[t=0.022265s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0222737s, 26528 KB] g=4, 17 evaluated, 16 expanded
[t=0.0226279s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0226372s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0226465s, 26528 KB] g=6, 31 evaluated, 30 expanded
[t=0.0228063s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0228151s, 26528 KB] g=8, 37 evaluated, 36 expanded
[t=0.0228742s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0228829s, 26528 KB] g=8, 39 evaluated, 38 expanded
[t=0.023115s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0231247s, 26528 KB] g=10, 48 evaluated, 47 expanded
[t=0.023209s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0232186s, 26528 KB] g=10, 51 evaluated, 50 expanded
[t=0.0235999s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0236097s, 26528 KB] g=12, 66 evaluated, 65 expanded
[t=0.0239833s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0239933s, 26528 KB] g=14, 81 evaluated, 80 expanded
[t=0.0240385s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0240479s, 26528 KB] g=14, 82 evaluated, 81 expanded
[t=0.0244573s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0244667s, 26528 KB] g=16, 98 evaluated, 97 expanded
[t=0.0249785s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0249888s, 26528 KB] g=18, 118 evaluated, 117 expanded
[t=0.0251222s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0251314s, 26528 KB] g=20, 123 evaluated, 122 expanded
[t=0.0255342s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0255439s, 26528 KB] g=20, 139 evaluated, 138 expanded
[t=0.0260105s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0260262s, 26528 KB] g=22, 157 evaluated, 156 expanded
[t=0.0267048s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0267177s, 26528 KB] g=24, 180 evaluated, 179 expanded
[t=0.0270637s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0270738s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0270817s, 26528 KB] g=26, 194 evaluated, 193 expanded
[t=0.0274159s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0274247s, 26528 KB] g=28, 207 evaluated, 206 expanded
[t=0.0278657s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0278744s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.027882s, 26528 KB] g=28, 225 evaluated, 224 expanded
[t=0.0281862s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0281947s, 26528 KB] g=30, 237 evaluated, 236 expanded
[t=0.0284912s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0284996s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.028507s, 26528 KB] g=30, 249 evaluated, 248 expanded
[t=0.0287959s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0288045s, 26528 KB] g=32, 260 evaluated, 259 expanded
[t=0.0288372s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0288457s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0288534s, 26528 KB] g=32, 261 evaluated, 260 expanded
[t=0.0290783s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0290873s, 26528 KB] g=34, 271 evaluated, 270 expanded
[t=0.0292979s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0293075s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0293155s, 26528 KB] g=34, 280 evaluated, 279 expanded
[t=0.0295228s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0295318s, 26528 KB] g=36, 289 evaluated, 288 expanded
[t=0.0295637s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0295726s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0295806s, 26528 KB] g=36, 290 evaluated, 289 expanded
[t=0.0297548s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.029767s, 26528 KB] g=38, 298 evaluated, 297 expanded
[t=0.0299039s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.029913s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0299213s, 26528 KB] g=38, 304 evaluated, 303 expanded
[t=0.0300679s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0300777s, 26528 KB] g=40, 311 evaluated, 310 expanded
[t=0.0302128s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0302233s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0302314s, 26528 KB] g=40, 317 evaluated, 316 expanded
[t=0.030352s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0303606s, 26528 KB] g=42, 323 evaluated, 322 expanded
[t=0.0304265s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0304353s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0304433s, 26528 KB] g=42, 326 evaluated, 325 expanded
[t=0.0305402s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0305488s, 26528 KB] g=44, 331 evaluated, 330 expanded
[t=0.0305753s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0305839s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0305918s, 26528 KB] g=44, 332 evaluated, 331 expanded
[t=0.0306676s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0306762s, 26528 KB] g=46, 336 evaluated, 335 expanded
[t=0.0307352s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0307443s, 26528 KB] g=48, 339 evaluated, 338 expanded
[t=0.0308315s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0308403s, 26528 KB] g=50, 344 evaluated, 343 expanded
[t=0.0309705s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0309791s, 26528 KB] g=52, 352 evaluated, 351 expanded
[t=0.0310327s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0310412s, 26528 KB] g=52, 355 evaluated, 354 expanded
[t=0.0311244s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0311332s, 26528 KB] g=54, 360 evaluated, 359 expanded
[t=0.0312188s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0312274s, 26528 KB] g=58, 366 evaluated, 365 expanded
[t=0.0312591s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0312672s, 26528 KB] g=59, 368 evaluated, 367 expanded
[t=0.0312955s, 26528 KB] Solution found!
[t=0.0313059s, 26528 KB] Actual search time: 0.00963031s
unstack b10 b7 (1)
put-down b10 (1)
unstack b4 b20 (1)
put-down b4 (1)
pick-up b19 (1)
stack b19 b11 (1)
unstack b20 b17 (1)
put-down b20 (1)
unstack b22 b15 (1)
put-down b22 (1)
unstack b15 b6 (1)
put-down b15 (1)
unstack b5 b14 (1)
put-down b5 (1)
unstack b14 b13 (1)
put-down b14 (1)
unstack b13 b9 (1)
put-down b13 (1)
unstack b7 b18 (1)
put-down b7 (1)
unstack b18 b16 (1)
stack b18 b19 (1)
unstack b16 b2 (1)
put-down b16 (1)
unstack b2 b8 (1)
stack b2 b4 (1)
pick-up b5 (1)
stack b5 b18 (1)
pick-up b20 (1)
stack b20 b5 (1)
pick-up b13 (1)
stack b13 b20 (1)
pick-up b22 (1)
stack b22 b13 (1)
pick-up b14 (1)
stack b14 b22 (1)
pick-up b6 (1)
stack b6 b14 (1)
pick-up b7 (1)
stack b7 b6 (1)
pick-up b17 (1)
stack b17 b7 (1)
pick-up b15 (1)
stack b15 b17 (1)
unstack b1 b12 (1)
stack b1 b9 (1)
unstack b12 b21 (1)
stack b12 b2 (1)
unstack b21 b3 (1)
stack b21 b15 (1)
pick-up b8 (1)
stack b8 b12 (1)
pick-up b3 (1)
stack b3 b8 (1)
unstack b1 b9 (1)
put-down b1 (1)
pick-up b9 (1)
stack b9 b3 (1)
pick-up b1 (1)
stack b1 b9 (1)
[t=0.0313147s, 26528 KB] Plan length: 60 step(s).
[t=0.0313147s, 26528 KB] Plan cost: 60
[t=0.0313147s, 26528 KB] Expanded 369 state(s).
[t=0.0313147s, 26528 KB] Reopened 0 state(s).
[t=0.0313147s, 26528 KB] Evaluated 370 state(s).
[t=0.0313147s, 26528 KB] Evaluations: 740
[t=0.0313147s, 26528 KB] Generated 4275 state(s).
[t=0.0313147s, 26528 KB] Dead ends: 0 state(s).
[t=0.0313147s, 26528 KB] Number of registered states: 370
[t=0.0313147s, 26528 KB] Int hash set load factor: 370/512 = 0.722656
[t=0.0313147s, 26528 KB] Int hash set resizes: 9
[t=0.0313147s, 26528 KB] Search time: 0.0096798s
[t=0.0313147s, 26528 KB] Total time: 0.0313147s
Solution found.
Peak memory: 26528 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.17s
