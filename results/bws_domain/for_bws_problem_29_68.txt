INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_29/bws_problem_29_68.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.016s wall-clock]
2728 relevant atoms
1827 auxiliary atoms
4555 final queue length
7981 total queue pushes
Completing instantiation... [0.020s CPU, 0.027s wall-clock]
Instantiating: [0.040s CPU, 0.044s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
30 uncovered facts
Choosing groups: [0.000s CPU, 0.002s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.001s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.001s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.003s wall-clock]
Translating task: [0.050s CPU, 0.050s wall-clock]
2494 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
58 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.021s wall-clock]
Reordering and filtering variables...
59 of 59 variables necessary.
30 of 59 mutex groups necessary.
1682 of 1682 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.011s wall-clock]
Translator variables: 59
Translator derived variables: 0
Translator facts: 930
Translator goal facts: 26
Translator mutex groups: 30
Translator total mutex groups size: 900
Translator operators: 1682
Translator axioms: 0
Translator task size: 14443
Translator peak memory: 40824 KB
Writing output... [0.000s CPU, 0.008s wall-clock]
Done! [0.150s CPU, 0.150s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.7046e-05s, 24488 KB] reading input...
[t=0.00495958s, 26220 KB] done reading input!
[t=0.0058207s, 26616 KB] Initializing landmark count heuristic...
[t=0.00585212s, 26616 KB] Generating landmark graph...
[t=0.00594266s, 26748 KB] Building a landmark graph with reasonable orders.
[t=0.00602797s, 26748 KB] Initializing Exploration...
[t=0.00649262s, 27200 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0316495s, 27992 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0317708s, 27992 KB] Landmarks generation time: 0.0258442s
[t=0.0318018s, 27992 KB] Discovered 134 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0318193s, 27992 KB] 655 edges
[t=0.031829s, 27992 KB] approx. reasonable orders
[t=0.0322015s, 27992 KB] approx. obedient reasonable orders
[t=0.0322462s, 27992 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0322569s, 27992 KB] Landmarks generation time: 0.0264006s
[t=0.0322673s, 27992 KB] Discovered 134 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0322756s, 27992 KB] 658 edges
[t=0.0322848s, 27992 KB] Landmark graph generation time: 0.02644s
[t=0.0322937s, 27992 KB] Landmark graph contains 134 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0323022s, 27992 KB] Landmark graph contains 658 orderings.
[t=0.0329605s, 28016 KB] Simplifying 6670 unary operators... done! [5046 unary operators]
[t=0.0346089s, 28016 KB] time to simplify: 0.00175792s
[t=0.0348145s, 28016 KB] Initializing additive heuristic...
[t=0.0348346s, 28016 KB] Initializing FF heuristic...
[t=0.0348879s, 28016 KB] Building successor generator...done!
[t=0.0351826s, 28016 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0351919s, 28016 KB] time for successor generation creation: 0.000263309s
[t=0.0352054s, 28016 KB] Variables: 59
[t=0.0352137s, 28016 KB] FactPairs: 930
[t=0.035222s, 28016 KB] Bytes per state: 24
[t=0.0353097s, 28016 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0353441s, 28016 KB] 59 initial landmarks, 26 goal landmarks
[t=0.0354116s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 75
[t=0.0354217s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 54
[t=0.0354304s, 28016 KB] g=0, 1 evaluated, 0 expanded
[t=0.0354443s, 28016 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 75
[t=0.0354531s, 28016 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 54
[t=0.0356779s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 74
[t=0.0356875s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 53
[t=0.0356963s, 28016 KB] g=2, 6 evaluated, 5 expanded
[t=0.0359186s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 73
[t=0.0359297s, 28016 KB] g=4, 11 evaluated, 10 expanded
[t=0.0365531s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 72
[t=0.0365644s, 28016 KB] g=6, 26 evaluated, 25 expanded
[t=0.0366601s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 70
[t=0.0366695s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 52
[t=0.0366776s, 28016 KB] g=6, 28 evaluated, 27 expanded
[t=0.0368916s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 69
[t=0.0369006s, 28016 KB] g=8, 33 evaluated, 32 expanded
[t=0.0376297s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 68
[t=0.0376394s, 28016 KB] g=10, 51 evaluated, 50 expanded
[t=0.0379322s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 51
[t=0.0379414s, 28016 KB] g=10, 58 evaluated, 57 expanded
[t=0.0381552s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 67
[t=0.0381654s, 28016 KB] g=12, 63 evaluated, 62 expanded
[t=0.0388493s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 64
[t=0.038869s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 50
[t=0.038884s, 28016 KB] g=14, 79 evaluated, 78 expanded
[t=0.0392635s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 63
[t=0.0392739s, 28016 KB] g=16, 88 evaluated, 87 expanded
[t=0.0394492s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 62
[t=0.0394585s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 49
[t=0.0394676s, 28016 KB] g=16, 92 evaluated, 91 expanded
[t=0.039803s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 61
[t=0.0398161s, 28016 KB] g=18, 100 evaluated, 99 expanded
[t=0.0398726s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 48
[t=0.0398821s, 28016 KB] g=18, 101 evaluated, 100 expanded
[t=0.040575s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 58
[t=0.0405875s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 47
[t=0.0405959s, 28016 KB] g=20, 118 evaluated, 117 expanded
[t=0.04093s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 57
[t=0.0409474s, 28016 KB] g=22, 126 evaluated, 125 expanded
[t=0.0411296s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0411408s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 46
[t=0.0411493s, 28016 KB] g=22, 130 evaluated, 129 expanded
[t=0.0414837s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0415006s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.04151s, 28016 KB] g=24, 138 evaluated, 137 expanded
[t=0.0418447s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0418588s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.0418673s, 28016 KB] g=26, 146 evaluated, 145 expanded
[t=0.0421591s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0421687s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0421786s, 28016 KB] g=28, 153 evaluated, 152 expanded
[t=0.0424721s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0424822s, 28016 KB] g=30, 160 evaluated, 159 expanded
[t=0.0426164s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.042626s, 28016 KB] g=31, 163 evaluated, 162 expanded
[t=0.0432103s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0432223s, 28016 KB] g=34, 177 evaluated, 176 expanded
[t=0.0436468s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0436602s, 28016 KB] g=36, 187 evaluated, 186 expanded
[t=0.0437137s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.043723s, 28016 KB] g=36, 188 evaluated, 187 expanded
[t=0.044479s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0444948s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0445066s, 28016 KB] g=38, 206 evaluated, 205 expanded
[t=0.0448824s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0448996s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0449099s, 28016 KB] g=40, 215 evaluated, 214 expanded
[t=0.0453329s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0453432s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0453515s, 28016 KB] g=42, 225 evaluated, 224 expanded
[t=0.0462768s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0462869s, 28016 KB] g=46, 247 evaluated, 246 expanded
[t=0.0467087s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0467184s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0467269s, 28016 KB] g=48, 257 evaluated, 256 expanded
[t=0.0470956s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0471051s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.047113s, 28016 KB] g=50, 266 evaluated, 265 expanded
[t=0.0474099s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.047419s, 28016 KB] g=50, 273 evaluated, 272 expanded
[t=0.0477608s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0477704s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0477785s, 28016 KB] g=52, 281 evaluated, 280 expanded
[t=0.0480779s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0480881s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0480961s, 28016 KB] g=54, 288 evaluated, 287 expanded
[t=0.0484979s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0485073s, 28016 KB] g=57, 298 evaluated, 297 expanded
[t=0.0485989s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0486076s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0486193s, 28016 KB] g=58, 300 evaluated, 299 expanded
[t=0.0489583s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0489677s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0489756s, 28016 KB] g=60, 308 evaluated, 307 expanded
[t=0.049265s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0492753s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0492866s, 28016 KB] g=62, 315 evaluated, 314 expanded
[t=0.0512031s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0512179s, 28016 KB] g=68, 363 evaluated, 362 expanded
[t=0.0589s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0589396s, 28016 KB] g=68, 556 evaluated, 555 expanded
[t=0.0592177s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0592283s, 28016 KB] g=70, 563 evaluated, 562 expanded
[t=0.0594617s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0594878s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0594973s, 28016 KB] g=72, 569 evaluated, 568 expanded
[t=0.0596521s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0596617s, 28016 KB] g=73, 573 evaluated, 572 expanded
[t=0.0597102s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0597192s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0597272s, 28016 KB] g=74, 574 evaluated, 573 expanded
[t=0.059981s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0599942s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0600028s, 28016 KB] g=76, 580 evaluated, 579 expanded
[t=0.0617391s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0617605s, 28016 KB] g=82, 628 evaluated, 627 expanded
[t=0.0618085s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0618187s, 28016 KB] g=82, 629 evaluated, 628 expanded
[t=0.0621816s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0621949s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0622032s, 28016 KB] g=84, 639 evaluated, 638 expanded
[t=0.0624206s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0624346s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0624426s, 28016 KB] g=86, 645 evaluated, 644 expanded
[t=0.0634577s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0634719s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.063481s, 28016 KB] g=92, 674 evaluated, 673 expanded
[t=0.0652788s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0652936s, 28016 KB] g=104, 724 evaluated, 723 expanded
[t=0.0658225s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.065833s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0658411s, 28016 KB] g=110, 738 evaluated, 737 expanded
[t=0.068598s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0686093s, 28016 KB] g=124, 812 evaluated, 811 expanded
[t=0.0687708s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0687808s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0687923s, 28016 KB] g=126, 816 evaluated, 815 expanded
[t=0.0691321s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0691418s, 28016 KB] g=130, 825 evaluated, 824 expanded
[t=0.0692595s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0692689s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0692774s, 28016 KB] g=132, 828 evaluated, 827 expanded
[t=0.079422s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0794757s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0794862s, 28016 KB] g=170, 1150 evaluated, 1149 expanded
[t=0.0797366s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0797595s, 28016 KB] g=174, 1159 evaluated, 1158 expanded
[t=0.079866s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0798783s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0798866s, 28016 KB] g=176, 1162 evaluated, 1161 expanded
[t=0.080737s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0807489s, 28016 KB] g=192, 1200 evaluated, 1199 expanded
[t=0.0809388s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0809481s, 28016 KB] g=200, 1210 evaluated, 1209 expanded
[t=0.0810227s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.081032s, 28016 KB] g=204, 1214 evaluated, 1213 expanded
[t=0.0810518s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0810611s, 28016 KB] g=205, 1215 evaluated, 1214 expanded
[t=0.0810783s, 28016 KB] Solution found!
[t=0.0811004s, 28016 KB] Actual search time: 0.0457537s
unstack b1 b16 (1)
put-down b1 (1)
unstack b12 b22 (1)
put-down b12 (1)
unstack b22 b4 (1)
stack b22 b12 (1)
unstack b16 b20 (1)
put-down b16 (1)
unstack b20 b13 (1)
put-down b20 (1)
unstack b13 b17 (1)
put-down b13 (1)
unstack b17 b21 (1)
stack b17 b1 (1)
unstack b4 b2 (1)
stack b4 b21 (1)
unstack b2 b18 (1)
put-down b2 (1)
unstack b18 b9 (1)
stack b18 b20 (1)
unstack b9 b6 (1)
stack b9 b4 (1)
unstack b6 b28 (1)
stack b6 b18 (1)
pick-up b13 (1)
stack b13 b28 (1)
unstack b8 b14 (1)
stack b8 b6 (1)
unstack b14 b15 (1)
put-down b14 (1)
unstack b15 b19 (1)
put-down b15 (1)
unstack b19 b10 (1)
put-down b19 (1)
unstack b10 b26 (1)
stack b10 b19 (1)
pick-up b14 (1)
stack b14 b10 (1)
unstack b26 b25 (1)
stack b26 b17 (1)
pick-up b16 (1)
stack b16 b26 (1)
unstack b11 b23 (1)
put-down b11 (1)
unstack b23 b5 (1)
put-down b23 (1)
pick-up b11 (1)
stack b11 b23 (1)
unstack b5 b29 (1)
stack b5 b22 (1)
pick-up b15 (1)
stack b15 b5 (1)
pick-up b29 (1)
stack b29 b25 (1)
unstack b13 b28 (1)
put-down b13 (1)
unstack b28 b27 (1)
stack b28 b16 (1)
pick-up b13 (1)
stack b13 b28 (1)
unstack b9 b4 (1)
put-down b9 (1)
pick-up b27 (1)
stack b27 b9 (1)
unstack b4 b21 (1)
put-down b4 (1)
unstack b21 b7 (1)
stack b21 b29 (1)
pick-up b4 (1)
stack b4 b21 (1)
unstack b7 b3 (1)
stack b7 b13 (1)
unstack b3 b24 (1)
stack b3 b8 (1)
pick-up b24 (1)
stack b24 b2 (1)
unstack b14 b10 (1)
put-down b14 (1)
unstack b10 b19 (1)
put-down b10 (1)
pick-up b19 (1)
stack b19 b24 (1)
pick-up b10 (1)
stack b10 b19 (1)
pick-up b14 (1)
stack b14 b10 (1)
unstack b27 b9 (1)
put-down b27 (1)
pick-up b9 (1)
stack b9 b4 (1)
pick-up b27 (1)
stack b27 b9 (1)
unstack b15 b5 (1)
put-down b15 (1)
unstack b5 b22 (1)
put-down b5 (1)
pick-up b15 (1)
stack b15 b5 (1)
unstack b22 b12 (1)
put-down b22 (1)
pick-up b12 (1)
stack b12 b27 (1)
pick-up b22 (1)
stack b22 b12 (1)
unstack b15 b5 (1)
put-down b15 (1)
pick-up b5 (1)
stack b5 b22 (1)
pick-up b15 (1)
stack b15 b5 (1)
unstack b3 b8 (1)
put-down b3 (1)
unstack b8 b6 (1)
put-down b8 (1)
pick-up b3 (1)
stack b3 b8 (1)
unstack b6 b18 (1)
put-down b6 (1)
unstack b18 b20 (1)
put-down b18 (1)
pick-up b20 (1)
stack b20 b14 (1)
pick-up b18 (1)
stack b18 b20 (1)
pick-up b6 (1)
stack b6 b18 (1)
unstack b3 b8 (1)
put-down b3 (1)
pick-up b8 (1)
stack b8 b6 (1)
pick-up b3 (1)
stack b3 b8 (1)
unstack b15 b5 (1)
put-down b15 (1)
unstack b5 b22 (1)
put-down b5 (1)
pick-up b15 (1)
stack b15 b5 (1)
unstack b22 b12 (1)
put-down b22 (1)
unstack b12 b27 (1)
put-down b12 (1)
unstack b27 b9 (1)
put-down b27 (1)
pick-up b12 (1)
stack b12 b27 (1)
pick-up b22 (1)
stack b22 b12 (1)
unstack b15 b5 (1)
put-down b15 (1)
pick-up b5 (1)
stack b5 b22 (1)
pick-up b15 (1)
stack b15 b5 (1)
unstack b9 b4 (1)
put-down b9 (1)
unstack b4 b21 (1)
put-down b4 (1)
pick-up b9 (1)
stack b9 b4 (1)
unstack b21 b29 (1)
put-down b21 (1)
unstack b29 b25 (1)
put-down b29 (1)
pick-up b25 (1)
stack b25 b7 (1)
pick-up b29 (1)
stack b29 b25 (1)
pick-up b21 (1)
stack b21 b29 (1)
unstack b9 b4 (1)
put-down b9 (1)
pick-up b4 (1)
stack b4 b21 (1)
pick-up b9 (1)
stack b9 b4 (1)
unstack b15 b5 (1)
put-down b15 (1)
unstack b5 b22 (1)
put-down b5 (1)
unstack b22 b12 (1)
put-down b22 (1)
pick-up b5 (1)
stack b5 b22 (1)
pick-up b15 (1)
stack b15 b5 (1)
unstack b12 b27 (1)
put-down b12 (1)
pick-up b27 (1)
stack b27 b9 (1)
pick-up b12 (1)
stack b12 b27 (1)
unstack b15 b5 (1)
put-down b15 (1)
unstack b5 b22 (1)
put-down b5 (1)
pick-up b15 (1)
stack b15 b5 (1)
pick-up b22 (1)
stack b22 b12 (1)
unstack b15 b5 (1)
put-down b15 (1)
pick-up b5 (1)
stack b5 b22 (1)
pick-up b15 (1)
stack b15 b5 (1)
[t=0.0811107s, 28016 KB] Plan length: 206 step(s).
[t=0.0811107s, 28016 KB] Plan cost: 206
[t=0.0811107s, 28016 KB] Expanded 1215 state(s).
[t=0.0811107s, 28016 KB] Reopened 0 state(s).
[t=0.0811107s, 28016 KB] Evaluated 1216 state(s).
[t=0.0811107s, 28016 KB] Evaluations: 2432
[t=0.0811107s, 28016 KB] Generated 10869 state(s).
[t=0.0811107s, 28016 KB] Dead ends: 0 state(s).
[t=0.0811107s, 28016 KB] Number of registered states: 1216
[t=0.0811107s, 28016 KB] Int hash set load factor: 1216/2048 = 0.59375
[t=0.0811107s, 28016 KB] Int hash set resizes: 11
[t=0.0811107s, 28016 KB] Search time: 0.0458013s
[t=0.0811107s, 28016 KB] Total time: 0.0811107s
Solution found.
Peak memory: 28016 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.28s
