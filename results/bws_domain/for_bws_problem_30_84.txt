INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_30/bws_problem_30_84.pddl --sas-file output.sas
Parsing...
Parsing: [0.010s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.018s wall-clock]
2912 relevant atoms
1950 auxiliary atoms
4862 final queue length
8528 total queue pushes
Completing instantiation... [0.030s CPU, 0.029s wall-clock]
Instantiating: [0.040s CPU, 0.049s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.002s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
31 uncovered facts
Choosing groups: [0.000s CPU, 0.002s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.001s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.002s wall-clock]
Translating task: [0.050s CPU, 0.048s wall-clock]
2670 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
60 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.022s wall-clock]
Reordering and filtering variables...
61 of 61 variables necessary.
31 of 61 mutex groups necessary.
1800 of 1800 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.013s wall-clock]
Translator variables: 61
Translator derived variables: 0
Translator facts: 992
Translator goal facts: 25
Translator mutex groups: 31
Translator total mutex groups size: 961
Translator operators: 1800
Translator axioms: 0
Translator task size: 15449
Translator peak memory: 41340 KB
Writing output... [0.010s CPU, 0.009s wall-clock]
Done! [0.150s CPU, 0.158s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=3.3844e-05s, 24488 KB] reading input...
[t=0.00576987s, 26364 KB] done reading input!
[t=0.00698622s, 26760 KB] Initializing landmark count heuristic...
[t=0.00705701s, 26760 KB] Generating landmark graph...
[t=0.00718796s, 26892 KB] Building a landmark graph with reasonable orders.
[t=0.00731216s, 27024 KB] Initializing Exploration...
[t=0.00800052s, 27316 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0333215s, 28108 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0334246s, 28108 KB] Landmarks generation time: 0.0262453s
[t=0.0334481s, 28108 KB] Discovered 130 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0334653s, 28108 KB] 582 edges
[t=0.0334751s, 28108 KB] approx. reasonable orders
[t=0.0338383s, 28108 KB] approx. obedient reasonable orders
[t=0.0338799s, 28108 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0338897s, 28108 KB] Landmarks generation time: 0.0268293s
[t=0.0338995s, 28108 KB] Discovered 130 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0339077s, 28108 KB] 584 edges
[t=0.0339159s, 28108 KB] Landmark graph generation time: 0.026866s
[t=0.0339246s, 28108 KB] Landmark graph contains 130 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.033933s, 28108 KB] Landmark graph contains 584 orderings.
[t=0.0345886s, 28136 KB] Simplifying 7140 unary operators... done! [5400 unary operators]
[t=0.0364139s, 28268 KB] time to simplify: 0.00194475s
[t=0.0366372s, 28268 KB] Initializing additive heuristic...
[t=0.0366574s, 28268 KB] Initializing FF heuristic...
[t=0.0367156s, 28268 KB] Building successor generator...done!
[t=0.0370582s, 28268 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0370694s, 28268 KB] time for successor generation creation: 0.000313345s
[t=0.0370849s, 28268 KB] Variables: 61
[t=0.0370936s, 28268 KB] FactPairs: 992
[t=0.0371022s, 28268 KB] Bytes per state: 24
[t=0.0371883s, 28268 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0372225s, 28268 KB] 60 initial landmarks, 25 goal landmarks
[t=0.0373013s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 70
[t=0.0373108s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 52
[t=0.0373192s, 28268 KB] g=0, 1 evaluated, 0 expanded
[t=0.0373331s, 28268 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 70
[t=0.0373418s, 28268 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 52
[t=0.0377899s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 69
[t=0.0378073s, 28268 KB] g=2, 10 evaluated, 9 expanded
[t=0.039069s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 68
[t=0.0390809s, 28268 KB] g=3, 39 evaluated, 38 expanded
[t=0.0391378s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 67
[t=0.0391472s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 51
[t=0.0391557s, 28268 KB] g=4, 40 evaluated, 39 expanded
[t=0.0393377s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 66
[t=0.039347s, 28268 KB] g=5, 44 evaluated, 43 expanded
[t=0.0397373s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 65
[t=0.0397466s, 28268 KB] g=7, 53 evaluated, 52 expanded
[t=0.0398029s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 64
[t=0.0398118s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 50
[t=0.0398198s, 28268 KB] g=8, 54 evaluated, 53 expanded
[t=0.0401679s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 63
[t=0.0401776s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 49
[t=0.0401858s, 28268 KB] g=10, 62 evaluated, 61 expanded
[t=0.0405795s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 61
[t=0.0405906s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 48
[t=0.0405988s, 28268 KB] g=12, 71 evaluated, 70 expanded
[t=0.0409679s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.040984s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 47
[t=0.0409927s, 28268 KB] g=14, 79 evaluated, 78 expanded
[t=0.0413522s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 57
[t=0.0413695s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 46
[t=0.0413778s, 28268 KB] g=16, 87 evaluated, 86 expanded
[t=0.0417395s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0417568s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0417676s, 28268 KB] g=18, 95 evaluated, 94 expanded
[t=0.0420843s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0421011s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.0421094s, 28268 KB] g=20, 102 evaluated, 101 expanded
[t=0.0427805s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0427952s, 28268 KB] g=24, 117 evaluated, 116 expanded
[t=0.0431466s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.043157s, 28268 KB] g=26, 125 evaluated, 124 expanded
[t=0.0432135s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0432227s, 28268 KB] g=26, 126 evaluated, 125 expanded
[t=0.0438389s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0438512s, 28268 KB] g=28, 140 evaluated, 139 expanded
[t=0.0441895s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0442049s, 28268 KB] g=30, 147 evaluated, 146 expanded
[t=0.0445658s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0445765s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0445853s, 28268 KB] g=32, 155 evaluated, 154 expanded
[t=0.0449847s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0449947s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0450035s, 28268 KB] g=34, 164 evaluated, 163 expanded
[t=0.045362s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0453721s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0453816s, 28268 KB] g=36, 172 evaluated, 171 expanded
[t=0.0457799s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0457894s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0457978s, 28268 KB] g=38, 181 evaluated, 180 expanded
[t=0.0461587s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.04617s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0461788s, 28268 KB] g=40, 189 evaluated, 188 expanded
[t=0.0465687s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0465788s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0465868s, 28268 KB] g=42, 198 evaluated, 197 expanded
[t=0.0473704s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0473852s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0473939s, 28268 KB] g=46, 216 evaluated, 215 expanded
[t=0.0478069s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0478417s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0478515s, 28268 KB] g=48, 224 evaluated, 223 expanded
[t=0.0483665s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.048377s, 28268 KB] g=51, 236 evaluated, 235 expanded
[t=0.0501711s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0501871s, 28268 KB] g=54, 277 evaluated, 276 expanded
[t=0.0511269s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0511388s, 28268 KB] g=58, 299 evaluated, 298 expanded
[t=0.0514472s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0514627s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0514738s, 28268 KB] g=60, 306 evaluated, 305 expanded
[t=0.052119s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0521436s, 28268 KB] g=63, 321 evaluated, 320 expanded
[t=0.0526858s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0527049s, 28268 KB] g=64, 333 evaluated, 332 expanded
[t=0.0529908s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0530046s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0530132s, 28268 KB] g=66, 339 evaluated, 338 expanded
[t=0.0535817s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0535972s, 28268 KB] g=70, 352 evaluated, 351 expanded
[t=0.0538196s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0538314s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0538396s, 28268 KB] g=72, 357 evaluated, 356 expanded
[t=0.0582139s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0582539s, 28268 KB] g=84, 456 evaluated, 455 expanded
[t=0.0585161s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0585262s, 28268 KB] g=86, 462 evaluated, 461 expanded
[t=0.0587493s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0587602s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.05877s, 28268 KB] g=88, 467 evaluated, 466 expanded
[t=0.078732s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0787993s, 28268 KB] g=104, 937 evaluated, 936 expanded
[t=0.0797665s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0797778s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0798033s, 28268 KB] g=110, 960 evaluated, 959 expanded
[t=0.0897173s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0898045s, 28268 KB] g=126, 1190 evaluated, 1189 expanded
[t=0.0899541s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0899652s, 28268 KB] g=127, 1193 evaluated, 1192 expanded
[t=0.09002s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0900296s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.090038s, 28268 KB] g=128, 1194 evaluated, 1193 expanded
[t=0.0903599s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0903725s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.090381s, 28268 KB] g=130, 1201 evaluated, 1200 expanded
[t=0.0906378s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0906481s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0906561s, 28268 KB] g=132, 1207 evaluated, 1206 expanded
[t=0.0908702s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0908794s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0908876s, 28268 KB] g=134, 1212 evaluated, 1211 expanded
[t=0.0911007s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0911102s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0911194s, 28268 KB] g=136, 1217 evaluated, 1216 expanded
[t=0.0914581s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0914688s, 28268 KB] g=140, 1225 evaluated, 1224 expanded
[t=0.091608s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0916212s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0916301s, 28268 KB] g=142, 1228 evaluated, 1227 expanded
[t=0.0926398s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0926583s, 28268 KB] g=150, 1251 evaluated, 1250 expanded
[t=0.0930706s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0930831s, 28268 KB] g=154, 1260 evaluated, 1259 expanded
[t=0.0932162s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0932259s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0932344s, 28268 KB] g=156, 1263 evaluated, 1262 expanded
[t=0.12621s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.126306s, 28268 KB] g=204, 2139 evaluated, 2138 expanded
[t=0.126472s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.12649s, 28268 KB] g=206, 2143 evaluated, 2142 expanded
[t=0.127443s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.127454s, 28268 KB] g=214, 2172 evaluated, 2171 expanded
[t=0.127529s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.127542s, 28268 KB] g=214, 2174 evaluated, 2173 expanded
[t=0.127733s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.127759s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.127772s, 28268 KB] g=216, 2177 evaluated, 2176 expanded
[t=0.128985s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.129004s, 28268 KB] g=232, 2219 evaluated, 2218 expanded
[t=0.129245s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.129255s, 28268 KB] g=240, 2229 evaluated, 2228 expanded
[t=0.12934s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.12935s, 28268 KB] g=244, 2233 evaluated, 2232 expanded
[t=0.129371s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.129393s, 28268 KB] g=245, 2234 evaluated, 2233 expanded
[t=0.12941s, 28268 KB] Solution found!
[t=0.129428s, 28268 KB] Actual search time: 0.0922038s
unstack b7 b24 (1)
put-down b7 (1)
unstack b24 b22 (1)
stack b24 b23 (1)
unstack b22 b28 (1)
put-down b22 (1)
unstack b28 b6 (1)
stack b28 b14 (1)
unstack b6 b30 (1)
put-down b6 (1)
unstack b16 b2 (1)
stack b16 b30 (1)
unstack b2 b11 (1)
stack b2 b13 (1)
unstack b11 b15 (1)
stack b11 b8 (1)
pick-up b22 (1)
stack b22 b15 (1)
pick-up b7 (1)
stack b7 b11 (1)
unstack b22 b15 (1)
put-down b22 (1)
unstack b15 b1 (1)
put-down b15 (1)
pick-up b22 (1)
stack b22 b15 (1)
unstack b1 b3 (1)
put-down b1 (1)
unstack b3 b20 (1)
put-down b3 (1)
unstack b20 b29 (1)
stack b20 b6 (1)
unstack b29 b5 (1)
stack b29 b7 (1)
unstack b5 b9 (1)
put-down b5 (1)
unstack b9 b27 (1)
stack b9 b1 (1)
unstack b27 b10 (1)
put-down b27 (1)
pick-up b3 (1)
stack b3 b9 (1)
unstack b10 b12 (1)
put-down b10 (1)
pick-up b12 (1)
stack b12 b27 (1)
pick-up b10 (1)
stack b10 b12 (1)
unstack b24 b23 (1)
put-down b24 (1)
unstack b23 b19 (1)
put-down b23 (1)
pick-up b24 (1)
stack b24 b23 (1)
unstack b28 b14 (1)
put-down b28 (1)
pick-up b14 (1)
stack b14 b29 (1)
pick-up b28 (1)
stack b28 b14 (1)
unstack b19 b18 (1)
put-down b19 (1)
unstack b18 b17 (1)
stack b18 b16 (1)
pick-up b19 (1)
stack b19 b18 (1)
unstack b2 b13 (1)
put-down b2 (1)
pick-up b13 (1)
stack b13 b3 (1)
pick-up b2 (1)
stack b2 b13 (1)
unstack b19 b18 (1)
put-down b19 (1)
unstack b18 b16 (1)
put-down b18 (1)
unstack b16 b30 (1)
put-down b16 (1)
unstack b30 b25 (1)
put-down b30 (1)
pick-up b16 (1)
stack b16 b30 (1)
pick-up b18 (1)
stack b18 b16 (1)
pick-up b19 (1)
stack b19 b18 (1)
pick-up b25 (1)
stack b25 b20 (1)
unstack b2 b13 (1)
put-down b2 (1)
unstack b13 b3 (1)
put-down b13 (1)
pick-up b2 (1)
stack b2 b13 (1)
unstack b3 b9 (1)
put-down b3 (1)
unstack b9 b1 (1)
put-down b9 (1)
pick-up b1 (1)
stack b1 b19 (1)
pick-up b9 (1)
stack b9 b1 (1)
pick-up b3 (1)
stack b3 b9 (1)
unstack b2 b13 (1)
put-down b2 (1)
pick-up b13 (1)
stack b13 b3 (1)
pick-up b2 (1)
stack b2 b13 (1)
unstack b28 b14 (1)
put-down b28 (1)
unstack b14 b29 (1)
put-down b14 (1)
unstack b29 b7 (1)
put-down b29 (1)
pick-up b14 (1)
stack b14 b29 (1)
pick-up b28 (1)
stack b28 b14 (1)
unstack b7 b11 (1)
put-down b7 (1)
unstack b11 b8 (1)
put-down b11 (1)
unstack b8 b21 (1)
stack b8 b5 (1)
unstack b21 b26 (1)
stack b21 b25 (1)
pick-up b11 (1)
stack b11 b8 (1)
unstack b26 b4 (1)
stack b26 b2 (1)
pick-up b4 (1)
stack b4 b17 (1)
pick-up b7 (1)
stack b7 b11 (1)
unstack b24 b23 (1)
put-down b24 (1)
pick-up b23 (1)
stack b23 b26 (1)
pick-up b24 (1)
stack b24 b23 (1)
unstack b28 b14 (1)
put-down b28 (1)
unstack b14 b29 (1)
put-down b14 (1)
pick-up b28 (1)
stack b28 b14 (1)
pick-up b29 (1)
stack b29 b7 (1)
unstack b28 b14 (1)
put-down b28 (1)
pick-up b14 (1)
stack b14 b29 (1)
pick-up b28 (1)
stack b28 b14 (1)
unstack b24 b23 (1)
put-down b24 (1)
unstack b23 b26 (1)
put-down b23 (1)
pick-up b24 (1)
stack b24 b23 (1)
unstack b26 b2 (1)
put-down b26 (1)
unstack b2 b13 (1)
put-down b2 (1)
unstack b13 b3 (1)
put-down b13 (1)
pick-up b2 (1)
stack b2 b13 (1)
pick-up b26 (1)
stack b26 b2 (1)
unstack b24 b23 (1)
put-down b24 (1)
pick-up b23 (1)
stack b23 b26 (1)
pick-up b24 (1)
stack b24 b23 (1)
unstack b3 b9 (1)
put-down b3 (1)
unstack b9 b1 (1)
put-down b9 (1)
unstack b1 b19 (1)
put-down b1 (1)
pick-up b9 (1)
stack b9 b1 (1)
pick-up b3 (1)
stack b3 b9 (1)
unstack b19 b18 (1)
put-down b19 (1)
unstack b18 b16 (1)
put-down b18 (1)
pick-up b19 (1)
stack b19 b18 (1)
unstack b16 b30 (1)
put-down b16 (1)
pick-up b30 (1)
stack b30 b4 (1)
pick-up b16 (1)
stack b16 b30 (1)
unstack b19 b18 (1)
put-down b19 (1)
pick-up b18 (1)
stack b18 b16 (1)
pick-up b19 (1)
stack b19 b18 (1)
unstack b3 b9 (1)
put-down b3 (1)
unstack b9 b1 (1)
put-down b9 (1)
pick-up b1 (1)
stack b1 b19 (1)
pick-up b9 (1)
stack b9 b1 (1)
pick-up b3 (1)
stack b3 b9 (1)
unstack b24 b23 (1)
put-down b24 (1)
unstack b23 b26 (1)
put-down b23 (1)
unstack b26 b2 (1)
put-down b26 (1)
pick-up b23 (1)
stack b23 b26 (1)
pick-up b24 (1)
stack b24 b23 (1)
unstack b2 b13 (1)
put-down b2 (1)
pick-up b13 (1)
stack b13 b3 (1)
pick-up b2 (1)
stack b2 b13 (1)
unstack b24 b23 (1)
put-down b24 (1)
unstack b23 b26 (1)
put-down b23 (1)
pick-up b24 (1)
stack b24 b23 (1)
pick-up b26 (1)
stack b26 b2 (1)
unstack b24 b23 (1)
put-down b24 (1)
pick-up b23 (1)
stack b23 b26 (1)
pick-up b24 (1)
stack b24 b23 (1)
[t=0.129439s, 28268 KB] Plan length: 246 step(s).
[t=0.129439s, 28268 KB] Plan cost: 246
[t=0.129439s, 28268 KB] Expanded 2234 state(s).
[t=0.129439s, 28268 KB] Reopened 0 state(s).
[t=0.129439s, 28268 KB] Evaluated 2235 state(s).
[t=0.129439s, 28268 KB] Evaluations: 4470
[t=0.129439s, 28268 KB] Generated 23643 state(s).
[t=0.129439s, 28268 KB] Dead ends: 0 state(s).
[t=0.129439s, 28268 KB] Number of registered states: 2235
[t=0.129439s, 28268 KB] Int hash set load factor: 2235/4096 = 0.545654
[t=0.129439s, 28268 KB] Int hash set resizes: 12
[t=0.129439s, 28268 KB] Search time: 0.0922514s
[t=0.129439s, 28268 KB] Total time: 0.129439s
Solution found.
Peak memory: 28268 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.34s
