INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_33/bws_problem_33_38.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.021s wall-clock]
3500 relevant atoms
2343 auxiliary atoms
5843 final queue length
10272 total queue pushes
Completing instantiation... [0.050s CPU, 0.047s wall-clock]
Instantiating: [0.070s CPU, 0.070s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.001s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.002s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
34 uncovered facts
Choosing groups: [0.010s CPU, 0.002s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.010s CPU, 0.011s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.001s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.002s wall-clock]
Translating task: [0.060s CPU, 0.059s wall-clock]
3234 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
66 propositions removed
Detecting unreachable propositions: [0.030s CPU, 0.027s wall-clock]
Reordering and filtering variables...
67 of 67 variables necessary.
34 of 67 mutex groups necessary.
2178 of 2178 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.015s wall-clock]
Translator variables: 67
Translator derived variables: 0
Translator facts: 1190
Translator goal facts: 31
Translator mutex groups: 34
Translator total mutex groups size: 1156
Translator operators: 2178
Translator axioms: 0
Translator task size: 18680
Translator peak memory: 43532 KB
Writing output... [0.010s CPU, 0.011s wall-clock]
Done! [0.200s CPU, 0.202s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.0287e-05s, 24488 KB] reading input...
[t=0.00708993s, 26928 KB] done reading input!
[t=0.0088137s, 27324 KB] Initializing landmark count heuristic...
[t=0.00891291s, 27324 KB] Generating landmark graph...
[t=0.0090668s, 27456 KB] Building a landmark graph with reasonable orders.
[t=0.00922177s, 27588 KB] Initializing Exploration...
[t=0.0100237s, 28188 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0450724s, 29112 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.045197s, 29112 KB] Landmarks generation time: 0.0361375s
[t=0.0452211s, 29112 KB] Discovered 153 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0452382s, 29112 KB] 719 edges
[t=0.0452483s, 29112 KB] approx. reasonable orders
[t=0.0516693s, 29112 KB] approx. obedient reasonable orders
[t=0.0517746s, 29112 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.051789s, 29112 KB] Landmarks generation time: 0.042874s
[t=0.0518012s, 29112 KB] Discovered 153 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0518101s, 29112 KB] 776 edges
[t=0.051819s, 29112 KB] Landmark graph generation time: 0.0429138s
[t=0.0518283s, 29112 KB] Landmark graph contains 153 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0518369s, 29112 KB] Landmark graph contains 776 orderings.
[t=0.052545s, 29112 KB] Simplifying 8646 unary operators... done! [6534 unary operators]
[t=0.0547965s, 29172 KB] time to simplify: 0.00226917s
[t=0.0549365s, 29172 KB] Initializing additive heuristic...
[t=0.0549507s, 29172 KB] Initializing FF heuristic...
[t=0.055004s, 29172 KB] Building successor generator...done!
[t=0.0553501s, 29172 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0553597s, 29172 KB] time for successor generation creation: 0.000315522s
[t=0.0553742s, 29172 KB] Variables: 67
[t=0.055383s, 29172 KB] FactPairs: 1190
[t=0.0553918s, 29172 KB] Bytes per state: 32
[t=0.0554737s, 29172 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0555075s, 29172 KB] 67 initial landmarks, 31 goal landmarks
[t=0.0555872s, 29172 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 86
[t=0.0555972s, 29172 KB] New best heuristic value for ff(transform = adapt_costs(one)): 63
[t=0.055606s, 29172 KB] g=0, 1 evaluated, 0 expanded
[t=0.0556213s, 29172 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 86
[t=0.0556304s, 29172 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 63
[t=0.0560622s, 29172 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 85
[t=0.0560726s, 29172 KB] New best heuristic value for ff(transform = adapt_costs(one)): 62
[t=0.0560821s, 29172 KB] g=2, 9 evaluated, 8 expanded
[t=0.0566045s, 29172 KB] New best heuristic value for ff(transform = adapt_costs(one)): 61
[t=0.0566366s, 29172 KB] g=4, 17 evaluated, 16 expanded
[t=0.0567315s, 29172 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 84
[t=0.0567471s, 29172 KB] g=4, 18 evaluated, 17 expanded
[t=0.0576592s, 29172 KB] New best heuristic value for ff(transform = adapt_costs(one)): 60
[t=0.0576926s, 29172 KB] g=6, 30 evaluated, 29 expanded
[t=0.0580841s, 29172 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 83
[t=0.0581087s, 29172 KB] g=6, 36 evaluated, 35 expanded
[t=0.0586262s, 29172 KB] New best heuristic value for ff(transform = adapt_costs(one)): 59
[t=0.0586373s, 29172 KB] g=8, 46 evaluated, 45 expanded
[t=0.0590482s, 29172 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 82
[t=0.0590586s, 29172 KB] g=8, 54 evaluated, 53 expanded
[t=0.059369s, 29172 KB] New best heuristic value for ff(transform = adapt_costs(one)): 58
[t=0.059381s, 29172 KB] g=10, 60 evaluated, 59 expanded
[t=0.0601853s, 29172 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 81
[t=0.0601999s, 29172 KB] g=10, 76 evaluated, 75 expanded
[t=0.0614107s, 29172 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 80
[t=0.0614274s, 29172 KB] g=12, 100 evaluated, 99 expanded
[t=0.062033s, 29172 KB] New best heuristic value for ff(transform = adapt_costs(one)): 57
[t=0.0620448s, 29172 KB] g=14, 111 evaluated, 110 expanded
[t=0.0626678s, 29172 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 79
[t=0.0626788s, 29172 KB] g=14, 123 evaluated, 122 expanded
[t=0.0628997s, 29172 KB] New best heuristic value for ff(transform = adapt_costs(one)): 56
[t=0.062909s, 29172 KB] g=16, 127 evaluated, 126 expanded
[t=0.0639219s, 29172 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 78
[t=0.0639328s, 29172 KB] g=16, 147 evaluated, 146 expanded
[t=0.0646384s, 29172 KB] New best heuristic value for ff(transform = adapt_costs(one)): 55
[t=0.0646481s, 29172 KB] g=20, 161 evaluated, 160 expanded
[t=0.0652497s, 29172 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 77
[t=0.065259s, 29172 KB] g=18, 173 evaluated, 172 expanded
[t=0.0654229s, 29172 KB] New best heuristic value for ff(transform = adapt_costs(one)): 54
[t=0.0654321s, 29172 KB] g=22, 176 evaluated, 175 expanded
[t=0.0665555s, 29172 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 76
[t=0.06658s, 29172 KB] g=24, 198 evaluated, 197 expanded
[t=0.0673848s, 29172 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 75
[t=0.0673948s, 29172 KB] g=26, 214 evaluated, 213 expanded
[t=0.0680823s, 29172 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 74
[t=0.0680922s, 29172 KB] g=28, 228 evaluated, 227 expanded
[t=0.0690602s, 29172 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 73
[t=0.0690707s, 29172 KB] g=30, 248 evaluated, 247 expanded
[t=0.0702348s, 29172 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 72
[t=0.0702454s, 29172 KB] g=32, 271 evaluated, 270 expanded
[t=0.0710631s, 29172 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 71
[t=0.0710733s, 29172 KB] g=34, 288 evaluated, 287 expanded
[t=0.0720539s, 29172 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 68
[t=0.0720708s, 29172 KB] g=36, 307 evaluated, 306 expanded
[t=0.07306s, 29172 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 67
[t=0.07307s, 29172 KB] g=38, 327 evaluated, 326 expanded
[t=0.0742964s, 29172 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 64
[t=0.07431s, 29172 KB] g=40, 351 evaluated, 350 expanded
[t=0.0755675s, 29172 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 61
[t=0.0755877s, 29172 KB] g=42, 377 evaluated, 376 expanded
[t=0.0771925s, 29172 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.0772077s, 29172 KB] g=44, 410 evaluated, 409 expanded
[t=0.078523s, 29172 KB] New best heuristic value for ff(transform = adapt_costs(one)): 53
[t=0.0785414s, 29172 KB] g=46, 437 evaluated, 436 expanded
[t=0.0787984s, 29172 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 57
[t=0.0788127s, 29172 KB] g=46, 442 evaluated, 441 expanded
[t=0.0796023s, 29172 KB] New best heuristic value for ff(transform = adapt_costs(one)): 52
[t=0.0796218s, 29172 KB] g=48, 458 evaluated, 457 expanded
[t=0.0805568s, 29172 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.080578s, 29172 KB] g=48, 477 evaluated, 476 expanded
[t=0.0807368s, 29172 KB] New best heuristic value for ff(transform = adapt_costs(one)): 51
[t=0.0807461s, 29172 KB] g=50, 480 evaluated, 479 expanded
[t=0.0817557s, 29172 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0817681s, 29172 KB] g=50, 500 evaluated, 499 expanded
[t=0.0820534s, 29172 KB] New best heuristic value for ff(transform = adapt_costs(one)): 50
[t=0.0820653s, 29172 KB] g=52, 505 evaluated, 504 expanded
[t=0.0828385s, 29172 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0828509s, 29172 KB] g=52, 519 evaluated, 518 expanded
[t=0.0834504s, 29172 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0834617s, 29172 KB] New best heuristic value for ff(transform = adapt_costs(one)): 49
[t=0.0834702s, 29172 KB] g=54, 531 evaluated, 530 expanded
[t=0.0848475s, 29172 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0848596s, 29172 KB] g=59, 559 evaluated, 558 expanded
[t=0.0859026s, 29172 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0859151s, 29172 KB] g=62, 580 evaluated, 579 expanded
[t=0.08725s, 29172 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0872688s, 29172 KB] g=64, 606 evaluated, 605 expanded
[t=0.0881016s, 29172 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0881171s, 29172 KB] g=66, 623 evaluated, 622 expanded
[t=0.0886646s, 29172 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0886761s, 29172 KB] New best heuristic value for ff(transform = adapt_costs(one)): 48
[t=0.0886843s, 29172 KB] g=68, 634 evaluated, 633 expanded
[t=0.0918701s, 29172 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.091895s, 29172 KB] g=74, 700 evaluated, 699 expanded
[t=0.0924501s, 29172 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0924616s, 29172 KB] g=76, 711 evaluated, 710 expanded
[t=0.0934305s, 29172 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0934447s, 29172 KB] New best heuristic value for ff(transform = adapt_costs(one)): 47
[t=0.0934541s, 29172 KB] g=78, 731 evaluated, 730 expanded
[t=0.110762s, 29172 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.110834s, 29172 KB] g=90, 1085 evaluated, 1084 expanded
[t=0.111786s, 29172 KB] New best heuristic value for ff(transform = adapt_costs(one)): 46
[t=0.111799s, 29172 KB] g=92, 1105 evaluated, 1104 expanded
[t=0.112003s, 29172 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.112014s, 29172 KB] g=92, 1109 evaluated, 1108 expanded
[t=0.112848s, 29172 KB] New best heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.112871s, 29172 KB] g=94, 1126 evaluated, 1125 expanded
[t=0.113328s, 29172 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.11334s, 29172 KB] g=94, 1135 evaluated, 1134 expanded
[t=0.113896s, 29172 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.113921s, 29172 KB] g=96, 1146 evaluated, 1145 expanded
[t=0.114735s, 29172 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.114748s, 29172 KB] g=96, 1162 evaluated, 1161 expanded
[t=0.114863s, 29172 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.114873s, 29172 KB] g=98, 1164 evaluated, 1163 expanded
[t=0.115803s, 29172 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.115813s, 29172 KB] g=100, 1183 evaluated, 1182 expanded
[t=0.116673s, 29172 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.116684s, 29172 KB] g=102, 1201 evaluated, 1200 expanded
[t=0.117437s, 29172 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.117448s, 29172 KB] g=98, 1216 evaluated, 1215 expanded
[t=0.119077s, 29172 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.11909s, 29172 KB] g=100, 1248 evaluated, 1247 expanded
[t=0.120851s, 29172 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.120862s, 29172 KB] g=102, 1284 evaluated, 1283 expanded
[t=0.122329s, 29172 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.122346s, 29172 KB] g=104, 1313 evaluated, 1312 expanded
[t=0.123598s, 29172 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.123608s, 29172 KB] g=108, 1339 evaluated, 1338 expanded
[t=0.139114s, 29172 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.139192s, 29172 KB] g=110, 1644 evaluated, 1643 expanded
[t=0.140665s, 29172 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.140682s, 29172 KB] g=112, 1672 evaluated, 1671 expanded
[t=0.145001s, 29172 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.14502s, 29172 KB] g=114, 1762 evaluated, 1761 expanded
[t=0.161901s, 29172 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.161984s, 29172 KB] g=124, 2107 evaluated, 2106 expanded
[t=0.16275s, 29172 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.162762s, 29172 KB] g=126, 2123 evaluated, 2122 expanded
[t=0.163097s, 29172 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.163107s, 29172 KB] g=128, 2130 evaluated, 2129 expanded
[t=0.163951s, 29172 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.163962s, 29172 KB] g=132, 2148 evaluated, 2147 expanded
[t=0.192105s, 29304 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.192225s, 29304 KB] g=144, 2729 evaluated, 2728 expanded
[t=0.192657s, 29304 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.192672s, 29304 KB] g=146, 2738 evaluated, 2737 expanded
[t=0.193321s, 29304 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.193332s, 29304 KB] g=148, 2752 evaluated, 2751 expanded
[t=0.195887s, 29304 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.195922s, 29304 KB] g=152, 2806 evaluated, 2805 expanded
[t=0.196354s, 29304 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.196367s, 29304 KB] g=154, 2815 evaluated, 2814 expanded
[t=0.197049s, 29304 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.197062s, 29304 KB] g=158, 2830 evaluated, 2829 expanded
[t=0.246909s, 29568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.246979s, 29568 KB] g=174, 3908 evaluated, 3907 expanded
[t=0.255817s, 29704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.255861s, 29704 KB] g=184, 4093 evaluated, 4092 expanded
[t=0.256598s, 29704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.256611s, 29704 KB] g=188, 4109 evaluated, 4108 expanded
[t=0.299434s, 29836 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.299539s, 29836 KB] g=218, 5006 evaluated, 5005 expanded
[t=0.691862s, 32152 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.69201s, 32152 KB] g=260, 13126 evaluated, 13125 expanded
[t=0.692151s, 32152 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.692165s, 32152 KB] g=260, 13128 evaluated, 13127 expanded
[t=0.692594s, 32152 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.692618s, 32152 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.692626s, 32152 KB] g=262, 13137 evaluated, 13136 expanded
[t=0.692873s, 32152 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.692884s, 32152 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.692893s, 32152 KB] g=264, 13142 evaluated, 13141 expanded
[t=0.693129s, 32152 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.693141s, 32152 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.693151s, 32152 KB] g=266, 13147 evaluated, 13146 expanded
[t=0.694806s, 32152 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.694828s, 32152 KB] g=274, 13184 evaluated, 13183 expanded
[t=0.695529s, 32152 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.695547s, 32152 KB] g=278, 13200 evaluated, 13199 expanded
[t=0.695723s, 32152 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.695734s, 32152 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.695742s, 32152 KB] g=280, 13204 evaluated, 13203 expanded
[t=0.707755s, 32152 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.707829s, 32152 KB] g=298, 13496 evaluated, 13495 expanded
[t=0.708019s, 32288 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.708035s, 32288 KB] g=300, 13500 evaluated, 13499 expanded
[t=0.709261s, 32288 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.709277s, 32288 KB] g=308, 13534 evaluated, 13533 expanded
[t=0.7094s, 32288 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.70941s, 32288 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.709419s, 32288 KB] g=310, 13537 evaluated, 13536 expanded
[t=0.712641s, 32288 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.712667s, 32288 KB] g=343, 13647 evaluated, 13646 expanded
[t=0.713206s, 32288 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.713225s, 32288 KB] g=346, 13666 evaluated, 13665 expanded
[t=0.713395s, 32288 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.71341s, 32288 KB] g=348, 13672 evaluated, 13671 expanded
[t=0.713568s, 32288 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.713582s, 32288 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.71359s, 32288 KB] g=350, 13677 evaluated, 13676 expanded
[t=0.713907s, 32288 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.713919s, 32288 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.713927s, 32288 KB] g=354, 13689 evaluated, 13688 expanded
[t=0.714032s, 32288 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.714052s, 32288 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.714059s, 32288 KB] g=356, 13693 evaluated, 13692 expanded
[t=0.714282s, 32288 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.714306s, 32288 KB] g=360, 13702 evaluated, 13701 expanded
[t=0.714399s, 32288 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.714408s, 32288 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.714417s, 32288 KB] g=362, 13705 evaluated, 13704 expanded
[t=0.714749s, 32288 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.714763s, 32288 KB] g=374, 13721 evaluated, 13720 expanded
[t=0.714855s, 32288 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.714866s, 32288 KB] g=378, 13725 evaluated, 13724 expanded
[t=0.714887s, 32288 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.714897s, 32288 KB] g=379, 13726 evaluated, 13725 expanded
[t=0.714928s, 32288 KB] Solution found!
[t=0.714997s, 32288 KB] Actual search time: 0.659489s
unstack b21 b31 (1)
put-down b21 (1)
unstack b1 b10 (1)
stack b1 b31 (1)
unstack b10 b18 (1)
stack b10 b1 (1)
unstack b17 b16 (1)
stack b17 b12 (1)
unstack b16 b26 (1)
stack b16 b17 (1)
unstack b18 b9 (1)
put-down b18 (1)
unstack b9 b23 (1)
stack b9 b26 (1)
pick-up b18 (1)
stack b18 b23 (1)
unstack b6 b5 (1)
put-down b6 (1)
unstack b5 b28 (1)
stack b5 b4 (1)
unstack b28 b15 (1)
stack b28 b18 (1)
unstack b10 b1 (1)
put-down b10 (1)
unstack b1 b31 (1)
put-down b1 (1)
unstack b16 b17 (1)
put-down b16 (1)
unstack b17 b12 (1)
put-down b17 (1)
unstack b12 b14 (1)
put-down b12 (1)
unstack b31 b19 (1)
put-down b31 (1)
unstack b19 b8 (1)
stack b19 b28 (1)
unstack b8 b32 (1)
put-down b8 (1)
unstack b32 b11 (1)
stack b32 b16 (1)
unstack b11 b33 (1)
stack b11 b5 (1)
pick-up b12 (1)
stack b12 b19 (1)
pick-up b17 (1)
stack b17 b12 (1)
pick-up b31 (1)
stack b31 b32 (1)
pick-up b1 (1)
stack b1 b31 (1)
pick-up b10 (1)
stack b10 b1 (1)
pick-up b8 (1)
stack b8 b33 (1)
unstack b9 b26 (1)
put-down b9 (1)
unstack b26 b29 (1)
put-down b26 (1)
unstack b29 b22 (1)
put-down b29 (1)
unstack b22 b20 (1)
put-down b22 (1)
pick-up b29 (1)
stack b29 b20 (1)
pick-up b26 (1)
stack b26 b29 (1)
pick-up b9 (1)
stack b9 b26 (1)
unstack b11 b5 (1)
put-down b11 (1)
unstack b5 b4 (1)
put-down b5 (1)
pick-up b4 (1)
stack b4 b22 (1)
pick-up b5 (1)
stack b5 b4 (1)
pick-up b11 (1)
stack b11 b5 (1)
unstack b9 b26 (1)
put-down b9 (1)
unstack b26 b29 (1)
put-down b26 (1)
pick-up b9 (1)
stack b9 b26 (1)
unstack b29 b20 (1)
put-down b29 (1)
unstack b20 b13 (1)
put-down b20 (1)
unstack b13 b7 (1)
put-down b13 (1)
unstack b7 b25 (1)
stack b7 b8 (1)
unstack b25 b2 (1)
put-down b25 (1)
unstack b2 b24 (1)
put-down b2 (1)
pick-up b24 (1)
stack b24 b9 (1)
pick-up b29 (1)
stack b29 b20 (1)
pick-up b30 (1)
stack b30 b25 (1)
pick-up b2 (1)
stack b2 b30 (1)
unstack b7 b8 (1)
put-down b7 (1)
unstack b8 b33 (1)
put-down b8 (1)
pick-up b33 (1)
stack b33 b2 (1)
pick-up b8 (1)
stack b8 b33 (1)
pick-up b7 (1)
stack b7 b8 (1)
unstack b24 b9 (1)
put-down b24 (1)
unstack b9 b26 (1)
put-down b9 (1)
pick-up b26 (1)
stack b26 b29 (1)
pick-up b9 (1)
stack b9 b26 (1)
pick-up b13 (1)
stack b13 b6 (1)
pick-up b15 (1)
stack b15 b13 (1)
pick-up b24 (1)
stack b24 b9 (1)
unstack b11 b5 (1)
put-down b11 (1)
unstack b5 b4 (1)
put-down b5 (1)
pick-up b11 (1)
stack b11 b5 (1)
unstack b15 b13 (1)
put-down b15 (1)
unstack b13 b6 (1)
put-down b13 (1)
unstack b4 b22 (1)
put-down b4 (1)
pick-up b22 (1)
stack b22 b24 (1)
pick-up b4 (1)
stack b4 b22 (1)
pick-up b13 (1)
stack b13 b6 (1)
pick-up b15 (1)
stack b15 b13 (1)
unstack b11 b5 (1)
put-down b11 (1)
pick-up b5 (1)
stack b5 b4 (1)
pick-up b11 (1)
stack b11 b5 (1)
unstack b10 b1 (1)
put-down b10 (1)
unstack b1 b31 (1)
put-down b1 (1)
unstack b31 b32 (1)
put-down b31 (1)
pick-up b1 (1)
stack b1 b31 (1)
pick-up b10 (1)
stack b10 b1 (1)
unstack b32 b16 (1)
put-down b32 (1)
pick-up b16 (1)
stack b16 b17 (1)
pick-up b32 (1)
stack b32 b16 (1)
unstack b10 b1 (1)
put-down b10 (1)
unstack b1 b31 (1)
put-down b1 (1)
pick-up b10 (1)
stack b10 b1 (1)
pick-up b31 (1)
stack b31 b32 (1)
unstack b10 b1 (1)
put-down b10 (1)
pick-up b1 (1)
stack b1 b31 (1)
pick-up b10 (1)
stack b10 b1 (1)
unstack b7 b8 (1)
put-down b7 (1)
unstack b8 b33 (1)
put-down b8 (1)
unstack b33 b2 (1)
put-down b33 (1)
pick-up b8 (1)
stack b8 b33 (1)
pick-up b7 (1)
stack b7 b8 (1)
unstack b2 b30 (1)
put-down b2 (1)
unstack b30 b25 (1)
put-down b30 (1)
pick-up b2 (1)
stack b2 b30 (1)
pick-up b25 (1)
stack b25 b15 (1)
unstack b2 b30 (1)
put-down b2 (1)
pick-up b30 (1)
stack b30 b25 (1)
pick-up b2 (1)
stack b2 b30 (1)
unstack b7 b8 (1)
put-down b7 (1)
unstack b8 b33 (1)
put-down b8 (1)
pick-up b33 (1)
stack b33 b2 (1)
pick-up b8 (1)
stack b8 b33 (1)
pick-up b7 (1)
stack b7 b8 (1)
unstack b10 b1 (1)
put-down b10 (1)
unstack b1 b31 (1)
put-down b1 (1)
pick-up b10 (1)
stack b10 b1 (1)
unstack b31 b32 (1)
put-down b31 (1)
unstack b32 b16 (1)
put-down b32 (1)
unstack b16 b17 (1)
put-down b16 (1)
pick-up b32 (1)
stack b32 b16 (1)
pick-up b31 (1)
stack b31 b32 (1)
unstack b10 b1 (1)
put-down b10 (1)
pick-up b1 (1)
stack b1 b31 (1)
pick-up b10 (1)
stack b10 b1 (1)
unstack b17 b12 (1)
put-down b17 (1)
unstack b12 b19 (1)
put-down b12 (1)
unstack b19 b28 (1)
put-down b19 (1)
pick-up b12 (1)
stack b12 b19 (1)
pick-up b17 (1)
stack b17 b12 (1)
unstack b28 b18 (1)
put-down b28 (1)
unstack b18 b23 (1)
put-down b18 (1)
unstack b23 b27 (1)
stack b23 b11 (1)
pick-up b18 (1)
stack b18 b23 (1)
unstack b27 b3 (1)
stack b27 b7 (1)
pick-up b14 (1)
stack b14 b27 (1)
pick-up b28 (1)
stack b28 b18 (1)
pick-up b3 (1)
stack b3 b10 (1)
unstack b17 b12 (1)
put-down b17 (1)
unstack b12 b19 (1)
put-down b12 (1)
pick-up b17 (1)
stack b17 b12 (1)
pick-up b19 (1)
stack b19 b28 (1)
unstack b17 b12 (1)
put-down b17 (1)
pick-up b12 (1)
stack b12 b19 (1)
pick-up b17 (1)
stack b17 b12 (1)
unstack b3 b10 (1)
put-down b3 (1)
unstack b10 b1 (1)
put-down b10 (1)
unstack b1 b31 (1)
put-down b1 (1)
pick-up b10 (1)
stack b10 b1 (1)
pick-up b3 (1)
stack b3 b10 (1)
unstack b31 b32 (1)
put-down b31 (1)
unstack b32 b16 (1)
put-down b32 (1)
pick-up b16 (1)
stack b16 b17 (1)
pick-up b32 (1)
stack b32 b16 (1)
pick-up b31 (1)
stack b31 b32 (1)
unstack b3 b10 (1)
put-down b3 (1)
unstack b10 b1 (1)
put-down b10 (1)
pick-up b1 (1)
stack b1 b31 (1)
pick-up b10 (1)
stack b10 b1 (1)
pick-up b3 (1)
stack b3 b10 (1)
unstack b14 b27 (1)
put-down b14 (1)
unstack b27 b7 (1)
put-down b27 (1)
pick-up b14 (1)
stack b14 b27 (1)
unstack b7 b8 (1)
put-down b7 (1)
unstack b8 b33 (1)
put-down b8 (1)
pick-up b7 (1)
stack b7 b8 (1)
unstack b14 b27 (1)
put-down b14 (1)
pick-up b27 (1)
stack b27 b7 (1)
pick-up b14 (1)
stack b14 b27 (1)
unstack b33 b2 (1)
put-down b33 (1)
unstack b2 b30 (1)
put-down b2 (1)
pick-up b33 (1)
stack b33 b2 (1)
unstack b30 b25 (1)
put-down b30 (1)
unstack b25 b15 (1)
put-down b25 (1)
unstack b15 b13 (1)
put-down b15 (1)
unstack b13 b6 (1)
put-down b13 (1)
pick-up b30 (1)
stack b30 b25 (1)
pick-up b6 (1)
stack b6 b3 (1)
pick-up b13 (1)
stack b13 b6 (1)
pick-up b15 (1)
stack b15 b13 (1)
unstack b30 b25 (1)
put-down b30 (1)
pick-up b25 (1)
stack b25 b15 (1)
pick-up b30 (1)
stack b30 b25 (1)
unstack b33 b2 (1)
put-down b33 (1)
pick-up b2 (1)
stack b2 b30 (1)
pick-up b33 (1)
stack b33 b2 (1)
unstack b14 b27 (1)
put-down b14 (1)
unstack b27 b7 (1)
put-down b27 (1)
pick-up b14 (1)
stack b14 b27 (1)
unstack b7 b8 (1)
put-down b7 (1)
pick-up b8 (1)
stack b8 b33 (1)
pick-up b7 (1)
stack b7 b8 (1)
unstack b14 b27 (1)
put-down b14 (1)
pick-up b27 (1)
stack b27 b7 (1)
pick-up b14 (1)
stack b14 b27 (1)
[t=0.715009s, 32288 KB] Plan length: 380 step(s).
[t=0.715009s, 32288 KB] Plan cost: 380
[t=0.715009s, 32288 KB] Expanded 13726 state(s).
[t=0.715009s, 32288 KB] Reopened 0 state(s).
[t=0.715009s, 32288 KB] Evaluated 13727 state(s).
[t=0.715009s, 32288 KB] Evaluations: 27454
[t=0.715009s, 32288 KB] Generated 140170 state(s).
[t=0.715009s, 32288 KB] Dead ends: 0 state(s).
[t=0.715009s, 32288 KB] Number of registered states: 13727
[t=0.715009s, 32288 KB] Int hash set load factor: 13727/16384 = 0.83783
[t=0.715009s, 32288 KB] Int hash set resizes: 14
[t=0.715009s, 32288 KB] Search time: 0.659536s
[t=0.715009s, 32288 KB] Total time: 0.715009s
Solution found.
Peak memory: 32288 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.96s
