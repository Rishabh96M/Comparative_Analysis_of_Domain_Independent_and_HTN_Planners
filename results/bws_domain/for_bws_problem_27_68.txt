INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_27/bws_problem_27_68.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.010s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.015s wall-clock]
2378 relevant atoms
1593 auxiliary atoms
3971 final queue length
6946 total queue pushes
Completing instantiation... [0.020s CPU, 0.024s wall-clock]
Instantiating: [0.040s CPU, 0.041s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.003s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.010s CPU, 0.002s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
28 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.001s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.040s CPU, 0.042s wall-clock]
2160 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
54 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.018s wall-clock]
Reordering and filtering variables...
55 of 55 variables necessary.
28 of 55 mutex groups necessary.
1458 of 1458 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.011s wall-clock]
Translator variables: 55
Translator derived variables: 0
Translator facts: 812
Translator goal facts: 21
Translator mutex groups: 28
Translator total mutex groups size: 784
Translator operators: 1458
Translator axioms: 0
Translator task size: 12526
Translator peak memory: 39544 KB
Writing output... [0.000s CPU, 0.008s wall-clock]
Done! [0.130s CPU, 0.135s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=4.7273e-05s, 24488 KB] reading input...
[t=0.00495992s, 25936 KB] done reading input!
[t=0.00694746s, 26332 KB] Initializing landmark count heuristic...
[t=0.00702951s, 26332 KB] Generating landmark graph...
[t=0.00718194s, 26332 KB] Building a landmark graph with reasonable orders.
[t=0.00733464s, 26464 KB] Initializing Exploration...
[t=0.0081939s, 26732 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0269094s, 27392 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0270168s, 27392 KB] Landmarks generation time: 0.0198268s
[t=0.0270389s, 27392 KB] Discovered 111 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0270561s, 27392 KB] 466 edges
[t=0.0270662s, 27392 KB] approx. reasonable orders
[t=0.0275723s, 27392 KB] approx. obedient reasonable orders
[t=0.0276202s, 27392 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0276294s, 27392 KB] Landmarks generation time: 0.0205897s
[t=0.0276391s, 27392 KB] Discovered 111 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0276473s, 27392 KB] 471 edges
[t=0.027656s, 27392 KB] Landmark graph generation time: 0.0206343s
[t=0.0276653s, 27392 KB] Landmark graph contains 111 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0276736s, 27392 KB] Landmark graph contains 471 orderings.
[t=0.0282226s, 27448 KB] Simplifying 5778 unary operators... done! [4374 unary operators]
[t=0.0296512s, 27580 KB] time to simplify: 0.00152017s
[t=0.0298281s, 27580 KB] Initializing additive heuristic...
[t=0.0298461s, 27580 KB] Initializing FF heuristic...
[t=0.0298989s, 27580 KB] Building successor generator...done!
[t=0.0301664s, 27580 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0301754s, 27580 KB] time for successor generation creation: 0.000231409s
[t=0.030189s, 27580 KB] Variables: 55
[t=0.0301973s, 27580 KB] FactPairs: 812
[t=0.0302055s, 27580 KB] Bytes per state: 24
[t=0.0302978s, 27580 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0303298s, 27580 KB] 51 initial landmarks, 21 goal landmarks
[t=0.030391s, 27580 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 60
[t=0.0304004s, 27580 KB] New best heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0304093s, 27580 KB] g=0, 1 evaluated, 0 expanded
[t=0.030423s, 27580 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 60
[t=0.0304315s, 27580 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0307136s, 27580 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 58
[t=0.0307277s, 27580 KB] New best heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.0307362s, 27580 KB] g=2, 8 evaluated, 7 expanded
[t=0.0309211s, 27580 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0309308s, 27580 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.03094s, 27580 KB] g=4, 13 evaluated, 12 expanded
[t=0.0311183s, 27580 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0311275s, 27580 KB] g=6, 18 evaluated, 17 expanded
[t=0.0315887s, 27580 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0316012s, 27580 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0316101s, 27580 KB] g=8, 31 evaluated, 30 expanded
[t=0.0318306s, 27580 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.03184s, 27580 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0318482s, 27580 KB] g=10, 37 evaluated, 36 expanded
[t=0.0320706s, 27580 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0320805s, 27580 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0320887s, 27580 KB] g=12, 43 evaluated, 42 expanded
[t=0.0321332s, 27580 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0321419s, 27580 KB] g=13, 44 evaluated, 43 expanded
[t=0.0325915s, 27580 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0326052s, 27580 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0326165s, 27580 KB] g=16, 57 evaluated, 56 expanded
[t=0.0328873s, 27580 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0329077s, 27580 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0329162s, 27580 KB] g=18, 64 evaluated, 63 expanded
[t=0.0332536s, 27580 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0332637s, 27580 KB] g=21, 73 evaluated, 72 expanded
[t=0.0333113s, 27580 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0333201s, 27580 KB] g=22, 74 evaluated, 73 expanded
[t=0.0335659s, 27580 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0335756s, 27580 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0335842s, 27580 KB] g=24, 81 evaluated, 80 expanded
[t=0.0337948s, 27580 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.033804s, 27580 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.033812s, 27580 KB] g=26, 87 evaluated, 86 expanded
[t=0.0340548s, 27580 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0340734s, 27580 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0340814s, 27580 KB] g=28, 94 evaluated, 93 expanded
[t=0.0343169s, 27580 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0343327s, 27580 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0343447s, 27580 KB] g=30, 101 evaluated, 100 expanded
[t=0.034589s, 27580 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0346067s, 27580 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.034616s, 27580 KB] g=32, 108 evaluated, 107 expanded
[t=0.0350791s, 27580 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0351156s, 27580 KB] g=34, 121 evaluated, 120 expanded
[t=0.0366169s, 27580 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0366411s, 27580 KB] g=42, 162 evaluated, 161 expanded
[t=0.0369839s, 27580 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0369964s, 27580 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.037005s, 27580 KB] g=44, 171 evaluated, 170 expanded
[t=0.0372831s, 27580 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0372924s, 27580 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0373005s, 27580 KB] g=46, 179 evaluated, 178 expanded
[t=0.0375144s, 27580 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.037525s, 27580 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0375336s, 27580 KB] g=48, 185 evaluated, 184 expanded
[t=0.0378169s, 27580 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0378281s, 27580 KB] g=51, 193 evaluated, 192 expanded
[t=0.0379463s, 27580 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0379621s, 27580 KB] g=53, 196 evaluated, 195 expanded
[t=0.0380521s, 27580 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0380611s, 27580 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0380693s, 27580 KB] g=54, 198 evaluated, 197 expanded
[t=0.038349s, 27580 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0383599s, 27580 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0383724s, 27580 KB] g=56, 206 evaluated, 205 expanded
[t=0.0385872s, 27580 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0385971s, 27580 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.038606s, 27580 KB] g=58, 212 evaluated, 211 expanded
[t=0.0388226s, 27580 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0388318s, 27580 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0388399s, 27580 KB] g=60, 218 evaluated, 217 expanded
[t=0.0390558s, 27580 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0390655s, 27580 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0390736s, 27580 KB] g=62, 224 evaluated, 223 expanded
[t=0.0393163s, 27580 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0393274s, 27580 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0393362s, 27580 KB] g=64, 231 evaluated, 230 expanded
[t=0.0395524s, 27580 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0395666s, 27580 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0395742s, 27580 KB] g=66, 237 evaluated, 236 expanded
[t=0.0404515s, 27580 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0404701s, 27580 KB] g=70, 262 evaluated, 261 expanded
[t=0.0406126s, 27580 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0406241s, 27580 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0406322s, 27580 KB] g=72, 266 evaluated, 265 expanded
[t=0.0413421s, 27580 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.041358s, 27580 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0413661s, 27580 KB] g=80, 287 evaluated, 286 expanded
[t=0.0414712s, 27580 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0414799s, 27580 KB] g=80, 290 evaluated, 289 expanded
[t=0.0416163s, 27580 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0416252s, 27580 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0416331s, 27580 KB] g=82, 294 evaluated, 293 expanded
[t=0.0425471s, 27580 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0425569s, 27580 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0425665s, 27580 KB] g=90, 322 evaluated, 321 expanded
[t=0.0426702s, 27580 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.042679s, 27580 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0426968s, 27580 KB] g=92, 325 evaluated, 324 expanded
[t=0.0462408s, 27580 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0462549s, 27580 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0462635s, 27580 KB] g=126, 448 evaluated, 447 expanded
[t=0.0464749s, 27580 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0464842s, 27580 KB] g=130, 457 evaluated, 456 expanded
[t=0.0465579s, 27580 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0465678s, 27580 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0465796s, 27580 KB] g=132, 460 evaluated, 459 expanded
[t=0.0469308s, 27580 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0469456s, 27580 KB] g=144, 476 evaluated, 475 expanded
[t=0.0470202s, 27580 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0470291s, 27580 KB] g=148, 480 evaluated, 479 expanded
[t=0.0470491s, 27580 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0470578s, 27580 KB] g=149, 481 evaluated, 480 expanded
[t=0.0470742s, 27580 KB] Solution found!
[t=0.0470864s, 27580 KB] Actual search time: 0.0167542s
unstack b13 b3 (1)
stack b13 b21 (1)
unstack b17 b27 (1)
stack b17 b18 (1)
unstack b20 b25 (1)
put-down b20 (1)
unstack b25 b24 (1)
stack b25 b13 (1)
unstack b24 b4 (1)
stack b24 b27 (1)
unstack b4 b16 (1)
put-down b4 (1)
unstack b16 b7 (1)
put-down b16 (1)
unstack b7 b5 (1)
stack b7 b25 (1)
unstack b3 b26 (1)
stack b3 b24 (1)
unstack b17 b18 (1)
put-down b17 (1)
unstack b18 b8 (1)
stack b18 b7 (1)
pick-up b17 (1)
stack b17 b18 (1)
unstack b8 b22 (1)
stack b8 b4 (1)
unstack b22 b9 (1)
put-down b22 (1)
unstack b9 b19 (1)
put-down b9 (1)
unstack b19 b10 (1)
put-down b19 (1)
pick-up b16 (1)
stack b16 b19 (1)
unstack b3 b24 (1)
put-down b3 (1)
unstack b24 b27 (1)
put-down b24 (1)
unstack b27 b14 (1)
put-down b27 (1)
unstack b14 b12 (1)
stack b14 b8 (1)
pick-up b20 (1)
stack b20 b14 (1)
pick-up b24 (1)
stack b24 b27 (1)
pick-up b3 (1)
stack b3 b24 (1)
unstack b12 b2 (1)
put-down b12 (1)
unstack b2 b11 (1)
put-down b2 (1)
unstack b11 b15 (1)
stack b11 b20 (1)
pick-up b12 (1)
stack b12 b2 (1)
unstack b15 b1 (1)
stack b15 b17 (1)
unstack b1 b23 (1)
stack b1 b12 (1)
unstack b23 b6 (1)
put-down b23 (1)
pick-up b5 (1)
stack b5 b23 (1)
pick-up b6 (1)
stack b6 b5 (1)
unstack b16 b19 (1)
put-down b16 (1)
pick-up b19 (1)
stack b19 b15 (1)
pick-up b16 (1)
stack b16 b19 (1)
unstack b1 b12 (1)
put-down b1 (1)
unstack b12 b2 (1)
put-down b12 (1)
pick-up b2 (1)
stack b2 b6 (1)
pick-up b12 (1)
stack b12 b2 (1)
pick-up b1 (1)
stack b1 b12 (1)
unstack b3 b24 (1)
put-down b3 (1)
unstack b24 b27 (1)
put-down b24 (1)
pick-up b27 (1)
stack b27 b1 (1)
pick-up b24 (1)
stack b24 b27 (1)
pick-up b3 (1)
stack b3 b24 (1)
unstack b16 b19 (1)
put-down b16 (1)
unstack b19 b15 (1)
put-down b19 (1)
pick-up b16 (1)
stack b16 b19 (1)
unstack b15 b17 (1)
put-down b15 (1)
unstack b17 b18 (1)
put-down b17 (1)
pick-up b15 (1)
stack b15 b17 (1)
unstack b16 b19 (1)
put-down b16 (1)
pick-up b19 (1)
stack b19 b15 (1)
pick-up b16 (1)
stack b16 b19 (1)
unstack b18 b7 (1)
put-down b18 (1)
unstack b7 b25 (1)
put-down b7 (1)
pick-up b18 (1)
stack b18 b7 (1)
unstack b25 b13 (1)
put-down b25 (1)
unstack b13 b21 (1)
put-down b13 (1)
pick-up b21 (1)
stack b21 b3 (1)
pick-up b13 (1)
stack b13 b21 (1)
pick-up b25 (1)
stack b25 b13 (1)
unstack b18 b7 (1)
put-down b18 (1)
pick-up b7 (1)
stack b7 b25 (1)
pick-up b18 (1)
stack b18 b7 (1)
unstack b16 b19 (1)
put-down b16 (1)
unstack b19 b15 (1)
put-down b19 (1)
pick-up b16 (1)
stack b16 b19 (1)
unstack b15 b17 (1)
put-down b15 (1)
pick-up b17 (1)
stack b17 b18 (1)
pick-up b15 (1)
stack b15 b17 (1)
unstack b16 b19 (1)
put-down b16 (1)
pick-up b19 (1)
stack b19 b15 (1)
pick-up b16 (1)
stack b16 b19 (1)
[t=0.0470962s, 27580 KB] Plan length: 150 step(s).
[t=0.0470962s, 27580 KB] Plan cost: 150
[t=0.0470962s, 27580 KB] Expanded 481 state(s).
[t=0.0470962s, 27580 KB] Reopened 0 state(s).
[t=0.0470962s, 27580 KB] Evaluated 482 state(s).
[t=0.0470962s, 27580 KB] Evaluations: 964
[t=0.0470962s, 27580 KB] Generated 4809 state(s).
[t=0.0470962s, 27580 KB] Dead ends: 0 state(s).
[t=0.0470962s, 27580 KB] Number of registered states: 482
[t=0.0470962s, 27580 KB] Int hash set load factor: 482/512 = 0.941406
[t=0.0470962s, 27580 KB] Int hash set resizes: 9
[t=0.0470962s, 27580 KB] Search time: 0.0167989s
[t=0.0470962s, 27580 KB] Total time: 0.0470962s
Solution found.
Peak memory: 27580 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.23s
