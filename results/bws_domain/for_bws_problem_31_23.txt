INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_31/bws_problem_31_23.pddl --sas-file output.sas
Parsing...
Parsing: [0.010s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.019s wall-clock]
3102 relevant atoms
2077 auxiliary atoms
5179 final queue length
9092 total queue pushes
Completing instantiation... [0.030s CPU, 0.032s wall-clock]
Instantiating: [0.050s CPU, 0.053s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.002s wall-clock]
Collecting mutex groups... [0.010s CPU, 0.000s wall-clock]
Choosing groups...
32 uncovered facts
Choosing groups: [0.000s CPU, 0.002s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.010s CPU, 0.011s wall-clock]
Building STRIPS to SAS dictionary... [0.010s CPU, 0.006s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.001s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.002s wall-clock]
Translating task: [0.050s CPU, 0.049s wall-clock]
2852 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
62 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.024s wall-clock]
Reordering and filtering variables...
63 of 63 variables necessary.
32 of 63 mutex groups necessary.
1922 of 1922 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.012s wall-clock]
Translator variables: 63
Translator derived variables: 0
Translator facts: 1056
Translator goal facts: 25
Translator mutex groups: 32
Translator total mutex groups size: 1024
Translator operators: 1922
Translator axioms: 0
Translator task size: 16490
Translator peak memory: 42104 KB
Writing output... [0.010s CPU, 0.012s wall-clock]
Done! [0.180s CPU, 0.174s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.1068e-05s, 24488 KB] reading input...
[t=0.00573653s, 26640 KB] done reading input!
[t=0.00670596s, 26904 KB] Initializing landmark count heuristic...
[t=0.00673883s, 26904 KB] Generating landmark graph...
[t=0.00683766s, 27036 KB] Building a landmark graph with reasonable orders.
[t=0.00693311s, 27168 KB] Initializing Exploration...
[t=0.00748534s, 27612 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0353297s, 28404 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0354814s, 28404 KB] Landmarks generation time: 0.0286541s
[t=0.035507s, 28404 KB] Discovered 133 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0355287s, 28404 KB] 601 edges
[t=0.0355386s, 28404 KB] approx. reasonable orders
[t=0.0434764s, 28404 KB] approx. obedient reasonable orders
[t=0.0439499s, 28404 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0439641s, 28404 KB] Landmarks generation time: 0.0372226s
[t=0.0439749s, 28404 KB] Discovered 133 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0439841s, 28404 KB] 709 edges
[t=0.043992s, 28404 KB] Landmark graph generation time: 0.0372768s
[t=0.0440169s, 28404 KB] Landmark graph contains 133 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.044025s, 28404 KB] Landmark graph contains 709 orderings.
[t=0.0447239s, 28436 KB] Simplifying 7626 unary operators... done! [5766 unary operators]
[t=0.046586s, 28568 KB] time to simplify: 0.00197514s
[t=0.0468087s, 28568 KB] Initializing additive heuristic...
[t=0.0468271s, 28568 KB] Initializing FF heuristic...
[t=0.0468818s, 28568 KB] Building successor generator...done!
[t=0.0472147s, 28568 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0472255s, 28568 KB] time for successor generation creation: 0.000304469s
[t=0.0472415s, 28568 KB] Variables: 63
[t=0.0472501s, 28568 KB] FactPairs: 1056
[t=0.0472581s, 28568 KB] Bytes per state: 24
[t=0.0473529s, 28568 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0473867s, 28568 KB] 60 initial landmarks, 25 goal landmarks
[t=0.0474605s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 73
[t=0.0474705s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 54
[t=0.0474792s, 28568 KB] g=0, 1 evaluated, 0 expanded
[t=0.0474941s, 28568 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 73
[t=0.0475027s, 28568 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 54
[t=0.0478312s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 72
[t=0.0478458s, 28568 KB] g=1, 8 evaluated, 7 expanded
[t=0.0480698s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 53
[t=0.0480789s, 28568 KB] g=2, 13 evaluated, 12 expanded
[t=0.0486413s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 52
[t=0.0486517s, 28568 KB] g=4, 26 evaluated, 25 expanded
[t=0.0489161s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 71
[t=0.0489254s, 28568 KB] g=3, 32 evaluated, 31 expanded
[t=0.049745s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 70
[t=0.0497548s, 28568 KB] g=6, 51 evaluated, 50 expanded
[t=0.0505939s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 69
[t=0.0506046s, 28568 KB] g=8, 70 evaluated, 69 expanded
[t=0.0514064s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 68
[t=0.0514229s, 28568 KB] g=10, 89 evaluated, 88 expanded
[t=0.051519s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 51
[t=0.0515293s, 28568 KB] g=8, 91 evaluated, 90 expanded
[t=0.052265s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 67
[t=0.0522905s, 28568 KB] g=12, 108 evaluated, 107 expanded
[t=0.0534368s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 66
[t=0.0534563s, 28568 KB] g=14, 132 evaluated, 131 expanded
[t=0.0539201s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 50
[t=0.0539326s, 28568 KB] g=12, 142 evaluated, 141 expanded
[t=0.054521s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 65
[t=0.0545317s, 28568 KB] g=16, 155 evaluated, 154 expanded
[t=0.0555731s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 64
[t=0.0555832s, 28568 KB] g=18, 178 evaluated, 177 expanded
[t=0.0578446s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 63
[t=0.0578611s, 28568 KB] g=20, 229 evaluated, 228 expanded
[t=0.059287s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 62
[t=0.0593135s, 28568 KB] g=22, 261 evaluated, 260 expanded
[t=0.0602989s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 61
[t=0.0603364s, 28568 KB] g=23, 276 evaluated, 275 expanded
[t=0.0612974s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 49
[t=0.061337s, 28568 KB] g=18, 290 evaluated, 289 expanded
[t=0.0623786s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 48
[t=0.0624052s, 28568 KB] g=20, 307 evaluated, 306 expanded
[t=0.0645935s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 60
[t=0.064616s, 28568 KB] g=26, 354 evaluated, 353 expanded
[t=0.0660015s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 58
[t=0.0660155s, 28568 KB] g=28, 383 evaluated, 382 expanded
[t=0.0668678s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 47
[t=0.0668807s, 28568 KB] g=26, 401 evaluated, 400 expanded
[t=0.0677907s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0678094s, 28568 KB] g=28, 420 evaluated, 419 expanded
[t=0.0678656s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 57
[t=0.067876s, 28568 KB] g=30, 421 evaluated, 420 expanded
[t=0.0693415s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0693562s, 28568 KB] g=32, 453 evaluated, 452 expanded
[t=0.0698809s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0698922s, 28568 KB] g=33, 464 evaluated, 463 expanded
[t=0.0699999s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0700096s, 28568 KB] g=34, 466 evaluated, 465 expanded
[t=0.070564s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.0705736s, 28568 KB] g=32, 478 evaluated, 477 expanded
[t=0.0716737s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0716839s, 28568 KB] g=34, 502 evaluated, 501 expanded
[t=0.0723993s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0724153s, 28568 KB] g=36, 516 evaluated, 515 expanded
[t=0.0741401s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0741515s, 28568 KB] g=38, 552 evaluated, 551 expanded
[t=0.0745936s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0746039s, 28568 KB] g=38, 561 evaluated, 560 expanded
[t=0.0749444s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.074954s, 28568 KB] g=40, 568 evaluated, 567 expanded
[t=0.0766386s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.076666s, 28568 KB] g=40, 603 evaluated, 602 expanded
[t=0.0774559s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0774743s, 28568 KB] g=42, 620 evaluated, 619 expanded
[t=0.0786768s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0786947s, 28568 KB] g=42, 647 evaluated, 646 expanded
[t=0.0796138s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0796306s, 28568 KB] g=44, 668 evaluated, 667 expanded
[t=0.0813687s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0813833s, 28568 KB] g=46, 707 evaluated, 706 expanded
[t=0.0831907s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0832122s, 28568 KB] g=48, 748 evaluated, 747 expanded
[t=0.0846192s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0846304s, 28568 KB] g=52, 781 evaluated, 780 expanded
[t=0.085062s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0850717s, 28568 KB] g=54, 791 evaluated, 790 expanded
[t=0.0855436s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0855562s, 28568 KB] g=56, 802 evaluated, 801 expanded
[t=0.0861681s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0861777s, 28568 KB] g=58, 816 evaluated, 815 expanded
[t=0.0891186s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0891365s, 28568 KB] g=64, 886 evaluated, 885 expanded
[t=0.167508s, 28832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.167632s, 28832 KB] g=88, 2648 evaluated, 2647 expanded
[t=0.168945s, 28832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.168959s, 28832 KB] g=92, 2677 evaluated, 2676 expanded
[t=0.169419s, 28832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.16943s, 28832 KB] g=94, 2687 evaluated, 2686 expanded
[t=0.169792s, 28832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.169803s, 28832 KB] g=96, 2695 evaluated, 2694 expanded
[t=0.170266s, 28832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.170283s, 28832 KB] g=98, 2705 evaluated, 2704 expanded
[t=0.170668s, 28832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.170699s, 28832 KB] g=100, 2714 evaluated, 2713 expanded
[t=0.173444s, 28832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.173464s, 28832 KB] g=104, 2779 evaluated, 2778 expanded
[t=0.173756s, 28832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.173767s, 28832 KB] g=106, 2786 evaluated, 2785 expanded
[t=0.175277s, 28832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.175296s, 28832 KB] g=110, 2822 evaluated, 2821 expanded
[t=0.17554s, 28832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.175551s, 28832 KB] g=112, 2828 evaluated, 2827 expanded
[t=0.176545s, 28832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.176557s, 28832 KB] g=116, 2853 evaluated, 2852 expanded
[t=0.176759s, 28832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.176769s, 28832 KB] g=118, 2858 evaluated, 2857 expanded
[t=0.182059s, 28832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.182153s, 28832 KB] g=126, 2951 evaluated, 2950 expanded
[t=0.182323s, 28832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.182338s, 28832 KB] g=128, 2955 evaluated, 2954 expanded
[t=0.184242s, 28964 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.184279s, 28964 KB] g=140, 3005 evaluated, 3004 expanded
[t=0.184692s, 28964 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.184706s, 28964 KB] g=144, 3016 evaluated, 3015 expanded
[t=0.184819s, 28964 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.184831s, 28964 KB] g=146, 3019 evaluated, 3018 expanded
[t=0.186304s, 28964 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.18633s, 28964 KB] g=162, 3063 evaluated, 3062 expanded
[t=0.186661s, 28964 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.186675s, 28964 KB] g=170, 3075 evaluated, 3074 expanded
[t=0.186697s, 28964 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.186707s, 28964 KB] g=171, 3076 evaluated, 3075 expanded
[t=0.186725s, 28964 KB] Solution found!
[t=0.186747s, 28964 KB] Actual search time: 0.139357s
unstack b12 b31 (1)
put-down b12 (1)
unstack b4 b6 (1)
put-down b4 (1)
unstack b24 b13 (1)
put-down b24 (1)
unstack b13 b25 (1)
put-down b13 (1)
unstack b27 b10 (1)
put-down b27 (1)
unstack b10 b3 (1)
put-down b10 (1)
unstack b29 b22 (1)
put-down b29 (1)
unstack b22 b20 (1)
put-down b22 (1)
unstack b20 b5 (1)
put-down b20 (1)
unstack b31 b8 (1)
put-down b31 (1)
unstack b8 b26 (1)
put-down b8 (1)
unstack b26 b14 (1)
put-down b26 (1)
unstack b14 b11 (1)
put-down b14 (1)
unstack b11 b21 (1)
stack b11 b5 (1)
unstack b21 b17 (1)
put-down b21 (1)
unstack b17 b19 (1)
put-down b17 (1)
unstack b19 b18 (1)
stack b19 b28 (1)
unstack b18 b9 (1)
stack b18 b11 (1)
pick-up b17 (1)
stack b17 b18 (1)
pick-up b23 (1)
stack b23 b17 (1)
pick-up b24 (1)
stack b24 b23 (1)
pick-up b3 (1)
stack b3 b24 (1)
pick-up b25 (1)
stack b25 b14 (1)
pick-up b29 (1)
stack b29 b21 (1)
pick-up b26 (1)
stack b26 b20 (1)
pick-up b12 (1)
stack b12 b10 (1)
pick-up b13 (1)
stack b13 b12 (1)
pick-up b22 (1)
stack b22 b8 (1)
pick-up b27 (1)
stack b27 b22 (1)
unstack b26 b20 (1)
put-down b26 (1)
pick-up b20 (1)
stack b20 b13 (1)
pick-up b26 (1)
stack b26 b20 (1)
unstack b3 b24 (1)
put-down b3 (1)
unstack b24 b23 (1)
put-down b24 (1)
unstack b23 b17 (1)
put-down b23 (1)
pick-up b24 (1)
stack b24 b23 (1)
pick-up b3 (1)
stack b3 b24 (1)
unstack b17 b18 (1)
put-down b17 (1)
unstack b18 b11 (1)
put-down b18 (1)
pick-up b17 (1)
stack b17 b18 (1)
unstack b11 b5 (1)
put-down b11 (1)
unstack b5 b2 (1)
put-down b5 (1)
pick-up b11 (1)
stack b11 b5 (1)
unstack b2 b7 (1)
put-down b2 (1)
pick-up b4 (1)
stack b4 b2 (1)
unstack b7 b1 (1)
stack b7 b27 (1)
unstack b1 b16 (1)
stack b1 b6 (1)
unstack b16 b15 (1)
stack b16 b31 (1)
unstack b15 b30 (1)
stack b15 b25 (1)
pick-up b30 (1)
stack b30 b29 (1)
unstack b1 b6 (1)
put-down b1 (1)
pick-up b6 (1)
stack b6 b15 (1)
pick-up b1 (1)
stack b1 b6 (1)
unstack b17 b18 (1)
put-down b17 (1)
pick-up b18 (1)
stack b18 b11 (1)
pick-up b17 (1)
stack b17 b18 (1)
unstack b4 b2 (1)
put-down b4 (1)
pick-up b2 (1)
stack b2 b16 (1)
pick-up b4 (1)
stack b4 b2 (1)
unstack b3 b24 (1)
put-down b3 (1)
unstack b24 b23 (1)
put-down b24 (1)
pick-up b23 (1)
stack b23 b17 (1)
pick-up b24 (1)
stack b24 b23 (1)
pick-up b3 (1)
stack b3 b24 (1)
unstack b7 b27 (1)
put-down b7 (1)
unstack b27 b22 (1)
put-down b27 (1)
pick-up b7 (1)
stack b7 b27 (1)
unstack b22 b8 (1)
put-down b22 (1)
pick-up b8 (1)
stack b8 b1 (1)
pick-up b22 (1)
stack b22 b8 (1)
unstack b7 b27 (1)
put-down b7 (1)
pick-up b27 (1)
stack b27 b22 (1)
pick-up b7 (1)
stack b7 b27 (1)
unstack b26 b20 (1)
put-down b26 (1)
unstack b20 b13 (1)
put-down b20 (1)
unstack b13 b12 (1)
put-down b13 (1)
pick-up b20 (1)
stack b20 b13 (1)
pick-up b26 (1)
stack b26 b20 (1)
unstack b12 b10 (1)
put-down b12 (1)
pick-up b10 (1)
stack b10 b30 (1)
pick-up b12 (1)
stack b12 b10 (1)
unstack b26 b20 (1)
put-down b26 (1)
unstack b20 b13 (1)
put-down b20 (1)
pick-up b13 (1)
stack b13 b12 (1)
pick-up b20 (1)
stack b20 b13 (1)
pick-up b26 (1)
stack b26 b20 (1)
[t=0.186756s, 28964 KB] Plan length: 172 step(s).
[t=0.186756s, 28964 KB] Plan cost: 172
[t=0.186756s, 28964 KB] Expanded 3076 state(s).
[t=0.186756s, 28964 KB] Reopened 0 state(s).
[t=0.186756s, 28964 KB] Evaluated 3077 state(s).
[t=0.186756s, 28964 KB] Evaluations: 6154
[t=0.186756s, 28964 KB] Generated 43345 state(s).
[t=0.186756s, 28964 KB] Dead ends: 0 state(s).
[t=0.186756s, 28964 KB] Number of registered states: 3077
[t=0.186756s, 28964 KB] Int hash set load factor: 3077/4096 = 0.751221
[t=0.186756s, 28964 KB] Int hash set resizes: 12
[t=0.186756s, 28964 KB] Search time: 0.139404s
[t=0.186756s, 28964 KB] Total time: 0.186756s
Solution found.
Peak memory: 28964 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.41s
