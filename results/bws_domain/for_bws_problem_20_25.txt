INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_20/bws_problem_20_25.pddl --sas-file output.sas
Parsing...
Parsing: [0.010s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.008s wall-clock]
1342 relevant atoms
900 auxiliary atoms
2242 final queue length
3887 total queue pushes
Completing instantiation... [0.010s CPU, 0.014s wall-clock]
Instantiating: [0.020s CPU, 0.023s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
21 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.006s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.010s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.019s wall-clock]
1180 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
40 propositions removed
Detecting unreachable propositions: [0.000s CPU, 0.009s wall-clock]
Reordering and filtering variables...
41 of 41 variables necessary.
21 of 41 mutex groups necessary.
800 of 800 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.005s wall-clock]
Translator variables: 41
Translator derived variables: 0
Translator facts: 462
Translator goal facts: 17
Translator mutex groups: 21
Translator total mutex groups size: 441
Translator operators: 800
Translator axioms: 0
Translator task size: 6901
Translator peak memory: 35940 KB
Writing output... [0.000s CPU, 0.004s wall-clock]
Done! [0.070s CPU, 0.071s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.961e-05s, 24488 KB] reading input...
[t=0.00250123s, 25180 KB] done reading input!
[t=0.00353585s, 25444 KB] Initializing landmark count heuristic...
[t=0.00356386s, 25444 KB] Generating landmark graph...
[t=0.00361914s, 25576 KB] Building a landmark graph with reasonable orders.
[t=0.00366782s, 25576 KB] Initializing Exploration...
[t=0.00390437s, 25744 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0116325s, 26140 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0117103s, 26140 KB] Landmarks generation time: 0.00809506s
[t=0.0117275s, 26140 KB] Discovered 87 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0117463s, 26140 KB] 265 edges
[t=0.0117581s, 26140 KB] approx. reasonable orders
[t=0.0132932s, 26140 KB] approx. obedient reasonable orders
[t=0.013321s, 26140 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0133312s, 26140 KB] Landmarks generation time: 0.00976715s
[t=0.0133445s, 26140 KB] Discovered 87 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0133553s, 26140 KB] 305 edges
[t=0.0133661s, 26140 KB] Landmark graph generation time: 0.0098107s
[t=0.0133765s, 26140 KB] Landmark graph contains 87 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0133863s, 26140 KB] Landmark graph contains 305 orderings.
[t=0.0136831s, 26296 KB] Simplifying 3160 unary operators... done! [2400 unary operators]
[t=0.0144331s, 26296 KB] time to simplify: 0.000806812s
[t=0.0145477s, 26296 KB] Initializing additive heuristic...
[t=0.0145853s, 26296 KB] Initializing FF heuristic...
[t=0.0146836s, 26296 KB] Building successor generator...done!
[t=0.0148855s, 26296 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0149002s, 26296 KB] time for successor generation creation: 0.000163025s
[t=0.0149159s, 26296 KB] Variables: 41
[t=0.0149249s, 26296 KB] FactPairs: 462
[t=0.0149356s, 26296 KB] Bytes per state: 16
[t=0.0150595s, 26296 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0150976s, 26296 KB] 40 initial landmarks, 17 goal landmarks
[t=0.015163s, 26296 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0151743s, 26296 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0151864s, 26296 KB] g=0, 1 evaluated, 0 expanded
[t=0.0152098s, 26296 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0152205s, 26296 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0152759s, 26296 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0152875s, 26296 KB] g=1, 2 evaluated, 1 expanded
[t=0.0154868s, 26296 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0155057s, 26296 KB] g=3, 10 evaluated, 9 expanded
[t=0.0157109s, 26296 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0157247s, 26296 KB] g=2, 19 evaluated, 18 expanded
[t=0.0158029s, 26296 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0158134s, 26296 KB] g=6, 22 evaluated, 21 expanded
[t=0.0160514s, 26296 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.016062s, 26296 KB] g=4, 33 evaluated, 32 expanded
[t=0.016221s, 26296 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0162316s, 26296 KB] g=8, 40 evaluated, 39 expanded
[t=0.0163073s, 26296 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0163172s, 26296 KB] g=6, 43 evaluated, 42 expanded
[t=0.0164903s, 26296 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0165002s, 26296 KB] g=8, 51 evaluated, 50 expanded
[t=0.0167357s, 26296 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0167472s, 26296 KB] g=10, 62 evaluated, 61 expanded
[t=0.0171503s, 26296 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0171605s, 26296 KB] g=12, 81 evaluated, 80 expanded
[t=0.0171953s, 26296 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0172049s, 26296 KB] g=12, 82 evaluated, 81 expanded
[t=0.017705s, 26296 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0177244s, 26296 KB] g=16, 105 evaluated, 104 expanded
[t=0.0177807s, 26296 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0177911s, 26296 KB] g=14, 107 evaluated, 106 expanded
[t=0.0182014s, 26296 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0182127s, 26296 KB] g=16, 126 evaluated, 125 expanded
[t=0.0188294s, 26296 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0188417s, 26296 KB] g=18, 155 evaluated, 154 expanded
[t=0.0193813s, 26296 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0194014s, 26296 KB] g=20, 180 evaluated, 179 expanded
[t=0.0195087s, 26296 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0195195s, 26296 KB] g=22, 184 evaluated, 183 expanded
[t=0.0198387s, 26296 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0198503s, 26296 KB] g=22, 199 evaluated, 198 expanded
[t=0.0204418s, 26296 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0204539s, 26296 KB] g=24, 227 evaluated, 226 expanded
[t=0.0210421s, 26296 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0210522s, 26296 KB] g=26, 255 evaluated, 254 expanded
[t=0.0212666s, 26296 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0212773s, 26296 KB] g=30, 264 evaluated, 263 expanded
[t=0.0216016s, 26296 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0216119s, 26296 KB] g=28, 279 evaluated, 278 expanded
[t=0.0218506s, 26296 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0218606s, 26296 KB] g=30, 290 evaluated, 289 expanded
[t=0.0220593s, 26296 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0220694s, 26296 KB] g=30, 299 evaluated, 298 expanded
[t=0.0224825s, 26296 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0224954s, 26296 KB] g=32, 317 evaluated, 316 expanded
[t=0.022596s, 26296 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0226076s, 26296 KB] g=32, 321 evaluated, 320 expanded
[t=0.0229443s, 26296 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0229572s, 26296 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0229677s, 26296 KB] g=34, 337 evaluated, 336 expanded
[t=0.0231196s, 26296 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0231306s, 26296 KB] g=36, 344 evaluated, 343 expanded
[t=0.0233253s, 26296 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0233362s, 26296 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0233466s, 26296 KB] g=38, 353 evaluated, 352 expanded
[t=0.0234004s, 26296 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.02341s, 26296 KB] g=39, 355 evaluated, 354 expanded
[t=0.0236825s, 26296 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0236931s, 26296 KB] g=43, 368 evaluated, 367 expanded
[t=0.0237312s, 26296 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0237461s, 26296 KB] g=44, 369 evaluated, 368 expanded
[t=0.0239092s, 26296 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0239198s, 26296 KB] g=46, 376 evaluated, 375 expanded
[t=0.0239928s, 26296 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0240028s, 26296 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0240129s, 26296 KB] g=46, 379 evaluated, 378 expanded
[t=0.0241428s, 26296 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0241533s, 26296 KB] g=48, 385 evaluated, 384 expanded
[t=0.0248851s, 26296 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0249109s, 26296 KB] g=53, 417 evaluated, 416 expanded
[t=0.0249904s, 26296 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0250027s, 26296 KB] g=54, 420 evaluated, 419 expanded
[t=0.0250957s, 26296 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0251066s, 26296 KB] g=55, 424 evaluated, 423 expanded
[t=0.0269055s, 26296 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0269299s, 26296 KB] g=70, 512 evaluated, 511 expanded
[t=0.0271147s, 26296 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0271264s, 26296 KB] g=71, 519 evaluated, 518 expanded
[t=0.027278s, 26296 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0272884s, 26296 KB] g=72, 526 evaluated, 525 expanded
[t=0.0274291s, 26296 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0274394s, 26296 KB] g=73, 532 evaluated, 531 expanded
[t=0.0274807s, 26296 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0274902s, 26296 KB] g=74, 533 evaluated, 532 expanded
[t=0.0275791s, 26296 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.027589s, 26296 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0275991s, 26296 KB] g=76, 537 evaluated, 536 expanded
[t=0.0276707s, 26296 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0276808s, 26296 KB] g=76, 540 evaluated, 539 expanded
[t=0.0277677s, 26296 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0277773s, 26296 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0277874s, 26296 KB] g=78, 544 evaluated, 543 expanded
[t=0.0279694s, 26296 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0279794s, 26296 KB] g=82, 553 evaluated, 552 expanded
[t=0.0280476s, 26296 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0280583s, 26296 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0280682s, 26296 KB] g=84, 556 evaluated, 555 expanded
[t=0.0354193s, 26296 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0354661s, 26296 KB] g=122, 937 evaluated, 936 expanded
[t=0.035655s, 26296 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0356657s, 26296 KB] g=126, 946 evaluated, 945 expanded
[t=0.035732s, 26296 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0357687s, 26296 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0357797s, 26296 KB] g=128, 949 evaluated, 948 expanded
[t=0.0363931s, 26296 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0364056s, 26296 KB] g=144, 987 evaluated, 986 expanded
[t=0.0365464s, 26296 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.036557s, 26296 KB] g=152, 997 evaluated, 996 expanded
[t=0.0366129s, 26296 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0366231s, 26296 KB] g=156, 1001 evaluated, 1000 expanded
[t=0.036644s, 26296 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.036655s, 26296 KB] g=157, 1002 evaluated, 1001 expanded
[t=0.0366733s, 26296 KB] Solution found!
[t=0.0366926s, 26296 KB] Actual search time: 0.0215912s
unstack b13 b1 (1)
put-down b13 (1)
unstack b20 b11 (1)
put-down b20 (1)
unstack b1 b16 (1)
put-down b1 (1)
unstack b16 b7 (1)
put-down b16 (1)
unstack b2 b12 (1)
put-down b2 (1)
unstack b12 b17 (1)
put-down b12 (1)
unstack b6 b15 (1)
stack b6 b16 (1)
unstack b15 b3 (1)
put-down b15 (1)
unstack b8 b9 (1)
stack b8 b3 (1)
unstack b9 b18 (1)
stack b9 b1 (1)
unstack b18 b10 (1)
stack b18 b6 (1)
unstack b10 b5 (1)
put-down b10 (1)
pick-up b15 (1)
stack b15 b18 (1)
pick-up b17 (1)
stack b17 b10 (1)
pick-up b2 (1)
stack b2 b8 (1)
pick-up b11 (1)
stack b11 b2 (1)
pick-up b13 (1)
stack b13 b11 (1)
pick-up b20 (1)
stack b20 b12 (1)
pick-up b7 (1)
stack b7 b15 (1)
unstack b20 b12 (1)
put-down b20 (1)
unstack b5 b19 (1)
put-down b5 (1)
unstack b19 b14 (1)
stack b19 b17 (1)
pick-up b5 (1)
stack b5 b19 (1)
pick-up b20 (1)
stack b20 b12 (1)
unstack b9 b1 (1)
put-down b9 (1)
pick-up b1 (1)
stack b1 b7 (1)
pick-up b9 (1)
stack b9 b1 (1)
unstack b13 b11 (1)
put-down b13 (1)
unstack b11 b2 (1)
put-down b11 (1)
pick-up b13 (1)
stack b13 b11 (1)
unstack b2 b8 (1)
put-down b2 (1)
unstack b20 b12 (1)
put-down b20 (1)
unstack b8 b3 (1)
put-down b8 (1)
unstack b3 b4 (1)
put-down b3 (1)
pick-up b4 (1)
stack b4 b9 (1)
pick-up b12 (1)
stack b12 b4 (1)
pick-up b20 (1)
stack b20 b12 (1)
pick-up b8 (1)
stack b8 b3 (1)
pick-up b2 (1)
stack b2 b8 (1)
unstack b13 b11 (1)
put-down b13 (1)
pick-up b11 (1)
stack b11 b2 (1)
pick-up b13 (1)
stack b13 b11 (1)
unstack b20 b12 (1)
put-down b20 (1)
unstack b12 b4 (1)
put-down b12 (1)
pick-up b20 (1)
stack b20 b12 (1)
unstack b4 b9 (1)
put-down b4 (1)
unstack b9 b1 (1)
put-down b9 (1)
unstack b1 b7 (1)
put-down b1 (1)
pick-up b9 (1)
stack b9 b1 (1)
pick-up b4 (1)
stack b4 b9 (1)
unstack b20 b12 (1)
put-down b20 (1)
pick-up b12 (1)
stack b12 b4 (1)
pick-up b20 (1)
stack b20 b12 (1)
unstack b7 b15 (1)
put-down b7 (1)
unstack b15 b18 (1)
put-down b15 (1)
pick-up b7 (1)
stack b7 b15 (1)
unstack b18 b6 (1)
put-down b18 (1)
unstack b6 b16 (1)
put-down b6 (1)
pick-up b16 (1)
stack b16 b14 (1)
pick-up b6 (1)
stack b6 b16 (1)
pick-up b18 (1)
stack b18 b6 (1)
unstack b7 b15 (1)
put-down b7 (1)
pick-up b15 (1)
stack b15 b18 (1)
pick-up b7 (1)
stack b7 b15 (1)
unstack b20 b12 (1)
put-down b20 (1)
unstack b12 b4 (1)
put-down b12 (1)
unstack b4 b9 (1)
put-down b4 (1)
pick-up b12 (1)
stack b12 b4 (1)
pick-up b20 (1)
stack b20 b12 (1)
unstack b9 b1 (1)
put-down b9 (1)
pick-up b1 (1)
stack b1 b7 (1)
pick-up b9 (1)
stack b9 b1 (1)
unstack b20 b12 (1)
put-down b20 (1)
unstack b12 b4 (1)
put-down b12 (1)
pick-up b20 (1)
stack b20 b12 (1)
pick-up b4 (1)
stack b4 b9 (1)
unstack b20 b12 (1)
put-down b20 (1)
pick-up b12 (1)
stack b12 b4 (1)
pick-up b20 (1)
stack b20 b12 (1)
[t=0.0367034s, 26296 KB] Plan length: 158 step(s).
[t=0.0367034s, 26296 KB] Plan cost: 158
[t=0.0367034s, 26296 KB] Expanded 1002 state(s).
[t=0.0367034s, 26296 KB] Reopened 0 state(s).
[t=0.0367034s, 26296 KB] Evaluated 1003 state(s).
[t=0.0367034s, 26296 KB] Evaluations: 2006
[t=0.0367034s, 26296 KB] Generated 8180 state(s).
[t=0.0367034s, 26296 KB] Dead ends: 0 state(s).
[t=0.0367034s, 26296 KB] Number of registered states: 1003
[t=0.0367034s, 26296 KB] Int hash set load factor: 1003/1024 = 0.979492
[t=0.0367034s, 26296 KB] Int hash set resizes: 10
[t=0.0367034s, 26296 KB] Search time: 0.0216445s
[t=0.0367034s, 26296 KB] Total time: 0.0367034s
Solution found.
Peak memory: 26296 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.16s
