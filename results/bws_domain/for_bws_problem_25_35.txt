INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_25/bws_problem_25_35.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.014s wall-clock]
2052 relevant atoms
1375 auxiliary atoms
3427 final queue length
5981 total queue pushes
Completing instantiation... [0.010s CPU, 0.021s wall-clock]
Instantiating: [0.030s CPU, 0.036s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.010s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
26 uncovered facts
Choosing groups: [0.000s CPU, 0.002s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.009s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.032s wall-clock]
1850 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
50 propositions removed
Detecting unreachable propositions: [0.030s CPU, 0.026s wall-clock]
Reordering and filtering variables...
51 of 51 variables necessary.
26 of 51 mutex groups necessary.
1250 of 1250 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.008s wall-clock]
Translator variables: 51
Translator derived variables: 0
Translator facts: 702
Translator goal facts: 21
Translator mutex groups: 26
Translator total mutex groups size: 676
Translator operators: 1250
Translator axioms: 0
Translator task size: 10750
Translator peak memory: 38388 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.120s CPU, 0.122s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.1945e-05s, 24488 KB] reading input...
[t=0.00356642s, 25632 KB] done reading input!
[t=0.00448458s, 26028 KB] Initializing landmark count heuristic...
[t=0.00451928s, 26028 KB] Generating landmark graph...
[t=0.00459279s, 26160 KB] Building a landmark graph with reasonable orders.
[t=0.00466817s, 26160 KB] Initializing Exploration...
[t=0.00505117s, 26532 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0201186s, 27060 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0202675s, 27060 KB] Landmarks generation time: 0.0156782s
[t=0.0202844s, 27060 KB] Discovered 109 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0203102s, 27060 KB] 567 edges
[t=0.0203216s, 27060 KB] approx. reasonable orders
[t=0.0241212s, 27060 KB] approx. obedient reasonable orders
[t=0.024205s, 27060 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.024217s, 27060 KB] Landmarks generation time: 0.0196949s
[t=0.0242275s, 27060 KB] Discovered 109 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0242361s, 27060 KB] 629 edges
[t=0.0242446s, 27060 KB] Landmark graph generation time: 0.0197327s
[t=0.0242535s, 27060 KB] Landmark graph contains 109 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0242618s, 27060 KB] Landmark graph contains 629 orderings.
[t=0.0246737s, 27060 KB] Simplifying 4950 unary operators... done! [3750 unary operators]
[t=0.0259291s, 27192 KB] time to simplify: 0.00134466s
[t=0.0260971s, 27192 KB] Initializing additive heuristic...
[t=0.0261153s, 27192 KB] Initializing FF heuristic...
[t=0.0261692s, 27192 KB] Building successor generator...done!
[t=0.0264128s, 27192 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0264223s, 27192 KB] time for successor generation creation: 0.000213758s
[t=0.026436s, 27192 KB] Variables: 51
[t=0.0264444s, 27192 KB] FactPairs: 702
[t=0.0264526s, 27192 KB] Bytes per state: 20
[t=0.0265447s, 27192 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0265782s, 27192 KB] 50 initial landmarks, 21 goal landmarks
[t=0.0266405s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.0266505s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0266591s, 27192 KB] g=0, 1 evaluated, 0 expanded
[t=0.0266736s, 27192 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.0266824s, 27192 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0267626s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 58
[t=0.0267722s, 27192 KB] g=1, 3 evaluated, 2 expanded
[t=0.0270752s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 57
[t=0.0270867s, 27192 KB] g=4, 12 evaluated, 11 expanded
[t=0.0272533s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0272632s, 27192 KB] g=4, 17 evaluated, 16 expanded
[t=0.0274553s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0274653s, 27192 KB] g=6, 23 evaluated, 22 expanded
[t=0.0279893s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0280095s, 27192 KB] g=7, 39 evaluated, 38 expanded
[t=0.0284939s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0285041s, 27192 KB] g=10, 55 evaluated, 54 expanded
[t=0.0288844s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0288972s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0289084s, 27192 KB] g=12, 67 evaluated, 66 expanded
[t=0.0291281s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0291389s, 27192 KB] g=14, 74 evaluated, 73 expanded
[t=0.029592s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0296018s, 27192 KB] g=16, 89 evaluated, 88 expanded
[t=0.0298954s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0299144s, 27192 KB] g=18, 98 evaluated, 97 expanded
[t=0.0303707s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0303807s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0303891s, 27192 KB] g=20, 113 evaluated, 112 expanded
[t=0.0307004s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0307101s, 27192 KB] g=22, 123 evaluated, 122 expanded
[t=0.0308185s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0308302s, 27192 KB] g=22, 125 evaluated, 124 expanded
[t=0.0313378s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0313469s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0313548s, 27192 KB] g=24, 142 evaluated, 141 expanded
[t=0.0316761s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0316853s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0316931s, 27192 KB] g=26, 153 evaluated, 152 expanded
[t=0.032013s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0320221s, 27192 KB] g=28, 164 evaluated, 163 expanded
[t=0.0321517s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0321605s, 27192 KB] g=28, 168 evaluated, 167 expanded
[t=0.0325263s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0325544s, 27192 KB] g=30, 180 evaluated, 179 expanded
[t=0.0330211s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0330322s, 27192 KB] g=30, 195 evaluated, 194 expanded
[t=0.0331381s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0331473s, 27192 KB] g=32, 198 evaluated, 197 expanded
[t=0.0337027s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0337154s, 27192 KB] g=34, 216 evaluated, 215 expanded
[t=0.0342569s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0342704s, 27192 KB] g=36, 233 evaluated, 232 expanded
[t=0.0347265s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0347472s, 27192 KB] g=32, 247 evaluated, 246 expanded
[t=0.0348532s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0348628s, 27192 KB] g=38, 250 evaluated, 249 expanded
[t=0.0353402s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0353525s, 27192 KB] g=40, 265 evaluated, 264 expanded
[t=0.0357381s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0357575s, 27192 KB] g=34, 277 evaluated, 276 expanded
[t=0.0358524s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0358737s, 27192 KB] g=42, 278 evaluated, 277 expanded
[t=0.0366943s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0367369s, 27192 KB] g=44, 291 evaluated, 290 expanded
[t=0.0373231s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0373529s, 27192 KB] g=46, 303 evaluated, 302 expanded
[t=0.0375149s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.037528s, 27192 KB] g=36, 307 evaluated, 306 expanded
[t=0.0379126s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.03794s, 27192 KB] g=48, 315 evaluated, 314 expanded
[t=0.0389618s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0389877s, 27192 KB] g=38, 335 evaluated, 334 expanded
[t=0.0406296s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0406486s, 27192 KB] g=54, 388 evaluated, 387 expanded
[t=0.0410658s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0410776s, 27192 KB] g=40, 401 evaluated, 400 expanded
[t=0.0422273s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0422621s, 27192 KB] g=42, 436 evaluated, 435 expanded
[t=0.0429142s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0429244s, 27192 KB] g=44, 457 evaluated, 456 expanded
[t=0.0439481s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0439587s, 27192 KB] g=46, 490 evaluated, 489 expanded
[t=0.0447217s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0447378s, 27192 KB] g=48, 514 evaluated, 513 expanded
[t=0.0453925s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0454029s, 27192 KB] g=50, 536 evaluated, 535 expanded
[t=0.0462974s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0463097s, 27192 KB] g=52, 564 evaluated, 563 expanded
[t=0.0470557s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0470722s, 27192 KB] g=54, 588 evaluated, 587 expanded
[t=0.0473176s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0473269s, 27192 KB] g=68, 596 evaluated, 595 expanded
[t=0.0505688s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0505889s, 27192 KB] g=78, 705 evaluated, 704 expanded
[t=0.0737551s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0738155s, 27192 KB] g=72, 1478 evaluated, 1477 expanded
[t=0.0740774s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0741108s, 27192 KB] g=74, 1484 evaluated, 1483 expanded
[t=0.0743822s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0744301s, 27192 KB] g=76, 1488 evaluated, 1487 expanded
[t=0.0834675s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0836195s, 27192 KB] g=114, 1759 evaluated, 1758 expanded
[t=0.0842411s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0842562s, 27192 KB] g=116, 1779 evaluated, 1778 expanded
[t=0.0843299s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0843401s, 27192 KB] g=117, 1781 evaluated, 1780 expanded
[t=0.0849471s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0849752s, 27192 KB] g=118, 1800 evaluated, 1799 expanded
[t=0.085016s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0850249s, 27192 KB] g=119, 1801 evaluated, 1800 expanded
[t=0.085448s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0854699s, 27192 KB] g=120, 1816 evaluated, 1815 expanded
[t=0.0855084s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0855185s, 27192 KB] g=121, 1817 evaluated, 1816 expanded
[t=0.0858593s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0858737s, 27192 KB] g=122, 1828 evaluated, 1827 expanded
[t=0.0859415s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0859526s, 27192 KB] g=123, 1830 evaluated, 1829 expanded
[t=0.0863452s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0863568s, 27192 KB] g=124, 1844 evaluated, 1843 expanded
[t=0.0863927s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0864032s, 27192 KB] g=125, 1845 evaluated, 1844 expanded
[t=0.0866365s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0866573s, 27192 KB] g=128, 1854 evaluated, 1853 expanded
[t=0.086731s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0867451s, 27192 KB] g=129, 1856 evaluated, 1855 expanded
[t=0.0869053s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0869192s, 27192 KB] g=130, 1862 evaluated, 1861 expanded
[t=0.0869771s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0869905s, 27192 KB] g=131, 1864 evaluated, 1863 expanded
[t=0.0871882s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0871999s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0872085s, 27192 KB] g=134, 1872 evaluated, 1871 expanded
[t=0.0872409s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.087257s, 27192 KB] g=135, 1873 evaluated, 1872 expanded
[t=0.0872883s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0872974s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0873055s, 27192 KB] g=136, 1874 evaluated, 1873 expanded
[t=0.0875045s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0875147s, 27192 KB] g=140, 1883 evaluated, 1882 expanded
[t=0.0875841s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0875931s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0876011s, 27192 KB] g=142, 1886 evaluated, 1885 expanded
[t=0.0879412s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0879555s, 27192 KB] g=154, 1904 evaluated, 1903 expanded
[t=0.0880222s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0880313s, 27192 KB] g=158, 1908 evaluated, 1907 expanded
[t=0.0880499s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0880604s, 27192 KB] g=159, 1909 evaluated, 1908 expanded
[t=0.0880784s, 27192 KB] Solution found!
[t=0.0880958s, 27192 KB] Actual search time: 0.0615151s
unstack b16 b23 (1)
put-down b16 (1)
unstack b23 b6 (1)
put-down b23 (1)
unstack b15 b18 (1)
put-down b15 (1)
unstack b6 b7 (1)
put-down b6 (1)
unstack b18 b17 (1)
put-down b18 (1)
pick-up b16 (1)
stack b16 b17 (1)
unstack b2 b25 (1)
put-down b2 (1)
unstack b21 b3 (1)
put-down b21 (1)
unstack b25 b4 (1)
put-down b25 (1)
unstack b3 b14 (1)
stack b3 b23 (1)
unstack b14 b1 (1)
put-down b14 (1)
unstack b7 b24 (1)
stack b7 b3 (1)
unstack b24 b12 (1)
put-down b24 (1)
pick-up b1 (1)
stack b1 b25 (1)
unstack b12 b10 (1)
stack b12 b2 (1)
unstack b10 b20 (1)
stack b10 b21 (1)
unstack b20 b5 (1)
put-down b20 (1)
pick-up b15 (1)
stack b15 b14 (1)
pick-up b18 (1)
stack b18 b12 (1)
pick-up b4 (1)
stack b4 b20 (1)
unstack b5 b11 (1)
stack b5 b18 (1)
unstack b11 b22 (1)
stack b11 b15 (1)
unstack b22 b9 (1)
stack b22 b4 (1)
pick-up b6 (1)
stack b6 b10 (1)
unstack b1 b25 (1)
put-down b1 (1)
pick-up b25 (1)
stack b25 b5 (1)
pick-up b1 (1)
stack b1 b25 (1)
unstack b11 b15 (1)
put-down b11 (1)
unstack b15 b14 (1)
put-down b15 (1)
pick-up b11 (1)
stack b11 b15 (1)
pick-up b14 (1)
stack b14 b9 (1)
unstack b11 b15 (1)
put-down b11 (1)
pick-up b15 (1)
stack b15 b14 (1)
pick-up b11 (1)
stack b11 b15 (1)
unstack b6 b10 (1)
put-down b6 (1)
unstack b10 b21 (1)
put-down b10 (1)
pick-up b21 (1)
stack b21 b11 (1)
pick-up b6 (1)
stack b6 b10 (1)
unstack b21 b11 (1)
put-down b21 (1)
unstack b11 b15 (1)
put-down b11 (1)
pick-up b21 (1)
stack b21 b11 (1)
unstack b6 b10 (1)
put-down b6 (1)
pick-up b10 (1)
stack b10 b21 (1)
pick-up b6 (1)
stack b6 b10 (1)
unstack b1 b25 (1)
put-down b1 (1)
unstack b25 b5 (1)
put-down b25 (1)
pick-up b1 (1)
stack b1 b25 (1)
unstack b5 b18 (1)
put-down b5 (1)
unstack b1 b25 (1)
put-down b1 (1)
unstack b18 b12 (1)
put-down b18 (1)
unstack b12 b2 (1)
put-down b12 (1)
unstack b15 b14 (1)
put-down b15 (1)
unstack b14 b9 (1)
put-down b14 (1)
pick-up b15 (1)
stack b15 b14 (1)
unstack b9 b8 (1)
put-down b9 (1)
unstack b8 b19 (1)
put-down b8 (1)
unstack b19 b13 (1)
stack b19 b7 (1)
pick-up b13 (1)
stack b13 b22 (1)
pick-up b2 (1)
stack b2 b13 (1)
pick-up b12 (1)
stack b12 b2 (1)
pick-up b18 (1)
stack b18 b12 (1)
pick-up b5 (1)
stack b5 b18 (1)
pick-up b1 (1)
stack b1 b25 (1)
pick-up b8 (1)
stack b8 b19 (1)
pick-up b9 (1)
stack b9 b8 (1)
unstack b1 b25 (1)
put-down b1 (1)
pick-up b25 (1)
stack b25 b5 (1)
pick-up b1 (1)
stack b1 b25 (1)
unstack b15 b14 (1)
put-down b15 (1)
pick-up b14 (1)
stack b14 b9 (1)
pick-up b15 (1)
stack b15 b14 (1)
unstack b6 b10 (1)
put-down b6 (1)
unstack b10 b21 (1)
put-down b10 (1)
pick-up b6 (1)
stack b6 b10 (1)
unstack b21 b11 (1)
put-down b21 (1)
pick-up b11 (1)
stack b11 b15 (1)
pick-up b21 (1)
stack b21 b11 (1)
unstack b6 b10 (1)
put-down b6 (1)
pick-up b10 (1)
stack b10 b21 (1)
pick-up b6 (1)
stack b6 b10 (1)
[t=0.0881069s, 27192 KB] Plan length: 160 step(s).
[t=0.0881069s, 27192 KB] Plan cost: 160
[t=0.0881069s, 27192 KB] Expanded 1909 state(s).
[t=0.0881069s, 27192 KB] Reopened 0 state(s).
[t=0.0881069s, 27192 KB] Evaluated 1910 state(s).
[t=0.0881069s, 27192 KB] Evaluations: 3820
[t=0.0881069s, 27192 KB] Generated 20781 state(s).
[t=0.0881069s, 27192 KB] Dead ends: 0 state(s).
[t=0.0881069s, 27192 KB] Number of registered states: 1910
[t=0.0881069s, 27192 KB] Int hash set load factor: 1910/2048 = 0.932617
[t=0.0881069s, 27192 KB] Int hash set resizes: 11
[t=0.0881069s, 27192 KB] Search time: 0.0615628s
[t=0.0881069s, 27192 KB] Total time: 0.0881069s
Solution found.
Peak memory: 27192 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.25s
