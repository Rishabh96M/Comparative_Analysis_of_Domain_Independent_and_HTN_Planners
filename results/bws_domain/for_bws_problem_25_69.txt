INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_25/bws_problem_25_69.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.012s wall-clock]
2052 relevant atoms
1375 auxiliary atoms
3427 final queue length
5980 total queue pushes
Completing instantiation... [0.020s CPU, 0.021s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.010s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
26 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.008s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.001s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.032s wall-clock]
1850 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
50 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.019s wall-clock]
Reordering and filtering variables...
51 of 51 variables necessary.
26 of 51 mutex groups necessary.
1250 of 1250 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.008s wall-clock]
Translator variables: 51
Translator derived variables: 0
Translator facts: 702
Translator goal facts: 18
Translator mutex groups: 26
Translator total mutex groups size: 676
Translator operators: 1250
Translator axioms: 0
Translator task size: 10747
Translator peak memory: 38388 KB
Writing output... [0.010s CPU, 0.006s wall-clock]
Done! [0.110s CPU, 0.113s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=1.848e-05s, 24488 KB] reading input...
[t=0.00384335s, 25632 KB] done reading input!
[t=0.00477139s, 26028 KB] Initializing landmark count heuristic...
[t=0.0048123s, 26028 KB] Generating landmark graph...
[t=0.00488808s, 26160 KB] Building a landmark graph with reasonable orders.
[t=0.00495713s, 26160 KB] Initializing Exploration...
[t=0.00531285s, 26532 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.020087s, 27060 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.020265s, 27060 KB] Landmarks generation time: 0.0153819s
[t=0.020284s, 27060 KB] Discovered 104 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0203121s, 27060 KB] 507 edges
[t=0.0203244s, 27060 KB] approx. reasonable orders
[t=0.0235081s, 27060 KB] approx. obedient reasonable orders
[t=0.0236143s, 27060 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0236329s, 27060 KB] Landmarks generation time: 0.0188234s
[t=0.0236515s, 27060 KB] Discovered 104 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0236655s, 27060 KB] 540 edges
[t=0.02368s, 27060 KB] Landmark graph generation time: 0.0188796s
[t=0.0236949s, 27060 KB] Landmark graph contains 104 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0237081s, 27060 KB] Landmark graph contains 540 orderings.
[t=0.0242362s, 27060 KB] Simplifying 4950 unary operators... done! [3750 unary operators]
[t=0.0254394s, 27060 KB] time to simplify: 0.00128429s
[t=0.0256117s, 27060 KB] Initializing additive heuristic...
[t=0.025628s, 27060 KB] Initializing FF heuristic...
[t=0.0256842s, 27060 KB] Building successor generator...done!
[t=0.0260429s, 27060 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0260545s, 27060 KB] time for successor generation creation: 0.000308244s
[t=0.0260769s, 27060 KB] Variables: 51
[t=0.0260857s, 27060 KB] FactPairs: 702
[t=0.0260937s, 27060 KB] Bytes per state: 20
[t=0.0265475s, 27060 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0266067s, 27060 KB] 49 initial landmarks, 18 goal landmarks
[t=0.0267361s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0267478s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0267566s, 27060 KB] g=0, 1 evaluated, 0 expanded
[t=0.0267775s, 27060 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0267862s, 27060 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0269355s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0269455s, 27060 KB] g=2, 5 evaluated, 4 expanded
[t=0.0272051s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0272213s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0272302s, 27060 KB] g=4, 13 evaluated, 12 expanded
[t=0.0273937s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0274051s, 27060 KB] g=6, 18 evaluated, 17 expanded
[t=0.027446s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0274548s, 27060 KB] g=6, 19 evaluated, 18 expanded
[t=0.0277239s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.027735s, 27060 KB] g=8, 28 evaluated, 27 expanded
[t=0.0280401s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0280546s, 27060 KB] g=10, 38 evaluated, 37 expanded
[t=0.0283798s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0283903s, 27060 KB] g=10, 49 evaluated, 48 expanded
[t=0.0287002s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0287116s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0287194s, 27060 KB] g=12, 59 evaluated, 58 expanded
[t=0.02894s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0289505s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0289588s, 27060 KB] g=14, 66 evaluated, 65 expanded
[t=0.0292128s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0292258s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0292347s, 27060 KB] g=16, 73 evaluated, 72 expanded
[t=0.0294684s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0294828s, 27060 KB] g=18, 79 evaluated, 78 expanded
[t=0.0295265s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0295362s, 27060 KB] g=18, 80 evaluated, 79 expanded
[t=0.0297602s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0297706s, 27060 KB] g=19, 87 evaluated, 86 expanded
[t=0.0298761s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0298853s, 27060 KB] g=20, 90 evaluated, 89 expanded
[t=0.0303941s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0304138s, 27060 KB] g=23, 104 evaluated, 103 expanded
[t=0.0304545s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0304635s, 27060 KB] g=24, 105 evaluated, 104 expanded
[t=0.0308582s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0308731s, 27060 KB] g=26, 118 evaluated, 117 expanded
[t=0.0313867s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0313964s, 27060 KB] g=29, 135 evaluated, 134 expanded
[t=0.0314402s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0314487s, 27060 KB] g=30, 136 evaluated, 135 expanded
[t=0.0319987s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0320123s, 27060 KB] g=32, 154 evaluated, 153 expanded
[t=0.0322909s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0323006s, 27060 KB] g=34, 163 evaluated, 162 expanded
[t=0.0326246s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0326338s, 27060 KB] g=34, 174 evaluated, 173 expanded
[t=0.0327382s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0327467s, 27060 KB] g=36, 177 evaluated, 176 expanded
[t=0.0332492s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0332591s, 27060 KB] g=36, 194 evaluated, 193 expanded
[t=0.0334709s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0334793s, 27060 KB] g=40, 201 evaluated, 200 expanded
[t=0.0338556s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0338649s, 27060 KB] g=42, 214 evaluated, 213 expanded
[t=0.0339354s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0339442s, 27060 KB] g=38, 216 evaluated, 215 expanded
[t=0.0343662s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0343822s, 27060 KB] g=40, 230 evaluated, 229 expanded
[t=0.0347947s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0348046s, 27060 KB] g=42, 244 evaluated, 243 expanded
[t=0.0349865s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0349953s, 27060 KB] g=44, 250 evaluated, 249 expanded
[t=0.0393284s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0394714s, 27060 KB] g=62, 357 evaluated, 356 expanded
[t=0.039949s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0399611s, 27060 KB] g=66, 373 evaluated, 372 expanded
[t=0.0400996s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0401219s, 27060 KB] g=64, 377 evaluated, 376 expanded
[t=0.0403056s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0403681s, 27060 KB] g=65, 378 evaluated, 377 expanded
[t=0.0405946s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0406407s, 27060 KB] g=66, 380 evaluated, 379 expanded
[t=0.0415092s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0415436s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0415626s, 27060 KB] g=68, 389 evaluated, 388 expanded
[t=0.0421262s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0421541s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.042179s, 27060 KB] g=70, 398 evaluated, 397 expanded
[t=0.0422659s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0422857s, 27060 KB] g=71, 399 evaluated, 398 expanded
[t=0.042385s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0424148s, 27060 KB] g=72, 400 evaluated, 399 expanded
[t=0.0432486s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0432841s, 27060 KB] g=74, 413 evaluated, 412 expanded
[t=0.0439849s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0440241s, 27060 KB] g=76, 421 evaluated, 420 expanded
[t=0.0447773s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0447999s, 27060 KB] g=79, 432 evaluated, 431 expanded
[t=0.0451486s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.045164s, 27060 KB] g=82, 444 evaluated, 443 expanded
[t=0.0452308s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0452399s, 27060 KB] g=83, 446 evaluated, 445 expanded
[t=0.0452793s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0452881s, 27060 KB] g=84, 447 evaluated, 446 expanded
[t=0.0453854s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0453943s, 27060 KB] g=85, 450 evaluated, 449 expanded
[t=0.0454316s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0454402s, 27060 KB] g=86, 451 evaluated, 450 expanded
[t=0.0455911s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0456001s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0456088s, 27060 KB] g=86, 456 evaluated, 455 expanded
[t=0.0457358s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0457456s, 27060 KB] g=87, 460 evaluated, 459 expanded
[t=0.0457845s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0457975s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0458063s, 27060 KB] g=88, 461 evaluated, 460 expanded
[t=0.0462833s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0462941s, 27060 KB] g=92, 477 evaluated, 476 expanded
[t=0.0464117s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0464203s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.046428s, 27060 KB] g=94, 481 evaluated, 480 expanded
[t=0.0470869s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0470966s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0471048s, 27060 KB] g=102, 507 evaluated, 506 expanded
[t=0.0471642s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0471767s, 27060 KB] g=102, 509 evaluated, 508 expanded
[t=0.0473106s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0473202s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0473284s, 27060 KB] g=104, 512 evaluated, 511 expanded
[t=0.0477279s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0477367s, 27060 KB] g=116, 529 evaluated, 528 expanded
[t=0.0478153s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0478238s, 27060 KB] g=120, 533 evaluated, 532 expanded
[t=0.0478427s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0478511s, 27060 KB] g=121, 534 evaluated, 533 expanded
[t=0.0478671s, 27060 KB] Solution found!
[t=0.047885s, 27060 KB] Actual search time: 0.0212726s
unstack b15 b21 (1)
put-down b15 (1)
unstack b21 b4 (1)
put-down b21 (1)
unstack b4 b7 (1)
put-down b4 (1)
unstack b18 b10 (1)
put-down b18 (1)
unstack b6 b16 (1)
put-down b6 (1)
unstack b16 b1 (1)
stack b16 b4 (1)
unstack b1 b11 (1)
put-down b1 (1)
unstack b7 b8 (1)
stack b7 b11 (1)
pick-up b10 (1)
stack b10 b18 (1)
pick-up b15 (1)
stack b15 b1 (1)
unstack b8 b20 (1)
put-down b8 (1)
unstack b20 b24 (1)
put-down b20 (1)
unstack b10 b18 (1)
put-down b10 (1)
unstack b24 b2 (1)
put-down b24 (1)
unstack b2 b22 (1)
stack b2 b16 (1)
unstack b22 b23 (1)
put-down b22 (1)
unstack b23 b3 (1)
stack b23 b7 (1)
unstack b3 b19 (1)
stack b3 b15 (1)
pick-up b18 (1)
stack b18 b23 (1)
pick-up b10 (1)
stack b10 b18 (1)
pick-up b24 (1)
stack b24 b2 (1)
pick-up b20 (1)
stack b20 b8 (1)
unstack b10 b18 (1)
put-down b10 (1)
unstack b20 b8 (1)
put-down b20 (1)
unstack b18 b23 (1)
put-down b18 (1)
unstack b23 b7 (1)
put-down b23 (1)
pick-up b18 (1)
stack b18 b23 (1)
unstack b7 b11 (1)
put-down b7 (1)
unstack b11 b5 (1)
put-down b11 (1)
unstack b5 b9 (1)
put-down b5 (1)
unstack b9 b25 (1)
stack b9 b10 (1)
unstack b25 b13 (1)
stack b25 b6 (1)
unstack b13 b17 (1)
stack b13 b25 (1)
unstack b17 b14 (1)
stack b17 b21 (1)
unstack b14 b12 (1)
put-down b14 (1)
pick-up b12 (1)
stack b12 b22 (1)
pick-up b20 (1)
stack b20 b8 (1)
pick-up b7 (1)
stack b7 b11 (1)
unstack b12 b22 (1)
put-down b12 (1)
unstack b20 b8 (1)
put-down b20 (1)
pick-up b22 (1)
stack b22 b9 (1)
pick-up b12 (1)
stack b12 b22 (1)
pick-up b8 (1)
stack b8 b17 (1)
pick-up b20 (1)
stack b20 b8 (1)
unstack b18 b23 (1)
put-down b18 (1)
pick-up b23 (1)
stack b23 b7 (1)
pick-up b18 (1)
stack b18 b23 (1)
unstack b13 b25 (1)
put-down b13 (1)
unstack b25 b6 (1)
put-down b25 (1)
pick-up b6 (1)
stack b6 b14 (1)
pick-up b25 (1)
stack b25 b6 (1)
pick-up b13 (1)
stack b13 b25 (1)
unstack b12 b22 (1)
put-down b12 (1)
unstack b22 b9 (1)
put-down b22 (1)
pick-up b12 (1)
stack b12 b22 (1)
unstack b9 b10 (1)
put-down b9 (1)
pick-up b10 (1)
stack b10 b18 (1)
pick-up b9 (1)
stack b9 b10 (1)
unstack b12 b22 (1)
put-down b12 (1)
pick-up b22 (1)
stack b22 b9 (1)
pick-up b12 (1)
stack b12 b22 (1)
[t=0.0478938s, 27060 KB] Plan length: 122 step(s).
[t=0.0478938s, 27060 KB] Plan cost: 122
[t=0.0478938s, 27060 KB] Expanded 534 state(s).
[t=0.0478938s, 27060 KB] Reopened 0 state(s).
[t=0.0478938s, 27060 KB] Evaluated 535 state(s).
[t=0.0478938s, 27060 KB] Evaluations: 1070
[t=0.0478938s, 27060 KB] Generated 5673 state(s).
[t=0.0478938s, 27060 KB] Dead ends: 0 state(s).
[t=0.0478938s, 27060 KB] Number of registered states: 535
[t=0.0478938s, 27060 KB] Int hash set load factor: 535/1024 = 0.522461
[t=0.0478938s, 27060 KB] Int hash set resizes: 10
[t=0.0478938s, 27060 KB] Search time: 0.0213474s
[t=0.0478938s, 27060 KB] Total time: 0.0478938s
Solution found.
Peak memory: 27060 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.20s
