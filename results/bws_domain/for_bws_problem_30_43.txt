INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_30/bws_problem_30_43.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.018s wall-clock]
2912 relevant atoms
1950 auxiliary atoms
4862 final queue length
8526 total queue pushes
Completing instantiation... [0.030s CPU, 0.030s wall-clock]
Instantiating: [0.050s CPU, 0.050s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
31 uncovered facts
Choosing groups: [0.000s CPU, 0.002s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.001s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.002s wall-clock]
Translating task: [0.050s CPU, 0.051s wall-clock]
2670 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
60 propositions removed
Detecting unreachable propositions: [0.030s CPU, 0.026s wall-clock]
Reordering and filtering variables...
61 of 61 variables necessary.
31 of 61 mutex groups necessary.
1800 of 1800 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.016s wall-clock]
Translator variables: 61
Translator derived variables: 0
Translator facts: 992
Translator goal facts: 26
Translator mutex groups: 31
Translator total mutex groups size: 961
Translator operators: 1800
Translator axioms: 0
Translator task size: 15450
Translator peak memory: 41336 KB
Writing output... [0.010s CPU, 0.013s wall-clock]
Done! [0.170s CPU, 0.171s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.1103e-05s, 24488 KB] reading input...
[t=0.00543047s, 26364 KB] done reading input!
[t=0.00627426s, 26760 KB] Initializing landmark count heuristic...
[t=0.00630475s, 26760 KB] Generating landmark graph...
[t=0.00639621s, 26892 KB] Building a landmark graph with reasonable orders.
[t=0.00648505s, 27024 KB] Initializing Exploration...
[t=0.00700061s, 27316 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0343942s, 28240 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0347951s, 28240 KB] Landmarks generation time: 0.0284816s
[t=0.0348985s, 28240 KB] Discovered 136 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0349479s, 28240 KB] 716 edges
[t=0.0349672s, 28240 KB] approx. reasonable orders
[t=0.0401123s, 28240 KB] approx. obedient reasonable orders
[t=0.040207s, 28240 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0402186s, 28240 KB] Landmarks generation time: 0.0339109s
[t=0.0402285s, 28240 KB] Discovered 136 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0402368s, 28240 KB] 757 edges
[t=0.0402449s, 28240 KB] Landmark graph generation time: 0.033947s
[t=0.0402533s, 28240 KB] Landmark graph contains 136 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0402611s, 28240 KB] Landmark graph contains 757 orderings.
[t=0.0409004s, 28268 KB] Simplifying 7140 unary operators... done! [5400 unary operators]
[t=0.0426127s, 28268 KB] time to simplify: 0.00182989s
[t=0.0428273s, 28268 KB] Initializing additive heuristic...
[t=0.0428454s, 28268 KB] Initializing FF heuristic...
[t=0.0429175s, 28268 KB] Building successor generator...done!
[t=0.0432411s, 28420 KB] peak memory difference for successor generator creation: 152 KB
[t=0.0432509s, 28420 KB] time for successor generation creation: 0.000282896s
[t=0.0432636s, 28420 KB] Variables: 61
[t=0.0432715s, 28420 KB] FactPairs: 992
[t=0.0432867s, 28420 KB] Bytes per state: 24
[t=0.04337s, 28420 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0434014s, 28420 KB] 60 initial landmarks, 26 goal landmarks
[t=0.0434694s, 28420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 76
[t=0.0434792s, 28420 KB] New best heuristic value for ff(transform = adapt_costs(one)): 54
[t=0.0434873s, 28420 KB] g=0, 1 evaluated, 0 expanded
[t=0.0434997s, 28420 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 76
[t=0.0435076s, 28420 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 54
[t=0.0437253s, 28420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 75
[t=0.0437353s, 28420 KB] g=2, 6 evaluated, 5 expanded
[t=0.0437929s, 28420 KB] New best heuristic value for ff(transform = adapt_costs(one)): 53
[t=0.0438058s, 28420 KB] g=2, 7 evaluated, 6 expanded
[t=0.044097s, 28420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 74
[t=0.0441071s, 28420 KB] g=4, 14 evaluated, 13 expanded
[t=0.0443928s, 28420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 73
[t=0.0444014s, 28420 KB] New best heuristic value for ff(transform = adapt_costs(one)): 52
[t=0.0444093s, 28420 KB] g=6, 21 evaluated, 20 expanded
[t=0.0446146s, 28420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 72
[t=0.0446239s, 28420 KB] g=8, 26 evaluated, 25 expanded
[t=0.0448747s, 28420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 71
[t=0.0448847s, 28420 KB] g=10, 32 evaluated, 31 expanded
[t=0.0453029s, 28420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 70
[t=0.0453137s, 28420 KB] g=12, 42 evaluated, 41 expanded
[t=0.0454056s, 28420 KB] New best heuristic value for ff(transform = adapt_costs(one)): 51
[t=0.0454144s, 28420 KB] g=10, 44 evaluated, 43 expanded
[t=0.0458272s, 28420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 67
[t=0.0458365s, 28420 KB] g=14, 54 evaluated, 53 expanded
[t=0.0462918s, 28420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 64
[t=0.0463017s, 28420 KB] New best heuristic value for ff(transform = adapt_costs(one)): 50
[t=0.0463157s, 28420 KB] g=16, 65 evaluated, 64 expanded
[t=0.0466064s, 28420 KB] New best heuristic value for ff(transform = adapt_costs(one)): 49
[t=0.0466161s, 28420 KB] g=18, 72 evaluated, 71 expanded
[t=0.0467058s, 28420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 63
[t=0.0467145s, 28420 KB] g=18, 74 evaluated, 73 expanded
[t=0.0468837s, 28420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 62
[t=0.0468925s, 28420 KB] g=19, 78 evaluated, 77 expanded
[t=0.0472681s, 28420 KB] New best heuristic value for ff(transform = adapt_costs(one)): 48
[t=0.047278s, 28420 KB] g=20, 87 evaluated, 86 expanded
[t=0.0474488s, 28420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 61
[t=0.0474619s, 28420 KB] g=21, 91 evaluated, 90 expanded
[t=0.0479969s, 28420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 60
[t=0.0480128s, 28420 KB] g=24, 101 evaluated, 100 expanded
[t=0.0487958s, 28420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.048807s, 28420 KB] g=26, 120 evaluated, 119 expanded
[t=0.0490343s, 28420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 57
[t=0.0490468s, 28420 KB] New best heuristic value for ff(transform = adapt_costs(one)): 46
[t=0.0490554s, 28420 KB] g=26, 125 evaluated, 124 expanded
[t=0.049408s, 28420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0494197s, 28420 KB] g=28, 133 evaluated, 132 expanded
[t=0.0494718s, 28420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0494806s, 28420 KB] New best heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.0494884s, 28420 KB] g=28, 134 evaluated, 133 expanded
[t=0.0498222s, 28420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0498311s, 28420 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0498391s, 28420 KB] g=30, 142 evaluated, 141 expanded
[t=0.0501721s, 28420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0501819s, 28420 KB] g=32, 150 evaluated, 149 expanded
[t=0.0505165s, 28420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.050526s, 28420 KB] g=34, 158 evaluated, 157 expanded
[t=0.0505788s, 28420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0505876s, 28420 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0505956s, 28420 KB] g=34, 159 evaluated, 158 expanded
[t=0.0509242s, 28420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0509339s, 28420 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0509431s, 28420 KB] g=36, 167 evaluated, 166 expanded
[t=0.0513122s, 28420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0513224s, 28420 KB] g=38, 176 evaluated, 175 expanded
[t=0.0514138s, 28420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0514229s, 28420 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0514367s, 28420 KB] g=38, 178 evaluated, 177 expanded
[t=0.0517302s, 28420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0517436s, 28420 KB] g=40, 185 evaluated, 184 expanded
[t=0.0523585s, 28420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0523718s, 28420 KB] g=43, 200 evaluated, 199 expanded
[t=0.0531347s, 28420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0531536s, 28420 KB] g=42, 218 evaluated, 217 expanded
[t=0.0534399s, 28420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0534521s, 28420 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0534598s, 28420 KB] g=44, 225 evaluated, 224 expanded
[t=0.0538311s, 28420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0538437s, 28420 KB] g=47, 234 evaluated, 233 expanded
[t=0.0543376s, 28420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0543503s, 28420 KB] g=50, 246 evaluated, 245 expanded
[t=0.0546724s, 28420 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0546828s, 28420 KB] g=52, 254 evaluated, 253 expanded
[t=0.0547724s, 28420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0547808s, 28420 KB] g=52, 256 evaluated, 255 expanded
[t=0.055314s, 28420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0553233s, 28420 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0553326s, 28420 KB] g=54, 269 evaluated, 268 expanded
[t=0.0556505s, 28420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0556597s, 28420 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0556672s, 28420 KB] g=56, 277 evaluated, 276 expanded
[t=0.055951s, 28420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0559599s, 28420 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0559678s, 28420 KB] g=58, 284 evaluated, 283 expanded
[t=0.0562087s, 28420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0562175s, 28420 KB] g=60, 290 evaluated, 289 expanded
[t=0.0565039s, 28420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0565133s, 28420 KB] g=62, 297 evaluated, 296 expanded
[t=0.0568394s, 28420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0568491s, 28420 KB] g=64, 305 evaluated, 304 expanded
[t=0.0568992s, 28420 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0569078s, 28420 KB] g=64, 306 evaluated, 305 expanded
[t=0.0575178s, 28420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0575292s, 28420 KB] g=64, 321 evaluated, 320 expanded
[t=0.057965s, 28420 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.057982s, 28420 KB] g=66, 329 evaluated, 328 expanded
[t=0.0581171s, 28420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0581306s, 28420 KB] g=66, 332 evaluated, 331 expanded
[t=0.0584964s, 28420 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0585057s, 28420 KB] g=68, 341 evaluated, 340 expanded
[t=0.0586667s, 28420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0586754s, 28420 KB] g=69, 345 evaluated, 344 expanded
[t=0.0591303s, 28420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0591394s, 28420 KB] g=72, 356 evaluated, 355 expanded
[t=0.0594583s, 28420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0594673s, 28420 KB] g=74, 364 evaluated, 363 expanded
[t=0.0600758s, 28420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.060087s, 28420 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0600947s, 28420 KB] g=76, 379 evaluated, 378 expanded
[t=0.0604609s, 28420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0604718s, 28420 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0604822s, 28420 KB] g=78, 388 evaluated, 387 expanded
[t=0.0608108s, 28420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.06082s, 28420 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0608279s, 28420 KB] g=80, 396 evaluated, 395 expanded
[t=0.0610948s, 28420 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0611082s, 28420 KB] g=82, 402 evaluated, 401 expanded
[t=0.0613138s, 28420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0613226s, 28420 KB] g=83, 407 evaluated, 406 expanded
[t=0.0614265s, 28420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0614358s, 28420 KB] g=84, 409 evaluated, 408 expanded
[t=0.0617283s, 28420 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0617377s, 28420 KB] g=86, 416 evaluated, 415 expanded
[t=0.0618256s, 28420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0618341s, 28420 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0618418s, 28420 KB] g=86, 418 evaluated, 417 expanded
[t=0.0620857s, 28420 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0620942s, 28420 KB] g=88, 424 evaluated, 423 expanded
[t=0.0621829s, 28420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0621916s, 28420 KB] g=88, 426 evaluated, 425 expanded
[t=0.0624362s, 28420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0624452s, 28420 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0624532s, 28420 KB] g=90, 432 evaluated, 431 expanded
[t=0.0646651s, 28420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0646771s, 28420 KB] g=102, 487 evaluated, 486 expanded
[t=0.0652866s, 28420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.065302s, 28420 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0653113s, 28420 KB] g=108, 501 evaluated, 500 expanded
[t=0.128414s, 28420 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.128486s, 28420 KB] g=146, 2019 evaluated, 2018 expanded
[t=0.129181s, 28420 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.129197s, 28420 KB] g=150, 2035 evaluated, 2034 expanded
[t=0.129375s, 28420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.129389s, 28420 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.129398s, 28420 KB] g=152, 2039 evaluated, 2038 expanded
[t=0.134811s, 28420 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.134871s, 28420 KB] g=168, 2180 evaluated, 2179 expanded
[t=0.136056s, 28420 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.136092s, 28420 KB] g=176, 2212 evaluated, 2211 expanded
[t=0.136208s, 28420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.136218s, 28420 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.136226s, 28420 KB] g=178, 2215 evaluated, 2214 expanded
[t=0.150113s, 28420 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.150175s, 28420 KB] g=216, 2643 evaluated, 2642 expanded
[t=0.150438s, 28420 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.150448s, 28420 KB] g=220, 2652 evaluated, 2651 expanded
[t=0.15054s, 28420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.150551s, 28420 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.150559s, 28420 KB] g=222, 2655 evaluated, 2654 expanded
[t=0.15146s, 28420 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.151471s, 28420 KB] g=238, 2693 evaluated, 2692 expanded
[t=0.151685s, 28420 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.151697s, 28420 KB] g=246, 2703 evaluated, 2702 expanded
[t=0.151784s, 28420 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.151795s, 28420 KB] g=250, 2707 evaluated, 2706 expanded
[t=0.151816s, 28420 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.151826s, 28420 KB] g=251, 2708 evaluated, 2707 expanded
[t=0.151863s, 28420 KB] Solution found!
[t=0.151887s, 28420 KB] Actual search time: 0.108493s
pick-up b25 (1)
stack b25 b22 (1)
unstack b29 b14 (1)
put-down b29 (1)
unstack b14 b7 (1)
put-down b14 (1)
unstack b7 b10 (1)
put-down b7 (1)
unstack b10 b26 (1)
put-down b10 (1)
unstack b26 b30 (1)
put-down b26 (1)
unstack b30 b6 (1)
stack b30 b26 (1)
unstack b6 b12 (1)
stack b6 b30 (1)
unstack b12 b18 (1)
stack b12 b7 (1)
pick-up b29 (1)
stack b29 b10 (1)
unstack b18 b4 (1)
put-down b18 (1)
unstack b8 b19 (1)
put-down b8 (1)
unstack b19 b20 (1)
stack b19 b4 (1)
unstack b20 b16 (1)
stack b20 b19 (1)
unstack b16 b3 (1)
put-down b16 (1)
unstack b3 b15 (1)
put-down b3 (1)
unstack b15 b21 (1)
stack b15 b6 (1)
unstack b21 b9 (1)
put-down b21 (1)
pick-up b9 (1)
stack b9 b3 (1)
unstack b12 b7 (1)
put-down b12 (1)
pick-up b7 (1)
stack b7 b15 (1)
pick-up b12 (1)
stack b12 b7 (1)
unstack b25 b22 (1)
put-down b25 (1)
unstack b22 b23 (1)
put-down b22 (1)
unstack b23 b2 (1)
stack b23 b12 (1)
unstack b2 b17 (1)
stack b2 b8 (1)
unstack b17 b28 (1)
stack b17 b23 (1)
pick-up b22 (1)
stack b22 b17 (1)
pick-up b25 (1)
stack b25 b22 (1)
unstack b28 b13 (1)
put-down b28 (1)
unstack b13 b5 (1)
put-down b13 (1)
unstack b5 b27 (1)
stack b5 b9 (1)
pick-up b18 (1)
stack b18 b27 (1)
pick-up b28 (1)
stack b28 b5 (1)
unstack b18 b27 (1)
put-down b18 (1)
unstack b2 b8 (1)
put-down b2 (1)
unstack b27 b1 (1)
stack b27 b29 (1)
unstack b1 b24 (1)
stack b1 b21 (1)
pick-up b13 (1)
stack b13 b1 (1)
pick-up b18 (1)
stack b18 b27 (1)
unstack b24 b11 (1)
put-down b24 (1)
pick-up b11 (1)
stack b11 b14 (1)
pick-up b24 (1)
stack b24 b11 (1)
pick-up b8 (1)
stack b8 b28 (1)
pick-up b2 (1)
stack b2 b8 (1)
unstack b18 b27 (1)
put-down b18 (1)
unstack b27 b29 (1)
put-down b27 (1)
pick-up b18 (1)
stack b18 b27 (1)
unstack b29 b10 (1)
put-down b29 (1)
pick-up b10 (1)
stack b10 b2 (1)
pick-up b29 (1)
stack b29 b10 (1)
unstack b18 b27 (1)
put-down b18 (1)
pick-up b27 (1)
stack b27 b29 (1)
pick-up b18 (1)
stack b18 b27 (1)
unstack b25 b22 (1)
put-down b25 (1)
unstack b22 b17 (1)
put-down b22 (1)
pick-up b25 (1)
stack b25 b22 (1)
unstack b17 b23 (1)
put-down b17 (1)
unstack b23 b12 (1)
put-down b23 (1)
unstack b12 b7 (1)
put-down b12 (1)
pick-up b23 (1)
stack b23 b12 (1)
pick-up b17 (1)
stack b17 b23 (1)
unstack b25 b22 (1)
put-down b25 (1)
pick-up b22 (1)
stack b22 b17 (1)
pick-up b25 (1)
stack b25 b22 (1)
unstack b7 b15 (1)
put-down b7 (1)
unstack b15 b6 (1)
put-down b15 (1)
pick-up b7 (1)
stack b7 b15 (1)
unstack b6 b30 (1)
put-down b6 (1)
unstack b30 b26 (1)
put-down b30 (1)
pick-up b26 (1)
stack b26 b20 (1)
pick-up b30 (1)
stack b30 b26 (1)
pick-up b6 (1)
stack b6 b30 (1)
unstack b7 b15 (1)
put-down b7 (1)
pick-up b15 (1)
stack b15 b6 (1)
pick-up b7 (1)
stack b7 b15 (1)
unstack b25 b22 (1)
put-down b25 (1)
unstack b22 b17 (1)
put-down b22 (1)
unstack b17 b23 (1)
put-down b17 (1)
pick-up b22 (1)
stack b22 b17 (1)
pick-up b25 (1)
stack b25 b22 (1)
unstack b23 b12 (1)
put-down b23 (1)
pick-up b12 (1)
stack b12 b7 (1)
pick-up b23 (1)
stack b23 b12 (1)
unstack b25 b22 (1)
put-down b25 (1)
unstack b22 b17 (1)
put-down b22 (1)
pick-up b17 (1)
stack b17 b23 (1)
pick-up b22 (1)
stack b22 b17 (1)
pick-up b25 (1)
stack b25 b22 (1)
unstack b18 b27 (1)
put-down b18 (1)
unstack b27 b29 (1)
put-down b27 (1)
pick-up b18 (1)
stack b18 b27 (1)
unstack b29 b10 (1)
put-down b29 (1)
unstack b10 b2 (1)
put-down b10 (1)
unstack b2 b8 (1)
put-down b2 (1)
pick-up b10 (1)
stack b10 b2 (1)
pick-up b29 (1)
stack b29 b10 (1)
unstack b18 b27 (1)
put-down b18 (1)
pick-up b27 (1)
stack b27 b29 (1)
pick-up b18 (1)
stack b18 b27 (1)
unstack b8 b28 (1)
put-down b8 (1)
unstack b28 b5 (1)
put-down b28 (1)
pick-up b8 (1)
stack b8 b28 (1)
unstack b5 b9 (1)
put-down b5 (1)
unstack b9 b3 (1)
put-down b9 (1)
pick-up b3 (1)
stack b3 b13 (1)
pick-up b9 (1)
stack b9 b3 (1)
pick-up b5 (1)
stack b5 b9 (1)
unstack b8 b28 (1)
put-down b8 (1)
pick-up b28 (1)
stack b28 b5 (1)
pick-up b8 (1)
stack b8 b28 (1)
unstack b18 b27 (1)
put-down b18 (1)
unstack b27 b29 (1)
put-down b27 (1)
unstack b29 b10 (1)
put-down b29 (1)
pick-up b27 (1)
stack b27 b29 (1)
pick-up b18 (1)
stack b18 b27 (1)
unstack b10 b2 (1)
put-down b10 (1)
pick-up b2 (1)
stack b2 b8 (1)
pick-up b10 (1)
stack b10 b2 (1)
unstack b18 b27 (1)
put-down b18 (1)
unstack b27 b29 (1)
put-down b27 (1)
pick-up b18 (1)
stack b18 b27 (1)
pick-up b29 (1)
stack b29 b10 (1)
unstack b18 b27 (1)
put-down b18 (1)
pick-up b27 (1)
stack b27 b29 (1)
pick-up b18 (1)
stack b18 b27 (1)
[t=0.151907s, 28420 KB] Plan length: 252 step(s).
[t=0.151907s, 28420 KB] Plan cost: 252
[t=0.151907s, 28420 KB] Expanded 2708 state(s).
[t=0.151907s, 28420 KB] Reopened 0 state(s).
[t=0.151907s, 28420 KB] Evaluated 2709 state(s).
[t=0.151907s, 28420 KB] Evaluations: 5418
[t=0.151907s, 28420 KB] Generated 26207 state(s).
[t=0.151907s, 28420 KB] Dead ends: 0 state(s).
[t=0.151907s, 28420 KB] Number of registered states: 2709
[t=0.151907s, 28420 KB] Int hash set load factor: 2709/4096 = 0.661377
[t=0.151907s, 28420 KB] Int hash set resizes: 12
[t=0.151907s, 28420 KB] Search time: 0.108537s
[t=0.151907s, 28420 KB] Total time: 0.151907s
Solution found.
Peak memory: 28420 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.37s
