INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_23/bws_problem_23_95.pddl --sas-file output.sas
Parsing...
Parsing: [0.010s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.011s wall-clock]
1750 relevant atoms
1173 auxiliary atoms
2923 final queue length
5088 total queue pushes
Completing instantiation... [0.010s CPU, 0.019s wall-clock]
Instantiating: [0.020s CPU, 0.031s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.010s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
24 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.007s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.027s wall-clock]
1564 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
46 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
47 of 47 variables necessary.
24 of 47 mutex groups necessary.
1058 of 1058 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.007s wall-clock]
Translator variables: 47
Translator derived variables: 0
Translator facts: 600
Translator goal facts: 18
Translator mutex groups: 24
Translator total mutex groups size: 576
Translator operators: 1058
Translator axioms: 0
Translator task size: 9107
Translator peak memory: 37488 KB
Writing output... [0.000s CPU, 0.006s wall-clock]
Done! [0.090s CPU, 0.096s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.0774e-05s, 24488 KB] reading input...
[t=0.00336313s, 25428 KB] done reading input!
[t=0.00488863s, 25824 KB] Initializing landmark count heuristic...
[t=0.0049354s, 25824 KB] Generating landmark graph...
[t=0.00503276s, 25824 KB] Building a landmark graph with reasonable orders.
[t=0.0051259s, 25956 KB] Initializing Exploration...
[t=0.00546825s, 26256 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0169585s, 26652 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0170028s, 26652 KB] Landmarks generation time: 0.0119682s
[t=0.0170167s, 26652 KB] Discovered 100 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0170315s, 26652 KB] 495 edges
[t=0.0170415s, 26652 KB] approx. reasonable orders
[t=0.0178924s, 26652 KB] approx. obedient reasonable orders
[t=0.017919s, 26652 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0179284s, 26652 KB] Landmarks generation time: 0.0129896s
[t=0.0179376s, 26652 KB] Discovered 100 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0179453s, 26652 KB] 511 edges
[t=0.0179532s, 26652 KB] Landmark graph generation time: 0.0130248s
[t=0.0179616s, 26652 KB] Landmark graph contains 100 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0179698s, 26652 KB] Landmark graph contains 511 orderings.
[t=0.0182851s, 26652 KB] Simplifying 4186 unary operators... done! [3174 unary operators]
[t=0.0192472s, 26652 KB] time to simplify: 0.00102479s
[t=0.0193738s, 26652 KB] Initializing additive heuristic...
[t=0.0193883s, 26652 KB] Initializing FF heuristic...
[t=0.0194335s, 26652 KB] Building successor generator...done!
[t=0.0196973s, 26808 KB] peak memory difference for successor generator creation: 156 KB
[t=0.0197072s, 26808 KB] time for successor generation creation: 0.000223838s
[t=0.019721s, 26808 KB] Variables: 47
[t=0.0197391s, 26808 KB] FactPairs: 600
[t=0.0197476s, 26808 KB] Bytes per state: 20
[t=0.0198234s, 26808 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0198695s, 26808 KB] 46 initial landmarks, 18 goal landmarks
[t=0.0199451s, 26808 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0199588s, 26808 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0199715s, 26808 KB] g=0, 1 evaluated, 0 expanded
[t=0.0199908s, 26808 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0200038s, 26808 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0201841s, 26808 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0201953s, 26808 KB] g=2, 6 evaluated, 5 expanded
[t=0.0204756s, 26808 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0204856s, 26808 KB] g=4, 16 evaluated, 15 expanded
[t=0.02064s, 26808 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0206516s, 26808 KB] g=6, 21 evaluated, 20 expanded
[t=0.0207704s, 26808 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0207793s, 26808 KB] g=7, 25 evaluated, 24 expanded
[t=0.0210622s, 26808 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.021073s, 26808 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0210832s, 26808 KB] g=10, 35 evaluated, 34 expanded
[t=0.0212741s, 26808 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.021284s, 26808 KB] g=12, 42 evaluated, 41 expanded
[t=0.0213464s, 26808 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0213558s, 26808 KB] g=12, 44 evaluated, 43 expanded
[t=0.0216689s, 26808 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0216791s, 26808 KB] g=14, 56 evaluated, 55 expanded
[t=0.0219214s, 26808 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0219331s, 26808 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0219427s, 26808 KB] g=16, 65 evaluated, 64 expanded
[t=0.0221861s, 26808 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0222034s, 26808 KB] g=18, 74 evaluated, 73 expanded
[t=0.0222692s, 26808 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0222789s, 26808 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0222873s, 26808 KB] g=18, 76 evaluated, 75 expanded
[t=0.0224777s, 26808 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0224881s, 26808 KB] g=20, 83 evaluated, 82 expanded
[t=0.0225555s, 26808 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0225652s, 26808 KB] g=20, 85 evaluated, 84 expanded
[t=0.0228858s, 26808 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.022897s, 26808 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0229047s, 26808 KB] g=22, 97 evaluated, 96 expanded
[t=0.0230959s, 26808 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0231078s, 26808 KB] g=25, 104 evaluated, 103 expanded
[t=0.0235052s, 26808 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0235305s, 26808 KB] g=28, 119 evaluated, 118 expanded
[t=0.0236945s, 26808 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0237122s, 26808 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0237208s, 26808 KB] g=30, 125 evaluated, 124 expanded
[t=0.0241123s, 26808 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0241275s, 26808 KB] g=33, 139 evaluated, 138 expanded
[t=0.0244581s, 26808 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0245048s, 26808 KB] g=36, 151 evaluated, 150 expanded
[t=0.0247066s, 26808 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0247208s, 26808 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0247294s, 26808 KB] g=38, 157 evaluated, 156 expanded
[t=0.0250593s, 26808 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0250775s, 26808 KB] g=42, 169 evaluated, 168 expanded
[t=0.0252474s, 26808 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0252641s, 26808 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0252728s, 26808 KB] g=44, 175 evaluated, 174 expanded
[t=0.0259655s, 26808 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0259947s, 26808 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0260054s, 26808 KB] g=48, 200 evaluated, 199 expanded
[t=0.0261455s, 26808 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.026155s, 26808 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0261637s, 26808 KB] g=50, 205 evaluated, 204 expanded
[t=0.0269628s, 26808 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0269806s, 26808 KB] g=58, 233 evaluated, 232 expanded
[t=0.02727s, 26808 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0272945s, 26808 KB] g=60, 243 evaluated, 242 expanded
[t=0.0274127s, 26808 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0274224s, 26808 KB] g=62, 247 evaluated, 246 expanded
[t=0.0275692s, 26808 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0275794s, 26808 KB] g=63, 252 evaluated, 251 expanded
[t=0.0276223s, 26808 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0276318s, 26808 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0276401s, 26808 KB] g=64, 253 evaluated, 252 expanded
[t=0.0278485s, 26808 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0278589s, 26808 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0278681s, 26808 KB] g=66, 259 evaluated, 258 expanded
[t=0.0280805s, 26808 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0280908s, 26808 KB] g=68, 266 evaluated, 265 expanded
[t=0.0281354s, 26808 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0281457s, 26808 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.028154s, 26808 KB] g=68, 267 evaluated, 266 expanded
[t=0.0283181s, 26808 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0283279s, 26808 KB] g=70, 273 evaluated, 272 expanded
[t=0.0285101s, 26808 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0285356s, 26808 KB] g=72, 279 evaluated, 278 expanded
[t=0.028601s, 26808 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0286263s, 26808 KB] g=72, 281 evaluated, 280 expanded
[t=0.0288523s, 26808 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.028861s, 26808 KB] g=74, 290 evaluated, 289 expanded
[t=0.0289752s, 26808 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0289843s, 26808 KB] g=74, 294 evaluated, 293 expanded
[t=0.0291677s, 26808 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0291773s, 26808 KB] g=76, 301 evaluated, 300 expanded
[t=0.0292673s, 26808 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0292819s, 26808 KB] g=75, 304 evaluated, 303 expanded
[t=0.0293419s, 26808 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0293507s, 26808 KB] g=76, 306 evaluated, 305 expanded
[t=0.0295787s, 26808 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0295919s, 26808 KB] g=78, 315 evaluated, 314 expanded
[t=0.0297994s, 26808 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.029814s, 26808 KB] g=78, 320 evaluated, 319 expanded
[t=0.0300702s, 26808 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.03008s, 26808 KB] g=80, 330 evaluated, 329 expanded
[t=0.0301584s, 26808 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0301676s, 26808 KB] g=80, 332 evaluated, 331 expanded
[t=0.0303067s, 26808 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0303154s, 26808 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0303268s, 26808 KB] g=82, 337 evaluated, 336 expanded
[t=0.0305201s, 26808 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.030529s, 26808 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0305371s, 26808 KB] g=86, 344 evaluated, 343 expanded
[t=0.0306466s, 26808 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0306554s, 26808 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0306634s, 26808 KB] g=88, 348 evaluated, 347 expanded
[t=0.0313177s, 26808 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0313306s, 26808 KB] g=96, 374 evaluated, 373 expanded
[t=0.0313917s, 26808 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0314008s, 26808 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0314089s, 26808 KB] g=98, 376 evaluated, 375 expanded
[t=0.0350166s, 26808 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0350357s, 26808 KB] g=124, 526 evaluated, 525 expanded
[t=0.0352514s, 26808 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0352607s, 26808 KB] g=128, 535 evaluated, 534 expanded
[t=0.0353381s, 26808 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0353469s, 26808 KB] g=130, 538 evaluated, 537 expanded
[t=0.0360953s, 26808 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0361054s, 26808 KB] g=146, 575 evaluated, 574 expanded
[t=0.0362826s, 26808 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0362919s, 26808 KB] g=154, 586 evaluated, 585 expanded
[t=0.0363585s, 26808 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0363698s, 26808 KB] g=155, 587 evaluated, 586 expanded
[t=0.0363853s, 26808 KB] Solution found!
[t=0.0364131s, 26808 KB] Actual search time: 0.0165364s
unstack b17 b8 (1)
put-down b17 (1)
unstack b20 b9 (1)
put-down b20 (1)
unstack b8 b16 (1)
put-down b8 (1)
unstack b16 b4 (1)
put-down b16 (1)
unstack b9 b1 (1)
stack b9 b4 (1)
unstack b1 b18 (1)
put-down b1 (1)
unstack b18 b3 (1)
put-down b18 (1)
unstack b3 b19 (1)
put-down b3 (1)
pick-up b17 (1)
stack b17 b1 (1)
pick-up b20 (1)
stack b20 b19 (1)
pick-up b8 (1)
stack b8 b18 (1)
unstack b15 b13 (1)
put-down b15 (1)
unstack b13 b2 (1)
put-down b13 (1)
pick-up b15 (1)
stack b15 b13 (1)
pick-up b2 (1)
stack b2 b9 (1)
unstack b20 b19 (1)
put-down b20 (1)
unstack b19 b5 (1)
put-down b19 (1)
pick-up b16 (1)
stack b16 b5 (1)
pick-up b20 (1)
stack b20 b19 (1)
unstack b16 b5 (1)
put-down b16 (1)
unstack b5 b12 (1)
put-down b5 (1)
pick-up b16 (1)
stack b16 b5 (1)
unstack b17 b1 (1)
put-down b17 (1)
pick-up b1 (1)
stack b1 b12 (1)
pick-up b17 (1)
stack b17 b1 (1)
unstack b2 b9 (1)
put-down b2 (1)
unstack b9 b4 (1)
put-down b9 (1)
unstack b4 b10 (1)
put-down b4 (1)
pick-up b2 (1)
stack b2 b9 (1)
unstack b10 b11 (1)
put-down b10 (1)
unstack b11 b6 (1)
put-down b11 (1)
unstack b6 b23 (1)
stack b6 b20 (1)
unstack b23 b21 (1)
stack b23 b8 (1)
pick-up b11 (1)
stack b11 b23 (1)
unstack b21 b14 (1)
put-down b21 (1)
unstack b14 b7 (1)
put-down b14 (1)
unstack b7 b22 (1)
stack b7 b2 (1)
pick-up b22 (1)
stack b22 b17 (1)
pick-up b21 (1)
stack b21 b7 (1)
pick-up b14 (1)
stack b14 b21 (1)
pick-up b10 (1)
stack b10 b14 (1)
unstack b15 b13 (1)
put-down b15 (1)
pick-up b13 (1)
stack b13 b11 (1)
pick-up b15 (1)
stack b15 b13 (1)
unstack b6 b20 (1)
put-down b6 (1)
unstack b20 b19 (1)
put-down b20 (1)
pick-up b19 (1)
stack b19 b10 (1)
pick-up b6 (1)
stack b6 b20 (1)
unstack b19 b10 (1)
put-down b19 (1)
unstack b10 b14 (1)
put-down b10 (1)
unstack b14 b21 (1)
put-down b14 (1)
pick-up b10 (1)
stack b10 b14 (1)
pick-up b19 (1)
stack b19 b10 (1)
unstack b6 b20 (1)
put-down b6 (1)
pick-up b20 (1)
stack b20 b19 (1)
pick-up b6 (1)
stack b6 b20 (1)
unstack b21 b7 (1)
put-down b21 (1)
unstack b7 b2 (1)
put-down b7 (1)
pick-up b21 (1)
stack b21 b7 (1)
unstack b2 b9 (1)
put-down b2 (1)
pick-up b9 (1)
stack b9 b4 (1)
pick-up b2 (1)
stack b2 b9 (1)
unstack b21 b7 (1)
put-down b21 (1)
pick-up b7 (1)
stack b7 b2 (1)
pick-up b21 (1)
stack b21 b7 (1)
unstack b6 b20 (1)
put-down b6 (1)
unstack b20 b19 (1)
put-down b20 (1)
unstack b19 b10 (1)
put-down b19 (1)
pick-up b20 (1)
stack b20 b19 (1)
pick-up b6 (1)
stack b6 b20 (1)
unstack b10 b14 (1)
put-down b10 (1)
pick-up b14 (1)
stack b14 b21 (1)
pick-up b10 (1)
stack b10 b14 (1)
unstack b6 b20 (1)
put-down b6 (1)
unstack b20 b19 (1)
put-down b20 (1)
pick-up b19 (1)
stack b19 b10 (1)
pick-up b20 (1)
stack b20 b19 (1)
pick-up b6 (1)
stack b6 b20 (1)
[t=0.0364229s, 26808 KB] Plan length: 156 step(s).
[t=0.0364229s, 26808 KB] Plan cost: 156
[t=0.0364229s, 26808 KB] Expanded 587 state(s).
[t=0.0364229s, 26808 KB] Reopened 0 state(s).
[t=0.0364229s, 26808 KB] Evaluated 588 state(s).
[t=0.0364229s, 26808 KB] Evaluations: 1176
[t=0.0364229s, 26808 KB] Generated 5373 state(s).
[t=0.0364229s, 26808 KB] Dead ends: 0 state(s).
[t=0.0364229s, 26808 KB] Number of registered states: 588
[t=0.0364229s, 26808 KB] Int hash set load factor: 588/1024 = 0.574219
[t=0.0364229s, 26808 KB] Int hash set resizes: 10
[t=0.0364229s, 26808 KB] Search time: 0.0165999s
[t=0.0364229s, 26808 KB] Total time: 0.0364229s
Solution found.
Peak memory: 26808 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.18s
