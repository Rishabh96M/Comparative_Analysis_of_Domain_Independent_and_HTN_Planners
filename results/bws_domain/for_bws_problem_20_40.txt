INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_20/bws_problem_20_40.pddl --sas-file output.sas
Parsing...
Parsing: [0.010s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.000s CPU, 0.008s wall-clock]
1342 relevant atoms
900 auxiliary atoms
2242 final queue length
3889 total queue pushes
Completing instantiation... [0.020s CPU, 0.013s wall-clock]
Instantiating: [0.020s CPU, 0.023s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
21 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.007s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.020s wall-clock]
1180 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
40 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.009s wall-clock]
Reordering and filtering variables...
41 of 41 variables necessary.
21 of 41 mutex groups necessary.
800 of 800 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.005s wall-clock]
Translator variables: 41
Translator derived variables: 0
Translator facts: 462
Translator goal facts: 16
Translator mutex groups: 21
Translator total mutex groups size: 441
Translator operators: 800
Translator axioms: 0
Translator task size: 6900
Translator peak memory: 35944 KB
Writing output... [0.010s CPU, 0.004s wall-clock]
Done! [0.080s CPU, 0.073s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.1594e-05s, 24488 KB] reading input...
[t=0.00230912s, 25180 KB] done reading input!
[t=0.003266s, 25444 KB] Initializing landmark count heuristic...
[t=0.00331289s, 25444 KB] Generating landmark graph...
[t=0.00337101s, 25576 KB] Building a landmark graph with reasonable orders.
[t=0.00342486s, 25576 KB] Initializing Exploration...
[t=0.00367248s, 25744 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0105406s, 26140 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0106s, 26140 KB] Landmarks generation time: 0.00722978s
[t=0.0106145s, 26140 KB] Discovered 81 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0106313s, 26140 KB] 228 edges
[t=0.0106412s, 26140 KB] approx. reasonable orders
[t=0.0117246s, 26140 KB] approx. obedient reasonable orders
[t=0.0117624s, 26140 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0117722s, 26140 KB] Landmarks generation time: 0.00845689s
[t=0.011782s, 26140 KB] Discovered 81 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0117902s, 26140 KB] 254 edges
[t=0.0117995s, 26140 KB] Landmark graph generation time: 0.00849369s
[t=0.0118082s, 26140 KB] Landmark graph contains 81 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0118162s, 26140 KB] Landmark graph contains 254 orderings.
[t=0.0121183s, 26140 KB] Simplifying 3160 unary operators... done! [2400 unary operators]
[t=0.0128891s, 26140 KB] time to simplify: 0.000822153s
[t=0.0129897s, 26140 KB] Initializing additive heuristic...
[t=0.0130027s, 26140 KB] Initializing FF heuristic...
[t=0.0130527s, 26140 KB] Building successor generator...done!
[t=0.0132152s, 26140 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0132234s, 26140 KB] time for successor generation creation: 0.000132349s
[t=0.0132345s, 26140 KB] Variables: 41
[t=0.0132424s, 26140 KB] FactPairs: 462
[t=0.0132502s, 26140 KB] Bytes per state: 16
[t=0.0133385s, 26140 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0133698s, 26140 KB] 39 initial landmarks, 16 goal landmarks
[t=0.0134138s, 26140 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0134232s, 26140 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0134315s, 26140 KB] g=0, 1 evaluated, 0 expanded
[t=0.0134452s, 26140 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0134536s, 26140 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0136405s, 26140 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0136499s, 26140 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0136579s, 26140 KB] g=2, 9 evaluated, 8 expanded
[t=0.0138372s, 26140 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0138464s, 26140 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0138543s, 26140 KB] g=4, 17 evaluated, 16 expanded
[t=0.0139059s, 26140 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0139145s, 26140 KB] g=5, 19 evaluated, 18 expanded
[t=0.0142363s, 26140 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0142471s, 26140 KB] g=8, 34 evaluated, 33 expanded
[t=0.0143413s, 26140 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0143501s, 26140 KB] g=9, 38 evaluated, 37 expanded
[t=0.0144652s, 26140 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0144743s, 26140 KB] g=6, 43 evaluated, 42 expanded
[t=0.0148389s, 26140 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0148489s, 26140 KB] g=12, 60 evaluated, 59 expanded
[t=0.0148823s, 26140 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0148913s, 26140 KB] g=8, 61 evaluated, 60 expanded
[t=0.0153779s, 26140 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0153875s, 26140 KB] g=14, 84 evaluated, 83 expanded
[t=0.0156701s, 26140 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0156927s, 26140 KB] g=12, 97 evaluated, 96 expanded
[t=0.0159605s, 26140 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0159738s, 26140 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0159824s, 26140 KB] g=14, 108 evaluated, 107 expanded
[t=0.0161197s, 26140 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0161294s, 26140 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0161375s, 26140 KB] g=16, 114 evaluated, 113 expanded
[t=0.0162538s, 26140 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0162645s, 26140 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0162731s, 26140 KB] g=18, 119 evaluated, 118 expanded
[t=0.0163667s, 26140 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0163762s, 26140 KB] g=20, 123 evaluated, 122 expanded
[t=0.0165264s, 26140 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0165377s, 26140 KB] g=22, 129 evaluated, 128 expanded
[t=0.0167357s, 26140 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.016745s, 26140 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0167529s, 26140 KB] g=24, 138 evaluated, 137 expanded
[t=0.016905s, 26140 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0169144s, 26140 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0169224s, 26140 KB] g=26, 145 evaluated, 144 expanded
[t=0.017071s, 26140 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.01708s, 26140 KB] g=28, 152 evaluated, 151 expanded
[t=0.0172062s, 26140 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0172159s, 26140 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0172263s, 26140 KB] g=28, 158 evaluated, 157 expanded
[t=0.0173537s, 26140 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0173629s, 26140 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0173712s, 26140 KB] g=30, 164 evaluated, 163 expanded
[t=0.0174779s, 26140 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0174877s, 26140 KB] g=32, 169 evaluated, 168 expanded
[t=0.0182235s, 26140 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.018241s, 26140 KB] g=37, 205 evaluated, 204 expanded
[t=0.0182713s, 26140 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0182802s, 26140 KB] g=38, 206 evaluated, 205 expanded
[t=0.018488s, 26140 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0185004s, 26140 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0185091s, 26140 KB] g=40, 216 evaluated, 215 expanded
[t=0.0186753s, 26140 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0186856s, 26140 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0186939s, 26140 KB] g=42, 224 evaluated, 223 expanded
[t=0.0188569s, 26140 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0188734s, 26140 KB] g=44, 231 evaluated, 230 expanded
[t=0.0189832s, 26140 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0189929s, 26140 KB] g=44, 236 evaluated, 235 expanded
[t=0.0190576s, 26140 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0190663s, 26140 KB] g=46, 239 evaluated, 238 expanded
[t=0.0192031s, 26140 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.019213s, 26140 KB] g=46, 246 evaluated, 245 expanded
[t=0.0192424s, 26140 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0192514s, 26140 KB] g=48, 247 evaluated, 246 expanded
[t=0.0193715s, 26140 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0193805s, 26140 KB] g=48, 253 evaluated, 252 expanded
[t=0.0194455s, 26140 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0194545s, 26140 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0194625s, 26140 KB] g=50, 256 evaluated, 255 expanded
[t=0.0198811s, 26140 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0198911s, 26140 KB] g=58, 277 evaluated, 276 expanded
[t=0.0200141s, 26140 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0200235s, 26140 KB] g=60, 283 evaluated, 282 expanded
[t=0.0200912s, 26140 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0201002s, 26140 KB] g=62, 286 evaluated, 285 expanded
[t=0.0203073s, 26140 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0203183s, 26140 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0203266s, 26140 KB] g=64, 296 evaluated, 295 expanded
[t=0.0218628s, 26140 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0218825s, 26140 KB] g=86, 379 evaluated, 378 expanded
[t=0.0220396s, 26140 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0220504s, 26140 KB] g=90, 388 evaluated, 387 expanded
[t=0.0221062s, 26140 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0221154s, 26140 KB] g=92, 391 evaluated, 390 expanded
[t=0.0223681s, 26140 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0223782s, 26140 KB] g=104, 409 evaluated, 408 expanded
[t=0.02243s, 26140 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0224391s, 26140 KB] g=108, 413 evaluated, 412 expanded
[t=0.0224548s, 26140 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0224632s, 26140 KB] g=109, 414 evaluated, 413 expanded
[t=0.0224772s, 26140 KB] Solution found!
[t=0.0224884s, 26140 KB] Actual search time: 0.00911623s
unstack b17 b20 (1)
put-down b17 (1)
unstack b20 b13 (1)
put-down b20 (1)
pick-up b5 (1)
stack b5 b20 (1)
pick-up b6 (1)
stack b6 b12 (1)
unstack b13 b18 (1)
put-down b13 (1)
unstack b18 b10 (1)
stack b18 b16 (1)
unstack b10 b4 (1)
stack b10 b2 (1)
pick-up b4 (1)
stack b4 b6 (1)
pick-up b9 (1)
stack b9 b10 (1)
unstack b18 b16 (1)
put-down b18 (1)
unstack b16 b8 (1)
put-down b16 (1)
unstack b8 b1 (1)
stack b8 b17 (1)
unstack b1 b7 (1)
put-down b1 (1)
pick-up b7 (1)
stack b7 b5 (1)
pick-up b13 (1)
stack b13 b7 (1)
unstack b4 b6 (1)
put-down b4 (1)
unstack b6 b12 (1)
put-down b6 (1)
unstack b12 b19 (1)
put-down b12 (1)
unstack b19 b14 (1)
stack b19 b1 (1)
unstack b14 b3 (1)
stack b14 b8 (1)
pick-up b12 (1)
stack b12 b14 (1)
pick-up b3 (1)
stack b3 b4 (1)
pick-up b16 (1)
stack b16 b3 (1)
pick-up b18 (1)
stack b18 b16 (1)
pick-up b6 (1)
stack b6 b12 (1)
unstack b9 b10 (1)
put-down b9 (1)
unstack b10 b2 (1)
put-down b10 (1)
unstack b2 b11 (1)
put-down b2 (1)
unstack b11 b15 (1)
stack b11 b18 (1)
pick-up b2 (1)
stack b2 b11 (1)
pick-up b9 (1)
stack b9 b10 (1)
unstack b2 b11 (1)
put-down b2 (1)
unstack b11 b18 (1)
put-down b11 (1)
pick-up b2 (1)
stack b2 b11 (1)
unstack b9 b10 (1)
put-down b9 (1)
pick-up b10 (1)
stack b10 b2 (1)
pick-up b9 (1)
stack b9 b10 (1)
unstack b18 b16 (1)
put-down b18 (1)
unstack b16 b3 (1)
put-down b16 (1)
pick-up b18 (1)
stack b18 b16 (1)
unstack b3 b4 (1)
put-down b3 (1)
pick-up b4 (1)
stack b4 b6 (1)
pick-up b3 (1)
stack b3 b4 (1)
unstack b18 b16 (1)
put-down b18 (1)
pick-up b16 (1)
stack b16 b3 (1)
pick-up b18 (1)
stack b18 b16 (1)
unstack b9 b10 (1)
put-down b9 (1)
unstack b10 b2 (1)
put-down b10 (1)
pick-up b9 (1)
stack b9 b10 (1)
unstack b2 b11 (1)
put-down b2 (1)
pick-up b11 (1)
stack b11 b18 (1)
pick-up b2 (1)
stack b2 b11 (1)
unstack b9 b10 (1)
put-down b9 (1)
pick-up b10 (1)
stack b10 b2 (1)
pick-up b9 (1)
stack b9 b10 (1)
[t=0.0224983s, 26140 KB] Plan length: 110 step(s).
[t=0.0224983s, 26140 KB] Plan cost: 110
[t=0.0224983s, 26140 KB] Expanded 414 state(s).
[t=0.0224983s, 26140 KB] Reopened 0 state(s).
[t=0.0224983s, 26140 KB] Evaluated 415 state(s).
[t=0.0224983s, 26140 KB] Evaluations: 830
[t=0.0224983s, 26140 KB] Generated 3537 state(s).
[t=0.0224983s, 26140 KB] Dead ends: 0 state(s).
[t=0.0224983s, 26140 KB] Number of registered states: 415
[t=0.0224983s, 26140 KB] Int hash set load factor: 415/512 = 0.810547
[t=0.0224983s, 26140 KB] Int hash set resizes: 9
[t=0.0224983s, 26140 KB] Search time: 0.00916013s
[t=0.0224983s, 26140 KB] Total time: 0.0224983s
Solution found.
Peak memory: 26140 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.14s
