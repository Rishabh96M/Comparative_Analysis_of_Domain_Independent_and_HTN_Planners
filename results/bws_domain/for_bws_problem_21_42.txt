INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_21/bws_problem_21_42.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.009s wall-clock]
1472 relevant atoms
987 auxiliary atoms
2459 final queue length
4270 total queue pushes
Completing instantiation... [0.020s CPU, 0.015s wall-clock]
Instantiating: [0.030s CPU, 0.025s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
22 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.006s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.022s wall-clock]
1302 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
42 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.011s wall-clock]
Reordering and filtering variables...
43 of 43 variables necessary.
22 of 43 mutex groups necessary.
882 of 882 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 43
Translator derived variables: 0
Translator facts: 506
Translator goal facts: 17
Translator mutex groups: 22
Translator total mutex groups size: 484
Translator operators: 882
Translator axioms: 0
Translator task size: 7602
Translator peak memory: 36456 KB
Writing output... [0.010s CPU, 0.005s wall-clock]
Done! [0.080s CPU, 0.077s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.2432e-05s, 24488 KB] reading input...
[t=0.0024712s, 25268 KB] done reading input!
[t=0.00349926s, 25664 KB] Initializing landmark count heuristic...
[t=0.00354808s, 25664 KB] Generating landmark graph...
[t=0.00360773s, 25664 KB] Building a landmark graph with reasonable orders.
[t=0.00366442s, 25664 KB] Initializing Exploration...
[t=0.00397257s, 25852 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.012707s, 26380 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0127803s, 26380 KB] Landmarks generation time: 0.0091725s
[t=0.0127951s, 26380 KB] Discovered 89 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.01281s, 26380 KB] 501 edges
[t=0.0128198s, 26380 KB] approx. reasonable orders
[t=0.0137056s, 26380 KB] approx. obedient reasonable orders
[t=0.0137334s, 26380 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0137423s, 26380 KB] Landmarks generation time: 0.0101912s
[t=0.0137515s, 26380 KB] Discovered 89 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0137593s, 26380 KB] 518 edges
[t=0.0137674s, 26380 KB] Landmark graph generation time: 0.010226s
[t=0.0137756s, 26380 KB] Landmark graph contains 89 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0137833s, 26380 KB] Landmark graph contains 518 orderings.
[t=0.0140654s, 26380 KB] Simplifying 3486 unary operators... done! [2646 unary operators]
[t=0.0148472s, 26380 KB] time to simplify: 0.000836925s
[t=0.0149524s, 26380 KB] Initializing additive heuristic...
[t=0.0149664s, 26380 KB] Initializing FF heuristic...
[t=0.0150144s, 26380 KB] Building successor generator...done!
[t=0.0151936s, 26380 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0152024s, 26380 KB] time for successor generation creation: 0.000148643s
[t=0.015214s, 26380 KB] Variables: 43
[t=0.015222s, 26380 KB] FactPairs: 506
[t=0.0152298s, 26380 KB] Bytes per state: 16
[t=0.0153141s, 26380 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0153458s, 26380 KB] 41 initial landmarks, 17 goal landmarks
[t=0.0153934s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0154033s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0154119s, 26380 KB] g=0, 1 evaluated, 0 expanded
[t=0.015426s, 26380 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0154344s, 26380 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0155857s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0155951s, 26380 KB] g=2, 7 evaluated, 6 expanded
[t=0.0158434s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0158524s, 26380 KB] g=4, 18 evaluated, 17 expanded
[t=0.0160091s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.016018s, 26380 KB] g=6, 25 evaluated, 24 expanded
[t=0.0161607s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0161714s, 26380 KB] g=4, 31 evaluated, 30 expanded
[t=0.016349s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0163654s, 26380 KB] g=8, 38 evaluated, 37 expanded
[t=0.016606s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0166153s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0166235s, 26380 KB] g=10, 48 evaluated, 47 expanded
[t=0.0168041s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0168135s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0168222s, 26380 KB] g=12, 56 evaluated, 55 expanded
[t=0.0169784s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0169871s, 26380 KB] g=14, 63 evaluated, 62 expanded
[t=0.0170424s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0170512s, 26380 KB] g=14, 65 evaluated, 64 expanded
[t=0.0170814s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0170935s, 26380 KB] g=15, 66 evaluated, 65 expanded
[t=0.0174779s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0174873s, 26380 KB] g=18, 84 evaluated, 83 expanded
[t=0.017625s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.017634s, 26380 KB] g=16, 90 evaluated, 89 expanded
[t=0.0178939s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.017904s, 26380 KB] g=20, 101 evaluated, 100 expanded
[t=0.0185466s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0185568s, 26380 KB] g=22, 130 evaluated, 129 expanded
[t=0.0187984s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0188099s, 26380 KB] g=24, 141 evaluated, 140 expanded
[t=0.0190342s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0190513s, 26380 KB] g=24, 151 evaluated, 150 expanded
[t=0.0193548s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0193711s, 26380 KB] g=26, 165 evaluated, 164 expanded
[t=0.0199352s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0199556s, 26380 KB] g=28, 191 evaluated, 190 expanded
[t=0.0203667s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0203849s, 26380 KB] g=32, 209 evaluated, 208 expanded
[t=0.020503s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0205126s, 26380 KB] g=34, 214 evaluated, 213 expanded
[t=0.0207831s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0207931s, 26380 KB] g=38, 226 evaluated, 225 expanded
[t=0.0226476s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0226634s, 26380 KB] g=47, 307 evaluated, 306 expanded
[t=0.0227235s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.022734s, 26380 KB] g=48, 309 evaluated, 308 expanded
[t=0.0230388s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0230514s, 26380 KB] g=46, 322 evaluated, 321 expanded
[t=0.0232969s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.023308s, 26380 KB] g=50, 332 evaluated, 331 expanded
[t=0.0233437s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0233537s, 26380 KB] g=48, 333 evaluated, 332 expanded
[t=0.0236377s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0236489s, 26380 KB] g=51, 345 evaluated, 344 expanded
[t=0.0236889s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0236983s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0237068s, 26380 KB] g=50, 346 evaluated, 345 expanded
[t=0.0237687s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0237778s, 26380 KB] g=51, 348 evaluated, 347 expanded
[t=0.0239423s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0239562s, 26380 KB] g=52, 355 evaluated, 354 expanded
[t=0.0241793s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0242072s, 26380 KB] g=54, 364 evaluated, 363 expanded
[t=0.0242712s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.024306s, 26380 KB] g=54, 365 evaluated, 364 expanded
[t=0.024852s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0248914s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.024911s, 26380 KB] g=56, 376 evaluated, 375 expanded
[t=0.0251228s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0251768s, 26380 KB] g=57, 378 evaluated, 377 expanded
[t=0.0258189s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0258827s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0259122s, 26380 KB] g=58, 384 evaluated, 383 expanded
[t=0.0260868s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0261255s, 26380 KB] g=59, 385 evaluated, 384 expanded
[t=0.0266763s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0267511s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0267954s, 26380 KB] g=60, 390 evaluated, 389 expanded
[t=0.026981s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0270112s, 26380 KB] g=61, 391 evaluated, 390 expanded
[t=0.0277672s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0277906s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0278025s, 26380 KB] g=64, 397 evaluated, 396 expanded
[t=0.0278459s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0278601s, 26380 KB] g=65, 398 evaluated, 397 expanded
[t=0.0279016s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0279121s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0279203s, 26380 KB] g=66, 399 evaluated, 398 expanded
[t=0.0285051s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0285171s, 26380 KB] g=75, 425 evaluated, 424 expanded
[t=0.0286105s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0286197s, 26380 KB] g=74, 429 evaluated, 428 expanded
[t=0.0289691s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0289787s, 26380 KB] g=78, 447 evaluated, 446 expanded
[t=0.0290632s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0290723s, 26380 KB] g=78, 451 evaluated, 450 expanded
[t=0.0291008s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0291097s, 26380 KB] g=80, 452 evaluated, 451 expanded
[t=0.0292671s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.029276s, 26380 KB] g=80, 460 evaluated, 459 expanded
[t=0.0293805s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0293893s, 26380 KB] g=82, 465 evaluated, 464 expanded
[t=0.0297554s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.029775s, 26380 KB] g=90, 484 evaluated, 483 expanded
[t=0.0298503s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0298589s, 26380 KB] g=92, 487 evaluated, 486 expanded
[t=0.0304821s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0304988s, 26380 KB] g=96, 518 evaluated, 517 expanded
[t=0.0307228s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0307367s, 26380 KB] g=104, 528 evaluated, 527 expanded
[t=0.0307633s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0307764s, 26380 KB] g=105, 529 evaluated, 528 expanded
[t=0.0308107s, 26380 KB] Solution found!
[t=0.0308273s, 26380 KB] Actual search time: 0.0154834s
unstack b11 b10 (1)
put-down b11 (1)
unstack b14 b2 (1)
put-down b14 (1)
unstack b7 b18 (1)
put-down b7 (1)
unstack b2 b19 (1)
put-down b2 (1)
unstack b19 b5 (1)
put-down b19 (1)
pick-up b10 (1)
stack b10 b2 (1)
unstack b5 b12 (1)
put-down b5 (1)
unstack b12 b16 (1)
put-down b12 (1)
unstack b16 b13 (1)
stack b16 b6 (1)
unstack b13 b15 (1)
put-down b13 (1)
pick-up b5 (1)
stack b5 b15 (1)
pick-up b14 (1)
stack b14 b5 (1)
unstack b16 b6 (1)
put-down b16 (1)
pick-up b6 (1)
stack b6 b10 (1)
pick-up b12 (1)
stack b12 b11 (1)
pick-up b13 (1)
stack b13 b7 (1)
pick-up b16 (1)
stack b16 b6 (1)
unstack b14 b5 (1)
put-down b14 (1)
unstack b5 b15 (1)
put-down b5 (1)
pick-up b14 (1)
stack b14 b5 (1)
unstack b15 b3 (1)
put-down b15 (1)
unstack b3 b8 (1)
stack b3 b16 (1)
pick-up b15 (1)
stack b15 b3 (1)
unstack b8 b4 (1)
stack b8 b19 (1)
unstack b4 b1 (1)
stack b4 b8 (1)
unstack b1 b21 (1)
stack b1 b13 (1)
unstack b21 b17 (1)
put-down b21 (1)
unstack b17 b20 (1)
stack b17 b14 (1)
pick-up b18 (1)
stack b18 b1 (1)
pick-up b20 (1)
stack b20 b18 (1)
unstack b12 b11 (1)
put-down b12 (1)
pick-up b11 (1)
stack b11 b21 (1)
pick-up b12 (1)
stack b12 b11 (1)
unstack b17 b14 (1)
put-down b17 (1)
unstack b14 b5 (1)
put-down b14 (1)
pick-up b17 (1)
stack b17 b14 (1)
pick-up b5 (1)
stack b5 b15 (1)
unstack b17 b14 (1)
put-down b17 (1)
pick-up b14 (1)
stack b14 b5 (1)
pick-up b17 (1)
stack b17 b14 (1)
unstack b20 b18 (1)
put-down b20 (1)
unstack b18 b1 (1)
put-down b18 (1)
unstack b1 b13 (1)
put-down b1 (1)
pick-up b18 (1)
stack b18 b1 (1)
pick-up b20 (1)
stack b20 b18 (1)
unstack b13 b7 (1)
put-down b13 (1)
pick-up b7 (1)
stack b7 b17 (1)
pick-up b13 (1)
stack b13 b7 (1)
unstack b20 b18 (1)
put-down b20 (1)
unstack b18 b1 (1)
put-down b18 (1)
pick-up b1 (1)
stack b1 b13 (1)
pick-up b18 (1)
stack b18 b1 (1)
pick-up b20 (1)
stack b20 b18 (1)
[t=0.0308419s, 26380 KB] Plan length: 106 step(s).
[t=0.0308419s, 26380 KB] Plan cost: 106
[t=0.0308419s, 26380 KB] Expanded 529 state(s).
[t=0.0308419s, 26380 KB] Reopened 0 state(s).
[t=0.0308419s, 26380 KB] Evaluated 530 state(s).
[t=0.0308419s, 26380 KB] Evaluations: 1060
[t=0.0308419s, 26380 KB] Generated 4740 state(s).
[t=0.0308419s, 26380 KB] Dead ends: 0 state(s).
[t=0.0308419s, 26380 KB] Number of registered states: 530
[t=0.0308419s, 26380 KB] Int hash set load factor: 530/1024 = 0.517578
[t=0.0308419s, 26380 KB] Int hash set resizes: 10
[t=0.0308419s, 26380 KB] Search time: 0.0155281s
[t=0.0308419s, 26380 KB] Total time: 0.0308419s
Solution found.
Peak memory: 26380 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.16s
