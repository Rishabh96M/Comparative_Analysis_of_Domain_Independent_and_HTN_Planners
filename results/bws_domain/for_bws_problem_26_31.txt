INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_26/bws_problem_26_31.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.014s wall-clock]
2212 relevant atoms
1482 auxiliary atoms
3694 final queue length
6452 total queue pushes
Completing instantiation... [0.020s CPU, 0.024s wall-clock]
Instantiating: [0.040s CPU, 0.040s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
27 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.008s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.033s wall-clock]
2002 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
52 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.024s wall-clock]
Reordering and filtering variables...
53 of 53 variables necessary.
27 of 53 mutex groups necessary.
1352 of 1352 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.009s wall-clock]
Translator variables: 53
Translator derived variables: 0
Translator facts: 756
Translator goal facts: 21
Translator mutex groups: 27
Translator total mutex groups size: 729
Translator operators: 1352
Translator axioms: 0
Translator task size: 11621
Translator peak memory: 38900 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.120s CPU, 0.127s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=1.9236e-05s, 24488 KB] reading input...
[t=0.00439899s, 25744 KB] done reading input!
[t=0.00569524s, 26140 KB] Initializing landmark count heuristic...
[t=0.0057275s, 26140 KB] Generating landmark graph...
[t=0.00581749s, 26272 KB] Building a landmark graph with reasonable orders.
[t=0.00589263s, 26272 KB] Initializing Exploration...
[t=0.00626737s, 26680 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.02383s, 27476 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0239259s, 27476 KB] Landmarks generation time: 0.0181261s
[t=0.0239576s, 27476 KB] Discovered 117 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0239754s, 27476 KB] 971 edges
[t=0.0239853s, 27476 KB] approx. reasonable orders
[t=0.0244851s, 27476 KB] approx. obedient reasonable orders
[t=0.0245244s, 27476 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0245506s, 27476 KB] Landmarks generation time: 0.0188212s
[t=0.0245599s, 27476 KB] Discovered 117 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0245679s, 27476 KB] 976 edges
[t=0.0245765s, 27476 KB] Landmark graph generation time: 0.0188556s
[t=0.0245844s, 27476 KB] Landmark graph contains 117 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0245921s, 27476 KB] Landmark graph contains 976 orderings.
[t=0.025033s, 27476 KB] Simplifying 5356 unary operators... done! [4056 unary operators]
[t=0.0265253s, 27476 KB] time to simplify: 0.00153581s
[t=0.0266796s, 27476 KB] Initializing additive heuristic...
[t=0.0266972s, 27476 KB] Initializing FF heuristic...
[t=0.0267876s, 27476 KB] Building successor generator...done!
[t=0.0270753s, 27476 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0270838s, 27476 KB] time for successor generation creation: 0.000259537s
[t=0.0271107s, 27476 KB] Variables: 53
[t=0.0271189s, 27476 KB] FactPairs: 756
[t=0.0271267s, 27476 KB] Bytes per state: 20
[t=0.0272647s, 27476 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.027299s, 27476 KB] 53 initial landmarks, 21 goal landmarks
[t=0.0273907s, 27476 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 64
[t=0.0274005s, 27476 KB] New best heuristic value for ff(transform = adapt_costs(one)): 46
[t=0.0274088s, 27476 KB] g=0, 1 evaluated, 0 expanded
[t=0.0274405s, 27476 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 64
[t=0.0274497s, 27476 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 46
[t=0.0276007s, 27476 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 63
[t=0.0276106s, 27476 KB] g=2, 5 evaluated, 4 expanded
[t=0.02775s, 27476 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 62
[t=0.0277591s, 27476 KB] g=4, 9 evaluated, 8 expanded
[t=0.0279238s, 27476 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 61
[t=0.0279331s, 27476 KB] New best heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0279415s, 27476 KB] g=6, 14 evaluated, 13 expanded
[t=0.0281056s, 27476 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 60
[t=0.0281154s, 27476 KB] g=8, 19 evaluated, 18 expanded
[t=0.0283754s, 27476 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.0283873s, 27476 KB] g=11, 27 evaluated, 26 expanded
[t=0.0287065s, 27476 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 58
[t=0.0287163s, 27476 KB] g=14, 37 evaluated, 36 expanded
[t=0.0290297s, 27476 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 57
[t=0.0290393s, 27476 KB] g=16, 47 evaluated, 46 expanded
[t=0.0293552s, 27476 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0293641s, 27476 KB] g=18, 57 evaluated, 56 expanded
[t=0.0298259s, 27476 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0298349s, 27476 KB] New best heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.0298427s, 27476 KB] g=20, 71 evaluated, 70 expanded
[t=0.0301403s, 27476 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.03015s, 27476 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0301588s, 27476 KB] g=22, 80 evaluated, 79 expanded
[t=0.0304162s, 27476 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0304249s, 27476 KB] g=24, 88 evaluated, 87 expanded
[t=0.0305487s, 27476 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0305587s, 27476 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0305671s, 27476 KB] g=24, 91 evaluated, 90 expanded
[t=0.0308141s, 27476 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.030824s, 27476 KB] g=26, 98 evaluated, 97 expanded
[t=0.0309649s, 27476 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0309745s, 27476 KB] g=27, 102 evaluated, 101 expanded
[t=0.0310538s, 27476 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0310633s, 27476 KB] g=29, 104 evaluated, 103 expanded
[t=0.0317397s, 27476 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0317495s, 27476 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0317578s, 27476 KB] g=32, 125 evaluated, 124 expanded
[t=0.0321275s, 27476 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0321371s, 27476 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0321446s, 27476 KB] g=34, 136 evaluated, 135 expanded
[t=0.0324797s, 27476 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0324889s, 27476 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0324969s, 27476 KB] g=36, 146 evaluated, 145 expanded
[t=0.0328306s, 27476 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0328402s, 27476 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0328482s, 27476 KB] g=38, 156 evaluated, 155 expanded
[t=0.0331839s, 27476 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0331936s, 27476 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0332015s, 27476 KB] g=40, 166 evaluated, 165 expanded
[t=0.0335436s, 27476 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0335527s, 27476 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0335616s, 27476 KB] g=42, 176 evaluated, 175 expanded
[t=0.0339413s, 27476 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0339512s, 27476 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0339593s, 27476 KB] g=44, 187 evaluated, 186 expanded
[t=0.0342704s, 27476 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0342804s, 27476 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.034289s, 27476 KB] g=46, 196 evaluated, 195 expanded
[t=0.035036s, 27476 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0350498s, 27476 KB] g=50, 218 evaluated, 217 expanded
[t=0.0352942s, 27476 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.035304s, 27476 KB] g=51, 225 evaluated, 224 expanded
[t=0.0353491s, 27476 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0353587s, 27476 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0353665s, 27476 KB] g=52, 226 evaluated, 225 expanded
[t=0.0356883s, 27476 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0357004s, 27476 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0357089s, 27476 KB] g=54, 235 evaluated, 234 expanded
[t=0.0360285s, 27476 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0360395s, 27476 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0360473s, 27476 KB] g=56, 244 evaluated, 243 expanded
[t=0.0363298s, 27476 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0363395s, 27476 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0363478s, 27476 KB] g=58, 252 evaluated, 251 expanded
[t=0.0366722s, 27476 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0366825s, 27476 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0366903s, 27476 KB] g=60, 261 evaluated, 260 expanded
[t=0.0369665s, 27476 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0369757s, 27476 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0369838s, 27476 KB] g=62, 269 evaluated, 268 expanded
[t=0.0372586s, 27476 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0372681s, 27476 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0372764s, 27476 KB] g=64, 277 evaluated, 276 expanded
[t=0.0374853s, 27476 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0374942s, 27476 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0375023s, 27476 KB] g=66, 283 evaluated, 282 expanded
[t=0.0379628s, 27476 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0379727s, 27476 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0379805s, 27476 KB] g=70, 297 evaluated, 296 expanded
[t=0.0381795s, 27476 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0381887s, 27476 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0381967s, 27476 KB] g=72, 303 evaluated, 302 expanded
[t=0.0403545s, 27476 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.040368s, 27476 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0403767s, 27476 KB] g=80, 371 evaluated, 370 expanded
[t=0.0405241s, 27476 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0405353s, 27476 KB] g=80, 375 evaluated, 374 expanded
[t=0.0407055s, 27476 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0407166s, 27476 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.040725s, 27476 KB] g=82, 380 evaluated, 379 expanded
[t=0.0423335s, 27476 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0423488s, 27476 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0423571s, 27476 KB] g=90, 431 evaluated, 430 expanded
[t=0.0424634s, 27476 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0425451s, 27476 KB] g=90, 434 evaluated, 433 expanded
[t=0.0426858s, 27476 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0426956s, 27476 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0427036s, 27476 KB] g=92, 438 evaluated, 437 expanded
[t=0.0443556s, 27476 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0443663s, 27476 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.044375s, 27476 KB] g=104, 491 evaluated, 490 expanded
[t=0.04464s, 27476 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0446489s, 27476 KB] g=108, 500 evaluated, 499 expanded
[t=0.0447377s, 27476 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0447469s, 27476 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0447545s, 27476 KB] g=110, 503 evaluated, 502 expanded
[t=0.0455542s, 27476 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0455645s, 27476 KB] g=124, 535 evaluated, 534 expanded
[t=0.0456326s, 27476 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0456415s, 27476 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0456496s, 27476 KB] g=126, 538 evaluated, 537 expanded
[t=0.0457275s, 27476 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0457362s, 27476 KB] g=130, 542 evaluated, 541 expanded
[t=0.0457566s, 27476 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0457652s, 27476 KB] g=131, 543 evaluated, 542 expanded
[t=0.0457812s, 27476 KB] Solution found!
[t=0.0457926s, 27476 KB] Actual search time: 0.0184904s
unstack b4 b20 (1)
put-down b4 (1)
unstack b20 b21 (1)
put-down b20 (1)
unstack b21 b14 (1)
put-down b21 (1)
unstack b14 b6 (1)
put-down b14 (1)
unstack b11 b25 (1)
put-down b11 (1)
unstack b25 b12 (1)
put-down b25 (1)
unstack b12 b19 (1)
put-down b12 (1)
unstack b19 b15 (1)
put-down b19 (1)
unstack b15 b2 (1)
stack b15 b14 (1)
unstack b2 b18 (1)
stack b2 b4 (1)
pick-up b11 (1)
stack b11 b25 (1)
pick-up b19 (1)
stack b19 b2 (1)
unstack b18 b17 (1)
put-down b18 (1)
unstack b17 b10 (1)
put-down b17 (1)
unstack b10 b5 (1)
put-down b10 (1)
unstack b5 b22 (1)
put-down b5 (1)
unstack b22 b8 (1)
stack b22 b19 (1)
unstack b8 b24 (1)
stack b8 b20 (1)
unstack b24 b13 (1)
stack b24 b18 (1)
unstack b13 b9 (1)
stack b13 b15 (1)
unstack b9 b26 (1)
put-down b9 (1)
pick-up b10 (1)
stack b10 b26 (1)
pick-up b12 (1)
stack b12 b9 (1)
unstack b10 b26 (1)
put-down b10 (1)
unstack b26 b3 (1)
put-down b26 (1)
unstack b3 b23 (1)
stack b3 b22 (1)
pick-up b10 (1)
stack b10 b26 (1)
unstack b23 b16 (1)
stack b23 b24 (1)
unstack b16 b1 (1)
put-down b16 (1)
unstack b1 b7 (1)
stack b1 b8 (1)
pick-up b17 (1)
stack b17 b16 (1)
pick-up b6 (1)
stack b6 b23 (1)
pick-up b7 (1)
stack b7 b21 (1)
unstack b11 b25 (1)
put-down b11 (1)
pick-up b25 (1)
stack b25 b7 (1)
pick-up b11 (1)
stack b11 b25 (1)
unstack b1 b8 (1)
put-down b1 (1)
unstack b8 b20 (1)
put-down b8 (1)
pick-up b20 (1)
stack b20 b5 (1)
pick-up b8 (1)
stack b8 b20 (1)
pick-up b1 (1)
stack b1 b8 (1)
unstack b13 b15 (1)
put-down b13 (1)
unstack b15 b14 (1)
put-down b15 (1)
pick-up b14 (1)
stack b14 b12 (1)
pick-up b15 (1)
stack b15 b14 (1)
pick-up b13 (1)
stack b13 b15 (1)
unstack b6 b23 (1)
put-down b6 (1)
unstack b23 b24 (1)
put-down b23 (1)
pick-up b6 (1)
stack b6 b23 (1)
unstack b24 b18 (1)
put-down b24 (1)
pick-up b18 (1)
stack b18 b13 (1)
pick-up b24 (1)
stack b24 b18 (1)
unstack b6 b23 (1)
put-down b6 (1)
pick-up b23 (1)
stack b23 b24 (1)
pick-up b6 (1)
stack b6 b23 (1)
unstack b3 b22 (1)
put-down b3 (1)
unstack b22 b19 (1)
put-down b22 (1)
pick-up b3 (1)
stack b3 b22 (1)
unstack b19 b2 (1)
put-down b19 (1)
unstack b2 b4 (1)
put-down b2 (1)
pick-up b4 (1)
stack b4 b1 (1)
pick-up b2 (1)
stack b2 b4 (1)
pick-up b19 (1)
stack b19 b2 (1)
unstack b3 b22 (1)
put-down b3 (1)
pick-up b22 (1)
stack b22 b19 (1)
pick-up b3 (1)
stack b3 b22 (1)
[t=0.045802s, 27476 KB] Plan length: 132 step(s).
[t=0.045802s, 27476 KB] Plan cost: 132
[t=0.045802s, 27476 KB] Expanded 543 state(s).
[t=0.045802s, 27476 KB] Reopened 0 state(s).
[t=0.045802s, 27476 KB] Evaluated 544 state(s).
[t=0.045802s, 27476 KB] Evaluations: 1088
[t=0.045802s, 27476 KB] Generated 5611 state(s).
[t=0.045802s, 27476 KB] Dead ends: 0 state(s).
[t=0.045802s, 27476 KB] Number of registered states: 544
[t=0.045802s, 27476 KB] Int hash set load factor: 544/1024 = 0.53125
[t=0.045802s, 27476 KB] Int hash set resizes: 10
[t=0.045802s, 27476 KB] Search time: 0.0185377s
[t=0.045802s, 27476 KB] Total time: 0.045802s
Solution found.
Peak memory: 27476 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.22s
