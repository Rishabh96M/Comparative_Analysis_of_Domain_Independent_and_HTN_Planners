INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_20/bws_problem_20_49.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.010s wall-clock]
1342 relevant atoms
900 auxiliary atoms
2242 final queue length
3886 total queue pushes
Completing instantiation... [0.010s CPU, 0.013s wall-clock]
Instantiating: [0.020s CPU, 0.025s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
21 uncovered facts
Choosing groups: [0.010s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.006s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.021s wall-clock]
1180 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
40 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.010s wall-clock]
Reordering and filtering variables...
41 of 41 variables necessary.
21 of 41 mutex groups necessary.
800 of 800 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.005s wall-clock]
Translator variables: 41
Translator derived variables: 0
Translator facts: 462
Translator goal facts: 19
Translator mutex groups: 21
Translator total mutex groups size: 441
Translator operators: 800
Translator axioms: 0
Translator task size: 6903
Translator peak memory: 35944 KB
Writing output... [0.010s CPU, 0.004s wall-clock]
Done! [0.070s CPU, 0.075s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.4804e-05s, 24488 KB] reading input...
[t=0.00234889s, 25180 KB] done reading input!
[t=0.00335524s, 25444 KB] Initializing landmark count heuristic...
[t=0.00340415s, 25444 KB] Generating landmark graph...
[t=0.00346255s, 25576 KB] Building a landmark graph with reasonable orders.
[t=0.00351805s, 25576 KB] Initializing Exploration...
[t=0.00376485s, 25744 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0130449s, 26140 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0131632s, 26140 KB] Landmarks generation time: 0.00970212s
[t=0.0131778s, 26140 KB] Discovered 93 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0131991s, 26140 KB] 361 edges
[t=0.0132091s, 26140 KB] approx. reasonable orders
[t=0.0149788s, 26140 KB] approx. obedient reasonable orders
[t=0.015032s, 26140 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0150422s, 26140 KB] Landmarks generation time: 0.011636s
[t=0.0150526s, 26140 KB] Discovered 93 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0150607s, 26140 KB] 404 edges
[t=0.0150693s, 26140 KB] Landmark graph generation time: 0.0116728s
[t=0.0150782s, 26140 KB] Landmark graph contains 93 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0150867s, 26140 KB] Landmark graph contains 404 orderings.
[t=0.0154686s, 26320 KB] Simplifying 3160 unary operators... done! [2400 unary operators]
[t=0.0162245s, 26320 KB] time to simplify: 0.0008083s
[t=0.0163289s, 26320 KB] Initializing additive heuristic...
[t=0.0163422s, 26320 KB] Initializing FF heuristic...
[t=0.0163981s, 26320 KB] Building successor generator...done!
[t=0.0165608s, 26320 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0165692s, 26320 KB] time for successor generation creation: 0.000131455s
[t=0.0165809s, 26320 KB] Variables: 41
[t=0.01659s, 26320 KB] FactPairs: 462
[t=0.0165992s, 26320 KB] Bytes per state: 16
[t=0.0167293s, 26320 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.016767s, 26320 KB] 41 initial landmarks, 19 goal landmarks
[t=0.0168317s, 26320 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0168451s, 26320 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0168581s, 26320 KB] g=0, 1 evaluated, 0 expanded
[t=0.0168787s, 26320 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0168933s, 26320 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.017031s, 26320 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0170441s, 26320 KB] g=2, 6 evaluated, 5 expanded
[t=0.0172579s, 26320 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0172722s, 26320 KB] g=4, 14 evaluated, 13 expanded
[t=0.0174677s, 26320 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0174782s, 26320 KB] g=6, 22 evaluated, 21 expanded
[t=0.0178067s, 26320 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.017818s, 26320 KB] g=8, 36 evaluated, 35 expanded
[t=0.0181463s, 26320 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0181587s, 26320 KB] g=10, 50 evaluated, 49 expanded
[t=0.0182236s, 26320 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.018233s, 26320 KB] g=10, 52 evaluated, 51 expanded
[t=0.0185329s, 26320 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0185429s, 26320 KB] g=12, 65 evaluated, 64 expanded
[t=0.0186896s, 26320 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0186989s, 26320 KB] g=12, 71 evaluated, 70 expanded
[t=0.0189933s, 26320 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0190031s, 26320 KB] g=14, 84 evaluated, 83 expanded
[t=0.0191305s, 26320 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0191396s, 26320 KB] g=14, 89 evaluated, 88 expanded
[t=0.0194364s, 26320 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0194458s, 26320 KB] g=16, 102 evaluated, 101 expanded
[t=0.0196155s, 26320 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.019633s, 26320 KB] g=16, 107 evaluated, 106 expanded
[t=0.020035s, 26320 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0200509s, 26320 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0200604s, 26320 KB] g=18, 121 evaluated, 120 expanded
[t=0.0203125s, 26320 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0203312s, 26320 KB] g=20, 128 evaluated, 127 expanded
[t=0.0203799s, 26320 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0203907s, 26320 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0203994s, 26320 KB] g=20, 129 evaluated, 128 expanded
[t=0.0205679s, 26320 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0205773s, 26320 KB] g=22, 136 evaluated, 135 expanded
[t=0.0206101s, 26320 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0206192s, 26320 KB] g=22, 137 evaluated, 136 expanded
[t=0.0207438s, 26320 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0207529s, 26320 KB] g=23, 142 evaluated, 141 expanded
[t=0.0208088s, 26320 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.020818s, 26320 KB] g=24, 144 evaluated, 143 expanded
[t=0.0209422s, 26320 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0209513s, 26320 KB] g=24, 149 evaluated, 148 expanded
[t=0.0212542s, 26320 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0212649s, 26320 KB] g=26, 161 evaluated, 160 expanded
[t=0.0212976s, 26320 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0213064s, 26320 KB] g=26, 162 evaluated, 161 expanded
[t=0.021624s, 26320 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0216334s, 26320 KB] g=28, 176 evaluated, 175 expanded
[t=0.0217288s, 26320 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0217375s, 26320 KB] g=28, 180 evaluated, 179 expanded
[t=0.0220898s, 26320 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0220991s, 26320 KB] g=30, 196 evaluated, 195 expanded
[t=0.0229875s, 26320 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0229981s, 26320 KB] g=32, 237 evaluated, 236 expanded
[t=0.0235276s, 26320 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0235377s, 26320 KB] g=34, 260 evaluated, 259 expanded
[t=0.0236367s, 26320 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0236454s, 26320 KB] g=34, 264 evaluated, 263 expanded
[t=0.0241315s, 26320 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0241415s, 26320 KB] g=36, 285 evaluated, 284 expanded
[t=0.0246348s, 26320 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0246475s, 26320 KB] g=38, 306 evaluated, 305 expanded
[t=0.0249543s, 26320 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0249689s, 26320 KB] g=40, 319 evaluated, 318 expanded
[t=0.0261893s, 26320 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0262032s, 26320 KB] g=50, 374 evaluated, 373 expanded
[t=0.0265256s, 26320 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0265353s, 26320 KB] g=52, 388 evaluated, 387 expanded
[t=0.026745s, 26320 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0267542s, 26320 KB] g=54, 397 evaluated, 396 expanded
[t=0.0270668s, 26320 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0270765s, 26320 KB] g=56, 411 evaluated, 410 expanded
[t=0.0271322s, 26320 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0271414s, 26320 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0271497s, 26320 KB] g=56, 413 evaluated, 412 expanded
[t=0.0273263s, 26320 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0273353s, 26320 KB] g=58, 421 evaluated, 420 expanded
[t=0.0273884s, 26320 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0273972s, 26320 KB] g=58, 423 evaluated, 422 expanded
[t=0.027614s, 26320 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0276236s, 26320 KB] g=60, 433 evaluated, 432 expanded
[t=0.0276762s, 26320 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0276847s, 26320 KB] g=60, 435 evaluated, 434 expanded
[t=0.0278419s, 26320 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0278511s, 26320 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0278589s, 26320 KB] g=62, 442 evaluated, 441 expanded
[t=0.0283977s, 26320 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.028408s, 26320 KB] g=68, 467 evaluated, 466 expanded
[t=0.0285217s, 26320 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0285304s, 26320 KB] g=70, 472 evaluated, 471 expanded
[t=0.0287048s, 26320 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0287143s, 26320 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0287247s, 26320 KB] g=72, 480 evaluated, 479 expanded
[t=0.0307933s, 26320 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0308269s, 26320 KB] g=84, 570 evaluated, 569 expanded
[t=0.0311606s, 26320 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0311704s, 26320 KB] g=88, 586 evaluated, 585 expanded
[t=0.0312582s, 26320 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0312669s, 26320 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0312747s, 26320 KB] g=90, 590 evaluated, 589 expanded
[t=0.0366359s, 26320 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.036677s, 26320 KB] g=112, 845 evaluated, 844 expanded
[t=0.0369853s, 26320 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0369966s, 26320 KB] g=118, 859 evaluated, 858 expanded
[t=0.0374148s, 26320 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0374334s, 26320 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0374421s, 26320 KB] g=128, 878 evaluated, 877 expanded
[t=0.0554615s, 26320 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0555896s, 26320 KB] g=116, 1749 evaluated, 1748 expanded
[t=0.0556784s, 26320 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0556934s, 26320 KB] g=118, 1753 evaluated, 1752 expanded
[t=0.0564954s, 26320 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0565053s, 26320 KB] g=126, 1796 evaluated, 1795 expanded
[t=0.0565844s, 26320 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0565939s, 26320 KB] g=128, 1800 evaluated, 1799 expanded
[t=0.0585904s, 26320 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0586031s, 26320 KB] g=150, 1918 evaluated, 1917 expanded
[t=0.0587127s, 26320 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0587216s, 26320 KB] g=154, 1927 evaluated, 1926 expanded
[t=0.0587609s, 26320 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0587693s, 26320 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0587769s, 26320 KB] g=156, 1930 evaluated, 1929 expanded
[t=0.0588902s, 26320 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0588994s, 26320 KB] g=164, 1941 evaluated, 1940 expanded
[t=0.0589172s, 26320 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0589253s, 26320 KB] g=164, 1942 evaluated, 1941 expanded
[t=0.0589398s, 26320 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0589481s, 26320 KB] g=165, 1943 evaluated, 1942 expanded
[t=0.058962s, 26320 KB] Solution found!
[t=0.0589751s, 26320 KB] Actual search time: 0.0422044s
unstack b5 b15 (1)
put-down b5 (1)
unstack b15 b19 (1)
put-down b15 (1)
unstack b19 b9 (1)
put-down b19 (1)
unstack b6 b20 (1)
put-down b6 (1)
unstack b20 b11 (1)
stack b20 b15 (1)
unstack b11 b3 (1)
stack b11 b20 (1)
unstack b7 b12 (1)
stack b7 b3 (1)
pick-up b5 (1)
stack b5 b12 (1)
unstack b9 b14 (1)
stack b9 b19 (1)
unstack b8 b1 (1)
stack b8 b14 (1)
unstack b1 b2 (1)
put-down b1 (1)
unstack b2 b10 (1)
stack b2 b5 (1)
unstack b10 b17 (1)
put-down b10 (1)
unstack b11 b20 (1)
put-down b11 (1)
unstack b20 b15 (1)
put-down b20 (1)
pick-up b15 (1)
stack b15 b9 (1)
pick-up b17 (1)
stack b17 b8 (1)
pick-up b20 (1)
stack b20 b15 (1)
pick-up b11 (1)
stack b11 b20 (1)
pick-up b1 (1)
stack b1 b11 (1)
pick-up b10 (1)
stack b10 b6 (1)
unstack b7 b3 (1)
put-down b7 (1)
unstack b10 b6 (1)
put-down b10 (1)
unstack b3 b13 (1)
put-down b3 (1)
unstack b13 b16 (1)
put-down b13 (1)
unstack b16 b18 (1)
stack b16 b17 (1)
unstack b18 b4 (1)
stack b18 b1 (1)
pick-up b3 (1)
stack b3 b13 (1)
pick-up b4 (1)
stack b4 b7 (1)
pick-up b6 (1)
stack b6 b4 (1)
pick-up b10 (1)
stack b10 b6 (1)
unstack b2 b5 (1)
put-down b2 (1)
unstack b5 b12 (1)
put-down b5 (1)
pick-up b12 (1)
stack b12 b16 (1)
pick-up b5 (1)
stack b5 b12 (1)
pick-up b2 (1)
stack b2 b5 (1)
unstack b10 b6 (1)
put-down b10 (1)
unstack b6 b4 (1)
put-down b6 (1)
pick-up b10 (1)
stack b10 b6 (1)
unstack b4 b7 (1)
put-down b4 (1)
pick-up b7 (1)
stack b7 b3 (1)
pick-up b4 (1)
stack b4 b7 (1)
unstack b10 b6 (1)
put-down b10 (1)
pick-up b6 (1)
stack b6 b4 (1)
pick-up b10 (1)
stack b10 b6 (1)
unstack b18 b1 (1)
put-down b18 (1)
unstack b1 b11 (1)
put-down b1 (1)
unstack b11 b20 (1)
put-down b11 (1)
pick-up b1 (1)
stack b1 b11 (1)
pick-up b18 (1)
stack b18 b1 (1)
unstack b20 b15 (1)
put-down b20 (1)
unstack b15 b9 (1)
put-down b15 (1)
pick-up b20 (1)
stack b20 b15 (1)
unstack b9 b19 (1)
put-down b9 (1)
pick-up b19 (1)
stack b19 b10 (1)
pick-up b9 (1)
stack b9 b19 (1)
unstack b20 b15 (1)
put-down b20 (1)
pick-up b15 (1)
stack b15 b9 (1)
pick-up b20 (1)
stack b20 b15 (1)
unstack b18 b1 (1)
put-down b18 (1)
unstack b1 b11 (1)
put-down b1 (1)
pick-up b11 (1)
stack b11 b20 (1)
pick-up b1 (1)
stack b1 b11 (1)
pick-up b18 (1)
stack b18 b1 (1)
unstack b2 b5 (1)
put-down b2 (1)
unstack b5 b12 (1)
put-down b5 (1)
unstack b12 b16 (1)
put-down b12 (1)
pick-up b5 (1)
stack b5 b12 (1)
pick-up b2 (1)
stack b2 b5 (1)
unstack b16 b17 (1)
put-down b16 (1)
unstack b17 b8 (1)
put-down b17 (1)
pick-up b16 (1)
stack b16 b17 (1)
unstack b8 b14 (1)
put-down b8 (1)
pick-up b14 (1)
stack b14 b18 (1)
pick-up b8 (1)
stack b8 b14 (1)
unstack b16 b17 (1)
put-down b16 (1)
pick-up b17 (1)
stack b17 b8 (1)
pick-up b16 (1)
stack b16 b17 (1)
unstack b2 b5 (1)
put-down b2 (1)
unstack b5 b12 (1)
put-down b5 (1)
pick-up b12 (1)
stack b12 b16 (1)
pick-up b5 (1)
stack b5 b12 (1)
pick-up b2 (1)
stack b2 b5 (1)
[t=0.058984s, 26320 KB] Plan length: 166 step(s).
[t=0.058984s, 26320 KB] Plan cost: 166
[t=0.058984s, 26320 KB] Expanded 1943 state(s).
[t=0.058984s, 26320 KB] Reopened 0 state(s).
[t=0.058984s, 26320 KB] Evaluated 1944 state(s).
[t=0.058984s, 26320 KB] Evaluations: 3888
[t=0.058984s, 26320 KB] Generated 12610 state(s).
[t=0.058984s, 26320 KB] Dead ends: 0 state(s).
[t=0.058984s, 26320 KB] Number of registered states: 1944
[t=0.058984s, 26320 KB] Int hash set load factor: 1944/4096 = 0.474609
[t=0.058984s, 26320 KB] Int hash set resizes: 12
[t=0.058984s, 26320 KB] Search time: 0.0422558s
[t=0.058984s, 26320 KB] Total time: 0.058984s
Solution found.
Peak memory: 26320 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.18s
