INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_21/bws_problem_21_94.pddl --sas-file output.sas
Parsing...
Parsing: [0.010s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.009s wall-clock]
1472 relevant atoms
987 auxiliary atoms
2459 final queue length
4267 total queue pushes
Completing instantiation... [0.010s CPU, 0.015s wall-clock]
Instantiating: [0.020s CPU, 0.025s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
22 uncovered facts
Choosing groups: [0.010s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.006s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.022s wall-clock]
1302 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
42 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.011s wall-clock]
Reordering and filtering variables...
43 of 43 variables necessary.
22 of 43 mutex groups necessary.
882 of 882 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.005s wall-clock]
Translator variables: 43
Translator derived variables: 0
Translator facts: 506
Translator goal facts: 17
Translator mutex groups: 22
Translator total mutex groups size: 484
Translator operators: 882
Translator axioms: 0
Translator task size: 7602
Translator peak memory: 36456 KB
Writing output... [0.010s CPU, 0.005s wall-clock]
Done! [0.090s CPU, 0.079s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=1.9975e-05s, 24488 KB] reading input...
[t=0.00241294s, 25268 KB] done reading input!
[t=0.00338643s, 25664 KB] Initializing landmark count heuristic...
[t=0.00342043s, 25664 KB] Generating landmark graph...
[t=0.00349758s, 25664 KB] Building a landmark graph with reasonable orders.
[t=0.00356344s, 25664 KB] Initializing Exploration...
[t=0.00387718s, 25852 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0129589s, 26380 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.013237s, 26380 KB] Landmarks generation time: 0.00974283s
[t=0.0132587s, 26380 KB] Discovered 92 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0132977s, 26380 KB] 474 edges
[t=0.0133135s, 26380 KB] approx. reasonable orders
[t=0.0145434s, 26380 KB] approx. obedient reasonable orders
[t=0.0145727s, 26380 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0145833s, 26380 KB] Landmarks generation time: 0.0111601s
[t=0.014603s, 26380 KB] Discovered 92 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0146114s, 26380 KB] 494 edges
[t=0.0146205s, 26380 KB] Landmark graph generation time: 0.011207s
[t=0.0146291s, 26380 KB] Landmark graph contains 92 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0146374s, 26380 KB] Landmark graph contains 494 orderings.
[t=0.0150035s, 26380 KB] Simplifying 3486 unary operators... done! [2646 unary operators]
[t=0.0158857s, 26380 KB] time to simplify: 0.000944306s
[t=0.016002s, 26380 KB] Initializing additive heuristic...
[t=0.0160169s, 26380 KB] Initializing FF heuristic...
[t=0.0160753s, 26380 KB] Building successor generator...done!
[t=0.016277s, 26380 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0162861s, 26380 KB] time for successor generation creation: 0.000168191s
[t=0.0162983s, 26380 KB] Variables: 43
[t=0.0163069s, 26380 KB] FactPairs: 506
[t=0.0163151s, 26380 KB] Bytes per state: 16
[t=0.0164082s, 26380 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0164427s, 26380 KB] 43 initial landmarks, 17 goal landmarks
[t=0.0164938s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.016506s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0165191s, 26380 KB] g=0, 1 evaluated, 0 expanded
[t=0.0165439s, 26380 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0165536s, 26380 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0166254s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0166536s, 26380 KB] g=1, 3 evaluated, 2 expanded
[t=0.0167829s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0167941s, 26380 KB] g=3, 8 evaluated, 7 expanded
[t=0.0169015s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0169185s, 26380 KB] g=4, 12 evaluated, 11 expanded
[t=0.0170427s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0170543s, 26380 KB] g=6, 17 evaluated, 16 expanded
[t=0.0172719s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0172857s, 26380 KB] g=8, 25 evaluated, 24 expanded
[t=0.0174093s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0174237s, 26380 KB] g=8, 30 evaluated, 29 expanded
[t=0.0174816s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0174927s, 26380 KB] g=10, 32 evaluated, 31 expanded
[t=0.0177924s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.017802s, 26380 KB] g=12, 45 evaluated, 44 expanded
[t=0.0179888s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0179987s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.018007s, 26380 KB] g=12, 53 evaluated, 52 expanded
[t=0.0181295s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0181395s, 26380 KB] g=14, 58 evaluated, 57 expanded
[t=0.0182884s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0182985s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0183067s, 26380 KB] g=16, 64 evaluated, 63 expanded
[t=0.0187411s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0187589s, 26380 KB] g=20, 83 evaluated, 82 expanded
[t=0.0189504s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0189652s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0189739s, 26380 KB] g=22, 91 evaluated, 90 expanded
[t=0.0191464s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0191563s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0191642s, 26380 KB] g=24, 98 evaluated, 97 expanded
[t=0.0193443s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0193541s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0193619s, 26380 KB] g=26, 106 evaluated, 105 expanded
[t=0.0195203s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0195298s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0195375s, 26380 KB] g=28, 113 evaluated, 112 expanded
[t=0.0196727s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0196818s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0196895s, 26380 KB] g=30, 119 evaluated, 118 expanded
[t=0.0202555s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0202775s, 26380 KB] g=34, 143 evaluated, 142 expanded
[t=0.0204008s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0204118s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0204202s, 26380 KB] g=36, 148 evaluated, 147 expanded
[t=0.0212776s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.021304s, 26380 KB] g=46, 184 evaluated, 183 expanded
[t=0.0215131s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0215256s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0215335s, 26380 KB] g=48, 192 evaluated, 191 expanded
[t=0.0216994s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.021711s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0217186s, 26380 KB] g=50, 198 evaluated, 197 expanded
[t=0.0218439s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0218551s, 26380 KB] g=51, 202 evaluated, 201 expanded
[t=0.0218958s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0219062s, 26380 KB] g=52, 203 evaluated, 202 expanded
[t=0.0221336s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0221444s, 26380 KB] g=53, 213 evaluated, 212 expanded
[t=0.0221774s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0222153s, 26380 KB] g=54, 214 evaluated, 213 expanded
[t=0.022255s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0222654s, 26380 KB] g=54, 215 evaluated, 214 expanded
[t=0.0224903s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0225006s, 26380 KB] g=56, 224 evaluated, 223 expanded
[t=0.0226044s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0226154s, 26380 KB] g=57, 228 evaluated, 227 expanded
[t=0.0227526s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0227634s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0227721s, 26380 KB] g=58, 234 evaluated, 233 expanded
[t=0.0228032s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0228125s, 26380 KB] g=59, 235 evaluated, 234 expanded
[t=0.0229526s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0229649s, 26380 KB] g=60, 241 evaluated, 240 expanded
[t=0.0229954s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0230062s, 26380 KB] g=61, 242 evaluated, 241 expanded
[t=0.0231856s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0231957s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0232037s, 26380 KB] g=64, 250 evaluated, 249 expanded
[t=0.0232346s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0232434s, 26380 KB] g=65, 251 evaluated, 250 expanded
[t=0.0232733s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0232818s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0232896s, 26380 KB] g=66, 252 evaluated, 251 expanded
[t=0.0243389s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0243529s, 26380 KB] g=78, 300 evaluated, 299 expanded
[t=0.0245457s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0245568s, 26380 KB] g=82, 309 evaluated, 308 expanded
[t=0.0246382s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0246563s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0246659s, 26380 KB] g=84, 312 evaluated, 311 expanded
[t=0.0253957s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0254102s, 26380 KB] g=99, 347 evaluated, 346 expanded
[t=0.0254398s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0254494s, 26380 KB] g=100, 348 evaluated, 347 expanded
[t=0.0255249s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0255346s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0255443s, 26380 KB] g=102, 352 evaluated, 351 expanded
[t=0.0255886s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0255977s, 26380 KB] g=102, 354 evaluated, 353 expanded
[t=0.0256533s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0256624s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0256776s, 26380 KB] g=104, 357 evaluated, 356 expanded
[t=0.025742s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0257514s, 26380 KB] g=108, 361 evaluated, 360 expanded
[t=0.0257685s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0257773s, 26380 KB] g=109, 362 evaluated, 361 expanded
[t=0.025792s, 26380 KB] Solution found!
[t=0.025815s, 26380 KB] Actual search time: 0.00936911s
unstack b3 b5 (1)
put-down b3 (1)
unstack b5 b16 (1)
put-down b5 (1)
unstack b10 b8 (1)
put-down b10 (1)
unstack b16 b1 (1)
put-down b16 (1)
unstack b1 b7 (1)
stack b1 b10 (1)
unstack b8 b9 (1)
stack b8 b1 (1)
unstack b7 b13 (1)
put-down b7 (1)
unstack b13 b18 (1)
stack b13 b9 (1)
unstack b18 b4 (1)
put-down b18 (1)
unstack b4 b14 (1)
put-down b4 (1)
unstack b14 b12 (1)
stack b14 b13 (1)
unstack b12 b20 (1)
put-down b12 (1)
unstack b20 b2 (1)
stack b20 b8 (1)
pick-up b2 (1)
stack b2 b7 (1)
pick-up b18 (1)
stack b18 b4 (1)
unstack b2 b7 (1)
put-down b2 (1)
pick-up b7 (1)
stack b7 b20 (1)
pick-up b2 (1)
stack b2 b7 (1)
unstack b14 b13 (1)
put-down b14 (1)
unstack b13 b9 (1)
put-down b13 (1)
unstack b9 b11 (1)
put-down b9 (1)
unstack b11 b6 (1)
put-down b11 (1)
unstack b6 b21 (1)
stack b6 b12 (1)
pick-up b13 (1)
stack b13 b9 (1)
unstack b21 b17 (1)
stack b21 b6 (1)
unstack b17 b19 (1)
stack b17 b16 (1)
pick-up b14 (1)
stack b14 b13 (1)
unstack b19 b15 (1)
stack b19 b14 (1)
pick-up b15 (1)
stack b15 b5 (1)
pick-up b3 (1)
stack b3 b21 (1)
unstack b17 b16 (1)
put-down b17 (1)
pick-up b16 (1)
stack b16 b15 (1)
pick-up b17 (1)
stack b17 b16 (1)
unstack b19 b14 (1)
put-down b19 (1)
unstack b14 b13 (1)
put-down b14 (1)
pick-up b19 (1)
stack b19 b14 (1)
unstack b13 b9 (1)
put-down b13 (1)
pick-up b9 (1)
stack b9 b11 (1)
pick-up b13 (1)
stack b13 b9 (1)
unstack b19 b14 (1)
put-down b19 (1)
pick-up b14 (1)
stack b14 b13 (1)
pick-up b19 (1)
stack b19 b14 (1)
unstack b2 b7 (1)
put-down b2 (1)
unstack b7 b20 (1)
put-down b7 (1)
pick-up b2 (1)
stack b2 b7 (1)
unstack b20 b8 (1)
put-down b20 (1)
unstack b8 b1 (1)
put-down b8 (1)
unstack b1 b10 (1)
put-down b1 (1)
pick-up b10 (1)
stack b10 b18 (1)
pick-up b1 (1)
stack b1 b10 (1)
pick-up b8 (1)
stack b8 b1 (1)
pick-up b20 (1)
stack b20 b8 (1)
unstack b2 b7 (1)
put-down b2 (1)
pick-up b7 (1)
stack b7 b20 (1)
pick-up b2 (1)
stack b2 b7 (1)
[t=0.025825s, 26380 KB] Plan length: 110 step(s).
[t=0.025825s, 26380 KB] Plan cost: 110
[t=0.025825s, 26380 KB] Expanded 362 state(s).
[t=0.025825s, 26380 KB] Reopened 0 state(s).
[t=0.025825s, 26380 KB] Evaluated 363 state(s).
[t=0.025825s, 26380 KB] Evaluations: 726
[t=0.025825s, 26380 KB] Generated 3000 state(s).
[t=0.025825s, 26380 KB] Dead ends: 0 state(s).
[t=0.025825s, 26380 KB] Number of registered states: 363
[t=0.025825s, 26380 KB] Int hash set load factor: 363/512 = 0.708984
[t=0.025825s, 26380 KB] Int hash set resizes: 9
[t=0.025825s, 26380 KB] Search time: 0.00941718s
[t=0.025825s, 26380 KB] Total time: 0.025825s
Solution found.
Peak memory: 26380 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.14s
