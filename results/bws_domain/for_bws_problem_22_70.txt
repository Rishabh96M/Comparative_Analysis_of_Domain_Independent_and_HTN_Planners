INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_22/bws_problem_22_70.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.010s wall-clock]
1608 relevant atoms
1078 auxiliary atoms
2686 final queue length
4669 total queue pushes
Completing instantiation... [0.020s CPU, 0.017s wall-clock]
Instantiating: [0.030s CPU, 0.029s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
23 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.006s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.026s wall-clock]
1430 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
44 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.011s wall-clock]
Reordering and filtering variables...
45 of 45 variables necessary.
23 of 45 mutex groups necessary.
968 of 968 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 45
Translator derived variables: 0
Translator facts: 552
Translator goal facts: 19
Translator mutex groups: 23
Translator total mutex groups size: 529
Translator operators: 968
Translator axioms: 0
Translator task size: 8339
Translator peak memory: 36976 KB
Writing output... [0.000s CPU, 0.005s wall-clock]
Done! [0.080s CPU, 0.088s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.0836e-05s, 24488 KB] reading input...
[t=0.00278947s, 25340 KB] done reading input!
[t=0.00376952s, 25736 KB] Initializing landmark count heuristic...
[t=0.00379974s, 25736 KB] Generating landmark graph...
[t=0.00385879s, 25736 KB] Building a landmark graph with reasonable orders.
[t=0.00391491s, 25736 KB] Initializing Exploration...
[t=0.00418845s, 26000 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0149835s, 26532 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0150714s, 26532 KB] Landmarks generation time: 0.0112343s
[t=0.0151059s, 26532 KB] Discovered 100 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0151219s, 26532 KB] 434 edges
[t=0.0151316s, 26532 KB] approx. reasonable orders
[t=0.0155033s, 26532 KB] approx. obedient reasonable orders
[t=0.0155293s, 26532 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0155561s, 26532 KB] Landmarks generation time: 0.0117546s
[t=0.0155653s, 26532 KB] Discovered 100 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.015573s, 26532 KB] 440 edges
[t=0.0155816s, 26532 KB] Landmark graph generation time: 0.0117889s
[t=0.01559s, 26532 KB] Landmark graph contains 100 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0155981s, 26532 KB] Landmark graph contains 440 orderings.
[t=0.0159486s, 26532 KB] Simplifying 3828 unary operators... done! [2904 unary operators]
[t=0.0168808s, 26532 KB] time to simplify: 0.000995837s
[t=0.017005s, 26532 KB] Initializing additive heuristic...
[t=0.0170192s, 26532 KB] Initializing FF heuristic...
[t=0.0170686s, 26532 KB] Building successor generator...done!
[t=0.0172548s, 26532 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0172635s, 26532 KB] time for successor generation creation: 0.00015495s
[t=0.0172756s, 26532 KB] Variables: 45
[t=0.0172837s, 26532 KB] FactPairs: 552
[t=0.0172916s, 26532 KB] Bytes per state: 20
[t=0.0173755s, 26532 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0174068s, 26532 KB] 45 initial landmarks, 19 goal landmarks
[t=0.0174563s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0174663s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0174748s, 26532 KB] g=0, 1 evaluated, 0 expanded
[t=0.0174874s, 26532 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0174959s, 26532 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0175858s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0175949s, 26532 KB] g=1, 4 evaluated, 3 expanded
[t=0.0178277s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0178368s, 26532 KB] g=3, 13 evaluated, 12 expanded
[t=0.0180161s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0180252s, 26532 KB] g=6, 20 evaluated, 19 expanded
[t=0.0182981s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0183078s, 26532 KB] g=8, 31 evaluated, 30 expanded
[t=0.0185631s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.018576s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.018587s, 26532 KB] g=10, 40 evaluated, 39 expanded
[t=0.0187762s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0187871s, 26532 KB] g=12, 47 evaluated, 46 expanded
[t=0.0190461s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0190553s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.019064s, 26532 KB] g=14, 57 evaluated, 56 expanded
[t=0.0192721s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0192813s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0192893s, 26532 KB] g=16, 65 evaluated, 64 expanded
[t=0.019473s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0194851s, 26532 KB] g=18, 72 evaluated, 71 expanded
[t=0.0196944s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0197033s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0197113s, 26532 KB] g=20, 80 evaluated, 79 expanded
[t=0.0199144s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0199232s, 26532 KB] g=22, 88 evaluated, 87 expanded
[t=0.0199577s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0199666s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0199743s, 26532 KB] g=22, 89 evaluated, 88 expanded
[t=0.0201497s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0201585s, 26532 KB] g=24, 96 evaluated, 95 expanded
[t=0.0202405s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0202494s, 26532 KB] g=24, 99 evaluated, 98 expanded
[t=0.0205204s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0205298s, 26532 KB] g=26, 110 evaluated, 109 expanded
[t=0.0207302s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0207394s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0207474s, 26532 KB] g=28, 118 evaluated, 117 expanded
[t=0.0209235s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0209324s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0209405s, 26532 KB] g=30, 125 evaluated, 124 expanded
[t=0.0212239s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0212346s, 26532 KB] g=33, 136 evaluated, 135 expanded
[t=0.0212769s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.021287s, 26532 KB] g=34, 137 evaluated, 136 expanded
[t=0.0214816s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0214915s, 26532 KB] g=36, 144 evaluated, 143 expanded
[t=0.0215553s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.021565s, 26532 KB] g=36, 146 evaluated, 145 expanded
[t=0.0218402s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0218501s, 26532 KB] g=38, 157 evaluated, 156 expanded
[t=0.0221102s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0221213s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0221322s, 26532 KB] g=40, 167 evaluated, 166 expanded
[t=0.0222933s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0223031s, 26532 KB] g=42, 173 evaluated, 172 expanded
[t=0.0223416s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0223518s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0223621s, 26532 KB] g=42, 174 evaluated, 173 expanded
[t=0.0225547s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.022571s, 26532 KB] g=44, 181 evaluated, 180 expanded
[t=0.0229334s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0229446s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0229557s, 26532 KB] g=46, 195 evaluated, 194 expanded
[t=0.023162s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0231725s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0231831s, 26532 KB] g=48, 203 evaluated, 202 expanded
[t=0.0233847s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0233977s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0234089s, 26532 KB] g=50, 211 evaluated, 210 expanded
[t=0.0236143s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0236323s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.023644s, 26532 KB] g=52, 219 evaluated, 218 expanded
[t=0.0238266s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0238461s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0238576s, 26532 KB] g=54, 226 evaluated, 225 expanded
[t=0.0238972s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0239092s, 26532 KB] g=55, 227 evaluated, 226 expanded
[t=0.0241617s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0241754s, 26532 KB] g=58, 237 evaluated, 236 expanded
[t=0.0243091s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0243218s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0243329s, 26532 KB] g=60, 242 evaluated, 241 expanded
[t=0.0246926s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0247184s, 26532 KB] g=64, 255 evaluated, 254 expanded
[t=0.0248433s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0248553s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0248662s, 26532 KB] g=66, 259 evaluated, 258 expanded
[t=0.0285433s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0286336s, 26532 KB] g=82, 409 evaluated, 408 expanded
[t=0.0289779s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0289894s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0290003s, 26532 KB] g=88, 423 evaluated, 422 expanded
[t=0.0340041s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0340288s, 26532 KB] g=106, 631 evaluated, 630 expanded
[t=0.0341343s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0341447s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0341551s, 26532 KB] g=108, 635 evaluated, 634 expanded
[t=0.0349049s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0349182s, 26532 KB] g=116, 667 evaluated, 666 expanded
[t=0.035031s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0350553s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0350682s, 26532 KB] g=118, 670 evaluated, 669 expanded
[t=0.0485827s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0486475s, 26532 KB] g=160, 1299 evaluated, 1298 expanded
[t=0.049243s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0492542s, 26532 KB] g=168, 1330 evaluated, 1329 expanded
[t=0.0494288s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0494379s, 26532 KB] g=172, 1339 evaluated, 1338 expanded
[t=0.0495013s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0495104s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0495185s, 26532 KB] g=174, 1342 evaluated, 1341 expanded
[t=0.0501282s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0501402s, 26532 KB] g=190, 1380 evaluated, 1379 expanded
[t=0.0502911s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0503044s, 26532 KB] g=198, 1391 evaluated, 1390 expanded
[t=0.0503363s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0503484s, 26532 KB] g=198, 1392 evaluated, 1391 expanded
[t=0.0503733s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0503859s, 26532 KB] g=199, 1393 evaluated, 1392 expanded
[t=0.0504123s, 26532 KB] Solution found!
[t=0.0504305s, 26532 KB] Actual search time: 0.0330247s
unstack b13 b3 (1)
put-down b13 (1)
unstack b8 b9 (1)
put-down b8 (1)
unstack b15 b4 (1)
put-down b15 (1)
unstack b3 b22 (1)
put-down b3 (1)
unstack b22 b11 (1)
stack b22 b13 (1)
unstack b11 b14 (1)
put-down b11 (1)
unstack b14 b19 (1)
stack b14 b22 (1)
pick-up b19 (1)
stack b19 b4 (1)
unstack b9 b20 (1)
put-down b9 (1)
unstack b20 b17 (1)
stack b20 b3 (1)
pick-up b15 (1)
stack b15 b20 (1)
unstack b17 b7 (1)
put-down b17 (1)
unstack b7 b18 (1)
stack b7 b15 (1)
pick-up b8 (1)
stack b8 b17 (1)
pick-up b18 (1)
stack b18 b7 (1)
unstack b19 b4 (1)
put-down b19 (1)
unstack b4 b1 (1)
stack b4 b14 (1)
unstack b1 b2 (1)
stack b1 b9 (1)
unstack b2 b6 (1)
put-down b2 (1)
pick-up b19 (1)
stack b19 b4 (1)
unstack b6 b12 (1)
stack b6 b11 (1)
unstack b12 b16 (1)
put-down b12 (1)
unstack b16 b10 (1)
stack b16 b2 (1)
unstack b10 b21 (1)
put-down b10 (1)
unstack b21 b5 (1)
put-down b21 (1)
pick-up b12 (1)
stack b12 b16 (1)
pick-up b5 (1)
stack b5 b18 (1)
unstack b1 b9 (1)
put-down b1 (1)
pick-up b9 (1)
stack b9 b6 (1)
pick-up b1 (1)
stack b1 b9 (1)
unstack b8 b17 (1)
put-down b8 (1)
pick-up b17 (1)
stack b17 b1 (1)
pick-up b8 (1)
stack b8 b17 (1)
unstack b19 b4 (1)
put-down b19 (1)
unstack b4 b14 (1)
put-down b4 (1)
pick-up b19 (1)
stack b19 b4 (1)
unstack b14 b22 (1)
put-down b14 (1)
unstack b22 b13 (1)
put-down b22 (1)
pick-up b13 (1)
stack b13 b5 (1)
pick-up b22 (1)
stack b22 b13 (1)
pick-up b14 (1)
stack b14 b22 (1)
unstack b19 b4 (1)
put-down b19 (1)
pick-up b4 (1)
stack b4 b14 (1)
pick-up b19 (1)
stack b19 b4 (1)
unstack b8 b17 (1)
put-down b8 (1)
unstack b17 b1 (1)
put-down b17 (1)
unstack b1 b9 (1)
put-down b1 (1)
pick-up b17 (1)
stack b17 b1 (1)
pick-up b8 (1)
stack b8 b17 (1)
unstack b9 b6 (1)
put-down b9 (1)
unstack b6 b11 (1)
put-down b6 (1)
pick-up b11 (1)
stack b11 b12 (1)
pick-up b6 (1)
stack b6 b11 (1)
pick-up b9 (1)
stack b9 b6 (1)
unstack b8 b17 (1)
put-down b8 (1)
unstack b17 b1 (1)
put-down b17 (1)
pick-up b1 (1)
stack b1 b9 (1)
pick-up b17 (1)
stack b17 b1 (1)
pick-up b8 (1)
stack b8 b17 (1)
unstack b19 b4 (1)
put-down b19 (1)
unstack b4 b14 (1)
put-down b4 (1)
pick-up b19 (1)
stack b19 b4 (1)
unstack b14 b22 (1)
put-down b14 (1)
unstack b22 b13 (1)
put-down b22 (1)
unstack b13 b5 (1)
put-down b13 (1)
pick-up b22 (1)
stack b22 b13 (1)
pick-up b14 (1)
stack b14 b22 (1)
unstack b19 b4 (1)
put-down b19 (1)
pick-up b4 (1)
stack b4 b14 (1)
pick-up b19 (1)
stack b19 b4 (1)
unstack b5 b18 (1)
put-down b5 (1)
unstack b18 b7 (1)
put-down b18 (1)
unstack b7 b15 (1)
put-down b7 (1)
pick-up b18 (1)
stack b18 b7 (1)
pick-up b5 (1)
stack b5 b18 (1)
unstack b15 b20 (1)
put-down b15 (1)
unstack b20 b3 (1)
put-down b20 (1)
pick-up b3 (1)
stack b3 b10 (1)
pick-up b20 (1)
stack b20 b3 (1)
pick-up b15 (1)
stack b15 b20 (1)
unstack b5 b18 (1)
put-down b5 (1)
unstack b18 b7 (1)
put-down b18 (1)
pick-up b5 (1)
stack b5 b18 (1)
pick-up b7 (1)
stack b7 b15 (1)
unstack b5 b18 (1)
put-down b5 (1)
pick-up b18 (1)
stack b18 b7 (1)
pick-up b5 (1)
stack b5 b18 (1)
unstack b19 b4 (1)
put-down b19 (1)
unstack b4 b14 (1)
put-down b4 (1)
unstack b14 b22 (1)
put-down b14 (1)
pick-up b4 (1)
stack b4 b14 (1)
pick-up b19 (1)
stack b19 b4 (1)
unstack b22 b13 (1)
put-down b22 (1)
pick-up b13 (1)
stack b13 b5 (1)
pick-up b22 (1)
stack b22 b13 (1)
unstack b19 b4 (1)
put-down b19 (1)
unstack b4 b14 (1)
put-down b4 (1)
pick-up b14 (1)
stack b14 b22 (1)
pick-up b4 (1)
stack b4 b14 (1)
pick-up b19 (1)
stack b19 b4 (1)
[t=0.0504441s, 26532 KB] Plan length: 200 step(s).
[t=0.0504441s, 26532 KB] Plan cost: 200
[t=0.0504441s, 26532 KB] Expanded 1393 state(s).
[t=0.0504441s, 26532 KB] Reopened 0 state(s).
[t=0.0504441s, 26532 KB] Evaluated 1394 state(s).
[t=0.0504441s, 26532 KB] Evaluations: 2788
[t=0.0504441s, 26532 KB] Generated 10944 state(s).
[t=0.0504441s, 26532 KB] Dead ends: 0 state(s).
[t=0.0504441s, 26532 KB] Number of registered states: 1394
[t=0.0504441s, 26532 KB] Int hash set load factor: 1394/2048 = 0.680664
[t=0.0504441s, 26532 KB] Int hash set resizes: 11
[t=0.0504441s, 26532 KB] Search time: 0.0330689s
[t=0.0504441s, 26532 KB] Total time: 0.0504441s
Solution found.
Peak memory: 26532 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.19s
