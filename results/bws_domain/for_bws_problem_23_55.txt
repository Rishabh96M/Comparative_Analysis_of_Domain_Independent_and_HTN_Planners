INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_23/bws_problem_23_55.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.011s wall-clock]
1750 relevant atoms
1173 auxiliary atoms
2923 final queue length
5091 total queue pushes
Completing instantiation... [0.020s CPU, 0.018s wall-clock]
Instantiating: [0.030s CPU, 0.031s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.003s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
24 uncovered facts
Choosing groups: [0.010s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.008s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.026s wall-clock]
1564 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
46 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.013s wall-clock]
Reordering and filtering variables...
47 of 47 variables necessary.
24 of 47 mutex groups necessary.
1058 of 1058 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 47
Translator derived variables: 0
Translator facts: 600
Translator goal facts: 16
Translator mutex groups: 24
Translator total mutex groups size: 576
Translator operators: 1058
Translator axioms: 0
Translator task size: 9105
Translator peak memory: 37232 KB
Writing output... [0.000s CPU, 0.006s wall-clock]
Done! [0.090s CPU, 0.095s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=1.9539e-05s, 24488 KB] reading input...
[t=0.00320785s, 25428 KB] done reading input!
[t=0.00423455s, 25824 KB] Initializing landmark count heuristic...
[t=0.00427928s, 25824 KB] Generating landmark graph...
[t=0.00434591s, 25824 KB] Building a landmark graph with reasonable orders.
[t=0.00441202s, 25956 KB] Initializing Exploration...
[t=0.00479304s, 26256 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0151865s, 26652 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0152642s, 26652 KB] Landmarks generation time: 0.0109184s
[t=0.015277s, 26652 KB] Discovered 87 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0152938s, 26652 KB] 267 edges
[t=0.0153034s, 26652 KB] approx. reasonable orders
[t=0.0157744s, 26652 KB] approx. obedient reasonable orders
[t=0.0157975s, 26652 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0158068s, 26652 KB] Landmarks generation time: 0.0115251s
[t=0.0158165s, 26652 KB] Discovered 87 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0158246s, 26652 KB] 273 edges
[t=0.0158333s, 26652 KB] Landmark graph generation time: 0.0115612s
[t=0.0158421s, 26652 KB] Landmark graph contains 87 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0158663s, 26652 KB] Landmark graph contains 273 orderings.
[t=0.0162406s, 26652 KB] Simplifying 4186 unary operators... done! [3174 unary operators]
[t=0.0172128s, 26652 KB] time to simplify: 0.00103687s
[t=0.0173566s, 26652 KB] Initializing additive heuristic...
[t=0.0173716s, 26652 KB] Initializing FF heuristic...
[t=0.0174271s, 26652 KB] Building successor generator...done!
[t=0.01772s, 26652 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0177289s, 26652 KB] time for successor generation creation: 0.000247827s
[t=0.017742s, 26652 KB] Variables: 47
[t=0.0177505s, 26652 KB] FactPairs: 600
[t=0.0177586s, 26652 KB] Bytes per state: 20
[t=0.0178972s, 26652 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0179341s, 26652 KB] 42 initial landmarks, 16 goal landmarks
[t=0.0180108s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0180207s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0180296s, 26652 KB] g=0, 1 evaluated, 0 expanded
[t=0.0180462s, 26652 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.018056s, 26652 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.018258s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0182708s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0182788s, 26652 KB] g=2, 8 evaluated, 7 expanded
[t=0.018465s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0184785s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0185484s, 26652 KB] g=4, 15 evaluated, 14 expanded
[t=0.0187684s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0187795s, 26652 KB] g=6, 22 evaluated, 21 expanded
[t=0.0189643s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0189745s, 26652 KB] g=6, 29 evaluated, 28 expanded
[t=0.0191074s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0191162s, 26652 KB] g=7, 34 evaluated, 33 expanded
[t=0.0191762s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0191856s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0191939s, 26652 KB] g=8, 36 evaluated, 35 expanded
[t=0.0193579s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0193705s, 26652 KB] g=9, 42 evaluated, 41 expanded
[t=0.0196616s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.019671s, 26652 KB] g=10, 53 evaluated, 52 expanded
[t=0.019859s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0198683s, 26652 KB] g=12, 60 evaluated, 59 expanded
[t=0.0203735s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0203913s, 26652 KB] g=14, 79 evaluated, 78 expanded
[t=0.0208566s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0208683s, 26652 KB] g=16, 97 evaluated, 96 expanded
[t=0.0213683s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.021381s, 26652 KB] g=14, 116 evaluated, 115 expanded
[t=0.021473s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0214836s, 26652 KB] g=18, 119 evaluated, 118 expanded
[t=0.0218393s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0218521s, 26652 KB] g=16, 132 evaluated, 131 expanded
[t=0.0220976s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0221108s, 26652 KB] g=20, 141 evaluated, 140 expanded
[t=0.0224051s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.022421s, 26652 KB] g=18, 152 evaluated, 151 expanded
[t=0.0228276s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0228476s, 26652 KB] g=22, 163 evaluated, 162 expanded
[t=0.0230524s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0230638s, 26652 KB] g=20, 170 evaluated, 169 expanded
[t=0.0234816s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0234914s, 26652 KB] g=24, 186 evaluated, 185 expanded
[t=0.023527s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0235355s, 26652 KB] g=22, 187 evaluated, 186 expanded
[t=0.0239721s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0239923s, 26652 KB] g=24, 201 evaluated, 200 expanded
[t=0.0241192s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0241311s, 26652 KB] g=24, 204 evaluated, 203 expanded
[t=0.0244737s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0244851s, 26652 KB] g=26, 217 evaluated, 216 expanded
[t=0.0245481s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0245575s, 26652 KB] g=26, 219 evaluated, 218 expanded
[t=0.0248225s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0248343s, 26652 KB] g=28, 229 evaluated, 228 expanded
[t=0.0250434s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0250548s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0250632s, 26652 KB] g=30, 237 evaluated, 236 expanded
[t=0.0252714s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0252853s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0252942s, 26652 KB] g=32, 245 evaluated, 244 expanded
[t=0.025456s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0254699s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0254784s, 26652 KB] g=34, 251 evaluated, 250 expanded
[t=0.025621s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0256675s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0256891s, 26652 KB] g=36, 256 evaluated, 255 expanded
[t=0.0258926s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0259022s, 26652 KB] g=39, 263 evaluated, 262 expanded
[t=0.0259381s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0259467s, 26652 KB] g=40, 264 evaluated, 263 expanded
[t=0.0260598s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0260694s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0260773s, 26652 KB] g=42, 268 evaluated, 267 expanded
[t=0.0263674s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0263768s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0263852s, 26652 KB] g=46, 279 evaluated, 278 expanded
[t=0.0265675s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0266255s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0266613s, 26652 KB] g=48, 283 evaluated, 282 expanded
[t=0.0276389s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.02765s, 26652 KB] g=58, 321 evaluated, 320 expanded
[t=0.0277588s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0277692s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0277773s, 26652 KB] g=60, 325 evaluated, 324 expanded
[t=0.028005s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0280144s, 26652 KB] g=64, 334 evaluated, 333 expanded
[t=0.0280965s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0281061s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0281156s, 26652 KB] g=66, 337 evaluated, 336 expanded
[t=0.0286283s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0286396s, 26652 KB] g=80, 361 evaluated, 360 expanded
[t=0.0287025s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0287117s, 26652 KB] g=80, 363 evaluated, 362 expanded
[t=0.0287714s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0287799s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0287879s, 26652 KB] g=82, 366 evaluated, 365 expanded
[t=0.0288564s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0288653s, 26652 KB] g=86, 370 evaluated, 369 expanded
[t=0.0288835s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0288921s, 26652 KB] g=87, 371 evaluated, 370 expanded
[t=0.0289071s, 26652 KB] Solution found!
[t=0.0289183s, 26652 KB] Actual search time: 0.0109808s
unstack b12 b15 (1)
put-down b12 (1)
unstack b11 b21 (1)
stack b11 b12 (1)
unstack b16 b1 (1)
put-down b16 (1)
unstack b1 b6 (1)
stack b1 b11 (1)
unstack b6 b13 (1)
put-down b6 (1)
unstack b13 b17 (1)
stack b13 b16 (1)
unstack b21 b7 (1)
stack b21 b13 (1)
unstack b7 b22 (1)
put-down b7 (1)
unstack b17 b18 (1)
stack b17 b7 (1)
unstack b20 b19 (1)
stack b20 b22 (1)
unstack b19 b3 (1)
stack b19 b21 (1)
pick-up b5 (1)
stack b5 b15 (1)
unstack b3 b9 (1)
put-down b3 (1)
unstack b9 b23 (1)
put-down b9 (1)
unstack b23 b2 (1)
put-down b23 (1)
unstack b2 b10 (1)
stack b2 b20 (1)
pick-up b6 (1)
stack b6 b3 (1)
pick-up b8 (1)
stack b8 b10 (1)
unstack b5 b15 (1)
put-down b5 (1)
unstack b15 b14 (1)
stack b15 b2 (1)
pick-up b5 (1)
stack b5 b15 (1)
unstack b6 b3 (1)
put-down b6 (1)
pick-up b3 (1)
stack b3 b14 (1)
pick-up b6 (1)
stack b6 b3 (1)
unstack b19 b21 (1)
put-down b19 (1)
unstack b21 b13 (1)
put-down b21 (1)
pick-up b19 (1)
stack b19 b21 (1)
unstack b13 b16 (1)
put-down b13 (1)
pick-up b16 (1)
stack b16 b23 (1)
pick-up b13 (1)
stack b13 b16 (1)
unstack b19 b21 (1)
put-down b19 (1)
pick-up b21 (1)
stack b21 b13 (1)
pick-up b19 (1)
stack b19 b21 (1)
unstack b5 b15 (1)
put-down b5 (1)
unstack b15 b2 (1)
put-down b15 (1)
pick-up b5 (1)
stack b5 b15 (1)
unstack b2 b20 (1)
put-down b2 (1)
unstack b20 b22 (1)
put-down b20 (1)
pick-up b22 (1)
stack b22 b19 (1)
pick-up b20 (1)
stack b20 b22 (1)
pick-up b2 (1)
stack b2 b20 (1)
unstack b5 b15 (1)
put-down b5 (1)
pick-up b15 (1)
stack b15 b2 (1)
pick-up b5 (1)
stack b5 b15 (1)
[t=0.0289279s, 26652 KB] Plan length: 88 step(s).
[t=0.0289279s, 26652 KB] Plan cost: 88
[t=0.0289279s, 26652 KB] Expanded 371 state(s).
[t=0.0289279s, 26652 KB] Reopened 0 state(s).
[t=0.0289279s, 26652 KB] Evaluated 372 state(s).
[t=0.0289279s, 26652 KB] Evaluations: 744
[t=0.0289279s, 26652 KB] Generated 3862 state(s).
[t=0.0289279s, 26652 KB] Dead ends: 0 state(s).
[t=0.0289279s, 26652 KB] Number of registered states: 372
[t=0.0289279s, 26652 KB] Int hash set load factor: 372/512 = 0.726562
[t=0.0289279s, 26652 KB] Int hash set resizes: 9
[t=0.0289279s, 26652 KB] Search time: 0.0110312s
[t=0.0289279s, 26652 KB] Total time: 0.0289279s
Solution found.
Peak memory: 26652 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.17s
