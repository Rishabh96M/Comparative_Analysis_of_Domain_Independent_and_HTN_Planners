INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_20/bws_problem_20_88.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.008s wall-clock]
1342 relevant atoms
900 auxiliary atoms
2242 final queue length
3886 total queue pushes
Completing instantiation... [0.010s CPU, 0.013s wall-clock]
Instantiating: [0.020s CPU, 0.023s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.010s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
21 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.006s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.020s wall-clock]
1180 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
40 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.010s wall-clock]
Reordering and filtering variables...
41 of 41 variables necessary.
21 of 41 mutex groups necessary.
800 of 800 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.005s wall-clock]
Translator variables: 41
Translator derived variables: 0
Translator facts: 462
Translator goal facts: 18
Translator mutex groups: 21
Translator total mutex groups size: 441
Translator operators: 800
Translator axioms: 0
Translator task size: 6902
Translator peak memory: 35948 KB
Writing output... [0.000s CPU, 0.004s wall-clock]
Done! [0.070s CPU, 0.072s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=1.9522e-05s, 24488 KB] reading input...
[t=0.00217947s, 25180 KB] done reading input!
[t=0.00302567s, 25444 KB] Initializing landmark count heuristic...
[t=0.00305838s, 25444 KB] Generating landmark graph...
[t=0.00313298s, 25576 KB] Building a landmark graph with reasonable orders.
[t=0.00319263s, 25576 KB] Initializing Exploration...
[t=0.00343126s, 25744 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0113035s, 26140 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0113966s, 26140 KB] Landmarks generation time: 0.00826439s
[t=0.0114282s, 26140 KB] Discovered 89 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0114479s, 26140 KB] 363 edges
[t=0.0114583s, 26140 KB] approx. reasonable orders
[t=0.0132964s, 26140 KB] approx. obedient reasonable orders
[t=0.0133399s, 26140 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0133505s, 26140 KB] Landmarks generation time: 0.0103013s
[t=0.0133782s, 26140 KB] Discovered 89 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0133863s, 26140 KB] 404 edges
[t=0.0133953s, 26140 KB] Landmark graph generation time: 0.0103443s
[t=0.013404s, 26140 KB] Landmark graph contains 89 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0134121s, 26140 KB] Landmark graph contains 404 orderings.
[t=0.0138211s, 26320 KB] Simplifying 3160 unary operators... done! [2400 unary operators]
[t=0.0146203s, 26320 KB] time to simplify: 0.000855622s
[t=0.0147293s, 26320 KB] Initializing additive heuristic...
[t=0.0147435s, 26320 KB] Initializing FF heuristic...
[t=0.0148062s, 26320 KB] Building successor generator...done!
[t=0.0149953s, 26320 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0150053s, 26320 KB] time for successor generation creation: 0.000156596s
[t=0.0150191s, 26320 KB] Variables: 41
[t=0.0150274s, 26320 KB] FactPairs: 462
[t=0.0150356s, 26320 KB] Bytes per state: 16
[t=0.0151598s, 26320 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0151957s, 26320 KB] 41 initial landmarks, 18 goal landmarks
[t=0.0152518s, 26320 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0152617s, 26320 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0152706s, 26320 KB] g=0, 1 evaluated, 0 expanded
[t=0.0152844s, 26320 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0152936s, 26320 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0153542s, 26320 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0153644s, 26320 KB] g=1, 3 evaluated, 2 expanded
[t=0.0155126s, 26320 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0155226s, 26320 KB] g=2, 9 evaluated, 8 expanded
[t=0.0155983s, 26320 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.015608s, 26320 KB] g=3, 12 evaluated, 11 expanded
[t=0.0158153s, 26320 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0158277s, 26320 KB] g=6, 21 evaluated, 20 expanded
[t=0.0159052s, 26320 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0159146s, 26320 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0159227s, 26320 KB] g=4, 24 evaluated, 23 expanded
[t=0.0159755s, 26320 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0159845s, 26320 KB] g=5, 26 evaluated, 25 expanded
[t=0.0161914s, 26320 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0162021s, 26320 KB] g=8, 35 evaluated, 34 expanded
[t=0.0163002s, 26320 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0163148s, 26320 KB] g=8, 39 evaluated, 38 expanded
[t=0.0165017s, 26320 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0165226s, 26320 KB] g=10, 45 evaluated, 44 expanded
[t=0.016893s, 26320 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0169159s, 26320 KB] g=12, 59 evaluated, 58 expanded
[t=0.0173954s, 26320 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0174266s, 26320 KB] g=14, 76 evaluated, 75 expanded
[t=0.0180133s, 26320 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0180492s, 26320 KB] g=16, 96 evaluated, 95 expanded
[t=0.0181322s, 26320 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0181426s, 26320 KB] g=12, 99 evaluated, 98 expanded
[t=0.0182395s, 26320 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0182564s, 26320 KB] g=17, 102 evaluated, 101 expanded
[t=0.0187039s, 26320 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0187182s, 26320 KB] g=20, 121 evaluated, 120 expanded
[t=0.0189412s, 26320 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0189507s, 26320 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0189587s, 26320 KB] g=22, 130 evaluated, 129 expanded
[t=0.0191777s, 26320 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0191874s, 26320 KB] g=24, 140 evaluated, 139 expanded
[t=0.0192829s, 26320 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0192921s, 26320 KB] g=24, 144 evaluated, 143 expanded
[t=0.0195098s, 26320 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0195217s, 26320 KB] g=26, 154 evaluated, 153 expanded
[t=0.0195742s, 26320 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0195832s, 26320 KB] g=27, 156 evaluated, 155 expanded
[t=0.0198446s, 26320 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0198549s, 26320 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0198626s, 26320 KB] g=28, 168 evaluated, 167 expanded
[t=0.0198932s, 26320 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0199026s, 26320 KB] g=29, 169 evaluated, 168 expanded
[t=0.0201349s, 26320 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0201452s, 26320 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0201542s, 26320 KB] g=30, 179 evaluated, 178 expanded
[t=0.0201854s, 26320 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0201943s, 26320 KB] g=31, 180 evaluated, 179 expanded
[t=0.0203738s, 26320 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0203847s, 26320 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0203929s, 26320 KB] g=32, 188 evaluated, 187 expanded
[t=0.0204467s, 26320 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0204556s, 26320 KB] g=33, 190 evaluated, 189 expanded
[t=0.0206146s, 26320 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0206264s, 26320 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0206344s, 26320 KB] g=34, 197 evaluated, 196 expanded
[t=0.0206652s, 26320 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0206847s, 26320 KB] g=35, 198 evaluated, 197 expanded
[t=0.0209585s, 26320 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0209717s, 26320 KB] g=38, 210 evaluated, 209 expanded
[t=0.0211141s, 26320 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0211251s, 26320 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0211339s, 26320 KB] g=40, 216 evaluated, 215 expanded
[t=0.0212695s, 26320 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0212795s, 26320 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.021289s, 26320 KB] g=42, 222 evaluated, 221 expanded
[t=0.0214065s, 26320 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0214173s, 26320 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0214258s, 26320 KB] g=44, 227 evaluated, 226 expanded
[t=0.0218977s, 26320 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0219126s, 26320 KB] g=50, 250 evaluated, 249 expanded
[t=0.0220415s, 26320 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0220512s, 26320 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0220591s, 26320 KB] g=52, 256 evaluated, 255 expanded
[t=0.022162s, 26320 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0221726s, 26320 KB] g=52, 260 evaluated, 259 expanded
[t=0.0222898s, 26320 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0223046s, 26320 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0223137s, 26320 KB] g=54, 265 evaluated, 264 expanded
[t=0.0234497s, 26320 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0234612s, 26320 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0234731s, 26320 KB] g=62, 327 evaluated, 326 expanded
[t=0.0235352s, 26320 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0235439s, 26320 KB] g=62, 330 evaluated, 329 expanded
[t=0.0236197s, 26320 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0236285s, 26320 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0236364s, 26320 KB] g=64, 334 evaluated, 333 expanded
[t=0.0241253s, 26320 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0241345s, 26320 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.024142s, 26320 KB] g=72, 365 evaluated, 364 expanded
[t=0.0241801s, 26320 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0241883s, 26320 KB] g=72, 367 evaluated, 366 expanded
[t=0.0242376s, 26320 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0242458s, 26320 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0242533s, 26320 KB] g=74, 370 evaluated, 369 expanded
[t=0.0244613s, 26320 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0244702s, 26320 KB] g=86, 386 evaluated, 385 expanded
[t=0.0245264s, 26320 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0245348s, 26320 KB] g=88, 390 evaluated, 389 expanded
[t=0.0245687s, 26320 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0245774s, 26320 KB] g=88, 392 evaluated, 391 expanded
[t=0.0246178s, 26320 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0246261s, 26320 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0246337s, 26320 KB] g=90, 395 evaluated, 394 expanded
[t=0.0246802s, 26320 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0246884s, 26320 KB] g=94, 399 evaluated, 398 expanded
[t=0.0247031s, 26320 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0247111s, 26320 KB] g=95, 400 evaluated, 399 expanded
[t=0.0247242s, 26320 KB] Solution found!
[t=0.0247342s, 26320 KB] Actual search time: 0.00953506s
unstack b16 b17 (1)
put-down b16 (1)
unstack b2 b7 (1)
stack b2 b16 (1)
unstack b19 b10 (1)
put-down b19 (1)
unstack b10 b6 (1)
put-down b10 (1)
unstack b17 b3 (1)
put-down b17 (1)
unstack b3 b9 (1)
put-down b3 (1)
unstack b6 b8 (1)
put-down b6 (1)
unstack b9 b12 (1)
stack b9 b3 (1)
unstack b12 b20 (1)
put-down b12 (1)
pick-up b19 (1)
stack b19 b9 (1)
unstack b8 b14 (1)
put-down b8 (1)
pick-up b12 (1)
stack b12 b14 (1)
pick-up b10 (1)
stack b10 b8 (1)
pick-up b17 (1)
stack b17 b10 (1)
unstack b20 b5 (1)
stack b20 b4 (1)
unstack b5 b1 (1)
stack b5 b6 (1)
pick-up b1 (1)
stack b1 b2 (1)
unstack b12 b14 (1)
put-down b12 (1)
unstack b14 b11 (1)
stack b14 b20 (1)
unstack b11 b18 (1)
stack b11 b7 (1)
pick-up b12 (1)
stack b12 b14 (1)
pick-up b18 (1)
stack b18 b5 (1)
unstack b11 b7 (1)
put-down b11 (1)
unstack b7 b15 (1)
put-down b7 (1)
pick-up b15 (1)
stack b15 b17 (1)
pick-up b7 (1)
stack b7 b15 (1)
pick-up b11 (1)
stack b11 b7 (1)
unstack b18 b5 (1)
put-down b18 (1)
unstack b5 b6 (1)
put-down b5 (1)
pick-up b6 (1)
stack b6 b11 (1)
pick-up b5 (1)
stack b5 b6 (1)
pick-up b18 (1)
stack b18 b5 (1)
unstack b19 b9 (1)
put-down b19 (1)
unstack b9 b3 (1)
put-down b9 (1)
pick-up b3 (1)
stack b3 b18 (1)
pick-up b9 (1)
stack b9 b3 (1)
pick-up b19 (1)
stack b19 b9 (1)
unstack b12 b14 (1)
put-down b12 (1)
unstack b14 b20 (1)
put-down b14 (1)
pick-up b12 (1)
stack b12 b14 (1)
unstack b20 b4 (1)
put-down b20 (1)
unstack b4 b13 (1)
put-down b4 (1)
pick-up b13 (1)
stack b13 b1 (1)
pick-up b4 (1)
stack b4 b13 (1)
pick-up b20 (1)
stack b20 b4 (1)
unstack b12 b14 (1)
put-down b12 (1)
pick-up b14 (1)
stack b14 b20 (1)
pick-up b12 (1)
stack b12 b14 (1)
[t=0.024743s, 26320 KB] Plan length: 96 step(s).
[t=0.024743s, 26320 KB] Plan cost: 96
[t=0.024743s, 26320 KB] Expanded 400 state(s).
[t=0.024743s, 26320 KB] Reopened 0 state(s).
[t=0.024743s, 26320 KB] Evaluated 401 state(s).
[t=0.024743s, 26320 KB] Evaluations: 802
[t=0.024743s, 26320 KB] Generated 3109 state(s).
[t=0.024743s, 26320 KB] Dead ends: 0 state(s).
[t=0.024743s, 26320 KB] Number of registered states: 401
[t=0.024743s, 26320 KB] Int hash set load factor: 401/512 = 0.783203
[t=0.024743s, 26320 KB] Int hash set resizes: 9
[t=0.024743s, 26320 KB] Search time: 0.00958359s
[t=0.024743s, 26320 KB] Total time: 0.024743s
Solution found.
Peak memory: 26320 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.15s
