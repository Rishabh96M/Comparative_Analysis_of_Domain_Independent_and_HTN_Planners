INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_22/bws_problem_22_23.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.010s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.012s wall-clock]
1608 relevant atoms
1078 auxiliary atoms
2686 final queue length
4672 total queue pushes
Completing instantiation... [0.010s CPU, 0.018s wall-clock]
Instantiating: [0.030s CPU, 0.032s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
23 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.006s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.026s wall-clock]
1430 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
44 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.014s wall-clock]
Reordering and filtering variables...
45 of 45 variables necessary.
23 of 45 mutex groups necessary.
968 of 968 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.007s wall-clock]
Translator variables: 45
Translator derived variables: 0
Translator facts: 552
Translator goal facts: 19
Translator mutex groups: 23
Translator total mutex groups size: 529
Translator operators: 968
Translator axioms: 0
Translator task size: 8339
Translator peak memory: 36972 KB
Writing output... [0.000s CPU, 0.005s wall-clock]
Done! [0.090s CPU, 0.094s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=1.9163e-05s, 24488 KB] reading input...
[t=0.00271246s, 25340 KB] done reading input!
[t=0.00380848s, 25736 KB] Initializing landmark count heuristic...
[t=0.00384055s, 25736 KB] Generating landmark graph...
[t=0.00390324s, 25736 KB] Building a landmark graph with reasonable orders.
[t=0.0039746s, 25736 KB] Initializing Exploration...
[t=0.00426995s, 26000 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0135923s, 26396 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0136524s, 26396 KB] Landmarks generation time: 0.00974985s
[t=0.0136662s, 26396 KB] Discovered 93 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0136814s, 26396 KB] 257 edges
[t=0.0136907s, 26396 KB] approx. reasonable orders
[t=0.0137008s, 26396 KB] approx. obedient reasonable orders
[t=0.0137296s, 26396 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0137424s, 26396 KB] Landmarks generation time: 0.00990205s
[t=0.0137553s, 26396 KB] Discovered 93 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.013764s, 26396 KB] 257 edges
[t=0.0137748s, 26396 KB] Landmark graph generation time: 0.00994391s
[t=0.0137863s, 26396 KB] Landmark graph contains 93 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0137973s, 26396 KB] Landmark graph contains 257 orderings.
[t=0.0141979s, 26396 KB] Simplifying 3828 unary operators... done! [2904 unary operators]
[t=0.0150886s, 26528 KB] time to simplify: 0.000953235s
[t=0.0152123s, 26528 KB] Initializing additive heuristic...
[t=0.0152266s, 26528 KB] Initializing FF heuristic...
[t=0.0152784s, 26528 KB] Building successor generator...done!
[t=0.0155052s, 26528 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0155154s, 26528 KB] time for successor generation creation: 0.000186872s
[t=0.0155286s, 26528 KB] Variables: 45
[t=0.0155371s, 26528 KB] FactPairs: 552
[t=0.0155452s, 26528 KB] Bytes per state: 20
[t=0.0156438s, 26528 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0156788s, 26528 KB] 45 initial landmarks, 19 goal landmarks
[t=0.0157453s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0157583s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0157673s, 26528 KB] g=0, 1 evaluated, 0 expanded
[t=0.0157843s, 26528 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0157936s, 26528 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0159994s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0160134s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0160225s, 26528 KB] g=2, 8 evaluated, 7 expanded
[t=0.0161901s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0162078s, 26528 KB] g=3, 14 evaluated, 13 expanded
[t=0.0162528s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0162636s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0162721s, 26528 KB] g=4, 15 evaluated, 14 expanded
[t=0.0164386s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0164515s, 26528 KB] g=6, 21 evaluated, 20 expanded
[t=0.0164899s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0165006s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0165093s, 26528 KB] g=6, 22 evaluated, 21 expanded
[t=0.0166855s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0167091s, 26528 KB] g=8, 28 evaluated, 27 expanded
[t=0.0167447s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0167558s, 26528 KB] g=8, 29 evaluated, 28 expanded
[t=0.0170821s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0171078s, 26528 KB] g=10, 42 evaluated, 41 expanded
[t=0.0171674s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0171966s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0172065s, 26528 KB] g=10, 44 evaluated, 43 expanded
[t=0.0173922s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0174054s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0174143s, 26528 KB] g=12, 51 evaluated, 50 expanded
[t=0.0175769s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0176072s, 26528 KB] g=14, 57 evaluated, 56 expanded
[t=0.0176689s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0176801s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0176891s, 26528 KB] g=14, 59 evaluated, 58 expanded
[t=0.0178616s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0178864s, 26528 KB] g=16, 65 evaluated, 64 expanded
[t=0.0179244s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0179346s, 26528 KB] g=16, 66 evaluated, 65 expanded
[t=0.0181891s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0182006s, 26528 KB] g=18, 76 evaluated, 75 expanded
[t=0.0183341s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0183467s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0183559s, 26528 KB] g=20, 81 evaluated, 80 expanded
[t=0.0190682s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0190834s, 26528 KB] g=26, 109 evaluated, 108 expanded
[t=0.0194025s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0194314s, 26528 KB] g=28, 119 evaluated, 118 expanded
[t=0.0195983s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0196294s, 26528 KB] g=28, 123 evaluated, 122 expanded
[t=0.0199651s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0199849s, 26528 KB] g=30, 134 evaluated, 133 expanded
[t=0.0200767s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0200921s, 26528 KB] g=30, 137 evaluated, 136 expanded
[t=0.0203403s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0203505s, 26528 KB] g=32, 147 evaluated, 146 expanded
[t=0.0205036s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0205131s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0205214s, 26528 KB] g=34, 153 evaluated, 152 expanded
[t=0.020841s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0208539s, 26528 KB] g=38, 166 evaluated, 165 expanded
[t=0.0209843s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0209965s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0210045s, 26528 KB] g=40, 171 evaluated, 170 expanded
[t=0.0218051s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0218265s, 26528 KB] g=46, 201 evaluated, 200 expanded
[t=0.0219907s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0220081s, 26528 KB] g=48, 207 evaluated, 206 expanded
[t=0.0221394s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0221483s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0221564s, 26528 KB] g=50, 212 evaluated, 211 expanded
[t=0.022445s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0224622s, 26528 KB] g=54, 223 evaluated, 222 expanded
[t=0.0225701s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0225792s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0225873s, 26528 KB] g=56, 227 evaluated, 226 expanded
[t=0.0231276s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0231381s, 26528 KB] g=64, 248 evaluated, 247 expanded
[t=0.0235031s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0235148s, 26528 KB] g=66, 261 evaluated, 260 expanded
[t=0.0236697s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0236794s, 26528 KB] g=68, 267 evaluated, 266 expanded
[t=0.0238066s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0238166s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0238249s, 26528 KB] g=70, 272 evaluated, 271 expanded
[t=0.0239278s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0239368s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0239446s, 26528 KB] g=72, 276 evaluated, 275 expanded
[t=0.0252747s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0253019s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0253104s, 26528 KB] g=82, 330 evaluated, 329 expanded
[t=0.0260588s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0260752s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0260858s, 26528 KB] g=94, 363 evaluated, 362 expanded
[t=0.0263107s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.026322s, 26528 KB] g=98, 372 evaluated, 371 expanded
[t=0.0263963s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0264049s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0264125s, 26528 KB] g=100, 375 evaluated, 374 expanded
[t=0.0368988s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0369892s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0370014s, 26528 KB] g=142, 809 evaluated, 808 expanded
[t=0.0374912s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0375009s, 26528 KB] g=150, 836 evaluated, 835 expanded
[t=0.0376597s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0376684s, 26528 KB] g=154, 845 evaluated, 844 expanded
[t=0.0377242s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0377449s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0377532s, 26528 KB] g=156, 848 evaluated, 847 expanded
[t=0.0383458s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0383566s, 26528 KB] g=172, 887 evaluated, 886 expanded
[t=0.0384918s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0385002s, 26528 KB] g=180, 898 evaluated, 897 expanded
[t=0.0385168s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0385251s, 26528 KB] g=181, 899 evaluated, 898 expanded
[t=0.0385399s, 26528 KB] Solution found!
[t=0.038552s, 26528 KB] Actual search time: 0.0228694s
unstack b10 b4 (1)
put-down b10 (1)
unstack b4 b2 (1)
stack b4 b1 (1)
unstack b19 b7 (1)
stack b19 b3 (1)
unstack b7 b16 (1)
put-down b7 (1)
unstack b2 b13 (1)
stack b2 b7 (1)
unstack b13 b20 (1)
stack b13 b15 (1)
unstack b22 b5 (1)
stack b22 b13 (1)
pick-up b16 (1)
stack b16 b5 (1)
unstack b20 b8 (1)
put-down b20 (1)
pick-up b8 (1)
stack b8 b19 (1)
unstack b4 b1 (1)
put-down b4 (1)
unstack b1 b14 (1)
put-down b1 (1)
unstack b14 b17 (1)
put-down b14 (1)
pick-up b1 (1)
stack b1 b14 (1)
pick-up b4 (1)
stack b4 b1 (1)
unstack b17 b12 (1)
put-down b17 (1)
pick-up b20 (1)
stack b20 b12 (1)
unstack b16 b5 (1)
put-down b16 (1)
pick-up b5 (1)
stack b5 b17 (1)
pick-up b16 (1)
stack b16 b5 (1)
unstack b22 b13 (1)
put-down b22 (1)
unstack b13 b15 (1)
put-down b13 (1)
unstack b15 b6 (1)
stack b15 b20 (1)
pick-up b13 (1)
stack b13 b15 (1)
pick-up b22 (1)
stack b22 b13 (1)
unstack b6 b11 (1)
put-down b6 (1)
pick-up b11 (1)
stack b11 b22 (1)
pick-up b6 (1)
stack b6 b11 (1)
unstack b8 b19 (1)
put-down b8 (1)
unstack b19 b3 (1)
put-down b19 (1)
unstack b3 b21 (1)
put-down b3 (1)
unstack b21 b18 (1)
stack b21 b6 (1)
unstack b18 b9 (1)
stack b18 b16 (1)
pick-up b19 (1)
stack b19 b3 (1)
pick-up b8 (1)
stack b8 b19 (1)
pick-up b9 (1)
stack b9 b2 (1)
unstack b8 b19 (1)
put-down b8 (1)
unstack b19 b3 (1)
put-down b19 (1)
pick-up b3 (1)
stack b3 b21 (1)
pick-up b19 (1)
stack b19 b3 (1)
pick-up b8 (1)
stack b8 b19 (1)
unstack b18 b16 (1)
put-down b18 (1)
unstack b16 b5 (1)
put-down b16 (1)
pick-up b18 (1)
stack b18 b16 (1)
unstack b5 b17 (1)
put-down b5 (1)
pick-up b17 (1)
stack b17 b9 (1)
pick-up b5 (1)
stack b5 b17 (1)
unstack b18 b16 (1)
put-down b18 (1)
pick-up b16 (1)
stack b16 b5 (1)
pick-up b18 (1)
stack b18 b16 (1)
unstack b8 b19 (1)
put-down b8 (1)
unstack b19 b3 (1)
put-down b19 (1)
pick-up b8 (1)
stack b8 b19 (1)
unstack b3 b21 (1)
put-down b3 (1)
unstack b21 b6 (1)
put-down b21 (1)
unstack b6 b11 (1)
put-down b6 (1)
pick-up b21 (1)
stack b21 b6 (1)
pick-up b3 (1)
stack b3 b21 (1)
unstack b8 b19 (1)
put-down b8 (1)
pick-up b19 (1)
stack b19 b3 (1)
pick-up b8 (1)
stack b8 b19 (1)
unstack b11 b22 (1)
put-down b11 (1)
unstack b22 b13 (1)
put-down b22 (1)
unstack b13 b15 (1)
put-down b13 (1)
pick-up b22 (1)
stack b22 b13 (1)
pick-up b11 (1)
stack b11 b22 (1)
unstack b15 b20 (1)
put-down b15 (1)
unstack b20 b12 (1)
put-down b20 (1)
pick-up b12 (1)
stack b12 b18 (1)
pick-up b20 (1)
stack b20 b12 (1)
pick-up b15 (1)
stack b15 b20 (1)
unstack b11 b22 (1)
put-down b11 (1)
unstack b22 b13 (1)
put-down b22 (1)
pick-up b11 (1)
stack b11 b22 (1)
pick-up b13 (1)
stack b13 b15 (1)
unstack b11 b22 (1)
put-down b11 (1)
pick-up b22 (1)
stack b22 b13 (1)
pick-up b11 (1)
stack b11 b22 (1)
unstack b8 b19 (1)
put-down b8 (1)
unstack b19 b3 (1)
put-down b19 (1)
unstack b3 b21 (1)
put-down b3 (1)
pick-up b19 (1)
stack b19 b3 (1)
pick-up b8 (1)
stack b8 b19 (1)
unstack b21 b6 (1)
put-down b21 (1)
pick-up b6 (1)
stack b6 b11 (1)
pick-up b21 (1)
stack b21 b6 (1)
unstack b8 b19 (1)
put-down b8 (1)
unstack b19 b3 (1)
put-down b19 (1)
pick-up b3 (1)
stack b3 b21 (1)
pick-up b19 (1)
stack b19 b3 (1)
pick-up b8 (1)
stack b8 b19 (1)
[t=0.0385615s, 26528 KB] Plan length: 182 step(s).
[t=0.0385615s, 26528 KB] Plan cost: 182
[t=0.0385615s, 26528 KB] Expanded 899 state(s).
[t=0.0385615s, 26528 KB] Reopened 0 state(s).
[t=0.0385615s, 26528 KB] Evaluated 900 state(s).
[t=0.0385615s, 26528 KB] Evaluations: 1800
[t=0.0385615s, 26528 KB] Generated 7111 state(s).
[t=0.0385615s, 26528 KB] Dead ends: 0 state(s).
[t=0.0385615s, 26528 KB] Number of registered states: 900
[t=0.0385615s, 26528 KB] Int hash set load factor: 900/1024 = 0.878906
[t=0.0385615s, 26528 KB] Int hash set resizes: 10
[t=0.0385615s, 26528 KB] Search time: 0.022918s
[t=0.0385615s, 26528 KB] Total time: 0.0385615s
Solution found.
Peak memory: 26528 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.17s
