INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_25/bws_problem_25_10.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
2052 relevant atoms
1375 auxiliary atoms
3427 final queue length
5981 total queue pushes
Completing instantiation... [0.020s CPU, 0.021s wall-clock]
Instantiating: [0.030s CPU, 0.036s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
26 uncovered facts
Choosing groups: [0.000s CPU, 0.002s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.008s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.033s wall-clock]
1850 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
50 propositions removed
Detecting unreachable propositions: [0.030s CPU, 0.025s wall-clock]
Reordering and filtering variables...
51 of 51 variables necessary.
26 of 51 mutex groups necessary.
1250 of 1250 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.008s wall-clock]
Translator variables: 51
Translator derived variables: 0
Translator facts: 702
Translator goal facts: 19
Translator mutex groups: 26
Translator total mutex groups size: 676
Translator operators: 1250
Translator axioms: 0
Translator task size: 10748
Translator peak memory: 38388 KB
Writing output... [0.010s CPU, 0.011s wall-clock]
Done! [0.120s CPU, 0.126s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=1.9363e-05s, 24488 KB] reading input...
[t=0.00360405s, 25632 KB] done reading input!
[t=0.00451333s, 26028 KB] Initializing landmark count heuristic...
[t=0.00454948s, 26028 KB] Generating landmark graph...
[t=0.00462967s, 26160 KB] Building a landmark graph with reasonable orders.
[t=0.00470454s, 26160 KB] Initializing Exploration...
[t=0.00506443s, 26532 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0194253s, 27060 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0195086s, 27060 KB] Landmarks generation time: 0.0148791s
[t=0.0195234s, 27060 KB] Discovered 107 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0195398s, 27060 KB] 471 edges
[t=0.0195499s, 27060 KB] approx. reasonable orders
[t=0.0209808s, 27060 KB] approx. obedient reasonable orders
[t=0.0210251s, 27060 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0210357s, 27060 KB] Landmarks generation time: 0.0164813s
[t=0.0210458s, 27060 KB] Discovered 107 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0210547s, 27060 KB] 490 edges
[t=0.0210632s, 27060 KB] Landmark graph generation time: 0.0165218s
[t=0.0210729s, 27060 KB] Landmark graph contains 107 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0210816s, 27060 KB] Landmark graph contains 490 orderings.
[t=0.0215685s, 27060 KB] Simplifying 4950 unary operators... done! [3750 unary operators]
[t=0.0227269s, 27060 KB] time to simplify: 0.00124129s
[t=0.0228886s, 27060 KB] Initializing additive heuristic...
[t=0.0229057s, 27060 KB] Initializing FF heuristic...
[t=0.022966s, 27060 KB] Building successor generator...done!
[t=0.0232434s, 27060 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0232544s, 27060 KB] time for successor generation creation: 0.000230908s
[t=0.0232707s, 27060 KB] Variables: 51
[t=0.0232792s, 27060 KB] FactPairs: 702
[t=0.0232873s, 27060 KB] Bytes per state: 20
[t=0.0233976s, 27060 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0234322s, 27060 KB] 50 initial landmarks, 19 goal landmarks
[t=0.0235015s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 57
[t=0.0235119s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0235207s, 27060 KB] g=0, 1 evaluated, 0 expanded
[t=0.0235341s, 27060 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 57
[t=0.0235428s, 27060 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0237345s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0237471s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0237562s, 27060 KB] g=2, 6 evaluated, 5 expanded
[t=0.0239249s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0239361s, 27060 KB] g=4, 11 evaluated, 10 expanded
[t=0.0239789s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0239884s, 27060 KB] g=4, 12 evaluated, 11 expanded
[t=0.0240937s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0241056s, 27060 KB] g=5, 15 evaluated, 14 expanded
[t=0.0244281s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0244403s, 27060 KB] g=7, 25 evaluated, 24 expanded
[t=0.0249569s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.024971s, 27060 KB] g=10, 41 evaluated, 40 expanded
[t=0.02537s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0253864s, 27060 KB] g=12, 53 evaluated, 52 expanded
[t=0.02588s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.025904s, 27060 KB] g=14, 65 evaluated, 64 expanded
[t=0.0260425s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0260584s, 27060 KB] g=12, 69 evaluated, 68 expanded
[t=0.0264495s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0264637s, 27060 KB] g=16, 81 evaluated, 80 expanded
[t=0.0265814s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0265916s, 27060 KB] g=14, 84 evaluated, 83 expanded
[t=0.0270046s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.027015s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0270244s, 27060 KB] g=16, 97 evaluated, 96 expanded
[t=0.027256s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0272658s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0272745s, 27060 KB] g=18, 104 evaluated, 103 expanded
[t=0.0274379s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0274472s, 27060 KB] g=20, 109 evaluated, 108 expanded
[t=0.0276463s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.027656s, 27060 KB] g=22, 115 evaluated, 114 expanded
[t=0.0277319s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0277419s, 27060 KB] g=22, 117 evaluated, 116 expanded
[t=0.0281529s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0281673s, 27060 KB] g=24, 127 evaluated, 126 expanded
[t=0.0284048s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0284144s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0284229s, 27060 KB] g=26, 134 evaluated, 133 expanded
[t=0.0289082s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0289188s, 27060 KB] g=30, 149 evaluated, 148 expanded
[t=0.0290878s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0290973s, 27060 KB] g=31, 154 evaluated, 153 expanded
[t=0.029293s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.029303s, 27060 KB] g=32, 160 evaluated, 159 expanded
[t=0.0295382s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0295493s, 27060 KB] g=33, 167 evaluated, 166 expanded
[t=0.0298593s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0298702s, 27060 KB] g=36, 177 evaluated, 176 expanded
[t=0.0301235s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0301331s, 27060 KB] g=38, 185 evaluated, 184 expanded
[t=0.030818s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0308312s, 27060 KB] g=42, 205 evaluated, 204 expanded
[t=0.03114s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0311497s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0311607s, 27060 KB] g=44, 215 evaluated, 214 expanded
[t=0.0314735s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0314835s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0314927s, 27060 KB] g=46, 225 evaluated, 224 expanded
[t=0.0317766s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0317903s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0317992s, 27060 KB] g=48, 234 evaluated, 233 expanded
[t=0.0320423s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0320519s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0320604s, 27060 KB] g=50, 242 evaluated, 241 expanded
[t=0.0329737s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0329896s, 27060 KB] g=54, 270 evaluated, 269 expanded
[t=0.033179s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0331889s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0331975s, 27060 KB] g=56, 276 evaluated, 275 expanded
[t=0.0335742s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0335867s, 27060 KB] g=56, 288 evaluated, 287 expanded
[t=0.034157s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0341719s, 27060 KB] g=60, 306 evaluated, 305 expanded
[t=0.0343279s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0343376s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0343463s, 27060 KB] g=62, 311 evaluated, 310 expanded
[t=0.03477s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0347826s, 27060 KB] g=68, 325 evaluated, 324 expanded
[t=0.0350005s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0350113s, 27060 KB] g=70, 331 evaluated, 330 expanded
[t=0.0351688s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0351786s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0351874s, 27060 KB] g=72, 336 evaluated, 335 expanded
[t=0.0354347s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0354513s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0354608s, 27060 KB] g=74, 342 evaluated, 341 expanded
[t=0.0355322s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.035541s, 27060 KB] g=75, 344 evaluated, 343 expanded
[t=0.0355833s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0355926s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0356012s, 27060 KB] g=76, 345 evaluated, 344 expanded
[t=0.0357811s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0357905s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0357989s, 27060 KB] g=78, 351 evaluated, 350 expanded
[t=0.0359224s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0359328s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0359413s, 27060 KB] g=80, 355 evaluated, 354 expanded
[t=0.0361937s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0362041s, 27060 KB] g=83, 364 evaluated, 363 expanded
[t=0.0362411s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0362542s, 27060 KB] g=84, 365 evaluated, 364 expanded
[t=0.0363449s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0363557s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0363645s, 27060 KB] g=86, 368 evaluated, 367 expanded
[t=0.0373642s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.037376s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.037385s, 27060 KB] g=98, 405 evaluated, 404 expanded
[t=0.0376146s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0376246s, 27060 KB] g=102, 414 evaluated, 413 expanded
[t=0.0377059s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0377147s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0377226s, 27060 KB] g=104, 417 evaluated, 416 expanded
[t=0.0381871s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0382012s, 27060 KB] g=116, 433 evaluated, 432 expanded
[t=0.0382779s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0382868s, 27060 KB] g=120, 437 evaluated, 436 expanded
[t=0.0383052s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0383139s, 27060 KB] g=121, 438 evaluated, 437 expanded
[t=0.0383299s, 27060 KB] Solution found!
[t=0.0383412s, 27060 KB] Actual search time: 0.014906s
unstack b4 b24 (1)
put-down b4 (1)
unstack b13 b14 (1)
put-down b13 (1)
unstack b14 b9 (1)
put-down b14 (1)
unstack b9 b23 (1)
put-down b9 (1)
unstack b24 b6 (1)
stack b24 b7 (1)
unstack b23 b5 (1)
put-down b23 (1)
pick-up b13 (1)
stack b13 b24 (1)
unstack b5 b2 (1)
stack b5 b4 (1)
pick-up b14 (1)
stack b14 b2 (1)
unstack b6 b11 (1)
put-down b6 (1)
unstack b11 b19 (1)
put-down b11 (1)
unstack b19 b17 (1)
stack b19 b6 (1)
pick-up b21 (1)
stack b21 b11 (1)
unstack b14 b2 (1)
put-down b14 (1)
unstack b2 b20 (1)
put-down b2 (1)
pick-up b14 (1)
stack b14 b2 (1)
unstack b20 b3 (1)
put-down b20 (1)
unstack b3 b12 (1)
put-down b3 (1)
unstack b12 b18 (1)
put-down b12 (1)
unstack b17 b25 (1)
put-down b17 (1)
unstack b25 b1 (1)
put-down b25 (1)
unstack b1 b10 (1)
put-down b1 (1)
pick-up b10 (1)
stack b10 b23 (1)
pick-up b12 (1)
stack b12 b1 (1)
pick-up b17 (1)
stack b17 b25 (1)
unstack b21 b11 (1)
put-down b21 (1)
pick-up b11 (1)
stack b11 b12 (1)
pick-up b21 (1)
stack b21 b11 (1)
unstack b19 b6 (1)
put-down b19 (1)
pick-up b6 (1)
stack b6 b3 (1)
pick-up b19 (1)
stack b19 b6 (1)
unstack b13 b24 (1)
put-down b13 (1)
unstack b24 b7 (1)
put-down b24 (1)
unstack b7 b16 (1)
stack b7 b19 (1)
pick-up b13 (1)
stack b13 b24 (1)
unstack b16 b22 (1)
stack b16 b10 (1)
unstack b22 b15 (1)
stack b22 b21 (1)
unstack b15 b8 (1)
stack b15 b18 (1)
pick-up b20 (1)
stack b20 b8 (1)
pick-up b9 (1)
stack b9 b22 (1)
unstack b20 b8 (1)
put-down b20 (1)
pick-up b8 (1)
stack b8 b13 (1)
pick-up b20 (1)
stack b20 b8 (1)
unstack b7 b19 (1)
put-down b7 (1)
unstack b19 b6 (1)
put-down b19 (1)
pick-up b7 (1)
stack b7 b19 (1)
unstack b6 b3 (1)
put-down b6 (1)
pick-up b3 (1)
stack b3 b16 (1)
pick-up b6 (1)
stack b6 b3 (1)
unstack b7 b19 (1)
put-down b7 (1)
pick-up b19 (1)
stack b19 b6 (1)
pick-up b7 (1)
stack b7 b19 (1)
unstack b20 b8 (1)
put-down b20 (1)
unstack b8 b13 (1)
put-down b8 (1)
pick-up b20 (1)
stack b20 b8 (1)
unstack b13 b24 (1)
put-down b13 (1)
pick-up b24 (1)
stack b24 b7 (1)
pick-up b13 (1)
stack b13 b24 (1)
unstack b20 b8 (1)
put-down b20 (1)
pick-up b8 (1)
stack b8 b13 (1)
pick-up b20 (1)
stack b20 b8 (1)
[t=0.0383511s, 27060 KB] Plan length: 122 step(s).
[t=0.0383511s, 27060 KB] Plan cost: 122
[t=0.0383511s, 27060 KB] Expanded 438 state(s).
[t=0.0383511s, 27060 KB] Reopened 0 state(s).
[t=0.0383511s, 27060 KB] Evaluated 439 state(s).
[t=0.0383511s, 27060 KB] Evaluations: 878
[t=0.0383511s, 27060 KB] Generated 4555 state(s).
[t=0.0383511s, 27060 KB] Dead ends: 0 state(s).
[t=0.0383511s, 27060 KB] Number of registered states: 439
[t=0.0383511s, 27060 KB] Int hash set load factor: 439/512 = 0.857422
[t=0.0383511s, 27060 KB] Int hash set resizes: 9
[t=0.0383511s, 27060 KB] Search time: 0.0149546s
[t=0.0383511s, 27060 KB] Total time: 0.0383511s
Solution found.
Peak memory: 27060 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.21s
