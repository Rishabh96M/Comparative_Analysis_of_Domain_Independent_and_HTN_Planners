INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_31/bws_problem_31_83.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.019s wall-clock]
3102 relevant atoms
2077 auxiliary atoms
5179 final queue length
9090 total queue pushes
Completing instantiation... [0.030s CPU, 0.033s wall-clock]
Instantiating: [0.050s CPU, 0.054s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.010s CPU, 0.002s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
32 uncovered facts
Choosing groups: [0.000s CPU, 0.002s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.010s CPU, 0.011s wall-clock]
Building STRIPS to SAS dictionary... [0.010s CPU, 0.006s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.001s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.002s wall-clock]
Translating task: [0.050s CPU, 0.049s wall-clock]
2852 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
62 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.023s wall-clock]
Reordering and filtering variables...
63 of 63 variables necessary.
32 of 63 mutex groups necessary.
1922 of 1922 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.013s wall-clock]
Translator variables: 63
Translator derived variables: 0
Translator facts: 1056
Translator goal facts: 26
Translator mutex groups: 32
Translator total mutex groups size: 1024
Translator operators: 1922
Translator axioms: 0
Translator task size: 16491
Translator peak memory: 42104 KB
Writing output... [0.010s CPU, 0.011s wall-clock]
Done! [0.170s CPU, 0.175s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=1.8342e-05s, 24488 KB] reading input...
[t=0.00572183s, 26640 KB] done reading input!
[t=0.00687996s, 26904 KB] Initializing landmark count heuristic...
[t=0.00692197s, 26904 KB] Generating landmark graph...
[t=0.00703457s, 27036 KB] Building a landmark graph with reasonable orders.
[t=0.00712672s, 27172 KB] Initializing Exploration...
[t=0.00764298s, 27620 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0376104s, 28404 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0377126s, 28404 KB] Landmarks generation time: 0.0306879s
[t=0.0377571s, 28404 KB] Discovered 137 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0377742s, 28404 KB] 717 edges
[t=0.0377844s, 28404 KB] approx. reasonable orders
[t=0.038474s, 28404 KB] approx. obedient reasonable orders
[t=0.0385218s, 28404 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0385316s, 28404 KB] Landmarks generation time: 0.0316076s
[t=0.0385419s, 28404 KB] Discovered 137 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0385501s, 28404 KB] 724 edges
[t=0.0385586s, 28404 KB] Landmark graph generation time: 0.0316438s
[t=0.0385673s, 28404 KB] Landmark graph contains 137 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0385755s, 28404 KB] Landmark graph contains 724 orderings.
[t=0.0393272s, 28436 KB] Simplifying 7626 unary operators... done! [5766 unary operators]
[t=0.041139s, 28568 KB] time to simplify: 0.00192894s
[t=0.0413946s, 28568 KB] Initializing additive heuristic...
[t=0.0414769s, 28568 KB] Initializing FF heuristic...
[t=0.0415329s, 28568 KB] Building successor generator...done!
[t=0.0420172s, 28568 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0420266s, 28568 KB] time for successor generation creation: 0.000450092s
[t=0.04204s, 28568 KB] Variables: 63
[t=0.0420485s, 28568 KB] FactPairs: 1056
[t=0.0420569s, 28568 KB] Bytes per state: 24
[t=0.0421454s, 28568 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0421787s, 28568 KB] 61 initial landmarks, 26 goal landmarks
[t=0.0422692s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 76
[t=0.0422793s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 54
[t=0.0422881s, 28568 KB] g=0, 1 evaluated, 0 expanded
[t=0.0423026s, 28568 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 76
[t=0.0423113s, 28568 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 54
[t=0.0425988s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 75
[t=0.0426081s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 53
[t=0.042617s, 28568 KB] g=2, 7 evaluated, 6 expanded
[t=0.0428464s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 74
[t=0.0428555s, 28568 KB] g=4, 12 evaluated, 11 expanded
[t=0.0429077s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 73
[t=0.0429164s, 28568 KB] g=5, 13 evaluated, 12 expanded
[t=0.0434813s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 72
[t=0.0434905s, 28568 KB] g=8, 26 evaluated, 25 expanded
[t=0.0440356s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 71
[t=0.0440487s, 28568 KB] g=10, 37 evaluated, 36 expanded
[t=0.0446717s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 70
[t=0.044683s, 28568 KB] g=12, 51 evaluated, 50 expanded
[t=0.0453504s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 52
[t=0.0453601s, 28568 KB] g=8, 66 evaluated, 65 expanded
[t=0.0454591s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 67
[t=0.045468s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 51
[t=0.0454761s, 28568 KB] g=14, 68 evaluated, 67 expanded
[t=0.0458738s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 66
[t=0.0458824s, 28568 KB] g=15, 77 evaluated, 76 expanded
[t=0.0460324s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 50
[t=0.0460459s, 28568 KB] g=16, 80 evaluated, 79 expanded
[t=0.04676s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 65
[t=0.0467851s, 28568 KB] g=17, 95 evaluated, 94 expanded
[t=0.047017s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 63
[t=0.047026s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 49
[t=0.047034s, 28568 KB] g=18, 100 evaluated, 99 expanded
[t=0.0473343s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 62
[t=0.0473438s, 28568 KB] g=19, 107 evaluated, 106 expanded
[t=0.0474403s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 60
[t=0.0474489s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 48
[t=0.0474568s, 28568 KB] g=20, 109 evaluated, 108 expanded
[t=0.0477834s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.0477926s, 28568 KB] g=21, 116 evaluated, 115 expanded
[t=0.0484349s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 58
[t=0.0484476s, 28568 KB] g=25, 130 evaluated, 129 expanded
[t=0.0485228s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 57
[t=0.0485321s, 28568 KB] g=26, 131 evaluated, 130 expanded
[t=0.0490473s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0490608s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 47
[t=0.0490723s, 28568 KB] g=28, 141 evaluated, 140 expanded
[t=0.0494836s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0494947s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 46
[t=0.0495034s, 28568 KB] g=30, 150 evaluated, 149 expanded
[t=0.0501492s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0501674s, 28568 KB] g=33, 164 evaluated, 163 expanded
[t=0.050225s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0502354s, 28568 KB] g=34, 165 evaluated, 164 expanded
[t=0.0505954s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0506108s, 28568 KB] g=35, 173 evaluated, 172 expanded
[t=0.0507635s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0507746s, 28568 KB] g=36, 176 evaluated, 175 expanded
[t=0.0515458s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0515814s, 28568 KB] g=37, 191 evaluated, 190 expanded
[t=0.0521058s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0521206s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.0521294s, 28568 KB] g=40, 200 evaluated, 199 expanded
[t=0.0526934s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0527296s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0527431s, 28568 KB] g=42, 210 evaluated, 209 expanded
[t=0.0534546s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0535269s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0535616s, 28568 KB] g=44, 219 evaluated, 218 expanded
[t=0.0542135s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0542366s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0542466s, 28568 KB] g=46, 228 evaluated, 227 expanded
[t=0.0549324s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0549656s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0549817s, 28568 KB] g=48, 237 evaluated, 236 expanded
[t=0.0561568s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0561798s, 28568 KB] g=51, 256 evaluated, 255 expanded
[t=0.0562562s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0562655s, 28568 KB] g=52, 257 evaluated, 256 expanded
[t=0.0566933s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0567077s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.056718s, 28568 KB] g=54, 265 evaluated, 264 expanded
[t=0.0570387s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0570495s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.057058s, 28568 KB] g=56, 272 evaluated, 271 expanded
[t=0.0573781s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0573881s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.057399s, 28568 KB] g=58, 279 evaluated, 278 expanded
[t=0.057771s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0577803s, 28568 KB] g=60, 287 evaluated, 286 expanded
[t=0.0578798s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0578886s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0578965s, 28568 KB] g=60, 289 evaluated, 288 expanded
[t=0.0582087s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.058218s, 28568 KB] g=62, 296 evaluated, 295 expanded
[t=0.0585361s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0585452s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.058553s, 28568 KB] g=64, 303 evaluated, 302 expanded
[t=0.0586066s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0586153s, 28568 KB] g=65, 304 evaluated, 303 expanded
[t=0.0586682s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0586763s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0586848s, 28568 KB] g=66, 305 evaluated, 304 expanded
[t=0.0591085s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0591207s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0591286s, 28568 KB] g=68, 313 evaluated, 312 expanded
[t=0.0594438s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0594551s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.059463s, 28568 KB] g=70, 320 evaluated, 319 expanded
[t=0.0597919s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0598013s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0598091s, 28568 KB] g=72, 328 evaluated, 327 expanded
[t=0.0618682s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0618843s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0618932s, 28568 KB] g=76, 376 evaluated, 375 expanded
[t=0.0623166s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0623279s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0623359s, 28568 KB] g=78, 383 evaluated, 382 expanded
[t=0.0641033s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0641164s, 28568 KB] g=84, 427 evaluated, 426 expanded
[t=0.0643722s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0643815s, 28568 KB] g=86, 433 evaluated, 432 expanded
[t=0.064612s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0646225s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0646307s, 28568 KB] g=88, 438 evaluated, 437 expanded
[t=0.0677404s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0677669s, 28568 KB] g=96, 510 evaluated, 509 expanded
[t=0.0681612s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0681742s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0681826s, 28568 KB] g=98, 518 evaluated, 517 expanded
[t=0.0722169s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0722654s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0722754s, 28568 KB] g=110, 608 evaluated, 607 expanded
[t=0.0729639s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0729759s, 28568 KB] g=114, 624 evaluated, 623 expanded
[t=0.0731464s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0731554s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0731634s, 28568 KB] g=116, 628 evaluated, 627 expanded
[t=0.084389s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0844311s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.084441s, 28568 KB] g=138, 894 evaluated, 893 expanded
[t=0.0850981s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0851083s, 28568 KB] g=142, 910 evaluated, 909 expanded
[t=0.0852706s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0852794s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0852871s, 28568 KB] g=144, 914 evaluated, 913 expanded
[t=0.0862299s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0862465s, 28568 KB] g=152, 939 evaluated, 938 expanded
[t=0.0866439s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0866588s, 28568 KB] g=156, 948 evaluated, 947 expanded
[t=0.0867748s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0867838s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0867918s, 28568 KB] g=158, 951 evaluated, 950 expanded
[t=0.0895265s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0895443s, 28568 KB] g=180, 1033 evaluated, 1032 expanded
[t=0.0897985s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0898089s, 28568 KB] g=184, 1042 evaluated, 1041 expanded
[t=0.0898896s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0898987s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0899065s, 28568 KB] g=186, 1045 evaluated, 1044 expanded
[t=0.0901361s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0901453s, 28568 KB] g=194, 1056 evaluated, 1055 expanded
[t=0.0901658s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.090174s, 28568 KB] g=195, 1057 evaluated, 1056 expanded
[t=0.0901909s, 28568 KB] Solution found!
[t=0.0902048s, 28568 KB] Actual search time: 0.0480227s
unstack b15 b3 (1)
put-down b15 (1)
unstack b20 b19 (1)
put-down b20 (1)
unstack b19 b21 (1)
put-down b19 (1)
unstack b21 b4 (1)
put-down b21 (1)
unstack b22 b5 (1)
put-down b22 (1)
unstack b29 b26 (1)
put-down b29 (1)
unstack b26 b8 (1)
stack b26 b6 (1)
pick-up b20 (1)
stack b20 b5 (1)
unstack b3 b10 (1)
stack b3 b21 (1)
unstack b10 b1 (1)
stack b10 b3 (1)
unstack b8 b11 (1)
put-down b8 (1)
unstack b11 b17 (1)
put-down b11 (1)
unstack b17 b24 (1)
stack b17 b4 (1)
pick-up b19 (1)
stack b19 b24 (1)
pick-up b11 (1)
stack b11 b17 (1)
unstack b19 b24 (1)
put-down b19 (1)
unstack b24 b9 (1)
stack b24 b22 (1)
pick-up b19 (1)
stack b19 b24 (1)
unstack b9 b13 (1)
put-down b9 (1)
unstack b13 b31 (1)
put-down b13 (1)
unstack b31 b30 (1)
stack b31 b1 (1)
unstack b30 b27 (1)
stack b30 b11 (1)
pick-up b27 (1)
stack b27 b15 (1)
pick-up b8 (1)
stack b8 b31 (1)
unstack b20 b5 (1)
put-down b20 (1)
unstack b5 b7 (1)
stack b5 b29 (1)
pick-up b20 (1)
stack b20 b5 (1)
unstack b7 b18 (1)
stack b7 b10 (1)
unstack b18 b2 (1)
stack b18 b26 (1)
pick-up b9 (1)
stack b9 b18 (1)
unstack b2 b28 (1)
put-down b2 (1)
unstack b28 b12 (1)
put-down b28 (1)
unstack b12 b16 (1)
stack b12 b13 (1)
unstack b16 b14 (1)
stack b16 b2 (1)
unstack b14 b23 (1)
stack b14 b27 (1)
unstack b23 b25 (1)
stack b23 b20 (1)
unstack b16 b2 (1)
put-down b16 (1)
pick-up b2 (1)
stack b2 b25 (1)
pick-up b16 (1)
stack b16 b2 (1)
unstack b8 b31 (1)
put-down b8 (1)
unstack b31 b1 (1)
put-down b31 (1)
pick-up b1 (1)
stack b1 b23 (1)
pick-up b31 (1)
stack b31 b1 (1)
pick-up b8 (1)
stack b8 b31 (1)
unstack b19 b24 (1)
put-down b19 (1)
unstack b24 b22 (1)
put-down b24 (1)
pick-up b22 (1)
stack b22 b30 (1)
pick-up b24 (1)
stack b24 b22 (1)
pick-up b19 (1)
stack b19 b24 (1)
unstack b7 b10 (1)
put-down b7 (1)
unstack b10 b3 (1)
put-down b10 (1)
pick-up b7 (1)
stack b7 b10 (1)
unstack b3 b21 (1)
put-down b3 (1)
pick-up b21 (1)
stack b21 b14 (1)
pick-up b3 (1)
stack b3 b21 (1)
unstack b7 b10 (1)
put-down b7 (1)
pick-up b10 (1)
stack b10 b3 (1)
pick-up b7 (1)
stack b7 b10 (1)
unstack b19 b24 (1)
put-down b19 (1)
unstack b24 b22 (1)
put-down b24 (1)
unstack b22 b30 (1)
put-down b22 (1)
pick-up b24 (1)
stack b24 b22 (1)
pick-up b19 (1)
stack b19 b24 (1)
unstack b30 b11 (1)
put-down b30 (1)
unstack b11 b17 (1)
put-down b11 (1)
pick-up b30 (1)
stack b30 b11 (1)
unstack b17 b4 (1)
put-down b17 (1)
pick-up b4 (1)
stack b4 b16 (1)
pick-up b17 (1)
stack b17 b4 (1)
unstack b30 b11 (1)
put-down b30 (1)
pick-up b11 (1)
stack b11 b17 (1)
pick-up b30 (1)
stack b30 b11 (1)
unstack b19 b24 (1)
put-down b19 (1)
unstack b24 b22 (1)
put-down b24 (1)
pick-up b19 (1)
stack b19 b24 (1)
pick-up b22 (1)
stack b22 b30 (1)
unstack b19 b24 (1)
put-down b19 (1)
pick-up b24 (1)
stack b24 b22 (1)
pick-up b19 (1)
stack b19 b24 (1)
unstack b8 b31 (1)
put-down b8 (1)
unstack b31 b1 (1)
put-down b31 (1)
unstack b1 b23 (1)
put-down b1 (1)
pick-up b31 (1)
stack b31 b1 (1)
pick-up b8 (1)
stack b8 b31 (1)
unstack b23 b20 (1)
put-down b23 (1)
unstack b20 b5 (1)
put-down b20 (1)
pick-up b23 (1)
stack b23 b20 (1)
unstack b5 b29 (1)
put-down b5 (1)
pick-up b29 (1)
stack b29 b7 (1)
pick-up b5 (1)
stack b5 b29 (1)
unstack b23 b20 (1)
put-down b23 (1)
pick-up b20 (1)
stack b20 b5 (1)
pick-up b23 (1)
stack b23 b20 (1)
unstack b8 b31 (1)
put-down b8 (1)
unstack b31 b1 (1)
put-down b31 (1)
pick-up b1 (1)
stack b1 b23 (1)
pick-up b31 (1)
stack b31 b1 (1)
pick-up b8 (1)
stack b8 b31 (1)
[t=0.090214s, 28568 KB] Plan length: 196 step(s).
[t=0.090214s, 28568 KB] Plan cost: 196
[t=0.090214s, 28568 KB] Expanded 1057 state(s).
[t=0.090214s, 28568 KB] Reopened 0 state(s).
[t=0.090214s, 28568 KB] Evaluated 1058 state(s).
[t=0.090214s, 28568 KB] Evaluations: 2116
[t=0.090214s, 28568 KB] Generated 11006 state(s).
[t=0.090214s, 28568 KB] Dead ends: 0 state(s).
[t=0.090214s, 28568 KB] Number of registered states: 1058
[t=0.090214s, 28568 KB] Int hash set load factor: 1058/2048 = 0.516602
[t=0.090214s, 28568 KB] Int hash set resizes: 11
[t=0.090214s, 28568 KB] Search time: 0.0480691s
[t=0.090214s, 28568 KB] Total time: 0.090214s
Solution found.
Peak memory: 28568 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.31s
