INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_25/bws_problem_25_68.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.000s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
2052 relevant atoms
1375 auxiliary atoms
3427 final queue length
5985 total queue pushes
Completing instantiation... [0.020s CPU, 0.021s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.010s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
26 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.008s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.032s wall-clock]
1850 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
50 propositions removed
Detecting unreachable propositions: [0.030s CPU, 0.022s wall-clock]
Reordering and filtering variables...
51 of 51 variables necessary.
26 of 51 mutex groups necessary.
1250 of 1250 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.009s wall-clock]
Translator variables: 51
Translator derived variables: 0
Translator facts: 702
Translator goal facts: 22
Translator mutex groups: 26
Translator total mutex groups size: 676
Translator operators: 1250
Translator axioms: 0
Translator task size: 10751
Translator peak memory: 38388 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.110s CPU, 0.118s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=3.0774e-05s, 24488 KB] reading input...
[t=0.00374096s, 25632 KB] done reading input!
[t=0.00505136s, 26028 KB] Initializing landmark count heuristic...
[t=0.00511684s, 26028 KB] Generating landmark graph...
[t=0.00524162s, 26160 KB] Building a landmark graph with reasonable orders.
[t=0.00536002s, 26160 KB] Initializing Exploration...
[t=0.00586348s, 26532 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0195746s, 26928 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0196596s, 26928 KB] Landmarks generation time: 0.0143998s
[t=0.0196761s, 26928 KB] Discovered 107 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0196965s, 26928 KB] 310 edges
[t=0.0197072s, 26928 KB] approx. reasonable orders
[t=0.0218027s, 26928 KB] approx. obedient reasonable orders
[t=0.0218348s, 26928 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0218444s, 26928 KB] Landmarks generation time: 0.0167201s
[t=0.0218543s, 26928 KB] Discovered 107 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0218623s, 26928 KB] 343 edges
[t=0.0218707s, 26928 KB] Landmark graph generation time: 0.0167609s
[t=0.0218793s, 26928 KB] Landmark graph contains 107 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0218872s, 26928 KB] Landmark graph contains 343 orderings.
[t=0.0222664s, 26928 KB] Simplifying 4950 unary operators... done! [3750 unary operators]
[t=0.023408s, 27060 KB] time to simplify: 0.00122067s
[t=0.0235831s, 27060 KB] Initializing additive heuristic...
[t=0.0235992s, 27060 KB] Initializing FF heuristic...
[t=0.0236587s, 27060 KB] Building successor generator...done!
[t=0.0238879s, 27060 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0238974s, 27060 KB] time for successor generation creation: 0.000193761s
[t=0.0239098s, 27060 KB] Variables: 51
[t=0.0239177s, 27060 KB] FactPairs: 702
[t=0.0239253s, 27060 KB] Bytes per state: 20
[t=0.0240052s, 27060 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0240367s, 27060 KB] 48 initial landmarks, 22 goal landmarks
[t=0.0240894s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.0240982s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0241065s, 27060 KB] g=0, 1 evaluated, 0 expanded
[t=0.0241212s, 27060 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.0241296s, 27060 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0244176s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 58
[t=0.024427s, 27060 KB] g=2, 10 evaluated, 9 expanded
[t=0.0245303s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 57
[t=0.0245389s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0245465s, 27060 KB] g=2, 13 evaluated, 12 expanded
[t=0.0247613s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0247699s, 27060 KB] g=4, 20 evaluated, 19 expanded
[t=0.0248706s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0248795s, 27060 KB] g=4, 23 evaluated, 22 expanded
[t=0.0256577s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.025672s, 27060 KB] g=6, 48 evaluated, 47 expanded
[t=0.0262193s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0262308s, 27060 KB] g=8, 65 evaluated, 64 expanded
[t=0.0268357s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0268472s, 27060 KB] g=10, 83 evaluated, 82 expanded
[t=0.0271394s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0271497s, 27060 KB] g=11, 92 evaluated, 91 expanded
[t=0.027228s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0272372s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0272469s, 27060 KB] g=12, 94 evaluated, 93 expanded
[t=0.0275805s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0276032s, 27060 KB] g=14, 104 evaluated, 103 expanded
[t=0.0276798s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0276901s, 27060 KB] g=14, 106 evaluated, 105 expanded
[t=0.0278864s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0278971s, 27060 KB] g=15, 112 evaluated, 111 expanded
[t=0.0283402s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0283558s, 27060 KB] g=16, 125 evaluated, 124 expanded
[t=0.0288181s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0288388s, 27060 KB] g=18, 139 evaluated, 138 expanded
[t=0.0296213s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0296395s, 27060 KB] g=20, 163 evaluated, 162 expanded
[t=0.0302947s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0303082s, 27060 KB] g=20, 184 evaluated, 183 expanded
[t=0.0304114s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0304223s, 27060 KB] g=22, 187 evaluated, 186 expanded
[t=0.0308426s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0308651s, 27060 KB] g=22, 200 evaluated, 199 expanded
[t=0.0313939s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0314128s, 27060 KB] g=24, 216 evaluated, 215 expanded
[t=0.0315567s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0315685s, 27060 KB] g=25, 220 evaluated, 219 expanded
[t=0.0319398s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0319556s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0319638s, 27060 KB] g=28, 232 evaluated, 231 expanded
[t=0.0322177s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0322306s, 27060 KB] g=30, 240 evaluated, 239 expanded
[t=0.0328316s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0328437s, 27060 KB] g=32, 259 evaluated, 258 expanded
[t=0.0338547s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0339008s, 27060 KB] g=35, 290 evaluated, 289 expanded
[t=0.0339797s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0339903s, 27060 KB] g=36, 292 evaluated, 291 expanded
[t=0.0344759s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0344867s, 27060 KB] g=32, 307 evaluated, 306 expanded
[t=0.0347207s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0347306s, 27060 KB] g=38, 314 evaluated, 313 expanded
[t=0.0349976s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0350122s, 27060 KB] g=34, 322 evaluated, 321 expanded
[t=0.0353956s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0354121s, 27060 KB] g=40, 334 evaluated, 333 expanded
[t=0.0359438s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0359568s, 27060 KB] g=42, 350 evaluated, 349 expanded
[t=0.0366938s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0367041s, 27060 KB] g=44, 373 evaluated, 372 expanded
[t=0.0369267s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.036937s, 27060 KB] g=46, 380 evaluated, 379 expanded
[t=0.037247s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0372566s, 27060 KB] g=48, 390 evaluated, 389 expanded
[t=0.037387s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0373961s, 27060 KB] g=46, 394 evaluated, 393 expanded
[t=0.0376672s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0376767s, 27060 KB] g=48, 403 evaluated, 402 expanded
[t=0.037743s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0377521s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0377602s, 27060 KB] g=48, 405 evaluated, 404 expanded
[t=0.0379395s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0379486s, 27060 KB] g=50, 411 evaluated, 410 expanded
[t=0.0385342s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0385444s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0385525s, 27060 KB] g=54, 430 evaluated, 429 expanded
[t=0.0387427s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0387518s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0387602s, 27060 KB] g=56, 436 evaluated, 435 expanded
[t=0.0389313s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0389412s, 27060 KB] g=58, 441 evaluated, 440 expanded
[t=0.0392847s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0392943s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.039303s, 27060 KB] g=60, 452 evaluated, 451 expanded
[t=0.0394977s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0395083s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.039517s, 27060 KB] g=62, 458 evaluated, 457 expanded
[t=0.039644s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0396527s, 27060 KB] g=64, 462 evaluated, 461 expanded
[t=0.0396906s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0396989s, 27060 KB] g=62, 463 evaluated, 462 expanded
[t=0.0399616s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0399708s, 27060 KB] g=64, 472 evaluated, 471 expanded
[t=0.0400917s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0401006s, 27060 KB] g=66, 476 evaluated, 475 expanded
[t=0.0416466s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0416567s, 27060 KB] g=72, 529 evaluated, 528 expanded
[t=0.0417489s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0417577s, 27060 KB] g=74, 532 evaluated, 531 expanded
[t=0.0417955s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0418042s, 27060 KB] g=72, 533 evaluated, 532 expanded
[t=0.0420036s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0420149s, 27060 KB] g=74, 540 evaluated, 539 expanded
[t=0.0421066s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.042116s, 27060 KB] g=76, 543 evaluated, 542 expanded
[t=0.0450098s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0450219s, 27060 KB] g=92, 655 evaluated, 654 expanded
[t=0.0451933s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0452036s, 27060 KB] g=94, 662 evaluated, 661 expanded
[t=0.0453456s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.045355s, 27060 KB] g=96, 668 evaluated, 667 expanded
[t=0.0454499s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0454591s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0454676s, 27060 KB] g=98, 672 evaluated, 671 expanded
[t=0.0457908s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0458002s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0458095s, 27060 KB] g=102, 687 evaluated, 686 expanded
[t=0.0459075s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0459166s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0459252s, 27060 KB] g=104, 691 evaluated, 690 expanded
[t=0.046124s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0461404s, 27060 KB] g=108, 700 evaluated, 699 expanded
[t=0.046242s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0462678s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0462803s, 27060 KB] g=110, 703 evaluated, 702 expanded
[t=0.0465518s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0465668s, 27060 KB] g=118, 713 evaluated, 712 expanded
[t=0.0466661s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0466793s, 27060 KB] g=122, 717 evaluated, 716 expanded
[t=0.0467072s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0467184s, 27060 KB] g=123, 718 evaluated, 717 expanded
[t=0.0467411s, 27060 KB] Solution found!
[t=0.0467586s, 27060 KB] Actual search time: 0.0227226s
unstack b22 b15 (1)
stack b22 b24 (1)
unstack b11 b3 (1)
put-down b11 (1)
unstack b12 b9 (1)
put-down b12 (1)
unstack b3 b5 (1)
stack b3 b9 (1)
unstack b4 b25 (1)
put-down b4 (1)
unstack b25 b17 (1)
stack b25 b8 (1)
pick-up b15 (1)
stack b15 b11 (1)
pick-up b17 (1)
stack b17 b4 (1)
unstack b6 b10 (1)
put-down b6 (1)
unstack b10 b18 (1)
stack b10 b3 (1)
unstack b5 b2 (1)
stack b5 b10 (1)
pick-up b6 (1)
stack b6 b18 (1)
unstack b2 b1 (1)
put-down b2 (1)
unstack b1 b13 (1)
stack b1 b6 (1)
unstack b15 b11 (1)
put-down b15 (1)
unstack b17 b4 (1)
put-down b17 (1)
unstack b25 b8 (1)
put-down b25 (1)
unstack b8 b7 (1)
stack b8 b5 (1)
unstack b7 b16 (1)
stack b7 b12 (1)
pick-up b2 (1)
stack b2 b7 (1)
pick-up b16 (1)
stack b16 b1 (1)
pick-up b25 (1)
stack b25 b8 (1)
pick-up b4 (1)
stack b4 b13 (1)
pick-up b17 (1)
stack b17 b4 (1)
pick-up b15 (1)
stack b15 b11 (1)
unstack b22 b24 (1)
put-down b22 (1)
unstack b24 b21 (1)
stack b24 b20 (1)
pick-up b22 (1)
stack b22 b24 (1)
unstack b21 b23 (1)
put-down b21 (1)
unstack b23 b19 (1)
stack b23 b17 (1)
pick-up b21 (1)
stack b21 b23 (1)
pick-up b19 (1)
stack b19 b21 (1)
unstack b2 b7 (1)
put-down b2 (1)
unstack b7 b12 (1)
put-down b7 (1)
pick-up b12 (1)
stack b12 b16 (1)
pick-up b7 (1)
stack b7 b12 (1)
pick-up b2 (1)
stack b2 b7 (1)
unstack b25 b8 (1)
put-down b25 (1)
unstack b8 b5 (1)
put-down b8 (1)
unstack b5 b10 (1)
put-down b5 (1)
pick-up b8 (1)
stack b8 b5 (1)
pick-up b25 (1)
stack b25 b8 (1)
unstack b15 b11 (1)
put-down b15 (1)
unstack b10 b3 (1)
put-down b10 (1)
unstack b3 b9 (1)
put-down b3 (1)
unstack b9 b14 (1)
stack b9 b15 (1)
pick-up b14 (1)
stack b14 b22 (1)
pick-up b10 (1)
stack b10 b3 (1)
pick-up b11 (1)
stack b11 b14 (1)
unstack b9 b15 (1)
put-down b9 (1)
pick-up b15 (1)
stack b15 b11 (1)
pick-up b9 (1)
stack b9 b15 (1)
unstack b10 b3 (1)
put-down b10 (1)
pick-up b3 (1)
stack b3 b9 (1)
pick-up b10 (1)
stack b10 b3 (1)
unstack b25 b8 (1)
put-down b25 (1)
unstack b8 b5 (1)
put-down b8 (1)
pick-up b25 (1)
stack b25 b8 (1)
pick-up b5 (1)
stack b5 b10 (1)
unstack b25 b8 (1)
put-down b25 (1)
pick-up b8 (1)
stack b8 b5 (1)
pick-up b25 (1)
stack b25 b8 (1)
[t=0.0467719s, 27060 KB] Plan length: 124 step(s).
[t=0.0467719s, 27060 KB] Plan cost: 124
[t=0.0467719s, 27060 KB] Expanded 718 state(s).
[t=0.0467719s, 27060 KB] Reopened 0 state(s).
[t=0.0467719s, 27060 KB] Evaluated 719 state(s).
[t=0.0467719s, 27060 KB] Evaluations: 1438
[t=0.0467719s, 27060 KB] Generated 6949 state(s).
[t=0.0467719s, 27060 KB] Dead ends: 0 state(s).
[t=0.0467719s, 27060 KB] Number of registered states: 719
[t=0.0467719s, 27060 KB] Int hash set load factor: 719/1024 = 0.702148
[t=0.0467719s, 27060 KB] Int hash set resizes: 10
[t=0.0467719s, 27060 KB] Search time: 0.0227669s
[t=0.0467719s, 27060 KB] Total time: 0.0467719s
Solution found.
Peak memory: 27060 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.22s
