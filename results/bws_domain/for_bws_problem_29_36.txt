INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_29/bws_problem_29_36.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.016s wall-clock]
2728 relevant atoms
1827 auxiliary atoms
4555 final queue length
7981 total queue pushes
Completing instantiation... [0.020s CPU, 0.028s wall-clock]
Instantiating: [0.040s CPU, 0.046s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.002s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
30 uncovered facts
Choosing groups: [0.000s CPU, 0.002s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.010s CPU, 0.009s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.001s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.010s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.002s wall-clock]
Translating task: [0.040s CPU, 0.048s wall-clock]
2494 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
58 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.020s wall-clock]
Reordering and filtering variables...
59 of 59 variables necessary.
30 of 59 mutex groups necessary.
1682 of 1682 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.011s wall-clock]
Translator variables: 59
Translator derived variables: 0
Translator facts: 930
Translator goal facts: 24
Translator mutex groups: 30
Translator total mutex groups size: 900
Translator operators: 1682
Translator axioms: 0
Translator task size: 14441
Translator peak memory: 40824 KB
Writing output... [0.010s CPU, 0.009s wall-clock]
Done! [0.150s CPU, 0.149s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=1.8381e-05s, 24488 KB] reading input...
[t=0.00489551s, 26220 KB] done reading input!
[t=0.00580636s, 26616 KB] Initializing landmark count heuristic...
[t=0.00585541s, 26616 KB] Generating landmark graph...
[t=0.00594793s, 26748 KB] Building a landmark graph with reasonable orders.
[t=0.00604212s, 26748 KB] Initializing Exploration...
[t=0.00650573s, 27200 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0300209s, 27860 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0301265s, 27860 KB] Landmarks generation time: 0.0241882s
[t=0.0301495s, 27860 KB] Discovered 127 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0301654s, 27860 KB] 582 edges
[t=0.030175s, 27860 KB] approx. reasonable orders
[t=0.0312957s, 27860 KB] approx. obedient reasonable orders
[t=0.0313312s, 27860 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0313411s, 27860 KB] Landmarks generation time: 0.0254832s
[t=0.0313506s, 27860 KB] Discovered 127 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0313587s, 27860 KB] 594 edges
[t=0.0313677s, 27860 KB] Landmark graph generation time: 0.0255191s
[t=0.0313762s, 27860 KB] Landmark graph contains 127 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.031384s, 27860 KB] Landmark graph contains 594 orderings.
[t=0.0320136s, 27884 KB] Simplifying 6670 unary operators... done! [5046 unary operators]
[t=0.0336721s, 28016 KB] time to simplify: 0.00178799s
[t=0.0338968s, 28016 KB] Initializing additive heuristic...
[t=0.0339163s, 28016 KB] Initializing FF heuristic...
[t=0.0339835s, 28016 KB] Building successor generator...done!
[t=0.0342732s, 28016 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0342826s, 28016 KB] time for successor generation creation: 0.000252046s
[t=0.0342972s, 28016 KB] Variables: 59
[t=0.0343052s, 28016 KB] FactPairs: 930
[t=0.0343138s, 28016 KB] Bytes per state: 24
[t=0.0344352s, 28016 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0344689s, 28016 KB] 58 initial landmarks, 24 goal landmarks
[t=0.0345446s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 69
[t=0.0345544s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 50
[t=0.0345626s, 28016 KB] g=0, 1 evaluated, 0 expanded
[t=0.0345816s, 28016 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 69
[t=0.0345903s, 28016 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 50
[t=0.0347318s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 68
[t=0.0347409s, 28016 KB] g=1, 4 evaluated, 3 expanded
[t=0.0347937s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 67
[t=0.0348023s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 49
[t=0.0348113s, 28016 KB] g=2, 5 evaluated, 4 expanded
[t=0.0349386s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 66
[t=0.0349484s, 28016 KB] g=3, 8 evaluated, 7 expanded
[t=0.0350405s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 48
[t=0.0350493s, 28016 KB] g=4, 10 evaluated, 9 expanded
[t=0.0353642s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 65
[t=0.0353745s, 28016 KB] g=5, 18 evaluated, 17 expanded
[t=0.035816s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 64
[t=0.0358292s, 28016 KB] g=7, 29 evaluated, 28 expanded
[t=0.0358778s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 63
[t=0.0358894s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 47
[t=0.035898s, 28016 KB] g=8, 30 evaluated, 29 expanded
[t=0.0361011s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 62
[t=0.0361156s, 28016 KB] g=10, 35 evaluated, 34 expanded
[t=0.0365049s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 61
[t=0.0365206s, 28016 KB] g=11, 45 evaluated, 44 expanded
[t=0.0369619s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 60
[t=0.0369899s, 28016 KB] g=14, 56 evaluated, 55 expanded
[t=0.0373158s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.037327s, 28016 KB] g=16, 64 evaluated, 63 expanded
[t=0.0379708s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.037985s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 46
[t=0.0379973s, 28016 KB] g=18, 78 evaluated, 77 expanded
[t=0.0383856s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0384043s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0384133s, 28016 KB] g=20, 87 evaluated, 86 expanded
[t=0.0387694s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0387795s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.0387876s, 28016 KB] g=22, 96 evaluated, 95 expanded
[t=0.0391769s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0391869s, 28016 KB] g=24, 106 evaluated, 105 expanded
[t=0.0395798s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0395898s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0395985s, 28016 KB] g=26, 116 evaluated, 115 expanded
[t=0.0400315s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0400411s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0400496s, 28016 KB] g=28, 127 evaluated, 126 expanded
[t=0.0404592s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.040469s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0404795s, 28016 KB] g=30, 137 evaluated, 136 expanded
[t=0.0416528s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0416639s, 28016 KB] g=34, 167 evaluated, 166 expanded
[t=0.0421114s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0421218s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0421304s, 28016 KB] g=36, 178 evaluated, 177 expanded
[t=0.0425884s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0425984s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0426065s, 28016 KB] g=38, 189 evaluated, 188 expanded
[t=0.0430449s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0430552s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0430639s, 28016 KB] g=40, 200 evaluated, 199 expanded
[t=0.0434595s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0434691s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0434916s, 28016 KB] g=42, 210 evaluated, 209 expanded
[t=0.0438324s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0438413s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0438542s, 28016 KB] g=44, 218 evaluated, 217 expanded
[t=0.044211s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.04422s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.044229s, 28016 KB] g=46, 227 evaluated, 226 expanded
[t=0.0455447s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0455546s, 28016 KB] g=49, 260 evaluated, 259 expanded
[t=0.0456046s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0456136s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0456217s, 28016 KB] g=50, 261 evaluated, 260 expanded
[t=0.0459717s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0459832s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0459915s, 28016 KB] g=52, 269 evaluated, 268 expanded
[t=0.0462367s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0462462s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0462545s, 28016 KB] g=54, 275 evaluated, 274 expanded
[t=0.0473553s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0473646s, 28016 KB] g=59, 303 evaluated, 302 expanded
[t=0.0474145s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0474235s, 28016 KB] g=60, 304 evaluated, 303 expanded
[t=0.0476949s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0477044s, 28016 KB] g=61, 311 evaluated, 310 expanded
[t=0.0477932s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0478017s, 28016 KB] g=62, 313 evaluated, 312 expanded
[t=0.0482161s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0482254s, 28016 KB] g=63, 324 evaluated, 323 expanded
[t=0.0485429s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0485516s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0485593s, 28016 KB] g=66, 332 evaluated, 331 expanded
[t=0.0495162s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0495272s, 28016 KB] g=70, 358 evaluated, 357 expanded
[t=0.0498215s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0498375s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0498458s, 28016 KB] g=72, 365 evaluated, 364 expanded
[t=0.0514647s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0514782s, 28016 KB] g=80, 408 evaluated, 407 expanded
[t=0.051835s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0518459s, 28016 KB] g=82, 417 evaluated, 416 expanded
[t=0.0522465s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.052257s, 28016 KB] g=84, 427 evaluated, 426 expanded
[t=0.0524583s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0524724s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0524814s, 28016 KB] g=86, 432 evaluated, 431 expanded
[t=0.0551242s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0551469s, 28016 KB] g=96, 499 evaluated, 498 expanded
[t=0.055403s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0554137s, 28016 KB] g=98, 505 evaluated, 504 expanded
[t=0.0556247s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0556347s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.055643s, 28016 KB] g=100, 510 evaluated, 509 expanded
[t=0.0557328s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0557432s, 28016 KB] g=101, 512 evaluated, 511 expanded
[t=0.0558207s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0558305s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0558386s, 28016 KB] g=102, 513 evaluated, 512 expanded
[t=0.0559625s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.055972s, 28016 KB] g=103, 516 evaluated, 515 expanded
[t=0.0560194s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0560282s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0560361s, 28016 KB] g=104, 517 evaluated, 516 expanded
[t=0.0567401s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0567524s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0567617s, 28016 KB] g=110, 536 evaluated, 535 expanded
[t=0.0618127s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0618873s, 28016 KB] g=122, 672 evaluated, 671 expanded
[t=0.0631383s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0631575s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0631658s, 28016 KB] g=136, 704 evaluated, 703 expanded
[t=0.0703372s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0704291s, 28016 KB] g=130, 894 evaluated, 893 expanded
[t=0.0716266s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0716379s, 28016 KB] g=138, 928 evaluated, 927 expanded
[t=0.071751s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0717602s, 28016 KB] g=140, 931 evaluated, 930 expanded
[t=0.0733419s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0733598s, 28016 KB] g=158, 985 evaluated, 984 expanded
[t=0.0734475s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0734589s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.073467s, 28016 KB] g=160, 988 evaluated, 987 expanded
[t=0.0737728s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0738167s, 28016 KB] g=168, 999 evaluated, 998 expanded
[t=0.0739037s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0739154s, 28016 KB] g=172, 1003 evaluated, 1002 expanded
[t=0.0739367s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0739452s, 28016 KB] g=173, 1004 evaluated, 1003 expanded
[t=0.0739836s, 28016 KB] Solution found!
[t=0.0740036s, 28016 KB] Actual search time: 0.0395319s
unstack b21 b7 (1)
stack b21 b23 (1)
unstack b8 b26 (1)
put-down b8 (1)
unstack b15 b14 (1)
put-down b15 (1)
unstack b7 b11 (1)
stack b7 b14 (1)
unstack b26 b24 (1)
put-down b26 (1)
unstack b24 b12 (1)
put-down b24 (1)
unstack b11 b4 (1)
put-down b11 (1)
unstack b12 b25 (1)
put-down b12 (1)
unstack b25 b28 (1)
stack b25 b11 (1)
unstack b28 b3 (1)
stack b28 b4 (1)
unstack b3 b19 (1)
put-down b3 (1)
unstack b19 b29 (1)
put-down b19 (1)
unstack b29 b18 (1)
stack b29 b8 (1)
unstack b18 b1 (1)
stack b18 b28 (1)
pick-up b1 (1)
stack b1 b18 (1)
unstack b7 b14 (1)
put-down b7 (1)
unstack b14 b16 (1)
put-down b14 (1)
unstack b16 b22 (1)
put-down b16 (1)
unstack b22 b27 (1)
stack b22 b3 (1)
pick-up b12 (1)
stack b12 b16 (1)
pick-up b24 (1)
stack b24 b27 (1)
pick-up b19 (1)
stack b19 b22 (1)
pick-up b7 (1)
stack b7 b14 (1)
unstack b24 b27 (1)
put-down b24 (1)
unstack b27 b13 (1)
stack b27 b12 (1)
pick-up b15 (1)
stack b15 b13 (1)
pick-up b24 (1)
stack b24 b27 (1)
unstack b21 b23 (1)
put-down b21 (1)
unstack b23 b17 (1)
put-down b23 (1)
unstack b17 b6 (1)
stack b17 b19 (1)
pick-up b21 (1)
stack b21 b23 (1)
unstack b6 b10 (1)
put-down b6 (1)
pick-up b10 (1)
stack b10 b15 (1)
unstack b21 b23 (1)
put-down b21 (1)
pick-up b23 (1)
stack b23 b17 (1)
pick-up b21 (1)
stack b21 b23 (1)
unstack b10 b15 (1)
put-down b10 (1)
unstack b15 b13 (1)
put-down b15 (1)
unstack b13 b2 (1)
put-down b13 (1)
pick-up b2 (1)
stack b2 b26 (1)
pick-up b13 (1)
stack b13 b2 (1)
pick-up b15 (1)
stack b15 b13 (1)
pick-up b10 (1)
stack b10 b15 (1)
unstack b1 b18 (1)
put-down b1 (1)
unstack b18 b28 (1)
put-down b18 (1)
pick-up b1 (1)
stack b1 b18 (1)
unstack b28 b4 (1)
put-down b28 (1)
unstack b4 b9 (1)
stack b4 b25 (1)
pick-up b28 (1)
stack b28 b4 (1)
unstack b9 b20 (1)
stack b9 b10 (1)
unstack b20 b5 (1)
stack b20 b29 (1)
pick-up b6 (1)
stack b6 b20 (1)
unstack b1 b18 (1)
put-down b1 (1)
pick-up b18 (1)
stack b18 b28 (1)
pick-up b1 (1)
stack b1 b18 (1)
unstack b9 b10 (1)
put-down b9 (1)
unstack b10 b15 (1)
put-down b10 (1)
unstack b15 b13 (1)
put-down b15 (1)
pick-up b10 (1)
stack b10 b15 (1)
pick-up b9 (1)
stack b9 b10 (1)
unstack b13 b2 (1)
put-down b13 (1)
unstack b2 b26 (1)
put-down b2 (1)
pick-up b26 (1)
stack b26 b5 (1)
pick-up b2 (1)
stack b2 b26 (1)
pick-up b13 (1)
stack b13 b2 (1)
unstack b9 b10 (1)
put-down b9 (1)
unstack b10 b15 (1)
put-down b10 (1)
pick-up b15 (1)
stack b15 b13 (1)
pick-up b10 (1)
stack b10 b15 (1)
pick-up b9 (1)
stack b9 b10 (1)
unstack b1 b18 (1)
put-down b1 (1)
unstack b18 b28 (1)
put-down b18 (1)
unstack b28 b4 (1)
put-down b28 (1)
pick-up b18 (1)
stack b18 b28 (1)
pick-up b1 (1)
stack b1 b18 (1)
unstack b4 b25 (1)
put-down b4 (1)
unstack b25 b11 (1)
put-down b25 (1)
pick-up b11 (1)
stack b11 b9 (1)
pick-up b25 (1)
stack b25 b11 (1)
pick-up b4 (1)
stack b4 b25 (1)
unstack b1 b18 (1)
put-down b1 (1)
unstack b18 b28 (1)
put-down b18 (1)
pick-up b1 (1)
stack b1 b18 (1)
pick-up b28 (1)
stack b28 b4 (1)
unstack b1 b18 (1)
put-down b1 (1)
pick-up b18 (1)
stack b18 b28 (1)
pick-up b1 (1)
stack b1 b18 (1)
[t=0.074014s, 28016 KB] Plan length: 174 step(s).
[t=0.074014s, 28016 KB] Plan cost: 174
[t=0.074014s, 28016 KB] Expanded 1004 state(s).
[t=0.074014s, 28016 KB] Reopened 0 state(s).
[t=0.074014s, 28016 KB] Evaluated 1005 state(s).
[t=0.074014s, 28016 KB] Evaluations: 2010
[t=0.074014s, 28016 KB] Generated 10180 state(s).
[t=0.074014s, 28016 KB] Dead ends: 0 state(s).
[t=0.074014s, 28016 KB] Number of registered states: 1005
[t=0.074014s, 28016 KB] Int hash set load factor: 1005/1024 = 0.981445
[t=0.074014s, 28016 KB] Int hash set resizes: 10
[t=0.074014s, 28016 KB] Search time: 0.0395791s
[t=0.074014s, 28016 KB] Total time: 0.074014s
Solution found.
Peak memory: 28016 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.28s
