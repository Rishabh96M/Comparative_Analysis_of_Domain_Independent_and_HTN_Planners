INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_27/bws_problem_27_36.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.014s wall-clock]
2378 relevant atoms
1593 auxiliary atoms
3971 final queue length
6944 total queue pushes
Completing instantiation... [0.030s CPU, 0.025s wall-clock]
Instantiating: [0.040s CPU, 0.041s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
28 uncovered facts
Choosing groups: [0.010s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.008s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.040s CPU, 0.042s wall-clock]
2160 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
54 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.018s wall-clock]
Reordering and filtering variables...
55 of 55 variables necessary.
28 of 55 mutex groups necessary.
1458 of 1458 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.009s wall-clock]
Translator variables: 55
Translator derived variables: 0
Translator facts: 812
Translator goal facts: 22
Translator mutex groups: 28
Translator total mutex groups size: 784
Translator operators: 1458
Translator axioms: 0
Translator task size: 12527
Translator peak memory: 39412 KB
Writing output... [0.010s CPU, 0.008s wall-clock]
Done! [0.130s CPU, 0.133s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.3063e-05s, 24488 KB] reading input...
[t=0.00436153s, 25936 KB] done reading input!
[t=0.00563348s, 26332 KB] Initializing landmark count heuristic...
[t=0.00571978s, 26332 KB] Generating landmark graph...
[t=0.00583367s, 26332 KB] Building a landmark graph with reasonable orders.
[t=0.00591866s, 26464 KB] Initializing Exploration...
[t=0.00640895s, 26732 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0269686s, 27788 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0270821s, 27788 KB] Landmarks generation time: 0.0212589s
[t=0.0271087s, 27788 KB] Discovered 121 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0271288s, 27788 KB] 1015 edges
[t=0.0271408s, 27788 KB] approx. reasonable orders
[t=0.0287413s, 27788 KB] approx. obedient reasonable orders
[t=0.0287891s, 27788 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0288008s, 27788 KB] Landmarks generation time: 0.023076s
[t=0.0288122s, 27788 KB] Discovered 121 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0288227s, 27788 KB] 1033 edges
[t=0.0288329s, 27788 KB] Landmark graph generation time: 0.0231335s
[t=0.0288549s, 27788 KB] Landmark graph contains 121 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0288646s, 27788 KB] Landmark graph contains 1033 orderings.
[t=0.0294145s, 27860 KB] Simplifying 5778 unary operators... done! [4374 unary operators]
[t=0.0308163s, 27860 KB] time to simplify: 0.00141848s
[t=0.030926s, 27860 KB] Initializing additive heuristic...
[t=0.0309455s, 27860 KB] Initializing FF heuristic...
[t=0.0309997s, 27860 KB] Building successor generator...done!
[t=0.0312894s, 27860 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0312997s, 27860 KB] time for successor generation creation: 0.000246731s
[t=0.0313155s, 27860 KB] Variables: 55
[t=0.0313246s, 27860 KB] FactPairs: 812
[t=0.0313349s, 27860 KB] Bytes per state: 24
[t=0.0314232s, 27860 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0314587s, 27860 KB] 55 initial landmarks, 22 goal landmarks
[t=0.0315258s, 27860 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 66
[t=0.0315362s, 27860 KB] New best heuristic value for ff(transform = adapt_costs(one)): 48
[t=0.0315465s, 27860 KB] g=0, 1 evaluated, 0 expanded
[t=0.0315623s, 27860 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 66
[t=0.0315716s, 27860 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 48
[t=0.0317773s, 27860 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 65
[t=0.0317894s, 27860 KB] g=2, 6 evaluated, 5 expanded
[t=0.0321418s, 27860 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 64
[t=0.0321531s, 27860 KB] g=4, 16 evaluated, 15 expanded
[t=0.0323017s, 27860 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 63
[t=0.0323121s, 27860 KB] g=6, 20 evaluated, 19 expanded
[t=0.0323585s, 27860 KB] New best heuristic value for ff(transform = adapt_costs(one)): 47
[t=0.0323679s, 27860 KB] g=4, 21 evaluated, 20 expanded
[t=0.0327419s, 27860 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 60
[t=0.0327517s, 27860 KB] g=8, 32 evaluated, 31 expanded
[t=0.0329695s, 27860 KB] New best heuristic value for ff(transform = adapt_costs(one)): 46
[t=0.0329799s, 27860 KB] g=10, 38 evaluated, 37 expanded
[t=0.0330273s, 27860 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 57
[t=0.0330368s, 27860 KB] g=10, 39 evaluated, 38 expanded
[t=0.0333858s, 27860 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.033396s, 27860 KB] g=12, 49 evaluated, 48 expanded
[t=0.0335496s, 27860 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0335593s, 27860 KB] New best heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0335695s, 27860 KB] g=12, 53 evaluated, 52 expanded
[t=0.0337511s, 27860 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0337609s, 27860 KB] g=14, 58 evaluated, 57 expanded
[t=0.0338478s, 27860 KB] New best heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.0338582s, 27860 KB] g=14, 60 evaluated, 59 expanded
[t=0.03411s, 27860 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0341206s, 27860 KB] g=16, 67 evaluated, 66 expanded
[t=0.0343709s, 27860 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0343813s, 27860 KB] g=18, 74 evaluated, 73 expanded
[t=0.0344659s, 27860 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0344776s, 27860 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0344879s, 27860 KB] g=18, 76 evaluated, 75 expanded
[t=0.0346781s, 27860 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0346874s, 27860 KB] g=20, 81 evaluated, 80 expanded
[t=0.0349134s, 27860 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.034924s, 27860 KB] g=22, 87 evaluated, 86 expanded
[t=0.0351883s, 27860 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0351994s, 27860 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.03521s, 27860 KB] g=24, 94 evaluated, 93 expanded
[t=0.0359128s, 27860 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0359277s, 27860 KB] g=28, 113 evaluated, 112 expanded
[t=0.0360162s, 27860 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0360271s, 27860 KB] g=29, 115 evaluated, 114 expanded
[t=0.0360779s, 27860 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0360883s, 27860 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0360987s, 27860 KB] g=30, 116 evaluated, 115 expanded
[t=0.036397s, 27860 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0364077s, 27860 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0364191s, 27860 KB] g=32, 124 evaluated, 123 expanded
[t=0.0367261s, 27860 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0367364s, 27860 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0367466s, 27860 KB] g=34, 132 evaluated, 131 expanded
[t=0.0370242s, 27860 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0370348s, 27860 KB] g=36, 139 evaluated, 138 expanded
[t=0.0373378s, 27860 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.037348s, 27860 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0373583s, 27860 KB] g=38, 147 evaluated, 146 expanded
[t=0.037648s, 27860 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0376584s, 27860 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0376696s, 27860 KB] g=40, 155 evaluated, 154 expanded
[t=0.0379601s, 27860 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0379737s, 27860 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0379846s, 27860 KB] g=42, 163 evaluated, 162 expanded
[t=0.038042s, 27860 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0380527s, 27860 KB] g=43, 164 evaluated, 163 expanded
[t=0.0381042s, 27860 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0381149s, 27860 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0381248s, 27860 KB] g=44, 165 evaluated, 164 expanded
[t=0.0382809s, 27860 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0382927s, 27860 KB] g=45, 169 evaluated, 168 expanded
[t=0.0383442s, 27860 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0383539s, 27860 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.038364s, 27860 KB] g=46, 170 evaluated, 169 expanded
[t=0.0386938s, 27860 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0387072s, 27860 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.038718s, 27860 KB] g=48, 179 evaluated, 178 expanded
[t=0.038886s, 27860 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0388985s, 27860 KB] g=49, 183 evaluated, 182 expanded
[t=0.0389517s, 27860 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0389627s, 27860 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.038973s, 27860 KB] g=50, 184 evaluated, 183 expanded
[t=0.0392823s, 27860 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0392985s, 27860 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0393105s, 27860 KB] g=52, 192 evaluated, 191 expanded
[t=0.0396091s, 27860 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0396206s, 27860 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0396313s, 27860 KB] g=54, 200 evaluated, 199 expanded
[t=0.03999s, 27860 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.040004s, 27860 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0400154s, 27860 KB] g=56, 209 evaluated, 208 expanded
[t=0.0402702s, 27860 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0402805s, 27860 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0402905s, 27860 KB] g=58, 216 evaluated, 215 expanded
[t=0.0405116s, 27860 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0405216s, 27860 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0405319s, 27860 KB] g=60, 222 evaluated, 221 expanded
[t=0.0422471s, 27860 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0422604s, 27860 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0422717s, 27860 KB] g=68, 271 evaluated, 270 expanded
[t=0.0424591s, 27860 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0424703s, 27860 KB] g=68, 276 evaluated, 275 expanded
[t=0.0426865s, 27860 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0426964s, 27860 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0427137s, 27860 KB] g=70, 282 evaluated, 281 expanded
[t=0.0445761s, 27860 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0445901s, 27860 KB] g=78, 336 evaluated, 335 expanded
[t=0.0448783s, 27860 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0448894s, 27860 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0449002s, 27860 KB] g=80, 344 evaluated, 343 expanded
[t=0.0462542s, 27860 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.046265s, 27860 KB] g=88, 383 evaluated, 382 expanded
[t=0.0463806s, 27860 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0463959s, 27860 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0464171s, 27860 KB] g=90, 386 evaluated, 385 expanded
[t=0.0494766s, 27860 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.049494s, 27860 KB] g=104, 471 evaluated, 470 expanded
[t=0.0496498s, 27860 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0496609s, 27860 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0496716s, 27860 KB] g=106, 475 evaluated, 474 expanded
[t=0.0499907s, 27860 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0500008s, 27860 KB] g=110, 484 evaluated, 483 expanded
[t=0.0501151s, 27860 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0501254s, 27860 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0501366s, 27860 KB] g=112, 487 evaluated, 486 expanded
[t=0.0713013s, 27860 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0713479s, 27860 KB] g=154, 1126 evaluated, 1125 expanded
[t=0.0721594s, 27860 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.072175s, 27860 KB] g=162, 1153 evaluated, 1152 expanded
[t=0.0724334s, 27860 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0724428s, 27860 KB] g=166, 1162 evaluated, 1161 expanded
[t=0.0725323s, 27860 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0725414s, 27860 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0725497s, 27860 KB] g=168, 1165 evaluated, 1164 expanded
[t=0.0735074s, 27860 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0735183s, 27860 KB] g=184, 1204 evaluated, 1203 expanded
[t=0.0737339s, 27860 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0737432s, 27860 KB] g=192, 1215 evaluated, 1214 expanded
[t=0.0737647s, 27860 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0737739s, 27860 KB] g=193, 1216 evaluated, 1215 expanded
[t=0.0737906s, 27860 KB] Solution found!
[t=0.073803s, 27860 KB] Actual search time: 0.0423407s
unstack b1 b20 (1)
put-down b1 (1)
unstack b13 b19 (1)
put-down b13 (1)
unstack b19 b26 (1)
put-down b19 (1)
unstack b20 b4 (1)
stack b20 b13 (1)
unstack b26 b22 (1)
stack b26 b19 (1)
pick-up b1 (1)
stack b1 b26 (1)
unstack b22 b2 (1)
put-down b22 (1)
unstack b2 b23 (1)
put-down b2 (1)
pick-up b24 (1)
stack b24 b22 (1)
unstack b23 b5 (1)
put-down b23 (1)
unstack b5 b25 (1)
put-down b5 (1)
unstack b25 b15 (1)
put-down b25 (1)
unstack b15 b8 (1)
put-down b15 (1)
unstack b8 b14 (1)
put-down b8 (1)
unstack b14 b6 (1)
stack b14 b20 (1)
pick-up b15 (1)
stack b15 b8 (1)
unstack b6 b18 (1)
stack b6 b23 (1)
unstack b18 b17 (1)
put-down b18 (1)
unstack b17 b7 (1)
stack b17 b18 (1)
unstack b7 b9 (1)
stack b7 b1 (1)
unstack b9 b10 (1)
put-down b9 (1)
unstack b10 b27 (1)
stack b10 b15 (1)
unstack b27 b12 (1)
stack b27 b2 (1)
unstack b12 b3 (1)
stack b12 b6 (1)
unstack b3 b11 (1)
stack b3 b17 (1)
unstack b11 b21 (1)
stack b11 b12 (1)
unstack b21 b16 (1)
put-down b21 (1)
pick-up b16 (1)
stack b16 b24 (1)
pick-up b4 (1)
stack b4 b11 (1)
pick-up b5 (1)
stack b5 b7 (1)
unstack b14 b20 (1)
put-down b14 (1)
unstack b20 b13 (1)
put-down b20 (1)
pick-up b13 (1)
stack b13 b9 (1)
pick-up b20 (1)
stack b20 b13 (1)
pick-up b14 (1)
stack b14 b20 (1)
unstack b16 b24 (1)
put-down b16 (1)
unstack b24 b22 (1)
put-down b24 (1)
pick-up b22 (1)
stack b22 b5 (1)
pick-up b24 (1)
stack b24 b22 (1)
pick-up b16 (1)
stack b16 b24 (1)
unstack b3 b17 (1)
put-down b3 (1)
unstack b17 b18 (1)
put-down b17 (1)
pick-up b18 (1)
stack b18 b16 (1)
pick-up b17 (1)
stack b17 b18 (1)
pick-up b3 (1)
stack b3 b17 (1)
unstack b4 b11 (1)
put-down b4 (1)
unstack b11 b12 (1)
put-down b11 (1)
pick-up b4 (1)
stack b4 b11 (1)
unstack b12 b6 (1)
put-down b12 (1)
unstack b6 b23 (1)
put-down b6 (1)
pick-up b23 (1)
stack b23 b21 (1)
pick-up b6 (1)
stack b6 b23 (1)
pick-up b12 (1)
stack b12 b6 (1)
unstack b4 b11 (1)
put-down b4 (1)
pick-up b11 (1)
stack b11 b12 (1)
pick-up b4 (1)
stack b4 b11 (1)
unstack b3 b17 (1)
put-down b3 (1)
unstack b17 b18 (1)
put-down b17 (1)
pick-up b3 (1)
stack b3 b17 (1)
unstack b18 b16 (1)
put-down b18 (1)
unstack b16 b24 (1)
put-down b16 (1)
unstack b24 b22 (1)
put-down b24 (1)
pick-up b16 (1)
stack b16 b24 (1)
pick-up b18 (1)
stack b18 b16 (1)
unstack b3 b17 (1)
put-down b3 (1)
pick-up b17 (1)
stack b17 b18 (1)
pick-up b3 (1)
stack b3 b17 (1)
unstack b22 b5 (1)
put-down b22 (1)
unstack b5 b7 (1)
put-down b5 (1)
unstack b7 b1 (1)
put-down b7 (1)
pick-up b5 (1)
stack b5 b7 (1)
pick-up b22 (1)
stack b22 b5 (1)
unstack b1 b26 (1)
put-down b1 (1)
unstack b26 b19 (1)
put-down b26 (1)
pick-up b19 (1)
stack b19 b4 (1)
pick-up b26 (1)
stack b26 b19 (1)
pick-up b1 (1)
stack b1 b26 (1)
unstack b22 b5 (1)
put-down b22 (1)
unstack b5 b7 (1)
put-down b5 (1)
pick-up b22 (1)
stack b22 b5 (1)
pick-up b7 (1)
stack b7 b1 (1)
unstack b22 b5 (1)
put-down b22 (1)
pick-up b5 (1)
stack b5 b7 (1)
pick-up b22 (1)
stack b22 b5 (1)
unstack b3 b17 (1)
put-down b3 (1)
unstack b17 b18 (1)
put-down b17 (1)
unstack b18 b16 (1)
put-down b18 (1)
pick-up b17 (1)
stack b17 b18 (1)
pick-up b3 (1)
stack b3 b17 (1)
unstack b16 b24 (1)
put-down b16 (1)
pick-up b24 (1)
stack b24 b22 (1)
pick-up b16 (1)
stack b16 b24 (1)
unstack b3 b17 (1)
put-down b3 (1)
unstack b17 b18 (1)
put-down b17 (1)
pick-up b18 (1)
stack b18 b16 (1)
pick-up b17 (1)
stack b17 b18 (1)
pick-up b3 (1)
stack b3 b17 (1)
[t=0.0738127s, 27860 KB] Plan length: 194 step(s).
[t=0.0738127s, 27860 KB] Plan cost: 194
[t=0.0738127s, 27860 KB] Expanded 1216 state(s).
[t=0.0738127s, 27860 KB] Reopened 0 state(s).
[t=0.0738127s, 27860 KB] Evaluated 1217 state(s).
[t=0.0738127s, 27860 KB] Evaluations: 2434
[t=0.0738127s, 27860 KB] Generated 11820 state(s).
[t=0.0738127s, 27860 KB] Dead ends: 0 state(s).
[t=0.0738127s, 27860 KB] Number of registered states: 1217
[t=0.0738127s, 27860 KB] Int hash set load factor: 1217/2048 = 0.594238
[t=0.0738127s, 27860 KB] Int hash set resizes: 11
[t=0.0738127s, 27860 KB] Search time: 0.04239s
[t=0.0738127s, 27860 KB] Total time: 0.0738127s
Solution found.
Peak memory: 27860 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.26s
