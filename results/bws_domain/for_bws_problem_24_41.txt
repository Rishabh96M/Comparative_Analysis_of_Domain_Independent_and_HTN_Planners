INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_24/bws_problem_24_41.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.011s wall-clock]
1898 relevant atoms
1272 auxiliary atoms
3170 final queue length
5526 total queue pushes
Completing instantiation... [0.020s CPU, 0.019s wall-clock]
Instantiating: [0.030s CPU, 0.032s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
25 uncovered facts
Choosing groups: [0.010s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.007s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.029s wall-clock]
1704 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
48 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.018s wall-clock]
Reordering and filtering variables...
49 of 49 variables necessary.
25 of 49 mutex groups necessary.
1152 of 1152 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.007s wall-clock]
Translator variables: 49
Translator derived variables: 0
Translator facts: 650
Translator goal facts: 18
Translator mutex groups: 25
Translator total mutex groups size: 625
Translator operators: 1152
Translator axioms: 0
Translator task size: 9910
Translator peak memory: 37880 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.106s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.6414e-05s, 24488 KB] reading input...
[t=0.00371307s, 25532 KB] done reading input!
[t=0.00484165s, 25928 KB] Initializing landmark count heuristic...
[t=0.00487383s, 25928 KB] Generating landmark graph...
[t=0.00495267s, 25928 KB] Building a landmark graph with reasonable orders.
[t=0.00502165s, 26060 KB] Initializing Exploration...
[t=0.00536777s, 26388 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0193192s, 26916 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0194327s, 26916 KB] Landmarks generation time: 0.0144856s
[t=0.0194526s, 26916 KB] Discovered 102 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0194724s, 26916 KB] 467 edges
[t=0.0194848s, 26916 KB] approx. reasonable orders
[t=0.0200743s, 26916 KB] approx. obedient reasonable orders
[t=0.0201155s, 26916 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0201266s, 26916 KB] Landmarks generation time: 0.0152468s
[t=0.0201387s, 26916 KB] Discovered 102 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0201488s, 26916 KB] 477 edges
[t=0.0201593s, 26916 KB] Landmark graph generation time: 0.0152943s
[t=0.0201698s, 26916 KB] Landmark graph contains 102 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.02018s, 26916 KB] Landmark graph contains 477 orderings.
[t=0.0208674s, 26916 KB] Simplifying 4560 unary operators... done! [3456 unary operators]
[t=0.0219819s, 26916 KB] time to simplify: 0.0011918s
[t=0.0221305s, 26916 KB] Initializing additive heuristic...
[t=0.0221462s, 26916 KB] Initializing FF heuristic...
[t=0.0222006s, 26916 KB] Building successor generator...done!
[t=0.0224277s, 26916 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0224373s, 26916 KB] time for successor generation creation: 0.00018777s
[t=0.0224525s, 26916 KB] Variables: 49
[t=0.0224624s, 26916 KB] FactPairs: 650
[t=0.0224786s, 26916 KB] Bytes per state: 20
[t=0.0226116s, 26916 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0226463s, 26916 KB] 48 initial landmarks, 18 goal landmarks
[t=0.0227069s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0227175s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0227279s, 26916 KB] g=0, 1 evaluated, 0 expanded
[t=0.0227442s, 26916 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0227534s, 26916 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0228286s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0228389s, 26916 KB] g=1, 3 evaluated, 2 expanded
[t=0.0229909s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0230009s, 26916 KB] g=2, 8 evaluated, 7 expanded
[t=0.0230671s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0230768s, 26916 KB] g=3, 10 evaluated, 9 expanded
[t=0.0232492s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0232592s, 26916 KB] g=5, 16 evaluated, 15 expanded
[t=0.0235113s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0235214s, 26916 KB] g=7, 25 evaluated, 24 expanded
[t=0.023721s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0237303s, 26916 KB] g=9, 32 evaluated, 31 expanded
[t=0.0237731s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0237859s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0237961s, 26916 KB] g=10, 33 evaluated, 32 expanded
[t=0.0240399s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0240548s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.024064s, 26916 KB] g=12, 41 evaluated, 40 expanded
[t=0.0242909s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0243002s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0243133s, 26916 KB] g=14, 49 evaluated, 48 expanded
[t=0.0245079s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0245172s, 26916 KB] g=16, 56 evaluated, 55 expanded
[t=0.0247239s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0247331s, 26916 KB] g=16, 63 evaluated, 62 expanded
[t=0.0248285s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0248373s, 26916 KB] g=17, 66 evaluated, 65 expanded
[t=0.0252737s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0252968s, 26916 KB] g=20, 81 evaluated, 80 expanded
[t=0.0257332s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.025743s, 26916 KB] g=22, 96 evaluated, 95 expanded
[t=0.0260739s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.026087s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.026095s, 26916 KB] g=24, 106 evaluated, 105 expanded
[t=0.0263183s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.026327s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.026335s, 26916 KB] g=26, 114 evaluated, 113 expanded
[t=0.0265843s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0265935s, 26916 KB] g=28, 123 evaluated, 122 expanded
[t=0.0266323s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0266413s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0266494s, 26916 KB] g=28, 124 evaluated, 123 expanded
[t=0.0268735s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0268829s, 26916 KB] g=30, 131 evaluated, 130 expanded
[t=0.0269497s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0269585s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0269665s, 26916 KB] g=30, 133 evaluated, 132 expanded
[t=0.0271924s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0272013s, 26916 KB] g=32, 141 evaluated, 140 expanded
[t=0.0273514s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0273603s, 26916 KB] g=32, 146 evaluated, 145 expanded
[t=0.0277154s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0277254s, 26916 KB] g=34, 159 evaluated, 158 expanded
[t=0.0281064s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0281209s, 26916 KB] g=36, 172 evaluated, 171 expanded
[t=0.0282145s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0282245s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0282328s, 26916 KB] g=36, 175 evaluated, 174 expanded
[t=0.0284014s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0284124s, 26916 KB] g=38, 181 evaluated, 180 expanded
[t=0.0286132s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0286276s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0286361s, 26916 KB] g=40, 188 evaluated, 187 expanded
[t=0.0288373s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0288467s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0288562s, 26916 KB] g=42, 195 evaluated, 194 expanded
[t=0.0292677s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0292812s, 26916 KB] g=45, 209 evaluated, 208 expanded
[t=0.0293209s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0293301s, 26916 KB] g=46, 210 evaluated, 209 expanded
[t=0.0295134s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0295234s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0295329s, 26916 KB] g=48, 216 evaluated, 215 expanded
[t=0.0297142s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0297257s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0297347s, 26916 KB] g=50, 222 evaluated, 221 expanded
[t=0.0303016s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0303196s, 26916 KB] g=56, 241 evaluated, 240 expanded
[t=0.0307104s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0307313s, 26916 KB] g=58, 254 evaluated, 253 expanded
[t=0.0309407s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0309504s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0309584s, 26916 KB] g=60, 261 evaluated, 260 expanded
[t=0.031127s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0311375s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0311486s, 26916 KB] g=62, 267 evaluated, 266 expanded
[t=0.0313164s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0313263s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0313346s, 26916 KB] g=64, 273 evaluated, 272 expanded
[t=0.0314883s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0314997s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0315082s, 26916 KB] g=66, 278 evaluated, 277 expanded
[t=0.0317744s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0317855s, 26916 KB] g=70, 288 evaluated, 287 expanded
[t=0.0318762s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0318853s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0318938s, 26916 KB] g=72, 291 evaluated, 290 expanded
[t=0.0328378s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0328509s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0328589s, 26916 KB] g=84, 324 evaluated, 323 expanded
[t=0.0331285s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0331433s, 26916 KB] g=88, 333 evaluated, 332 expanded
[t=0.0332337s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0332448s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0332547s, 26916 KB] g=90, 336 evaluated, 335 expanded
[t=0.0344173s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0344363s, 26916 KB] g=108, 381 evaluated, 380 expanded
[t=0.0344923s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.034503s, 26916 KB] g=108, 383 evaluated, 382 expanded
[t=0.0345787s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0345881s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0345966s, 26916 KB] g=110, 386 evaluated, 385 expanded
[t=0.0348055s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0348155s, 26916 KB] g=118, 397 evaluated, 396 expanded
[t=0.034887s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0348967s, 26916 KB] g=122, 401 evaluated, 400 expanded
[t=0.0349163s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0349252s, 26916 KB] g=123, 402 evaluated, 401 expanded
[t=0.0349412s, 26916 KB] Solution found!
[t=0.0349569s, 26916 KB] Actual search time: 0.0123073s
unstack b11 b2 (1)
put-down b11 (1)
unstack b12 b17 (1)
put-down b12 (1)
unstack b2 b15 (1)
put-down b2 (1)
unstack b8 b19 (1)
put-down b8 (1)
unstack b19 b22 (1)
stack b19 b11 (1)
unstack b22 b7 (1)
put-down b22 (1)
pick-up b12 (1)
stack b12 b22 (1)
unstack b15 b9 (1)
put-down b15 (1)
unstack b9 b16 (1)
put-down b9 (1)
unstack b16 b13 (1)
stack b16 b17 (1)
unstack b13 b18 (1)
put-down b13 (1)
pick-up b2 (1)
stack b2 b13 (1)
unstack b18 b23 (1)
put-down b18 (1)
pick-up b15 (1)
stack b15 b16 (1)
unstack b3 b1 (1)
stack b3 b18 (1)
pick-up b8 (1)
stack b8 b7 (1)
unstack b1 b4 (1)
put-down b1 (1)
pick-up b4 (1)
stack b4 b1 (1)
unstack b23 b20 (1)
put-down b23 (1)
unstack b20 b14 (1)
stack b20 b15 (1)
pick-up b9 (1)
stack b9 b14 (1)
unstack b8 b7 (1)
put-down b8 (1)
unstack b7 b10 (1)
stack b7 b4 (1)
pick-up b23 (1)
stack b23 b10 (1)
pick-up b8 (1)
stack b8 b7 (1)
unstack b9 b14 (1)
put-down b9 (1)
unstack b14 b6 (1)
put-down b14 (1)
unstack b6 b5 (1)
put-down b6 (1)
unstack b5 b21 (1)
put-down b5 (1)
pick-up b14 (1)
stack b14 b6 (1)
unstack b21 b24 (1)
stack b21 b5 (1)
pick-up b24 (1)
stack b24 b3 (1)
pick-up b9 (1)
stack b9 b14 (1)
unstack b2 b13 (1)
put-down b2 (1)
pick-up b13 (1)
stack b13 b20 (1)
pick-up b2 (1)
stack b2 b13 (1)
unstack b8 b7 (1)
put-down b8 (1)
unstack b7 b4 (1)
put-down b7 (1)
pick-up b8 (1)
stack b8 b7 (1)
unstack b4 b1 (1)
put-down b4 (1)
pick-up b1 (1)
stack b1 b21 (1)
pick-up b4 (1)
stack b4 b1 (1)
unstack b8 b7 (1)
put-down b8 (1)
pick-up b7 (1)
stack b7 b4 (1)
pick-up b8 (1)
stack b8 b7 (1)
unstack b2 b13 (1)
put-down b2 (1)
unstack b13 b20 (1)
put-down b13 (1)
unstack b20 b15 (1)
put-down b20 (1)
pick-up b13 (1)
stack b13 b20 (1)
pick-up b2 (1)
stack b2 b13 (1)
unstack b15 b16 (1)
put-down b15 (1)
unstack b16 b17 (1)
put-down b16 (1)
pick-up b17 (1)
stack b17 b23 (1)
pick-up b16 (1)
stack b16 b17 (1)
pick-up b15 (1)
stack b15 b16 (1)
unstack b2 b13 (1)
put-down b2 (1)
unstack b13 b20 (1)
put-down b13 (1)
pick-up b2 (1)
stack b2 b13 (1)
pick-up b20 (1)
stack b20 b15 (1)
unstack b2 b13 (1)
put-down b2 (1)
pick-up b13 (1)
stack b13 b20 (1)
pick-up b2 (1)
stack b2 b13 (1)
[t=0.0349671s, 26916 KB] Plan length: 124 step(s).
[t=0.0349671s, 26916 KB] Plan cost: 124
[t=0.0349671s, 26916 KB] Expanded 402 state(s).
[t=0.0349671s, 26916 KB] Reopened 0 state(s).
[t=0.0349671s, 26916 KB] Evaluated 403 state(s).
[t=0.0349671s, 26916 KB] Evaluations: 806
[t=0.0349671s, 26916 KB] Generated 3912 state(s).
[t=0.0349671s, 26916 KB] Dead ends: 0 state(s).
[t=0.0349671s, 26916 KB] Number of registered states: 403
[t=0.0349671s, 26916 KB] Int hash set load factor: 403/512 = 0.787109
[t=0.0349671s, 26916 KB] Int hash set resizes: 9
[t=0.0349671s, 26916 KB] Search time: 0.0123562s
[t=0.0349671s, 26916 KB] Total time: 0.0349671s
Solution found.
Peak memory: 26916 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.19s
