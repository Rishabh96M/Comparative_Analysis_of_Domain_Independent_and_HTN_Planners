INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_20/bws_problem_20_70.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.008s wall-clock]
1342 relevant atoms
900 auxiliary atoms
2242 final queue length
3884 total queue pushes
Completing instantiation... [0.010s CPU, 0.014s wall-clock]
Instantiating: [0.020s CPU, 0.024s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
21 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.005s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.020s wall-clock]
1180 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
40 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.010s wall-clock]
Reordering and filtering variables...
41 of 41 variables necessary.
21 of 41 mutex groups necessary.
800 of 800 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.005s wall-clock]
Translator variables: 41
Translator derived variables: 0
Translator facts: 462
Translator goal facts: 16
Translator mutex groups: 21
Translator total mutex groups size: 441
Translator operators: 800
Translator axioms: 0
Translator task size: 6900
Translator peak memory: 35948 KB
Writing output... [0.000s CPU, 0.004s wall-clock]
Done! [0.070s CPU, 0.073s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.1409e-05s, 24488 KB] reading input...
[t=0.00240636s, 25180 KB] done reading input!
[t=0.00324539s, 25444 KB] Initializing landmark count heuristic...
[t=0.00328256s, 25444 KB] Generating landmark graph...
[t=0.00334517s, 25576 KB] Building a landmark graph with reasonable orders.
[t=0.00340224s, 25576 KB] Initializing Exploration...
[t=0.00368655s, 25744 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0115518s, 26272 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.011657s, 26272 KB] Landmarks generation time: 0.00831306s
[t=0.0116719s, 26272 KB] Discovered 89 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0116943s, 26272 KB] 616 edges
[t=0.011706s, 26272 KB] approx. reasonable orders
[t=0.0128118s, 26272 KB] approx. obedient reasonable orders
[t=0.0128553s, 26272 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0128658s, 26272 KB] Landmarks generation time: 0.00958019s
[t=0.012876s, 26272 KB] Discovered 89 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0128846s, 26272 KB] 643 edges
[t=0.0128934s, 26272 KB] Landmark graph generation time: 0.00961974s
[t=0.0129038s, 26272 KB] Landmark graph contains 89 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0129125s, 26272 KB] Landmark graph contains 643 orderings.
[t=0.0133795s, 26272 KB] Simplifying 3160 unary operators... done! [2400 unary operators]
[t=0.0141726s, 26272 KB] time to simplify: 0.000867261s
[t=0.0143087s, 26272 KB] Initializing additive heuristic...
[t=0.0143338s, 26272 KB] Initializing FF heuristic...
[t=0.0144293s, 26272 KB] Building successor generator...done!
[t=0.0146353s, 26272 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0146457s, 26272 KB] time for successor generation creation: 0.000167874s
[t=0.0146607s, 26272 KB] Variables: 41
[t=0.0146692s, 26272 KB] FactPairs: 462
[t=0.0146821s, 26272 KB] Bytes per state: 16
[t=0.0149381s, 26272 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.01498s, 26272 KB] 41 initial landmarks, 16 goal landmarks
[t=0.0150777s, 26272 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0150876s, 26272 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0150963s, 26272 KB] g=0, 1 evaluated, 0 expanded
[t=0.0151097s, 26272 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0151182s, 26272 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0152004s, 26272 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.01521s, 26272 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.015218s, 26272 KB] g=2, 4 evaluated, 3 expanded
[t=0.0152912s, 26272 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0153001s, 26272 KB] g=4, 7 evaluated, 6 expanded
[t=0.0154021s, 26272 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0154115s, 26272 KB] g=6, 11 evaluated, 10 expanded
[t=0.0155419s, 26272 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0155506s, 26272 KB] g=8, 17 evaluated, 16 expanded
[t=0.0156009s, 26272 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0156094s, 26272 KB] g=9, 19 evaluated, 18 expanded
[t=0.0157427s, 26272 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0157515s, 26272 KB] g=8, 25 evaluated, 24 expanded
[t=0.0158196s, 26272 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0158287s, 26272 KB] g=12, 28 evaluated, 27 expanded
[t=0.016077s, 26272 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0160856s, 26272 KB] g=14, 40 evaluated, 39 expanded
[t=0.0162561s, 26272 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0162654s, 26272 KB] g=16, 48 evaluated, 47 expanded
[t=0.0162953s, 26272 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0163038s, 26272 KB] g=16, 49 evaluated, 48 expanded
[t=0.0165851s, 26272 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0166016s, 26272 KB] g=18, 62 evaluated, 61 expanded
[t=0.0166519s, 26272 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0166615s, 26272 KB] g=18, 63 evaluated, 62 expanded
[t=0.0169728s, 26272 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0169887s, 26272 KB] g=20, 75 evaluated, 74 expanded
[t=0.0172869s, 26272 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0172965s, 26272 KB] g=22, 89 evaluated, 88 expanded
[t=0.0174475s, 26272 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0174561s, 26272 KB] g=23, 95 evaluated, 94 expanded
[t=0.0179237s, 26272 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0179332s, 26272 KB] g=24, 118 evaluated, 117 expanded
[t=0.0180252s, 26272 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0180339s, 26272 KB] g=26, 122 evaluated, 121 expanded
[t=0.018295s, 26272 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0183043s, 26272 KB] g=26, 134 evaluated, 133 expanded
[t=0.0185422s, 26272 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0185511s, 26272 KB] g=28, 145 evaluated, 144 expanded
[t=0.0185805s, 26272 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.018589s, 26272 KB] g=28, 146 evaluated, 145 expanded
[t=0.0190408s, 26272 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0190559s, 26272 KB] g=30, 166 evaluated, 165 expanded
[t=0.0196353s, 26272 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0196464s, 26272 KB] g=32, 193 evaluated, 192 expanded
[t=0.019931s, 26272 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0199418s, 26272 KB] g=34, 206 evaluated, 205 expanded
[t=0.0200576s, 26272 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0200662s, 26272 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.020074s, 26272 KB] g=34, 211 evaluated, 210 expanded
[t=0.0203256s, 26272 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0203345s, 26272 KB] g=36, 223 evaluated, 222 expanded
[t=0.020568s, 26272 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0205768s, 26272 KB] g=36, 234 evaluated, 233 expanded
[t=0.0206876s, 26272 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0206965s, 26272 KB] g=38, 239 evaluated, 238 expanded
[t=0.0210735s, 26272 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0210846s, 26272 KB] g=40, 256 evaluated, 255 expanded
[t=0.0211309s, 26272 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0211398s, 26272 KB] g=38, 257 evaluated, 256 expanded
[t=0.021508s, 26272 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0215229s, 26272 KB] g=42, 273 evaluated, 272 expanded
[t=0.0217514s, 26272 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0217603s, 26272 KB] g=40, 283 evaluated, 282 expanded
[t=0.0221741s, 26272 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0221862s, 26272 KB] g=42, 301 evaluated, 300 expanded
[t=0.0225002s, 26272 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0225094s, 26272 KB] g=44, 315 evaluated, 314 expanded
[t=0.0226051s, 26272 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.022618s, 26272 KB] g=44, 319 evaluated, 318 expanded
[t=0.0228984s, 26272 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0229298s, 26272 KB] g=46, 330 evaluated, 329 expanded
[t=0.0229944s, 26272 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0230037s, 26272 KB] g=46, 332 evaluated, 331 expanded
[t=0.023171s, 26272 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0231798s, 26272 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.023188s, 26272 KB] g=48, 339 evaluated, 338 expanded
[t=0.0236075s, 26272 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0236248s, 26272 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0236334s, 26272 KB] g=52, 358 evaluated, 357 expanded
[t=0.0237544s, 26272 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0237632s, 26272 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0237713s, 26272 KB] g=54, 363 evaluated, 362 expanded
[t=0.0248023s, 26272 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.024816s, 26272 KB] g=64, 409 evaluated, 408 expanded
[t=0.0249415s, 26272 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0249503s, 26272 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0249582s, 26272 KB] g=66, 415 evaluated, 414 expanded
[t=0.0250422s, 26272 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0250509s, 26272 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0250588s, 26272 KB] g=68, 419 evaluated, 418 expanded
[t=0.0253648s, 26272 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0253751s, 26272 KB] g=72, 435 evaluated, 434 expanded
[t=0.0254615s, 26272 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0254705s, 26272 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0254784s, 26272 KB] g=74, 439 evaluated, 438 expanded
[t=0.0259882s, 26272 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.026s, 26272 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0260086s, 26272 KB] g=82, 467 evaluated, 466 expanded
[t=0.0260523s, 26272 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0260607s, 26272 KB] g=82, 469 evaluated, 468 expanded
[t=0.0261182s, 26272 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0261265s, 26272 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0261342s, 26272 KB] g=84, 472 evaluated, 471 expanded
[t=0.0265731s, 26272 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0266113s, 26272 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0266302s, 26272 KB] g=98, 497 evaluated, 496 expanded
[t=0.0266906s, 26272 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0267017s, 26272 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0267112s, 26272 KB] g=100, 500 evaluated, 499 expanded
[t=0.0267929s, 26272 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0268081s, 26272 KB] g=104, 504 evaluated, 503 expanded
[t=0.0268264s, 26272 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0268356s, 26272 KB] g=105, 505 evaluated, 504 expanded
[t=0.0268502s, 26272 KB] Solution found!
[t=0.0268617s, 26272 KB] Actual search time: 0.0118759s
unstack b17 b7 (1)
put-down b17 (1)
unstack b7 b20 (1)
put-down b7 (1)
unstack b20 b12 (1)
put-down b20 (1)
unstack b12 b10 (1)
put-down b12 (1)
unstack b10 b11 (1)
put-down b10 (1)
unstack b9 b1 (1)
put-down b9 (1)
unstack b11 b16 (1)
put-down b11 (1)
unstack b16 b3 (1)
put-down b16 (1)
unstack b3 b6 (1)
stack b3 b1 (1)
unstack b6 b15 (1)
put-down b6 (1)
unstack b15 b14 (1)
put-down b15 (1)
unstack b14 b4 (1)
put-down b14 (1)
unstack b4 b5 (1)
stack b4 b7 (1)
unstack b5 b2 (1)
put-down b5 (1)
unstack b2 b13 (1)
put-down b2 (1)
unstack b13 b19 (1)
stack b13 b11 (1)
pick-up b12 (1)
stack b12 b13 (1)
pick-up b20 (1)
stack b20 b6 (1)
pick-up b14 (1)
stack b14 b20 (1)
pick-up b5 (1)
stack b5 b19 (1)
pick-up b16 (1)
stack b16 b5 (1)
pick-up b9 (1)
stack b9 b3 (1)
pick-up b15 (1)
stack b15 b9 (1)
pick-up b10 (1)
stack b10 b15 (1)
unstack b4 b7 (1)
put-down b4 (1)
pick-up b7 (1)
stack b7 b12 (1)
pick-up b4 (1)
stack b4 b7 (1)
unstack b16 b5 (1)
put-down b16 (1)
unstack b5 b19 (1)
put-down b5 (1)
unstack b19 b8 (1)
put-down b19 (1)
unstack b8 b18 (1)
put-down b8 (1)
pick-up b18 (1)
stack b18 b4 (1)
pick-up b16 (1)
stack b16 b5 (1)
pick-up b19 (1)
stack b19 b8 (1)
unstack b16 b5 (1)
put-down b16 (1)
pick-up b5 (1)
stack b5 b19 (1)
pick-up b16 (1)
stack b16 b5 (1)
unstack b14 b20 (1)
put-down b14 (1)
unstack b20 b6 (1)
put-down b20 (1)
pick-up b6 (1)
stack b6 b18 (1)
pick-up b20 (1)
stack b20 b6 (1)
pick-up b14 (1)
stack b14 b20 (1)
unstack b10 b15 (1)
put-down b10 (1)
unstack b15 b9 (1)
put-down b15 (1)
pick-up b10 (1)
stack b10 b15 (1)
unstack b9 b3 (1)
put-down b9 (1)
unstack b3 b1 (1)
put-down b3 (1)
pick-up b1 (1)
stack b1 b16 (1)
pick-up b3 (1)
stack b3 b1 (1)
pick-up b9 (1)
stack b9 b3 (1)
unstack b10 b15 (1)
put-down b10 (1)
pick-up b15 (1)
stack b15 b9 (1)
pick-up b10 (1)
stack b10 b15 (1)
[t=0.0268717s, 26272 KB] Plan length: 106 step(s).
[t=0.0268717s, 26272 KB] Plan cost: 106
[t=0.0268717s, 26272 KB] Expanded 505 state(s).
[t=0.0268717s, 26272 KB] Reopened 0 state(s).
[t=0.0268717s, 26272 KB] Evaluated 506 state(s).
[t=0.0268717s, 26272 KB] Evaluations: 1012
[t=0.0268717s, 26272 KB] Generated 4981 state(s).
[t=0.0268717s, 26272 KB] Dead ends: 0 state(s).
[t=0.0268717s, 26272 KB] Number of registered states: 506
[t=0.0268717s, 26272 KB] Int hash set load factor: 506/512 = 0.988281
[t=0.0268717s, 26272 KB] Int hash set resizes: 9
[t=0.0268717s, 26272 KB] Search time: 0.0119352s
[t=0.0268717s, 26272 KB] Total time: 0.0268717s
Solution found.
Peak memory: 26272 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.14s
