INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_27/bws_problem_27_55.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.017s wall-clock]
2378 relevant atoms
1593 auxiliary atoms
3971 final queue length
6945 total queue pushes
Completing instantiation... [0.030s CPU, 0.030s wall-clock]
Instantiating: [0.050s CPU, 0.049s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
28 uncovered facts
Choosing groups: [0.010s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.008s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.001s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.001s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.040s CPU, 0.045s wall-clock]
2160 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
54 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.018s wall-clock]
Reordering and filtering variables...
55 of 55 variables necessary.
28 of 55 mutex groups necessary.
1458 of 1458 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.010s wall-clock]
Translator variables: 55
Translator derived variables: 0
Translator facts: 812
Translator goal facts: 22
Translator mutex groups: 28
Translator total mutex groups size: 784
Translator operators: 1458
Translator axioms: 0
Translator task size: 12527
Translator peak memory: 39412 KB
Writing output... [0.000s CPU, 0.008s wall-clock]
Done! [0.140s CPU, 0.144s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.0167e-05s, 24488 KB] reading input...
[t=0.00421342s, 25936 KB] done reading input!
[t=0.00526489s, 26332 KB] Initializing landmark count heuristic...
[t=0.00530209s, 26332 KB] Generating landmark graph...
[t=0.00539664s, 26332 KB] Building a landmark graph with reasonable orders.
[t=0.0054923s, 26464 KB] Initializing Exploration...
[t=0.00598176s, 26732 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0264164s, 27392 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.026545s, 27392 KB] Landmarks generation time: 0.0211561s
[t=0.0265667s, 27392 KB] Discovered 114 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0265843s, 27392 KB] 489 edges
[t=0.026594s, 27392 KB] approx. reasonable orders
[t=0.0280125s, 27392 KB] approx. obedient reasonable orders
[t=0.0280547s, 27392 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0280647s, 27392 KB] Landmarks generation time: 0.0227559s
[t=0.0280747s, 27392 KB] Discovered 114 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0280828s, 27392 KB] 511 edges
[t=0.0280915s, 27392 KB] Landmark graph generation time: 0.0227966s
[t=0.0281s, 27392 KB] Landmark graph contains 114 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.028112s, 27392 KB] Landmark graph contains 511 orderings.
[t=0.028679s, 27472 KB] Simplifying 5778 unary operators... done! [4374 unary operators]
[t=0.0300861s, 27604 KB] time to simplify: 0.0015005s
[t=0.0302651s, 27604 KB] Initializing additive heuristic...
[t=0.0302832s, 27604 KB] Initializing FF heuristic...
[t=0.0303349s, 27604 KB] Building successor generator...done!
[t=0.0306026s, 27604 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0306186s, 27604 KB] time for successor generation creation: 0.000232052s
[t=0.0306351s, 27604 KB] Variables: 55
[t=0.0306441s, 27604 KB] FactPairs: 812
[t=0.0306525s, 27604 KB] Bytes per state: 24
[t=0.0307375s, 27604 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0307713s, 27604 KB] 52 initial landmarks, 22 goal landmarks
[t=0.0308368s, 27604 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 62
[t=0.0308468s, 27604 KB] New best heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0308552s, 27604 KB] g=0, 1 evaluated, 0 expanded
[t=0.0308689s, 27604 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 62
[t=0.0308774s, 27604 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0310724s, 27604 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 61
[t=0.031082s, 27604 KB] New best heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.0310904s, 27604 KB] g=2, 6 evaluated, 5 expanded
[t=0.0312732s, 27604 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 60
[t=0.0312822s, 27604 KB] g=4, 11 evaluated, 10 expanded
[t=0.0313267s, 27604 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.0313351s, 27604 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0313433s, 27604 KB] g=4, 12 evaluated, 11 expanded
[t=0.031489s, 27604 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0314981s, 27604 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0315073s, 27604 KB] g=6, 16 evaluated, 15 expanded
[t=0.031651s, 27604 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0316604s, 27604 KB] g=8, 20 evaluated, 19 expanded
[t=0.0318976s, 27604 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0319066s, 27604 KB] g=10, 27 evaluated, 26 expanded
[t=0.0319482s, 27604 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0319569s, 27604 KB] g=10, 28 evaluated, 27 expanded
[t=0.0322909s, 27604 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0323003s, 27604 KB] g=12, 38 evaluated, 37 expanded
[t=0.0325439s, 27604 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0325564s, 27604 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0325648s, 27604 KB] g=14, 45 evaluated, 44 expanded
[t=0.0327444s, 27604 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0327531s, 27604 KB] g=16, 50 evaluated, 49 expanded
[t=0.032972s, 27604 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0329873s, 27604 KB] g=18, 56 evaluated, 55 expanded
[t=0.033038s, 27604 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0330522s, 27604 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0330607s, 27604 KB] g=18, 57 evaluated, 56 expanded
[t=0.0331445s, 27604 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0331541s, 27604 KB] g=19, 59 evaluated, 58 expanded
[t=0.0331996s, 27604 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0332085s, 27604 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0332164s, 27604 KB] g=20, 60 evaluated, 59 expanded
[t=0.0334504s, 27604 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0334665s, 27604 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0334745s, 27604 KB] g=22, 66 evaluated, 65 expanded
[t=0.0336171s, 27604 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0336261s, 27604 KB] g=23, 70 evaluated, 69 expanded
[t=0.0339787s, 27604 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0339907s, 27604 KB] g=26, 80 evaluated, 79 expanded
[t=0.034067s, 27604 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0340756s, 27604 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0340832s, 27604 KB] g=26, 82 evaluated, 81 expanded
[t=0.0343167s, 27604 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0343254s, 27604 KB] g=28, 89 evaluated, 88 expanded
[t=0.0346583s, 27604 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0346678s, 27604 KB] g=30, 99 evaluated, 98 expanded
[t=0.0350618s, 27604 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0350711s, 27604 KB] g=32, 111 evaluated, 110 expanded
[t=0.0355577s, 27604 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.035577s, 27604 KB] g=34, 124 evaluated, 123 expanded
[t=0.0378849s, 27604 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0379061s, 27604 KB] g=38, 192 evaluated, 191 expanded
[t=0.0383379s, 27604 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0383488s, 27604 KB] g=40, 204 evaluated, 203 expanded
[t=0.0387021s, 27604 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0387125s, 27604 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0387203s, 27604 KB] g=42, 214 evaluated, 213 expanded
[t=0.0389987s, 27604 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0390196s, 27604 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.039031s, 27604 KB] g=44, 222 evaluated, 221 expanded
[t=0.0393104s, 27604 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0393213s, 27604 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0393298s, 27604 KB] g=46, 230 evaluated, 229 expanded
[t=0.0396559s, 27604 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0396807s, 27604 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0396984s, 27604 KB] g=48, 238 evaluated, 237 expanded
[t=0.040481s, 27604 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.040539s, 27604 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0405561s, 27604 KB] g=50, 247 evaluated, 246 expanded
[t=0.0412389s, 27604 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0412668s, 27604 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0412752s, 27604 KB] g=52, 256 evaluated, 255 expanded
[t=0.0430571s, 27604 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0431042s, 27604 KB] g=57, 305 evaluated, 304 expanded
[t=0.0431566s, 27604 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0431663s, 27604 KB] g=58, 306 evaluated, 305 expanded
[t=0.043631s, 27604 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0436416s, 27604 KB] g=60, 319 evaluated, 318 expanded
[t=0.043881s, 27604 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0438905s, 27604 KB] g=58, 326 evaluated, 325 expanded
[t=0.0439651s, 27604 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0439749s, 27604 KB] g=61, 328 evaluated, 327 expanded
[t=0.0440525s, 27604 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0440621s, 27604 KB] g=62, 330 evaluated, 329 expanded
[t=0.0444256s, 27604 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0444355s, 27604 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0444438s, 27604 KB] g=64, 341 evaluated, 340 expanded
[t=0.0446474s, 27604 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0446572s, 27604 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0446651s, 27604 KB] g=66, 347 evaluated, 346 expanded
[t=0.0473936s, 27604 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.047406s, 27604 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0474141s, 27604 KB] g=74, 427 evaluated, 426 expanded
[t=0.047586s, 27604 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0476005s, 27604 KB] g=74, 432 evaluated, 431 expanded
[t=0.0478012s, 27604 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0478103s, 27604 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0478182s, 27604 KB] g=76, 438 evaluated, 437 expanded
[t=0.0514594s, 27604 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0515323s, 27604 KB] g=84, 544 evaluated, 543 expanded
[t=0.0517992s, 27604 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0518171s, 27604 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0518312s, 27604 KB] g=86, 548 evaluated, 547 expanded
[t=0.0546894s, 27604 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0547161s, 27604 KB] g=98, 622 evaluated, 621 expanded
[t=0.0552013s, 27604 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0552111s, 27604 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0552185s, 27604 KB] g=104, 636 evaluated, 635 expanded
[t=0.0563104s, 27604 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0563201s, 27604 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0563285s, 27604 KB] g=122, 669 evaluated, 668 expanded
[t=0.106078s, 27604 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.106196s, 27604 KB] g=138, 2147 evaluated, 2146 expanded
[t=0.106341s, 27604 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.106354s, 27604 KB] g=140, 2151 evaluated, 2150 expanded
[t=0.107969s, 27604 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.107987s, 27604 KB] g=152, 2201 evaluated, 2200 expanded
[t=0.108282s, 27604 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.108295s, 27604 KB] g=156, 2210 evaluated, 2209 expanded
[t=0.1084s, 27604 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.108411s, 27604 KB] g=158, 2213 evaluated, 2212 expanded
[t=0.111156s, 27604 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.111176s, 27604 KB] g=188, 2318 evaluated, 2317 expanded
[t=0.111385s, 27604 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.111395s, 27604 KB] g=192, 2327 evaluated, 2326 expanded
[t=0.111468s, 27604 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.111477s, 27604 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.111485s, 27604 KB] g=194, 2330 evaluated, 2329 expanded
[t=0.111821s, 27604 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.111832s, 27604 KB] g=206, 2348 evaluated, 2347 expanded
[t=0.111904s, 27604 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.111912s, 27604 KB] g=210, 2352 evaluated, 2351 expanded
[t=0.111931s, 27604 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.111941s, 27604 KB] g=211, 2353 evaluated, 2352 expanded
[t=0.111958s, 27604 KB] Solution found!
[t=0.111972s, 27604 KB] Actual search time: 0.081197s
unstack b11 b6 (1)
put-down b11 (1)
unstack b21 b5 (1)
stack b21 b16 (1)
unstack b5 b14 (1)
stack b5 b21 (1)
unstack b14 b1 (1)
put-down b14 (1)
unstack b1 b15 (1)
stack b1 b9 (1)
unstack b6 b3 (1)
put-down b6 (1)
unstack b3 b27 (1)
stack b3 b14 (1)
unstack b27 b26 (1)
put-down b27 (1)
unstack b26 b17 (1)
stack b26 b27 (1)
unstack b17 b18 (1)
stack b17 b3 (1)
unstack b18 b4 (1)
put-down b18 (1)
unstack b4 b25 (1)
put-down b4 (1)
unstack b25 b24 (1)
stack b25 b18 (1)
unstack b1 b9 (1)
put-down b1 (1)
unstack b9 b8 (1)
put-down b9 (1)
pick-up b8 (1)
stack b8 b1 (1)
unstack b5 b21 (1)
put-down b5 (1)
unstack b21 b16 (1)
put-down b21 (1)
unstack b16 b20 (1)
stack b16 b8 (1)
unstack b20 b23 (1)
stack b20 b15 (1)
pick-up b21 (1)
stack b21 b16 (1)
unstack b23 b12 (1)
stack b23 b6 (1)
unstack b12 b22 (1)
stack b12 b5 (1)
unstack b22 b10 (1)
stack b22 b25 (1)
unstack b10 b7 (1)
put-down b10 (1)
pick-up b9 (1)
stack b9 b23 (1)
unstack b7 b19 (1)
put-down b7 (1)
unstack b19 b13 (1)
put-down b19 (1)
unstack b13 b2 (1)
stack b13 b26 (1)
pick-up b2 (1)
stack b2 b12 (1)
pick-up b4 (1)
stack b4 b2 (1)
pick-up b19 (1)
stack b19 b13 (1)
pick-up b7 (1)
stack b7 b19 (1)
unstack b17 b3 (1)
put-down b17 (1)
unstack b3 b14 (1)
put-down b3 (1)
pick-up b14 (1)
stack b14 b22 (1)
pick-up b3 (1)
stack b3 b14 (1)
pick-up b17 (1)
stack b17 b3 (1)
unstack b9 b23 (1)
put-down b9 (1)
unstack b23 b6 (1)
put-down b23 (1)
pick-up b6 (1)
stack b6 b7 (1)
pick-up b23 (1)
stack b23 b6 (1)
pick-up b9 (1)
stack b9 b23 (1)
unstack b4 b2 (1)
put-down b4 (1)
unstack b2 b12 (1)
put-down b2 (1)
pick-up b4 (1)
stack b4 b2 (1)
unstack b12 b5 (1)
put-down b12 (1)
pick-up b5 (1)
stack b5 b21 (1)
pick-up b12 (1)
stack b12 b5 (1)
unstack b4 b2 (1)
put-down b4 (1)
pick-up b2 (1)
stack b2 b12 (1)
pick-up b4 (1)
stack b4 b2 (1)
unstack b9 b23 (1)
put-down b9 (1)
unstack b23 b6 (1)
put-down b23 (1)
pick-up b9 (1)
stack b9 b23 (1)
unstack b6 b7 (1)
put-down b6 (1)
unstack b7 b19 (1)
put-down b7 (1)
pick-up b6 (1)
stack b6 b7 (1)
unstack b9 b23 (1)
put-down b9 (1)
pick-up b23 (1)
stack b23 b6 (1)
pick-up b9 (1)
stack b9 b23 (1)
unstack b19 b13 (1)
put-down b19 (1)
unstack b13 b26 (1)
put-down b13 (1)
pick-up b19 (1)
stack b19 b13 (1)
unstack b26 b27 (1)
put-down b26 (1)
pick-up b27 (1)
stack b27 b20 (1)
pick-up b26 (1)
stack b26 b27 (1)
unstack b19 b13 (1)
put-down b19 (1)
pick-up b13 (1)
stack b13 b26 (1)
pick-up b19 (1)
stack b19 b13 (1)
unstack b9 b23 (1)
put-down b9 (1)
unstack b23 b6 (1)
put-down b23 (1)
pick-up b9 (1)
stack b9 b23 (1)
unstack b6 b7 (1)
put-down b6 (1)
pick-up b7 (1)
stack b7 b19 (1)
pick-up b6 (1)
stack b6 b7 (1)
unstack b9 b23 (1)
put-down b9 (1)
pick-up b23 (1)
stack b23 b6 (1)
pick-up b9 (1)
stack b9 b23 (1)
unstack b4 b2 (1)
put-down b4 (1)
unstack b2 b12 (1)
put-down b2 (1)
pick-up b4 (1)
stack b4 b2 (1)
unstack b12 b5 (1)
put-down b12 (1)
unstack b5 b21 (1)
put-down b5 (1)
pick-up b12 (1)
stack b12 b5 (1)
unstack b4 b2 (1)
put-down b4 (1)
pick-up b2 (1)
stack b2 b12 (1)
pick-up b4 (1)
stack b4 b2 (1)
unstack b21 b16 (1)
put-down b21 (1)
unstack b16 b8 (1)
put-down b16 (1)
pick-up b21 (1)
stack b21 b16 (1)
unstack b8 b1 (1)
put-down b8 (1)
pick-up b1 (1)
stack b1 b9 (1)
pick-up b8 (1)
stack b8 b1 (1)
unstack b21 b16 (1)
put-down b21 (1)
pick-up b16 (1)
stack b16 b8 (1)
pick-up b21 (1)
stack b21 b16 (1)
unstack b4 b2 (1)
put-down b4 (1)
unstack b2 b12 (1)
put-down b2 (1)
pick-up b4 (1)
stack b4 b2 (1)
unstack b12 b5 (1)
put-down b12 (1)
pick-up b5 (1)
stack b5 b21 (1)
pick-up b12 (1)
stack b12 b5 (1)
unstack b4 b2 (1)
put-down b4 (1)
pick-up b2 (1)
stack b2 b12 (1)
pick-up b4 (1)
stack b4 b2 (1)
[t=0.111981s, 27604 KB] Plan length: 212 step(s).
[t=0.111981s, 27604 KB] Plan cost: 212
[t=0.111981s, 27604 KB] Expanded 2353 state(s).
[t=0.111981s, 27604 KB] Reopened 0 state(s).
[t=0.111981s, 27604 KB] Evaluated 2354 state(s).
[t=0.111981s, 27604 KB] Evaluations: 4708
[t=0.111981s, 27604 KB] Generated 24458 state(s).
[t=0.111981s, 27604 KB] Dead ends: 0 state(s).
[t=0.111981s, 27604 KB] Number of registered states: 2354
[t=0.111981s, 27604 KB] Int hash set load factor: 2354/4096 = 0.574707
[t=0.111981s, 27604 KB] Int hash set resizes: 12
[t=0.111981s, 27604 KB] Search time: 0.081244s
[t=0.111981s, 27604 KB] Total time: 0.111981s
Solution found.
Peak memory: 27604 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.29s
