INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_22/bws_problem_22_75.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.009s wall-clock]
1608 relevant atoms
1078 auxiliary atoms
2686 final queue length
4670 total queue pushes
Completing instantiation... [0.020s CPU, 0.016s wall-clock]
Instantiating: [0.030s CPU, 0.027s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
23 uncovered facts
Choosing groups: [0.010s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.006s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.025s wall-clock]
1430 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
44 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.011s wall-clock]
Reordering and filtering variables...
45 of 45 variables necessary.
23 of 45 mutex groups necessary.
968 of 968 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 45
Translator derived variables: 0
Translator facts: 552
Translator goal facts: 19
Translator mutex groups: 23
Translator total mutex groups size: 529
Translator operators: 968
Translator axioms: 0
Translator task size: 8339
Translator peak memory: 36976 KB
Writing output... [0.000s CPU, 0.005s wall-clock]
Done! [0.080s CPU, 0.085s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=1.9437e-05s, 24488 KB] reading input...
[t=0.00271177s, 25340 KB] done reading input!
[t=0.00358051s, 25736 KB] Initializing landmark count heuristic...
[t=0.0036134s, 25736 KB] Generating landmark graph...
[t=0.00368335s, 25736 KB] Building a landmark graph with reasonable orders.
[t=0.00374285s, 25736 KB] Initializing Exploration...
[t=0.00413189s, 26000 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0149255s, 26528 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0149949s, 26528 KB] Landmarks generation time: 0.0113122s
[t=0.0150089s, 26528 KB] Discovered 100 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0150255s, 26528 KB] 410 edges
[t=0.015035s, 26528 KB] approx. reasonable orders
[t=0.0183373s, 26528 KB] approx. obedient reasonable orders
[t=0.0185913s, 26528 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0186168s, 26528 KB] Landmarks generation time: 0.0149968s
[t=0.0186281s, 26528 KB] Discovered 100 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0186368s, 26528 KB] 491 edges
[t=0.0186468s, 26528 KB] Landmark graph generation time: 0.0150406s
[t=0.0186557s, 26528 KB] Landmark graph contains 100 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.018664s, 26528 KB] Landmark graph contains 491 orderings.
[t=0.0191052s, 26528 KB] Simplifying 3828 unary operators... done! [2904 unary operators]
[t=0.0202405s, 26528 KB] time to simplify: 0.00122814s
[t=0.0204363s, 26528 KB] Initializing additive heuristic...
[t=0.020459s, 26528 KB] Initializing FF heuristic...
[t=0.0205463s, 26528 KB] Building successor generator...done!
[t=0.0209335s, 26528 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0209459s, 26528 KB] time for successor generation creation: 0.000346276s
[t=0.0209666s, 26528 KB] Variables: 45
[t=0.0209753s, 26528 KB] FactPairs: 552
[t=0.0209834s, 26528 KB] Bytes per state: 20
[t=0.021134s, 26528 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0211711s, 26528 KB] 44 initial landmarks, 19 goal landmarks
[t=0.0212419s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0212701s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0212791s, 26528 KB] g=0, 1 evaluated, 0 expanded
[t=0.0212934s, 26528 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0213039s, 26528 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0215251s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.021545s, 26528 KB] g=2, 8 evaluated, 7 expanded
[t=0.0219777s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0219906s, 26528 KB] g=4, 25 evaluated, 24 expanded
[t=0.022227s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0222411s, 26528 KB] g=6, 33 evaluated, 32 expanded
[t=0.0223018s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.022311s, 26528 KB] g=6, 35 evaluated, 34 expanded
[t=0.0226704s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0226881s, 26528 KB] g=8, 48 evaluated, 47 expanded
[t=0.0231372s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0231498s, 26528 KB] g=10, 65 evaluated, 64 expanded
[t=0.0236348s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0236478s, 26528 KB] g=12, 84 evaluated, 83 expanded
[t=0.0237609s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.023772s, 26528 KB] g=10, 88 evaluated, 87 expanded
[t=0.0241678s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0241851s, 26528 KB] g=14, 103 evaluated, 102 expanded
[t=0.0243696s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0243847s, 26528 KB] g=12, 110 evaluated, 109 expanded
[t=0.0247371s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0247557s, 26528 KB] g=16, 124 evaluated, 123 expanded
[t=0.024803s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0248264s, 26528 KB] g=14, 125 evaluated, 124 expanded
[t=0.0253731s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0253848s, 26528 KB] g=18, 147 evaluated, 146 expanded
[t=0.0259667s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0259771s, 26528 KB] g=20, 171 evaluated, 170 expanded
[t=0.0263107s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.026321s, 26528 KB] g=21, 185 evaluated, 184 expanded
[t=0.026503s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0265124s, 26528 KB] g=18, 192 evaluated, 191 expanded
[t=0.0266832s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.026692s, 26528 KB] g=23, 199 evaluated, 198 expanded
[t=0.0270158s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0270251s, 26528 KB] g=20, 212 evaluated, 211 expanded
[t=0.0274458s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0274565s, 26528 KB] g=22, 229 evaluated, 228 expanded
[t=0.0274962s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0275065s, 26528 KB] g=26, 230 evaluated, 229 expanded
[t=0.0280232s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0280364s, 26528 KB] g=24, 249 evaluated, 248 expanded
[t=0.0289287s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0289405s, 26528 KB] g=28, 283 evaluated, 282 expanded
[t=0.0290254s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0290349s, 26528 KB] g=28, 286 evaluated, 285 expanded
[t=0.0294143s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0294246s, 26528 KB] g=30, 302 evaluated, 301 expanded
[t=0.0299627s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0299724s, 26528 KB] g=32, 324 evaluated, 323 expanded
[t=0.0300051s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0300141s, 26528 KB] g=30, 325 evaluated, 324 expanded
[t=0.0307891s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0308091s, 26528 KB] g=32, 348 evaluated, 347 expanded
[t=0.0313006s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0313111s, 26528 KB] g=36, 368 evaluated, 367 expanded
[t=0.0314957s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0315046s, 26528 KB] g=34, 375 evaluated, 374 expanded
[t=0.0316634s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0316725s, 26528 KB] g=38, 381 evaluated, 380 expanded
[t=0.0317762s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.031785s, 26528 KB] g=35, 385 evaluated, 384 expanded
[t=0.0320666s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0320811s, 26528 KB] g=40, 394 evaluated, 393 expanded
[t=0.032332s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0323413s, 26528 KB] g=42, 404 evaluated, 403 expanded
[t=0.0326117s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.032627s, 26528 KB] g=44, 415 evaluated, 414 expanded
[t=0.0329416s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0329693s, 26528 KB] g=46, 424 evaluated, 423 expanded
[t=0.0332792s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0332895s, 26528 KB] g=48, 436 evaluated, 435 expanded
[t=0.0339561s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0339686s, 26528 KB] g=38, 461 evaluated, 460 expanded
[t=0.0344188s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.03443s, 26528 KB] g=52, 479 evaluated, 478 expanded
[t=0.0346861s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.034698s, 26528 KB] g=54, 489 evaluated, 488 expanded
[t=0.0349321s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0349487s, 26528 KB] g=40, 496 evaluated, 495 expanded
[t=0.0357986s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0358233s, 26528 KB] g=42, 531 evaluated, 530 expanded
[t=0.0366254s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0366524s, 26528 KB] g=44, 562 evaluated, 561 expanded
[t=0.0376494s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.037691s, 26528 KB] g=46, 599 evaluated, 598 expanded
[t=0.0387334s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0388228s, 26528 KB] g=48, 627 evaluated, 626 expanded
[t=0.0397086s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0397469s, 26528 KB] g=50, 656 evaluated, 655 expanded
[t=0.0401773s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0401911s, 26528 KB] g=52, 673 evaluated, 672 expanded
[t=0.0407455s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0407564s, 26528 KB] g=54, 696 evaluated, 695 expanded
[t=0.0410254s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0410361s, 26528 KB] g=66, 707 evaluated, 706 expanded
[t=0.0412103s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.041221s, 26528 KB] g=56, 714 evaluated, 713 expanded
[t=0.0415217s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.041535s, 26528 KB] g=58, 727 evaluated, 726 expanded
[t=0.0417398s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0417571s, 26528 KB] g=70, 736 evaluated, 735 expanded
[t=0.0418978s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0419143s, 26528 KB] g=72, 742 evaluated, 741 expanded
[t=0.0437202s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0437384s, 26528 KB] g=90, 825 evaluated, 824 expanded
[t=0.0440208s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0440323s, 26528 KB] g=84, 836 evaluated, 835 expanded
[t=0.0443546s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0443649s, 26528 KB] g=88, 851 evaluated, 850 expanded
[t=0.0445013s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0445104s, 26528 KB] g=90, 857 evaluated, 856 expanded
[t=0.045031s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0450416s, 26528 KB] g=102, 884 evaluated, 883 expanded
[t=0.0451959s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0452065s, 26528 KB] g=106, 892 evaluated, 891 expanded
[t=0.0452241s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0452328s, 26528 KB] g=107, 893 evaluated, 892 expanded
[t=0.0452712s, 26528 KB] Solution found!
[t=0.0452835s, 26528 KB] Actual search time: 0.0241083s
unstack b20 b13 (1)
put-down b20 (1)
unstack b13 b22 (1)
put-down b13 (1)
unstack b22 b14 (1)
stack b22 b5 (1)
unstack b1 b6 (1)
put-down b1 (1)
unstack b6 b15 (1)
put-down b6 (1)
unstack b3 b4 (1)
stack b3 b6 (1)
unstack b4 b16 (1)
put-down b4 (1)
unstack b14 b10 (1)
put-down b14 (1)
unstack b10 b18 (1)
stack b10 b14 (1)
unstack b16 b11 (1)
stack b16 b10 (1)
unstack b18 b7 (1)
stack b18 b3 (1)
pick-up b20 (1)
stack b20 b11 (1)
unstack b15 b8 (1)
put-down b15 (1)
unstack b7 b17 (1)
stack b7 b8 (1)
pick-up b17 (1)
stack b17 b7 (1)
pick-up b15 (1)
stack b15 b17 (1)
unstack b22 b5 (1)
put-down b22 (1)
unstack b5 b12 (1)
stack b5 b4 (1)
unstack b12 b21 (1)
stack b12 b1 (1)
pick-up b13 (1)
stack b13 b12 (1)
unstack b21 b19 (1)
stack b21 b22 (1)
unstack b19 b2 (1)
stack b19 b16 (1)
unstack b2 b9 (1)
stack b2 b20 (1)
pick-up b9 (1)
stack b9 b13 (1)
unstack b21 b22 (1)
put-down b21 (1)
pick-up b22 (1)
stack b22 b5 (1)
pick-up b21 (1)
stack b21 b22 (1)
unstack b15 b17 (1)
put-down b15 (1)
unstack b17 b7 (1)
put-down b17 (1)
pick-up b15 (1)
stack b15 b17 (1)
unstack b7 b8 (1)
put-down b7 (1)
pick-up b8 (1)
stack b8 b18 (1)
pick-up b7 (1)
stack b7 b8 (1)
unstack b15 b17 (1)
put-down b15 (1)
pick-up b17 (1)
stack b17 b7 (1)
pick-up b15 (1)
stack b15 b17 (1)
unstack b9 b13 (1)
put-down b9 (1)
unstack b13 b12 (1)
put-down b13 (1)
pick-up b9 (1)
stack b9 b13 (1)
unstack b12 b1 (1)
put-down b12 (1)
pick-up b1 (1)
stack b1 b21 (1)
pick-up b12 (1)
stack b12 b1 (1)
unstack b9 b13 (1)
put-down b9 (1)
pick-up b13 (1)
stack b13 b12 (1)
pick-up b9 (1)
stack b9 b13 (1)
unstack b19 b16 (1)
put-down b19 (1)
unstack b16 b10 (1)
put-down b16 (1)
pick-up b19 (1)
stack b19 b16 (1)
unstack b10 b14 (1)
put-down b10 (1)
pick-up b14 (1)
stack b14 b9 (1)
pick-up b10 (1)
stack b10 b14 (1)
unstack b19 b16 (1)
put-down b19 (1)
pick-up b16 (1)
stack b16 b10 (1)
pick-up b19 (1)
stack b19 b16 (1)
[t=0.0452936s, 26528 KB] Plan length: 108 step(s).
[t=0.0452936s, 26528 KB] Plan cost: 108
[t=0.0452936s, 26528 KB] Expanded 894 state(s).
[t=0.0452936s, 26528 KB] Reopened 0 state(s).
[t=0.0452936s, 26528 KB] Evaluated 895 state(s).
[t=0.0452936s, 26528 KB] Evaluations: 1790
[t=0.0452936s, 26528 KB] Generated 8774 state(s).
[t=0.0452936s, 26528 KB] Dead ends: 0 state(s).
[t=0.0452936s, 26528 KB] Number of registered states: 895
[t=0.0452936s, 26528 KB] Int hash set load factor: 895/1024 = 0.874023
[t=0.0452936s, 26528 KB] Int hash set resizes: 10
[t=0.0452936s, 26528 KB] Search time: 0.0241604s
[t=0.0452936s, 26528 KB] Total time: 0.0452936s
Solution found.
Peak memory: 26528 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.18s
