INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_30/bws_problem_30_47.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.010s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.017s wall-clock]
2912 relevant atoms
1950 auxiliary atoms
4862 final queue length
8528 total queue pushes
Completing instantiation... [0.030s CPU, 0.030s wall-clock]
Instantiating: [0.050s CPU, 0.049s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.010s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
31 uncovered facts
Choosing groups: [0.000s CPU, 0.002s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.001s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.002s wall-clock]
Translating task: [0.060s CPU, 0.053s wall-clock]
2670 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
60 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.024s wall-clock]
Reordering and filtering variables...
61 of 61 variables necessary.
31 of 61 mutex groups necessary.
1800 of 1800 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.012s wall-clock]
Translator variables: 61
Translator derived variables: 0
Translator facts: 992
Translator goal facts: 27
Translator mutex groups: 31
Translator total mutex groups size: 961
Translator operators: 1800
Translator axioms: 0
Translator task size: 15451
Translator peak memory: 41336 KB
Writing output... [0.010s CPU, 0.009s wall-clock]
Done! [0.160s CPU, 0.164s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=1.926e-05s, 24488 KB] reading input...
[t=0.00523127s, 26364 KB] done reading input!
[t=0.00638358s, 26760 KB] Initializing landmark count heuristic...
[t=0.00643849s, 26760 KB] Generating landmark graph...
[t=0.00654472s, 26892 KB] Building a landmark graph with reasonable orders.
[t=0.00664143s, 27024 KB] Initializing Exploration...
[t=0.00724057s, 27316 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.033224s, 28108 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0333232s, 28108 KB] Landmarks generation time: 0.0267865s
[t=0.0333471s, 28108 KB] Discovered 136 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0333627s, 28108 KB] 528 edges
[t=0.0333723s, 28108 KB] approx. reasonable orders
[t=0.0421268s, 28108 KB] approx. obedient reasonable orders
[t=0.0428793s, 28108 KB] Removed 9 reasonable or obedient reasonable orders
[t=0.0428997s, 28108 KB] Landmarks generation time: 0.0364585s
[t=0.042911s, 28108 KB] Discovered 136 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0429199s, 28108 KB] 673 edges
[t=0.0429285s, 28108 KB] Landmark graph generation time: 0.036497s
[t=0.0429373s, 28108 KB] Landmark graph contains 136 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0429452s, 28108 KB] Landmark graph contains 673 orderings.
[t=0.0436286s, 28136 KB] Simplifying 7140 unary operators... done! [5400 unary operators]
[t=0.0454229s, 28268 KB] time to simplify: 0.00190923s
[t=0.0456406s, 28268 KB] Initializing additive heuristic...
[t=0.0456592s, 28268 KB] Initializing FF heuristic...
[t=0.0457132s, 28268 KB] Building successor generator...done!
[t=0.0460431s, 28268 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0460532s, 28268 KB] time for successor generation creation: 0.000299341s
[t=0.0460676s, 28268 KB] Variables: 61
[t=0.046076s, 28268 KB] FactPairs: 992
[t=0.0460843s, 28268 KB] Bytes per state: 24
[t=0.0461715s, 28268 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0462042s, 28268 KB] 59 initial landmarks, 27 goal landmarks
[t=0.0462757s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 77
[t=0.0462852s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 56
[t=0.0462936s, 28268 KB] g=0, 1 evaluated, 0 expanded
[t=0.0463081s, 28268 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 77
[t=0.0463171s, 28268 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 56
[t=0.0466815s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 55
[t=0.0466925s, 28268 KB] g=2, 9 evaluated, 8 expanded
[t=0.0467472s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 76
[t=0.0467567s, 28268 KB] g=2, 10 evaluated, 9 expanded
[t=0.0474164s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 75
[t=0.047426s, 28268 KB] g=4, 25 evaluated, 24 expanded
[t=0.0480593s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 74
[t=0.048069s, 28268 KB] g=6, 40 evaluated, 39 expanded
[t=0.0488536s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 73
[t=0.048863s, 28268 KB] g=8, 58 evaluated, 57 expanded
[t=0.0497705s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 72
[t=0.0497857s, 28268 KB] g=10, 79 evaluated, 78 expanded
[t=0.0506034s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 54
[t=0.0506141s, 28268 KB] g=6, 98 evaluated, 97 expanded
[t=0.0508326s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 71
[t=0.0508415s, 28268 KB] g=12, 103 evaluated, 102 expanded
[t=0.0513456s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 70
[t=0.0513553s, 28268 KB] g=13, 115 evaluated, 114 expanded
[t=0.0516675s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 52
[t=0.051677s, 28268 KB] g=8, 122 evaluated, 121 expanded
[t=0.0523248s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 51
[t=0.0523348s, 28268 KB] g=10, 137 evaluated, 136 expanded
[t=0.0526085s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 69
[t=0.0526183s, 28268 KB] g=16, 143 evaluated, 142 expanded
[t=0.0538336s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 68
[t=0.053845s, 28268 KB] g=18, 171 evaluated, 170 expanded
[t=0.0551801s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 67
[t=0.0552025s, 28268 KB] g=20, 200 evaluated, 199 expanded
[t=0.0565687s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 66
[t=0.0565792s, 28268 KB] g=22, 231 evaluated, 230 expanded
[t=0.0578159s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 65
[t=0.0578326s, 28268 KB] g=24, 259 evaluated, 258 expanded
[t=0.0593003s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 63
[t=0.0593206s, 28268 KB] g=26, 293 evaluated, 292 expanded
[t=0.0608381s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 60
[t=0.0608527s, 28268 KB] g=28, 328 evaluated, 327 expanded
[t=0.0623281s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.0623408s, 28268 KB] g=30, 362 evaluated, 361 expanded
[t=0.06298s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 50
[t=0.0629896s, 28268 KB] g=16, 377 evaluated, 376 expanded
[t=0.0639515s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 49
[t=0.0639619s, 28268 KB] g=18, 399 evaluated, 398 expanded
[t=0.0650536s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 48
[t=0.0650647s, 28268 KB] g=20, 425 evaluated, 424 expanded
[t=0.0652073s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 58
[t=0.0652163s, 28268 KB] g=32, 428 evaluated, 427 expanded
[t=0.0672766s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.067294s, 28268 KB] g=34, 478 evaluated, 477 expanded
[t=0.0686285s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0686428s, 28268 KB] g=36, 509 evaluated, 508 expanded
[t=0.0711979s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0712197s, 28268 KB] g=38, 567 evaluated, 566 expanded
[t=0.072083s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 47
[t=0.0721008s, 28268 KB] g=26, 586 evaluated, 585 expanded
[t=0.0733088s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0733221s, 28268 KB] g=40, 613 evaluated, 612 expanded
[t=0.0745364s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 46
[t=0.0745467s, 28268 KB] g=30, 642 evaluated, 641 expanded
[t=0.0753166s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0753262s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0753339s, 28268 KB] g=42, 661 evaluated, 660 expanded
[t=0.0759636s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.0759733s, 28268 KB] g=44, 676 evaluated, 675 expanded
[t=0.0761078s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0761241s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0761324s, 28268 KB] g=44, 679 evaluated, 678 expanded
[t=0.0766932s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0767032s, 28268 KB] g=46, 693 evaluated, 692 expanded
[t=0.0789314s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0789439s, 28268 KB] g=48, 749 evaluated, 748 expanded
[t=0.0795192s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0795288s, 28268 KB] g=50, 763 evaluated, 762 expanded
[t=0.0800526s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0800618s, 28268 KB] g=52, 776 evaluated, 775 expanded
[t=0.0808661s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.080876s, 28268 KB] g=54, 796 evaluated, 795 expanded
[t=0.0817736s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0817845s, 28268 KB] g=56, 818 evaluated, 817 expanded
[t=0.0827339s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0827521s, 28268 KB] g=58, 839 evaluated, 838 expanded
[t=0.0836604s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0836731s, 28268 KB] g=60, 861 evaluated, 860 expanded
[t=0.0844643s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0844791s, 28268 KB] g=62, 880 evaluated, 879 expanded
[t=0.0908268s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0908862s, 28268 KB] g=68, 1029 evaluated, 1028 expanded
[t=0.0961571s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0962138s, 28268 KB] g=74, 1144 evaluated, 1143 expanded
[t=0.100436s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.100493s, 28268 KB] g=80, 1242 evaluated, 1241 expanded
[t=0.143601s, 28400 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.143778s, 28400 KB] g=98, 2271 evaluated, 2270 expanded
[t=0.183597s, 28664 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.183671s, 28664 KB] g=116, 3217 evaluated, 3216 expanded
[t=0.184236s, 28664 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.184249s, 28664 KB] g=118, 3230 evaluated, 3229 expanded
[t=0.184678s, 28664 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.184689s, 28664 KB] g=120, 3240 evaluated, 3239 expanded
[t=0.187269s, 28664 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.187291s, 28664 KB] g=126, 3303 evaluated, 3302 expanded
[t=0.191414s, 28664 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.191436s, 28664 KB] g=136, 3403 evaluated, 3402 expanded
[t=0.206755s, 28796 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.206856s, 28796 KB] g=158, 3775 evaluated, 3774 expanded
[t=0.20714s, 28796 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.207154s, 28796 KB] g=160, 3781 evaluated, 3780 expanded
[t=0.208685s, 28944 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.208722s, 28944 KB] g=168, 3810 evaluated, 3809 expanded
[t=0.209539s, 28944 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.209551s, 28944 KB] g=172, 3829 evaluated, 3828 expanded
[t=0.209755s, 28944 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.209765s, 28944 KB] g=174, 3834 evaluated, 3833 expanded
[t=0.218346s, 28944 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.218425s, 28944 KB] g=186, 4043 evaluated, 4042 expanded
[t=0.218781s, 28944 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.218792s, 28944 KB] g=188, 4052 evaluated, 4051 expanded
[t=0.21918s, 28944 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.219192s, 28944 KB] g=190, 4062 evaluated, 4061 expanded
[t=0.219632s, 28944 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.219644s, 28944 KB] g=192, 4074 evaluated, 4073 expanded
[t=0.220633s, 28944 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.220656s, 28944 KB] g=194, 4101 evaluated, 4100 expanded
[t=0.221554s, 28944 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.221578s, 28944 KB] g=196, 4124 evaluated, 4123 expanded
[t=0.222247s, 28944 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.22226s, 28944 KB] g=198, 4144 evaluated, 4143 expanded
[t=0.222924s, 28944 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.222938s, 28944 KB] g=200, 4165 evaluated, 4164 expanded
[t=0.301712s, 29740 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.301804s, 29740 KB] g=238, 6620 evaluated, 6619 expanded
[t=0.301966s, 29740 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.301981s, 29740 KB] g=240, 6624 evaluated, 6623 expanded
[t=0.303644s, 29740 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.303659s, 29740 KB] g=252, 6680 evaluated, 6679 expanded
[t=0.303944s, 29740 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.303957s, 29740 KB] g=256, 6690 evaluated, 6689 expanded
[t=0.304046s, 29740 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.304057s, 29740 KB] g=258, 6693 evaluated, 6692 expanded
[t=0.306228s, 29740 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.306287s, 29740 KB] g=280, 6776 evaluated, 6775 expanded
[t=0.306412s, 29740 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.306423s, 29740 KB] g=282, 6780 evaluated, 6779 expanded
[t=0.306776s, 29740 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.306789s, 29740 KB] g=290, 6796 evaluated, 6795 expanded
[t=0.30681s, 29740 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.306819s, 29740 KB] g=291, 6797 evaluated, 6796 expanded
[t=0.306867s, 29740 KB] Solution found!
[t=0.306898s, 29740 KB] Actual search time: 0.260692s
unstack b18 b5 (1)
put-down b18 (1)
unstack b19 b1 (1)
put-down b19 (1)
unstack b27 b24 (1)
put-down b27 (1)
unstack b4 b13 (1)
put-down b4 (1)
unstack b13 b12 (1)
put-down b13 (1)
unstack b12 b21 (1)
put-down b12 (1)
unstack b21 b29 (1)
put-down b21 (1)
unstack b29 b3 (1)
put-down b29 (1)
unstack b5 b20 (1)
put-down b5 (1)
unstack b20 b23 (1)
put-down b20 (1)
unstack b23 b26 (1)
put-down b23 (1)
unstack b26 b22 (1)
put-down b26 (1)
unstack b9 b2 (1)
stack b9 b24 (1)
unstack b2 b17 (1)
stack b2 b9 (1)
unstack b17 b25 (1)
put-down b17 (1)
unstack b25 b8 (1)
put-down b25 (1)
pick-up b19 (1)
stack b19 b2 (1)
pick-up b12 (1)
stack b12 b19 (1)
pick-up b5 (1)
stack b5 b25 (1)
pick-up b23 (1)
stack b23 b5 (1)
pick-up b27 (1)
stack b27 b23 (1)
pick-up b13 (1)
stack b13 b27 (1)
unstack b1 b16 (1)
stack b1 b3 (1)
unstack b16 b14 (1)
stack b16 b13 (1)
unstack b14 b30 (1)
stack b14 b18 (1)
pick-up b17 (1)
stack b17 b6 (1)
pick-up b20 (1)
stack b20 b22 (1)
pick-up b21 (1)
stack b21 b8 (1)
unstack b30 b7 (1)
stack b30 b1 (1)
pick-up b29 (1)
stack b29 b7 (1)
pick-up b4 (1)
stack b4 b26 (1)
unstack b14 b18 (1)
put-down b14 (1)
pick-up b18 (1)
stack b18 b4 (1)
pick-up b14 (1)
stack b14 b18 (1)
unstack b20 b22 (1)
put-down b20 (1)
pick-up b22 (1)
stack b22 b17 (1)
pick-up b20 (1)
stack b20 b22 (1)
unstack b29 b7 (1)
put-down b29 (1)
pick-up b7 (1)
stack b7 b14 (1)
pick-up b29 (1)
stack b29 b7 (1)
unstack b20 b22 (1)
put-down b20 (1)
unstack b22 b17 (1)
put-down b22 (1)
pick-up b20 (1)
stack b20 b22 (1)
unstack b17 b6 (1)
put-down b17 (1)
unstack b6 b15 (1)
stack b6 b29 (1)
pick-up b17 (1)
stack b17 b6 (1)
unstack b20 b22 (1)
put-down b20 (1)
pick-up b22 (1)
stack b22 b17 (1)
pick-up b20 (1)
stack b20 b22 (1)
unstack b12 b19 (1)
put-down b12 (1)
unstack b19 b2 (1)
put-down b19 (1)
unstack b2 b9 (1)
put-down b2 (1)
pick-up b19 (1)
stack b19 b2 (1)
pick-up b12 (1)
stack b12 b19 (1)
unstack b9 b24 (1)
put-down b9 (1)
unstack b24 b28 (1)
put-down b24 (1)
unstack b28 b10 (1)
stack b28 b12 (1)
unstack b10 b11 (1)
stack b10 b20 (1)
pick-up b11 (1)
stack b11 b16 (1)
pick-up b9 (1)
stack b9 b24 (1)
unstack b21 b8 (1)
put-down b21 (1)
pick-up b8 (1)
stack b8 b28 (1)
pick-up b21 (1)
stack b21 b8 (1)
unstack b30 b1 (1)
put-down b30 (1)
unstack b1 b3 (1)
put-down b1 (1)
pick-up b3 (1)
stack b3 b10 (1)
pick-up b1 (1)
stack b1 b3 (1)
pick-up b30 (1)
stack b30 b1 (1)
unstack b21 b8 (1)
put-down b21 (1)
unstack b8 b28 (1)
put-down b8 (1)
unstack b28 b12 (1)
put-down b28 (1)
pick-up b8 (1)
stack b8 b28 (1)
pick-up b21 (1)
stack b21 b8 (1)
unstack b12 b19 (1)
put-down b12 (1)
unstack b19 b2 (1)
put-down b19 (1)
pick-up b12 (1)
stack b12 b19 (1)
pick-up b2 (1)
stack b2 b9 (1)
unstack b12 b19 (1)
put-down b12 (1)
pick-up b19 (1)
stack b19 b2 (1)
pick-up b12 (1)
stack b12 b19 (1)
unstack b21 b8 (1)
put-down b21 (1)
unstack b8 b28 (1)
put-down b8 (1)
pick-up b21 (1)
stack b21 b8 (1)
pick-up b28 (1)
stack b28 b12 (1)
unstack b21 b8 (1)
put-down b21 (1)
pick-up b8 (1)
stack b8 b28 (1)
pick-up b21 (1)
stack b21 b8 (1)
unstack b30 b1 (1)
put-down b30 (1)
unstack b1 b3 (1)
put-down b1 (1)
unstack b3 b10 (1)
put-down b3 (1)
pick-up b1 (1)
stack b1 b3 (1)
pick-up b30 (1)
stack b30 b1 (1)
unstack b10 b20 (1)
put-down b10 (1)
unstack b20 b22 (1)
put-down b20 (1)
unstack b22 b17 (1)
put-down b22 (1)
pick-up b20 (1)
stack b20 b22 (1)
pick-up b10 (1)
stack b10 b20 (1)
unstack b30 b1 (1)
put-down b30 (1)
unstack b1 b3 (1)
put-down b1 (1)
pick-up b3 (1)
stack b3 b10 (1)
pick-up b1 (1)
stack b1 b3 (1)
pick-up b30 (1)
stack b30 b1 (1)
unstack b17 b6 (1)
put-down b17 (1)
unstack b6 b29 (1)
put-down b6 (1)
pick-up b17 (1)
stack b17 b6 (1)
unstack b29 b7 (1)
put-down b29 (1)
unstack b7 b14 (1)
put-down b7 (1)
pick-up b29 (1)
stack b29 b7 (1)
unstack b17 b6 (1)
put-down b17 (1)
pick-up b6 (1)
stack b6 b29 (1)
pick-up b17 (1)
stack b17 b6 (1)
unstack b14 b18 (1)
put-down b14 (1)
unstack b18 b4 (1)
put-down b18 (1)
pick-up b14 (1)
stack b14 b18 (1)
unstack b4 b26 (1)
put-down b4 (1)
pick-up b26 (1)
stack b26 b11 (1)
pick-up b4 (1)
stack b4 b26 (1)
unstack b14 b18 (1)
put-down b14 (1)
pick-up b18 (1)
stack b18 b4 (1)
pick-up b14 (1)
stack b14 b18 (1)
unstack b17 b6 (1)
put-down b17 (1)
unstack b6 b29 (1)
put-down b6 (1)
pick-up b17 (1)
stack b17 b6 (1)
unstack b29 b7 (1)
put-down b29 (1)
pick-up b7 (1)
stack b7 b14 (1)
pick-up b29 (1)
stack b29 b7 (1)
unstack b17 b6 (1)
put-down b17 (1)
pick-up b6 (1)
stack b6 b29 (1)
pick-up b17 (1)
stack b17 b6 (1)
unstack b30 b1 (1)
put-down b30 (1)
unstack b1 b3 (1)
put-down b1 (1)
unstack b3 b10 (1)
put-down b3 (1)
pick-up b1 (1)
stack b1 b3 (1)
pick-up b30 (1)
stack b30 b1 (1)
unstack b10 b20 (1)
put-down b10 (1)
unstack b20 b22 (1)
put-down b20 (1)
pick-up b10 (1)
stack b10 b20 (1)
pick-up b22 (1)
stack b22 b17 (1)
unstack b10 b20 (1)
put-down b10 (1)
pick-up b20 (1)
stack b20 b22 (1)
pick-up b10 (1)
stack b10 b20 (1)
unstack b30 b1 (1)
put-down b30 (1)
unstack b1 b3 (1)
put-down b1 (1)
pick-up b3 (1)
stack b3 b10 (1)
pick-up b1 (1)
stack b1 b3 (1)
pick-up b30 (1)
stack b30 b1 (1)
[t=0.306909s, 29740 KB] Plan length: 292 step(s).
[t=0.306909s, 29740 KB] Plan cost: 292
[t=0.306909s, 29740 KB] Expanded 6798 state(s).
[t=0.306909s, 29740 KB] Reopened 0 state(s).
[t=0.306909s, 29740 KB] Evaluated 6799 state(s).
[t=0.306909s, 29740 KB] Evaluations: 13598
[t=0.306909s, 29740 KB] Generated 79989 state(s).
[t=0.306909s, 29740 KB] Dead ends: 0 state(s).
[t=0.306909s, 29740 KB] Number of registered states: 6799
[t=0.306909s, 29740 KB] Int hash set load factor: 6799/8192 = 0.829956
[t=0.306909s, 29740 KB] Int hash set resizes: 13
[t=0.306909s, 29740 KB] Search time: 0.260738s
[t=0.306909s, 29740 KB] Total time: 0.306909s
Solution found.
Peak memory: 29740 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.53s
