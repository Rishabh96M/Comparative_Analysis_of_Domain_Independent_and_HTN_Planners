INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_22/bws_problem_22_71.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.011s wall-clock]
1608 relevant atoms
1078 auxiliary atoms
2686 final queue length
4672 total queue pushes
Completing instantiation... [0.020s CPU, 0.019s wall-clock]
Instantiating: [0.030s CPU, 0.032s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
23 uncovered facts
Choosing groups: [0.010s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.007s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.025s wall-clock]
1430 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
44 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.011s wall-clock]
Reordering and filtering variables...
45 of 45 variables necessary.
23 of 45 mutex groups necessary.
968 of 968 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 45
Translator derived variables: 0
Translator facts: 552
Translator goal facts: 18
Translator mutex groups: 23
Translator total mutex groups size: 529
Translator operators: 968
Translator axioms: 0
Translator task size: 8338
Translator peak memory: 36972 KB
Writing output... [0.000s CPU, 0.005s wall-clock]
Done! [0.090s CPU, 0.090s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.0103e-05s, 24488 KB] reading input...
[t=0.00269703s, 25340 KB] done reading input!
[t=0.00352899s, 25736 KB] Initializing landmark count heuristic...
[t=0.00356133s, 25736 KB] Generating landmark graph...
[t=0.0036226s, 25736 KB] Building a landmark graph with reasonable orders.
[t=0.00368572s, 25736 KB] Initializing Exploration...
[t=0.00396411s, 26000 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0139776s, 26528 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0140762s, 26528 KB] Landmarks generation time: 0.0104517s
[t=0.0140905s, 26528 KB] Discovered 93 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0141071s, 26528 KB] 347 edges
[t=0.014117s, 26528 KB] approx. reasonable orders
[t=0.01508s, 26528 KB] approx. obedient reasonable orders
[t=0.0151158s, 26528 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0151253s, 26528 KB] Landmarks generation time: 0.0115618s
[t=0.015135s, 26528 KB] Discovered 93 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0151432s, 26528 KB] 368 edges
[t=0.0151516s, 26528 KB] Landmark graph generation time: 0.0115973s
[t=0.01516s, 26528 KB] Landmark graph contains 93 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.015168s, 26528 KB] Landmark graph contains 368 orderings.
[t=0.0155854s, 26528 KB] Simplifying 3828 unary operators... done! [2904 unary operators]
[t=0.0165137s, 26528 KB] time to simplify: 0.000987946s
[t=0.0166359s, 26528 KB] Initializing additive heuristic...
[t=0.0166512s, 26528 KB] Initializing FF heuristic...
[t=0.0167204s, 26528 KB] Building successor generator...done!
[t=0.0170228s, 26528 KB] peak memory difference for successor generator creation: 0 KB
[t=0.017032s, 26528 KB] time for successor generation creation: 0.000263394s
[t=0.0170467s, 26528 KB] Variables: 45
[t=0.0170553s, 26528 KB] FactPairs: 552
[t=0.0170636s, 26528 KB] Bytes per state: 20
[t=0.0171785s, 26528 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0172202s, 26528 KB] 43 initial landmarks, 18 goal landmarks
[t=0.0173045s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0173138s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0173223s, 26528 KB] g=0, 1 evaluated, 0 expanded
[t=0.0173369s, 26528 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0173457s, 26528 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0175402s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0175495s, 26528 KB] g=2, 8 evaluated, 7 expanded
[t=0.0175858s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0175944s, 26528 KB] g=2, 9 evaluated, 8 expanded
[t=0.0178931s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0179029s, 26528 KB] g=4, 21 evaluated, 20 expanded
[t=0.0179373s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0179472s, 26528 KB] g=4, 22 evaluated, 21 expanded
[t=0.0182147s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0182237s, 26528 KB] g=6, 32 evaluated, 31 expanded
[t=0.0184409s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0184504s, 26528 KB] g=8, 40 evaluated, 39 expanded
[t=0.0187726s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0187822s, 26528 KB] g=10, 53 evaluated, 52 expanded
[t=0.0190116s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0190206s, 26528 KB] g=8, 62 evaluated, 61 expanded
[t=0.0192327s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0192418s, 26528 KB] g=12, 70 evaluated, 69 expanded
[t=0.019649s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0196587s, 26528 KB] g=13, 86 evaluated, 85 expanded
[t=0.0196964s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0197097s, 26528 KB] g=14, 87 evaluated, 86 expanded
[t=0.0201623s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.020172s, 26528 KB] g=16, 105 evaluated, 104 expanded
[t=0.0206258s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0206353s, 26528 KB] g=12, 123 evaluated, 122 expanded
[t=0.0206704s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0206834s, 26528 KB] g=18, 124 evaluated, 123 expanded
[t=0.0212284s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0212397s, 26528 KB] g=20, 145 evaluated, 144 expanded
[t=0.0217444s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0217544s, 26528 KB] g=16, 166 evaluated, 165 expanded
[t=0.0217889s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0217973s, 26528 KB] g=22, 167 evaluated, 166 expanded
[t=0.0222853s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0223018s, 26528 KB] g=18, 183 evaluated, 182 expanded
[t=0.0224874s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0224988s, 26528 KB] g=24, 190 evaluated, 189 expanded
[t=0.0231108s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0231346s, 26528 KB] g=26, 213 evaluated, 212 expanded
[t=0.023556s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0235729s, 26528 KB] g=27, 228 evaluated, 227 expanded
[t=0.023614s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0236241s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0236332s, 26528 KB] g=28, 229 evaluated, 228 expanded
[t=0.0239478s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.023958s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0239667s, 26528 KB] g=30, 241 evaluated, 240 expanded
[t=0.0242714s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0242822s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0242912s, 26528 KB] g=32, 253 evaluated, 252 expanded
[t=0.0245646s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0245753s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0245838s, 26528 KB] g=34, 263 evaluated, 262 expanded
[t=0.0248195s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0248418s, 26528 KB] g=36, 272 evaluated, 271 expanded
[t=0.0249024s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0249125s, 26528 KB] g=36, 274 evaluated, 273 expanded
[t=0.0252575s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0252715s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0252796s, 26528 KB] g=38, 288 evaluated, 287 expanded
[t=0.0254659s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0254931s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.025502s, 26528 KB] g=40, 295 evaluated, 294 expanded
[t=0.0259087s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0259276s, 26528 KB] g=44, 311 evaluated, 310 expanded
[t=0.0260899s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0261036s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0261123s, 26528 KB] g=46, 317 evaluated, 316 expanded
[t=0.026688s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0266995s, 26528 KB] g=50, 340 evaluated, 339 expanded
[t=0.0268297s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0268395s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0268485s, 26528 KB] g=52, 345 evaluated, 344 expanded
[t=0.028089s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0281038s, 26528 KB] g=62, 393 evaluated, 392 expanded
[t=0.0282678s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0282777s, 26528 KB] g=64, 399 evaluated, 398 expanded
[t=0.0284072s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0284169s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0284249s, 26528 KB] g=66, 404 evaluated, 403 expanded
[t=0.0289633s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0289754s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0289834s, 26528 KB] g=72, 426 evaluated, 425 expanded
[t=0.0292754s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0292852s, 26528 KB] g=77, 438 evaluated, 437 expanded
[t=0.0293186s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0293276s, 26528 KB] g=78, 439 evaluated, 438 expanded
[t=0.0294598s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0294848s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0294925s, 26528 KB] g=80, 444 evaluated, 443 expanded
[t=0.0295936s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.029602s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0296098s, 26528 KB] g=82, 448 evaluated, 447 expanded
[t=0.0345123s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0345317s, 26528 KB] g=100, 652 evaluated, 651 expanded
[t=0.0346329s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0346423s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0346503s, 26528 KB] g=102, 656 evaluated, 655 expanded
[t=0.035294s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0353043s, 26528 KB] g=110, 684 evaluated, 683 expanded
[t=0.0353797s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0353884s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0353997s, 26528 KB] g=112, 687 evaluated, 686 expanded
[t=0.0376758s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0376899s, 26528 KB] g=142, 797 evaluated, 796 expanded
[t=0.0378748s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0378845s, 26528 KB] g=146, 806 evaluated, 805 expanded
[t=0.0379463s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0379556s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0379638s, 26528 KB] g=148, 809 evaluated, 808 expanded
[t=0.0382356s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0382446s, 26528 KB] g=160, 827 evaluated, 826 expanded
[t=0.0383017s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0383104s, 26528 KB] g=164, 831 evaluated, 830 expanded
[t=0.0383272s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0383358s, 26528 KB] g=165, 832 evaluated, 831 expanded
[t=0.0383505s, 26528 KB] Solution found!
[t=0.0383633s, 26528 KB] Actual search time: 0.0211401s
unstack b11 b1 (1)
stack b11 b10 (1)
unstack b17 b12 (1)
stack b17 b1 (1)
unstack b12 b13 (1)
put-down b12 (1)
unstack b11 b10 (1)
put-down b11 (1)
unstack b10 b14 (1)
put-down b10 (1)
unstack b13 b7 (1)
put-down b13 (1)
unstack b7 b8 (1)
stack b7 b14 (1)
unstack b20 b9 (1)
put-down b20 (1)
unstack b6 b3 (1)
put-down b6 (1)
unstack b3 b19 (1)
put-down b3 (1)
unstack b8 b16 (1)
put-down b8 (1)
unstack b16 b21 (1)
stack b16 b22 (1)
unstack b21 b5 (1)
stack b21 b6 (1)
unstack b5 b18 (1)
stack b5 b13 (1)
unstack b18 b2 (1)
put-down b18 (1)
pick-up b10 (1)
stack b10 b21 (1)
pick-up b11 (1)
stack b11 b10 (1)
pick-up b19 (1)
stack b19 b12 (1)
pick-up b20 (1)
stack b20 b19 (1)
pick-up b9 (1)
stack b9 b20 (1)
unstack b7 b14 (1)
put-down b7 (1)
pick-up b14 (1)
stack b14 b17 (1)
pick-up b7 (1)
stack b7 b14 (1)
unstack b5 b13 (1)
put-down b5 (1)
pick-up b13 (1)
stack b13 b11 (1)
pick-up b5 (1)
stack b5 b13 (1)
unstack b7 b14 (1)
put-down b7 (1)
unstack b14 b17 (1)
put-down b14 (1)
pick-up b7 (1)
stack b7 b14 (1)
unstack b17 b1 (1)
put-down b17 (1)
unstack b1 b15 (1)
stack b1 b9 (1)
pick-up b17 (1)
stack b17 b1 (1)
pick-up b8 (1)
stack b8 b15 (1)
unstack b7 b14 (1)
put-down b7 (1)
pick-up b14 (1)
stack b14 b17 (1)
pick-up b7 (1)
stack b7 b14 (1)
unstack b8 b15 (1)
put-down b8 (1)
unstack b15 b4 (1)
put-down b15 (1)
pick-up b4 (1)
stack b4 b2 (1)
pick-up b15 (1)
stack b15 b4 (1)
pick-up b8 (1)
stack b8 b15 (1)
unstack b5 b13 (1)
put-down b5 (1)
unstack b13 b11 (1)
put-down b13 (1)
unstack b11 b10 (1)
put-down b11 (1)
pick-up b13 (1)
stack b13 b11 (1)
pick-up b5 (1)
stack b5 b13 (1)
unstack b10 b21 (1)
put-down b10 (1)
unstack b21 b6 (1)
put-down b21 (1)
pick-up b6 (1)
stack b6 b16 (1)
pick-up b21 (1)
stack b21 b6 (1)
pick-up b10 (1)
stack b10 b21 (1)
unstack b5 b13 (1)
put-down b5 (1)
unstack b13 b11 (1)
put-down b13 (1)
pick-up b11 (1)
stack b11 b10 (1)
pick-up b13 (1)
stack b13 b11 (1)
pick-up b5 (1)
stack b5 b13 (1)
unstack b7 b14 (1)
put-down b7 (1)
unstack b14 b17 (1)
put-down b14 (1)
pick-up b7 (1)
stack b7 b14 (1)
unstack b17 b1 (1)
put-down b17 (1)
unstack b1 b9 (1)
put-down b1 (1)
pick-up b17 (1)
stack b17 b1 (1)
unstack b7 b14 (1)
put-down b7 (1)
pick-up b14 (1)
stack b14 b17 (1)
pick-up b7 (1)
stack b7 b14 (1)
unstack b9 b20 (1)
put-down b9 (1)
unstack b20 b19 (1)
put-down b20 (1)
pick-up b9 (1)
stack b9 b20 (1)
unstack b19 b12 (1)
put-down b19 (1)
pick-up b12 (1)
stack b12 b8 (1)
pick-up b19 (1)
stack b19 b12 (1)
unstack b9 b20 (1)
put-down b9 (1)
pick-up b20 (1)
stack b20 b19 (1)
pick-up b9 (1)
stack b9 b20 (1)
unstack b7 b14 (1)
put-down b7 (1)
unstack b14 b17 (1)
put-down b14 (1)
pick-up b7 (1)
stack b7 b14 (1)
unstack b17 b1 (1)
put-down b17 (1)
pick-up b1 (1)
stack b1 b9 (1)
pick-up b17 (1)
stack b17 b1 (1)
unstack b7 b14 (1)
put-down b7 (1)
pick-up b14 (1)
stack b14 b17 (1)
pick-up b7 (1)
stack b7 b14 (1)
[t=0.0383733s, 26528 KB] Plan length: 166 step(s).
[t=0.0383733s, 26528 KB] Plan cost: 166
[t=0.0383733s, 26528 KB] Expanded 832 state(s).
[t=0.0383733s, 26528 KB] Reopened 0 state(s).
[t=0.0383733s, 26528 KB] Evaluated 833 state(s).
[t=0.0383733s, 26528 KB] Evaluations: 1666
[t=0.0383733s, 26528 KB] Generated 7889 state(s).
[t=0.0383733s, 26528 KB] Dead ends: 0 state(s).
[t=0.0383733s, 26528 KB] Number of registered states: 833
[t=0.0383733s, 26528 KB] Int hash set load factor: 833/1024 = 0.813477
[t=0.0383733s, 26528 KB] Int hash set resizes: 10
[t=0.0383733s, 26528 KB] Search time: 0.0211954s
[t=0.0383733s, 26528 KB] Total time: 0.0383733s
Solution found.
Peak memory: 26528 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.17s
