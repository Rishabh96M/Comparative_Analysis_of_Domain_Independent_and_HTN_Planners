INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_22/bws_problem_22_36.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.009s wall-clock]
1608 relevant atoms
1078 auxiliary atoms
2686 final queue length
4672 total queue pushes
Completing instantiation... [0.010s CPU, 0.017s wall-clock]
Instantiating: [0.020s CPU, 0.028s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
23 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.006s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.025s wall-clock]
1430 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
44 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.011s wall-clock]
Reordering and filtering variables...
45 of 45 variables necessary.
23 of 45 mutex groups necessary.
968 of 968 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.007s wall-clock]
Translator variables: 45
Translator derived variables: 0
Translator facts: 552
Translator goal facts: 17
Translator mutex groups: 23
Translator total mutex groups size: 529
Translator operators: 968
Translator axioms: 0
Translator task size: 8337
Translator peak memory: 36972 KB
Writing output... [0.000s CPU, 0.005s wall-clock]
Done! [0.080s CPU, 0.086s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=1.9514e-05s, 24488 KB] reading input...
[t=0.00321852s, 25340 KB] done reading input!
[t=0.00423983s, 25736 KB] Initializing landmark count heuristic...
[t=0.00426909s, 25736 KB] Generating landmark graph...
[t=0.00433234s, 25736 KB] Building a landmark graph with reasonable orders.
[t=0.00439108s, 25736 KB] Initializing Exploration...
[t=0.00470713s, 26000 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0132942s, 26396 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.013397s, 26396 KB] Landmarks generation time: 0.00906699s
[t=0.0134129s, 26396 KB] Discovered 85 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0134298s, 26396 KB] 223 edges
[t=0.0134397s, 26396 KB] approx. reasonable orders
[t=0.0141183s, 26396 KB] approx. obedient reasonable orders
[t=0.0141406s, 26396 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0141492s, 26396 KB] Landmarks generation time: 0.00987582s
[t=0.0141582s, 26396 KB] Discovered 85 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0141705s, 26396 KB] 235 edges
[t=0.0141885s, 26396 KB] Landmark graph generation time: 0.0099273s
[t=0.0141978s, 26396 KB] Landmark graph contains 85 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.014206s, 26396 KB] Landmark graph contains 235 orderings.
[t=0.0146584s, 26396 KB] Simplifying 3828 unary operators... done! [2904 unary operators]
[t=0.0155591s, 26528 KB] time to simplify: 0.00097388s
[t=0.0156979s, 26528 KB] Initializing additive heuristic...
[t=0.0157621s, 26528 KB] Initializing FF heuristic...
[t=0.0158494s, 26528 KB] Building successor generator...done!
[t=0.0161018s, 26528 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0161119s, 26528 KB] time for successor generation creation: 0.000215595s
[t=0.0161276s, 26528 KB] Variables: 45
[t=0.0161362s, 26528 KB] FactPairs: 552
[t=0.0161447s, 26528 KB] Bytes per state: 20
[t=0.0163043s, 26528 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0163414s, 26528 KB] 42 initial landmarks, 17 goal landmarks
[t=0.0163952s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.016405s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0164137s, 26528 KB] g=0, 1 evaluated, 0 expanded
[t=0.0164288s, 26528 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0164385s, 26528 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0166439s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0166563s, 26528 KB] g=1, 7 evaluated, 6 expanded
[t=0.0168271s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0168369s, 26528 KB] g=2, 13 evaluated, 12 expanded
[t=0.0170478s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0170578s, 26528 KB] g=3, 21 evaluated, 20 expanded
[t=0.017219s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0172291s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0172379s, 26528 KB] g=4, 27 evaluated, 26 expanded
[t=0.0173484s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0173581s, 26528 KB] g=5, 31 evaluated, 30 expanded
[t=0.0174203s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0174299s, 26528 KB] g=6, 33 evaluated, 32 expanded
[t=0.0176402s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0176499s, 26528 KB] g=7, 41 evaluated, 40 expanded
[t=0.0179104s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0179201s, 26528 KB] g=9, 51 evaluated, 50 expanded
[t=0.0180552s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0180643s, 26528 KB] g=10, 56 evaluated, 55 expanded
[t=0.018273s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0182827s, 26528 KB] g=11, 64 evaluated, 63 expanded
[t=0.0185911s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0186106s, 26528 KB] g=13, 76 evaluated, 75 expanded
[t=0.0186984s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0187084s, 26528 KB] g=14, 79 evaluated, 78 expanded
[t=0.018938s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0189485s, 26528 KB] g=16, 88 evaluated, 87 expanded
[t=0.019056s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0190661s, 26528 KB] g=17, 92 evaluated, 91 expanded
[t=0.0191273s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0191369s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0191452s, 26528 KB] g=18, 94 evaluated, 93 expanded
[t=0.0193759s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0193854s, 26528 KB] g=20, 103 evaluated, 102 expanded
[t=0.0195694s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0195812s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0195927s, 26528 KB] g=20, 110 evaluated, 109 expanded
[t=0.0199506s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.019979s, 26528 KB] g=22, 118 evaluated, 117 expanded
[t=0.0200653s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0200774s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0200859s, 26528 KB] g=22, 121 evaluated, 120 expanded
[t=0.0202625s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0202724s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0202813s, 26528 KB] g=24, 128 evaluated, 127 expanded
[t=0.020685s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0206985s, 26528 KB] g=27, 140 evaluated, 139 expanded
[t=0.0207346s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0207443s, 26528 KB] g=28, 141 evaluated, 140 expanded
[t=0.0208572s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0208686s, 26528 KB] g=29, 145 evaluated, 144 expanded
[t=0.0209075s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0209171s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0209267s, 26528 KB] g=30, 146 evaluated, 145 expanded
[t=0.021113s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0211252s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0211332s, 26528 KB] g=32, 153 evaluated, 152 expanded
[t=0.0212872s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0212982s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0213069s, 26528 KB] g=34, 159 evaluated, 158 expanded
[t=0.0216065s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0216421s, 26528 KB] g=38, 169 evaluated, 168 expanded
[t=0.021821s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0218425s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0218522s, 26528 KB] g=40, 175 evaluated, 174 expanded
[t=0.0219831s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0219932s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0220029s, 26528 KB] g=42, 180 evaluated, 179 expanded
[t=0.0220867s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0220956s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0221043s, 26528 KB] g=42, 183 evaluated, 182 expanded
[t=0.0222092s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0222182s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0222264s, 26528 KB] g=44, 187 evaluated, 186 expanded
[t=0.0223809s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0223899s, 26528 KB] g=47, 193 evaluated, 192 expanded
[t=0.0224245s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0224333s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0224414s, 26528 KB] g=48, 194 evaluated, 193 expanded
[t=0.0225463s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0225588s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0225682s, 26528 KB] g=50, 198 evaluated, 197 expanded
[t=0.0227128s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0227217s, 26528 KB] g=53, 204 evaluated, 203 expanded
[t=0.0227558s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0227646s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0227727s, 26528 KB] g=54, 205 evaluated, 204 expanded
[t=0.0228403s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.022849s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0228577s, 26528 KB] g=56, 208 evaluated, 207 expanded
[t=0.0230306s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.02304s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.023048s, 26528 KB] g=64, 218 evaluated, 217 expanded
[t=0.0230731s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0230822s, 26528 KB] g=64, 219 evaluated, 218 expanded
[t=0.0231166s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0231336s, 26528 KB] g=65, 220 evaluated, 219 expanded
[t=0.0231716s, 26528 KB] Solution found!
[t=0.0231911s, 26528 KB] Actual search time: 0.00684944s
pick-up b20 (1)
stack b20 b4 (1)
unstack b21 b13 (1)
stack b21 b17 (1)
unstack b13 b10 (1)
put-down b13 (1)
unstack b12 b3 (1)
put-down b12 (1)
unstack b3 b1 (1)
put-down b3 (1)
unstack b1 b2 (1)
put-down b1 (1)
unstack b9 b11 (1)
put-down b9 (1)
unstack b11 b14 (1)
put-down b11 (1)
unstack b14 b19 (1)
stack b14 b3 (1)
pick-up b19 (1)
stack b19 b13 (1)
pick-up b11 (1)
stack b11 b19 (1)
pick-up b1 (1)
stack b1 b11 (1)
unstack b20 b4 (1)
put-down b20 (1)
unstack b4 b8 (1)
stack b4 b12 (1)
unstack b8 b18 (1)
stack b8 b1 (1)
pick-up b18 (1)
stack b18 b10 (1)
pick-up b20 (1)
stack b20 b4 (1)
unstack b2 b16 (1)
put-down b2 (1)
unstack b16 b6 (1)
put-down b16 (1)
pick-up b2 (1)
stack b2 b16 (1)
pick-up b6 (1)
stack b6 b18 (1)
pick-up b9 (1)
stack b9 b6 (1)
unstack b21 b17 (1)
put-down b21 (1)
unstack b17 b22 (1)
stack b17 b2 (1)
pick-up b21 (1)
stack b21 b17 (1)
unstack b22 b5 (1)
put-down b22 (1)
unstack b5 b15 (1)
stack b5 b21 (1)
pick-up b22 (1)
stack b22 b5 (1)
unstack b20 b4 (1)
put-down b20 (1)
unstack b4 b12 (1)
put-down b4 (1)
pick-up b12 (1)
stack b12 b15 (1)
pick-up b4 (1)
stack b4 b12 (1)
pick-up b20 (1)
stack b20 b4 (1)
[t=0.0232044s, 26528 KB] Plan length: 66 step(s).
[t=0.0232044s, 26528 KB] Plan cost: 66
[t=0.0232044s, 26528 KB] Expanded 220 state(s).
[t=0.0232044s, 26528 KB] Reopened 0 state(s).
[t=0.0232044s, 26528 KB] Evaluated 221 state(s).
[t=0.0232044s, 26528 KB] Evaluations: 442
[t=0.0232044s, 26528 KB] Generated 1865 state(s).
[t=0.0232044s, 26528 KB] Dead ends: 0 state(s).
[t=0.0232044s, 26528 KB] Number of registered states: 221
[t=0.0232044s, 26528 KB] Int hash set load factor: 221/256 = 0.863281
[t=0.0232044s, 26528 KB] Int hash set resizes: 8
[t=0.0232044s, 26528 KB] Search time: 0.00690068s
[t=0.0232044s, 26528 KB] Total time: 0.0232044s
Solution found.
Peak memory: 26528 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.16s
