INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_22/bws_problem_22_98.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.014s wall-clock]
1608 relevant atoms
1078 auxiliary atoms
2686 final queue length
4670 total queue pushes
Completing instantiation... [0.010s CPU, 0.018s wall-clock]
Instantiating: [0.030s CPU, 0.034s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
23 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.007s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.026s wall-clock]
1430 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
44 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.012s wall-clock]
Reordering and filtering variables...
45 of 45 variables necessary.
23 of 45 mutex groups necessary.
968 of 968 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.007s wall-clock]
Translator variables: 45
Translator derived variables: 0
Translator facts: 552
Translator goal facts: 19
Translator mutex groups: 23
Translator total mutex groups size: 529
Translator operators: 968
Translator axioms: 0
Translator task size: 8339
Translator peak memory: 36976 KB
Writing output... [0.000s CPU, 0.006s wall-clock]
Done! [0.090s CPU, 0.096s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.5935e-05s, 24488 KB] reading input...
[t=0.00332333s, 25340 KB] done reading input!
[t=0.00517376s, 25736 KB] Initializing landmark count heuristic...
[t=0.00525078s, 25736 KB] Generating landmark graph...
[t=0.00533205s, 25736 KB] Building a landmark graph with reasonable orders.
[t=0.00542069s, 25736 KB] Initializing Exploration...
[t=0.00580351s, 26000 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0160533s, 26528 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0161204s, 26528 KB] Landmarks generation time: 0.0107869s
[t=0.0161353s, 26528 KB] Discovered 97 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0161503s, 26528 KB] 363 edges
[t=0.0161602s, 26528 KB] approx. reasonable orders
[t=0.0180363s, 26528 KB] approx. obedient reasonable orders
[t=0.0181229s, 26528 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0181363s, 26528 KB] Landmarks generation time: 0.0128822s
[t=0.0181474s, 26528 KB] Discovered 97 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.018157s, 26528 KB] 392 edges
[t=0.0181667s, 26528 KB] Landmark graph generation time: 0.012923s
[t=0.0181755s, 26528 KB] Landmark graph contains 97 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0181836s, 26528 KB] Landmark graph contains 392 orderings.
[t=0.0186507s, 26528 KB] Simplifying 3828 unary operators... done! [2904 unary operators]
[t=0.0196107s, 26528 KB] time to simplify: 0.00102627s
[t=0.0197537s, 26528 KB] Initializing additive heuristic...
[t=0.0197707s, 26528 KB] Initializing FF heuristic...
[t=0.0198345s, 26528 KB] Building successor generator...done!
[t=0.020076s, 26528 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0200873s, 26528 KB] time for successor generation creation: 0.000206594s
[t=0.0201063s, 26528 KB] Variables: 45
[t=0.0201155s, 26528 KB] FactPairs: 552
[t=0.0201242s, 26528 KB] Bytes per state: 20
[t=0.0202768s, 26528 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0203259s, 26528 KB] 45 initial landmarks, 19 goal landmarks
[t=0.0204043s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0204213s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0204353s, 26528 KB] g=0, 1 evaluated, 0 expanded
[t=0.0204619s, 26528 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0204778s, 26528 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0207287s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0207582s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0207759s, 26528 KB] g=2, 6 evaluated, 5 expanded
[t=0.0209946s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.021012s, 26528 KB] g=4, 11 evaluated, 10 expanded
[t=0.0211112s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0211268s, 26528 KB] g=4, 13 evaluated, 12 expanded
[t=0.0213476s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0213648s, 26528 KB] g=6, 18 evaluated, 17 expanded
[t=0.0215816s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0216017s, 26528 KB] g=6, 23 evaluated, 22 expanded
[t=0.0218208s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0218407s, 26528 KB] g=8, 28 evaluated, 27 expanded
[t=0.0221061s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.02213s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0221443s, 26528 KB] g=8, 34 evaluated, 33 expanded
[t=0.0224024s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0224193s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0224349s, 26528 KB] g=10, 40 evaluated, 39 expanded
[t=0.0226895s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0227063s, 26528 KB] g=12, 46 evaluated, 45 expanded
[t=0.0227637s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0227856s, 26528 KB] g=12, 47 evaluated, 46 expanded
[t=0.0230864s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.023105s, 26528 KB] g=13, 54 evaluated, 53 expanded
[t=0.0233262s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0233438s, 26528 KB] g=14, 59 evaluated, 58 expanded
[t=0.0236856s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0237466s, 26528 KB] g=16, 67 evaluated, 66 expanded
[t=0.0238433s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0238589s, 26528 KB] g=16, 69 evaluated, 68 expanded
[t=0.0244517s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0244813s, 26528 KB] g=18, 83 evaluated, 82 expanded
[t=0.0249064s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.024924s, 26528 KB] g=20, 93 evaluated, 92 expanded
[t=0.0251881s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.025208s, 26528 KB] g=20, 99 evaluated, 98 expanded
[t=0.0253476s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0253641s, 26528 KB] g=22, 102 evaluated, 101 expanded
[t=0.0264878s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0265157s, 26528 KB] g=28, 129 evaluated, 128 expanded
[t=0.0267335s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.026748s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0267591s, 26528 KB] g=30, 134 evaluated, 133 expanded
[t=0.0270159s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0270368s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0270514s, 26528 KB] g=32, 140 evaluated, 139 expanded
[t=0.0272187s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0272286s, 26528 KB] g=34, 146 evaluated, 145 expanded
[t=0.0273883s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0273977s, 26528 KB] g=36, 152 evaluated, 151 expanded
[t=0.027482s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0274917s, 26528 KB] g=36, 155 evaluated, 154 expanded
[t=0.027689s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0277021s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0277119s, 26528 KB] g=36, 162 evaluated, 161 expanded
[t=0.027869s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0278783s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0278868s, 26528 KB] g=38, 168 evaluated, 167 expanded
[t=0.0280157s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0280247s, 26528 KB] g=40, 173 evaluated, 172 expanded
[t=0.0281758s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0281846s, 26528 KB] g=42, 179 evaluated, 178 expanded
[t=0.028402s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0284188s, 26528 KB] g=44, 188 evaluated, 187 expanded
[t=0.0285441s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0285532s, 26528 KB] g=42, 193 evaluated, 192 expanded
[t=0.0285838s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0285926s, 26528 KB] g=45, 194 evaluated, 193 expanded
[t=0.0288286s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0288378s, 26528 KB] g=44, 204 evaluated, 203 expanded
[t=0.0289782s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0289873s, 26528 KB] g=48, 210 evaluated, 209 expanded
[t=0.0292418s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0292513s, 26528 KB] g=50, 222 evaluated, 221 expanded
[t=0.0294107s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0294201s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0294283s, 26528 KB] g=52, 230 evaluated, 229 expanded
[t=0.0295552s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0295643s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0295725s, 26528 KB] g=54, 236 evaluated, 235 expanded
[t=0.0296785s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.029688s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0296963s, 26528 KB] g=56, 241 evaluated, 240 expanded
[t=0.0297908s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0297999s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0298085s, 26528 KB] g=58, 245 evaluated, 244 expanded
[t=0.030028s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0300497s, 26528 KB] g=61, 254 evaluated, 253 expanded
[t=0.0301056s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.03012s, 26528 KB] g=62, 256 evaluated, 255 expanded
[t=0.0302165s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0302257s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0302344s, 26528 KB] g=64, 259 evaluated, 258 expanded
[t=0.0303564s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0303655s, 26528 KB] g=68, 264 evaluated, 263 expanded
[t=0.0304378s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0304465s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0304546s, 26528 KB] g=70, 267 evaluated, 266 expanded
[t=0.0315458s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0315779s, 26528 KB] g=88, 321 evaluated, 320 expanded
[t=0.0316374s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0316468s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0316601s, 26528 KB] g=90, 324 evaluated, 323 expanded
[t=0.0318443s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0318543s, 26528 KB] g=98, 336 evaluated, 335 expanded
[t=0.0318773s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0319013s, 26528 KB] g=98, 337 evaluated, 336 expanded
[t=0.0319192s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0319279s, 26528 KB] g=99, 338 evaluated, 337 expanded
[t=0.0319433s, 26528 KB] Solution found!
[t=0.0319545s, 26528 KB] Actual search time: 0.0116229s
unstack b7 b20 (1)
put-down b7 (1)
unstack b11 b15 (1)
put-down b11 (1)
unstack b20 b21 (1)
stack b20 b7 (1)
unstack b3 b1 (1)
stack b3 b20 (1)
unstack b1 b6 (1)
put-down b1 (1)
unstack b15 b16 (1)
put-down b15 (1)
pick-up b11 (1)
stack b11 b8 (1)
pick-up b16 (1)
stack b16 b11 (1)
unstack b21 b19 (1)
put-down b21 (1)
unstack b19 b9 (1)
stack b19 b1 (1)
pick-up b21 (1)
stack b21 b19 (1)
unstack b6 b13 (1)
put-down b6 (1)
unstack b13 b17 (1)
put-down b13 (1)
unstack b17 b12 (1)
stack b17 b6 (1)
unstack b12 b2 (1)
stack b12 b3 (1)
unstack b2 b14 (1)
stack b2 b21 (1)
unstack b14 b10 (1)
put-down b14 (1)
pick-up b10 (1)
stack b10 b2 (1)
pick-up b13 (1)
stack b13 b10 (1)
unstack b16 b11 (1)
put-down b16 (1)
unstack b11 b8 (1)
put-down b11 (1)
unstack b8 b22 (1)
stack b8 b14 (1)
unstack b22 b18 (1)
put-down b22 (1)
unstack b18 b5 (1)
stack b18 b12 (1)
unstack b5 b4 (1)
stack b5 b15 (1)
pick-up b11 (1)
stack b11 b8 (1)
pick-up b22 (1)
stack b22 b4 (1)
pick-up b16 (1)
stack b16 b11 (1)
pick-up b9 (1)
stack b9 b5 (1)
unstack b22 b4 (1)
put-down b22 (1)
pick-up b4 (1)
stack b4 b16 (1)
pick-up b22 (1)
stack b22 b4 (1)
unstack b17 b6 (1)
put-down b17 (1)
pick-up b6 (1)
stack b6 b13 (1)
pick-up b17 (1)
stack b17 b6 (1)
unstack b22 b4 (1)
put-down b22 (1)
unstack b4 b16 (1)
put-down b4 (1)
unstack b16 b11 (1)
put-down b16 (1)
pick-up b4 (1)
stack b4 b16 (1)
pick-up b22 (1)
stack b22 b4 (1)
unstack b11 b8 (1)
put-down b11 (1)
unstack b8 b14 (1)
put-down b8 (1)
pick-up b14 (1)
stack b14 b18 (1)
pick-up b8 (1)
stack b8 b14 (1)
pick-up b11 (1)
stack b11 b8 (1)
unstack b22 b4 (1)
put-down b22 (1)
unstack b4 b16 (1)
put-down b4 (1)
pick-up b16 (1)
stack b16 b11 (1)
pick-up b4 (1)
stack b4 b16 (1)
pick-up b22 (1)
stack b22 b4 (1)
[t=0.0319638s, 26528 KB] Plan length: 100 step(s).
[t=0.0319638s, 26528 KB] Plan cost: 100
[t=0.0319638s, 26528 KB] Expanded 338 state(s).
[t=0.0319638s, 26528 KB] Reopened 0 state(s).
[t=0.0319638s, 26528 KB] Evaluated 339 state(s).
[t=0.0319638s, 26528 KB] Evaluations: 678
[t=0.0319638s, 26528 KB] Generated 2615 state(s).
[t=0.0319638s, 26528 KB] Dead ends: 0 state(s).
[t=0.0319638s, 26528 KB] Number of registered states: 339
[t=0.0319638s, 26528 KB] Int hash set load factor: 339/512 = 0.662109
[t=0.0319638s, 26528 KB] Int hash set resizes: 9
[t=0.0319638s, 26528 KB] Search time: 0.0116884s
[t=0.0319638s, 26528 KB] Total time: 0.0319638s
Solution found.
Peak memory: 26528 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.18s
