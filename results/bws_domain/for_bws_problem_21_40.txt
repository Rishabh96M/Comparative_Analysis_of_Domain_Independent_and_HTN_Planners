INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_21/bws_problem_21_40.pddl --sas-file output.sas
Parsing...
Parsing: [0.010s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.009s wall-clock]
1472 relevant atoms
987 auxiliary atoms
2459 final queue length
4270 total queue pushes
Completing instantiation... [0.010s CPU, 0.014s wall-clock]
Instantiating: [0.020s CPU, 0.025s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.010s CPU, 0.000s wall-clock]
Choosing groups...
22 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.006s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.023s wall-clock]
1302 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
42 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.010s wall-clock]
Reordering and filtering variables...
43 of 43 variables necessary.
22 of 43 mutex groups necessary.
882 of 882 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 43
Translator derived variables: 0
Translator facts: 506
Translator goal facts: 17
Translator mutex groups: 22
Translator total mutex groups size: 484
Translator operators: 882
Translator axioms: 0
Translator task size: 7602
Translator peak memory: 36456 KB
Writing output... [0.000s CPU, 0.004s wall-clock]
Done! [0.080s CPU, 0.078s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=4.4641e-05s, 24488 KB] reading input...
[t=0.00360095s, 25268 KB] done reading input!
[t=0.00472312s, 25664 KB] Initializing landmark count heuristic...
[t=0.00476683s, 25664 KB] Generating landmark graph...
[t=0.00483675s, 25664 KB] Building a landmark graph with reasonable orders.
[t=0.0049072s, 25664 KB] Initializing Exploration...
[t=0.0052074s, 25852 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0139425s, 26380 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0139839s, 26380 KB] Landmarks generation time: 0.00914406s
[t=0.0139981s, 26380 KB] Discovered 92 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0140136s, 26380 KB] 357 edges
[t=0.0140232s, 26380 KB] approx. reasonable orders
[t=0.016512s, 26380 KB] approx. obedient reasonable orders
[t=0.0166309s, 26380 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0166417s, 26380 KB] Landmarks generation time: 0.0118713s
[t=0.0166517s, 26380 KB] Discovered 92 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0166605s, 26380 KB] 439 edges
[t=0.016669s, 26380 KB] Landmark graph generation time: 0.0119091s
[t=0.0166777s, 26380 KB] Landmark graph contains 92 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0166861s, 26380 KB] Landmark graph contains 439 orderings.
[t=0.0169905s, 26380 KB] Simplifying 3486 unary operators... done! [2646 unary operators]
[t=0.0178443s, 26380 KB] time to simplify: 0.000941394s
[t=0.017991s, 26380 KB] Initializing additive heuristic...
[t=0.0180071s, 26380 KB] Initializing FF heuristic...
[t=0.0181086s, 26380 KB] Building successor generator...done!
[t=0.0183515s, 26380 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0183634s, 26380 KB] time for successor generation creation: 0.000199365s
[t=0.0183776s, 26380 KB] Variables: 43
[t=0.0183859s, 26380 KB] FactPairs: 506
[t=0.0183946s, 26380 KB] Bytes per state: 16
[t=0.0185059s, 26380 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0185413s, 26380 KB] 42 initial landmarks, 17 goal landmarks
[t=0.0185914s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0186015s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0186099s, 26380 KB] g=0, 1 evaluated, 0 expanded
[t=0.0186243s, 26380 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0186334s, 26380 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0187944s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0188051s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0188144s, 26380 KB] g=2, 7 evaluated, 6 expanded
[t=0.0189618s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.018971s, 26380 KB] g=4, 13 evaluated, 12 expanded
[t=0.0190036s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0190128s, 26380 KB] g=4, 14 evaluated, 13 expanded
[t=0.0192929s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0193026s, 26380 KB] g=6, 26 evaluated, 25 expanded
[t=0.0195997s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.019611s, 26380 KB] g=8, 38 evaluated, 37 expanded
[t=0.0199087s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0199191s, 26380 KB] g=8, 51 evaluated, 50 expanded
[t=0.0200808s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0200919s, 26380 KB] g=10, 57 evaluated, 56 expanded
[t=0.0202297s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0202386s, 26380 KB] g=10, 62 evaluated, 61 expanded
[t=0.0205778s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0205872s, 26380 KB] g=12, 77 evaluated, 76 expanded
[t=0.0209979s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0210074s, 26380 KB] g=14, 95 evaluated, 94 expanded
[t=0.0210623s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.021079s, 26380 KB] g=14, 97 evaluated, 96 expanded
[t=0.0212856s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0212956s, 26380 KB] g=16, 105 evaluated, 104 expanded
[t=0.0215299s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0215432s, 26380 KB] g=16, 115 evaluated, 114 expanded
[t=0.0219581s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.021968s, 26380 KB] g=18, 133 evaluated, 132 expanded
[t=0.0224438s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0224559s, 26380 KB] g=20, 153 evaluated, 152 expanded
[t=0.0225119s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0225209s, 26380 KB] g=20, 155 evaluated, 154 expanded
[t=0.0227286s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0227384s, 26380 KB] g=22, 164 evaluated, 163 expanded
[t=0.0229651s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0229741s, 26380 KB] g=24, 174 evaluated, 173 expanded
[t=0.0230937s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0231029s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0231111s, 26380 KB] g=26, 179 evaluated, 178 expanded
[t=0.0232086s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0232174s, 26380 KB] g=28, 183 evaluated, 182 expanded
[t=0.0232711s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0232799s, 26380 KB] g=28, 185 evaluated, 184 expanded
[t=0.0234164s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0234277s, 26380 KB] g=30, 190 evaluated, 189 expanded
[t=0.0235758s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0235848s, 26380 KB] g=32, 196 evaluated, 195 expanded
[t=0.0236419s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0236511s, 26380 KB] g=30, 198 evaluated, 197 expanded
[t=0.0238662s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0238755s, 26380 KB] g=32, 207 evaluated, 206 expanded
[t=0.0239319s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0239413s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0239504s, 26380 KB] g=32, 209 evaluated, 208 expanded
[t=0.0240532s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0240623s, 26380 KB] g=34, 213 evaluated, 212 expanded
[t=0.0241639s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0241728s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0241811s, 26380 KB] g=36, 217 evaluated, 216 expanded
[t=0.0242976s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0243066s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0243149s, 26380 KB] g=38, 222 evaluated, 221 expanded
[t=0.0244247s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0244365s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0244447s, 26380 KB] g=40, 227 evaluated, 226 expanded
[t=0.0245094s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0245186s, 26380 KB] g=41, 230 evaluated, 229 expanded
[t=0.0245479s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0245567s, 26380 KB] g=42, 231 evaluated, 230 expanded
[t=0.0247217s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0247387s, 26380 KB] g=44, 239 evaluated, 238 expanded
[t=0.0248512s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0248618s, 26380 KB] g=44, 244 evaluated, 243 expanded
[t=0.0249269s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.024936s, 26380 KB] g=46, 247 evaluated, 246 expanded
[t=0.0250341s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0250435s, 26380 KB] g=47, 252 evaluated, 251 expanded
[t=0.0250924s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0251018s, 26380 KB] g=48, 254 evaluated, 253 expanded
[t=0.0251793s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0251883s, 26380 KB] g=49, 257 evaluated, 256 expanded
[t=0.0253397s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0253484s, 26380 KB] g=52, 265 evaluated, 264 expanded
[t=0.0255936s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0256028s, 26380 KB] g=54, 279 evaluated, 278 expanded
[t=0.0256327s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0256416s, 26380 KB] g=52, 280 evaluated, 279 expanded
[t=0.0259007s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0259098s, 26380 KB] g=56, 295 evaluated, 294 expanded
[t=0.0259739s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0259825s, 26380 KB] g=57, 299 evaluated, 298 expanded
[t=0.0260059s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0260142s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0260221s, 26380 KB] g=58, 300 evaluated, 299 expanded
[t=0.0260687s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0260772s, 26380 KB] g=59, 303 evaluated, 302 expanded
[t=0.0261003s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.026109s, 26380 KB] g=60, 304 evaluated, 303 expanded
[t=0.0261748s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0261832s, 26380 KB] g=62, 308 evaluated, 307 expanded
[t=0.0262472s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0262555s, 26380 KB] g=62, 312 evaluated, 311 expanded
[t=0.0262909s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0262994s, 26380 KB] g=63, 314 evaluated, 313 expanded
[t=0.0263227s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0263309s, 26380 KB] g=64, 315 evaluated, 314 expanded
[t=0.026367s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0263758s, 26380 KB] g=65, 317 evaluated, 316 expanded
[t=0.0264214s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0264299s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0264377s, 26380 KB] g=68, 320 evaluated, 319 expanded
[t=0.0264541s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0264624s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0264705s, 26380 KB] g=69, 321 evaluated, 320 expanded
[t=0.0264846s, 26380 KB] Solution found!
[t=0.0264943s, 26380 KB] Actual search time: 0.00794887s
unstack b18 b13 (1)
put-down b18 (1)
pick-up b10 (1)
stack b10 b4 (1)
unstack b13 b14 (1)
put-down b13 (1)
unstack b14 b7 (1)
put-down b14 (1)
pick-up b13 (1)
stack b13 b7 (1)
unstack b9 b17 (1)
put-down b9 (1)
unstack b17 b19 (1)
stack b17 b20 (1)
unstack b19 b1 (1)
stack b19 b14 (1)
unstack b17 b20 (1)
put-down b17 (1)
unstack b20 b8 (1)
stack b20 b1 (1)
pick-up b17 (1)
stack b17 b20 (1)
unstack b8 b6 (1)
stack b8 b19 (1)
pick-up b6 (1)
stack b6 b18 (1)
unstack b13 b7 (1)
put-down b13 (1)
unstack b7 b12 (1)
stack b7 b8 (1)
pick-up b13 (1)
stack b13 b7 (1)
unstack b12 b15 (1)
put-down b12 (1)
unstack b15 b11 (1)
stack b15 b17 (1)
unstack b11 b21 (1)
stack b11 b13 (1)
unstack b21 b3 (1)
put-down b21 (1)
unstack b3 b2 (1)
stack b3 b12 (1)
unstack b2 b16 (1)
stack b2 b9 (1)
pick-up b16 (1)
stack b16 b21 (1)
unstack b10 b4 (1)
put-down b10 (1)
unstack b3 b12 (1)
put-down b3 (1)
unstack b2 b9 (1)
put-down b2 (1)
unstack b4 b5 (1)
stack b4 b11 (1)
pick-up b10 (1)
stack b10 b4 (1)
pick-up b5 (1)
stack b5 b10 (1)
pick-up b3 (1)
stack b3 b12 (1)
pick-up b9 (1)
stack b9 b15 (1)
pick-up b2 (1)
stack b2 b9 (1)
unstack b3 b12 (1)
put-down b3 (1)
pick-up b12 (1)
stack b12 b2 (1)
pick-up b3 (1)
stack b3 b12 (1)
[t=0.0265032s, 26380 KB] Plan length: 70 step(s).
[t=0.0265032s, 26380 KB] Plan cost: 70
[t=0.0265032s, 26380 KB] Expanded 321 state(s).
[t=0.0265032s, 26380 KB] Reopened 0 state(s).
[t=0.0265032s, 26380 KB] Evaluated 322 state(s).
[t=0.0265032s, 26380 KB] Evaluations: 644
[t=0.0265032s, 26380 KB] Generated 2686 state(s).
[t=0.0265032s, 26380 KB] Dead ends: 0 state(s).
[t=0.0265032s, 26380 KB] Number of registered states: 322
[t=0.0265032s, 26380 KB] Int hash set load factor: 322/512 = 0.628906
[t=0.0265032s, 26380 KB] Int hash set resizes: 9
[t=0.0265032s, 26380 KB] Search time: 0.00799757s
[t=0.0265032s, 26380 KB] Total time: 0.0265032s
Solution found.
Peak memory: 26380 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.16s
