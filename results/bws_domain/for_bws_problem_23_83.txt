INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_23/bws_problem_23_83.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.012s wall-clock]
1750 relevant atoms
1173 auxiliary atoms
2923 final queue length
5089 total queue pushes
Completing instantiation... [0.020s CPU, 0.018s wall-clock]
Instantiating: [0.030s CPU, 0.031s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.010s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
24 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.007s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.028s wall-clock]
1564 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
46 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.012s wall-clock]
Reordering and filtering variables...
47 of 47 variables necessary.
24 of 47 mutex groups necessary.
1058 of 1058 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.007s wall-clock]
Translator variables: 47
Translator derived variables: 0
Translator facts: 600
Translator goal facts: 20
Translator mutex groups: 24
Translator total mutex groups size: 576
Translator operators: 1058
Translator axioms: 0
Translator task size: 9109
Translator peak memory: 37488 KB
Writing output... [0.000s CPU, 0.006s wall-clock]
Done! [0.100s CPU, 0.095s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.2525e-05s, 24488 KB] reading input...
[t=0.00406714s, 25428 KB] done reading input!
[t=0.00513513s, 25824 KB] Initializing landmark count heuristic...
[t=0.00516962s, 25824 KB] Generating landmark graph...
[t=0.00523681s, 25824 KB] Building a landmark graph with reasonable orders.
[t=0.00530299s, 25956 KB] Initializing Exploration...
[t=0.00563482s, 26256 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.016919s, 26652 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0169697s, 26652 KB] Landmarks generation time: 0.011734s
[t=0.0169839s, 26652 KB] Discovered 101 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.017s, 26652 KB] 388 edges
[t=0.0170095s, 26652 KB] approx. reasonable orders
[t=0.0172688s, 26652 KB] approx. obedient reasonable orders
[t=0.0172963s, 26652 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0173054s, 26652 KB] Landmarks generation time: 0.0121328s
[t=0.0173149s, 26652 KB] Discovered 101 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0173229s, 26652 KB] 392 edges
[t=0.0173309s, 26652 KB] Landmark graph generation time: 0.0121682s
[t=0.0173394s, 26652 KB] Landmark graph contains 101 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0173479s, 26652 KB] Landmark graph contains 392 orderings.
[t=0.0176874s, 26652 KB] Simplifying 4186 unary operators... done! [3174 unary operators]
[t=0.0188954s, 26652 KB] time to simplify: 0.0013246s
[t=0.0191248s, 26652 KB] Initializing additive heuristic...
[t=0.0191493s, 26652 KB] Initializing FF heuristic...
[t=0.0192226s, 26652 KB] Building successor generator...done!
[t=0.0195603s, 26652 KB] peak memory difference for successor generator creation: 0 KB
[t=0.019574s, 26652 KB] time for successor generation creation: 0.000287656s
[t=0.0195978s, 26652 KB] Variables: 47
[t=0.0196107s, 26652 KB] FactPairs: 600
[t=0.0196215s, 26652 KB] Bytes per state: 20
[t=0.0197598s, 26652 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0198099s, 26652 KB] 46 initial landmarks, 20 goal landmarks
[t=0.0198869s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0199068s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0199187s, 26652 KB] g=0, 1 evaluated, 0 expanded
[t=0.0199439s, 26652 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0199566s, 26652 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0201236s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0201446s, 26652 KB] g=1, 5 evaluated, 4 expanded
[t=0.0204138s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0204329s, 26652 KB] g=3, 13 evaluated, 12 expanded
[t=0.0207277s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0207449s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0207538s, 26652 KB] g=6, 22 evaluated, 21 expanded
[t=0.020926s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0209385s, 26652 KB] g=8, 28 evaluated, 27 expanded
[t=0.0213848s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0214316s, 26652 KB] g=10, 43 evaluated, 42 expanded
[t=0.0217265s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.021748s, 26652 KB] g=12, 53 evaluated, 52 expanded
[t=0.0218172s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0218283s, 26652 KB] g=12, 55 evaluated, 54 expanded
[t=0.0221927s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0222142s, 26652 KB] g=14, 68 evaluated, 67 expanded
[t=0.022363s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0223748s, 26652 KB] g=14, 73 evaluated, 72 expanded
[t=0.0227609s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0227747s, 26652 KB] g=16, 87 evaluated, 86 expanded
[t=0.0228152s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0228357s, 26652 KB] g=16, 88 evaluated, 87 expanded
[t=0.023199s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.023221s, 26652 KB] g=18, 101 evaluated, 100 expanded
[t=0.0232899s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0233022s, 26652 KB] g=18, 103 evaluated, 102 expanded
[t=0.0236974s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0237329s, 26652 KB] g=20, 116 evaluated, 115 expanded
[t=0.0250433s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0250788s, 26652 KB] g=23, 163 evaluated, 162 expanded
[t=0.0251704s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0251823s, 26652 KB] g=24, 165 evaluated, 164 expanded
[t=0.0254171s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.025431s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0254431s, 26652 KB] g=26, 173 evaluated, 172 expanded
[t=0.0256482s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0256623s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0256731s, 26652 KB] g=28, 180 evaluated, 179 expanded
[t=0.0258941s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0259195s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0259319s, 26652 KB] g=30, 187 evaluated, 186 expanded
[t=0.0261486s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0261633s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0261739s, 26652 KB] g=32, 194 evaluated, 193 expanded
[t=0.0263758s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0263884s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0264003s, 26652 KB] g=34, 201 evaluated, 200 expanded
[t=0.0268135s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0268263s, 26652 KB] g=38, 216 evaluated, 215 expanded
[t=0.0270043s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0270154s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0270262s, 26652 KB] g=40, 222 evaluated, 221 expanded
[t=0.0276574s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0276778s, 26652 KB] g=46, 241 evaluated, 240 expanded
[t=0.0280782s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0280893s, 26652 KB] g=48, 255 evaluated, 254 expanded
[t=0.0282882s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0283047s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0283164s, 26652 KB] g=50, 261 evaluated, 260 expanded
[t=0.0284853s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0285047s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0285161s, 26652 KB] g=52, 266 evaluated, 265 expanded
[t=0.0288655s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0288761s, 26652 KB] g=56, 279 evaluated, 278 expanded
[t=0.0289924s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0290027s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0290129s, 26652 KB] g=58, 283 evaluated, 282 expanded
[t=0.0321281s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0321467s, 26652 KB] g=80, 404 evaluated, 403 expanded
[t=0.0324466s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0324677s, 26652 KB] g=82, 414 evaluated, 413 expanded
[t=0.0326325s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0326427s, 26652 KB] g=84, 420 evaluated, 419 expanded
[t=0.0327803s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0327902s, 26652 KB] g=82, 425 evaluated, 424 expanded
[t=0.0329038s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.032914s, 26652 KB] g=83, 429 evaluated, 428 expanded
[t=0.0329528s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0329623s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0329722s, 26652 KB] g=84, 430 evaluated, 429 expanded
[t=0.033088s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0331035s, 26652 KB] g=85, 434 evaluated, 433 expanded
[t=0.0331612s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0331711s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0331811s, 26652 KB] g=86, 435 evaluated, 434 expanded
[t=0.0333413s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.033357s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0333814s, 26652 KB] g=88, 440 evaluated, 439 expanded
[t=0.0339683s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0339829s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.033994s, 26652 KB] g=94, 463 evaluated, 462 expanded
[t=0.0353265s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0353425s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0353539s, 26652 KB] g=108, 513 evaluated, 512 expanded
[t=0.0560688s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0561815s, 26652 KB] g=126, 1289 evaluated, 1288 expanded
[t=0.0566305s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0566419s, 26652 KB] g=130, 1305 evaluated, 1304 expanded
[t=0.0567507s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.05676s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0567884s, 26652 KB] g=132, 1309 evaluated, 1308 expanded
[t=0.0582028s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0582185s, 26652 KB] g=144, 1363 evaluated, 1362 expanded
[t=0.0584441s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0584535s, 26652 KB] g=148, 1372 evaluated, 1371 expanded
[t=0.0585441s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.058558s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0585655s, 26652 KB] g=150, 1375 evaluated, 1374 expanded
[t=0.063409s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.063438s, 26652 KB] g=184, 1589 evaluated, 1588 expanded
[t=0.0636153s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0636294s, 26652 KB] g=188, 1598 evaluated, 1597 expanded
[t=0.0636957s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0637075s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0637158s, 26652 KB] g=190, 1601 evaluated, 1600 expanded
[t=0.0639943s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0640038s, 26652 KB] g=202, 1618 evaluated, 1617 expanded
[t=0.064061s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0640695s, 26652 KB] g=206, 1622 evaluated, 1621 expanded
[t=0.0640856s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0640938s, 26652 KB] g=207, 1623 evaluated, 1622 expanded
[t=0.0641075s, 26652 KB] Solution found!
[t=0.0641217s, 26652 KB] Actual search time: 0.0443033s
unstack b19 b18 (1)
put-down b19 (1)
unstack b18 b8 (1)
put-down b18 (1)
unstack b12 b22 (1)
stack b12 b8 (1)
unstack b16 b5 (1)
put-down b16 (1)
unstack b17 b1 (1)
put-down b17 (1)
unstack b1 b20 (1)
stack b1 b5 (1)
unstack b20 b13 (1)
put-down b20 (1)
pick-up b18 (1)
stack b18 b1 (1)
pick-up b19 (1)
stack b19 b20 (1)
unstack b22 b10 (1)
put-down b22 (1)
unstack b12 b8 (1)
put-down b12 (1)
unstack b8 b21 (1)
stack b8 b17 (1)
pick-up b12 (1)
stack b12 b8 (1)
unstack b21 b9 (1)
stack b21 b13 (1)
unstack b9 b11 (1)
stack b9 b12 (1)
unstack b11 b4 (1)
stack b11 b21 (1)
pick-up b4 (1)
stack b4 b16 (1)
unstack b10 b2 (1)
put-down b10 (1)
pick-up b2 (1)
stack b2 b9 (1)
pick-up b10 (1)
stack b10 b2 (1)
unstack b18 b1 (1)
put-down b18 (1)
unstack b1 b5 (1)
put-down b1 (1)
unstack b5 b7 (1)
stack b5 b11 (1)
pick-up b1 (1)
stack b1 b5 (1)
pick-up b18 (1)
stack b18 b1 (1)
pick-up b7 (1)
stack b7 b10 (1)
unstack b4 b16 (1)
put-down b4 (1)
pick-up b16 (1)
stack b16 b7 (1)
pick-up b4 (1)
stack b4 b16 (1)
unstack b18 b1 (1)
put-down b18 (1)
unstack b1 b5 (1)
put-down b1 (1)
unstack b5 b11 (1)
put-down b5 (1)
pick-up b1 (1)
stack b1 b5 (1)
pick-up b18 (1)
stack b18 b1 (1)
unstack b11 b21 (1)
put-down b11 (1)
unstack b21 b13 (1)
put-down b21 (1)
pick-up b11 (1)
stack b11 b21 (1)
unstack b13 b3 (1)
put-down b13 (1)
unstack b3 b14 (1)
put-down b3 (1)
unstack b14 b6 (1)
put-down b14 (1)
unstack b6 b15 (1)
stack b6 b22 (1)
unstack b15 b23 (1)
stack b15 b14 (1)
pick-up b3 (1)
stack b3 b6 (1)
pick-up b13 (1)
stack b13 b3 (1)
unstack b11 b21 (1)
put-down b11 (1)
pick-up b21 (1)
stack b21 b13 (1)
pick-up b11 (1)
stack b11 b21 (1)
unstack b18 b1 (1)
put-down b18 (1)
unstack b1 b5 (1)
put-down b1 (1)
pick-up b18 (1)
stack b18 b1 (1)
unstack b11 b21 (1)
put-down b11 (1)
pick-up b5 (1)
stack b5 b11 (1)
unstack b18 b1 (1)
put-down b18 (1)
pick-up b1 (1)
stack b1 b5 (1)
pick-up b18 (1)
stack b18 b1 (1)
unstack b21 b13 (1)
put-down b21 (1)
unstack b13 b3 (1)
put-down b13 (1)
pick-up b21 (1)
stack b21 b13 (1)
unstack b3 b6 (1)
put-down b3 (1)
unstack b6 b22 (1)
put-down b6 (1)
pick-up b22 (1)
stack b22 b23 (1)
pick-up b6 (1)
stack b6 b22 (1)
pick-up b3 (1)
stack b3 b6 (1)
unstack b21 b13 (1)
put-down b21 (1)
pick-up b13 (1)
stack b13 b3 (1)
pick-up b21 (1)
stack b21 b13 (1)
unstack b18 b1 (1)
put-down b18 (1)
unstack b1 b5 (1)
put-down b1 (1)
pick-up b18 (1)
stack b18 b1 (1)
unstack b5 b11 (1)
put-down b5 (1)
pick-up b11 (1)
stack b11 b21 (1)
pick-up b5 (1)
stack b5 b11 (1)
unstack b18 b1 (1)
put-down b18 (1)
pick-up b1 (1)
stack b1 b5 (1)
pick-up b18 (1)
stack b18 b1 (1)
unstack b4 b16 (1)
put-down b4 (1)
unstack b16 b7 (1)
put-down b16 (1)
pick-up b4 (1)
stack b4 b16 (1)
unstack b7 b10 (1)
put-down b7 (1)
unstack b10 b2 (1)
put-down b10 (1)
pick-up b7 (1)
stack b7 b10 (1)
unstack b4 b16 (1)
put-down b4 (1)
pick-up b16 (1)
stack b16 b7 (1)
pick-up b4 (1)
stack b4 b16 (1)
unstack b2 b9 (1)
put-down b2 (1)
unstack b9 b12 (1)
put-down b9 (1)
pick-up b2 (1)
stack b2 b9 (1)
unstack b12 b8 (1)
put-down b12 (1)
unstack b8 b17 (1)
put-down b8 (1)
pick-up b17 (1)
stack b17 b15 (1)
pick-up b8 (1)
stack b8 b17 (1)
pick-up b12 (1)
stack b12 b8 (1)
unstack b2 b9 (1)
put-down b2 (1)
pick-up b9 (1)
stack b9 b12 (1)
pick-up b2 (1)
stack b2 b9 (1)
unstack b4 b16 (1)
put-down b4 (1)
unstack b16 b7 (1)
put-down b16 (1)
pick-up b4 (1)
stack b4 b16 (1)
unstack b7 b10 (1)
put-down b7 (1)
pick-up b10 (1)
stack b10 b2 (1)
pick-up b7 (1)
stack b7 b10 (1)
unstack b4 b16 (1)
put-down b4 (1)
pick-up b16 (1)
stack b16 b7 (1)
pick-up b4 (1)
stack b4 b16 (1)
[t=0.0641316s, 26652 KB] Plan length: 208 step(s).
[t=0.0641316s, 26652 KB] Plan cost: 208
[t=0.0641316s, 26652 KB] Expanded 1623 state(s).
[t=0.0641316s, 26652 KB] Reopened 0 state(s).
[t=0.0641316s, 26652 KB] Evaluated 1624 state(s).
[t=0.0641316s, 26652 KB] Evaluations: 3248
[t=0.0641316s, 26652 KB] Generated 13403 state(s).
[t=0.0641316s, 26652 KB] Dead ends: 0 state(s).
[t=0.0641316s, 26652 KB] Number of registered states: 1624
[t=0.0641316s, 26652 KB] Int hash set load factor: 1624/2048 = 0.792969
[t=0.0641316s, 26652 KB] Int hash set resizes: 11
[t=0.0641316s, 26652 KB] Search time: 0.0443725s
[t=0.0641316s, 26652 KB] Total time: 0.0641316s
Solution found.
Peak memory: 26652 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.20s
