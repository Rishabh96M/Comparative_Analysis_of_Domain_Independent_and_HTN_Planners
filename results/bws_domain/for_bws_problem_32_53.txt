INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_32/bws_problem_32_53.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.010s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.020s wall-clock]
3298 relevant atoms
2208 auxiliary atoms
5506 final queue length
9670 total queue pushes
Completing instantiation... [0.040s CPU, 0.046s wall-clock]
Instantiating: [0.070s CPU, 0.069s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.002s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.001s wall-clock]
Choosing groups...
33 uncovered facts
Choosing groups: [0.000s CPU, 0.002s wall-clock]
Building translation key... [0.010s CPU, 0.001s wall-clock]
Computing fact groups: [0.020s CPU, 0.012s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.001s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.003s wall-clock]
Translating task: [0.070s CPU, 0.066s wall-clock]
3040 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
64 propositions removed
Detecting unreachable propositions: [0.030s CPU, 0.034s wall-clock]
Reordering and filtering variables...
65 of 65 variables necessary.
33 of 65 mutex groups necessary.
2048 of 2048 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.020s CPU, 0.018s wall-clock]
Translator variables: 65
Translator derived variables: 0
Translator facts: 1122
Translator goal facts: 26
Translator mutex groups: 33
Translator total mutex groups size: 1089
Translator operators: 2048
Translator axioms: 0
Translator task size: 17566
Translator peak memory: 42752 KB
Writing output... [0.010s CPU, 0.013s wall-clock]
Done! [0.220s CPU, 0.220s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.563e-05s, 24488 KB] reading input...
[t=0.00639846s, 26784 KB] done reading input!
[t=0.00762893s, 27180 KB] Initializing landmark count heuristic...
[t=0.00768451s, 27180 KB] Generating landmark graph...
[t=0.00780215s, 27312 KB] Building a landmark graph with reasonable orders.
[t=0.0079391s, 27312 KB] Initializing Exploration...
[t=0.00857881s, 27768 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0417335s, 29356 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.041833s, 29356 KB] Landmarks generation time: 0.0340204s
[t=0.0418557s, 29356 KB] Discovered 142 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0418718s, 29356 KB] 1498 edges
[t=0.0418816s, 29356 KB] approx. reasonable orders
[t=0.0502822s, 29356 KB] approx. obedient reasonable orders
[t=0.050463s, 29356 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0504779s, 29356 KB] Landmarks generation time: 0.0427913s
[t=0.0504891s, 29356 KB] Discovered 142 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0504976s, 29356 KB] 1573 edges
[t=0.0505067s, 29356 KB] Landmark graph generation time: 0.0428295s
[t=0.0505155s, 29356 KB] Landmark graph contains 142 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0505234s, 29356 KB] Landmark graph contains 1573 orderings.
[t=0.0512896s, 29388 KB] Simplifying 8128 unary operators... done! [6144 unary operators]
[t=0.0534958s, 29388 KB] time to simplify: 0.00230939s
[t=0.0537971s, 29388 KB] Initializing additive heuristic...
[t=0.0538576s, 29388 KB] Initializing FF heuristic...
[t=0.0539783s, 29388 KB] Building successor generator...done!
[t=0.0546466s, 29528 KB] peak memory difference for successor generator creation: 140 KB
[t=0.0546605s, 29528 KB] time for successor generation creation: 0.000615815s
[t=0.0546883s, 29528 KB] Variables: 65
[t=0.0546969s, 29528 KB] FactPairs: 1122
[t=0.0547051s, 29528 KB] Bytes per state: 32
[t=0.0548027s, 29528 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0548401s, 29528 KB] 64 initial landmarks, 26 goal landmarks
[t=0.0549335s, 29528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 78
[t=0.0549466s, 29528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 56
[t=0.0549587s, 29528 KB] g=0, 1 evaluated, 0 expanded
[t=0.0549741s, 29528 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 78
[t=0.0549832s, 29528 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 56
[t=0.0552035s, 29528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 77
[t=0.0552134s, 29528 KB] g=1, 5 evaluated, 4 expanded
[t=0.0553208s, 29528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 55
[t=0.0553308s, 29528 KB] g=2, 7 evaluated, 6 expanded
[t=0.055667s, 29528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 76
[t=0.055677s, 29528 KB] g=3, 14 evaluated, 13 expanded
[t=0.0557816s, 29528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 54
[t=0.0557911s, 29528 KB] g=4, 16 evaluated, 15 expanded
[t=0.056136s, 29528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 75
[t=0.0561484s, 29528 KB] g=5, 23 evaluated, 22 expanded
[t=0.0562494s, 29528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 53
[t=0.0562583s, 29528 KB] g=6, 25 evaluated, 24 expanded
[t=0.0565857s, 29528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 74
[t=0.0565954s, 29528 KB] g=7, 32 evaluated, 31 expanded
[t=0.0570175s, 29528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 73
[t=0.0570267s, 29528 KB] g=9, 41 evaluated, 40 expanded
[t=0.0573542s, 29528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 72
[t=0.0573638s, 29528 KB] g=12, 48 evaluated, 47 expanded
[t=0.0578838s, 29528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 71
[t=0.0578933s, 29528 KB] g=14, 59 evaluated, 58 expanded
[t=0.0580044s, 29528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 70
[t=0.0580223s, 29528 KB] g=15, 61 evaluated, 60 expanded
[t=0.0580814s, 29528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 52
[t=0.0580909s, 29528 KB] g=16, 62 evaluated, 61 expanded
[t=0.0588223s, 29528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 69
[t=0.0588382s, 29528 KB] g=18, 77 evaluated, 76 expanded
[t=0.0596541s, 29528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 68
[t=0.0596665s, 29528 KB] g=20, 94 evaluated, 93 expanded
[t=0.0604608s, 29528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 67
[t=0.0604724s, 29528 KB] g=22, 111 evaluated, 110 expanded
[t=0.0608068s, 29528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 51
[t=0.0608161s, 29528 KB] g=22, 118 evaluated, 117 expanded
[t=0.0610591s, 29528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 66
[t=0.0610683s, 29528 KB] g=23, 123 evaluated, 122 expanded
[t=0.062196s, 29528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 65
[t=0.0622063s, 29528 KB] g=26, 147 evaluated, 146 expanded
[t=0.0634306s, 29528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 64
[t=0.0634415s, 29528 KB] g=28, 173 evaluated, 172 expanded
[t=0.0650554s, 29528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 63
[t=0.0650906s, 29528 KB] g=30, 203 evaluated, 202 expanded
[t=0.0663133s, 29528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 50
[t=0.0663266s, 29528 KB] g=26, 228 evaluated, 227 expanded
[t=0.0676247s, 29528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 62
[t=0.067646s, 29528 KB] g=32, 255 evaluated, 254 expanded
[t=0.0683859s, 29528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 49
[t=0.0684105s, 29528 KB] g=30, 269 evaluated, 268 expanded
[t=0.0695142s, 29528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 48
[t=0.0695543s, 29528 KB] g=32, 289 evaluated, 288 expanded
[t=0.0700353s, 29528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 61
[t=0.0700923s, 29528 KB] g=34, 293 evaluated, 292 expanded
[t=0.0716998s, 29528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 47
[t=0.0717492s, 29528 KB] g=34, 310 evaluated, 309 expanded
[t=0.0727238s, 29528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 46
[t=0.0727463s, 29528 KB] g=36, 326 evaluated, 325 expanded
[t=0.0729075s, 29528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 60
[t=0.0729173s, 29528 KB] g=36, 329 evaluated, 328 expanded
[t=0.0742526s, 29528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0742951s, 29528 KB] g=38, 348 evaluated, 347 expanded
[t=0.0750769s, 29528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.0750968s, 29528 KB] g=38, 361 evaluated, 360 expanded
[t=0.0763651s, 29528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.0763781s, 29528 KB] g=40, 387 evaluated, 386 expanded
[t=0.0767721s, 29528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 58
[t=0.0767822s, 29528 KB] g=40, 395 evaluated, 394 expanded
[t=0.0772715s, 29528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0772865s, 29528 KB] g=42, 405 evaluated, 404 expanded
[t=0.0787969s, 29528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0788076s, 29528 KB] g=46, 436 evaluated, 435 expanded
[t=0.079588s, 29528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0796048s, 29528 KB] g=48, 450 evaluated, 449 expanded
[t=0.0803563s, 29528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 57
[t=0.0803768s, 29528 KB] g=51, 464 evaluated, 463 expanded
[t=0.0804514s, 29528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0804605s, 29528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0804685s, 29528 KB] g=50, 465 evaluated, 464 expanded
[t=0.0806348s, 29528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.080644s, 29528 KB] g=51, 468 evaluated, 467 expanded
[t=0.0811973s, 29528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0812069s, 29528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0812151s, 29528 KB] g=52, 479 evaluated, 478 expanded
[t=0.0813229s, 29528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0813328s, 29528 KB] g=53, 481 evaluated, 480 expanded
[t=0.0818925s, 29528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0819041s, 29528 KB] g=55, 492 evaluated, 491 expanded
[t=0.08276s, 29528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0827705s, 29528 KB] g=58, 509 evaluated, 508 expanded
[t=0.0829263s, 29528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0829354s, 29528 KB] g=56, 512 evaluated, 511 expanded
[t=0.0832875s, 29528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0832976s, 29528 KB] g=57, 519 evaluated, 518 expanded
[t=0.0838521s, 29528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0838797s, 29528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.083889s, 29528 KB] g=58, 529 evaluated, 528 expanded
[t=0.0841521s, 29528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0841746s, 29528 KB] g=59, 532 evaluated, 531 expanded
[t=0.084935s, 29528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0849498s, 29528 KB] g=62, 546 evaluated, 545 expanded
[t=0.0854466s, 29528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0854583s, 29528 KB] g=64, 556 evaluated, 555 expanded
[t=0.0863437s, 29528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0863543s, 29528 KB] g=64, 574 evaluated, 573 expanded
[t=0.086563s, 29528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0865725s, 29528 KB] g=66, 578 evaluated, 577 expanded
[t=0.0876214s, 29528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0876321s, 29528 KB] g=68, 599 evaluated, 598 expanded
[t=0.0889563s, 29528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0889784s, 29528 KB] g=70, 626 evaluated, 625 expanded
[t=0.0901043s, 29528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0901152s, 29528 KB] g=68, 648 evaluated, 647 expanded
[t=0.090683s, 29528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0906927s, 29528 KB] g=70, 659 evaluated, 658 expanded
[t=0.0913049s, 29528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0913146s, 29528 KB] g=72, 671 evaluated, 670 expanded
[t=0.0915653s, 29528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0915748s, 29528 KB] g=73, 676 evaluated, 675 expanded
[t=0.0921218s, 29528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0921338s, 29528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0921427s, 29528 KB] g=74, 687 evaluated, 686 expanded
[t=0.0922958s, 29528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0923049s, 29528 KB] g=75, 690 evaluated, 689 expanded
[t=0.092727s, 29528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0927362s, 29528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0927445s, 29528 KB] g=76, 699 evaluated, 698 expanded
[t=0.092893s, 29528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0929019s, 29528 KB] g=77, 702 evaluated, 701 expanded
[t=0.0931841s, 29528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.093193s, 29528 KB] g=78, 708 evaluated, 707 expanded
[t=0.0936094s, 29528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0936186s, 29528 KB] g=79, 717 evaluated, 716 expanded
[t=0.0945233s, 29528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0945493s, 29528 KB] g=80, 733 evaluated, 732 expanded
[t=0.0947832s, 29528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0948002s, 29528 KB] g=82, 737 evaluated, 736 expanded
[t=0.0957325s, 29528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0957572s, 29528 KB] g=84, 754 evaluated, 753 expanded
[t=0.0968766s, 29528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.096906s, 29528 KB] g=86, 776 evaluated, 775 expanded
[t=0.0977898s, 29528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0978195s, 29528 KB] g=84, 794 evaluated, 793 expanded
[t=0.0983187s, 29528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0983335s, 29528 KB] g=86, 804 evaluated, 803 expanded
[t=0.0984383s, 29528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0984487s, 29528 KB] g=88, 806 evaluated, 805 expanded
[t=0.099837s, 29528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0998744s, 29528 KB] g=90, 834 evaluated, 833 expanded
[t=0.101277s, 29528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.101297s, 29528 KB] g=92, 863 evaluated, 862 expanded
[t=0.102723s, 29528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.102742s, 29528 KB] g=94, 893 evaluated, 892 expanded
[t=0.104586s, 29528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.104622s, 29528 KB] g=96, 928 evaluated, 927 expanded
[t=0.106471s, 29528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.106491s, 29528 KB] g=98, 965 evaluated, 964 expanded
[t=0.108273s, 29528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.10829s, 29528 KB] g=100, 1000 evaluated, 999 expanded
[t=0.109438s, 29528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.109452s, 29528 KB] g=102, 1024 evaluated, 1023 expanded
[t=0.11137s, 29528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.111421s, 29528 KB] g=100, 1050 evaluated, 1049 expanded
[t=0.111853s, 29528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.1119s, 29528 KB] g=104, 1055 evaluated, 1054 expanded
[t=0.113076s, 29528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.113098s, 29528 KB] g=106, 1078 evaluated, 1077 expanded
[t=0.113998s, 29528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.114008s, 29528 KB] g=108, 1097 evaluated, 1096 expanded
[t=0.115305s, 29528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.115336s, 29528 KB] g=110, 1119 evaluated, 1118 expanded
[t=0.115494s, 29528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.115505s, 29528 KB] g=114, 1122 evaluated, 1121 expanded
[t=0.116001s, 29528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.116016s, 29528 KB] g=112, 1132 evaluated, 1131 expanded
[t=0.11666s, 29528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.116672s, 29528 KB] g=114, 1145 evaluated, 1144 expanded
[t=0.116729s, 29528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.116739s, 29528 KB] g=116, 1146 evaluated, 1145 expanded
[t=0.117037s, 29528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.117047s, 29528 KB] g=116, 1152 evaluated, 1151 expanded
[t=0.117203s, 29528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.117213s, 29528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.117222s, 29528 KB] g=118, 1155 evaluated, 1154 expanded
[t=0.12578s, 29528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.12582s, 29528 KB] g=146, 1333 evaluated, 1332 expanded
[t=0.126829s, 29528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.12684s, 29528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.126848s, 29528 KB] g=160, 1354 evaluated, 1353 expanded
[t=0.185359s, 29528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.185445s, 29528 KB] g=224, 2570 evaluated, 2569 expanded
[t=0.185649s, 29528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.185659s, 29528 KB] g=226, 2574 evaluated, 2573 expanded
[t=0.186826s, 29528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.186843s, 29528 KB] g=234, 2599 evaluated, 2598 expanded
[t=0.187277s, 29528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.187293s, 29528 KB] g=238, 2608 evaluated, 2607 expanded
[t=0.187441s, 29528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.187452s, 29528 KB] g=240, 2611 evaluated, 2610 expanded
[t=0.192885s, 29528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.192928s, 29528 KB] g=270, 2718 evaluated, 2717 expanded
[t=0.193248s, 29528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.193258s, 29528 KB] g=274, 2727 evaluated, 2726 expanded
[t=0.193369s, 29528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.193378s, 29528 KB] g=276, 2730 evaluated, 2729 expanded
[t=0.193871s, 29528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.193881s, 29528 KB] g=288, 2747 evaluated, 2746 expanded
[t=0.193985s, 29528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.193994s, 29528 KB] g=292, 2751 evaluated, 2750 expanded
[t=0.194019s, 29528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.194027s, 29528 KB] g=293, 2752 evaluated, 2751 expanded
[t=0.194046s, 29528 KB] Solution found!
[t=0.194065s, 29528 KB] Actual search time: 0.139222s
unstack b19 b26 (1)
put-down b19 (1)
unstack b26 b22 (1)
put-down b26 (1)
unstack b22 b2 (1)
put-down b22 (1)
unstack b11 b3 (1)
put-down b11 (1)
unstack b27 b10 (1)
put-down b27 (1)
unstack b2 b21 (1)
put-down b2 (1)
unstack b21 b14 (1)
put-down b21 (1)
unstack b14 b9 (1)
stack b14 b11 (1)
unstack b9 b17 (1)
put-down b9 (1)
unstack b17 b4 (1)
put-down b17 (1)
unstack b4 b28 (1)
put-down b4 (1)
unstack b28 b32 (1)
stack b28 b2 (1)
pick-up b9 (1)
stack b9 b4 (1)
unstack b32 b13 (1)
put-down b32 (1)
unstack b13 b7 (1)
stack b13 b17 (1)
pick-up b23 (1)
stack b23 b13 (1)
unstack b7 b20 (1)
stack b7 b9 (1)
unstack b20 b30 (1)
put-down b20 (1)
unstack b30 b5 (1)
stack b30 b21 (1)
pick-up b3 (1)
stack b3 b30 (1)
unstack b5 b1 (1)
stack b5 b3 (1)
unstack b1 b24 (1)
put-down b1 (1)
unstack b24 b31 (1)
put-down b24 (1)
pick-up b27 (1)
stack b27 b24 (1)
unstack b31 b12 (1)
stack b31 b22 (1)
unstack b12 b8 (1)
stack b12 b20 (1)
unstack b14 b11 (1)
put-down b14 (1)
pick-up b11 (1)
stack b11 b12 (1)
pick-up b14 (1)
stack b14 b11 (1)
unstack b28 b2 (1)
put-down b28 (1)
pick-up b2 (1)
stack b2 b32 (1)
pick-up b28 (1)
stack b28 b2 (1)
unstack b8 b16 (1)
put-down b8 (1)
unstack b16 b29 (1)
stack b16 b26 (1)
unstack b29 b6 (1)
stack b29 b7 (1)
unstack b6 b15 (1)
stack b6 b23 (1)
unstack b15 b18 (1)
stack b15 b10 (1)
unstack b18 b25 (1)
stack b18 b8 (1)
unstack b28 b2 (1)
put-down b28 (1)
unstack b6 b23 (1)
put-down b6 (1)
unstack b2 b32 (1)
put-down b2 (1)
unstack b23 b13 (1)
put-down b23 (1)
unstack b13 b17 (1)
put-down b13 (1)
unstack b5 b3 (1)
put-down b5 (1)
unstack b3 b30 (1)
put-down b3 (1)
unstack b30 b21 (1)
put-down b30 (1)
pick-up b17 (1)
stack b17 b15 (1)
pick-up b13 (1)
stack b13 b17 (1)
pick-up b21 (1)
stack b21 b18 (1)
pick-up b23 (1)
stack b23 b13 (1)
pick-up b6 (1)
stack b6 b23 (1)
pick-up b30 (1)
stack b30 b21 (1)
pick-up b3 (1)
stack b3 b30 (1)
pick-up b32 (1)
stack b32 b29 (1)
pick-up b2 (1)
stack b2 b32 (1)
pick-up b28 (1)
stack b28 b2 (1)
pick-up b5 (1)
stack b5 b3 (1)
pick-up b25 (1)
stack b25 b5 (1)
pick-up b1 (1)
stack b1 b25 (1)
unstack b28 b2 (1)
put-down b28 (1)
unstack b2 b32 (1)
put-down b2 (1)
unstack b32 b29 (1)
put-down b32 (1)
pick-up b2 (1)
stack b2 b32 (1)
pick-up b28 (1)
stack b28 b2 (1)
unstack b29 b7 (1)
put-down b29 (1)
unstack b7 b9 (1)
put-down b7 (1)
pick-up b29 (1)
stack b29 b7 (1)
unstack b9 b4 (1)
put-down b9 (1)
pick-up b4 (1)
stack b4 b1 (1)
pick-up b9 (1)
stack b9 b4 (1)
unstack b29 b7 (1)
put-down b29 (1)
pick-up b7 (1)
stack b7 b9 (1)
pick-up b29 (1)
stack b29 b7 (1)
unstack b28 b2 (1)
put-down b28 (1)
unstack b2 b32 (1)
put-down b2 (1)
pick-up b28 (1)
stack b28 b2 (1)
unstack b29 b7 (1)
put-down b29 (1)
pick-up b32 (1)
stack b32 b29 (1)
unstack b28 b2 (1)
put-down b28 (1)
pick-up b2 (1)
stack b2 b32 (1)
pick-up b28 (1)
stack b28 b2 (1)
unstack b7 b9 (1)
put-down b7 (1)
unstack b9 b4 (1)
put-down b9 (1)
pick-up b7 (1)
stack b7 b9 (1)
unstack b4 b1 (1)
put-down b4 (1)
unstack b1 b25 (1)
put-down b1 (1)
pick-up b4 (1)
stack b4 b1 (1)
unstack b7 b9 (1)
put-down b7 (1)
pick-up b9 (1)
stack b9 b4 (1)
pick-up b7 (1)
stack b7 b9 (1)
unstack b28 b2 (1)
put-down b28 (1)
unstack b2 b32 (1)
put-down b2 (1)
pick-up b28 (1)
stack b28 b2 (1)
unstack b32 b29 (1)
put-down b32 (1)
pick-up b29 (1)
stack b29 b7 (1)
pick-up b32 (1)
stack b32 b29 (1)
unstack b28 b2 (1)
put-down b28 (1)
pick-up b2 (1)
stack b2 b32 (1)
pick-up b28 (1)
stack b28 b2 (1)
unstack b25 b5 (1)
put-down b25 (1)
unstack b5 b3 (1)
put-down b5 (1)
unstack b3 b30 (1)
put-down b3 (1)
pick-up b5 (1)
stack b5 b3 (1)
pick-up b25 (1)
stack b25 b5 (1)
unstack b30 b21 (1)
put-down b30 (1)
unstack b21 b18 (1)
put-down b21 (1)
pick-up b30 (1)
stack b30 b21 (1)
unstack b18 b8 (1)
put-down b18 (1)
pick-up b8 (1)
stack b8 b16 (1)
pick-up b18 (1)
stack b18 b8 (1)
unstack b30 b21 (1)
put-down b30 (1)
pick-up b21 (1)
stack b21 b18 (1)
pick-up b30 (1)
stack b30 b21 (1)
unstack b25 b5 (1)
put-down b25 (1)
unstack b5 b3 (1)
put-down b5 (1)
pick-up b25 (1)
stack b25 b5 (1)
pick-up b3 (1)
stack b3 b30 (1)
unstack b25 b5 (1)
put-down b25 (1)
pick-up b5 (1)
stack b5 b3 (1)
pick-up b25 (1)
stack b25 b5 (1)
unstack b28 b2 (1)
put-down b28 (1)
unstack b2 b32 (1)
put-down b2 (1)
pick-up b28 (1)
stack b28 b2 (1)
unstack b32 b29 (1)
put-down b32 (1)
unstack b29 b7 (1)
put-down b29 (1)
pick-up b32 (1)
stack b32 b29 (1)
unstack b28 b2 (1)
put-down b28 (1)
pick-up b2 (1)
stack b2 b32 (1)
pick-up b28 (1)
stack b28 b2 (1)
unstack b7 b9 (1)
put-down b7 (1)
unstack b9 b4 (1)
put-down b9 (1)
pick-up b7 (1)
stack b7 b9 (1)
unstack b4 b1 (1)
put-down b4 (1)
pick-up b1 (1)
stack b1 b25 (1)
pick-up b4 (1)
stack b4 b1 (1)
unstack b7 b9 (1)
put-down b7 (1)
pick-up b9 (1)
stack b9 b4 (1)
pick-up b7 (1)
stack b7 b9 (1)
unstack b28 b2 (1)
put-down b28 (1)
unstack b2 b32 (1)
put-down b2 (1)
pick-up b28 (1)
stack b28 b2 (1)
unstack b32 b29 (1)
put-down b32 (1)
pick-up b29 (1)
stack b29 b7 (1)
pick-up b32 (1)
stack b32 b29 (1)
unstack b28 b2 (1)
put-down b28 (1)
pick-up b2 (1)
stack b2 b32 (1)
pick-up b28 (1)
stack b28 b2 (1)
[t=0.194075s, 29528 KB] Plan length: 294 step(s).
[t=0.194075s, 29528 KB] Plan cost: 294
[t=0.194075s, 29528 KB] Expanded 2752 state(s).
[t=0.194075s, 29528 KB] Reopened 0 state(s).
[t=0.194075s, 29528 KB] Evaluated 2753 state(s).
[t=0.194075s, 29528 KB] Evaluations: 5506
[t=0.194075s, 29528 KB] Generated 34992 state(s).
[t=0.194075s, 29528 KB] Dead ends: 0 state(s).
[t=0.194075s, 29528 KB] Number of registered states: 2753
[t=0.194075s, 29528 KB] Int hash set load factor: 2753/4096 = 0.672119
[t=0.194075s, 29528 KB] Int hash set resizes: 12
[t=0.194075s, 29528 KB] Search time: 0.139273s
[t=0.194075s, 29528 KB] Total time: 0.194075s
Solution found.
Peak memory: 29528 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.47s
