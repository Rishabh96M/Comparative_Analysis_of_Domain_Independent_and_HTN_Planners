INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_27/bws_problem_27_75.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.000s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.014s wall-clock]
2378 relevant atoms
1593 auxiliary atoms
3971 final queue length
6948 total queue pushes
Completing instantiation... [0.030s CPU, 0.024s wall-clock]
Instantiating: [0.040s CPU, 0.040s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
28 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.009s wall-clock]
Building STRIPS to SAS dictionary... [0.010s CPU, 0.001s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.040s CPU, 0.040s wall-clock]
2160 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
54 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.017s wall-clock]
Reordering and filtering variables...
55 of 55 variables necessary.
28 of 55 mutex groups necessary.
1458 of 1458 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.010s wall-clock]
Translator variables: 55
Translator derived variables: 0
Translator facts: 812
Translator goal facts: 23
Translator mutex groups: 28
Translator total mutex groups size: 784
Translator operators: 1458
Translator axioms: 0
Translator task size: 12528
Translator peak memory: 39540 KB
Writing output... [0.000s CPU, 0.009s wall-clock]
Done! [0.120s CPU, 0.130s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.0452e-05s, 24488 KB] reading input...
[t=0.00393824s, 25936 KB] done reading input!
[t=0.00531438s, 26332 KB] Initializing landmark count heuristic...
[t=0.00539351s, 26332 KB] Generating landmark graph...
[t=0.00551347s, 26332 KB] Building a landmark graph with reasonable orders.
[t=0.00561778s, 26464 KB] Initializing Exploration...
[t=0.00623699s, 26732 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0235345s, 27392 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.023754s, 27392 KB] Landmarks generation time: 0.0182565s
[t=0.0237868s, 27392 KB] Discovered 113 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0238138s, 27392 KB] 437 edges
[t=0.0238269s, 27392 KB] approx. reasonable orders
[t=0.0244552s, 27392 KB] approx. obedient reasonable orders
[t=0.024548s, 27392 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0245611s, 27392 KB] Landmarks generation time: 0.0191659s
[t=0.0245725s, 27392 KB] Discovered 113 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.024581s, 27392 KB] 445 edges
[t=0.0245901s, 27392 KB] Landmark graph generation time: 0.0192042s
[t=0.0245993s, 27392 KB] Landmark graph contains 113 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0246082s, 27392 KB] Landmark graph contains 445 orderings.
[t=0.0255408s, 27440 KB] Simplifying 5778 unary operators... done! [4374 unary operators]
[t=0.0269519s, 27572 KB] time to simplify: 0.0015181s
[t=0.0271428s, 27572 KB] Initializing additive heuristic...
[t=0.027163s, 27572 KB] Initializing FF heuristic...
[t=0.0272322s, 27572 KB] Building successor generator...done!
[t=0.0276575s, 27572 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0276689s, 27572 KB] time for successor generation creation: 0.000376094s
[t=0.027693s, 27572 KB] Variables: 55
[t=0.0277011s, 27572 KB] FactPairs: 812
[t=0.0277089s, 27572 KB] Bytes per state: 24
[t=0.0278842s, 27572 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0279248s, 27572 KB] 53 initial landmarks, 23 goal landmarks
[t=0.0280097s, 27572 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 60
[t=0.0280192s, 27572 KB] New best heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0280277s, 27572 KB] g=0, 1 evaluated, 0 expanded
[t=0.028047s, 27572 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 60
[t=0.0280559s, 27572 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0283633s, 27572 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.0283742s, 27572 KB] New best heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.0283823s, 27572 KB] g=2, 9 evaluated, 8 expanded
[t=0.0286357s, 27572 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 58
[t=0.0286478s, 27572 KB] g=4, 16 evaluated, 15 expanded
[t=0.0286946s, 27572 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 57
[t=0.0287043s, 27572 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0287123s, 27572 KB] g=4, 17 evaluated, 16 expanded
[t=0.0289175s, 27572 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0289267s, 27572 KB] g=6, 23 evaluated, 22 expanded
[t=0.028989s, 27572 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.028998s, 27572 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0290064s, 27572 KB] g=6, 24 evaluated, 23 expanded
[t=0.0292202s, 27572 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.02923s, 27572 KB] g=8, 30 evaluated, 29 expanded
[t=0.0292706s, 27572 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0292791s, 27572 KB] g=8, 31 evaluated, 30 expanded
[t=0.029403s, 27572 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0294116s, 27572 KB] g=9, 34 evaluated, 33 expanded
[t=0.030002s, 27572 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0300249s, 27572 KB] g=12, 52 evaluated, 51 expanded
[t=0.0306403s, 27572 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0306496s, 27572 KB] g=14, 71 evaluated, 70 expanded
[t=0.0311409s, 27572 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0311509s, 27572 KB] g=16, 86 evaluated, 85 expanded
[t=0.03149s, 27572 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0315016s, 27572 KB] g=16, 96 evaluated, 95 expanded
[t=0.0315534s, 27572 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0315625s, 27572 KB] g=18, 97 evaluated, 96 expanded
[t=0.0321381s, 27572 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0321472s, 27572 KB] g=20, 115 evaluated, 114 expanded
[t=0.0326063s, 27572 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.032615s, 27572 KB] g=20, 129 evaluated, 128 expanded
[t=0.0328831s, 27572 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0328923s, 27572 KB] g=22, 137 evaluated, 136 expanded
[t=0.0333627s, 27572 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0333721s, 27572 KB] g=24, 151 evaluated, 150 expanded
[t=0.0335008s, 27572 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0335201s, 27572 KB] g=24, 154 evaluated, 153 expanded
[t=0.03415s, 27572 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.03416s, 27572 KB] g=26, 173 evaluated, 172 expanded
[t=0.0342394s, 27572 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0342484s, 27572 KB] g=26, 175 evaluated, 174 expanded
[t=0.0348579s, 27572 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0348693s, 27572 KB] g=27, 193 evaluated, 192 expanded
[t=0.0349151s, 27572 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0349242s, 27572 KB] g=28, 194 evaluated, 193 expanded
[t=0.0350195s, 27572 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0350287s, 27572 KB] g=28, 196 evaluated, 195 expanded
[t=0.0357788s, 27572 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.035791s, 27572 KB] g=30, 217 evaluated, 216 expanded
[t=0.0364219s, 27572 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0364326s, 27572 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.036441s, 27572 KB] g=32, 236 evaluated, 235 expanded
[t=0.0367844s, 27572 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0367939s, 27572 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0368018s, 27572 KB] g=34, 246 evaluated, 245 expanded
[t=0.0371253s, 27572 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0371342s, 27572 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0371425s, 27572 KB] g=36, 255 evaluated, 254 expanded
[t=0.037703s, 27572 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0377149s, 27572 KB] g=39, 271 evaluated, 270 expanded
[t=0.0377599s, 27572 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0377727s, 27572 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.037781s, 27572 KB] g=40, 272 evaluated, 271 expanded
[t=0.0381244s, 27572 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0381337s, 27572 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0381415s, 27572 KB] g=42, 282 evaluated, 281 expanded
[t=0.0384458s, 27572 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0384554s, 27572 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0384634s, 27572 KB] g=44, 291 evaluated, 290 expanded
[t=0.0394009s, 27572 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0394304s, 27572 KB] g=48, 318 evaluated, 317 expanded
[t=0.0396775s, 27572 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.039688s, 27572 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0396959s, 27572 KB] g=50, 325 evaluated, 324 expanded
[t=0.0407165s, 27572 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0407301s, 27572 KB] g=55, 357 evaluated, 356 expanded
[t=0.040805s, 27572 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0408142s, 27572 KB] g=56, 359 evaluated, 358 expanded
[t=0.0413147s, 27572 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0413247s, 27572 KB] g=58, 374 evaluated, 373 expanded
[t=0.041652s, 27572 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0416612s, 27572 KB] g=60, 384 evaluated, 383 expanded
[t=0.0418315s, 27572 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0418402s, 27572 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0418477s, 27572 KB] g=60, 389 evaluated, 388 expanded
[t=0.0420987s, 27572 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0421074s, 27572 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0421153s, 27572 KB] g=62, 396 evaluated, 395 expanded
[t=0.0423228s, 27572 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0423318s, 27572 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.04234s, 27572 KB] g=64, 402 evaluated, 401 expanded
[t=0.0430692s, 27572 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0430786s, 27572 KB] g=69, 424 evaluated, 423 expanded
[t=0.0431213s, 27572 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0431297s, 27572 KB] g=70, 425 evaluated, 424 expanded
[t=0.0433234s, 27572 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0433337s, 27572 KB] g=72, 430 evaluated, 429 expanded
[t=0.0434842s, 27572 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0434961s, 27572 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0435044s, 27572 KB] g=74, 434 evaluated, 433 expanded
[t=0.0439603s, 27572 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0439727s, 27572 KB] g=80, 447 evaluated, 446 expanded
[t=0.0440467s, 27572 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0440555s, 27572 KB] g=81, 449 evaluated, 448 expanded
[t=0.0440977s, 27572 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0441061s, 27572 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0441142s, 27572 KB] g=82, 450 evaluated, 449 expanded
[t=0.0442936s, 27572 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0443027s, 27572 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.044311s, 27572 KB] g=84, 455 evaluated, 454 expanded
[t=0.0444196s, 27572 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0444289s, 27572 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.044438s, 27572 KB] g=86, 458 evaluated, 457 expanded
[t=0.0571499s, 27572 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0572271s, 27572 KB] g=114, 846 evaluated, 845 expanded
[t=0.0582781s, 27572 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0582946s, 27572 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0583034s, 27572 KB] g=132, 879 evaluated, 878 expanded
[t=0.0631284s, 27572 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0631541s, 27572 KB] g=120, 1026 evaluated, 1025 expanded
[t=0.0632931s, 27572 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0633026s, 27572 KB] g=122, 1030 evaluated, 1029 expanded
[t=0.0649457s, 27572 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0649636s, 27572 KB] g=134, 1080 evaluated, 1079 expanded
[t=0.0652589s, 27572 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0652683s, 27572 KB] g=138, 1089 evaluated, 1088 expanded
[t=0.0653701s, 27572 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0653794s, 27572 KB] g=140, 1092 evaluated, 1091 expanded
[t=0.0683103s, 27572 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0683257s, 27572 KB] g=170, 1197 evaluated, 1196 expanded
[t=0.068545s, 27572 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0685555s, 27572 KB] g=174, 1206 evaluated, 1205 expanded
[t=0.0686396s, 27572 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0686489s, 27572 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0686569s, 27572 KB] g=176, 1209 evaluated, 1208 expanded
[t=0.0690123s, 27572 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0690217s, 27572 KB] g=188, 1227 evaluated, 1226 expanded
[t=0.0690921s, 27572 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.069101s, 27572 KB] g=192, 1231 evaluated, 1230 expanded
[t=0.0691197s, 27572 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0691284s, 27572 KB] g=193, 1232 evaluated, 1231 expanded
[t=0.0691458s, 27572 KB] Solution found!
[t=0.0691586s, 27572 KB] Actual search time: 0.0412289s
unstack b10 b6 (1)
put-down b10 (1)
unstack b13 b27 (1)
stack b13 b23 (1)
unstack b24 b16 (1)
stack b24 b27 (1)
unstack b1 b11 (1)
put-down b1 (1)
unstack b11 b20 (1)
put-down b11 (1)
unstack b5 b3 (1)
put-down b5 (1)
pick-up b20 (1)
stack b20 b3 (1)
unstack b6 b14 (1)
put-down b6 (1)
unstack b14 b17 (1)
put-down b14 (1)
unstack b17 b22 (1)
put-down b17 (1)
unstack b22 b9 (1)
stack b22 b10 (1)
unstack b9 b7 (1)
put-down b9 (1)
unstack b7 b8 (1)
put-down b7 (1)
unstack b8 b15 (1)
stack b8 b13 (1)
pick-up b16 (1)
stack b16 b17 (1)
pick-up b1 (1)
stack b1 b16 (1)
pick-up b5 (1)
stack b5 b14 (1)
pick-up b6 (1)
stack b6 b7 (1)
unstack b20 b3 (1)
put-down b20 (1)
unstack b3 b4 (1)
stack b3 b22 (1)
pick-up b20 (1)
stack b20 b3 (1)
pick-up b9 (1)
stack b9 b4 (1)
unstack b24 b27 (1)
put-down b24 (1)
pick-up b27 (1)
stack b27 b1 (1)
pick-up b24 (1)
stack b24 b27 (1)
unstack b15 b12 (1)
put-down b15 (1)
unstack b12 b26 (1)
put-down b12 (1)
unstack b26 b2 (1)
stack b26 b5 (1)
pick-up b12 (1)
stack b12 b26 (1)
pick-up b2 (1)
stack b2 b19 (1)
pick-up b11 (1)
stack b11 b2 (1)
pick-up b15 (1)
stack b15 b12 (1)
unstack b9 b4 (1)
put-down b9 (1)
unstack b4 b25 (1)
put-down b4 (1)
unstack b25 b18 (1)
stack b25 b15 (1)
pick-up b4 (1)
stack b4 b25 (1)
pick-up b9 (1)
stack b9 b4 (1)
unstack b8 b13 (1)
put-down b8 (1)
unstack b13 b23 (1)
put-down b13 (1)
unstack b23 b21 (1)
stack b23 b24 (1)
pick-up b21 (1)
stack b21 b6 (1)
pick-up b13 (1)
stack b13 b23 (1)
pick-up b8 (1)
stack b8 b13 (1)
unstack b9 b4 (1)
put-down b9 (1)
unstack b4 b25 (1)
put-down b4 (1)
pick-up b9 (1)
stack b9 b4 (1)
unstack b25 b15 (1)
put-down b25 (1)
unstack b15 b12 (1)
put-down b15 (1)
pick-up b25 (1)
stack b25 b15 (1)
unstack b9 b4 (1)
put-down b9 (1)
pick-up b4 (1)
stack b4 b25 (1)
pick-up b9 (1)
stack b9 b4 (1)
unstack b12 b26 (1)
put-down b12 (1)
unstack b26 b5 (1)
put-down b26 (1)
pick-up b12 (1)
stack b12 b26 (1)
unstack b5 b14 (1)
put-down b5 (1)
pick-up b14 (1)
stack b14 b18 (1)
pick-up b5 (1)
stack b5 b14 (1)
unstack b12 b26 (1)
put-down b12 (1)
pick-up b26 (1)
stack b26 b5 (1)
pick-up b12 (1)
stack b12 b26 (1)
unstack b9 b4 (1)
put-down b9 (1)
unstack b4 b25 (1)
put-down b4 (1)
pick-up b9 (1)
stack b9 b4 (1)
unstack b25 b15 (1)
put-down b25 (1)
pick-up b15 (1)
stack b15 b12 (1)
pick-up b25 (1)
stack b25 b15 (1)
unstack b9 b4 (1)
put-down b9 (1)
pick-up b4 (1)
stack b4 b25 (1)
pick-up b9 (1)
stack b9 b4 (1)
unstack b8 b13 (1)
put-down b8 (1)
unstack b13 b23 (1)
put-down b13 (1)
pick-up b8 (1)
stack b8 b13 (1)
unstack b23 b24 (1)
put-down b23 (1)
unstack b24 b27 (1)
put-down b24 (1)
pick-up b23 (1)
stack b23 b24 (1)
unstack b8 b13 (1)
put-down b8 (1)
pick-up b13 (1)
stack b13 b23 (1)
pick-up b8 (1)
stack b8 b13 (1)
unstack b27 b1 (1)
put-down b27 (1)
unstack b1 b16 (1)
put-down b1 (1)
pick-up b27 (1)
stack b27 b1 (1)
unstack b16 b17 (1)
put-down b16 (1)
pick-up b17 (1)
stack b17 b9 (1)
pick-up b16 (1)
stack b16 b17 (1)
unstack b27 b1 (1)
put-down b27 (1)
pick-up b1 (1)
stack b1 b16 (1)
pick-up b27 (1)
stack b27 b1 (1)
unstack b8 b13 (1)
put-down b8 (1)
unstack b13 b23 (1)
put-down b13 (1)
pick-up b8 (1)
stack b8 b13 (1)
unstack b23 b24 (1)
put-down b23 (1)
pick-up b24 (1)
stack b24 b27 (1)
pick-up b23 (1)
stack b23 b24 (1)
unstack b8 b13 (1)
put-down b8 (1)
pick-up b13 (1)
stack b13 b23 (1)
pick-up b8 (1)
stack b8 b13 (1)
[t=0.0691675s, 27572 KB] Plan length: 194 step(s).
[t=0.0691675s, 27572 KB] Plan cost: 194
[t=0.0691675s, 27572 KB] Expanded 1232 state(s).
[t=0.0691675s, 27572 KB] Reopened 0 state(s).
[t=0.0691675s, 27572 KB] Evaluated 1233 state(s).
[t=0.0691675s, 27572 KB] Evaluations: 2466
[t=0.0691675s, 27572 KB] Generated 11850 state(s).
[t=0.0691675s, 27572 KB] Dead ends: 0 state(s).
[t=0.0691675s, 27572 KB] Number of registered states: 1233
[t=0.0691675s, 27572 KB] Int hash set load factor: 1233/2048 = 0.602051
[t=0.0691675s, 27572 KB] Int hash set resizes: 11
[t=0.0691675s, 27572 KB] Search time: 0.0412842s
[t=0.0691675s, 27572 KB] Total time: 0.0691675s
Solution found.
Peak memory: 27572 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.24s
