INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_22/bws_problem_22_38.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.010s wall-clock]
1608 relevant atoms
1078 auxiliary atoms
2686 final queue length
4669 total queue pushes
Completing instantiation... [0.020s CPU, 0.016s wall-clock]
Instantiating: [0.030s CPU, 0.028s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
23 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.007s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
1430 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
44 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.011s wall-clock]
Reordering and filtering variables...
45 of 45 variables necessary.
23 of 45 mutex groups necessary.
968 of 968 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 45
Translator derived variables: 0
Translator facts: 552
Translator goal facts: 14
Translator mutex groups: 23
Translator total mutex groups size: 529
Translator operators: 968
Translator axioms: 0
Translator task size: 8334
Translator peak memory: 36976 KB
Writing output... [0.000s CPU, 0.005s wall-clock]
Done! [0.080s CPU, 0.084s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=1.8371e-05s, 24488 KB] reading input...
[t=0.00288318s, 25340 KB] done reading input!
[t=0.00402952s, 25736 KB] Initializing landmark count heuristic...
[t=0.00408896s, 25736 KB] Generating landmark graph...
[t=0.00417052s, 25736 KB] Building a landmark graph with reasonable orders.
[t=0.00425174s, 25736 KB] Initializing Exploration...
[t=0.00458489s, 26000 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0138683s, 26532 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0139495s, 26532 KB] Landmarks generation time: 0.0097797s
[t=0.0139645s, 26532 KB] Discovered 81 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0139806s, 26532 KB] 358 edges
[t=0.0139904s, 26532 KB] approx. reasonable orders
[t=0.0141531s, 26532 KB] approx. obedient reasonable orders
[t=0.0141753s, 26532 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0141843s, 26532 KB] Landmarks generation time: 0.0100913s
[t=0.0141932s, 26532 KB] Discovered 81 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0142012s, 26532 KB] 361 edges
[t=0.0142099s, 26532 KB] Landmark graph generation time: 0.0101286s
[t=0.0142187s, 26532 KB] Landmark graph contains 81 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0142267s, 26532 KB] Landmark graph contains 361 orderings.
[t=0.0145597s, 26532 KB] Simplifying 3828 unary operators... done! [2904 unary operators]
[t=0.0154506s, 26532 KB] time to simplify: 0.000948789s
[t=0.0155737s, 26532 KB] Initializing additive heuristic...
[t=0.0155874s, 26532 KB] Initializing FF heuristic...
[t=0.0156355s, 26532 KB] Building successor generator...done!
[t=0.0158728s, 26532 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0158811s, 26532 KB] time for successor generation creation: 0.00020543s
[t=0.0159087s, 26532 KB] Variables: 45
[t=0.0159172s, 26532 KB] FactPairs: 552
[t=0.0159251s, 26532 KB] Bytes per state: 20
[t=0.0160139s, 26532 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.016046s, 26532 KB] 41 initial landmarks, 14 goal landmarks
[t=0.0160926s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0161019s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0161101s, 26532 KB] g=0, 1 evaluated, 0 expanded
[t=0.0161227s, 26532 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0161311s, 26532 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0161952s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0162044s, 26532 KB] g=1, 3 evaluated, 2 expanded
[t=0.0163087s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0163177s, 26532 KB] g=2, 7 evaluated, 6 expanded
[t=0.0163741s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0163831s, 26532 KB] g=3, 9 evaluated, 8 expanded
[t=0.0164423s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0164511s, 26532 KB] g=4, 11 evaluated, 10 expanded
[t=0.0165298s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0165387s, 26532 KB] g=4, 14 evaluated, 13 expanded
[t=0.0166872s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0166964s, 26532 KB] g=6, 20 evaluated, 19 expanded
[t=0.0168909s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0168999s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0169077s, 26532 KB] g=8, 28 evaluated, 27 expanded
[t=0.0170088s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0170175s, 26532 KB] g=9, 32 evaluated, 31 expanded
[t=0.0173554s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.017365s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0173734s, 26532 KB] g=12, 46 evaluated, 45 expanded
[t=0.0175483s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0175613s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0175706s, 26532 KB] g=14, 53 evaluated, 52 expanded
[t=0.0177725s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.017786s, 26532 KB] g=16, 60 evaluated, 59 expanded
[t=0.0178453s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0178543s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0178624s, 26532 KB] g=16, 62 evaluated, 61 expanded
[t=0.0180133s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0180227s, 26532 KB] g=18, 68 evaluated, 67 expanded
[t=0.0182146s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.018225s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.018233s, 26532 KB] g=20, 76 evaluated, 75 expanded
[t=0.0184059s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0184146s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0184227s, 26532 KB] g=22, 83 evaluated, 82 expanded
[t=0.0187994s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0188091s, 26532 KB] g=25, 99 evaluated, 98 expanded
[t=0.0188464s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0188551s, 26532 KB] g=26, 100 evaluated, 99 expanded
[t=0.0190069s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0190156s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0190237s, 26532 KB] g=28, 106 evaluated, 105 expanded
[t=0.0194024s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0194128s, 26532 KB] g=31, 122 evaluated, 121 expanded
[t=0.0197334s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0197432s, 26532 KB] g=34, 135 evaluated, 134 expanded
[t=0.0215411s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0215523s, 26532 KB] g=46, 212 evaluated, 211 expanded
[t=0.0217828s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0217933s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0218025s, 26532 KB] g=48, 221 evaluated, 220 expanded
[t=0.0220029s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0220131s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0220217s, 26532 KB] g=50, 229 evaluated, 228 expanded
[t=0.0222227s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0222318s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.02224s, 26532 KB] g=52, 237 evaluated, 236 expanded
[t=0.0226897s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0226994s, 26532 KB] g=55, 256 evaluated, 255 expanded
[t=0.022749s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0227606s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0227692s, 26532 KB] g=56, 257 evaluated, 256 expanded
[t=0.0229301s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0229392s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0229473s, 26532 KB] g=58, 264 evaluated, 263 expanded
[t=0.0230693s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0230781s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0230862s, 26532 KB] g=60, 269 evaluated, 268 expanded
[t=0.0233308s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0233399s, 26532 KB] g=63, 280 evaluated, 279 expanded
[t=0.0233728s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0233817s, 26532 KB] g=64, 281 evaluated, 280 expanded
[t=0.0234352s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0234441s, 26532 KB] g=65, 283 evaluated, 282 expanded
[t=0.0234752s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.023484s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0234922s, 26532 KB] g=66, 284 evaluated, 283 expanded
[t=0.0235897s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.023599s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0236073s, 26532 KB] g=68, 288 evaluated, 287 expanded
[t=0.0237385s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0237475s, 26532 KB] g=72, 293 evaluated, 292 expanded
[t=0.023822s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0238315s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0238399s, 26532 KB] g=74, 296 evaluated, 295 expanded
[t=0.0241836s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0241935s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0242016s, 26532 KB] g=86, 314 evaluated, 313 expanded
[t=0.0242728s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0242886s, 26532 KB] g=90, 318 evaluated, 317 expanded
[t=0.0243074s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0243168s, 26532 KB] g=91, 319 evaluated, 318 expanded
[t=0.024333s, 26532 KB] Solution found!
[t=0.0243442s, 26532 KB] Actual search time: 0.00829579s
unstack b13 b9 (1)
put-down b13 (1)
unstack b18 b12 (1)
stack b18 b9 (1)
unstack b4 b10 (1)
put-down b4 (1)
unstack b10 b5 (1)
put-down b10 (1)
unstack b5 b2 (1)
put-down b5 (1)
unstack b2 b14 (1)
put-down b2 (1)
unstack b14 b19 (1)
put-down b14 (1)
pick-up b5 (1)
stack b5 b14 (1)
unstack b19 b16 (1)
put-down b19 (1)
unstack b16 b17 (1)
put-down b16 (1)
pick-up b19 (1)
stack b19 b17 (1)
unstack b18 b9 (1)
put-down b18 (1)
unstack b9 b11 (1)
stack b9 b19 (1)
pick-up b18 (1)
stack b18 b9 (1)
unstack b11 b7 (1)
put-down b11 (1)
unstack b7 b22 (1)
put-down b7 (1)
pick-up b11 (1)
stack b11 b7 (1)
unstack b18 b9 (1)
put-down b18 (1)
unstack b9 b19 (1)
put-down b9 (1)
pick-up b18 (1)
stack b18 b9 (1)
unstack b19 b17 (1)
put-down b19 (1)
unstack b17 b15 (1)
put-down b17 (1)
unstack b15 b20 (1)
stack b15 b22 (1)
pick-up b17 (1)
stack b17 b15 (1)
unstack b20 b3 (1)
stack b20 b2 (1)
pick-up b19 (1)
stack b19 b17 (1)
unstack b3 b1 (1)
put-down b3 (1)
unstack b1 b21 (1)
stack b1 b20 (1)
unstack b12 b8 (1)
stack b12 b21 (1)
pick-up b3 (1)
stack b3 b1 (1)
unstack b12 b21 (1)
put-down b12 (1)
unstack b21 b6 (1)
stack b21 b11 (1)
pick-up b13 (1)
stack b13 b6 (1)
pick-up b12 (1)
stack b12 b21 (1)
unstack b18 b9 (1)
put-down b18 (1)
pick-up b9 (1)
stack b9 b19 (1)
pick-up b18 (1)
stack b18 b9 (1)
unstack b12 b21 (1)
put-down b12 (1)
unstack b21 b11 (1)
put-down b21 (1)
pick-up b12 (1)
stack b12 b21 (1)
unstack b11 b7 (1)
put-down b11 (1)
pick-up b7 (1)
stack b7 b3 (1)
pick-up b11 (1)
stack b11 b7 (1)
unstack b12 b21 (1)
put-down b12 (1)
pick-up b21 (1)
stack b21 b11 (1)
pick-up b12 (1)
stack b12 b21 (1)
[t=0.0243537s, 26532 KB] Plan length: 92 step(s).
[t=0.0243537s, 26532 KB] Plan cost: 92
[t=0.0243537s, 26532 KB] Expanded 319 state(s).
[t=0.0243537s, 26532 KB] Reopened 0 state(s).
[t=0.0243537s, 26532 KB] Evaluated 320 state(s).
[t=0.0243537s, 26532 KB] Evaluations: 640
[t=0.0243537s, 26532 KB] Generated 3419 state(s).
[t=0.0243537s, 26532 KB] Dead ends: 0 state(s).
[t=0.0243537s, 26532 KB] Number of registered states: 320
[t=0.0243537s, 26532 KB] Int hash set load factor: 320/512 = 0.625
[t=0.0243537s, 26532 KB] Int hash set resizes: 9
[t=0.0243537s, 26532 KB] Search time: 0.0083402s
[t=0.0243537s, 26532 KB] Total time: 0.0243537s
Solution found.
Peak memory: 26532 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.15s
