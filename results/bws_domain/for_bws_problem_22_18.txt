INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_22/bws_problem_22_18.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.010s wall-clock]
1608 relevant atoms
1078 auxiliary atoms
2686 final queue length
4671 total queue pushes
Completing instantiation... [0.010s CPU, 0.016s wall-clock]
Instantiating: [0.020s CPU, 0.028s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
23 uncovered facts
Choosing groups: [0.010s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.006s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
1430 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
44 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.012s wall-clock]
Reordering and filtering variables...
45 of 45 variables necessary.
23 of 45 mutex groups necessary.
968 of 968 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.007s wall-clock]
Translator variables: 45
Translator derived variables: 0
Translator facts: 552
Translator goal facts: 19
Translator mutex groups: 23
Translator total mutex groups size: 529
Translator operators: 968
Translator axioms: 0
Translator task size: 8339
Translator peak memory: 36976 KB
Writing output... [0.000s CPU, 0.005s wall-clock]
Done! [0.070s CPU, 0.087s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=3.059e-05s, 24488 KB] reading input...
[t=0.00282693s, 25340 KB] done reading input!
[t=0.00381285s, 25736 KB] Initializing landmark count heuristic...
[t=0.00387158s, 25736 KB] Generating landmark graph...
[t=0.00393825s, 25736 KB] Building a landmark graph with reasonable orders.
[t=0.00399718s, 25736 KB] Initializing Exploration...
[t=0.00428566s, 26000 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0156071s, 26528 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0156749s, 26528 KB] Landmarks generation time: 0.0117397s
[t=0.0156919s, 26528 KB] Discovered 100 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0157105s, 26528 KB] 509 edges
[t=0.0157224s, 26528 KB] approx. reasonable orders
[t=0.0191455s, 26528 KB] approx. obedient reasonable orders
[t=0.0195438s, 26528 KB] Removed 4 reasonable or obedient reasonable orders
[t=0.0195607s, 26528 KB] Landmarks generation time: 0.0156849s
[t=0.0195733s, 26528 KB] Discovered 100 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0195836s, 26528 KB] 602 edges
[t=0.0195939s, 26528 KB] Landmark graph generation time: 0.0157306s
[t=0.0196039s, 26528 KB] Landmark graph contains 100 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0196135s, 26528 KB] Landmark graph contains 602 orderings.
[t=0.0199443s, 26528 KB] Simplifying 3828 unary operators... done! [2904 unary operators]
[t=0.0208749s, 26528 KB] time to simplify: 0.000993151s
[t=0.0210228s, 26528 KB] Initializing additive heuristic...
[t=0.0210388s, 26528 KB] Initializing FF heuristic...
[t=0.0211038s, 26528 KB] Building successor generator...done!
[t=0.0213028s, 26528 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0213113s, 26528 KB] time for successor generation creation: 0.000166954s
[t=0.0213261s, 26528 KB] Variables: 45
[t=0.0213357s, 26528 KB] FactPairs: 552
[t=0.0213462s, 26528 KB] Bytes per state: 20
[t=0.0214296s, 26528 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0214645s, 26528 KB] 45 initial landmarks, 19 goal landmarks
[t=0.0215178s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0215279s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0215385s, 26528 KB] g=0, 1 evaluated, 0 expanded
[t=0.0215555s, 26528 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0215648s, 26528 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0217122s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0217235s, 26528 KB] g=1, 6 evaluated, 5 expanded
[t=0.0217638s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0217753s, 26528 KB] g=2, 7 evaluated, 6 expanded
[t=0.0220247s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0220346s, 26528 KB] g=4, 17 evaluated, 16 expanded
[t=0.0221871s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0222072s, 26528 KB] g=4, 23 evaluated, 22 expanded
[t=0.0225727s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0225846s, 26528 KB] g=6, 38 evaluated, 37 expanded
[t=0.0228065s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0228165s, 26528 KB] g=10, 47 evaluated, 46 expanded
[t=0.0229903s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0230002s, 26528 KB] g=8, 54 evaluated, 53 expanded
[t=0.0234361s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.023446s, 26528 KB] g=10, 72 evaluated, 71 expanded
[t=0.0236s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0236097s, 26528 KB] g=14, 78 evaluated, 77 expanded
[t=0.0239007s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0239107s, 26528 KB] g=12, 90 evaluated, 89 expanded
[t=0.0243983s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0244112s, 26528 KB] g=14, 109 evaluated, 108 expanded
[t=0.0249717s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0249863s, 26528 KB] g=16, 130 evaluated, 129 expanded
[t=0.0250786s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0250905s, 26528 KB] g=20, 133 evaluated, 132 expanded
[t=0.0256405s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0256584s, 26528 KB] g=18, 155 evaluated, 154 expanded
[t=0.0261099s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0261306s, 26528 KB] g=22, 173 evaluated, 172 expanded
[t=0.0265346s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0265548s, 26528 KB] g=24, 189 evaluated, 188 expanded
[t=0.0272564s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0272828s, 26528 KB] g=26, 216 evaluated, 215 expanded
[t=0.0276627s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0276755s, 26528 KB] g=28, 231 evaluated, 230 expanded
[t=0.0295851s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0296055s, 26528 KB] g=32, 307 evaluated, 306 expanded
[t=0.0299506s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0299613s, 26528 KB] g=34, 320 evaluated, 319 expanded
[t=0.0316921s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0317066s, 26528 KB] g=40, 391 evaluated, 390 expanded
[t=0.0319248s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0319359s, 26528 KB] g=42, 399 evaluated, 398 expanded
[t=0.0322061s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0322167s, 26528 KB] g=44, 409 evaluated, 408 expanded
[t=0.0325002s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0325108s, 26528 KB] g=46, 420 evaluated, 419 expanded
[t=0.0337209s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0337348s, 26528 KB] g=22, 469 evaluated, 468 expanded
[t=0.0338263s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0338369s, 26528 KB] g=52, 472 evaluated, 471 expanded
[t=0.0343224s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0343322s, 26528 KB] g=56, 492 evaluated, 491 expanded
[t=0.0345855s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0345952s, 26528 KB] g=58, 502 evaluated, 501 expanded
[t=0.0350044s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0350158s, 26528 KB] g=60, 516 evaluated, 515 expanded
[t=0.0351773s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0351874s, 26528 KB] g=62, 522 evaluated, 521 expanded
[t=0.0419814s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0420034s, 26528 KB] g=26, 803 evaluated, 802 expanded
[t=0.0536177s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0536365s, 26528 KB] g=88, 1288 evaluated, 1287 expanded
[t=0.0606462s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0607549s, 26528 KB] g=114, 1569 evaluated, 1568 expanded
[t=0.136407s, 27584 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.136481s, 27584 KB] g=189, 4569 evaluated, 4568 expanded
[t=0.136801s, 27584 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.136826s, 27584 KB] g=192, 4581 evaluated, 4580 expanded
[t=0.137134s, 27584 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.137153s, 27584 KB] g=194, 4593 evaluated, 4592 expanded
[t=0.137414s, 27584 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.137426s, 27584 KB] g=194, 4603 evaluated, 4602 expanded
[t=0.137544s, 27584 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.137554s, 27584 KB] g=196, 4607 evaluated, 4606 expanded
[t=0.137617s, 27584 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.13763s, 27584 KB] g=196, 4609 evaluated, 4608 expanded
[t=0.138099s, 27584 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.138112s, 27584 KB] g=198, 4628 evaluated, 4627 expanded
[t=0.138251s, 27584 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.138262s, 27584 KB] g=199, 4633 evaluated, 4632 expanded
[t=0.138326s, 27584 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.138337s, 27584 KB] g=200, 4635 evaluated, 4634 expanded
[t=0.138758s, 27584 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.13877s, 27584 KB] g=202, 4652 evaluated, 4651 expanded
[t=0.139299s, 27584 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.139311s, 27584 KB] g=204, 4673 evaluated, 4672 expanded
[t=0.140284s, 27584 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.140302s, 27584 KB] g=208, 4712 evaluated, 4711 expanded
[t=0.140392s, 27584 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.140403s, 27584 KB] g=207, 4715 evaluated, 4714 expanded
[t=0.140467s, 27584 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.140477s, 27584 KB] g=208, 4717 evaluated, 4716 expanded
[t=0.140867s, 27584 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.140879s, 27584 KB] g=212, 4733 evaluated, 4732 expanded
[t=0.141009s, 27584 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.141023s, 27584 KB] g=214, 4738 evaluated, 4737 expanded
[t=0.141082s, 27584 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.141093s, 27584 KB] g=210, 4740 evaluated, 4739 expanded
[t=0.141528s, 27584 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.141541s, 27584 KB] g=212, 4759 evaluated, 4758 expanded
[t=0.142033s, 27720 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.142057s, 27720 KB] g=214, 4781 evaluated, 4780 expanded
[t=0.142594s, 27720 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.142608s, 27720 KB] g=216, 4806 evaluated, 4805 expanded
[t=0.143048s, 27720 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.143063s, 27720 KB] g=217, 4827 evaluated, 4826 expanded
[t=0.143505s, 27720 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.143519s, 27720 KB] g=218, 4847 evaluated, 4846 expanded
[t=0.143947s, 27720 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.14398s, 27720 KB] g=219, 4869 evaluated, 4868 expanded
[t=0.144238s, 27720 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.144257s, 27720 KB] g=220, 4881 evaluated, 4880 expanded
[t=0.144587s, 27720 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.1446s, 27720 KB] g=221, 4898 evaluated, 4897 expanded
[t=0.144856s, 27720 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.144869s, 27720 KB] g=222, 4910 evaluated, 4909 expanded
[t=0.145201s, 27720 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.145213s, 27720 KB] g=223, 4927 evaluated, 4926 expanded
[t=0.145348s, 27720 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.145358s, 27720 KB] g=224, 4933 evaluated, 4932 expanded
[t=0.145701s, 27720 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.145714s, 27720 KB] g=225, 4952 evaluated, 4951 expanded
[t=0.145745s, 27720 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.145756s, 27720 KB] g=244, 4953 evaluated, 4952 expanded
[t=0.146032s, 27720 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.146044s, 27720 KB] g=226, 4968 evaluated, 4967 expanded
[t=0.146076s, 27720 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.146086s, 27720 KB] g=248, 4969 evaluated, 4968 expanded
[t=0.146196s, 27720 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.146206s, 27720 KB] g=250, 4975 evaluated, 4974 expanded
[t=0.146355s, 27720 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.146366s, 27720 KB] g=227, 4984 evaluated, 4983 expanded
[t=0.146679s, 27720 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.146691s, 27720 KB] g=228, 5003 evaluated, 5002 expanded
[t=0.146747s, 27720 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.146758s, 27720 KB] g=262, 5006 evaluated, 5005 expanded
[t=0.146908s, 27720 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.146918s, 27720 KB] g=266, 5016 evaluated, 5015 expanded
[t=0.146945s, 27720 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.146955s, 27720 KB] g=229, 5017 evaluated, 5016 expanded
[t=0.146978s, 27720 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.146988s, 27720 KB] g=267, 5018 evaluated, 5017 expanded
[t=0.147024s, 27720 KB] Solution found!
[t=0.147048s, 27720 KB] Actual search time: 0.125597s
unstack b8 b9 (1)
stack b8 b4 (1)
pick-up b11 (1)
stack b11 b17 (1)
unstack b9 b1 (1)
put-down b9 (1)
unstack b1 b12 (1)
put-down b1 (1)
unstack b12 b5 (1)
put-down b12 (1)
unstack b5 b16 (1)
put-down b5 (1)
unstack b16 b15 (1)
put-down b16 (1)
unstack b15 b2 (1)
put-down b15 (1)
unstack b2 b18 (1)
put-down b2 (1)
unstack b18 b7 (1)
stack b18 b2 (1)
pick-up b1 (1)
stack b1 b18 (1)
unstack b7 b6 (1)
stack b7 b3 (1)
pick-up b5 (1)
stack b5 b7 (1)
pick-up b6 (1)
stack b6 b9 (1)
unstack b11 b17 (1)
put-down b11 (1)
pick-up b17 (1)
stack b17 b16 (1)
pick-up b11 (1)
stack b11 b17 (1)
unstack b8 b4 (1)
put-down b8 (1)
unstack b4 b19 (1)
stack b4 b1 (1)
unstack b19 b20 (1)
stack b19 b5 (1)
unstack b20 b22 (1)
put-down b20 (1)
pick-up b15 (1)
stack b15 b22 (1)
pick-up b8 (1)
stack b8 b4 (1)
unstack b15 b22 (1)
put-down b15 (1)
unstack b22 b10 (1)
stack b22 b6 (1)
pick-up b15 (1)
stack b15 b22 (1)
unstack b10 b21 (1)
put-down b10 (1)
unstack b21 b14 (1)
stack b21 b12 (1)
unstack b14 b13 (1)
stack b14 b15 (1)
pick-up b10 (1)
stack b10 b14 (1)
unstack b19 b5 (1)
put-down b19 (1)
unstack b5 b7 (1)
put-down b5 (1)
pick-up b19 (1)
stack b19 b5 (1)
pick-up b13 (1)
stack b13 b19 (1)
unstack b7 b3 (1)
put-down b7 (1)
pick-up b3 (1)
stack b3 b10 (1)
pick-up b7 (1)
stack b7 b3 (1)
unstack b13 b19 (1)
put-down b13 (1)
unstack b19 b5 (1)
put-down b19 (1)
pick-up b13 (1)
stack b13 b19 (1)
pick-up b5 (1)
stack b5 b7 (1)
unstack b13 b19 (1)
put-down b13 (1)
pick-up b19 (1)
stack b19 b5 (1)
pick-up b13 (1)
stack b13 b19 (1)
unstack b8 b4 (1)
put-down b8 (1)
unstack b4 b1 (1)
put-down b4 (1)
unstack b1 b18 (1)
put-down b1 (1)
pick-up b4 (1)
stack b4 b1 (1)
pick-up b8 (1)
stack b8 b4 (1)
unstack b18 b2 (1)
put-down b18 (1)
pick-up b2 (1)
stack b2 b13 (1)
pick-up b18 (1)
stack b18 b2 (1)
unstack b8 b4 (1)
put-down b8 (1)
unstack b4 b1 (1)
put-down b4 (1)
pick-up b1 (1)
stack b1 b18 (1)
pick-up b8 (1)
stack b8 b4 (1)
unstack b1 b18 (1)
put-down b1 (1)
unstack b18 b2 (1)
put-down b18 (1)
pick-up b1 (1)
stack b1 b18 (1)
unstack b8 b4 (1)
put-down b8 (1)
pick-up b4 (1)
stack b4 b1 (1)
pick-up b8 (1)
stack b8 b4 (1)
unstack b2 b13 (1)
put-down b2 (1)
unstack b13 b19 (1)
put-down b13 (1)
pick-up b2 (1)
stack b2 b13 (1)
unstack b19 b5 (1)
put-down b19 (1)
unstack b5 b7 (1)
put-down b5 (1)
pick-up b19 (1)
stack b19 b5 (1)
unstack b2 b13 (1)
put-down b2 (1)
pick-up b13 (1)
stack b13 b19 (1)
pick-up b2 (1)
stack b2 b13 (1)
unstack b8 b4 (1)
put-down b8 (1)
unstack b4 b1 (1)
put-down b4 (1)
pick-up b8 (1)
stack b8 b4 (1)
unstack b1 b18 (1)
put-down b1 (1)
pick-up b18 (1)
stack b18 b2 (1)
pick-up b1 (1)
stack b1 b18 (1)
unstack b8 b4 (1)
put-down b8 (1)
pick-up b4 (1)
stack b4 b1 (1)
pick-up b8 (1)
stack b8 b4 (1)
unstack b7 b3 (1)
put-down b7 (1)
unstack b3 b10 (1)
put-down b3 (1)
pick-up b7 (1)
stack b7 b3 (1)
unstack b10 b14 (1)
put-down b10 (1)
unstack b14 b15 (1)
put-down b14 (1)
pick-up b10 (1)
stack b10 b14 (1)
unstack b7 b3 (1)
put-down b7 (1)
pick-up b3 (1)
stack b3 b10 (1)
pick-up b7 (1)
stack b7 b3 (1)
unstack b15 b22 (1)
put-down b15 (1)
unstack b22 b6 (1)
put-down b22 (1)
pick-up b15 (1)
stack b15 b22 (1)
unstack b6 b9 (1)
put-down b6 (1)
pick-up b9 (1)
stack b9 b21 (1)
pick-up b6 (1)
stack b6 b9 (1)
unstack b15 b22 (1)
put-down b15 (1)
pick-up b22 (1)
stack b22 b6 (1)
pick-up b15 (1)
stack b15 b22 (1)
unstack b7 b3 (1)
put-down b7 (1)
unstack b3 b10 (1)
put-down b3 (1)
pick-up b7 (1)
stack b7 b3 (1)
unstack b10 b14 (1)
put-down b10 (1)
pick-up b14 (1)
stack b14 b15 (1)
pick-up b10 (1)
stack b10 b14 (1)
unstack b7 b3 (1)
put-down b7 (1)
pick-up b3 (1)
stack b3 b10 (1)
pick-up b7 (1)
stack b7 b3 (1)
unstack b8 b4 (1)
put-down b8 (1)
unstack b4 b1 (1)
put-down b4 (1)
pick-up b8 (1)
stack b8 b4 (1)
unstack b1 b18 (1)
put-down b1 (1)
unstack b18 b2 (1)
put-down b18 (1)
pick-up b1 (1)
stack b1 b18 (1)
unstack b8 b4 (1)
put-down b8 (1)
pick-up b4 (1)
stack b4 b1 (1)
pick-up b8 (1)
stack b8 b4 (1)
unstack b2 b13 (1)
put-down b2 (1)
unstack b13 b19 (1)
put-down b13 (1)
pick-up b2 (1)
stack b2 b13 (1)
unstack b19 b5 (1)
put-down b19 (1)
pick-up b5 (1)
stack b5 b7 (1)
pick-up b19 (1)
stack b19 b5 (1)
unstack b2 b13 (1)
put-down b2 (1)
pick-up b13 (1)
stack b13 b19 (1)
pick-up b2 (1)
stack b2 b13 (1)
unstack b8 b4 (1)
put-down b8 (1)
unstack b4 b1 (1)
put-down b4 (1)
pick-up b8 (1)
stack b8 b4 (1)
unstack b1 b18 (1)
put-down b1 (1)
pick-up b18 (1)
stack b18 b2 (1)
pick-up b1 (1)
stack b1 b18 (1)
unstack b8 b4 (1)
put-down b8 (1)
pick-up b4 (1)
stack b4 b1 (1)
pick-up b8 (1)
stack b8 b4 (1)
[t=0.147075s, 27720 KB] Plan length: 268 step(s).
[t=0.147075s, 27720 KB] Plan cost: 268
[t=0.147075s, 27720 KB] Expanded 5019 state(s).
[t=0.147075s, 27720 KB] Reopened 0 state(s).
[t=0.147075s, 27720 KB] Evaluated 5020 state(s).
[t=0.147075s, 27720 KB] Evaluations: 10040
[t=0.147075s, 27720 KB] Generated 63915 state(s).
[t=0.147075s, 27720 KB] Dead ends: 0 state(s).
[t=0.147075s, 27720 KB] Number of registered states: 5020
[t=0.147075s, 27720 KB] Int hash set load factor: 5020/8192 = 0.612793
[t=0.147075s, 27720 KB] Int hash set resizes: 13
[t=0.147075s, 27720 KB] Search time: 0.125646s
[t=0.147075s, 27720 KB] Total time: 0.147075s
Solution found.
Peak memory: 27720 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.28s
