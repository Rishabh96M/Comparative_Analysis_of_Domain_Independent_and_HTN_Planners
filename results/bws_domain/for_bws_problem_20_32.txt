INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_20/bws_problem_20_32.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.008s wall-clock]
1342 relevant atoms
900 auxiliary atoms
2242 final queue length
3885 total queue pushes
Completing instantiation... [0.010s CPU, 0.014s wall-clock]
Instantiating: [0.020s CPU, 0.023s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
21 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.005s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.020s wall-clock]
1180 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
40 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.010s wall-clock]
Reordering and filtering variables...
41 of 41 variables necessary.
21 of 41 mutex groups necessary.
800 of 800 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.005s wall-clock]
Translator variables: 41
Translator derived variables: 0
Translator facts: 462
Translator goal facts: 14
Translator mutex groups: 21
Translator total mutex groups size: 441
Translator operators: 800
Translator axioms: 0
Translator task size: 6898
Translator peak memory: 35944 KB
Writing output... [0.010s CPU, 0.004s wall-clock]
Done! [0.070s CPU, 0.072s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=1.9262e-05s, 24488 KB] reading input...
[t=0.00231734s, 25180 KB] done reading input!
[t=0.00340772s, 25444 KB] Initializing landmark count heuristic...
[t=0.00344909s, 25444 KB] Generating landmark graph...
[t=0.00350603s, 25576 KB] Building a landmark graph with reasonable orders.
[t=0.0035592s, 25576 KB] Initializing Exploration...
[t=0.00380201s, 25744 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.011408s, 26140 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0114892s, 26140 KB] Landmarks generation time: 0.0079849s
[t=0.0115041s, 26140 KB] Discovered 81 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0115202s, 26140 KB] 410 edges
[t=0.0115301s, 26140 KB] approx. reasonable orders
[t=0.0133876s, 26140 KB] approx. obedient reasonable orders
[t=0.0135151s, 26140 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0135289s, 26140 KB] Landmarks generation time: 0.0100773s
[t=0.0135388s, 26140 KB] Discovered 81 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0135471s, 26140 KB] 458 edges
[t=0.0135585s, 26140 KB] Landmark graph generation time: 0.0101179s
[t=0.0135685s, 26140 KB] Landmark graph contains 81 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0135813s, 26140 KB] Landmark graph contains 458 orderings.
[t=0.0141221s, 26332 KB] Simplifying 3160 unary operators... done! [2400 unary operators]
[t=0.0149575s, 26332 KB] time to simplify: 0.000895525s
[t=0.0150674s, 26332 KB] Initializing additive heuristic...
[t=0.0150823s, 26332 KB] Initializing FF heuristic...
[t=0.015153s, 26332 KB] Building successor generator...done!
[t=0.0153386s, 26332 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0153476s, 26332 KB] time for successor generation creation: 0.00015249s
[t=0.0153598s, 26332 KB] Variables: 41
[t=0.0153688s, 26332 KB] FactPairs: 462
[t=0.015377s, 26332 KB] Bytes per state: 16
[t=0.0155087s, 26332 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0155502s, 26332 KB] 37 initial landmarks, 14 goal landmarks
[t=0.0156059s, 26332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0156162s, 26332 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0156253s, 26332 KB] g=0, 1 evaluated, 0 expanded
[t=0.0156403s, 26332 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0156496s, 26332 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0157541s, 26332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0157656s, 26332 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0157745s, 26332 KB] g=2, 5 evaluated, 4 expanded
[t=0.0158528s, 26332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.015865s, 26332 KB] g=4, 8 evaluated, 7 expanded
[t=0.0159657s, 26332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0159761s, 26332 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0159846s, 26332 KB] g=6, 12 evaluated, 11 expanded
[t=0.0160608s, 26332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0160721s, 26332 KB] g=7, 15 evaluated, 14 expanded
[t=0.0161946s, 26332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0162094s, 26332 KB] g=9, 20 evaluated, 19 expanded
[t=0.0164161s, 26332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0164335s, 26332 KB] g=12, 28 evaluated, 27 expanded
[t=0.0166194s, 26332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0166321s, 26332 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0166413s, 26332 KB] g=14, 36 evaluated, 35 expanded
[t=0.0167996s, 26332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0168104s, 26332 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0168188s, 26332 KB] g=16, 43 evaluated, 42 expanded
[t=0.0169869s, 26332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0169977s, 26332 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0170067s, 26332 KB] g=18, 50 evaluated, 49 expanded
[t=0.0171662s, 26332 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0171761s, 26332 KB] g=20, 57 evaluated, 56 expanded
[t=0.0172082s, 26332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0172179s, 26332 KB] g=20, 58 evaluated, 57 expanded
[t=0.0174536s, 26332 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0174699s, 26332 KB] g=22, 68 evaluated, 67 expanded
[t=0.0175717s, 26332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0175808s, 26332 KB] g=22, 72 evaluated, 71 expanded
[t=0.0178144s, 26332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0178235s, 26332 KB] g=24, 82 evaluated, 81 expanded
[t=0.0178979s, 26332 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.017908s, 26332 KB] g=24, 85 evaluated, 84 expanded
[t=0.0181079s, 26332 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0181195s, 26332 KB] g=26, 94 evaluated, 93 expanded
[t=0.0181987s, 26332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0182087s, 26332 KB] g=26, 97 evaluated, 96 expanded
[t=0.0184041s, 26332 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0184209s, 26332 KB] g=28, 105 evaluated, 104 expanded
[t=0.0186055s, 26332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0186242s, 26332 KB] g=28, 112 evaluated, 111 expanded
[t=0.0187834s, 26332 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0187926s, 26332 KB] g=32, 119 evaluated, 118 expanded
[t=0.0190755s, 26332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0190889s, 26332 KB] g=30, 131 evaluated, 130 expanded
[t=0.0194284s, 26332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0194397s, 26332 KB] g=32, 147 evaluated, 146 expanded
[t=0.0200167s, 26332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0200385s, 26332 KB] g=34, 173 evaluated, 172 expanded
[t=0.0201475s, 26332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0201577s, 26332 KB] g=35, 178 evaluated, 177 expanded
[t=0.020486s, 26332 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0204973s, 26332 KB] g=38, 195 evaluated, 194 expanded
[t=0.0207596s, 26332 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0207694s, 26332 KB] g=40, 209 evaluated, 208 expanded
[t=0.0208366s, 26332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.020846s, 26332 KB] g=41, 212 evaluated, 211 expanded
[t=0.020999s, 26332 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0210084s, 26332 KB] g=42, 220 evaluated, 219 expanded
[t=0.0210359s, 26332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0210454s, 26332 KB] g=43, 221 evaluated, 220 expanded
[t=0.0210723s, 26332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0210851s, 26332 KB] g=43, 222 evaluated, 221 expanded
[t=0.0212201s, 26332 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0212296s, 26332 KB] g=44, 229 evaluated, 228 expanded
[t=0.0213435s, 26332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0213526s, 26332 KB] g=47, 235 evaluated, 234 expanded
[t=0.0213808s, 26332 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0213897s, 26332 KB] g=46, 236 evaluated, 235 expanded
[t=0.0214891s, 26332 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0214982s, 26332 KB] g=48, 241 evaluated, 240 expanded
[t=0.0215238s, 26332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0215332s, 26332 KB] g=49, 242 evaluated, 241 expanded
[t=0.0216729s, 26332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0216823s, 26332 KB] g=53, 250 evaluated, 249 expanded
[t=0.0217775s, 26332 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0217866s, 26332 KB] g=54, 255 evaluated, 254 expanded
[t=0.0218392s, 26332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0218483s, 26332 KB] g=55, 257 evaluated, 256 expanded
[t=0.0219203s, 26332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0219296s, 26332 KB] g=56, 261 evaluated, 260 expanded
[t=0.0219679s, 26332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0219769s, 26332 KB] g=57, 263 evaluated, 262 expanded
[t=0.0220648s, 26332 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0220737s, 26332 KB] g=60, 268 evaluated, 267 expanded
[t=0.0220964s, 26332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0221053s, 26332 KB] g=61, 269 evaluated, 268 expanded
[t=0.0221607s, 26332 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.02217s, 26332 KB] g=62, 272 evaluated, 271 expanded
[t=0.0221913s, 26332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0222002s, 26332 KB] g=63, 273 evaluated, 272 expanded
[t=0.0222504s, 26332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0222597s, 26332 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0222679s, 26332 KB] g=66, 276 evaluated, 275 expanded
[t=0.0222856s, 26332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0222945s, 26332 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0223027s, 26332 KB] g=67, 277 evaluated, 276 expanded
[t=0.0223177s, 26332 KB] Solution found!
[t=0.0223284s, 26332 KB] Actual search time: 0.00677379s
unstack b9 b14 (1)
put-down b9 (1)
unstack b14 b3 (1)
put-down b14 (1)
unstack b3 b6 (1)
put-down b3 (1)
unstack b6 b18 (1)
put-down b6 (1)
unstack b18 b17 (1)
put-down b18 (1)
unstack b16 b11 (1)
put-down b16 (1)
unstack b17 b13 (1)
stack b17 b20 (1)
unstack b11 b2 (1)
put-down b11 (1)
unstack b13 b15 (1)
stack b13 b11 (1)
unstack b15 b19 (1)
put-down b15 (1)
pick-up b18 (1)
stack b18 b13 (1)
unstack b19 b4 (1)
put-down b19 (1)
unstack b2 b10 (1)
put-down b2 (1)
unstack b10 b1 (1)
put-down b10 (1)
unstack b1 b8 (1)
put-down b1 (1)
unstack b4 b12 (1)
stack b4 b17 (1)
unstack b8 b7 (1)
stack b8 b4 (1)
unstack b12 b5 (1)
stack b12 b16 (1)
pick-up b1 (1)
stack b1 b10 (1)
pick-up b14 (1)
stack b14 b8 (1)
pick-up b15 (1)
stack b15 b14 (1)
pick-up b19 (1)
stack b19 b1 (1)
pick-up b2 (1)
stack b2 b15 (1)
pick-up b6 (1)
stack b6 b2 (1)
unstack b12 b16 (1)
put-down b12 (1)
unstack b19 b1 (1)
put-down b19 (1)
unstack b1 b10 (1)
put-down b1 (1)
pick-up b10 (1)
stack b10 b7 (1)
pick-up b12 (1)
stack b12 b16 (1)
pick-up b1 (1)
stack b1 b10 (1)
pick-up b19 (1)
stack b19 b1 (1)
unstack b12 b16 (1)
put-down b12 (1)
pick-up b16 (1)
stack b16 b19 (1)
pick-up b12 (1)
stack b12 b16 (1)
[t=0.0223378s, 26332 KB] Plan length: 68 step(s).
[t=0.0223378s, 26332 KB] Plan cost: 68
[t=0.0223378s, 26332 KB] Expanded 277 state(s).
[t=0.0223378s, 26332 KB] Reopened 0 state(s).
[t=0.0223378s, 26332 KB] Evaluated 278 state(s).
[t=0.0223378s, 26332 KB] Evaluations: 556
[t=0.0223378s, 26332 KB] Generated 2956 state(s).
[t=0.0223378s, 26332 KB] Dead ends: 0 state(s).
[t=0.0223378s, 26332 KB] Number of registered states: 278
[t=0.0223378s, 26332 KB] Int hash set load factor: 278/512 = 0.542969
[t=0.0223378s, 26332 KB] Int hash set resizes: 9
[t=0.0223378s, 26332 KB] Search time: 0.0068299s
[t=0.0223378s, 26332 KB] Total time: 0.0223378s
Solution found.
Peak memory: 26332 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.14s
