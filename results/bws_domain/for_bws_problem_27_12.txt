INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_27/bws_problem_27_12.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.016s wall-clock]
2378 relevant atoms
1593 auxiliary atoms
3971 final queue length
6946 total queue pushes
Completing instantiation... [0.020s CPU, 0.024s wall-clock]
Instantiating: [0.030s CPU, 0.041s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.002s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
28 uncovered facts
Choosing groups: [0.000s CPU, 0.002s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.001s wall-clock]
Building dictionary for full mutex groups... [0.010s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.002s wall-clock]
Translating task: [0.040s CPU, 0.045s wall-clock]
2160 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
54 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.017s wall-clock]
Reordering and filtering variables...
55 of 55 variables necessary.
28 of 55 mutex groups necessary.
1458 of 1458 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.010s wall-clock]
Translator variables: 55
Translator derived variables: 0
Translator facts: 812
Translator goal facts: 22
Translator mutex groups: 28
Translator total mutex groups size: 784
Translator operators: 1458
Translator axioms: 0
Translator task size: 12527
Translator peak memory: 39668 KB
Writing output... [0.010s CPU, 0.008s wall-clock]
Done! [0.130s CPU, 0.139s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.0688e-05s, 24488 KB] reading input...
[t=0.00440869s, 25936 KB] done reading input!
[t=0.00523081s, 26332 KB] Initializing landmark count heuristic...
[t=0.00526039s, 26332 KB] Generating landmark graph...
[t=0.0053404s, 26332 KB] Building a landmark graph with reasonable orders.
[t=0.00541328s, 26464 KB] Initializing Exploration...
[t=0.00579995s, 26732 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0242094s, 27392 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0243162s, 27392 KB] Landmarks generation time: 0.0189857s
[t=0.0243393s, 27392 KB] Discovered 117 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0243576s, 27392 KB] 481 edges
[t=0.0243673s, 27392 KB] approx. reasonable orders
[t=0.0260436s, 27392 KB] approx. obedient reasonable orders
[t=0.0261182s, 27392 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0261294s, 27392 KB] Landmarks generation time: 0.0208673s
[t=0.0261393s, 27392 KB] Discovered 117 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0261477s, 27392 KB] 503 edges
[t=0.0261572s, 27392 KB] Landmark graph generation time: 0.0209048s
[t=0.0261668s, 27392 KB] Landmark graph contains 117 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0261755s, 27392 KB] Landmark graph contains 503 orderings.
[t=0.0267992s, 27452 KB] Simplifying 5778 unary operators... done! [4374 unary operators]
[t=0.0284122s, 27584 KB] time to simplify: 0.00173022s
[t=0.0286461s, 27584 KB] Initializing additive heuristic...
[t=0.0286649s, 27584 KB] Initializing FF heuristic...
[t=0.0287244s, 27584 KB] Building successor generator...done!
[t=0.0290507s, 27584 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0290611s, 27584 KB] time for successor generation creation: 0.000270826s
[t=0.029079s, 27584 KB] Variables: 55
[t=0.029088s, 27584 KB] FactPairs: 812
[t=0.0290964s, 27584 KB] Bytes per state: 24
[t=0.0292345s, 27584 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.029272s, 27584 KB] 55 initial landmarks, 22 goal landmarks
[t=0.0293375s, 27584 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 62
[t=0.0293473s, 27584 KB] New best heuristic value for ff(transform = adapt_costs(one)): 47
[t=0.0293559s, 27584 KB] g=0, 1 evaluated, 0 expanded
[t=0.0293702s, 27584 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 62
[t=0.0293791s, 27584 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 47
[t=0.0296092s, 27584 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 61
[t=0.0296187s, 27584 KB] New best heuristic value for ff(transform = adapt_costs(one)): 46
[t=0.029627s, 27584 KB] g=2, 7 evaluated, 6 expanded
[t=0.0297728s, 27584 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 60
[t=0.0297831s, 27584 KB] g=3, 11 evaluated, 10 expanded
[t=0.0299995s, 27584 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.0300126s, 27584 KB] New best heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0300207s, 27584 KB] g=4, 17 evaluated, 16 expanded
[t=0.0301696s, 27584 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 58
[t=0.0301839s, 27584 KB] g=5, 21 evaluated, 20 expanded
[t=0.0303674s, 27584 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 57
[t=0.0303825s, 27584 KB] New best heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.0303913s, 27584 KB] g=6, 26 evaluated, 25 expanded
[t=0.0305051s, 27584 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0305175s, 27584 KB] g=7, 29 evaluated, 28 expanded
[t=0.0308059s, 27584 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0308234s, 27584 KB] g=9, 37 evaluated, 36 expanded
[t=0.0312817s, 27584 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0312942s, 27584 KB] g=12, 50 evaluated, 49 expanded
[t=0.0313744s, 27584 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0313933s, 27584 KB] g=12, 52 evaluated, 51 expanded
[t=0.0319451s, 27584 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0319582s, 27584 KB] g=14, 67 evaluated, 66 expanded
[t=0.032508s, 27584 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.032522s, 27584 KB] g=16, 83 evaluated, 82 expanded
[t=0.0331135s, 27584 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0331259s, 27584 KB] g=18, 100 evaluated, 99 expanded
[t=0.033218s, 27584 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0332313s, 27584 KB] g=16, 102 evaluated, 101 expanded
[t=0.0338089s, 27584 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0338227s, 27584 KB] g=20, 118 evaluated, 117 expanded
[t=0.0339074s, 27584 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0339166s, 27584 KB] g=18, 120 evaluated, 119 expanded
[t=0.0345524s, 27584 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0345642s, 27584 KB] g=22, 137 evaluated, 136 expanded
[t=0.0346493s, 27584 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0346586s, 27584 KB] g=20, 139 evaluated, 138 expanded
[t=0.0352126s, 27584 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0352227s, 27584 KB] g=24, 155 evaluated, 154 expanded
[t=0.03573s, 27584 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0357478s, 27584 KB] g=26, 169 evaluated, 168 expanded
[t=0.0361161s, 27584 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0361268s, 27584 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0361351s, 27584 KB] g=28, 179 evaluated, 178 expanded
[t=0.0364502s, 27584 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0364591s, 27584 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0364672s, 27584 KB] g=30, 188 evaluated, 187 expanded
[t=0.0367849s, 27584 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0367944s, 27584 KB] g=32, 197 evaluated, 196 expanded
[t=0.0369124s, 27584 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0369228s, 27584 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0369311s, 27584 KB] g=32, 200 evaluated, 199 expanded
[t=0.0372765s, 27584 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0372861s, 27584 KB] g=34, 210 evaluated, 209 expanded
[t=0.0373996s, 27584 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0374089s, 27584 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0374171s, 27584 KB] g=34, 213 evaluated, 212 expanded
[t=0.0376991s, 27584 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0377082s, 27584 KB] g=36, 221 evaluated, 220 expanded
[t=0.0378239s, 27584 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0378337s, 27584 KB] g=36, 224 evaluated, 223 expanded
[t=0.0383881s, 27584 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.038417s, 27584 KB] g=38, 237 evaluated, 236 expanded
[t=0.0388317s, 27584 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0388496s, 27584 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0388636s, 27584 KB] g=40, 246 evaluated, 245 expanded
[t=0.0392686s, 27584 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0392863s, 27584 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0392973s, 27584 KB] g=42, 254 evaluated, 253 expanded
[t=0.039573s, 27584 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0395837s, 27584 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.039592s, 27584 KB] g=44, 261 evaluated, 260 expanded
[t=0.0399312s, 27584 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0399429s, 27584 KB] g=47, 270 evaluated, 269 expanded
[t=0.0399871s, 27584 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.039996s, 27584 KB] g=48, 271 evaluated, 270 expanded
[t=0.0402428s, 27584 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0402521s, 27584 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0402605s, 27584 KB] g=50, 278 evaluated, 277 expanded
[t=0.0409033s, 27584 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0409126s, 27584 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0409208s, 27584 KB] g=52, 297 evaluated, 296 expanded
[t=0.0419289s, 27584 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0419539s, 27584 KB] g=56, 326 evaluated, 325 expanded
[t=0.0421367s, 27584 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0421463s, 27584 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0421549s, 27584 KB] g=58, 331 evaluated, 330 expanded
[t=0.0466075s, 27584 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0466375s, 27584 KB] g=72, 459 evaluated, 458 expanded
[t=0.0469166s, 27584 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0469278s, 27584 KB] g=74, 467 evaluated, 466 expanded
[t=0.0471358s, 27584 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0471459s, 27584 KB] g=74, 473 evaluated, 472 expanded
[t=0.0473822s, 27584 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0473923s, 27584 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0474003s, 27584 KB] g=76, 480 evaluated, 479 expanded
[t=0.0479334s, 27584 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0479491s, 27584 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0479579s, 27584 KB] g=80, 495 evaluated, 494 expanded
[t=0.0482684s, 27584 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0482923s, 27584 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0483153s, 27584 KB] g=82, 501 evaluated, 500 expanded
[t=0.0488469s, 27584 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0488628s, 27584 KB] g=85, 515 evaluated, 514 expanded
[t=0.0489085s, 27584 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0489175s, 27584 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0489268s, 27584 KB] g=86, 516 evaluated, 515 expanded
[t=0.0491057s, 27584 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0491154s, 27584 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0491237s, 27584 KB] g=88, 521 evaluated, 520 expanded
[t=0.0496558s, 27584 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0496656s, 27584 KB] g=92, 537 evaluated, 536 expanded
[t=0.0497995s, 27584 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.049808s, 27584 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.049816s, 27584 KB] g=94, 541 evaluated, 540 expanded
[t=0.0527192s, 27584 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0527315s, 27584 KB] g=108, 632 evaluated, 631 expanded
[t=0.0528632s, 27584 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0528724s, 27584 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0528801s, 27584 KB] g=110, 636 evaluated, 635 expanded
[t=0.0531705s, 27584 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0531812s, 27584 KB] g=114, 645 evaluated, 644 expanded
[t=0.0532808s, 27584 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0532895s, 27584 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0532975s, 27584 KB] g=116, 648 evaluated, 647 expanded
[t=0.0563043s, 27584 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0563177s, 27584 KB] g=146, 758 evaluated, 757 expanded
[t=0.0565489s, 27584 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0565589s, 27584 KB] g=150, 767 evaluated, 766 expanded
[t=0.0566386s, 27584 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0566478s, 27584 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0566557s, 27584 KB] g=152, 770 evaluated, 769 expanded
[t=0.0570328s, 27584 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0570518s, 27584 KB] g=164, 788 evaluated, 787 expanded
[t=0.0571236s, 27584 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0571326s, 27584 KB] g=168, 792 evaluated, 791 expanded
[t=0.0571515s, 27584 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0571601s, 27584 KB] g=169, 793 evaluated, 792 expanded
[t=0.0571761s, 27584 KB] Solution found!
[t=0.0571874s, 27584 KB] Actual search time: 0.0279119s
unstack b10 b26 (1)
put-down b10 (1)
unstack b11 b24 (1)
stack b11 b3 (1)
unstack b24 b8 (1)
stack b24 b1 (1)
unstack b26 b17 (1)
put-down b26 (1)
unstack b8 b22 (1)
put-down b8 (1)
unstack b14 b15 (1)
put-down b14 (1)
unstack b15 b6 (1)
put-down b15 (1)
unstack b17 b20 (1)
put-down b17 (1)
unstack b20 b7 (1)
stack b20 b15 (1)
unstack b22 b13 (1)
stack b22 b17 (1)
unstack b13 b23 (1)
put-down b13 (1)
unstack b23 b27 (1)
put-down b23 (1)
unstack b27 b4 (1)
stack b27 b11 (1)
pick-up b14 (1)
stack b14 b22 (1)
unstack b4 b2 (1)
stack b4 b6 (1)
unstack b7 b5 (1)
stack b7 b10 (1)
pick-up b5 (1)
stack b5 b20 (1)
unstack b2 b16 (1)
put-down b2 (1)
unstack b16 b19 (1)
stack b16 b14 (1)
pick-up b19 (1)
stack b19 b27 (1)
pick-up b26 (1)
stack b26 b16 (1)
pick-up b8 (1)
stack b8 b2 (1)
unstack b24 b1 (1)
put-down b24 (1)
unstack b1 b12 (1)
stack b1 b5 (1)
pick-up b24 (1)
stack b24 b1 (1)
pick-up b12 (1)
stack b12 b24 (1)
unstack b8 b2 (1)
put-down b8 (1)
pick-up b2 (1)
stack b2 b12 (1)
pick-up b8 (1)
stack b8 b2 (1)
unstack b19 b27 (1)
put-down b19 (1)
unstack b27 b11 (1)
put-down b27 (1)
pick-up b19 (1)
stack b19 b27 (1)
unstack b11 b3 (1)
put-down b11 (1)
unstack b3 b9 (1)
put-down b3 (1)
unstack b9 b21 (1)
put-down b9 (1)
unstack b21 b18 (1)
put-down b21 (1)
pick-up b3 (1)
stack b3 b9 (1)
pick-up b11 (1)
stack b11 b3 (1)
unstack b18 b25 (1)
put-down b18 (1)
pick-up b25 (1)
stack b25 b7 (1)
pick-up b18 (1)
stack b18 b25 (1)
unstack b4 b6 (1)
put-down b4 (1)
pick-up b6 (1)
stack b6 b21 (1)
pick-up b4 (1)
stack b4 b6 (1)
unstack b19 b27 (1)
put-down b19 (1)
pick-up b27 (1)
stack b27 b11 (1)
pick-up b19 (1)
stack b19 b27 (1)
unstack b26 b16 (1)
put-down b26 (1)
unstack b16 b14 (1)
put-down b16 (1)
pick-up b26 (1)
stack b26 b16 (1)
unstack b14 b22 (1)
put-down b14 (1)
unstack b22 b17 (1)
put-down b22 (1)
pick-up b17 (1)
stack b17 b4 (1)
pick-up b22 (1)
stack b22 b17 (1)
pick-up b14 (1)
stack b14 b22 (1)
unstack b26 b16 (1)
put-down b26 (1)
pick-up b16 (1)
stack b16 b14 (1)
pick-up b26 (1)
stack b26 b16 (1)
unstack b8 b2 (1)
put-down b8 (1)
unstack b2 b12 (1)
put-down b2 (1)
pick-up b8 (1)
stack b8 b2 (1)
unstack b12 b24 (1)
put-down b12 (1)
unstack b24 b1 (1)
put-down b24 (1)
pick-up b12 (1)
stack b12 b24 (1)
unstack b8 b2 (1)
put-down b8 (1)
pick-up b2 (1)
stack b2 b12 (1)
pick-up b8 (1)
stack b8 b2 (1)
unstack b1 b5 (1)
put-down b1 (1)
unstack b5 b20 (1)
put-down b5 (1)
pick-up b1 (1)
stack b1 b5 (1)
unstack b20 b15 (1)
put-down b20 (1)
pick-up b15 (1)
stack b15 b18 (1)
pick-up b20 (1)
stack b20 b15 (1)
unstack b1 b5 (1)
put-down b1 (1)
pick-up b5 (1)
stack b5 b20 (1)
pick-up b1 (1)
stack b1 b5 (1)
unstack b8 b2 (1)
put-down b8 (1)
unstack b2 b12 (1)
put-down b2 (1)
pick-up b8 (1)
stack b8 b2 (1)
unstack b12 b24 (1)
put-down b12 (1)
pick-up b24 (1)
stack b24 b1 (1)
pick-up b12 (1)
stack b12 b24 (1)
unstack b8 b2 (1)
put-down b8 (1)
pick-up b2 (1)
stack b2 b12 (1)
pick-up b8 (1)
stack b8 b2 (1)
[t=0.0571968s, 27584 KB] Plan length: 170 step(s).
[t=0.0571968s, 27584 KB] Plan cost: 170
[t=0.0571968s, 27584 KB] Expanded 793 state(s).
[t=0.0571968s, 27584 KB] Reopened 0 state(s).
[t=0.0571968s, 27584 KB] Evaluated 794 state(s).
[t=0.0571968s, 27584 KB] Evaluations: 1588
[t=0.0571968s, 27584 KB] Generated 7819 state(s).
[t=0.0571968s, 27584 KB] Dead ends: 0 state(s).
[t=0.0571968s, 27584 KB] Number of registered states: 794
[t=0.0571968s, 27584 KB] Int hash set load factor: 794/1024 = 0.775391
[t=0.0571968s, 27584 KB] Int hash set resizes: 10
[t=0.0571968s, 27584 KB] Search time: 0.0279628s
[t=0.0571968s, 27584 KB] Total time: 0.0571968s
Solution found.
Peak memory: 27584 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.25s
