INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_22/bws_problem_22_33.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.010s wall-clock]
1608 relevant atoms
1078 auxiliary atoms
2686 final queue length
4671 total queue pushes
Completing instantiation... [0.020s CPU, 0.016s wall-clock]
Instantiating: [0.030s CPU, 0.028s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
23 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.010s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.006s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
1430 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
44 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.012s wall-clock]
Reordering and filtering variables...
45 of 45 variables necessary.
23 of 45 mutex groups necessary.
968 of 968 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 45
Translator derived variables: 0
Translator facts: 552
Translator goal facts: 18
Translator mutex groups: 23
Translator total mutex groups size: 529
Translator operators: 968
Translator axioms: 0
Translator task size: 8338
Translator peak memory: 36976 KB
Writing output... [0.000s CPU, 0.005s wall-clock]
Done! [0.080s CPU, 0.085s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.1753e-05s, 24488 KB] reading input...
[t=0.00276466s, 25340 KB] done reading input!
[t=0.00400254s, 25736 KB] Initializing landmark count heuristic...
[t=0.00408256s, 25736 KB] Generating landmark graph...
[t=0.00420013s, 25736 KB] Building a landmark graph with reasonable orders.
[t=0.0042838s, 25736 KB] Initializing Exploration...
[t=0.00461772s, 26000 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0149623s, 26528 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0150369s, 26528 KB] Landmarks generation time: 0.0108191s
[t=0.0150504s, 26528 KB] Discovered 98 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0150652s, 26528 KB] 369 edges
[t=0.0150746s, 26528 KB] approx. reasonable orders
[t=0.0181028s, 26528 KB] approx. obedient reasonable orders
[t=0.0182838s, 26528 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0182952s, 26528 KB] Landmarks generation time: 0.0142032s
[t=0.018305s, 26528 KB] Discovered 98 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0183132s, 26528 KB] 438 edges
[t=0.0183215s, 26528 KB] Landmark graph generation time: 0.0142466s
[t=0.0183304s, 26528 KB] Landmark graph contains 98 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0183386s, 26528 KB] Landmark graph contains 438 orderings.
[t=0.0186562s, 26528 KB] Simplifying 3828 unary operators... done! [2904 unary operators]
[t=0.0195832s, 26528 KB] time to simplify: 0.000999948s
[t=0.0197388s, 26528 KB] Initializing additive heuristic...
[t=0.0197758s, 26528 KB] Initializing FF heuristic...
[t=0.0198349s, 26528 KB] Building successor generator...done!
[t=0.0200563s, 26528 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0200652s, 26528 KB] time for successor generation creation: 0.000191692s
[t=0.0200776s, 26528 KB] Variables: 45
[t=0.0200864s, 26528 KB] FactPairs: 552
[t=0.0200951s, 26528 KB] Bytes per state: 20
[t=0.0201842s, 26528 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0202175s, 26528 KB] 45 initial landmarks, 18 goal landmarks
[t=0.0202688s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0202781s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0202865s, 26528 KB] g=0, 1 evaluated, 0 expanded
[t=0.0203s, 26528 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0203086s, 26528 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0204239s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0204333s, 26528 KB] g=1, 5 evaluated, 4 expanded
[t=0.0207659s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0207764s, 26528 KB] g=3, 18 evaluated, 17 expanded
[t=0.0208593s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0208684s, 26528 KB] g=4, 21 evaluated, 20 expanded
[t=0.0211705s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0211834s, 26528 KB] g=6, 33 evaluated, 32 expanded
[t=0.0212415s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0212503s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0212585s, 26528 KB] g=6, 35 evaluated, 34 expanded
[t=0.0214334s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0214423s, 26528 KB] g=8, 42 evaluated, 41 expanded
[t=0.0215238s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0215327s, 26528 KB] g=8, 45 evaluated, 44 expanded
[t=0.0217355s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0217516s, 26528 KB] g=10, 53 evaluated, 52 expanded
[t=0.0218938s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0219031s, 26528 KB] g=10, 58 evaluated, 57 expanded
[t=0.0221518s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0221641s, 26528 KB] g=12, 68 evaluated, 67 expanded
[t=0.0222478s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0223226s, 26528 KB] g=12, 71 evaluated, 70 expanded
[t=0.0225072s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0225307s, 26528 KB] g=14, 78 evaluated, 77 expanded
[t=0.0227295s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0227411s, 26528 KB] g=16, 86 evaluated, 85 expanded
[t=0.0228958s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.022906s, 26528 KB] g=14, 92 evaluated, 91 expanded
[t=0.0229887s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0229991s, 26528 KB] g=18, 95 evaluated, 94 expanded
[t=0.0232429s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.023253s, 26528 KB] g=20, 105 evaluated, 104 expanded
[t=0.023574s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0235859s, 26528 KB] g=16, 118 evaluated, 117 expanded
[t=0.0238183s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0238301s, 26528 KB] g=17, 127 evaluated, 126 expanded
[t=0.0239292s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0239387s, 26528 KB] g=26, 130 evaluated, 129 expanded
[t=0.0242143s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.024224s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0242334s, 26528 KB] g=28, 141 evaluated, 140 expanded
[t=0.0243486s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0243578s, 26528 KB] g=29, 145 evaluated, 144 expanded
[t=0.0244543s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0244641s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0244722s, 26528 KB] g=30, 148 evaluated, 147 expanded
[t=0.0245825s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.024592s, 26528 KB] g=31, 152 evaluated, 151 expanded
[t=0.0246754s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0246847s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0246927s, 26528 KB] g=32, 155 evaluated, 154 expanded
[t=0.0247742s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0247842s, 26528 KB] g=33, 158 evaluated, 157 expanded
[t=0.0248915s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0249003s, 26528 KB] g=34, 162 evaluated, 161 expanded
[t=0.0250955s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0251061s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0251144s, 26528 KB] g=36, 169 evaluated, 168 expanded
[t=0.0251748s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.025184s, 26528 KB] g=37, 171 evaluated, 170 expanded
[t=0.0253898s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0253999s, 26528 KB] g=40, 179 evaluated, 178 expanded
[t=0.0255811s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0255957s, 26528 KB] g=42, 186 evaluated, 185 expanded
[t=0.0258729s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0258868s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0258951s, 26528 KB] g=40, 196 evaluated, 195 expanded
[t=0.0259304s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0259395s, 26528 KB] g=41, 197 evaluated, 196 expanded
[t=0.0259737s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0259822s, 26528 KB] g=42, 198 evaluated, 197 expanded
[t=0.0261547s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0261635s, 26528 KB] g=44, 205 evaluated, 204 expanded
[t=0.0261954s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0262038s, 26528 KB] g=43, 206 evaluated, 205 expanded
[t=0.0263541s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0263635s, 26528 KB] g=44, 212 evaluated, 211 expanded
[t=0.0264629s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0264721s, 26528 KB] g=45, 216 evaluated, 215 expanded
[t=0.0265501s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0265588s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0265665s, 26528 KB] g=46, 219 evaluated, 218 expanded
[t=0.0265978s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0266064s, 26528 KB] g=47, 220 evaluated, 219 expanded
[t=0.0267273s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0267358s, 26528 KB] g=49, 225 evaluated, 224 expanded
[t=0.0268986s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0269073s, 26528 KB] g=52, 232 evaluated, 231 expanded
[t=0.0270435s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.027052s, 26528 KB] g=54, 238 evaluated, 237 expanded
[t=0.027378s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0273869s, 26528 KB] g=56, 253 evaluated, 252 expanded
[t=0.0276734s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0276849s, 26528 KB] g=58, 264 evaluated, 263 expanded
[t=0.0280306s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0280434s, 26528 KB] g=60, 279 evaluated, 278 expanded
[t=0.0281621s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0281714s, 26528 KB] g=61, 286 evaluated, 285 expanded
[t=0.0281978s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0282065s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.028215s, 26528 KB] g=62, 287 evaluated, 286 expanded
[t=0.0282547s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0282638s, 26528 KB] g=63, 289 evaluated, 288 expanded
[t=0.0282902s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0283024s, 26528 KB] g=64, 290 evaluated, 289 expanded
[t=0.0284387s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0284475s, 26528 KB] g=66, 298 evaluated, 297 expanded
[t=0.0285731s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.028582s, 26528 KB] g=68, 305 evaluated, 304 expanded
[t=0.0286064s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.028615s, 26528 KB] g=64, 306 evaluated, 305 expanded
[t=0.0286844s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0286933s, 26528 KB] g=65, 310 evaluated, 309 expanded
[t=0.0287529s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0287619s, 26528 KB] g=70, 313 evaluated, 312 expanded
[t=0.0289309s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0289397s, 26528 KB] g=74, 323 evaluated, 322 expanded
[t=0.028982s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0289908s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0289987s, 26528 KB] g=76, 325 evaluated, 324 expanded
[t=0.0290218s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0290304s, 26528 KB] g=77, 326 evaluated, 325 expanded
[t=0.0291086s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0291172s, 26528 KB] g=81, 331 evaluated, 330 expanded
[t=0.0291828s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0291916s, 26528 KB] g=84, 335 evaluated, 334 expanded
[t=0.0292122s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0292208s, 26528 KB] g=85, 336 evaluated, 335 expanded
[t=0.0292676s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0292762s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0292841s, 26528 KB] g=88, 339 evaluated, 338 expanded
[t=0.0293008s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0293093s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0293172s, 26528 KB] g=89, 340 evaluated, 339 expanded
[t=0.0293318s, 26528 KB] Solution found!
[t=0.0293422s, 26528 KB] Actual search time: 0.00912178s
unstack b5 b1 (1)
put-down b5 (1)
unstack b1 b9 (1)
put-down b1 (1)
unstack b18 b6 (1)
stack b18 b1 (1)
unstack b6 b11 (1)
stack b6 b15 (1)
pick-up b11 (1)
stack b11 b6 (1)
pick-up b5 (1)
stack b5 b11 (1)
unstack b7 b22 (1)
stack b7 b9 (1)
unstack b22 b2 (1)
put-down b22 (1)
unstack b2 b17 (1)
put-down b2 (1)
pick-up b12 (1)
stack b12 b2 (1)
unstack b17 b20 (1)
put-down b17 (1)
unstack b20 b4 (1)
put-down b20 (1)
unstack b4 b14 (1)
put-down b4 (1)
unstack b14 b13 (1)
stack b14 b22 (1)
unstack b13 b3 (1)
stack b13 b18 (1)
pick-up b17 (1)
stack b17 b13 (1)
unstack b3 b10 (1)
stack b3 b20 (1)
pick-up b10 (1)
stack b10 b14 (1)
unstack b7 b9 (1)
put-down b7 (1)
unstack b9 b19 (1)
stack b9 b12 (1)
unstack b19 b16 (1)
stack b19 b3 (1)
pick-up b7 (1)
stack b7 b9 (1)
pick-up b16 (1)
stack b16 b7 (1)
unstack b19 b3 (1)
put-down b19 (1)
unstack b5 b11 (1)
put-down b5 (1)
unstack b11 b6 (1)
put-down b11 (1)
unstack b3 b20 (1)
put-down b3 (1)
unstack b6 b15 (1)
put-down b6 (1)
unstack b15 b21 (1)
stack b15 b17 (1)
unstack b21 b8 (1)
stack b21 b10 (1)
pick-up b8 (1)
stack b8 b16 (1)
pick-up b19 (1)
stack b19 b3 (1)
pick-up b11 (1)
stack b11 b6 (1)
pick-up b20 (1)
stack b20 b21 (1)
pick-up b5 (1)
stack b5 b11 (1)
unstack b19 b3 (1)
put-down b19 (1)
pick-up b3 (1)
stack b3 b20 (1)
pick-up b19 (1)
stack b19 b3 (1)
unstack b5 b11 (1)
put-down b5 (1)
unstack b11 b6 (1)
put-down b11 (1)
pick-up b5 (1)
stack b5 b11 (1)
pick-up b6 (1)
stack b6 b15 (1)
unstack b5 b11 (1)
put-down b5 (1)
pick-up b11 (1)
stack b11 b6 (1)
pick-up b5 (1)
stack b5 b11 (1)
[t=0.0293519s, 26528 KB] Plan length: 90 step(s).
[t=0.0293519s, 26528 KB] Plan cost: 90
[t=0.0293519s, 26528 KB] Expanded 340 state(s).
[t=0.0293519s, 26528 KB] Reopened 0 state(s).
[t=0.0293519s, 26528 KB] Evaluated 341 state(s).
[t=0.0293519s, 26528 KB] Evaluations: 682
[t=0.0293519s, 26528 KB] Generated 2936 state(s).
[t=0.0293519s, 26528 KB] Dead ends: 0 state(s).
[t=0.0293519s, 26528 KB] Number of registered states: 341
[t=0.0293519s, 26528 KB] Int hash set load factor: 341/512 = 0.666016
[t=0.0293519s, 26528 KB] Int hash set resizes: 9
[t=0.0293519s, 26528 KB] Search time: 0.00916815s
[t=0.0293519s, 26528 KB] Total time: 0.0293519s
Solution found.
Peak memory: 26528 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.16s
