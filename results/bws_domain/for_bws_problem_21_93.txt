INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_21/bws_problem_21_93.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.009s wall-clock]
1472 relevant atoms
987 auxiliary atoms
2459 final queue length
4270 total queue pushes
Completing instantiation... [0.010s CPU, 0.016s wall-clock]
Instantiating: [0.020s CPU, 0.026s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
22 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.006s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.022s wall-clock]
1302 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
42 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.010s wall-clock]
Reordering and filtering variables...
43 of 43 variables necessary.
22 of 43 mutex groups necessary.
882 of 882 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 43
Translator derived variables: 0
Translator facts: 506
Translator goal facts: 17
Translator mutex groups: 22
Translator total mutex groups size: 484
Translator operators: 882
Translator axioms: 0
Translator task size: 7602
Translator peak memory: 36456 KB
Writing output... [0.000s CPU, 0.004s wall-clock]
Done! [0.070s CPU, 0.079s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.0432e-05s, 24488 KB] reading input...
[t=0.00259268s, 25268 KB] done reading input!
[t=0.00359869s, 25664 KB] Initializing landmark count heuristic...
[t=0.00363197s, 25664 KB] Generating landmark graph...
[t=0.0036888s, 25664 KB] Building a landmark graph with reasonable orders.
[t=0.0037443s, 25664 KB] Initializing Exploration...
[t=0.00400627s, 25852 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0124467s, 26380 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0124976s, 26380 KB] Landmarks generation time: 0.00880833s
[t=0.0125119s, 26380 KB] Discovered 90 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0125276s, 26380 KB] 329 edges
[t=0.0125371s, 26380 KB] approx. reasonable orders
[t=0.014846s, 26380 KB] approx. obedient reasonable orders
[t=0.0148711s, 26380 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.01488s, 26380 KB] Landmarks generation time: 0.0112446s
[t=0.0148891s, 26380 KB] Discovered 90 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0148968s, 26380 KB] 380 edges
[t=0.0149049s, 26380 KB] Landmark graph generation time: 0.0112795s
[t=0.0149131s, 26380 KB] Landmark graph contains 90 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0149208s, 26380 KB] Landmark graph contains 380 orderings.
[t=0.0151981s, 26380 KB] Simplifying 3486 unary operators... done! [2646 unary operators]
[t=0.0159764s, 26380 KB] time to simplify: 0.000833277s
[t=0.0160839s, 26380 KB] Initializing additive heuristic...
[t=0.0160974s, 26380 KB] Initializing FF heuristic...
[t=0.0161442s, 26380 KB] Building successor generator...done!
[t=0.0163155s, 26380 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0163239s, 26380 KB] time for successor generation creation: 0.000141591s
[t=0.0163348s, 26380 KB] Variables: 43
[t=0.0163426s, 26380 KB] FactPairs: 506
[t=0.0163508s, 26380 KB] Bytes per state: 16
[t=0.0164307s, 26380 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0164625s, 26380 KB] 42 initial landmarks, 17 goal landmarks
[t=0.0165073s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0165165s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.016525s, 26380 KB] g=0, 1 evaluated, 0 expanded
[t=0.0165386s, 26380 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0165477s, 26380 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0167253s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0167345s, 26380 KB] g=2, 8 evaluated, 7 expanded
[t=0.0167678s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0167766s, 26380 KB] g=2, 9 evaluated, 8 expanded
[t=0.0170581s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0170734s, 26380 KB] g=4, 20 evaluated, 19 expanded
[t=0.0171302s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0171399s, 26380 KB] g=4, 22 evaluated, 21 expanded
[t=0.0174515s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0174611s, 26380 KB] g=6, 36 evaluated, 35 expanded
[t=0.0178544s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0178639s, 26380 KB] g=8, 54 evaluated, 53 expanded
[t=0.0179656s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0179747s, 26380 KB] g=8, 58 evaluated, 57 expanded
[t=0.0182545s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0182632s, 26380 KB] g=10, 70 evaluated, 69 expanded
[t=0.0183408s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0183497s, 26380 KB] g=10, 73 evaluated, 72 expanded
[t=0.0188573s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.018869s, 26380 KB] g=12, 94 evaluated, 93 expanded
[t=0.0189976s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0190068s, 26380 KB] g=14, 99 evaluated, 98 expanded
[t=0.0193831s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0193976s, 26380 KB] g=14, 115 evaluated, 114 expanded
[t=0.0195435s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0195525s, 26380 KB] g=15, 121 evaluated, 120 expanded
[t=0.0197514s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.019765s, 26380 KB] g=16, 129 evaluated, 128 expanded
[t=0.0200959s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0201045s, 26380 KB] g=18, 144 evaluated, 143 expanded
[t=0.0202436s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0202521s, 26380 KB] g=18, 150 evaluated, 149 expanded
[t=0.0204152s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.020424s, 26380 KB] g=20, 157 evaluated, 156 expanded
[t=0.0208374s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0208472s, 26380 KB] g=20, 175 evaluated, 174 expanded
[t=0.0213792s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0213887s, 26380 KB] g=24, 198 evaluated, 197 expanded
[t=0.0215671s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0215797s, 26380 KB] g=22, 205 evaluated, 204 expanded
[t=0.0217763s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0217857s, 26380 KB] g=26, 213 evaluated, 212 expanded
[t=0.0220749s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0220844s, 26380 KB] g=28, 225 evaluated, 224 expanded
[t=0.0225714s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0225821s, 26380 KB] g=24, 245 evaluated, 244 expanded
[t=0.0235213s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0235334s, 26380 KB] g=26, 284 evaluated, 283 expanded
[t=0.0235669s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0235759s, 26380 KB] g=36, 285 evaluated, 284 expanded
[t=0.0239361s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0239507s, 26380 KB] g=38, 298 evaluated, 297 expanded
[t=0.0242142s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0242235s, 26380 KB] g=40, 309 evaluated, 308 expanded
[t=0.0245589s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0245687s, 26380 KB] g=28, 323 evaluated, 322 expanded
[t=0.0252317s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0252456s, 26380 KB] g=30, 352 evaluated, 351 expanded
[t=0.0258274s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0258408s, 26380 KB] g=32, 378 evaluated, 377 expanded
[t=0.0264146s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0264376s, 26380 KB] g=34, 403 evaluated, 402 expanded
[t=0.0269047s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0269278s, 26380 KB] g=36, 424 evaluated, 423 expanded
[t=0.0271311s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0271492s, 26380 KB] g=38, 432 evaluated, 431 expanded
[t=0.0273135s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0273365s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0273455s, 26380 KB] g=38, 440 evaluated, 439 expanded
[t=0.0274891s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0275063s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0275158s, 26380 KB] g=40, 447 evaluated, 446 expanded
[t=0.0276361s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0276473s, 26380 KB] g=42, 453 evaluated, 452 expanded
[t=0.0277672s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0277798s, 26380 KB] g=43, 459 evaluated, 458 expanded
[t=0.0278089s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0278182s, 26380 KB] g=44, 460 evaluated, 459 expanded
[t=0.0279507s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0279627s, 26380 KB] g=46, 467 evaluated, 466 expanded
[t=0.0280417s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0280529s, 26380 KB] g=46, 471 evaluated, 470 expanded
[t=0.0280962s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.028107s, 26380 KB] g=47, 473 evaluated, 472 expanded
[t=0.0281509s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0281615s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0281697s, 26380 KB] g=48, 475 evaluated, 474 expanded
[t=0.0283053s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0283158s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0283246s, 26380 KB] g=50, 483 evaluated, 482 expanded
[t=0.0283954s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0284052s, 26380 KB] g=51, 487 evaluated, 486 expanded
[t=0.0284298s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0284394s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.028448s, 26380 KB] g=52, 488 evaluated, 487 expanded
[t=0.0284721s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0284827s, 26380 KB] g=53, 489 evaluated, 488 expanded
[t=0.0285074s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0285172s, 26380 KB] g=54, 490 evaluated, 489 expanded
[t=0.0286174s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0286312s, 26380 KB] g=56, 496 evaluated, 495 expanded
[t=0.0287276s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0287407s, 26380 KB] g=58, 502 evaluated, 501 expanded
[t=0.0287645s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.028774s, 26380 KB] g=54, 503 evaluated, 502 expanded
[t=0.0288146s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0288245s, 26380 KB] g=55, 505 evaluated, 504 expanded
[t=0.0289836s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0289999s, 26380 KB] g=56, 513 evaluated, 512 expanded
[t=0.0290232s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0290331s, 26380 KB] g=57, 514 evaluated, 513 expanded
[t=0.0290591s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0290682s, 26380 KB] g=58, 515 evaluated, 514 expanded
[t=0.0291099s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0291233s, 26380 KB] g=60, 517 evaluated, 516 expanded
[t=0.0291583s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0291701s, 26380 KB] g=61, 519 evaluated, 518 expanded
[t=0.0292196s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0292298s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0292384s, 26380 KB] g=64, 522 evaluated, 521 expanded
[t=0.0292576s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0292664s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.029275s, 26380 KB] g=65, 523 evaluated, 522 expanded
[t=0.0292912s, 26380 KB] Solution found!
[t=0.0293086s, 26380 KB] Actual search time: 0.0128452s
unstack b13 b3 (1)
put-down b13 (1)
unstack b19 b4 (1)
put-down b19 (1)
unstack b2 b16 (1)
put-down b2 (1)
unstack b16 b5 (1)
put-down b16 (1)
unstack b4 b7 (1)
put-down b4 (1)
unstack b5 b20 (1)
put-down b5 (1)
unstack b6 b11 (1)
put-down b6 (1)
unstack b11 b17 (1)
put-down b11 (1)
unstack b17 b21 (1)
put-down b17 (1)
unstack b20 b9 (1)
put-down b20 (1)
unstack b7 b10 (1)
put-down b7 (1)
pick-up b21 (1)
stack b21 b7 (1)
pick-up b3 (1)
stack b3 b21 (1)
pick-up b5 (1)
stack b5 b3 (1)
pick-up b4 (1)
stack b4 b5 (1)
pick-up b16 (1)
stack b16 b4 (1)
pick-up b6 (1)
stack b6 b16 (1)
pick-up b13 (1)
stack b13 b6 (1)
pick-up b2 (1)
stack b2 b13 (1)
pick-up b10 (1)
stack b10 b2 (1)
unstack b9 b12 (1)
put-down b9 (1)
unstack b12 b15 (1)
stack b12 b20 (1)
unstack b15 b1 (1)
put-down b15 (1)
unstack b1 b8 (1)
stack b1 b10 (1)
unstack b8 b14 (1)
put-down b8 (1)
pick-up b18 (1)
stack b18 b14 (1)
pick-up b17 (1)
stack b17 b8 (1)
pick-up b15 (1)
stack b15 b17 (1)
pick-up b11 (1)
stack b11 b19 (1)
pick-up b9 (1)
stack b9 b12 (1)
unstack b11 b19 (1)
put-down b11 (1)
pick-up b19 (1)
stack b19 b15 (1)
pick-up b11 (1)
stack b11 b19 (1)
[t=0.0293207s, 26380 KB] Plan length: 66 step(s).
[t=0.0293207s, 26380 KB] Plan cost: 66
[t=0.0293207s, 26380 KB] Expanded 523 state(s).
[t=0.0293207s, 26380 KB] Reopened 0 state(s).
[t=0.0293207s, 26380 KB] Evaluated 524 state(s).
[t=0.0293207s, 26380 KB] Evaluations: 1048
[t=0.0293207s, 26380 KB] Generated 5136 state(s).
[t=0.0293207s, 26380 KB] Dead ends: 0 state(s).
[t=0.0293207s, 26380 KB] Number of registered states: 524
[t=0.0293207s, 26380 KB] Int hash set load factor: 524/1024 = 0.511719
[t=0.0293207s, 26380 KB] Int hash set resizes: 10
[t=0.0293207s, 26380 KB] Search time: 0.0128903s
[t=0.0293207s, 26380 KB] Total time: 0.0293207s
Solution found.
Peak memory: 26380 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.16s
