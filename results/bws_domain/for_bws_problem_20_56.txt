INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_20/bws_problem_20_56.pddl --sas-file output.sas
Parsing...
Parsing: [0.010s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.015s wall-clock]
1342 relevant atoms
900 auxiliary atoms
2242 final queue length
3885 total queue pushes
Completing instantiation... [0.030s CPU, 0.026s wall-clock]
Instantiating: [0.040s CPU, 0.043s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.003s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
21 uncovered facts
Choosing groups: [0.010s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.007s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.022s wall-clock]
1180 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
40 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.010s wall-clock]
Reordering and filtering variables...
41 of 41 variables necessary.
21 of 41 mutex groups necessary.
800 of 800 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 41
Translator derived variables: 0
Translator facts: 462
Translator goal facts: 17
Translator mutex groups: 21
Translator total mutex groups size: 441
Translator operators: 800
Translator axioms: 0
Translator task size: 6901
Translator peak memory: 35940 KB
Writing output... [0.000s CPU, 0.004s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=1.9679e-05s, 24488 KB] reading input...
[t=0.00220899s, 25180 KB] done reading input!
[t=0.00306208s, 25444 KB] Initializing landmark count heuristic...
[t=0.00309295s, 25444 KB] Generating landmark graph...
[t=0.00315131s, 25576 KB] Building a landmark graph with reasonable orders.
[t=0.00320599s, 25576 KB] Initializing Exploration...
[t=0.00343587s, 25744 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0113584s, 26140 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0114104s, 26140 KB] Landmarks generation time: 0.00827339s
[t=0.0114385s, 26140 KB] Discovered 89 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0114542s, 26140 KB] 425 edges
[t=0.0114643s, 26140 KB] approx. reasonable orders
[t=0.0122843s, 26140 KB] approx. obedient reasonable orders
[t=0.0123102s, 26140 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0123303s, 26140 KB] Landmarks generation time: 0.00923115s
[t=0.0123397s, 26140 KB] Discovered 89 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0123478s, 26140 KB] 443 edges
[t=0.0123561s, 26140 KB] Landmark graph generation time: 0.00927016s
[t=0.0123647s, 26140 KB] Landmark graph contains 89 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0123728s, 26140 KB] Landmark graph contains 443 orderings.
[t=0.0126588s, 26344 KB] Simplifying 3160 unary operators... done! [2400 unary operators]
[t=0.013433s, 26344 KB] time to simplify: 0.000843864s
[t=0.0135561s, 26344 KB] Initializing additive heuristic...
[t=0.0135722s, 26344 KB] Initializing FF heuristic...
[t=0.0136554s, 26344 KB] Building successor generator...done!
[t=0.0138545s, 26344 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0138649s, 26344 KB] time for successor generation creation: 0.000166209s
[t=0.0138768s, 26344 KB] Variables: 41
[t=0.0138851s, 26344 KB] FactPairs: 462
[t=0.0138933s, 26344 KB] Bytes per state: 16
[t=0.0140035s, 26344 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0140418s, 26344 KB] 40 initial landmarks, 17 goal landmarks
[t=0.0140977s, 26344 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0141085s, 26344 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0141172s, 26344 KB] g=0, 1 evaluated, 0 expanded
[t=0.0141312s, 26344 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.01414s, 26344 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0142652s, 26344 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0142765s, 26344 KB] g=2, 6 evaluated, 5 expanded
[t=0.0144748s, 26344 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0144844s, 26344 KB] g=3, 15 evaluated, 14 expanded
[t=0.0146715s, 26344 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0146911s, 26344 KB] g=6, 23 evaluated, 22 expanded
[t=0.0148766s, 26344 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0148899s, 26344 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0148997s, 26344 KB] g=8, 31 evaluated, 30 expanded
[t=0.0149568s, 26344 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0149663s, 26344 KB] g=9, 33 evaluated, 32 expanded
[t=0.0152104s, 26344 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0152251s, 26344 KB] g=12, 44 evaluated, 43 expanded
[t=0.0154356s, 26344 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0154539s, 26344 KB] g=14, 53 evaluated, 52 expanded
[t=0.0156155s, 26344 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0156302s, 26344 KB] g=15, 60 evaluated, 59 expanded
[t=0.0157992s, 26344 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0158161s, 26344 KB] g=14, 67 evaluated, 66 expanded
[t=0.0160863s, 26344 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0161073s, 26344 KB] g=18, 79 evaluated, 78 expanded
[t=0.0165602s, 26344 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0165814s, 26344 KB] g=20, 100 evaluated, 99 expanded
[t=0.0166369s, 26344 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.016648s, 26344 KB] g=20, 102 evaluated, 101 expanded
[t=0.0170651s, 26344 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0170841s, 26344 KB] g=22, 121 evaluated, 120 expanded
[t=0.0175672s, 26344 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0175961s, 26344 KB] g=24, 143 evaluated, 142 expanded
[t=0.0176564s, 26344 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0176678s, 26344 KB] g=24, 145 evaluated, 144 expanded
[t=0.0180318s, 26344 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0180671s, 26344 KB] g=26, 162 evaluated, 161 expanded
[t=0.0181636s, 26344 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0181774s, 26344 KB] g=24, 166 evaluated, 165 expanded
[t=0.0184043s, 26344 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.01842s, 26344 KB] g=28, 176 evaluated, 175 expanded
[t=0.018731s, 26344 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0187467s, 26344 KB] g=26, 189 evaluated, 188 expanded
[t=0.0192371s, 26344 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0192515s, 26344 KB] g=28, 211 evaluated, 210 expanded
[t=0.0192849s, 26344 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0192949s, 26344 KB] g=30, 212 evaluated, 211 expanded
[t=0.0197687s, 26344 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0197881s, 26344 KB] g=30, 233 evaluated, 232 expanded
[t=0.0203826s, 26344 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0204218s, 26344 KB] g=32, 258 evaluated, 257 expanded
[t=0.0210094s, 26344 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0210337s, 26344 KB] g=34, 283 evaluated, 282 expanded
[t=0.0215411s, 26344 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0215779s, 26344 KB] g=36, 299 evaluated, 298 expanded
[t=0.0217867s, 26344 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0218019s, 26344 KB] g=36, 307 evaluated, 306 expanded
[t=0.0220471s, 26344 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0220572s, 26344 KB] g=38, 318 evaluated, 317 expanded
[t=0.0224497s, 26344 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0224724s, 26344 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0224871s, 26344 KB] g=38, 333 evaluated, 332 expanded
[t=0.02295s, 26344 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0229969s, 26344 KB] g=40, 343 evaluated, 342 expanded
[t=0.0230617s, 26344 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0230773s, 26344 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.023091s, 26344 KB] g=40, 344 evaluated, 343 expanded
[t=0.0233913s, 26344 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0234457s, 26344 KB] g=42, 353 evaluated, 352 expanded
[t=0.0235253s, 26344 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0235489s, 26344 KB] g=42, 355 evaluated, 354 expanded
[t=0.0239515s, 26344 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0239873s, 26344 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0240077s, 26344 KB] g=44, 367 evaluated, 366 expanded
[t=0.0242274s, 26344 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0242424s, 26344 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0242588s, 26344 KB] g=46, 373 evaluated, 372 expanded
[t=0.0244104s, 26344 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0244207s, 26344 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0244288s, 26344 KB] g=48, 379 evaluated, 378 expanded
[t=0.0252426s, 26344 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0252731s, 26344 KB] g=54, 408 evaluated, 407 expanded
[t=0.0254966s, 26344 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0255148s, 26344 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0255283s, 26344 KB] g=56, 414 evaluated, 413 expanded
[t=0.0256811s, 26344 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0256992s, 26344 KB] g=56, 418 evaluated, 417 expanded
[t=0.0258881s, 26344 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0259069s, 26344 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0259208s, 26344 KB] g=58, 423 evaluated, 422 expanded
[t=0.0262856s, 26344 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0262995s, 26344 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0263079s, 26344 KB] g=62, 439 evaluated, 438 expanded
[t=0.0263973s, 26344 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0264065s, 26344 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0264148s, 26344 KB] g=64, 443 evaluated, 442 expanded
[t=0.0267117s, 26344 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0267232s, 26344 KB] g=70, 456 evaluated, 455 expanded
[t=0.0268106s, 26344 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0268198s, 26344 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0268281s, 26344 KB] g=72, 460 evaluated, 459 expanded
[t=0.0268742s, 26344 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0268831s, 26344 KB] g=72, 462 evaluated, 461 expanded
[t=0.0269464s, 26344 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0269555s, 26344 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0269637s, 26344 KB] g=74, 465 evaluated, 464 expanded
[t=0.027424s, 26344 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0274347s, 26344 KB] g=88, 493 evaluated, 492 expanded
[t=0.0274832s, 26344 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0274971s, 26344 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.027506s, 26344 KB] g=90, 496 evaluated, 495 expanded
[t=0.0275619s, 26344 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0275712s, 26344 KB] g=94, 500 evaluated, 499 expanded
[t=0.0275883s, 26344 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0275972s, 26344 KB] g=95, 501 evaluated, 500 expanded
[t=0.027612s, 26344 KB] Solution found!
[t=0.0276244s, 26344 KB] Actual search time: 0.0135793s
unstack b4 b9 (1)
put-down b4 (1)
unstack b9 b15 (1)
put-down b9 (1)
unstack b12 b6 (1)
put-down b12 (1)
unstack b15 b16 (1)
stack b15 b17 (1)
unstack b16 b18 (1)
put-down b16 (1)
unstack b18 b14 (1)
put-down b18 (1)
unstack b14 b5 (1)
put-down b14 (1)
unstack b5 b20 (1)
put-down b5 (1)
unstack b6 b19 (1)
put-down b6 (1)
unstack b19 b7 (1)
stack b19 b12 (1)
unstack b7 b8 (1)
stack b7 b19 (1)
unstack b8 b1 (1)
stack b8 b7 (1)
unstack b1 b11 (1)
put-down b1 (1)
unstack b11 b3 (1)
put-down b11 (1)
pick-up b5 (1)
stack b5 b8 (1)
pick-up b9 (1)
stack b9 b1 (1)
unstack b3 b10 (1)
put-down b3 (1)
unstack b10 b13 (1)
put-down b10 (1)
pick-up b14 (1)
stack b14 b3 (1)
pick-up b16 (1)
stack b16 b14 (1)
pick-up b18 (1)
stack b18 b20 (1)
pick-up b11 (1)
stack b11 b18 (1)
pick-up b4 (1)
stack b4 b10 (1)
pick-up b6 (1)
stack b6 b13 (1)
unstack b15 b17 (1)
put-down b15 (1)
unstack b17 b2 (1)
put-down b17 (1)
pick-up b2 (1)
stack b2 b4 (1)
pick-up b17 (1)
stack b17 b2 (1)
pick-up b15 (1)
stack b15 b17 (1)
unstack b9 b1 (1)
put-down b9 (1)
pick-up b1 (1)
stack b1 b6 (1)
pick-up b9 (1)
stack b9 b1 (1)
unstack b11 b18 (1)
put-down b11 (1)
unstack b18 b20 (1)
put-down b18 (1)
pick-up b20 (1)
stack b20 b15 (1)
pick-up b18 (1)
stack b18 b20 (1)
pick-up b11 (1)
stack b11 b18 (1)
unstack b5 b8 (1)
put-down b5 (1)
unstack b8 b7 (1)
put-down b8 (1)
pick-up b5 (1)
stack b5 b8 (1)
unstack b7 b19 (1)
put-down b7 (1)
unstack b19 b12 (1)
put-down b19 (1)
pick-up b12 (1)
stack b12 b11 (1)
pick-up b19 (1)
stack b19 b12 (1)
pick-up b7 (1)
stack b7 b19 (1)
unstack b5 b8 (1)
put-down b5 (1)
pick-up b8 (1)
stack b8 b7 (1)
pick-up b5 (1)
stack b5 b8 (1)
[t=0.0276342s, 26344 KB] Plan length: 96 step(s).
[t=0.0276342s, 26344 KB] Plan cost: 96
[t=0.0276342s, 26344 KB] Expanded 501 state(s).
[t=0.0276342s, 26344 KB] Reopened 0 state(s).
[t=0.0276342s, 26344 KB] Evaluated 502 state(s).
[t=0.0276342s, 26344 KB] Evaluations: 1004
[t=0.0276342s, 26344 KB] Generated 4624 state(s).
[t=0.0276342s, 26344 KB] Dead ends: 0 state(s).
[t=0.0276342s, 26344 KB] Number of registered states: 502
[t=0.0276342s, 26344 KB] Int hash set load factor: 502/512 = 0.980469
[t=0.0276342s, 26344 KB] Int hash set resizes: 9
[t=0.0276342s, 26344 KB] Search time: 0.0136322s
[t=0.0276342s, 26344 KB] Total time: 0.0276342s
Solution found.
Peak memory: 26344 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.20s
