INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_31/bws_problem_31_66.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.019s wall-clock]
3102 relevant atoms
2077 auxiliary atoms
5179 final queue length
9090 total queue pushes
Completing instantiation... [0.040s CPU, 0.033s wall-clock]
Instantiating: [0.060s CPU, 0.055s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.003s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.002s wall-clock]
Collecting mutex groups... [0.010s CPU, 0.000s wall-clock]
Choosing groups...
32 uncovered facts
Choosing groups: [0.000s CPU, 0.002s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.010s CPU, 0.011s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.005s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.001s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.002s wall-clock]
Translating task: [0.050s CPU, 0.051s wall-clock]
2852 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
62 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.023s wall-clock]
Reordering and filtering variables...
63 of 63 variables necessary.
32 of 63 mutex groups necessary.
1922 of 1922 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.020s CPU, 0.013s wall-clock]
Translator variables: 63
Translator derived variables: 0
Translator facts: 1056
Translator goal facts: 28
Translator mutex groups: 32
Translator total mutex groups size: 1024
Translator operators: 1922
Translator axioms: 0
Translator task size: 16493
Translator peak memory: 42104 KB
Writing output... [0.020s CPU, 0.010s wall-clock]
Done! [0.180s CPU, 0.173s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.0102e-05s, 24488 KB] reading input...
[t=0.00598755s, 26640 KB] done reading input!
[t=0.00732623s, 26904 KB] Initializing landmark count heuristic...
[t=0.00737538s, 26904 KB] Generating landmark graph...
[t=0.00750016s, 27036 KB] Building a landmark graph with reasonable orders.
[t=0.00759652s, 27168 KB] Initializing Exploration...
[t=0.00813848s, 27612 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0370175s, 28404 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0371438s, 28404 KB] Landmarks generation time: 0.0296525s
[t=0.0371682s, 28404 KB] Discovered 142 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0371857s, 28404 KB] 683 edges
[t=0.0371963s, 28404 KB] approx. reasonable orders
[t=0.0441702s, 28404 KB] approx. obedient reasonable orders
[t=0.0442655s, 28404 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0442787s, 28404 KB] Landmarks generation time: 0.0369009s
[t=0.0442893s, 28404 KB] Discovered 142 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.044298s, 28404 KB] 759 edges
[t=0.0443068s, 28404 KB] Landmark graph generation time: 0.0369385s
[t=0.0443155s, 28404 KB] Landmark graph contains 142 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0443236s, 28404 KB] Landmark graph contains 759 orderings.
[t=0.0449815s, 28436 KB] Simplifying 7626 unary operators... done! [5766 unary operators]
[t=0.0468179s, 28568 KB] time to simplify: 0.00195345s
[t=0.047065s, 28568 KB] Initializing additive heuristic...
[t=0.0470868s, 28568 KB] Initializing FF heuristic...
[t=0.0471714s, 28568 KB] Building successor generator...done!
[t=0.0475256s, 28568 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0475349s, 28568 KB] time for successor generation creation: 0.000323981s
[t=0.0475493s, 28568 KB] Variables: 63
[t=0.0475695s, 28568 KB] FactPairs: 1056
[t=0.0475776s, 28568 KB] Bytes per state: 24
[t=0.0477062s, 28568 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0477421s, 28568 KB] 62 initial landmarks, 28 goal landmarks
[t=0.0478731s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 80
[t=0.0478831s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 57
[t=0.047892s, 28568 KB] g=0, 1 evaluated, 0 expanded
[t=0.0479251s, 28568 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 80
[t=0.0479341s, 28568 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 57
[t=0.0482556s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 79
[t=0.0482673s, 28568 KB] g=2, 7 evaluated, 6 expanded
[t=0.048379s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 56
[t=0.0483908s, 28568 KB] g=2, 9 evaluated, 8 expanded
[t=0.0488436s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 78
[t=0.048853s, 28568 KB] g=4, 18 evaluated, 17 expanded
[t=0.0496746s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 77
[t=0.049688s, 28568 KB] g=6, 34 evaluated, 33 expanded
[t=0.0504259s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 76
[t=0.0504402s, 28568 KB] g=8, 49 evaluated, 48 expanded
[t=0.0512846s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 75
[t=0.0512993s, 28568 KB] g=10, 66 evaluated, 65 expanded
[t=0.0522056s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 74
[t=0.0522204s, 28568 KB] g=12, 84 evaluated, 83 expanded
[t=0.0528256s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 55
[t=0.0528352s, 28568 KB] g=6, 96 evaluated, 95 expanded
[t=0.0531396s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 73
[t=0.0531491s, 28568 KB] g=14, 102 evaluated, 101 expanded
[t=0.0537576s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 72
[t=0.0537695s, 28568 KB] g=15, 114 evaluated, 113 expanded
[t=0.0550488s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 71
[t=0.0550678s, 28568 KB] g=18, 140 evaluated, 139 expanded
[t=0.0559695s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 54
[t=0.0559829s, 28568 KB] g=10, 158 evaluated, 157 expanded
[t=0.0564376s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 70
[t=0.0564484s, 28568 KB] g=20, 167 evaluated, 166 expanded
[t=0.0579724s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 69
[t=0.0579877s, 28568 KB] g=22, 197 evaluated, 196 expanded
[t=0.0594813s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 67
[t=0.0594961s, 28568 KB] g=24, 227 evaluated, 226 expanded
[t=0.0596624s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 53
[t=0.0596725s, 28568 KB] g=14, 230 evaluated, 229 expanded
[t=0.0604757s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 52
[t=0.0604906s, 28568 KB] g=16, 246 evaluated, 245 expanded
[t=0.0611204s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 64
[t=0.0611321s, 28568 KB] g=26, 258 evaluated, 257 expanded
[t=0.0623818s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 51
[t=0.062394s, 28568 KB] g=20, 283 evaluated, 282 expanded
[t=0.0626012s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 63
[t=0.0626107s, 28568 KB] g=28, 287 evaluated, 286 expanded
[t=0.0634419s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 50
[t=0.0634522s, 28568 KB] g=22, 304 evaluated, 303 expanded
[t=0.0641925s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 60
[t=0.0642039s, 28568 KB] g=30, 319 evaluated, 318 expanded
[t=0.0643169s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 48
[t=0.0643267s, 28568 KB] g=24, 321 evaluated, 320 expanded
[t=0.0656936s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.0657173s, 28568 KB] g=32, 349 evaluated, 348 expanded
[t=0.0675412s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 58
[t=0.0675568s, 28568 KB] g=34, 386 evaluated, 385 expanded
[t=0.069363s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0693823s, 28568 KB] g=36, 423 evaluated, 422 expanded
[t=0.07086s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0708889s, 28568 KB] g=38, 452 evaluated, 451 expanded
[t=0.0724607s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 47
[t=0.0724737s, 28568 KB] g=32, 484 evaluated, 483 expanded
[t=0.0733629s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0733873s, 28568 KB] g=40, 502 evaluated, 501 expanded
[t=0.0751133s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0751284s, 28568 KB] g=42, 537 evaluated, 536 expanded
[t=0.0775716s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0775918s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 46
[t=0.0776019s, 28568 KB] g=44, 587 evaluated, 586 expanded
[t=0.0783307s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0783446s, 28568 KB] g=46, 602 evaluated, 601 expanded
[t=0.079047s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0790616s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.0790709s, 28568 KB] g=46, 617 evaluated, 616 expanded
[t=0.0797182s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0797372s, 28568 KB] g=48, 631 evaluated, 630 expanded
[t=0.080479s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0804917s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0805005s, 28568 KB] g=48, 646 evaluated, 645 expanded
[t=0.0811483s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0811652s, 28568 KB] g=50, 659 evaluated, 658 expanded
[t=0.0815342s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0815463s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0815551s, 28568 KB] g=50, 666 evaluated, 665 expanded
[t=0.0821323s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0821429s, 28568 KB] g=52, 678 evaluated, 677 expanded
[t=0.0827062s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.082717s, 28568 KB] g=54, 690 evaluated, 689 expanded
[t=0.0851133s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0851253s, 28568 KB] g=56, 743 evaluated, 742 expanded
[t=0.0861247s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0861389s, 28568 KB] g=56, 764 evaluated, 763 expanded
[t=0.086392s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0864022s, 28568 KB] g=57, 769 evaluated, 768 expanded
[t=0.086511s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0865206s, 28568 KB] g=58, 771 evaluated, 770 expanded
[t=0.0877899s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0878002s, 28568 KB] g=60, 799 evaluated, 798 expanded
[t=0.0889s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0889109s, 28568 KB] g=62, 824 evaluated, 823 expanded
[t=0.0898366s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0898636s, 28568 KB] g=62, 844 evaluated, 843 expanded
[t=0.0901858s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0901965s, 28568 KB] g=64, 851 evaluated, 850 expanded
[t=0.0914121s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0914263s, 28568 KB] g=66, 879 evaluated, 878 expanded
[t=0.092903s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0929268s, 28568 KB] g=68, 911 evaluated, 910 expanded
[t=0.0938981s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0939113s, 28568 KB] g=70, 934 evaluated, 933 expanded
[t=0.0950457s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0950564s, 28568 KB] g=70, 960 evaluated, 959 expanded
[t=0.0957744s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.095798s, 28568 KB] g=72, 977 evaluated, 976 expanded
[t=0.0966608s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0966722s, 28568 KB] g=72, 996 evaluated, 995 expanded
[t=0.0977074s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0977404s, 28568 KB] g=74, 1018 evaluated, 1017 expanded
[t=0.0980953s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0981088s, 28568 KB] g=74, 1025 evaluated, 1024 expanded
[t=0.0990282s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0990425s, 28568 KB] g=76, 1045 evaluated, 1044 expanded
[t=0.0993727s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.099385s, 28568 KB] g=76, 1052 evaluated, 1051 expanded
[t=0.0997546s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0997656s, 28568 KB] g=78, 1060 evaluated, 1059 expanded
[t=0.100451s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.100467s, 28568 KB] g=78, 1075 evaluated, 1074 expanded
[t=0.10057s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.100581s, 28568 KB] g=80, 1077 evaluated, 1076 expanded
[t=0.101395s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.101412s, 28568 KB] g=82, 1094 evaluated, 1093 expanded
[t=0.10187s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.101893s, 28568 KB] g=80, 1103 evaluated, 1102 expanded
[t=0.102045s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.102058s, 28568 KB] g=84, 1106 evaluated, 1105 expanded
[t=0.102933s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.102945s, 28568 KB] g=82, 1125 evaluated, 1124 expanded
[t=0.103633s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.103646s, 28568 KB] g=84, 1140 evaluated, 1139 expanded
[t=0.104107s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.104117s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.104127s, 28568 KB] g=86, 1150 evaluated, 1149 expanded
[t=0.104361s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.10437s, 28568 KB] g=88, 1155 evaluated, 1154 expanded
[t=0.114984s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.11502s, 28568 KB] g=106, 1385 evaluated, 1384 expanded
[t=0.140896s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.140973s, 28568 KB] g=122, 1930 evaluated, 1929 expanded
[t=0.144685s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.14471s, 28568 KB] g=130, 2007 evaluated, 2006 expanded
[t=0.145537s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.145554s, 28568 KB] g=134, 2024 evaluated, 2023 expanded
[t=0.145752s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.145762s, 28568 KB] g=136, 2028 evaluated, 2027 expanded
[t=0.150635s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.150665s, 28568 KB] g=156, 2135 evaluated, 2134 expanded
[t=0.198339s, 28832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.198527s, 28832 KB] g=190, 3235 evaluated, 3234 expanded
[t=0.198908s, 28832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.198925s, 28832 KB] g=192, 3244 evaluated, 3243 expanded
[t=0.199211s, 28832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.199226s, 28832 KB] g=194, 3251 evaluated, 3250 expanded
[t=0.200196s, 28832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.200208s, 28832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.200216s, 28832 KB] g=200, 3275 evaluated, 3274 expanded
[t=0.200854s, 28832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.200868s, 28832 KB] g=204, 3291 evaluated, 3290 expanded
[t=0.201034s, 28832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.201044s, 28832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.201052s, 28832 KB] g=206, 3295 evaluated, 3294 expanded
[t=0.202857s, 28832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.202872s, 28832 KB] g=218, 3342 evaluated, 3341 expanded
[t=0.203188s, 28832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.2032s, 28832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.203209s, 28832 KB] g=224, 3349 evaluated, 3348 expanded
[t=0.21979s, 28964 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.219863s, 28964 KB] g=262, 3815 evaluated, 3814 expanded
[t=0.220816s, 28964 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.22083s, 28964 KB] g=270, 3842 evaluated, 3841 expanded
[t=0.221151s, 28964 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.221168s, 28964 KB] g=274, 3851 evaluated, 3850 expanded
[t=0.221282s, 28964 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.221308s, 28964 KB] g=276, 3854 evaluated, 3853 expanded
[t=0.223497s, 28964 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.223524s, 28964 KB] g=298, 3925 evaluated, 3924 expanded
[t=0.223602s, 28964 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.223611s, 28964 KB] g=300, 3928 evaluated, 3927 expanded
[t=0.22382s, 28964 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.22383s, 28964 KB] g=308, 3938 evaluated, 3937 expanded
[t=0.223914s, 28964 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.223924s, 28964 KB] g=312, 3942 evaluated, 3941 expanded
[t=0.223945s, 28964 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.223954s, 28964 KB] g=313, 3943 evaluated, 3942 expanded
[t=0.223971s, 28964 KB] Solution found!
[t=0.223998s, 28964 KB] Actual search time: 0.176254s
unstack b23 b17 (1)
put-down b23 (1)
unstack b17 b30 (1)
put-down b17 (1)
unstack b26 b12 (1)
put-down b26 (1)
unstack b12 b31 (1)
put-down b12 (1)
unstack b4 b1 (1)
put-down b4 (1)
unstack b1 b9 (1)
put-down b1 (1)
unstack b5 b24 (1)
put-down b5 (1)
unstack b24 b16 (1)
put-down b24 (1)
unstack b16 b13 (1)
put-down b16 (1)
unstack b8 b21 (1)
put-down b8 (1)
unstack b21 b15 (1)
put-down b21 (1)
unstack b15 b11 (1)
stack b15 b30 (1)
unstack b11 b2 (1)
stack b11 b15 (1)
unstack b2 b7 (1)
put-down b2 (1)
unstack b7 b22 (1)
stack b7 b21 (1)
unstack b22 b3 (1)
put-down b22 (1)
unstack b3 b20 (1)
put-down b3 (1)
unstack b9 b28 (1)
stack b9 b31 (1)
pick-up b1 (1)
stack b1 b11 (1)
pick-up b4 (1)
stack b4 b28 (1)
pick-up b13 (1)
stack b13 b4 (1)
pick-up b5 (1)
stack b5 b13 (1)
pick-up b26 (1)
stack b26 b5 (1)
pick-up b3 (1)
stack b3 b26 (1)
pick-up b17 (1)
stack b17 b3 (1)
unstack b9 b31 (1)
put-down b9 (1)
unstack b31 b10 (1)
put-down b31 (1)
unstack b10 b19 (1)
put-down b10 (1)
unstack b19 b27 (1)
stack b19 b17 (1)
unstack b27 b6 (1)
put-down b27 (1)
unstack b6 b18 (1)
stack b6 b9 (1)
unstack b18 b25 (1)
put-down b18 (1)
unstack b25 b29 (1)
stack b25 b7 (1)
pick-up b24 (1)
stack b24 b25 (1)
pick-up b29 (1)
stack b29 b1 (1)
pick-up b2 (1)
stack b2 b29 (1)
pick-up b16 (1)
stack b16 b2 (1)
pick-up b22 (1)
stack b22 b16 (1)
pick-up b12 (1)
stack b12 b22 (1)
pick-up b31 (1)
stack b31 b10 (1)
pick-up b8 (1)
stack b8 b6 (1)
pick-up b18 (1)
stack b18 b8 (1)
pick-up b20 (1)
stack b20 b18 (1)
unstack b24 b25 (1)
put-down b24 (1)
unstack b25 b7 (1)
put-down b25 (1)
pick-up b24 (1)
stack b24 b25 (1)
pick-up b23 (1)
stack b23 b27 (1)
unstack b7 b21 (1)
put-down b7 (1)
pick-up b21 (1)
stack b21 b23 (1)
pick-up b7 (1)
stack b7 b21 (1)
unstack b24 b25 (1)
put-down b24 (1)
pick-up b25 (1)
stack b25 b7 (1)
pick-up b24 (1)
stack b24 b25 (1)
unstack b20 b18 (1)
put-down b20 (1)
unstack b18 b8 (1)
put-down b18 (1)
unstack b8 b6 (1)
put-down b8 (1)
pick-up b18 (1)
stack b18 b8 (1)
pick-up b20 (1)
stack b20 b18 (1)
unstack b6 b9 (1)
put-down b6 (1)
pick-up b9 (1)
stack b9 b31 (1)
pick-up b6 (1)
stack b6 b9 (1)
unstack b20 b18 (1)
put-down b20 (1)
unstack b18 b8 (1)
put-down b18 (1)
pick-up b20 (1)
stack b20 b18 (1)
pick-up b8 (1)
stack b8 b6 (1)
unstack b20 b18 (1)
put-down b20 (1)
pick-up b18 (1)
stack b18 b8 (1)
pick-up b20 (1)
stack b20 b18 (1)
unstack b12 b22 (1)
put-down b12 (1)
unstack b22 b16 (1)
put-down b22 (1)
pick-up b12 (1)
stack b12 b22 (1)
unstack b16 b2 (1)
put-down b16 (1)
unstack b2 b29 (1)
put-down b2 (1)
pick-up b16 (1)
stack b16 b2 (1)
unstack b12 b22 (1)
put-down b12 (1)
pick-up b22 (1)
stack b22 b16 (1)
pick-up b12 (1)
stack b12 b22 (1)
unstack b24 b25 (1)
put-down b24 (1)
unstack b25 b7 (1)
put-down b25 (1)
pick-up b24 (1)
stack b24 b25 (1)
unstack b7 b21 (1)
put-down b7 (1)
unstack b21 b23 (1)
put-down b21 (1)
unstack b23 b27 (1)
put-down b23 (1)
pick-up b7 (1)
stack b7 b21 (1)
unstack b24 b25 (1)
put-down b24 (1)
pick-up b25 (1)
stack b25 b7 (1)
pick-up b24 (1)
stack b24 b25 (1)
unstack b29 b1 (1)
put-down b29 (1)
unstack b1 b11 (1)
put-down b1 (1)
pick-up b29 (1)
stack b29 b1 (1)
unstack b11 b15 (1)
put-down b11 (1)
unstack b15 b30 (1)
put-down b15 (1)
unstack b30 b14 (1)
put-down b30 (1)
pick-up b14 (1)
stack b14 b12 (1)
pick-up b11 (1)
stack b11 b15 (1)
pick-up b27 (1)
stack b27 b14 (1)
pick-up b23 (1)
stack b23 b27 (1)
unstack b11 b15 (1)
put-down b11 (1)
pick-up b15 (1)
stack b15 b30 (1)
pick-up b11 (1)
stack b11 b15 (1)
unstack b29 b1 (1)
put-down b29 (1)
pick-up b1 (1)
stack b1 b11 (1)
pick-up b29 (1)
stack b29 b1 (1)
unstack b24 b25 (1)
put-down b24 (1)
unstack b25 b7 (1)
put-down b25 (1)
pick-up b24 (1)
stack b24 b25 (1)
unstack b7 b21 (1)
put-down b7 (1)
pick-up b21 (1)
stack b21 b23 (1)
unstack b24 b25 (1)
put-down b24 (1)
pick-up b25 (1)
stack b25 b7 (1)
pick-up b24 (1)
stack b24 b25 (1)
unstack b21 b23 (1)
put-down b21 (1)
unstack b23 b27 (1)
put-down b23 (1)
unstack b27 b14 (1)
put-down b27 (1)
pick-up b23 (1)
stack b23 b27 (1)
pick-up b21 (1)
stack b21 b23 (1)
unstack b24 b25 (1)
put-down b24 (1)
unstack b25 b7 (1)
put-down b25 (1)
pick-up b24 (1)
stack b24 b25 (1)
pick-up b7 (1)
stack b7 b21 (1)
unstack b24 b25 (1)
put-down b24 (1)
pick-up b25 (1)
stack b25 b7 (1)
pick-up b24 (1)
stack b24 b25 (1)
unstack b14 b12 (1)
put-down b14 (1)
unstack b12 b22 (1)
put-down b12 (1)
unstack b22 b16 (1)
put-down b22 (1)
pick-up b12 (1)
stack b12 b22 (1)
pick-up b14 (1)
stack b14 b12 (1)
unstack b16 b2 (1)
put-down b16 (1)
pick-up b2 (1)
stack b2 b29 (1)
pick-up b16 (1)
stack b16 b2 (1)
unstack b14 b12 (1)
put-down b14 (1)
unstack b12 b22 (1)
put-down b12 (1)
pick-up b14 (1)
stack b14 b12 (1)
pick-up b22 (1)
stack b22 b16 (1)
unstack b14 b12 (1)
put-down b14 (1)
pick-up b12 (1)
stack b12 b22 (1)
pick-up b14 (1)
stack b14 b12 (1)
unstack b24 b25 (1)
put-down b24 (1)
unstack b25 b7 (1)
put-down b25 (1)
unstack b7 b21 (1)
put-down b7 (1)
pick-up b25 (1)
stack b25 b7 (1)
pick-up b24 (1)
stack b24 b25 (1)
unstack b21 b23 (1)
put-down b21 (1)
unstack b23 b27 (1)
put-down b23 (1)
pick-up b21 (1)
stack b21 b23 (1)
pick-up b27 (1)
stack b27 b14 (1)
unstack b21 b23 (1)
put-down b21 (1)
pick-up b23 (1)
stack b23 b27 (1)
pick-up b21 (1)
stack b21 b23 (1)
unstack b24 b25 (1)
put-down b24 (1)
unstack b25 b7 (1)
put-down b25 (1)
pick-up b24 (1)
stack b24 b25 (1)
pick-up b7 (1)
stack b7 b21 (1)
unstack b24 b25 (1)
put-down b24 (1)
pick-up b25 (1)
stack b25 b7 (1)
pick-up b24 (1)
stack b24 b25 (1)
[t=0.224008s, 28964 KB] Plan length: 314 step(s).
[t=0.224008s, 28964 KB] Plan cost: 314
[t=0.224008s, 28964 KB] Expanded 3943 state(s).
[t=0.224008s, 28964 KB] Reopened 0 state(s).
[t=0.224008s, 28964 KB] Evaluated 3944 state(s).
[t=0.224008s, 28964 KB] Evaluations: 7888
[t=0.224008s, 28964 KB] Generated 37525 state(s).
[t=0.224008s, 28964 KB] Dead ends: 0 state(s).
[t=0.224008s, 28964 KB] Number of registered states: 3944
[t=0.224008s, 28964 KB] Int hash set load factor: 3944/8192 = 0.481445
[t=0.224008s, 28964 KB] Int hash set resizes: 13
[t=0.224008s, 28964 KB] Search time: 0.176302s
[t=0.224008s, 28964 KB] Total time: 0.224008s
Solution found.
Peak memory: 28964 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.45s
