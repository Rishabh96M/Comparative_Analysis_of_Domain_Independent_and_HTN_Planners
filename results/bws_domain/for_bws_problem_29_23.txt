INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_29/bws_problem_29_23.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.016s wall-clock]
2728 relevant atoms
1827 auxiliary atoms
4555 final queue length
7984 total queue pushes
Completing instantiation... [0.020s CPU, 0.029s wall-clock]
Instantiating: [0.050s CPU, 0.047s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
30 uncovered facts
Choosing groups: [0.000s CPU, 0.002s wall-clock]
Building translation key... [0.010s CPU, 0.001s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.001s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.002s wall-clock]
Translating task: [0.050s CPU, 0.049s wall-clock]
2494 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
58 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.021s wall-clock]
Reordering and filtering variables...
59 of 59 variables necessary.
30 of 59 mutex groups necessary.
1682 of 1682 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.011s wall-clock]
Translator variables: 59
Translator derived variables: 0
Translator facts: 930
Translator goal facts: 26
Translator mutex groups: 30
Translator total mutex groups size: 900
Translator operators: 1682
Translator axioms: 0
Translator task size: 14443
Translator peak memory: 40824 KB
Writing output... [0.010s CPU, 0.009s wall-clock]
Done! [0.150s CPU, 0.153s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=3.8302e-05s, 24488 KB] reading input...
[t=0.0055167s, 26220 KB] done reading input!
[t=0.00652229s, 26616 KB] Initializing landmark count heuristic...
[t=0.00656582s, 26616 KB] Generating landmark graph...
[t=0.00666295s, 26748 KB] Building a landmark graph with reasonable orders.
[t=0.00675414s, 26748 KB] Initializing Exploration...
[t=0.00729046s, 27200 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0302382s, 27860 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0304166s, 27860 KB] Landmarks generation time: 0.0237677s
[t=0.0304467s, 27860 KB] Discovered 127 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0304715s, 27860 KB] 480 edges
[t=0.0304827s, 27860 KB] approx. reasonable orders
[t=0.0337613s, 27860 KB] approx. obedient reasonable orders
[t=0.0338284s, 27860 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0338402s, 27860 KB] Landmarks generation time: 0.0272718s
[t=0.0338517s, 27860 KB] Discovered 127 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0338611s, 27860 KB] 515 edges
[t=0.0338706s, 27860 KB] Landmark graph generation time: 0.0273123s
[t=0.0338799s, 27860 KB] Landmark graph contains 127 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0338883s, 27860 KB] Landmark graph contains 515 orderings.
[t=0.034615s, 27884 KB] Simplifying 6670 unary operators... done! [5046 unary operators]
[t=0.0362428s, 28016 KB] time to simplify: 0.00172986s
[t=0.0364425s, 28016 KB] Initializing additive heuristic...
[t=0.0364607s, 28016 KB] Initializing FF heuristic...
[t=0.0365179s, 28016 KB] Building successor generator...done!
[t=0.0370065s, 28016 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0370222s, 28016 KB] time for successor generation creation: 0.000439565s
[t=0.0370544s, 28016 KB] Variables: 59
[t=0.0370691s, 28016 KB] FactPairs: 930
[t=0.0370815s, 28016 KB] Bytes per state: 24
[t=0.0373637s, 28016 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0374131s, 28016 KB] 56 initial landmarks, 26 goal landmarks
[t=0.0375237s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 71
[t=0.0375407s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 51
[t=0.0375559s, 28016 KB] g=0, 1 evaluated, 0 expanded
[t=0.0375838s, 28016 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 71
[t=0.0375975s, 28016 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 51
[t=0.0379821s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 70
[t=0.0380028s, 28016 KB] g=1, 8 evaluated, 7 expanded
[t=0.0380711s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 69
[t=0.0380856s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 50
[t=0.0380986s, 28016 KB] g=2, 9 evaluated, 8 expanded
[t=0.0385828s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 68
[t=0.0386084s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 49
[t=0.0386479s, 28016 KB] g=4, 16 evaluated, 15 expanded
[t=0.0392013s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 67
[t=0.0392209s, 28016 KB] g=6, 24 evaluated, 23 expanded
[t=0.0392788s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 48
[t=0.0392883s, 28016 KB] g=6, 25 evaluated, 24 expanded
[t=0.0399528s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 66
[t=0.0399627s, 28016 KB] g=8, 41 evaluated, 40 expanded
[t=0.0406274s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 65
[t=0.0406397s, 28016 KB] g=10, 57 evaluated, 56 expanded
[t=0.0414684s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 64
[t=0.0414851s, 28016 KB] g=12, 77 evaluated, 76 expanded
[t=0.0423822s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 63
[t=0.0423943s, 28016 KB] g=14, 99 evaluated, 98 expanded
[t=0.0428135s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 47
[t=0.0428458s, 28016 KB] g=10, 109 evaluated, 108 expanded
[t=0.04336s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 62
[t=0.0433798s, 28016 KB] g=16, 121 evaluated, 120 expanded
[t=0.0438538s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 46
[t=0.0438775s, 28016 KB] g=12, 130 evaluated, 129 expanded
[t=0.044548s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 61
[t=0.04456s, 28016 KB] g=14, 146 evaluated, 145 expanded
[t=0.0447359s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 60
[t=0.0447464s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0447554s, 28016 KB] g=14, 150 evaluated, 149 expanded
[t=0.0450424s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.0450529s, 28016 KB] g=16, 157 evaluated, 156 expanded
[t=0.0452119s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 58
[t=0.0452233s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.0452322s, 28016 KB] g=16, 160 evaluated, 159 expanded
[t=0.0454912s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 57
[t=0.045501s, 28016 KB] g=18, 166 evaluated, 165 expanded
[t=0.0457906s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.045801s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0458109s, 28016 KB] g=20, 173 evaluated, 172 expanded
[t=0.0461013s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0461122s, 28016 KB] g=22, 180 evaluated, 179 expanded
[t=0.0464446s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0464547s, 28016 KB] g=24, 188 evaluated, 187 expanded
[t=0.0468226s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.046832s, 28016 KB] g=26, 197 evaluated, 196 expanded
[t=0.0469245s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0469339s, 28016 KB] g=27, 199 evaluated, 198 expanded
[t=0.0469869s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.046996s, 28016 KB] g=28, 200 evaluated, 199 expanded
[t=0.0471698s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0471791s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0471874s, 28016 KB] g=30, 204 evaluated, 203 expanded
[t=0.0472795s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0472886s, 28016 KB] g=31, 206 evaluated, 205 expanded
[t=0.0478485s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0478585s, 28016 KB] g=32, 220 evaluated, 219 expanded
[t=0.0487722s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.048789s, 28016 KB] g=35, 241 evaluated, 240 expanded
[t=0.048844s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0488586s, 28016 KB] g=36, 242 evaluated, 241 expanded
[t=0.0502508s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0502638s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0502726s, 28016 KB] g=38, 276 evaluated, 275 expanded
[t=0.0507508s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0507627s, 28016 KB] g=40, 288 evaluated, 287 expanded
[t=0.0512438s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0512541s, 28016 KB] g=40, 300 evaluated, 299 expanded
[t=0.0519999s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0520111s, 28016 KB] g=42, 319 evaluated, 318 expanded
[t=0.0521838s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0521937s, 28016 KB] g=42, 323 evaluated, 322 expanded
[t=0.0528607s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0528731s, 28016 KB] g=44, 340 evaluated, 339 expanded
[t=0.0592337s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0593198s, 28016 KB] g=52, 496 evaluated, 495 expanded
[t=0.0600975s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.060112s, 28016 KB] g=50, 513 evaluated, 512 expanded
[t=0.0602904s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0603016s, 28016 KB] g=54, 517 evaluated, 516 expanded
[t=0.0610211s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0610342s, 28016 KB] g=56, 534 evaluated, 533 expanded
[t=0.0620362s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0620536s, 28016 KB] g=58, 558 evaluated, 557 expanded
[t=0.0630557s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0630724s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0630811s, 28016 KB] g=60, 582 evaluated, 581 expanded
[t=0.063616s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0636327s, 28016 KB] g=62, 593 evaluated, 592 expanded
[t=0.0637698s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.06378s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0637888s, 28016 KB] g=62, 596 evaluated, 595 expanded
[t=0.0642064s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0642181s, 28016 KB] g=64, 606 evaluated, 605 expanded
[t=0.0643528s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0643654s, 28016 KB] g=64, 609 evaluated, 608 expanded
[t=0.0648902s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0649098s, 28016 KB] g=66, 622 evaluated, 621 expanded
[t=0.0650445s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.065056s, 28016 KB] g=66, 625 evaluated, 624 expanded
[t=0.0654798s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0654934s, 28016 KB] g=68, 635 evaluated, 634 expanded
[t=0.0656249s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0656366s, 28016 KB] g=68, 638 evaluated, 637 expanded
[t=0.0659773s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0659904s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0659993s, 28016 KB] g=70, 646 evaluated, 645 expanded
[t=0.0695704s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0695861s, 28016 KB] g=80, 735 evaluated, 734 expanded
[t=0.0698709s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.069883s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0698922s, 28016 KB] g=82, 742 evaluated, 741 expanded
[t=0.0702079s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0702183s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0702268s, 28016 KB] g=84, 750 evaluated, 749 expanded
[t=0.0704998s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0705103s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0705191s, 28016 KB] g=86, 757 evaluated, 756 expanded
[t=0.0707554s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0707649s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0707742s, 28016 KB] g=88, 763 evaluated, 762 expanded
[t=0.0716391s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0716492s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0716581s, 28016 KB] g=94, 786 evaluated, 785 expanded
[t=0.0748518s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0748683s, 28016 KB] g=106, 870 evaluated, 869 expanded
[t=0.0751811s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0751941s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0752045s, 28016 KB] g=108, 878 evaluated, 877 expanded
[t=0.0754052s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0754163s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0754248s, 28016 KB] g=110, 883 evaluated, 882 expanded
[t=0.076015s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0760269s, 28016 KB] g=114, 899 evaluated, 898 expanded
[t=0.0761806s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0761921s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.076201s, 28016 KB] g=116, 903 evaluated, 902 expanded
[t=0.0791604s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0792219s, 28016 KB] g=128, 957 evaluated, 956 expanded
[t=0.0796911s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.079742s, 28016 KB] g=132, 966 evaluated, 965 expanded
[t=0.0799035s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0799205s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.079933s, 28016 KB] g=134, 969 evaluated, 968 expanded
[t=0.0842887s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0843299s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0843405s, 28016 KB] g=168, 1108 evaluated, 1107 expanded
[t=0.0845655s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0845758s, 28016 KB] g=172, 1117 evaluated, 1116 expanded
[t=0.084655s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0846653s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0846747s, 28016 KB] g=174, 1120 evaluated, 1119 expanded
[t=0.0850021s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0850123s, 28016 KB] g=186, 1136 evaluated, 1135 expanded
[t=0.0850952s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0851059s, 28016 KB] g=190, 1140 evaluated, 1139 expanded
[t=0.0851261s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0851382s, 28016 KB] g=191, 1141 evaluated, 1140 expanded
[t=0.0851556s, 28016 KB] Solution found!
[t=0.08517s, 28016 KB] Actual search time: 0.0477533s
unstack b5 b8 (1)
stack b5 b2 (1)
unstack b12 b23 (1)
put-down b12 (1)
unstack b10 b29 (1)
put-down b10 (1)
unstack b15 b3 (1)
stack b15 b10 (1)
unstack b29 b4 (1)
stack b29 b27 (1)
unstack b4 b7 (1)
stack b4 b15 (1)
unstack b7 b21 (1)
stack b7 b22 (1)
pick-up b8 (1)
stack b8 b7 (1)
unstack b3 b20 (1)
put-down b3 (1)
unstack b20 b24 (1)
stack b20 b29 (1)
unstack b24 b13 (1)
put-down b24 (1)
unstack b13 b6 (1)
put-down b13 (1)
unstack b6 b19 (1)
put-down b6 (1)
unstack b19 b1 (1)
stack b19 b3 (1)
unstack b1 b9 (1)
stack b1 b8 (1)
unstack b19 b3 (1)
put-down b19 (1)
unstack b5 b2 (1)
put-down b5 (1)
unstack b2 b16 (1)
stack b2 b12 (1)
pick-up b5 (1)
stack b5 b2 (1)
pick-up b9 (1)
stack b9 b16 (1)
pick-up b13 (1)
stack b13 b9 (1)
pick-up b19 (1)
stack b19 b3 (1)
unstack b20 b29 (1)
put-down b20 (1)
unstack b19 b3 (1)
put-down b19 (1)
unstack b29 b27 (1)
put-down b29 (1)
unstack b27 b18 (1)
stack b27 b4 (1)
unstack b18 b14 (1)
stack b18 b20 (1)
unstack b14 b25 (1)
put-down b14 (1)
unstack b25 b17 (1)
stack b25 b13 (1)
pick-up b14 (1)
stack b14 b17 (1)
pick-up b23 (1)
stack b23 b14 (1)
pick-up b24 (1)
stack b24 b25 (1)
pick-up b29 (1)
stack b29 b27 (1)
pick-up b3 (1)
stack b3 b18 (1)
pick-up b19 (1)
stack b19 b3 (1)
unstack b1 b8 (1)
put-down b1 (1)
unstack b8 b7 (1)
put-down b8 (1)
pick-up b1 (1)
stack b1 b8 (1)
unstack b7 b22 (1)
put-down b7 (1)
unstack b22 b28 (1)
stack b22 b24 (1)
unstack b28 b11 (1)
stack b28 b21 (1)
pick-up b11 (1)
stack b11 b28 (1)
pick-up b6 (1)
stack b6 b11 (1)
pick-up b7 (1)
stack b7 b22 (1)
unstack b1 b8 (1)
put-down b1 (1)
pick-up b8 (1)
stack b8 b7 (1)
pick-up b1 (1)
stack b1 b8 (1)
unstack b29 b27 (1)
put-down b29 (1)
unstack b27 b4 (1)
put-down b27 (1)
pick-up b29 (1)
stack b29 b27 (1)
unstack b4 b15 (1)
put-down b4 (1)
unstack b15 b10 (1)
put-down b15 (1)
pick-up b10 (1)
stack b10 b6 (1)
pick-up b15 (1)
stack b15 b10 (1)
pick-up b4 (1)
stack b4 b15 (1)
unstack b29 b27 (1)
put-down b29 (1)
pick-up b27 (1)
stack b27 b4 (1)
pick-up b29 (1)
stack b29 b27 (1)
unstack b19 b3 (1)
put-down b19 (1)
unstack b3 b18 (1)
put-down b3 (1)
pick-up b19 (1)
stack b19 b3 (1)
unstack b18 b20 (1)
put-down b18 (1)
pick-up b20 (1)
stack b20 b29 (1)
pick-up b18 (1)
stack b18 b20 (1)
unstack b19 b3 (1)
put-down b19 (1)
pick-up b3 (1)
stack b3 b18 (1)
pick-up b19 (1)
stack b19 b3 (1)
unstack b1 b8 (1)
put-down b1 (1)
unstack b8 b7 (1)
put-down b8 (1)
pick-up b1 (1)
stack b1 b8 (1)
unstack b7 b22 (1)
put-down b7 (1)
unstack b22 b24 (1)
put-down b22 (1)
pick-up b7 (1)
stack b7 b22 (1)
unstack b1 b8 (1)
put-down b1 (1)
pick-up b8 (1)
stack b8 b7 (1)
pick-up b1 (1)
stack b1 b8 (1)
unstack b24 b25 (1)
put-down b24 (1)
unstack b25 b13 (1)
put-down b25 (1)
pick-up b24 (1)
stack b24 b25 (1)
unstack b13 b9 (1)
put-down b13 (1)
unstack b9 b16 (1)
put-down b9 (1)
pick-up b16 (1)
stack b16 b23 (1)
pick-up b9 (1)
stack b9 b16 (1)
pick-up b13 (1)
stack b13 b9 (1)
unstack b24 b25 (1)
put-down b24 (1)
pick-up b25 (1)
stack b25 b13 (1)
pick-up b24 (1)
stack b24 b25 (1)
unstack b1 b8 (1)
put-down b1 (1)
unstack b8 b7 (1)
put-down b8 (1)
pick-up b1 (1)
stack b1 b8 (1)
unstack b7 b22 (1)
put-down b7 (1)
pick-up b22 (1)
stack b22 b24 (1)
pick-up b7 (1)
stack b7 b22 (1)
unstack b1 b8 (1)
put-down b1 (1)
pick-up b8 (1)
stack b8 b7 (1)
pick-up b1 (1)
stack b1 b8 (1)
[t=0.0851802s, 28016 KB] Plan length: 192 step(s).
[t=0.0851802s, 28016 KB] Plan cost: 192
[t=0.0851802s, 28016 KB] Expanded 1141 state(s).
[t=0.0851802s, 28016 KB] Reopened 0 state(s).
[t=0.0851802s, 28016 KB] Evaluated 1142 state(s).
[t=0.0851802s, 28016 KB] Evaluations: 2284
[t=0.0851802s, 28016 KB] Generated 11465 state(s).
[t=0.0851802s, 28016 KB] Dead ends: 0 state(s).
[t=0.0851802s, 28016 KB] Number of registered states: 1142
[t=0.0851802s, 28016 KB] Int hash set load factor: 1142/2048 = 0.557617
[t=0.0851802s, 28016 KB] Int hash set resizes: 11
[t=0.0851802s, 28016 KB] Search time: 0.0478178s
[t=0.0851802s, 28016 KB] Total time: 0.0851802s
Solution found.
Peak memory: 28016 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.29s
