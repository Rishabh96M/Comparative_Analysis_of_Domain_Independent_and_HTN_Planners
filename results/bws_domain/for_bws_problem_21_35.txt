INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_21/bws_problem_21_35.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.010s wall-clock]
1472 relevant atoms
987 auxiliary atoms
2459 final queue length
4268 total queue pushes
Completing instantiation... [0.020s CPU, 0.016s wall-clock]
Instantiating: [0.030s CPU, 0.027s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
22 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.007s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.022s wall-clock]
1302 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
42 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.011s wall-clock]
Reordering and filtering variables...
43 of 43 variables necessary.
22 of 43 mutex groups necessary.
882 of 882 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 43
Translator derived variables: 0
Translator facts: 506
Translator goal facts: 17
Translator mutex groups: 22
Translator total mutex groups size: 484
Translator operators: 882
Translator axioms: 0
Translator task size: 7602
Translator peak memory: 36452 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.090s CPU, 0.084s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=1.637e-05s, 24488 KB] reading input...
[t=0.00236593s, 25268 KB] done reading input!
[t=0.0031652s, 25664 KB] Initializing landmark count heuristic...
[t=0.00319403s, 25664 KB] Generating landmark graph...
[t=0.00326576s, 25664 KB] Building a landmark graph with reasonable orders.
[t=0.00332108s, 25664 KB] Initializing Exploration...
[t=0.00359403s, 25852 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0121335s, 26380 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0121905s, 26380 KB] Landmarks generation time: 0.00892481s
[t=0.0122045s, 26380 KB] Discovered 91 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0122217s, 26380 KB] 358 edges
[t=0.0122318s, 26380 KB] approx. reasonable orders
[t=0.0140354s, 26380 KB] approx. obedient reasonable orders
[t=0.0140994s, 26380 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0141181s, 26380 KB] Landmarks generation time: 0.0109417s
[t=0.0141489s, 26380 KB] Discovered 91 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.014162s, 26380 KB] 383 edges
[t=0.0141757s, 26380 KB] Landmark graph generation time: 0.0109931s
[t=0.0141896s, 26380 KB] Landmark graph contains 91 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0142031s, 26380 KB] Landmark graph contains 383 orderings.
[t=0.0146878s, 26380 KB] Simplifying 3486 unary operators... done! [2646 unary operators]
[t=0.0158661s, 26380 KB] time to simplify: 0.001242s
[t=0.0159865s, 26380 KB] Initializing additive heuristic...
[t=0.0160012s, 26380 KB] Initializing FF heuristic...
[t=0.0160528s, 26380 KB] Building successor generator...done!
[t=0.0162381s, 26380 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0162472s, 26380 KB] time for successor generation creation: 0.000151276s
[t=0.01626s, 26380 KB] Variables: 43
[t=0.0162686s, 26380 KB] FactPairs: 506
[t=0.0162771s, 26380 KB] Bytes per state: 16
[t=0.0163633s, 26380 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0163965s, 26380 KB] 43 initial landmarks, 17 goal landmarks
[t=0.016442s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0164524s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0164613s, 26380 KB] g=0, 1 evaluated, 0 expanded
[t=0.0164743s, 26380 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0164833s, 26380 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0165204s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0165376s, 26380 KB] g=1, 2 evaluated, 1 expanded
[t=0.0166708s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0166802s, 26380 KB] g=3, 7 evaluated, 6 expanded
[t=0.0167263s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0167391s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0167511s, 26380 KB] g=4, 8 evaluated, 7 expanded
[t=0.0169407s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0169624s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0169766s, 26380 KB] g=6, 12 evaluated, 11 expanded
[t=0.0172178s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0172398s, 26380 KB] g=8, 17 evaluated, 16 expanded
[t=0.0173151s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.01733s, 26380 KB] g=8, 19 evaluated, 18 expanded
[t=0.0177238s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0177512s, 26380 KB] g=10, 29 evaluated, 28 expanded
[t=0.0179322s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0179458s, 26380 KB] g=12, 34 evaluated, 33 expanded
[t=0.0182137s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0182315s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0182459s, 26380 KB] g=14, 42 evaluated, 41 expanded
[t=0.0185141s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0185475s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0185617s, 26380 KB] g=16, 48 evaluated, 47 expanded
[t=0.0187243s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0187396s, 26380 KB] g=18, 52 evaluated, 51 expanded
[t=0.0189738s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0189914s, 26380 KB] g=20, 58 evaluated, 57 expanded
[t=0.0192432s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0192624s, 26380 KB] g=22, 64 evaluated, 63 expanded
[t=0.0194369s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0194487s, 26380 KB] g=23, 68 evaluated, 67 expanded
[t=0.0197498s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0197595s, 26380 KB] g=26, 80 evaluated, 79 expanded
[t=0.020047s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0200572s, 26380 KB] g=28, 92 evaluated, 91 expanded
[t=0.0203226s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0203339s, 26380 KB] g=30, 103 evaluated, 102 expanded
[t=0.0206824s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0206935s, 26380 KB] g=30, 117 evaluated, 116 expanded
[t=0.0207505s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0207607s, 26380 KB] g=31, 119 evaluated, 118 expanded
[t=0.020931s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0209411s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0209505s, 26380 KB] g=32, 126 evaluated, 125 expanded
[t=0.0210058s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0210159s, 26380 KB] g=33, 128 evaluated, 127 expanded
[t=0.0214008s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0214185s, 26380 KB] g=36, 144 evaluated, 143 expanded
[t=0.0215733s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0216042s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0216183s, 26380 KB] g=38, 149 evaluated, 148 expanded
[t=0.0219275s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0219444s, 26380 KB] g=41, 161 evaluated, 160 expanded
[t=0.0221663s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0221804s, 26380 KB] g=44, 169 evaluated, 168 expanded
[t=0.0223586s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0223708s, 26380 KB] g=46, 176 evaluated, 175 expanded
[t=0.0225672s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0225799s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0225887s, 26380 KB] g=48, 184 evaluated, 183 expanded
[t=0.0227368s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0227536s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0227626s, 26380 KB] g=48, 190 evaluated, 189 expanded
[t=0.0229561s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0229665s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0229753s, 26380 KB] g=50, 198 evaluated, 197 expanded
[t=0.0231441s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0231542s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0231624s, 26380 KB] g=52, 205 evaluated, 204 expanded
[t=0.0233071s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0233168s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0233252s, 26380 KB] g=54, 211 evaluated, 210 expanded
[t=0.0234469s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0234574s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0234659s, 26380 KB] g=56, 216 evaluated, 215 expanded
[t=0.0238926s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0239067s, 26380 KB] g=62, 234 evaluated, 233 expanded
[t=0.0241227s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0241373s, 26380 KB] g=65, 243 evaluated, 242 expanded
[t=0.0241711s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0241803s, 26380 KB] g=66, 244 evaluated, 243 expanded
[t=0.0243305s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0243436s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0243519s, 26380 KB] g=68, 250 evaluated, 249 expanded
[t=0.0244774s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0244892s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0244976s, 26380 KB] g=70, 255 evaluated, 254 expanded
[t=0.0248872s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0249084s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0249198s, 26380 KB] g=74, 271 evaluated, 270 expanded
[t=0.0250319s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0250543s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0250705s, 26380 KB] g=76, 275 evaluated, 274 expanded
[t=0.025285s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0253047s, 26380 KB] g=80, 284 evaluated, 283 expanded
[t=0.0253751s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.025387s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0253954s, 26380 KB] g=82, 287 evaluated, 286 expanded
[t=0.0263604s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0263789s, 26380 KB] g=100, 340 evaluated, 339 expanded
[t=0.0264365s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0264558s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.026465s, 26380 KB] g=102, 343 evaluated, 342 expanded
[t=0.0266274s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0266387s, 26380 KB] g=110, 354 evaluated, 353 expanded
[t=0.0267078s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0267167s, 26380 KB] g=114, 358 evaluated, 357 expanded
[t=0.0267336s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0267429s, 26380 KB] g=115, 359 evaluated, 358 expanded
[t=0.0267577s, 26380 KB] Solution found!
[t=0.0267704s, 26380 KB] Actual search time: 0.0103707s
unstack b10 b14 (1)
put-down b10 (1)
unstack b6 b17 (1)
stack b6 b14 (1)
unstack b17 b15 (1)
put-down b17 (1)
unstack b15 b13 (1)
stack b15 b7 (1)
unstack b13 b4 (1)
put-down b13 (1)
unstack b4 b18 (1)
put-down b4 (1)
unstack b18 b5 (1)
put-down b18 (1)
pick-up b10 (1)
stack b10 b5 (1)
unstack b15 b7 (1)
put-down b15 (1)
unstack b7 b3 (1)
put-down b7 (1)
unstack b3 b12 (1)
put-down b3 (1)
unstack b12 b20 (1)
put-down b12 (1)
unstack b20 b16 (1)
stack b20 b13 (1)
pick-up b12 (1)
stack b12 b16 (1)
pick-up b7 (1)
stack b7 b20 (1)
pick-up b15 (1)
stack b15 b7 (1)
unstack b12 b16 (1)
put-down b12 (1)
pick-up b16 (1)
stack b16 b15 (1)
pick-up b12 (1)
stack b12 b16 (1)
unstack b6 b14 (1)
put-down b6 (1)
unstack b14 b21 (1)
put-down b14 (1)
unstack b21 b1 (1)
put-down b21 (1)
unstack b1 b9 (1)
put-down b1 (1)
unstack b9 b19 (1)
stack b9 b17 (1)
pick-up b19 (1)
stack b19 b4 (1)
pick-up b21 (1)
stack b21 b9 (1)
pick-up b3 (1)
stack b3 b19 (1)
pick-up b6 (1)
stack b6 b14 (1)
unstack b10 b5 (1)
put-down b10 (1)
unstack b5 b2 (1)
put-down b5 (1)
pick-up b10 (1)
stack b10 b5 (1)
unstack b2 b8 (1)
put-down b2 (1)
unstack b8 b11 (1)
stack b8 b21 (1)
pick-up b11 (1)
stack b11 b1 (1)
pick-up b2 (1)
stack b2 b8 (1)
unstack b6 b14 (1)
put-down b6 (1)
pick-up b14 (1)
stack b14 b11 (1)
pick-up b6 (1)
stack b6 b14 (1)
unstack b10 b5 (1)
put-down b10 (1)
pick-up b5 (1)
stack b5 b2 (1)
pick-up b10 (1)
stack b10 b5 (1)
unstack b12 b16 (1)
put-down b12 (1)
unstack b16 b15 (1)
put-down b16 (1)
unstack b15 b7 (1)
put-down b15 (1)
pick-up b16 (1)
stack b16 b15 (1)
pick-up b12 (1)
stack b12 b16 (1)
unstack b7 b20 (1)
put-down b7 (1)
unstack b20 b13 (1)
put-down b20 (1)
pick-up b13 (1)
stack b13 b3 (1)
pick-up b20 (1)
stack b20 b13 (1)
pick-up b7 (1)
stack b7 b20 (1)
unstack b12 b16 (1)
put-down b12 (1)
unstack b16 b15 (1)
put-down b16 (1)
pick-up b12 (1)
stack b12 b16 (1)
pick-up b15 (1)
stack b15 b7 (1)
unstack b12 b16 (1)
put-down b12 (1)
pick-up b16 (1)
stack b16 b15 (1)
pick-up b12 (1)
stack b12 b16 (1)
[t=0.0267803s, 26380 KB] Plan length: 116 step(s).
[t=0.0267803s, 26380 KB] Plan cost: 116
[t=0.0267803s, 26380 KB] Expanded 359 state(s).
[t=0.0267803s, 26380 KB] Reopened 0 state(s).
[t=0.0267803s, 26380 KB] Evaluated 360 state(s).
[t=0.0267803s, 26380 KB] Evaluations: 720
[t=0.0267803s, 26380 KB] Generated 3084 state(s).
[t=0.0267803s, 26380 KB] Dead ends: 0 state(s).
[t=0.0267803s, 26380 KB] Number of registered states: 360
[t=0.0267803s, 26380 KB] Int hash set load factor: 360/512 = 0.703125
[t=0.0267803s, 26380 KB] Int hash set resizes: 9
[t=0.0267803s, 26380 KB] Search time: 0.0104173s
[t=0.0267803s, 26380 KB] Total time: 0.0267803s
Solution found.
Peak memory: 26380 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.16s
