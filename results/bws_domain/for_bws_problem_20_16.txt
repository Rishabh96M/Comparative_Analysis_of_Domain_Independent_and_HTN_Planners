INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_20/bws_problem_20_16.pddl --sas-file output.sas
Parsing...
Parsing: [0.010s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.000s CPU, 0.009s wall-clock]
1342 relevant atoms
900 auxiliary atoms
2242 final queue length
3885 total queue pushes
Completing instantiation... [0.020s CPU, 0.014s wall-clock]
Instantiating: [0.020s CPU, 0.024s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
21 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.005s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.020s wall-clock]
1180 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
40 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.010s wall-clock]
Reordering and filtering variables...
41 of 41 variables necessary.
21 of 41 mutex groups necessary.
800 of 800 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.005s wall-clock]
Translator variables: 41
Translator derived variables: 0
Translator facts: 462
Translator goal facts: 14
Translator mutex groups: 21
Translator total mutex groups size: 441
Translator operators: 800
Translator axioms: 0
Translator task size: 6898
Translator peak memory: 35944 KB
Writing output... [0.000s CPU, 0.004s wall-clock]
Done! [0.070s CPU, 0.072s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.1056e-05s, 24488 KB] reading input...
[t=0.00226329s, 25180 KB] done reading input!
[t=0.0030786s, 25444 KB] Initializing landmark count heuristic...
[t=0.00310946s, 25444 KB] Generating landmark graph...
[t=0.00317681s, 25576 KB] Building a landmark graph with reasonable orders.
[t=0.00323276s, 25576 KB] Initializing Exploration...
[t=0.00347471s, 25744 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0112429s, 26140 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0114108s, 26140 KB] Landmarks generation time: 0.00823299s
[t=0.0114261s, 26140 KB] Discovered 84 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0114498s, 26140 KB] 384 edges
[t=0.0114625s, 26140 KB] approx. reasonable orders
[t=0.0134985s, 26140 KB] approx. obedient reasonable orders
[t=0.0137405s, 26140 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0137521s, 26140 KB] Landmarks generation time: 0.0106414s
[t=0.0137629s, 26140 KB] Discovered 84 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0137718s, 26140 KB] 442 edges
[t=0.0137804s, 26140 KB] Landmark graph generation time: 0.0106781s
[t=0.0137892s, 26140 KB] Landmark graph contains 84 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0137975s, 26140 KB] Landmark graph contains 442 orderings.
[t=0.0141378s, 26324 KB] Simplifying 3160 unary operators... done! [2400 unary operators]
[t=0.0149155s, 26324 KB] time to simplify: 0.000834321s
[t=0.0150247s, 26324 KB] Initializing additive heuristic...
[t=0.0150389s, 26324 KB] Initializing FF heuristic...
[t=0.0150945s, 26324 KB] Building successor generator...done!
[t=0.0152752s, 26324 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0152839s, 26324 KB] time for successor generation creation: 0.000148478s
[t=0.0152961s, 26324 KB] Variables: 41
[t=0.0153045s, 26324 KB] FactPairs: 462
[t=0.0153126s, 26324 KB] Bytes per state: 16
[t=0.0154086s, 26324 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0154455s, 26324 KB] 39 initial landmarks, 14 goal landmarks
[t=0.0154927s, 26324 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0155027s, 26324 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.015511s, 26324 KB] g=0, 1 evaluated, 0 expanded
[t=0.0155243s, 26324 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0155344s, 26324 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0156172s, 26324 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0156272s, 26324 KB] g=1, 4 evaluated, 3 expanded
[t=0.0156815s, 26324 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.015691s, 26324 KB] g=2, 6 evaluated, 5 expanded
[t=0.0157839s, 26324 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.015793s, 26324 KB] g=3, 10 evaluated, 9 expanded
[t=0.0158838s, 26324 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0158931s, 26324 KB] g=4, 14 evaluated, 13 expanded
[t=0.015945s, 26324 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.015954s, 26324 KB] g=5, 16 evaluated, 15 expanded
[t=0.0160676s, 26324 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0160768s, 26324 KB] g=6, 21 evaluated, 20 expanded
[t=0.0161281s, 26324 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0161371s, 26324 KB] g=7, 23 evaluated, 22 expanded
[t=0.0162299s, 26324 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0162391s, 26324 KB] g=9, 27 evaluated, 26 expanded
[t=0.0163347s, 26324 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0163438s, 26324 KB] g=11, 31 evaluated, 30 expanded
[t=0.0165259s, 26324 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0165352s, 26324 KB] g=13, 39 evaluated, 38 expanded
[t=0.0166987s, 26324 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0167106s, 26324 KB] g=10, 46 evaluated, 45 expanded
[t=0.0168081s, 26324 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0168176s, 26324 KB] g=11, 50 evaluated, 49 expanded
[t=0.0169505s, 26324 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0169595s, 26324 KB] g=13, 56 evaluated, 55 expanded
[t=0.0171117s, 26324 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0171207s, 26324 KB] g=15, 63 evaluated, 62 expanded
[t=0.0173611s, 26324 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0173707s, 26324 KB] g=18, 74 evaluated, 73 expanded
[t=0.0176771s, 26324 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.017687s, 26324 KB] g=20, 88 evaluated, 87 expanded
[t=0.0177585s, 26324 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0177676s, 26324 KB] g=20, 91 evaluated, 90 expanded
[t=0.0181021s, 26324 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0181117s, 26324 KB] g=22, 107 evaluated, 106 expanded
[t=0.0185448s, 26324 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0185577s, 26324 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0185672s, 26324 KB] g=24, 127 evaluated, 126 expanded
[t=0.0187656s, 26324 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0187747s, 26324 KB] g=26, 136 evaluated, 135 expanded
[t=0.0188652s, 26324 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0188741s, 26324 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0188822s, 26324 KB] g=26, 140 evaluated, 139 expanded
[t=0.0190536s, 26324 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0190625s, 26324 KB] g=28, 148 evaluated, 147 expanded
[t=0.0191928s, 26324 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0192018s, 26324 KB] g=28, 154 evaluated, 153 expanded
[t=0.0193239s, 26324 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0193332s, 26324 KB] g=30, 159 evaluated, 158 expanded
[t=0.0193847s, 26324 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.019394s, 26324 KB] g=31, 161 evaluated, 160 expanded
[t=0.0196702s, 26324 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0196804s, 26324 KB] g=34, 174 evaluated, 173 expanded
[t=0.0199017s, 26324 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0199173s, 26324 KB] g=36, 184 evaluated, 183 expanded
[t=0.0200178s, 26324 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0200292s, 26324 KB] g=36, 188 evaluated, 187 expanded
[t=0.020224s, 26324 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0202349s, 26324 KB] g=38, 197 evaluated, 196 expanded
[t=0.0203908s, 26324 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0204003s, 26324 KB] g=38, 204 evaluated, 203 expanded
[t=0.0204941s, 26324 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0205033s, 26324 KB] g=40, 208 evaluated, 207 expanded
[t=0.020751s, 26324 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0207693s, 26324 KB] g=42, 219 evaluated, 218 expanded
[t=0.0208444s, 26324 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0208537s, 26324 KB] g=43, 222 evaluated, 221 expanded
[t=0.0209827s, 26324 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0209918s, 26324 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0210001s, 26324 KB] g=44, 228 evaluated, 227 expanded
[t=0.0210488s, 26324 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0210579s, 26324 KB] g=45, 230 evaluated, 229 expanded
[t=0.0211677s, 26324 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0211767s, 26324 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.021185s, 26324 KB] g=46, 235 evaluated, 234 expanded
[t=0.0212348s, 26324 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0212438s, 26324 KB] g=47, 237 evaluated, 236 expanded
[t=0.0213474s, 26324 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0213563s, 26324 KB] g=48, 242 evaluated, 241 expanded
[t=0.0214798s, 26324 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0214898s, 26324 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0214981s, 26324 KB] g=48, 248 evaluated, 247 expanded
[t=0.0215279s, 26324 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0215367s, 26324 KB] g=49, 249 evaluated, 248 expanded
[t=0.0215636s, 26324 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0215723s, 26324 KB] g=49, 250 evaluated, 249 expanded
[t=0.0216373s, 26324 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0216462s, 26324 KB] g=50, 253 evaluated, 252 expanded
[t=0.0216742s, 26324 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0216827s, 26324 KB] g=51, 254 evaluated, 253 expanded
[t=0.0217088s, 26324 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0217176s, 26324 KB] g=51, 255 evaluated, 254 expanded
[t=0.0218463s, 26324 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0218552s, 26324 KB] g=55, 261 evaluated, 260 expanded
[t=0.0219189s, 26324 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0219276s, 26324 KB] g=54, 264 evaluated, 263 expanded
[t=0.0219708s, 26324 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0219795s, 26324 KB] g=55, 266 evaluated, 265 expanded
[t=0.0220073s, 26324 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0220161s, 26324 KB] g=56, 267 evaluated, 266 expanded
[t=0.0220579s, 26324 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0220665s, 26324 KB] g=57, 269 evaluated, 268 expanded
[t=0.0221341s, 26324 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0221427s, 26324 KB] g=61, 273 evaluated, 272 expanded
[t=0.0222139s, 26324 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.022223s, 26324 KB] g=64, 277 evaluated, 276 expanded
[t=0.0222473s, 26324 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0222564s, 26324 KB] g=65, 278 evaluated, 277 expanded
[t=0.0223076s, 26324 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0223163s, 26324 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0223245s, 26324 KB] g=68, 281 evaluated, 280 expanded
[t=0.0223415s, 26324 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0223502s, 26324 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.022358s, 26324 KB] g=69, 282 evaluated, 281 expanded
[t=0.0223725s, 26324 KB] Solution found!
[t=0.0223824s, 26324 KB] Actual search time: 0.00693403s
unstack b14 b19 (1)
put-down b14 (1)
unstack b5 b7 (1)
put-down b5 (1)
unstack b7 b10 (1)
put-down b7 (1)
unstack b10 b18 (1)
put-down b10 (1)
unstack b18 b13 (1)
stack b18 b5 (1)
unstack b12 b16 (1)
put-down b12 (1)
unstack b16 b20 (1)
put-down b16 (1)
unstack b19 b15 (1)
put-down b19 (1)
unstack b13 b4 (1)
put-down b13 (1)
unstack b15 b8 (1)
put-down b15 (1)
unstack b20 b17 (1)
put-down b20 (1)
unstack b17 b3 (1)
stack b17 b8 (1)
pick-up b19 (1)
stack b19 b17 (1)
pick-up b10 (1)
stack b10 b4 (1)
pick-up b15 (1)
stack b15 b3 (1)
unstack b10 b4 (1)
put-down b10 (1)
unstack b4 b9 (1)
stack b4 b13 (1)
unstack b9 b1 (1)
put-down b9 (1)
unstack b1 b11 (1)
stack b1 b20 (1)
pick-up b10 (1)
stack b10 b4 (1)
unstack b11 b2 (1)
stack b11 b18 (1)
pick-up b12 (1)
stack b12 b11 (1)
unstack b2 b6 (1)
stack b2 b7 (1)
pick-up b6 (1)
stack b6 b15 (1)
pick-up b16 (1)
stack b16 b6 (1)
unstack b1 b20 (1)
put-down b1 (1)
pick-up b20 (1)
stack b20 b2 (1)
pick-up b1 (1)
stack b1 b20 (1)
unstack b10 b4 (1)
put-down b10 (1)
unstack b4 b13 (1)
put-down b4 (1)
pick-up b10 (1)
stack b10 b4 (1)
pick-up b13 (1)
stack b13 b1 (1)
unstack b10 b4 (1)
put-down b10 (1)
pick-up b4 (1)
stack b4 b13 (1)
pick-up b10 (1)
stack b10 b4 (1)
[t=0.0223918s, 26324 KB] Plan length: 70 step(s).
[t=0.0223918s, 26324 KB] Plan cost: 70
[t=0.0223918s, 26324 KB] Expanded 282 state(s).
[t=0.0223918s, 26324 KB] Reopened 0 state(s).
[t=0.0223918s, 26324 KB] Evaluated 283 state(s).
[t=0.0223918s, 26324 KB] Evaluations: 566
[t=0.0223918s, 26324 KB] Generated 2919 state(s).
[t=0.0223918s, 26324 KB] Dead ends: 0 state(s).
[t=0.0223918s, 26324 KB] Number of registered states: 283
[t=0.0223918s, 26324 KB] Int hash set load factor: 283/512 = 0.552734
[t=0.0223918s, 26324 KB] Int hash set resizes: 9
[t=0.0223918s, 26324 KB] Search time: 0.00698363s
[t=0.0223918s, 26324 KB] Total time: 0.0223918s
Solution found.
Peak memory: 26324 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.14s
