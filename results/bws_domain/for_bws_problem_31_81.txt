INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_31/bws_problem_31_81.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.019s wall-clock]
3102 relevant atoms
2077 auxiliary atoms
5179 final queue length
9089 total queue pushes
Completing instantiation... [0.030s CPU, 0.033s wall-clock]
Instantiating: [0.050s CPU, 0.054s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.010s CPU, 0.002s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
32 uncovered facts
Choosing groups: [0.000s CPU, 0.002s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.010s CPU, 0.011s wall-clock]
Building STRIPS to SAS dictionary... [0.010s CPU, 0.005s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.001s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.002s wall-clock]
Translating task: [0.050s CPU, 0.051s wall-clock]
2852 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
62 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.025s wall-clock]
Reordering and filtering variables...
63 of 63 variables necessary.
32 of 63 mutex groups necessary.
1922 of 1922 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.020s CPU, 0.013s wall-clock]
Translator variables: 63
Translator derived variables: 0
Translator facts: 1056
Translator goal facts: 28
Translator mutex groups: 32
Translator total mutex groups size: 1024
Translator operators: 1922
Translator axioms: 0
Translator task size: 16493
Translator peak memory: 42104 KB
Writing output... [0.010s CPU, 0.011s wall-clock]
Done! [0.170s CPU, 0.177s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.0536e-05s, 24488 KB] reading input...
[t=0.00545963s, 26640 KB] done reading input!
[t=0.00639673s, 26904 KB] Initializing landmark count heuristic...
[t=0.00642762s, 26904 KB] Generating landmark graph...
[t=0.00653098s, 27036 KB] Building a landmark graph with reasonable orders.
[t=0.00665057s, 27168 KB] Initializing Exploration...
[t=0.00741335s, 27612 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0390278s, 28536 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0391819s, 28536 KB] Landmarks generation time: 0.0326749s
[t=0.0392217s, 28536 KB] Discovered 143 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0392382s, 28536 KB] 814 edges
[t=0.0392483s, 28536 KB] approx. reasonable orders
[t=0.0417293s, 28536 KB] approx. obedient reasonable orders
[t=0.0418289s, 28536 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0418398s, 28536 KB] Landmarks generation time: 0.0354096s
[t=0.0418502s, 28536 KB] Discovered 143 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.041858s, 28536 KB] 833 edges
[t=0.0418664s, 28536 KB] Landmark graph generation time: 0.0354454s
[t=0.0418744s, 28536 KB] Landmark graph contains 143 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0418819s, 28536 KB] Landmark graph contains 833 orderings.
[t=0.0428037s, 28568 KB] Simplifying 7626 unary operators... done! [5766 unary operators]
[t=0.0446471s, 28568 KB] time to simplify: 0.00197877s
[t=0.0448717s, 28568 KB] Initializing additive heuristic...
[t=0.0448929s, 28568 KB] Initializing FF heuristic...
[t=0.0449453s, 28568 KB] Building successor generator...done!
[t=0.0452757s, 28704 KB] peak memory difference for successor generator creation: 136 KB
[t=0.0452846s, 28704 KB] time for successor generation creation: 0.000300964s
[t=0.0452973s, 28704 KB] Variables: 63
[t=0.0453053s, 28704 KB] FactPairs: 1056
[t=0.045313s, 28704 KB] Bytes per state: 24
[t=0.0453933s, 28704 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0454254s, 28704 KB] 62 initial landmarks, 28 goal landmarks
[t=0.0455002s, 28704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 81
[t=0.0455096s, 28704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 57
[t=0.0455176s, 28704 KB] g=0, 1 evaluated, 0 expanded
[t=0.0455302s, 28704 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 81
[t=0.045538s, 28704 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 57
[t=0.0459931s, 28704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 80
[t=0.0460261s, 28704 KB] g=2, 7 evaluated, 6 expanded
[t=0.047071s, 28704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 79
[t=0.0471058s, 28704 KB] g=4, 22 evaluated, 21 expanded
[t=0.0475s, 28704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 56
[t=0.0475212s, 28704 KB] g=6, 27 evaluated, 26 expanded
[t=0.0477054s, 28704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 78
[t=0.0477254s, 28704 KB] g=6, 29 evaluated, 28 expanded
[t=0.0484546s, 28704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 77
[t=0.0484711s, 28704 KB] g=8, 41 evaluated, 40 expanded
[t=0.0486101s, 28704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 76
[t=0.0486195s, 28704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 55
[t=0.0486276s, 28704 KB] g=8, 44 evaluated, 43 expanded
[t=0.0488996s, 28704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 54
[t=0.0489148s, 28704 KB] g=10, 50 evaluated, 49 expanded
[t=0.0489709s, 28704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 75
[t=0.04898s, 28704 KB] g=10, 51 evaluated, 50 expanded
[t=0.0495249s, 28704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 74
[t=0.0495341s, 28704 KB] g=12, 64 evaluated, 63 expanded
[t=0.0495926s, 28704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 73
[t=0.0496029s, 28704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 53
[t=0.0496187s, 28704 KB] g=12, 65 evaluated, 64 expanded
[t=0.0498838s, 28704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 72
[t=0.0498925s, 28704 KB] g=14, 71 evaluated, 70 expanded
[t=0.0501955s, 28704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 71
[t=0.0502045s, 28704 KB] g=16, 78 evaluated, 77 expanded
[t=0.0505525s, 28704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 70
[t=0.0505618s, 28704 KB] g=18, 86 evaluated, 85 expanded
[t=0.0509957s, 28704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 69
[t=0.0510068s, 28704 KB] g=21, 96 evaluated, 95 expanded
[t=0.0518723s, 28704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 68
[t=0.0518901s, 28704 KB] g=24, 115 evaluated, 114 expanded
[t=0.0523066s, 28704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 67
[t=0.052316s, 28704 KB] g=25, 124 evaluated, 123 expanded
[t=0.0531113s, 28704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 66
[t=0.0531209s, 28704 KB] g=28, 142 evaluated, 141 expanded
[t=0.054205s, 28704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 64
[t=0.0542206s, 28704 KB] g=30, 167 evaluated, 166 expanded
[t=0.0547325s, 28704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 62
[t=0.0547423s, 28704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 52
[t=0.0547504s, 28704 KB] g=32, 179 evaluated, 178 expanded
[t=0.0552169s, 28704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 60
[t=0.0552261s, 28704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 51
[t=0.0552339s, 28704 KB] g=34, 190 evaluated, 189 expanded
[t=0.0580609s, 28704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 57
[t=0.0580837s, 28704 KB] g=40, 256 evaluated, 255 expanded
[t=0.0586429s, 28704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0586692s, 28704 KB] g=42, 268 evaluated, 267 expanded
[t=0.0591645s, 28704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0591968s, 28704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 50
[t=0.0592099s, 28704 KB] g=44, 279 evaluated, 278 expanded
[t=0.0597144s, 28704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0597286s, 28704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 49
[t=0.0597366s, 28704 KB] g=46, 290 evaluated, 289 expanded
[t=0.0602536s, 28704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.060267s, 28704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 47
[t=0.0602766s, 28704 KB] g=48, 302 evaluated, 301 expanded
[t=0.0607455s, 28704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0607563s, 28704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 46
[t=0.060764s, 28704 KB] g=50, 313 evaluated, 312 expanded
[t=0.0611929s, 28704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0612106s, 28704 KB] g=50, 322 evaluated, 321 expanded
[t=0.0613555s, 28704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0613648s, 28704 KB] g=52, 325 evaluated, 324 expanded
[t=0.0620537s, 28704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0620638s, 28704 KB] g=52, 340 evaluated, 339 expanded
[t=0.0625179s, 28704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0625296s, 28704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.0625377s, 28704 KB] g=54, 350 evaluated, 349 expanded
[t=0.0629855s, 28704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0630042s, 28704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0630134s, 28704 KB] g=56, 360 evaluated, 359 expanded
[t=0.0635444s, 28704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0635744s, 28704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0635831s, 28704 KB] g=58, 370 evaluated, 369 expanded
[t=0.0636405s, 28704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0636492s, 28704 KB] g=59, 371 evaluated, 370 expanded
[t=0.0637052s, 28704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0637141s, 28704 KB] g=60, 372 evaluated, 371 expanded
[t=0.0645856s, 28704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0645991s, 28704 KB] g=62, 391 evaluated, 390 expanded
[t=0.0647041s, 28704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0647142s, 28704 KB] g=63, 393 evaluated, 392 expanded
[t=0.0655024s, 28704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0655279s, 28704 KB] g=65, 410 evaluated, 409 expanded
[t=0.0655977s, 28704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0656277s, 28704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0656371s, 28704 KB] g=66, 411 evaluated, 410 expanded
[t=0.0661986s, 28704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0662145s, 28704 KB] g=68, 423 evaluated, 422 expanded
[t=0.0663629s, 28704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0663735s, 28704 KB] g=68, 426 evaluated, 425 expanded
[t=0.0673978s, 28704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0674286s, 28704 KB] g=70, 444 evaluated, 443 expanded
[t=0.067615s, 28704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0676243s, 28704 KB] g=70, 448 evaluated, 447 expanded
[t=0.068744s, 28704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0687618s, 28704 KB] g=72, 474 evaluated, 473 expanded
[t=0.0690607s, 28704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.06907s, 28704 KB] g=72, 481 evaluated, 480 expanded
[t=0.069823s, 28704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0698353s, 28704 KB] g=74, 498 evaluated, 497 expanded
[t=0.0698966s, 28704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0699252s, 28704 KB] g=74, 499 evaluated, 498 expanded
[t=0.069998s, 28704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0700079s, 28704 KB] g=75, 500 evaluated, 499 expanded
[t=0.0709328s, 28704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0709544s, 28704 KB] g=76, 520 evaluated, 519 expanded
[t=0.0710531s, 28704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0710624s, 28704 KB] g=77, 522 evaluated, 521 expanded
[t=0.0711619s, 28704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0711707s, 28704 KB] g=78, 524 evaluated, 523 expanded
[t=0.0718289s, 28704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0718388s, 28704 KB] g=78, 540 evaluated, 539 expanded
[t=0.071891s, 28704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0718998s, 28704 KB] g=79, 541 evaluated, 540 expanded
[t=0.0719517s, 28704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0719607s, 28704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.071969s, 28704 KB] g=80, 542 evaluated, 541 expanded
[t=0.0732066s, 28704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0732201s, 28704 KB] g=84, 570 evaluated, 569 expanded
[t=0.0735171s, 28704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0735262s, 28704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0735341s, 28704 KB] g=86, 577 evaluated, 576 expanded
[t=0.0756415s, 28704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.075661s, 28704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0756707s, 28704 KB] g=92, 624 evaluated, 623 expanded
[t=0.0807214s, 28704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.080752s, 28704 KB] g=100, 741 evaluated, 740 expanded
[t=0.0811831s, 28704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0811935s, 28704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0812013s, 28704 KB] g=102, 751 evaluated, 750 expanded
[t=0.101248s, 28704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.10134s, 28704 KB] g=118, 1194 evaluated, 1193 expanded
[t=0.102329s, 28704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.10234s, 28704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.10235s, 28704 KB] g=124, 1217 evaluated, 1216 expanded
[t=0.128166s, 28704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.128226s, 28704 KB] g=143, 1795 evaluated, 1794 expanded
[t=0.128289s, 28704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.128298s, 28704 KB] g=144, 1796 evaluated, 1795 expanded
[t=0.128554s, 28704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.128569s, 28704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.128578s, 28704 KB] g=146, 1802 evaluated, 1801 expanded
[t=0.128772s, 28704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.128797s, 28704 KB] g=146, 1806 evaluated, 1805 expanded
[t=0.129014s, 28704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.129023s, 28704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.129031s, 28704 KB] g=148, 1811 evaluated, 1810 expanded
[t=0.132153s, 28704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.132172s, 28704 KB] g=156, 1883 evaluated, 1882 expanded
[t=0.132406s, 28704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.132419s, 28704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.132427s, 28704 KB] g=158, 1887 evaluated, 1886 expanded
[t=0.153339s, 28704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.153395s, 28704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.153404s, 28704 KB] g=200, 2372 evaluated, 2371 expanded
[t=0.612425s, 31252 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.612507s, 31252 KB] g=248, 13128 evaluated, 13127 expanded
[t=0.613215s, 31252 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.613235s, 31252 KB] g=252, 13144 evaluated, 13143 expanded
[t=0.613418s, 31252 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.613429s, 31252 KB] g=254, 13148 evaluated, 13147 expanded
[t=0.615532s, 31252 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.61555s, 31252 KB] g=266, 13202 evaluated, 13201 expanded
[t=0.615867s, 31252 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.615878s, 31252 KB] g=270, 13211 evaluated, 13210 expanded
[t=0.615987s, 31252 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.615999s, 31252 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.616008s, 31252 KB] g=272, 13214 evaluated, 13213 expanded
[t=0.629838s, 31384 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.629893s, 31384 KB] g=310, 13670 evaluated, 13669 expanded
[t=0.630828s, 31384 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.630847s, 31384 KB] g=318, 13701 evaluated, 13700 expanded
[t=0.631099s, 31384 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.631111s, 31384 KB] g=322, 13710 evaluated, 13709 expanded
[t=0.631197s, 31384 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.631205s, 31384 KB] g=324, 13713 evaluated, 13712 expanded
[t=0.632002s, 31384 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.632015s, 31384 KB] g=340, 13749 evaluated, 13748 expanded
[t=0.632217s, 31384 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.632227s, 31384 KB] g=348, 13759 evaluated, 13758 expanded
[t=0.632308s, 31384 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.632317s, 31384 KB] g=352, 13763 evaluated, 13762 expanded
[t=0.632338s, 31384 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.632347s, 31384 KB] g=353, 13764 evaluated, 13763 expanded
[t=0.632365s, 31384 KB] Solution found!
[t=0.632386s, 31384 KB] Actual search time: 0.58696s
unstack b10 b7 (1)
put-down b10 (1)
unstack b18 b11 (1)
put-down b18 (1)
unstack b11 b9 (1)
stack b11 b4 (1)
unstack b9 b14 (1)
stack b9 b11 (1)
unstack b14 b29 (1)
stack b14 b10 (1)
unstack b7 b16 (1)
stack b7 b14 (1)
unstack b23 b21 (1)
put-down b23 (1)
unstack b21 b8 (1)
put-down b21 (1)
unstack b8 b17 (1)
put-down b8 (1)
unstack b16 b20 (1)
put-down b16 (1)
unstack b20 b6 (1)
put-down b20 (1)
unstack b6 b26 (1)
put-down b6 (1)
unstack b26 b22 (1)
put-down b26 (1)
unstack b22 b12 (1)
put-down b22 (1)
pick-up b12 (1)
stack b12 b16 (1)
pick-up b18 (1)
stack b18 b12 (1)
pick-up b29 (1)
stack b29 b22 (1)
unstack b9 b11 (1)
put-down b9 (1)
unstack b11 b4 (1)
put-down b11 (1)
unstack b4 b5 (1)
stack b4 b7 (1)
pick-up b11 (1)
stack b11 b4 (1)
unstack b5 b27 (1)
stack b5 b21 (1)
unstack b27 b28 (1)
put-down b27 (1)
pick-up b26 (1)
stack b26 b27 (1)
unstack b28 b3 (1)
stack b28 b8 (1)
unstack b3 b19 (1)
stack b3 b29 (1)
unstack b19 b13 (1)
stack b19 b18 (1)
unstack b13 b2 (1)
stack b13 b3 (1)
unstack b2 b1 (1)
stack b2 b5 (1)
unstack b1 b30 (1)
stack b1 b6 (1)
unstack b30 b25 (1)
put-down b30 (1)
unstack b1 b6 (1)
put-down b1 (1)
unstack b25 b24 (1)
stack b25 b30 (1)
unstack b24 b15 (1)
stack b24 b19 (1)
unstack b15 b31 (1)
put-down b15 (1)
pick-up b20 (1)
stack b20 b15 (1)
pick-up b31 (1)
stack b31 b9 (1)
pick-up b23 (1)
stack b23 b28 (1)
pick-up b6 (1)
stack b6 b24 (1)
pick-up b1 (1)
stack b1 b6 (1)
unstack b20 b15 (1)
put-down b20 (1)
pick-up b15 (1)
stack b15 b23 (1)
pick-up b20 (1)
stack b20 b15 (1)
unstack b31 b9 (1)
put-down b31 (1)
pick-up b9 (1)
stack b9 b11 (1)
pick-up b31 (1)
stack b31 b9 (1)
unstack b2 b5 (1)
put-down b2 (1)
unstack b5 b21 (1)
put-down b5 (1)
pick-up b21 (1)
stack b21 b13 (1)
pick-up b5 (1)
stack b5 b21 (1)
pick-up b2 (1)
stack b2 b5 (1)
unstack b20 b15 (1)
put-down b20 (1)
unstack b15 b23 (1)
put-down b15 (1)
pick-up b20 (1)
stack b20 b15 (1)
unstack b23 b28 (1)
put-down b23 (1)
unstack b28 b8 (1)
put-down b28 (1)
pick-up b8 (1)
stack b8 b2 (1)
pick-up b28 (1)
stack b28 b8 (1)
pick-up b23 (1)
stack b23 b28 (1)
unstack b20 b15 (1)
put-down b20 (1)
pick-up b15 (1)
stack b15 b23 (1)
pick-up b20 (1)
stack b20 b15 (1)
unstack b31 b9 (1)
put-down b31 (1)
unstack b9 b11 (1)
put-down b9 (1)
unstack b11 b4 (1)
put-down b11 (1)
pick-up b9 (1)
stack b9 b11 (1)
pick-up b31 (1)
stack b31 b9 (1)
unstack b4 b7 (1)
put-down b4 (1)
unstack b7 b14 (1)
put-down b7 (1)
unstack b14 b10 (1)
put-down b14 (1)
pick-up b10 (1)
stack b10 b17 (1)
pick-up b14 (1)
stack b14 b10 (1)
pick-up b7 (1)
stack b7 b14 (1)
pick-up b4 (1)
stack b4 b7 (1)
unstack b31 b9 (1)
put-down b31 (1)
unstack b9 b11 (1)
put-down b9 (1)
pick-up b11 (1)
stack b11 b4 (1)
pick-up b9 (1)
stack b9 b11 (1)
pick-up b31 (1)
stack b31 b9 (1)
unstack b1 b6 (1)
put-down b1 (1)
unstack b6 b24 (1)
put-down b6 (1)
pick-up b1 (1)
stack b1 b6 (1)
unstack b24 b19 (1)
put-down b24 (1)
unstack b19 b18 (1)
put-down b19 (1)
pick-up b24 (1)
stack b24 b19 (1)
unstack b1 b6 (1)
put-down b1 (1)
pick-up b6 (1)
stack b6 b24 (1)
pick-up b1 (1)
stack b1 b6 (1)
unstack b20 b15 (1)
put-down b20 (1)
unstack b15 b23 (1)
put-down b15 (1)
unstack b23 b28 (1)
put-down b23 (1)
pick-up b15 (1)
stack b15 b23 (1)
pick-up b20 (1)
stack b20 b15 (1)
unstack b18 b12 (1)
put-down b18 (1)
unstack b12 b16 (1)
put-down b12 (1)
pick-up b16 (1)
stack b16 b20 (1)
pick-up b12 (1)
stack b12 b16 (1)
pick-up b18 (1)
stack b18 b12 (1)
unstack b1 b6 (1)
put-down b1 (1)
unstack b6 b24 (1)
put-down b6 (1)
pick-up b1 (1)
stack b1 b6 (1)
unstack b24 b19 (1)
put-down b24 (1)
pick-up b19 (1)
stack b19 b18 (1)
pick-up b24 (1)
stack b24 b19 (1)
unstack b1 b6 (1)
put-down b1 (1)
pick-up b6 (1)
stack b6 b24 (1)
pick-up b1 (1)
stack b1 b6 (1)
unstack b28 b8 (1)
put-down b28 (1)
unstack b8 b2 (1)
put-down b8 (1)
pick-up b28 (1)
stack b28 b8 (1)
unstack b2 b5 (1)
put-down b2 (1)
unstack b5 b21 (1)
put-down b5 (1)
pick-up b2 (1)
stack b2 b5 (1)
unstack b28 b8 (1)
put-down b28 (1)
pick-up b8 (1)
stack b8 b2 (1)
pick-up b28 (1)
stack b28 b8 (1)
unstack b21 b13 (1)
put-down b21 (1)
unstack b13 b3 (1)
put-down b13 (1)
pick-up b21 (1)
stack b21 b13 (1)
unstack b3 b29 (1)
put-down b3 (1)
unstack b29 b22 (1)
put-down b29 (1)
pick-up b22 (1)
stack b22 b31 (1)
pick-up b29 (1)
stack b29 b22 (1)
pick-up b3 (1)
stack b3 b29 (1)
unstack b21 b13 (1)
put-down b21 (1)
pick-up b13 (1)
stack b13 b3 (1)
pick-up b21 (1)
stack b21 b13 (1)
unstack b28 b8 (1)
put-down b28 (1)
unstack b8 b2 (1)
put-down b8 (1)
pick-up b28 (1)
stack b28 b8 (1)
unstack b2 b5 (1)
put-down b2 (1)
pick-up b5 (1)
stack b5 b21 (1)
pick-up b2 (1)
stack b2 b5 (1)
unstack b28 b8 (1)
put-down b28 (1)
pick-up b8 (1)
stack b8 b2 (1)
pick-up b28 (1)
stack b28 b8 (1)
unstack b1 b6 (1)
put-down b1 (1)
unstack b6 b24 (1)
put-down b6 (1)
pick-up b1 (1)
stack b1 b6 (1)
unstack b24 b19 (1)
put-down b24 (1)
unstack b19 b18 (1)
put-down b19 (1)
unstack b18 b12 (1)
put-down b18 (1)
pick-up b19 (1)
stack b19 b18 (1)
pick-up b24 (1)
stack b24 b19 (1)
unstack b1 b6 (1)
put-down b1 (1)
pick-up b6 (1)
stack b6 b24 (1)
pick-up b1 (1)
stack b1 b6 (1)
unstack b12 b16 (1)
put-down b12 (1)
unstack b16 b20 (1)
put-down b16 (1)
unstack b20 b15 (1)
put-down b20 (1)
pick-up b16 (1)
stack b16 b20 (1)
pick-up b12 (1)
stack b12 b16 (1)
unstack b15 b23 (1)
put-down b15 (1)
pick-up b23 (1)
stack b23 b28 (1)
pick-up b15 (1)
stack b15 b23 (1)
unstack b12 b16 (1)
put-down b12 (1)
unstack b16 b20 (1)
put-down b16 (1)
pick-up b12 (1)
stack b12 b16 (1)
pick-up b20 (1)
stack b20 b15 (1)
unstack b12 b16 (1)
put-down b12 (1)
pick-up b16 (1)
stack b16 b20 (1)
pick-up b12 (1)
stack b12 b16 (1)
unstack b1 b6 (1)
put-down b1 (1)
unstack b6 b24 (1)
put-down b6 (1)
unstack b24 b19 (1)
put-down b24 (1)
pick-up b6 (1)
stack b6 b24 (1)
pick-up b1 (1)
stack b1 b6 (1)
unstack b19 b18 (1)
put-down b19 (1)
pick-up b18 (1)
stack b18 b12 (1)
pick-up b19 (1)
stack b19 b18 (1)
unstack b1 b6 (1)
put-down b1 (1)
unstack b6 b24 (1)
put-down b6 (1)
pick-up b1 (1)
stack b1 b6 (1)
pick-up b24 (1)
stack b24 b19 (1)
unstack b1 b6 (1)
put-down b1 (1)
pick-up b6 (1)
stack b6 b24 (1)
pick-up b1 (1)
stack b1 b6 (1)
[t=0.632398s, 31384 KB] Plan length: 354 step(s).
[t=0.632398s, 31384 KB] Plan cost: 354
[t=0.632398s, 31384 KB] Expanded 13764 state(s).
[t=0.632398s, 31384 KB] Reopened 0 state(s).
[t=0.632398s, 31384 KB] Evaluated 13765 state(s).
[t=0.632398s, 31384 KB] Evaluations: 27530
[t=0.632398s, 31384 KB] Generated 126196 state(s).
[t=0.632398s, 31384 KB] Dead ends: 0 state(s).
[t=0.632398s, 31384 KB] Number of registered states: 13765
[t=0.632398s, 31384 KB] Int hash set load factor: 13765/16384 = 0.840149
[t=0.632398s, 31384 KB] Int hash set resizes: 14
[t=0.632398s, 31384 KB] Search time: 0.587005s
[t=0.632398s, 31384 KB] Total time: 0.632398s
Solution found.
Peak memory: 31384 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.86s
