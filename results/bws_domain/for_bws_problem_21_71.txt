INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_21/bws_problem_21_71.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.010s wall-clock]
1472 relevant atoms
987 auxiliary atoms
2459 final queue length
4270 total queue pushes
Completing instantiation... [0.020s CPU, 0.018s wall-clock]
Instantiating: [0.030s CPU, 0.029s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
22 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.006s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.025s wall-clock]
1302 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
42 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.011s wall-clock]
Reordering and filtering variables...
43 of 43 variables necessary.
22 of 43 mutex groups necessary.
882 of 882 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.008s wall-clock]
Translator variables: 43
Translator derived variables: 0
Translator facts: 506
Translator goal facts: 13
Translator mutex groups: 22
Translator total mutex groups size: 484
Translator operators: 882
Translator axioms: 0
Translator task size: 7598
Translator peak memory: 36456 KB
Writing output... [0.000s CPU, 0.004s wall-clock]
Done! [0.080s CPU, 0.087s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=3.2965e-05s, 24488 KB] reading input...
[t=0.002815s, 25268 KB] done reading input!
[t=0.00366025s, 25664 KB] Initializing landmark count heuristic...
[t=0.00369554s, 25664 KB] Generating landmark graph...
[t=0.00375393s, 25664 KB] Building a landmark graph with reasonable orders.
[t=0.00380992s, 25664 KB] Initializing Exploration...
[t=0.00410105s, 25852 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0120404s, 26248 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.012168s, 26248 KB] Landmarks generation time: 0.00841868s
[t=0.0121874s, 26248 KB] Discovered 85 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0122116s, 26248 KB] 296 edges
[t=0.0122267s, 26248 KB] approx. reasonable orders
[t=0.0140896s, 26248 KB] approx. obedient reasonable orders
[t=0.0142146s, 26248 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0142435s, 26248 KB] Landmarks generation time: 0.0105523s
[t=0.0142613s, 26248 KB] Discovered 85 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0142723s, 26248 KB] 351 edges
[t=0.0142833s, 26248 KB] Landmark graph generation time: 0.0105968s
[t=0.0142941s, 26248 KB] Landmark graph contains 85 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0143045s, 26248 KB] Landmark graph contains 351 orderings.
[t=0.0146661s, 26248 KB] Simplifying 3486 unary operators... done! [2646 unary operators]
[t=0.0155098s, 26380 KB] time to simplify: 0.000904715s
[t=0.0156268s, 26380 KB] Initializing additive heuristic...
[t=0.0156408s, 26380 KB] Initializing FF heuristic...
[t=0.0157118s, 26380 KB] Building successor generator...done!
[t=0.0159186s, 26380 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0159277s, 26380 KB] time for successor generation creation: 0.000170469s
[t=0.0159474s, 26380 KB] Variables: 43
[t=0.0159595s, 26380 KB] FactPairs: 506
[t=0.0159702s, 26380 KB] Bytes per state: 16
[t=0.0160827s, 26380 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0161196s, 26380 KB] 43 initial landmarks, 13 goal landmarks
[t=0.0161708s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.016181s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0161917s, 26380 KB] g=0, 1 evaluated, 0 expanded
[t=0.0162319s, 26380 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0162472s, 26380 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0164191s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0164341s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.016445s, 26380 KB] g=2, 7 evaluated, 6 expanded
[t=0.0165938s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0166038s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0166154s, 26380 KB] g=4, 13 evaluated, 12 expanded
[t=0.0167659s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0167768s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0167871s, 26380 KB] g=6, 19 evaluated, 18 expanded
[t=0.0169306s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0169402s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0169502s, 26380 KB] g=8, 25 evaluated, 24 expanded
[t=0.01705s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0170595s, 26380 KB] g=9, 29 evaluated, 28 expanded
[t=0.0171003s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.01711s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0171216s, 26380 KB] g=10, 30 evaluated, 29 expanded
[t=0.0172871s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0172973s, 26380 KB] g=12, 36 evaluated, 35 expanded
[t=0.0173771s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0173867s, 26380 KB] g=12, 39 evaluated, 38 expanded
[t=0.0177023s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0177125s, 26380 KB] g=14, 53 evaluated, 52 expanded
[t=0.0178132s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0178226s, 26380 KB] g=14, 57 evaluated, 56 expanded
[t=0.0180693s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0180793s, 26380 KB] g=16, 67 evaluated, 66 expanded
[t=0.0181139s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0181237s, 26380 KB] g=16, 68 evaluated, 67 expanded
[t=0.0183961s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.018406s, 26380 KB] g=18, 80 evaluated, 79 expanded
[t=0.0186661s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0186809s, 26380 KB] g=18, 91 evaluated, 90 expanded
[t=0.0188695s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0188792s, 26380 KB] g=20, 99 evaluated, 98 expanded
[t=0.0189132s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0189226s, 26380 KB] g=20, 100 evaluated, 99 expanded
[t=0.0191116s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0191219s, 26380 KB] g=22, 108 evaluated, 107 expanded
[t=0.0191998s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0192096s, 26380 KB] g=21, 111 evaluated, 110 expanded
[t=0.0192677s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0192774s, 26380 KB] g=22, 113 evaluated, 112 expanded
[t=0.0194008s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0194103s, 26380 KB] g=24, 118 evaluated, 117 expanded
[t=0.0196378s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0196472s, 26380 KB] g=26, 128 evaluated, 127 expanded
[t=0.0197988s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0198084s, 26380 KB] g=24, 134 evaluated, 133 expanded
[t=0.0198456s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0198548s, 26380 KB] g=28, 135 evaluated, 134 expanded
[t=0.0200412s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0200509s, 26380 KB] g=30, 143 evaluated, 142 expanded
[t=0.0201275s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0201368s, 26380 KB] g=25, 146 evaluated, 145 expanded
[t=0.0204536s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0204633s, 26380 KB] g=34, 160 evaluated, 159 expanded
[t=0.0206529s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0206672s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0206786s, 26380 KB] g=36, 168 evaluated, 167 expanded
[t=0.0207237s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0207363s, 26380 KB] g=37, 169 evaluated, 168 expanded
[t=0.0209748s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0209992s, 26380 KB] g=38, 175 evaluated, 174 expanded
[t=0.0211541s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0211638s, 26380 KB] g=40, 181 evaluated, 180 expanded
[t=0.0211975s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0212096s, 26380 KB] g=40, 182 evaluated, 181 expanded
[t=0.0215641s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0215772s, 26380 KB] g=42, 197 evaluated, 196 expanded
[t=0.021864s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0218737s, 26380 KB] g=44, 210 evaluated, 209 expanded
[t=0.0222652s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0222767s, 26380 KB] g=46, 228 evaluated, 227 expanded
[t=0.0224868s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0224965s, 26380 KB] g=48, 238 evaluated, 237 expanded
[t=0.0227296s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0227385s, 26380 KB] g=48, 249 evaluated, 248 expanded
[t=0.0229279s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0229368s, 26380 KB] g=52, 257 evaluated, 256 expanded
[t=0.0230698s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0230793s, 26380 KB] g=54, 263 evaluated, 262 expanded
[t=0.0233076s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0233177s, 26380 KB] g=50, 273 evaluated, 272 expanded
[t=0.023592s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0236078s, 26380 KB] g=52, 286 evaluated, 285 expanded
[t=0.0239439s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0239545s, 26380 KB] g=54, 303 evaluated, 302 expanded
[t=0.0241972s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0242075s, 26380 KB] g=56, 316 evaluated, 315 expanded
[t=0.0243313s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0243411s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0243492s, 26380 KB] g=58, 323 evaluated, 322 expanded
[t=0.0243886s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0243975s, 26380 KB] g=59, 324 evaluated, 323 expanded
[t=0.0244232s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.024432s, 26380 KB] g=60, 325 evaluated, 324 expanded
[t=0.0244761s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0244878s, 26380 KB] g=62, 327 evaluated, 326 expanded
[t=0.0245105s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0245191s, 26380 KB] g=63, 328 evaluated, 327 expanded
[t=0.0245738s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0245826s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0245915s, 26380 KB] g=66, 331 evaluated, 330 expanded
[t=0.0246091s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0246182s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0246266s, 26380 KB] g=67, 332 evaluated, 331 expanded
[t=0.0246415s, 26380 KB] Solution found!
[t=0.0246527s, 26380 KB] Actual search time: 0.00852859s
unstack b10 b2 (1)
put-down b10 (1)
unstack b2 b1 (1)
put-down b2 (1)
unstack b1 b16 (1)
put-down b1 (1)
unstack b9 b19 (1)
put-down b9 (1)
unstack b19 b12 (1)
stack b19 b9 (1)
unstack b6 b7 (1)
stack b6 b13 (1)
unstack b11 b3 (1)
stack b11 b6 (1)
unstack b7 b18 (1)
stack b7 b3 (1)
pick-up b16 (1)
stack b16 b7 (1)
unstack b18 b21 (1)
stack b18 b11 (1)
unstack b21 b14 (1)
put-down b21 (1)
unstack b14 b5 (1)
put-down b14 (1)
pick-up b12 (1)
stack b12 b14 (1)
unstack b5 b8 (1)
stack b5 b2 (1)
unstack b8 b4 (1)
put-down b8 (1)
unstack b4 b15 (1)
put-down b4 (1)
unstack b15 b20 (1)
put-down b15 (1)
unstack b20 b17 (1)
stack b20 b12 (1)
unstack b16 b7 (1)
put-down b16 (1)
unstack b18 b11 (1)
put-down b18 (1)
unstack b7 b3 (1)
put-down b7 (1)
unstack b11 b6 (1)
put-down b11 (1)
unstack b6 b13 (1)
put-down b6 (1)
pick-up b13 (1)
stack b13 b15 (1)
pick-up b6 (1)
stack b6 b13 (1)
pick-up b11 (1)
stack b11 b6 (1)
pick-up b18 (1)
stack b18 b11 (1)
pick-up b17 (1)
stack b17 b18 (1)
pick-up b3 (1)
stack b3 b8 (1)
pick-up b16 (1)
stack b16 b7 (1)
pick-up b4 (1)
stack b4 b17 (1)
unstack b16 b7 (1)
put-down b16 (1)
pick-up b7 (1)
stack b7 b3 (1)
pick-up b16 (1)
stack b16 b7 (1)
[t=0.0246689s, 26380 KB] Plan length: 68 step(s).
[t=0.0246689s, 26380 KB] Plan cost: 68
[t=0.0246689s, 26380 KB] Expanded 332 state(s).
[t=0.0246689s, 26380 KB] Reopened 0 state(s).
[t=0.0246689s, 26380 KB] Evaluated 333 state(s).
[t=0.0246689s, 26380 KB] Evaluations: 666
[t=0.0246689s, 26380 KB] Generated 3978 state(s).
[t=0.0246689s, 26380 KB] Dead ends: 0 state(s).
[t=0.0246689s, 26380 KB] Number of registered states: 333
[t=0.0246689s, 26380 KB] Int hash set load factor: 333/512 = 0.650391
[t=0.0246689s, 26380 KB] Int hash set resizes: 9
[t=0.0246689s, 26380 KB] Search time: 0.0085866s
[t=0.0246689s, 26380 KB] Total time: 0.0246689s
Solution found.
Peak memory: 26380 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.16s
