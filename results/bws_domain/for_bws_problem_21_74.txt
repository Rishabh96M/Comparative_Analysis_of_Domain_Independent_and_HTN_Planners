INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_21/bws_problem_21_74.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.009s wall-clock]
1472 relevant atoms
987 auxiliary atoms
2459 final queue length
4268 total queue pushes
Completing instantiation... [0.020s CPU, 0.015s wall-clock]
Instantiating: [0.030s CPU, 0.026s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
22 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.006s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.022s wall-clock]
1302 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
42 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.011s wall-clock]
Reordering and filtering variables...
43 of 43 variables necessary.
22 of 43 mutex groups necessary.
882 of 882 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 43
Translator derived variables: 0
Translator facts: 506
Translator goal facts: 16
Translator mutex groups: 22
Translator total mutex groups size: 484
Translator operators: 882
Translator axioms: 0
Translator task size: 7601
Translator peak memory: 36456 KB
Writing output... [0.010s CPU, 0.004s wall-clock]
Done! [0.080s CPU, 0.079s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.3036e-05s, 24488 KB] reading input...
[t=0.00256333s, 25268 KB] done reading input!
[t=0.00369467s, 25664 KB] Initializing landmark count heuristic...
[t=0.00378002s, 25664 KB] Generating landmark graph...
[t=0.00387907s, 25664 KB] Building a landmark graph with reasonable orders.
[t=0.00394729s, 25664 KB] Initializing Exploration...
[t=0.00425916s, 25852 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0132812s, 26380 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0135111s, 26380 KB] Landmarks generation time: 0.00964569s
[t=0.0135454s, 26380 KB] Discovered 90 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.013575s, 26380 KB] 457 edges
[t=0.0135878s, 26380 KB] approx. reasonable orders
[t=0.0163432s, 26380 KB] approx. obedient reasonable orders
[t=0.0166324s, 26380 KB] Removed 1 reasonable or obedient reasonable orders
[t=0.0166453s, 26380 KB] Landmarks generation time: 0.0128618s
[t=0.0166559s, 26380 KB] Discovered 90 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0166646s, 26380 KB] 533 edges
[t=0.0166732s, 26380 KB] Landmark graph generation time: 0.0129002s
[t=0.0166819s, 26380 KB] Landmark graph contains 90 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0166902s, 26380 KB] Landmark graph contains 533 orderings.
[t=0.0170029s, 26380 KB] Simplifying 3486 unary operators... done! [2646 unary operators]
[t=0.0178436s, 26380 KB] time to simplify: 0.000896036s
[t=0.0179597s, 26380 KB] Initializing additive heuristic...
[t=0.0179732s, 26380 KB] Initializing FF heuristic...
[t=0.0180245s, 26380 KB] Building successor generator...done!
[t=0.0182139s, 26380 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0182226s, 26380 KB] time for successor generation creation: 0.000157551s
[t=0.0182341s, 26380 KB] Variables: 43
[t=0.0182423s, 26380 KB] FactPairs: 506
[t=0.0182504s, 26380 KB] Bytes per state: 16
[t=0.018344s, 26380 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0183784s, 26380 KB] 40 initial landmarks, 16 goal landmarks
[t=0.0184358s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0184454s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.018454s, 26380 KB] g=0, 1 evaluated, 0 expanded
[t=0.0184664s, 26380 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.018475s, 26380 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0185813s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0185908s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0185989s, 26380 KB] g=2, 5 evaluated, 4 expanded
[t=0.0186975s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0187063s, 26380 KB] g=4, 9 evaluated, 8 expanded
[t=0.0188034s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0188123s, 26380 KB] g=5, 13 evaluated, 12 expanded
[t=0.0188443s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0188529s, 26380 KB] g=6, 14 evaluated, 13 expanded
[t=0.0189972s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0190061s, 26380 KB] g=7, 20 evaluated, 19 expanded
[t=0.0192333s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0192422s, 26380 KB] g=10, 30 evaluated, 29 expanded
[t=0.0193633s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0193721s, 26380 KB] g=10, 35 evaluated, 34 expanded
[t=0.0195757s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0195846s, 26380 KB] g=12, 44 evaluated, 43 expanded
[t=0.0196163s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0196251s, 26380 KB] g=12, 45 evaluated, 44 expanded
[t=0.0199963s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.020013s, 26380 KB] g=14, 58 evaluated, 57 expanded
[t=0.0204174s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0204326s, 26380 KB] g=16, 75 evaluated, 74 expanded
[t=0.0208295s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.020841s, 26380 KB] g=18, 92 evaluated, 91 expanded
[t=0.0212736s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0212848s, 26380 KB] g=20, 111 evaluated, 110 expanded
[t=0.0215234s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0215326s, 26380 KB] g=21, 121 evaluated, 120 expanded
[t=0.0219164s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0219265s, 26380 KB] g=20, 137 evaluated, 136 expanded
[t=0.0221407s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0221501s, 26380 KB] g=24, 146 evaluated, 145 expanded
[t=0.0222976s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0223071s, 26380 KB] g=22, 152 evaluated, 151 expanded
[t=0.0228552s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0228643s, 26380 KB] g=26, 176 evaluated, 175 expanded
[t=0.0231673s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0231767s, 26380 KB] g=28, 189 evaluated, 188 expanded
[t=0.0235472s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0235569s, 26380 KB] g=28, 205 evaluated, 204 expanded
[t=0.0242454s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0242547s, 26380 KB] g=30, 235 evaluated, 234 expanded
[t=0.0250326s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.025053s, 26380 KB] g=32, 264 evaluated, 263 expanded
[t=0.0254973s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0255108s, 26380 KB] g=32, 282 evaluated, 281 expanded
[t=0.0257927s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0258023s, 26380 KB] g=34, 294 evaluated, 293 expanded
[t=0.0258385s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0258478s, 26380 KB] g=35, 295 evaluated, 294 expanded
[t=0.0260721s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0260816s, 26380 KB] g=37, 304 evaluated, 303 expanded
[t=0.0262338s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0262431s, 26380 KB] g=34, 310 evaluated, 309 expanded
[t=0.026576s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0265855s, 26380 KB] g=36, 324 evaluated, 323 expanded
[t=0.0268881s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0268976s, 26380 KB] g=38, 337 evaluated, 336 expanded
[t=0.0270195s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0270285s, 26380 KB] g=39, 342 evaluated, 341 expanded
[t=0.0280319s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0280734s, 26380 KB] g=40, 371 evaluated, 370 expanded
[t=0.0282186s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0282361s, 26380 KB] g=40, 376 evaluated, 375 expanded
[t=0.0283797s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.028389s, 26380 KB] g=41, 382 evaluated, 381 expanded
[t=0.0284683s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0284773s, 26380 KB] g=42, 385 evaluated, 384 expanded
[t=0.028769s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0287785s, 26380 KB] g=44, 398 evaluated, 397 expanded
[t=0.0290387s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.02905s, 26380 KB] g=42, 409 evaluated, 408 expanded
[t=0.0291261s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0291355s, 26380 KB] g=43, 412 evaluated, 411 expanded
[t=0.0301079s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0301206s, 26380 KB] g=44, 455 evaluated, 454 expanded
[t=0.0302259s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0302351s, 26380 KB] g=45, 459 evaluated, 458 expanded
[t=0.0303992s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0304085s, 26380 KB] g=50, 466 evaluated, 465 expanded
[t=0.0307509s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0307619s, 26380 KB] g=46, 482 evaluated, 481 expanded
[t=0.0308129s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0308217s, 26380 KB] g=47, 484 evaluated, 483 expanded
[t=0.03115s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0311598s, 26380 KB] g=50, 501 evaluated, 500 expanded
[t=0.0311893s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0311982s, 26380 KB] g=51, 502 evaluated, 501 expanded
[t=0.0314729s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0314827s, 26380 KB] g=52, 515 evaluated, 514 expanded
[t=0.0317422s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0317512s, 26380 KB] g=54, 529 evaluated, 528 expanded
[t=0.0319298s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0319391s, 26380 KB] g=56, 538 evaluated, 537 expanded
[t=0.032114s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0321234s, 26380 KB] g=58, 547 evaluated, 546 expanded
[t=0.0321861s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0321951s, 26380 KB] g=54, 550 evaluated, 549 expanded
[t=0.032239s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.032248s, 26380 KB] g=55, 552 evaluated, 551 expanded
[t=0.0322965s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0323052s, 26380 KB] g=58, 554 evaluated, 553 expanded
[t=0.0324549s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0324638s, 26380 KB] g=60, 562 evaluated, 561 expanded
[t=0.03249s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0324991s, 26380 KB] g=61, 563 evaluated, 562 expanded
[t=0.0326307s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0326423s, 26380 KB] g=63, 570 evaluated, 569 expanded
[t=0.0328486s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0328577s, 26380 KB] g=67, 582 evaluated, 581 expanded
[t=0.0329811s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0329915s, 26380 KB] g=66, 588 evaluated, 587 expanded
[t=0.0331225s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0331314s, 26380 KB] g=68, 595 evaluated, 594 expanded
[t=0.0331752s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0331838s, 26380 KB] g=69, 597 evaluated, 596 expanded
[t=0.0332121s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0332207s, 26380 KB] g=70, 598 evaluated, 597 expanded
[t=0.0333167s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0333255s, 26380 KB] g=72, 603 evaluated, 602 expanded
[t=0.0333798s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0333884s, 26380 KB] g=70, 606 evaluated, 605 expanded
[t=0.033412s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0334209s, 26380 KB] g=71, 607 evaluated, 606 expanded
[t=0.0336096s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0336188s, 26380 KB] g=72, 619 evaluated, 618 expanded
[t=0.0336562s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.033665s, 26380 KB] g=73, 621 evaluated, 620 expanded
[t=0.0337327s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0337415s, 26380 KB] g=76, 625 evaluated, 624 expanded
[t=0.0337624s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0337713s, 26380 KB] g=77, 626 evaluated, 625 expanded
[t=0.0338207s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0338295s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0338379s, 26380 KB] g=80, 629 evaluated, 628 expanded
[t=0.0338554s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0338639s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0338719s, 26380 KB] g=81, 630 evaluated, 629 expanded
[t=0.033887s, 26380 KB] Solution found!
[t=0.0338981s, 26380 KB] Actual search time: 0.0155164s
unstack b11 b17 (1)
put-down b11 (1)
unstack b17 b8 (1)
put-down b17 (1)
unstack b8 b16 (1)
put-down b8 (1)
unstack b16 b13 (1)
put-down b16 (1)
unstack b13 b4 (1)
put-down b13 (1)
unstack b18 b1 (1)
put-down b18 (1)
unstack b9 b7 (1)
put-down b9 (1)
unstack b7 b3 (1)
put-down b7 (1)
unstack b3 b6 (1)
put-down b3 (1)
unstack b6 b2 (1)
put-down b6 (1)
unstack b2 b21 (1)
put-down b2 (1)
unstack b21 b20 (1)
put-down b21 (1)
unstack b20 b5 (1)
put-down b20 (1)
unstack b5 b19 (1)
stack b5 b4 (1)
unstack b19 b12 (1)
put-down b19 (1)
unstack b12 b14 (1)
put-down b12 (1)
unstack b14 b10 (1)
put-down b14 (1)
unstack b1 b15 (1)
put-down b1 (1)
pick-up b14 (1)
stack b14 b15 (1)
pick-up b17 (1)
stack b17 b14 (1)
pick-up b1 (1)
stack b1 b17 (1)
pick-up b6 (1)
stack b6 b5 (1)
pick-up b13 (1)
stack b13 b6 (1)
pick-up b16 (1)
stack b16 b21 (1)
pick-up b18 (1)
stack b18 b13 (1)
pick-up b19 (1)
stack b19 b3 (1)
pick-up b2 (1)
stack b2 b20 (1)
pick-up b7 (1)
stack b7 b1 (1)
pick-up b9 (1)
stack b9 b10 (1)
pick-up b8 (1)
stack b8 b9 (1)
unstack b16 b21 (1)
put-down b16 (1)
unstack b2 b20 (1)
put-down b2 (1)
unstack b19 b3 (1)
put-down b19 (1)
pick-up b20 (1)
stack b20 b7 (1)
pick-up b2 (1)
stack b2 b20 (1)
pick-up b3 (1)
stack b3 b18 (1)
pick-up b16 (1)
stack b16 b21 (1)
pick-up b19 (1)
stack b19 b3 (1)
unstack b16 b21 (1)
put-down b16 (1)
pick-up b21 (1)
stack b21 b19 (1)
pick-up b16 (1)
stack b16 b21 (1)
[t=0.0339076s, 26380 KB] Plan length: 82 step(s).
[t=0.0339076s, 26380 KB] Plan cost: 82
[t=0.0339076s, 26380 KB] Expanded 630 state(s).
[t=0.0339076s, 26380 KB] Reopened 0 state(s).
[t=0.0339076s, 26380 KB] Evaluated 631 state(s).
[t=0.0339076s, 26380 KB] Evaluations: 1262
[t=0.0339076s, 26380 KB] Generated 7454 state(s).
[t=0.0339076s, 26380 KB] Dead ends: 0 state(s).
[t=0.0339076s, 26380 KB] Number of registered states: 631
[t=0.0339076s, 26380 KB] Int hash set load factor: 631/1024 = 0.616211
[t=0.0339076s, 26380 KB] Int hash set resizes: 10
[t=0.0339076s, 26380 KB] Search time: 0.015564s
[t=0.0339076s, 26380 KB] Total time: 0.0339076s
Solution found.
Peak memory: 26380 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.16s
