INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_25/bws_problem_25_19.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.014s wall-clock]
2052 relevant atoms
1375 auxiliary atoms
3427 final queue length
5983 total queue pushes
Completing instantiation... [0.030s CPU, 0.024s wall-clock]
Instantiating: [0.040s CPU, 0.039s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.010s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
26 uncovered facts
Choosing groups: [0.000s CPU, 0.002s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.008s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.034s wall-clock]
1850 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
50 propositions removed
Detecting unreachable propositions: [0.030s CPU, 0.023s wall-clock]
Reordering and filtering variables...
51 of 51 variables necessary.
26 of 51 mutex groups necessary.
1250 of 1250 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.008s wall-clock]
Translator variables: 51
Translator derived variables: 0
Translator facts: 702
Translator goal facts: 20
Translator mutex groups: 26
Translator total mutex groups size: 676
Translator operators: 1250
Translator axioms: 0
Translator task size: 10749
Translator peak memory: 38384 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.120s CPU, 0.123s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=1.5573e-05s, 24488 KB] reading input...
[t=0.00347578s, 25632 KB] done reading input!
[t=0.00426442s, 26028 KB] Initializing landmark count heuristic...
[t=0.00429106s, 26028 KB] Generating landmark graph...
[t=0.00436252s, 26160 KB] Building a landmark graph with reasonable orders.
[t=0.00443198s, 26160 KB] Initializing Exploration...
[t=0.00479619s, 26532 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0189537s, 26928 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.019053s, 26928 KB] Landmarks generation time: 0.0146899s
[t=0.0190657s, 26928 KB] Discovered 106 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0190812s, 26928 KB] 324 edges
[t=0.0190909s, 26928 KB] approx. reasonable orders
[t=0.0215791s, 26928 KB] approx. obedient reasonable orders
[t=0.0216248s, 26928 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0216357s, 26928 KB] Landmarks generation time: 0.0173418s
[t=0.0216458s, 26928 KB] Discovered 106 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0216543s, 26928 KB] 360 edges
[t=0.021663s, 26928 KB] Landmark graph generation time: 0.0173791s
[t=0.0216792s, 26928 KB] Landmark graph contains 106 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0216872s, 26928 KB] Landmark graph contains 360 orderings.
[t=0.0221268s, 26928 KB] Simplifying 4950 unary operators... done! [3750 unary operators]
[t=0.0233188s, 27060 KB] time to simplify: 0.00126891s
[t=0.0234722s, 27060 KB] Initializing additive heuristic...
[t=0.0234885s, 27060 KB] Initializing FF heuristic...
[t=0.0235494s, 27060 KB] Building successor generator...done!
[t=0.0238028s, 27060 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0238118s, 27060 KB] time for successor generation creation: 0.000219813s
[t=0.0238248s, 27060 KB] Variables: 51
[t=0.023833s, 27060 KB] FactPairs: 702
[t=0.0238411s, 27060 KB] Bytes per state: 20
[t=0.02393s, 27060 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.023963s, 27060 KB] 49 initial landmarks, 20 goal landmarks
[t=0.0240205s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 57
[t=0.0240299s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0240381s, 27060 KB] g=0, 1 evaluated, 0 expanded
[t=0.0240522s, 27060 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 57
[t=0.0240682s, 27060 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0242589s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0242685s, 27060 KB] g=1, 6 evaluated, 5 expanded
[t=0.0247869s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0248011s, 27060 KB] g=4, 18 evaluated, 17 expanded
[t=0.0251734s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0251838s, 27060 KB] g=6, 29 evaluated, 28 expanded
[t=0.0257081s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0257186s, 27060 KB] g=8, 46 evaluated, 45 expanded
[t=0.0257905s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0257998s, 27060 KB] g=8, 48 evaluated, 47 expanded
[t=0.0262804s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0262901s, 27060 KB] g=10, 64 evaluated, 63 expanded
[t=0.0263363s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0263452s, 27060 KB] g=10, 65 evaluated, 64 expanded
[t=0.0268586s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0269096s, 27060 KB] g=12, 82 evaluated, 81 expanded
[t=0.0270548s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0270655s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0270738s, 27060 KB] g=12, 85 evaluated, 84 expanded
[t=0.0273247s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0273344s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0273469s, 27060 KB] g=14, 93 evaluated, 92 expanded
[t=0.0276236s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0276335s, 27060 KB] g=16, 102 evaluated, 101 expanded
[t=0.0277057s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0277149s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0277232s, 27060 KB] g=16, 104 evaluated, 103 expanded
[t=0.028s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0280096s, 27060 KB] g=18, 113 evaluated, 112 expanded
[t=0.0281169s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0281318s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0281407s, 27060 KB] g=18, 116 evaluated, 115 expanded
[t=0.0283966s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.028406s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.028415s, 27060 KB] g=20, 124 evaluated, 123 expanded
[t=0.0286982s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0287084s, 27060 KB] g=22, 133 evaluated, 132 expanded
[t=0.028781s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0287906s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0287989s, 27060 KB] g=22, 135 evaluated, 134 expanded
[t=0.029014s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.029024s, 27060 KB] g=24, 142 evaluated, 141 expanded
[t=0.0291226s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0291316s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0291399s, 27060 KB] g=24, 145 evaluated, 144 expanded
[t=0.0293566s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0293659s, 27060 KB] g=26, 152 evaluated, 151 expanded
[t=0.0295023s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0295177s, 27060 KB] g=26, 155 evaluated, 154 expanded
[t=0.0299425s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0299537s, 27060 KB] g=28, 168 evaluated, 167 expanded
[t=0.0304057s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0304154s, 27060 KB] g=30, 182 evaluated, 181 expanded
[t=0.0308857s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.030896s, 27060 KB] g=32, 197 evaluated, 196 expanded
[t=0.0310616s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0310714s, 27060 KB] g=32, 202 evaluated, 201 expanded
[t=0.0313549s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0313655s, 27060 KB] g=34, 211 evaluated, 210 expanded
[t=0.0317721s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0317834s, 27060 KB] g=34, 224 evaluated, 223 expanded
[t=0.0322207s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0322377s, 27060 KB] g=36, 237 evaluated, 236 expanded
[t=0.0324273s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.032437s, 27060 KB] g=38, 243 evaluated, 242 expanded
[t=0.0334182s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0334294s, 27060 KB] g=42, 276 evaluated, 275 expanded
[t=0.0334998s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0335096s, 27060 KB] g=43, 278 evaluated, 277 expanded
[t=0.033722s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0337315s, 27060 KB] g=44, 285 evaluated, 284 expanded
[t=0.0338588s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0338681s, 27060 KB] g=45, 289 evaluated, 288 expanded
[t=0.0363243s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0363385s, 27060 KB] g=56, 369 evaluated, 368 expanded
[t=0.0366923s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0367026s, 27060 KB] g=58, 381 evaluated, 380 expanded
[t=0.0368516s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0368624s, 27060 KB] g=60, 386 evaluated, 385 expanded
[t=0.0370691s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0370801s, 27060 KB] g=62, 393 evaluated, 392 expanded
[t=0.0371471s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0371585s, 27060 KB] g=63, 395 evaluated, 394 expanded
[t=0.0379463s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0379702s, 27060 KB] g=62, 419 evaluated, 418 expanded
[t=0.0382293s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.03824s, 27060 KB] g=64, 428 evaluated, 427 expanded
[t=0.0383353s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0383449s, 27060 KB] g=65, 431 evaluated, 430 expanded
[t=0.0421664s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.042191s, 27060 KB] g=82, 557 evaluated, 556 expanded
[t=0.0424706s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0424808s, 27060 KB] g=84, 567 evaluated, 566 expanded
[t=0.0429621s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0429737s, 27060 KB] g=86, 585 evaluated, 584 expanded
[t=0.0430126s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0430223s, 27060 KB] g=88, 586 evaluated, 585 expanded
[t=0.0432768s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0432871s, 27060 KB] g=90, 595 evaluated, 594 expanded
[t=0.0434833s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0434939s, 27060 KB] g=88, 602 evaluated, 601 expanded
[t=0.0435899s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0436057s, 27060 KB] g=89, 605 evaluated, 604 expanded
[t=0.0438323s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0438453s, 27060 KB] g=90, 613 evaluated, 612 expanded
[t=0.0439695s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0439814s, 27060 KB] g=91, 617 evaluated, 616 expanded
[t=0.0443138s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0443311s, 27060 KB] g=92, 628 evaluated, 627 expanded
[t=0.0443716s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0443819s, 27060 KB] g=93, 629 evaluated, 628 expanded
[t=0.0444459s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0444552s, 27060 KB] g=94, 631 evaluated, 630 expanded
[t=0.044581s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.044591s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0445995s, 27060 KB] g=96, 635 evaluated, 634 expanded
[t=0.044818s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0448323s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0448409s, 27060 KB] g=98, 639 evaluated, 638 expanded
[t=0.0451354s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0451614s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0451702s, 27060 KB] g=102, 648 evaluated, 647 expanded
[t=0.0452689s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0452791s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0452878s, 27060 KB] g=104, 651 evaluated, 650 expanded
[t=0.0468013s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0468222s, 27060 KB] g=126, 715 evaluated, 714 expanded
[t=0.0468979s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0469073s, 27060 KB] g=128, 718 evaluated, 717 expanded
[t=0.0470925s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0471022s, 27060 KB] g=136, 728 evaluated, 727 expanded
[t=0.0472083s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0472219s, 27060 KB] g=140, 732 evaluated, 731 expanded
[t=0.0472406s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0472501s, 27060 KB] g=141, 733 evaluated, 732 expanded
[t=0.0472659s, 27060 KB] Solution found!
[t=0.0472791s, 27060 KB] Actual search time: 0.023314s
unstack b3 b15 (1)
put-down b3 (1)
unstack b11 b4 (1)
put-down b11 (1)
unstack b13 b19 (1)
put-down b13 (1)
unstack b15 b21 (1)
stack b15 b4 (1)
unstack b19 b5 (1)
stack b19 b24 (1)
unstack b5 b7 (1)
stack b5 b17 (1)
unstack b7 b2 (1)
put-down b7 (1)
unstack b2 b8 (1)
stack b2 b21 (1)
unstack b6 b22 (1)
stack b6 b5 (1)
unstack b22 b9 (1)
put-down b22 (1)
pick-up b8 (1)
stack b8 b19 (1)
unstack b9 b14 (1)
stack b9 b11 (1)
unstack b15 b4 (1)
put-down b15 (1)
unstack b4 b10 (1)
stack b4 b6 (1)
unstack b10 b16 (1)
put-down b10 (1)
unstack b16 b12 (1)
stack b16 b7 (1)
pick-up b15 (1)
stack b15 b4 (1)
pick-up b14 (1)
stack b14 b13 (1)
pick-up b10 (1)
stack b10 b15 (1)
unstack b9 b11 (1)
put-down b9 (1)
pick-up b11 (1)
stack b11 b12 (1)
pick-up b9 (1)
stack b9 b11 (1)
unstack b8 b19 (1)
put-down b8 (1)
unstack b14 b13 (1)
put-down b14 (1)
unstack b19 b24 (1)
put-down b19 (1)
unstack b24 b20 (1)
put-down b24 (1)
unstack b20 b25 (1)
put-down b20 (1)
pick-up b25 (1)
stack b25 b9 (1)
pick-up b14 (1)
stack b14 b13 (1)
pick-up b24 (1)
stack b24 b20 (1)
pick-up b19 (1)
stack b19 b24 (1)
pick-up b8 (1)
stack b8 b19 (1)
unstack b10 b15 (1)
put-down b10 (1)
unstack b15 b4 (1)
put-down b15 (1)
unstack b4 b6 (1)
put-down b4 (1)
pick-up b15 (1)
stack b15 b4 (1)
pick-up b10 (1)
stack b10 b15 (1)
unstack b6 b5 (1)
put-down b6 (1)
unstack b14 b13 (1)
put-down b14 (1)
unstack b5 b17 (1)
put-down b5 (1)
unstack b17 b23 (1)
stack b17 b2 (1)
unstack b23 b18 (1)
put-down b23 (1)
unstack b18 b1 (1)
stack b18 b10 (1)
pick-up b1 (1)
stack b1 b16 (1)
pick-up b3 (1)
stack b3 b23 (1)
pick-up b13 (1)
stack b13 b18 (1)
pick-up b14 (1)
stack b14 b13 (1)
pick-up b5 (1)
stack b5 b17 (1)
pick-up b6 (1)
stack b6 b5 (1)
unstack b3 b23 (1)
put-down b3 (1)
pick-up b23 (1)
stack b23 b1 (1)
pick-up b3 (1)
stack b3 b23 (1)
unstack b14 b13 (1)
put-down b14 (1)
unstack b13 b18 (1)
put-down b13 (1)
unstack b18 b10 (1)
put-down b18 (1)
pick-up b13 (1)
stack b13 b18 (1)
pick-up b14 (1)
stack b14 b13 (1)
unstack b10 b15 (1)
put-down b10 (1)
unstack b15 b4 (1)
put-down b15 (1)
pick-up b10 (1)
stack b10 b15 (1)
pick-up b4 (1)
stack b4 b6 (1)
unstack b10 b15 (1)
put-down b10 (1)
pick-up b15 (1)
stack b15 b4 (1)
pick-up b10 (1)
stack b10 b15 (1)
unstack b14 b13 (1)
put-down b14 (1)
unstack b13 b18 (1)
put-down b13 (1)
pick-up b14 (1)
stack b14 b13 (1)
pick-up b18 (1)
stack b18 b10 (1)
unstack b14 b13 (1)
put-down b14 (1)
pick-up b13 (1)
stack b13 b18 (1)
pick-up b14 (1)
stack b14 b13 (1)
[t=0.0472895s, 27060 KB] Plan length: 142 step(s).
[t=0.0472895s, 27060 KB] Plan cost: 142
[t=0.0472895s, 27060 KB] Expanded 733 state(s).
[t=0.0472895s, 27060 KB] Reopened 0 state(s).
[t=0.0472895s, 27060 KB] Evaluated 734 state(s).
[t=0.0472895s, 27060 KB] Evaluations: 1468
[t=0.0472895s, 27060 KB] Generated 7538 state(s).
[t=0.0472895s, 27060 KB] Dead ends: 0 state(s).
[t=0.0472895s, 27060 KB] Number of registered states: 734
[t=0.0472895s, 27060 KB] Int hash set load factor: 734/1024 = 0.716797
[t=0.0472895s, 27060 KB] Int hash set resizes: 10
[t=0.0472895s, 27060 KB] Search time: 0.0233599s
[t=0.0472895s, 27060 KB] Total time: 0.0472895s
Solution found.
Peak memory: 27060 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.22s
