INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_28/bws_problem_28_44.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.000s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.016s wall-clock]
2550 relevant atoms
1708 auxiliary atoms
4258 final queue length
7455 total queue pushes
Completing instantiation... [0.030s CPU, 0.027s wall-clock]
Instantiating: [0.050s CPU, 0.045s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
29 uncovered facts
Choosing groups: [0.000s CPU, 0.002s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.009s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.002s wall-clock]
Translating task: [0.040s CPU, 0.047s wall-clock]
2324 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
56 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.020s wall-clock]
Reordering and filtering variables...
57 of 57 variables necessary.
29 of 57 mutex groups necessary.
1568 of 1568 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.010s wall-clock]
Translator variables: 57
Translator derived variables: 0
Translator facts: 870
Translator goal facts: 22
Translator mutex groups: 29
Translator total mutex groups size: 841
Translator operators: 1568
Translator axioms: 0
Translator task size: 13466
Translator peak memory: 40316 KB
Writing output... [0.010s CPU, 0.009s wall-clock]
Done! [0.150s CPU, 0.145s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.4925e-05s, 24488 KB] reading input...
[t=0.00535537s, 26076 KB] done reading input!
[t=0.00621575s, 26472 KB] Initializing landmark count heuristic...
[t=0.00624718s, 26472 KB] Generating landmark graph...
[t=0.00633136s, 26604 KB] Building a landmark graph with reasonable orders.
[t=0.00641577s, 26604 KB] Initializing Exploration...
[t=0.00684283s, 27016 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0268131s, 27676 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0269742s, 27676 KB] Landmarks generation time: 0.0206477s
[t=0.0269983s, 27676 KB] Discovered 117 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0270155s, 27676 KB] 426 edges
[t=0.0270259s, 27676 KB] approx. reasonable orders
[t=0.0273379s, 27676 KB] approx. obedient reasonable orders
[t=0.0273689s, 27676 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0273783s, 27676 KB] Landmarks generation time: 0.0211283s
[t=0.0273881s, 27676 KB] Discovered 117 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0273961s, 27676 KB] 428 edges
[t=0.0274068s, 27676 KB] Landmark graph generation time: 0.0211674s
[t=0.0274176s, 27676 KB] Landmark graph contains 117 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0274281s, 27676 KB] Landmark graph contains 428 orderings.
[t=0.0280262s, 27700 KB] Simplifying 6216 unary operators... done! [4704 unary operators]
[t=0.0296855s, 27700 KB] time to simplify: 0.00177755s
[t=0.0299185s, 27700 KB] Initializing additive heuristic...
[t=0.0299541s, 27700 KB] Initializing FF heuristic...
[t=0.0300968s, 27700 KB] Building successor generator...done!
[t=0.0305018s, 27700 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0305121s, 27700 KB] time for successor generation creation: 0.000361151s
[t=0.030528s, 27700 KB] Variables: 57
[t=0.0305383s, 27700 KB] FactPairs: 870
[t=0.0305501s, 27700 KB] Bytes per state: 24
[t=0.0306573s, 27700 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0306957s, 27700 KB] 55 initial landmarks, 22 goal landmarks
[t=0.0307642s, 27700 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 62
[t=0.0307746s, 27700 KB] New best heuristic value for ff(transform = adapt_costs(one)): 47
[t=0.0307836s, 27700 KB] g=0, 1 evaluated, 0 expanded
[t=0.0307984s, 27700 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 62
[t=0.0308073s, 27700 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 47
[t=0.0311346s, 27700 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 61
[t=0.0311455s, 27700 KB] g=2, 9 evaluated, 8 expanded
[t=0.0312288s, 27700 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 60
[t=0.0312387s, 27700 KB] New best heuristic value for ff(transform = adapt_costs(one)): 46
[t=0.0312467s, 27700 KB] g=2, 11 evaluated, 10 expanded
[t=0.0314395s, 27700 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.0314483s, 27700 KB] g=4, 16 evaluated, 15 expanded
[t=0.0314955s, 27700 KB] New best heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0315044s, 27700 KB] g=4, 17 evaluated, 16 expanded
[t=0.0319111s, 27700 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 58
[t=0.0319205s, 27700 KB] g=6, 28 evaluated, 27 expanded
[t=0.0321164s, 27700 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 57
[t=0.0321254s, 27700 KB] New best heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.0321335s, 27700 KB] g=6, 33 evaluated, 32 expanded
[t=0.0323285s, 27700 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0323376s, 27700 KB] g=8, 38 evaluated, 37 expanded
[t=0.0328338s, 27700 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0328451s, 27700 KB] g=10, 51 evaluated, 50 expanded
[t=0.0332265s, 27700 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0332379s, 27700 KB] g=12, 61 evaluated, 60 expanded
[t=0.0334427s, 27700 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0334598s, 27700 KB] g=10, 66 evaluated, 65 expanded
[t=0.0336153s, 27700 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0336258s, 27700 KB] g=11, 70 evaluated, 69 expanded
[t=0.0336731s, 27700 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0336822s, 27700 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0336908s, 27700 KB] g=12, 71 evaluated, 70 expanded
[t=0.0339203s, 27700 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0339304s, 27700 KB] g=14, 77 evaluated, 76 expanded
[t=0.0341993s, 27700 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0342126s, 27700 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0342216s, 27700 KB] g=16, 84 evaluated, 83 expanded
[t=0.0344975s, 27700 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.034512s, 27700 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0345223s, 27700 KB] g=18, 91 evaluated, 90 expanded
[t=0.0348269s, 27700 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0348387s, 27700 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0348522s, 27700 KB] g=20, 99 evaluated, 98 expanded
[t=0.0352281s, 27700 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0352491s, 27700 KB] g=20, 108 evaluated, 107 expanded
[t=0.0355897s, 27700 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0356038s, 27700 KB] g=23, 117 evaluated, 116 expanded
[t=0.0357042s, 27700 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0357153s, 27700 KB] g=24, 119 evaluated, 118 expanded
[t=0.0358361s, 27700 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0358472s, 27700 KB] g=22, 122 evaluated, 121 expanded
[t=0.0363432s, 27700 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0363583s, 27700 KB] g=26, 135 evaluated, 134 expanded
[t=0.0367099s, 27700 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0367195s, 27700 KB] g=27, 144 evaluated, 143 expanded
[t=0.0368055s, 27700 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0368144s, 27700 KB] g=28, 146 evaluated, 145 expanded
[t=0.0374161s, 27700 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0374263s, 27700 KB] g=30, 162 evaluated, 161 expanded
[t=0.0377649s, 27700 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0377758s, 27700 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0377838s, 27700 KB] g=32, 171 evaluated, 170 expanded
[t=0.038049s, 27700 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0380594s, 27700 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0380674s, 27700 KB] g=34, 178 evaluated, 177 expanded
[t=0.0398482s, 27700 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.039865s, 27700 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0398732s, 27700 KB] g=38, 227 evaluated, 226 expanded
[t=0.0401759s, 27700 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.040198s, 27700 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0402101s, 27700 KB] g=40, 234 evaluated, 233 expanded
[t=0.0418018s, 27700 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0418309s, 27700 KB] g=44, 270 evaluated, 269 expanded
[t=0.0420312s, 27700 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0420423s, 27700 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0420509s, 27700 KB] g=46, 275 evaluated, 274 expanded
[t=0.0442732s, 27700 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0442954s, 27700 KB] g=54, 334 evaluated, 333 expanded
[t=0.0449918s, 27700 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0450042s, 27700 KB] g=56, 353 evaluated, 352 expanded
[t=0.0457851s, 27700 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0457945s, 27700 KB] g=60, 375 evaluated, 374 expanded
[t=0.0459776s, 27700 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0459863s, 27700 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0459946s, 27700 KB] g=62, 380 evaluated, 379 expanded
[t=0.0471005s, 27700 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0471159s, 27700 KB] g=64, 410 evaluated, 409 expanded
[t=0.0529426s, 27700 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0530093s, 27700 KB] g=74, 567 evaluated, 566 expanded
[t=0.0531958s, 27700 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0532057s, 27700 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0532138s, 27700 KB] g=76, 572 evaluated, 571 expanded
[t=0.0541045s, 27700 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0541149s, 27700 KB] g=76, 597 evaluated, 596 expanded
[t=0.0543012s, 27700 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0543106s, 27700 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0543187s, 27700 KB] g=78, 602 evaluated, 601 expanded
[t=0.0597948s, 27700 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0598133s, 27700 KB] g=94, 750 evaluated, 749 expanded
[t=0.0600831s, 27700 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0601044s, 27700 KB] g=96, 756 evaluated, 755 expanded
[t=0.0603646s, 27700 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0603807s, 27700 KB] g=96, 761 evaluated, 760 expanded
[t=0.0606279s, 27700 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0606458s, 27700 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0606588s, 27700 KB] g=98, 767 evaluated, 766 expanded
[t=0.0609581s, 27700 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0609779s, 27700 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0609919s, 27700 KB] g=100, 772 evaluated, 771 expanded
[t=0.0612378s, 27700 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0612473s, 27700 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0612555s, 27700 KB] g=102, 778 evaluated, 777 expanded
[t=0.0614576s, 27700 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0614666s, 27700 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0614746s, 27700 KB] g=104, 784 evaluated, 783 expanded
[t=0.0616478s, 27700 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.061657s, 27700 KB] g=105, 789 evaluated, 788 expanded
[t=0.0617014s, 27700 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0617105s, 27700 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0617198s, 27700 KB] g=106, 790 evaluated, 789 expanded
[t=0.0626774s, 27700 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0626876s, 27700 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.062696s, 27700 KB] g=112, 819 evaluated, 818 expanded
[t=0.063181s, 27700 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0631922s, 27700 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0632007s, 27700 KB] g=118, 833 evaluated, 832 expanded
[t=0.0637574s, 27700 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0637675s, 27700 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0637782s, 27700 KB] g=126, 849 evaluated, 848 expanded
[t=0.0638533s, 27700 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.063862s, 27700 KB] g=126, 851 evaluated, 850 expanded
[t=0.0639697s, 27700 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0639783s, 27700 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0639861s, 27700 KB] g=128, 854 evaluated, 853 expanded
[t=0.0697311s, 27700 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0697795s, 27700 KB] g=162, 1035 evaluated, 1034 expanded
[t=0.0700555s, 27700 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.070067s, 27700 KB] g=166, 1044 evaluated, 1043 expanded
[t=0.0701926s, 27700 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.070223s, 27700 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0702368s, 27700 KB] g=168, 1047 evaluated, 1046 expanded
[t=0.0708174s, 27700 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0708894s, 27700 KB] g=180, 1065 evaluated, 1064 expanded
[t=0.0709783s, 27700 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0709938s, 27700 KB] g=184, 1069 evaluated, 1068 expanded
[t=0.0710174s, 27700 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0710279s, 27700 KB] g=185, 1070 evaluated, 1069 expanded
[t=0.0710463s, 27700 KB] Solution found!
[t=0.0710801s, 27700 KB] Actual search time: 0.0403819s
unstack b25 b11 (1)
stack b25 b14 (1)
unstack b11 b26 (1)
put-down b11 (1)
unstack b5 b20 (1)
stack b5 b26 (1)
unstack b15 b9 (1)
put-down b15 (1)
unstack b9 b19 (1)
stack b9 b20 (1)
unstack b19 b12 (1)
stack b19 b15 (1)
unstack b4 b13 (1)
put-down b4 (1)
unstack b13 b16 (1)
stack b13 b9 (1)
unstack b16 b17 (1)
put-down b16 (1)
unstack b17 b28 (1)
stack b17 b4 (1)
unstack b28 b21 (1)
put-down b28 (1)
unstack b21 b3 (1)
stack b21 b25 (1)
unstack b3 b24 (1)
put-down b3 (1)
unstack b24 b2 (1)
stack b24 b5 (1)
pick-up b2 (1)
stack b2 b11 (1)
pick-up b28 (1)
stack b28 b21 (1)
pick-up b3 (1)
stack b3 b2 (1)
unstack b17 b4 (1)
put-down b17 (1)
pick-up b4 (1)
stack b4 b16 (1)
pick-up b17 (1)
stack b17 b4 (1)
unstack b19 b15 (1)
put-down b19 (1)
pick-up b15 (1)
stack b15 b13 (1)
pick-up b19 (1)
stack b19 b15 (1)
unstack b24 b5 (1)
put-down b24 (1)
unstack b5 b26 (1)
put-down b5 (1)
unstack b26 b10 (1)
put-down b26 (1)
pick-up b5 (1)
stack b5 b26 (1)
pick-up b24 (1)
stack b24 b5 (1)
unstack b10 b7 (1)
put-down b10 (1)
unstack b12 b18 (1)
put-down b12 (1)
pick-up b18 (1)
stack b18 b10 (1)
pick-up b12 (1)
stack b12 b18 (1)
unstack b28 b21 (1)
put-down b28 (1)
unstack b21 b25 (1)
put-down b21 (1)
unstack b25 b14 (1)
put-down b25 (1)
pick-up b14 (1)
stack b14 b17 (1)
pick-up b25 (1)
stack b25 b14 (1)
pick-up b21 (1)
stack b21 b25 (1)
pick-up b28 (1)
stack b28 b21 (1)
unstack b19 b15 (1)
put-down b19 (1)
unstack b15 b13 (1)
put-down b15 (1)
pick-up b19 (1)
stack b19 b15 (1)
unstack b13 b9 (1)
put-down b13 (1)
unstack b9 b20 (1)
put-down b9 (1)
unstack b20 b1 (1)
put-down b20 (1)
unstack b1 b23 (1)
put-down b1 (1)
pick-up b13 (1)
stack b13 b9 (1)
unstack b23 b6 (1)
stack b23 b12 (1)
pick-up b20 (1)
stack b20 b23 (1)
unstack b6 b22 (1)
stack b6 b3 (1)
unstack b22 b27 (1)
put-down b22 (1)
unstack b27 b8 (1)
put-down b27 (1)
pick-up b8 (1)
stack b8 b6 (1)
unstack b13 b9 (1)
put-down b13 (1)
pick-up b9 (1)
stack b9 b20 (1)
pick-up b13 (1)
stack b13 b9 (1)
unstack b19 b15 (1)
put-down b19 (1)
pick-up b15 (1)
stack b15 b13 (1)
pick-up b19 (1)
stack b19 b15 (1)
unstack b24 b5 (1)
put-down b24 (1)
unstack b5 b26 (1)
put-down b5 (1)
pick-up b26 (1)
stack b26 b27 (1)
pick-up b5 (1)
stack b5 b26 (1)
pick-up b24 (1)
stack b24 b5 (1)
unstack b19 b15 (1)
put-down b19 (1)
unstack b15 b13 (1)
put-down b15 (1)
pick-up b19 (1)
stack b19 b15 (1)
unstack b13 b9 (1)
put-down b13 (1)
unstack b9 b20 (1)
put-down b9 (1)
pick-up b13 (1)
stack b13 b9 (1)
unstack b19 b15 (1)
put-down b19 (1)
pick-up b15 (1)
stack b15 b13 (1)
pick-up b19 (1)
stack b19 b15 (1)
unstack b20 b23 (1)
put-down b20 (1)
unstack b23 b12 (1)
put-down b23 (1)
pick-up b20 (1)
stack b20 b23 (1)
unstack b12 b18 (1)
put-down b12 (1)
unstack b18 b10 (1)
put-down b18 (1)
pick-up b10 (1)
stack b10 b1 (1)
pick-up b18 (1)
stack b18 b10 (1)
pick-up b12 (1)
stack b12 b18 (1)
unstack b20 b23 (1)
put-down b20 (1)
pick-up b23 (1)
stack b23 b12 (1)
pick-up b20 (1)
stack b20 b23 (1)
unstack b19 b15 (1)
put-down b19 (1)
unstack b15 b13 (1)
put-down b15 (1)
pick-up b19 (1)
stack b19 b15 (1)
unstack b13 b9 (1)
put-down b13 (1)
pick-up b9 (1)
stack b9 b20 (1)
pick-up b13 (1)
stack b13 b9 (1)
unstack b19 b15 (1)
put-down b19 (1)
pick-up b15 (1)
stack b15 b13 (1)
pick-up b19 (1)
stack b19 b15 (1)
[t=0.0710924s, 27700 KB] Plan length: 186 step(s).
[t=0.0710924s, 27700 KB] Plan cost: 186
[t=0.0710924s, 27700 KB] Expanded 1070 state(s).
[t=0.0710924s, 27700 KB] Reopened 0 state(s).
[t=0.0710924s, 27700 KB] Evaluated 1071 state(s).
[t=0.0710924s, 27700 KB] Evaluations: 2142
[t=0.0710924s, 27700 KB] Generated 9909 state(s).
[t=0.0710924s, 27700 KB] Dead ends: 0 state(s).
[t=0.0710924s, 27700 KB] Number of registered states: 1071
[t=0.0710924s, 27700 KB] Int hash set load factor: 1071/2048 = 0.522949
[t=0.0710924s, 27700 KB] Int hash set resizes: 11
[t=0.0710924s, 27700 KB] Search time: 0.0404357s
[t=0.0710924s, 27700 KB] Total time: 0.0710924s
Solution found.
Peak memory: 27700 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.27s
