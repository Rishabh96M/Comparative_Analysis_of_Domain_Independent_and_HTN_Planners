INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_32/bws_problem_32_86.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.021s wall-clock]
3298 relevant atoms
2208 auxiliary atoms
5506 final queue length
9671 total queue pushes
Completing instantiation... [0.040s CPU, 0.041s wall-clock]
Instantiating: [0.060s CPU, 0.063s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.002s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
33 uncovered facts
Choosing groups: [0.000s CPU, 0.002s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.010s CPU, 0.011s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.001s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.002s wall-clock]
Translating task: [0.060s CPU, 0.056s wall-clock]
3040 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
64 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.024s wall-clock]
Reordering and filtering variables...
65 of 65 variables necessary.
33 of 65 mutex groups necessary.
2048 of 2048 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.020s CPU, 0.013s wall-clock]
Translator variables: 65
Translator derived variables: 0
Translator facts: 1122
Translator goal facts: 27
Translator mutex groups: 33
Translator total mutex groups size: 1089
Translator operators: 2048
Translator axioms: 0
Translator task size: 17567
Translator peak memory: 42752 KB
Writing output... [0.010s CPU, 0.011s wall-clock]
Done! [0.180s CPU, 0.185s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=3.3362e-05s, 24488 KB] reading input...
[t=0.00704682s, 26784 KB] done reading input!
[t=0.00836572s, 27180 KB] Initializing landmark count heuristic...
[t=0.00840912s, 27180 KB] Generating landmark graph...
[t=0.00852211s, 27312 KB] Building a landmark graph with reasonable orders.
[t=0.00862417s, 27312 KB] Initializing Exploration...
[t=0.00924192s, 27768 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0403881s, 28824 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0405067s, 28824 KB] Landmarks generation time: 0.0319943s
[t=0.0405311s, 28824 KB] Discovered 142 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0405474s, 28824 KB] 902 edges
[t=0.0405577s, 28824 KB] approx. reasonable orders
[t=0.0442255s, 28824 KB] approx. obedient reasonable orders
[t=0.0443016s, 28824 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.044313s, 28824 KB] Landmarks generation time: 0.0359005s
[t=0.0443231s, 28824 KB] Discovered 142 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0443316s, 28824 KB] 932 edges
[t=0.0443397s, 28824 KB] Landmark graph generation time: 0.0359389s
[t=0.0443491s, 28824 KB] Landmark graph contains 142 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0443571s, 28824 KB] Landmark graph contains 932 orderings.
[t=0.0450321s, 28856 KB] Simplifying 8128 unary operators... done! [6144 unary operators]
[t=0.0470764s, 28856 KB] time to simplify: 0.00209128s
[t=0.0472488s, 28856 KB] Initializing additive heuristic...
[t=0.0472721s, 28856 KB] Initializing FF heuristic...
[t=0.0473748s, 28856 KB] Building successor generator...done!
[t=0.0479167s, 29048 KB] peak memory difference for successor generator creation: 192 KB
[t=0.0479278s, 29048 KB] time for successor generation creation: 0.000504013s
[t=0.0479738s, 29048 KB] Variables: 65
[t=0.0479835s, 29048 KB] FactPairs: 1122
[t=0.0479919s, 29048 KB] Bytes per state: 32
[t=0.0482638s, 29048 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0483282s, 29048 KB] 65 initial landmarks, 27 goal landmarks
[t=0.048465s, 29048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 77
[t=0.0484753s, 29048 KB] New best heuristic value for ff(transform = adapt_costs(one)): 57
[t=0.0484842s, 29048 KB] g=0, 1 evaluated, 0 expanded
[t=0.0485034s, 29048 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 77
[t=0.0485119s, 29048 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 57
[t=0.0486263s, 29048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 76
[t=0.0486359s, 29048 KB] g=1, 3 evaluated, 2 expanded
[t=0.0491321s, 29048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 75
[t=0.0491419s, 29048 KB] g=4, 13 evaluated, 12 expanded
[t=0.0493819s, 29048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 74
[t=0.049391s, 29048 KB] g=5, 18 evaluated, 17 expanded
[t=0.049448s, 29048 KB] New best heuristic value for ff(transform = adapt_costs(one)): 56
[t=0.0494566s, 29048 KB] g=4, 19 evaluated, 18 expanded
[t=0.050163s, 29048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 73
[t=0.0501751s, 29048 KB] g=8, 34 evaluated, 33 expanded
[t=0.0509535s, 29048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 72
[t=0.0509711s, 29048 KB] g=10, 50 evaluated, 49 expanded
[t=0.0512036s, 29048 KB] New best heuristic value for ff(transform = adapt_costs(one)): 55
[t=0.0512131s, 29048 KB] g=10, 55 evaluated, 54 expanded
[t=0.0518821s, 29048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 71
[t=0.0518915s, 29048 KB] g=12, 70 evaluated, 69 expanded
[t=0.0526611s, 29048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 70
[t=0.0526707s, 29048 KB] g=14, 87 evaluated, 86 expanded
[t=0.0535912s, 29048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 69
[t=0.0536069s, 29048 KB] g=16, 107 evaluated, 106 expanded
[t=0.054604s, 29048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 68
[t=0.0546234s, 29048 KB] g=18, 129 evaluated, 128 expanded
[t=0.0552424s, 29048 KB] New best heuristic value for ff(transform = adapt_costs(one)): 54
[t=0.0552516s, 29048 KB] g=20, 143 evaluated, 142 expanded
[t=0.055679s, 29048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 66
[t=0.0556943s, 29048 KB] New best heuristic value for ff(transform = adapt_costs(one)): 53
[t=0.055703s, 29048 KB] g=20, 152 evaluated, 151 expanded
[t=0.0562367s, 29048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 64
[t=0.056246s, 29048 KB] New best heuristic value for ff(transform = adapt_costs(one)): 51
[t=0.0562542s, 29048 KB] g=22, 164 evaluated, 163 expanded
[t=0.0567623s, 29048 KB] New best heuristic value for ff(transform = adapt_costs(one)): 50
[t=0.0567715s, 29048 KB] g=24, 175 evaluated, 174 expanded
[t=0.0581087s, 29048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 63
[t=0.058125s, 29048 KB] g=26, 204 evaluated, 203 expanded
[t=0.0592475s, 29048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 60
[t=0.059257s, 29048 KB] g=28, 228 evaluated, 227 expanded
[t=0.0601459s, 29048 KB] New best heuristic value for ff(transform = adapt_costs(one)): 49
[t=0.0601626s, 29048 KB] g=30, 247 evaluated, 246 expanded
[t=0.0602451s, 29048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.0602551s, 29048 KB] g=30, 248 evaluated, 247 expanded
[t=0.0613039s, 29048 KB] New best heuristic value for ff(transform = adapt_costs(one)): 47
[t=0.0613148s, 29048 KB] g=32, 270 evaluated, 269 expanded
[t=0.0614165s, 29048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 58
[t=0.0614257s, 29048 KB] g=32, 272 evaluated, 271 expanded
[t=0.0624739s, 29048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 57
[t=0.0624915s, 29048 KB] g=34, 295 evaluated, 294 expanded
[t=0.0635942s, 29048 KB] New best heuristic value for ff(transform = adapt_costs(one)): 46
[t=0.0636049s, 29048 KB] g=36, 319 evaluated, 318 expanded
[t=0.0637992s, 29048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0638092s, 29048 KB] g=36, 323 evaluated, 322 expanded
[t=0.0647269s, 29048 KB] New best heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0647431s, 29048 KB] g=38, 343 evaluated, 342 expanded
[t=0.0650919s, 29048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0651341s, 29048 KB] g=38, 350 evaluated, 349 expanded
[t=0.0655759s, 29048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0655934s, 29048 KB] g=39, 359 evaluated, 358 expanded
[t=0.0657s, 29048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0657092s, 29048 KB] g=40, 361 evaluated, 360 expanded
[t=0.0659926s, 29048 KB] New best heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.0660024s, 29048 KB] g=40, 367 evaluated, 366 expanded
[t=0.0669121s, 29048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0669273s, 29048 KB] g=42, 386 evaluated, 385 expanded
[t=0.0680514s, 29048 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0680712s, 29048 KB] g=44, 411 evaluated, 410 expanded
[t=0.0686648s, 29048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0686795s, 29048 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0686885s, 29048 KB] g=46, 423 evaluated, 422 expanded
[t=0.0692409s, 29048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.069251s, 29048 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0692592s, 29048 KB] g=48, 435 evaluated, 434 expanded
[t=0.0697834s, 29048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0697995s, 29048 KB] g=50, 446 evaluated, 445 expanded
[t=0.0699025s, 29048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0699136s, 29048 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0699218s, 29048 KB] g=50, 447 evaluated, 446 expanded
[t=0.070323s, 29048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.070333s, 29048 KB] g=52, 456 evaluated, 455 expanded
[t=0.0709398s, 29048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0709541s, 29048 KB] g=54, 469 evaluated, 468 expanded
[t=0.0713631s, 29048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0713722s, 29048 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0713801s, 29048 KB] g=56, 478 evaluated, 477 expanded
[t=0.0722266s, 29048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.072243s, 29048 KB] g=59, 496 evaluated, 495 expanded
[t=0.0723568s, 29048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.072372s, 29048 KB] g=60, 498 evaluated, 497 expanded
[t=0.0727934s, 29048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0728029s, 29048 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0728139s, 29048 KB] g=62, 507 evaluated, 506 expanded
[t=0.0733253s, 29048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0733358s, 29048 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0733448s, 29048 KB] g=64, 517 evaluated, 516 expanded
[t=0.0737615s, 29048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0737714s, 29048 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0737797s, 29048 KB] g=66, 526 evaluated, 525 expanded
[t=0.0741956s, 29048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0742046s, 29048 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0742126s, 29048 KB] g=68, 535 evaluated, 534 expanded
[t=0.0744632s, 29048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0744784s, 29048 KB] g=69, 540 evaluated, 539 expanded
[t=0.0745694s, 29048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0745833s, 29048 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0745914s, 29048 KB] g=70, 541 evaluated, 540 expanded
[t=0.0750013s, 29048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0750151s, 29048 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0750235s, 29048 KB] g=72, 550 evaluated, 549 expanded
[t=0.0754815s, 29048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0754907s, 29048 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0754986s, 29048 KB] g=74, 560 evaluated, 559 expanded
[t=0.0758678s, 29048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0758772s, 29048 KB] g=74, 568 evaluated, 567 expanded
[t=0.0762588s, 29048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0762696s, 29048 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0762784s, 29048 KB] g=76, 576 evaluated, 575 expanded
[t=0.0768842s, 29048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0769002s, 29048 KB] g=79, 589 evaluated, 588 expanded
[t=0.0769565s, 29048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0769654s, 29048 KB] g=80, 590 evaluated, 589 expanded
[t=0.0772944s, 29048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0773036s, 29048 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0773117s, 29048 KB] g=82, 597 evaluated, 596 expanded
[t=0.0789726s, 29048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0789869s, 29048 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0789951s, 29048 KB] g=86, 634 evaluated, 633 expanded
[t=0.0793328s, 29048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0793501s, 29048 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0793588s, 29048 KB] g=88, 641 evaluated, 640 expanded
[t=0.0811926s, 29048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0812211s, 29048 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0812307s, 29048 KB] g=94, 682 evaluated, 681 expanded
[t=0.0847115s, 29048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.084751s, 29048 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0847616s, 29048 KB] g=102, 752 evaluated, 751 expanded
[t=0.0849564s, 29048 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0849661s, 29048 KB] g=102, 756 evaluated, 755 expanded
[t=0.0852352s, 29048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0852486s, 29048 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0852575s, 29048 KB] g=104, 761 evaluated, 760 expanded
[t=0.0910124s, 29048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0910673s, 29048 KB] g=118, 861 evaluated, 860 expanded
[t=0.0917837s, 29048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0917972s, 29048 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0918058s, 29048 KB] g=122, 876 evaluated, 875 expanded
[t=0.0920497s, 29048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0920665s, 29048 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0920757s, 29048 KB] g=124, 881 evaluated, 880 expanded
[t=0.0927787s, 29048 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0927895s, 29048 KB] g=128, 897 evaluated, 896 expanded
[t=0.0929765s, 29048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.092999s, 29048 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0930075s, 29048 KB] g=130, 901 evaluated, 900 expanded
[t=0.094899s, 29048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0949246s, 29048 KB] g=142, 943 evaluated, 942 expanded
[t=0.0952574s, 29048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0952701s, 29048 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0952866s, 29048 KB] g=148, 950 evaluated, 949 expanded
[t=0.111354s, 29048 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.111404s, 29048 KB] g=182, 1342 evaluated, 1341 expanded
[t=0.111783s, 29048 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.111794s, 29048 KB] g=186, 1351 evaluated, 1350 expanded
[t=0.111918s, 29048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.11193s, 29048 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.111939s, 29048 KB] g=188, 1354 evaluated, 1353 expanded
[t=0.114325s, 29048 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.114345s, 29048 KB] g=210, 1426 evaluated, 1425 expanded
[t=0.11444s, 29048 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.11445s, 29048 KB] g=212, 1429 evaluated, 1428 expanded
[t=0.114709s, 29048 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.114719s, 29048 KB] g=220, 1440 evaluated, 1439 expanded
[t=0.114742s, 29048 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.114752s, 29048 KB] g=221, 1441 evaluated, 1440 expanded
[t=0.114771s, 29048 KB] Solution found!
[t=0.114785s, 29048 KB] Actual search time: 0.0664508s
unstack b17 b27 (1)
put-down b17 (1)
unstack b21 b28 (1)
put-down b21 (1)
unstack b28 b14 (1)
put-down b28 (1)
unstack b27 b16 (1)
put-down b27 (1)
unstack b14 b20 (1)
put-down b14 (1)
unstack b20 b13 (1)
put-down b20 (1)
unstack b13 b9 (1)
put-down b13 (1)
unstack b9 b22 (1)
put-down b9 (1)
unstack b16 b1 (1)
put-down b16 (1)
pick-up b21 (1)
stack b21 b16 (1)
pick-up b1 (1)
stack b1 b21 (1)
unstack b22 b29 (1)
put-down b22 (1)
unstack b29 b30 (1)
put-down b29 (1)
unstack b30 b11 (1)
stack b30 b9 (1)
unstack b11 b31 (1)
stack b11 b12 (1)
pick-up b22 (1)
stack b22 b29 (1)
unstack b31 b15 (1)
put-down b31 (1)
unstack b15 b6 (1)
stack b15 b31 (1)
pick-up b27 (1)
stack b27 b15 (1)
unstack b6 b19 (1)
stack b6 b13 (1)
unstack b19 b18 (1)
put-down b19 (1)
unstack b18 b10 (1)
stack b18 b22 (1)
unstack b10 b23 (1)
put-down b10 (1)
pick-up b17 (1)
stack b17 b10 (1)
pick-up b23 (1)
stack b23 b20 (1)
unstack b11 b12 (1)
put-down b11 (1)
pick-up b12 (1)
stack b12 b27 (1)
pick-up b11 (1)
stack b11 b12 (1)
unstack b32 b7 (1)
put-down b32 (1)
unstack b7 b24 (1)
stack b7 b3 (1)
unstack b24 b2 (1)
stack b24 b14 (1)
unstack b2 b5 (1)
stack b2 b32 (1)
unstack b5 b8 (1)
stack b5 b19 (1)
unstack b8 b4 (1)
stack b8 b30 (1)
unstack b4 b25 (1)
stack b4 b6 (1)
unstack b25 b26 (1)
put-down b25 (1)
pick-up b26 (1)
stack b26 b23 (1)
pick-up b28 (1)
stack b28 b26 (1)
unstack b7 b3 (1)
put-down b7 (1)
pick-up b3 (1)
stack b3 b8 (1)
pick-up b7 (1)
stack b7 b3 (1)
unstack b5 b19 (1)
put-down b5 (1)
pick-up b19 (1)
stack b19 b25 (1)
pick-up b5 (1)
stack b5 b19 (1)
unstack b2 b32 (1)
put-down b2 (1)
pick-up b32 (1)
stack b32 b7 (1)
pick-up b2 (1)
stack b2 b32 (1)
unstack b4 b6 (1)
put-down b4 (1)
unstack b6 b13 (1)
put-down b6 (1)
pick-up b13 (1)
stack b13 b24 (1)
pick-up b6 (1)
stack b6 b13 (1)
pick-up b4 (1)
stack b4 b6 (1)
unstack b11 b12 (1)
put-down b11 (1)
unstack b12 b27 (1)
put-down b12 (1)
pick-up b11 (1)
stack b11 b12 (1)
unstack b27 b15 (1)
put-down b27 (1)
unstack b15 b31 (1)
put-down b15 (1)
pick-up b27 (1)
stack b27 b15 (1)
pick-up b31 (1)
stack b31 b5 (1)
unstack b27 b15 (1)
put-down b27 (1)
pick-up b15 (1)
stack b15 b31 (1)
pick-up b27 (1)
stack b27 b15 (1)
unstack b11 b12 (1)
put-down b11 (1)
pick-up b12 (1)
stack b12 b27 (1)
pick-up b11 (1)
stack b11 b12 (1)
unstack b28 b26 (1)
put-down b28 (1)
unstack b26 b23 (1)
put-down b26 (1)
pick-up b28 (1)
stack b28 b26 (1)
unstack b23 b20 (1)
put-down b23 (1)
pick-up b20 (1)
stack b20 b2 (1)
unstack b28 b26 (1)
put-down b28 (1)
pick-up b26 (1)
stack b26 b23 (1)
pick-up b28 (1)
stack b28 b26 (1)
unstack b20 b2 (1)
put-down b20 (1)
unstack b2 b32 (1)
put-down b2 (1)
unstack b32 b7 (1)
put-down b32 (1)
pick-up b2 (1)
stack b2 b32 (1)
pick-up b20 (1)
stack b20 b2 (1)
unstack b28 b26 (1)
put-down b28 (1)
unstack b26 b23 (1)
put-down b26 (1)
pick-up b23 (1)
stack b23 b20 (1)
pick-up b26 (1)
stack b26 b23 (1)
pick-up b28 (1)
stack b28 b26 (1)
unstack b7 b3 (1)
put-down b7 (1)
unstack b3 b8 (1)
put-down b3 (1)
pick-up b7 (1)
stack b7 b3 (1)
unstack b8 b30 (1)
put-down b8 (1)
unstack b30 b9 (1)
put-down b30 (1)
pick-up b9 (1)
stack b9 b11 (1)
pick-up b30 (1)
stack b30 b9 (1)
pick-up b8 (1)
stack b8 b30 (1)
unstack b7 b3 (1)
put-down b7 (1)
pick-up b3 (1)
stack b3 b8 (1)
pick-up b7 (1)
stack b7 b3 (1)
unstack b28 b26 (1)
put-down b28 (1)
unstack b26 b23 (1)
put-down b26 (1)
unstack b23 b20 (1)
put-down b23 (1)
pick-up b26 (1)
stack b26 b23 (1)
pick-up b28 (1)
stack b28 b26 (1)
unstack b20 b2 (1)
put-down b20 (1)
unstack b2 b32 (1)
put-down b2 (1)
pick-up b20 (1)
stack b20 b2 (1)
pick-up b32 (1)
stack b32 b7 (1)
unstack b20 b2 (1)
put-down b20 (1)
pick-up b2 (1)
stack b2 b32 (1)
pick-up b20 (1)
stack b20 b2 (1)
unstack b28 b26 (1)
put-down b28 (1)
unstack b26 b23 (1)
put-down b26 (1)
pick-up b23 (1)
stack b23 b20 (1)
pick-up b26 (1)
stack b26 b23 (1)
pick-up b28 (1)
stack b28 b26 (1)
[t=0.114796s, 29048 KB] Plan length: 222 step(s).
[t=0.114796s, 29048 KB] Plan cost: 222
[t=0.114796s, 29048 KB] Expanded 1441 state(s).
[t=0.114796s, 29048 KB] Reopened 0 state(s).
[t=0.114796s, 29048 KB] Evaluated 1442 state(s).
[t=0.114796s, 29048 KB] Evaluations: 2884
[t=0.114796s, 29048 KB] Generated 16379 state(s).
[t=0.114796s, 29048 KB] Dead ends: 0 state(s).
[t=0.114796s, 29048 KB] Number of registered states: 1442
[t=0.114796s, 29048 KB] Int hash set load factor: 1442/2048 = 0.704102
[t=0.114796s, 29048 KB] Int hash set resizes: 11
[t=0.114796s, 29048 KB] Search time: 0.0665325s
[t=0.114796s, 29048 KB] Total time: 0.114796s
Solution found.
Peak memory: 29048 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.35s
