INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_32/bws_problem_32_25.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.030s CPU, 0.023s wall-clock]
3298 relevant atoms
2208 auxiliary atoms
5506 final queue length
9669 total queue pushes
Completing instantiation... [0.040s CPU, 0.044s wall-clock]
Instantiating: [0.070s CPU, 0.069s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.002s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
33 uncovered facts
Choosing groups: [0.010s CPU, 0.002s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.010s CPU, 0.012s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.001s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.002s wall-clock]
Translating task: [0.060s CPU, 0.054s wall-clock]
3040 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
64 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.026s wall-clock]
Reordering and filtering variables...
65 of 65 variables necessary.
33 of 65 mutex groups necessary.
2048 of 2048 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.014s wall-clock]
Translator variables: 65
Translator derived variables: 0
Translator facts: 1122
Translator goal facts: 27
Translator mutex groups: 33
Translator total mutex groups size: 1089
Translator operators: 2048
Translator axioms: 0
Translator task size: 17567
Translator peak memory: 42624 KB
Writing output... [0.010s CPU, 0.010s wall-clock]
Done! [0.190s CPU, 0.193s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=1.8373e-05s, 24488 KB] reading input...
[t=0.00653751s, 26784 KB] done reading input!
[t=0.00769078s, 27180 KB] Initializing landmark count heuristic...
[t=0.00773315s, 27180 KB] Generating landmark graph...
[t=0.00784717s, 27312 KB] Building a landmark graph with reasonable orders.
[t=0.00794193s, 27312 KB] Initializing Exploration...
[t=0.0085061s, 27768 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0421854s, 29088 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0423179s, 29088 KB] Landmarks generation time: 0.0344846s
[t=0.0423464s, 29088 KB] Discovered 148 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.04237s, 29088 KB] 1163 edges
[t=0.0423806s, 29088 KB] approx. reasonable orders
[t=0.052545s, 29088 KB] approx. obedient reasonable orders
[t=0.0529736s, 29088 KB] Removed 2 reasonable or obedient reasonable orders
[t=0.0529915s, 29088 KB] Landmarks generation time: 0.0452585s
[t=0.0530047s, 29088 KB] Discovered 148 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0530139s, 29088 KB] 1290 edges
[t=0.0530236s, 29088 KB] Landmark graph generation time: 0.0452978s
[t=0.0530325s, 29088 KB] Landmark graph contains 148 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.053041s, 29088 KB] Landmark graph contains 1290 orderings.
[t=0.0539808s, 29120 KB] Simplifying 8128 unary operators... done! [6144 unary operators]
[t=0.0560412s, 29120 KB] time to simplify: 0.00209265s
[t=0.0561882s, 29120 KB] Initializing additive heuristic...
[t=0.0562086s, 29120 KB] Initializing FF heuristic...
[t=0.0562614s, 29120 KB] Building successor generator...done!
[t=0.0566429s, 29308 KB] peak memory difference for successor generator creation: 188 KB
[t=0.0566524s, 29308 KB] time for successor generation creation: 0.000352814s
[t=0.0566662s, 29308 KB] Variables: 65
[t=0.0566745s, 29308 KB] FactPairs: 1122
[t=0.0566825s, 29308 KB] Bytes per state: 32
[t=0.05679s, 29308 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0568347s, 29308 KB] 65 initial landmarks, 27 goal landmarks
[t=0.0569256s, 29308 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 83
[t=0.0569366s, 29308 KB] New best heuristic value for ff(transform = adapt_costs(one)): 59
[t=0.0569458s, 29308 KB] g=0, 1 evaluated, 0 expanded
[t=0.0569605s, 29308 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 83
[t=0.0569695s, 29308 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 59
[t=0.0571858s, 29308 KB] New best heuristic value for ff(transform = adapt_costs(one)): 58
[t=0.0571955s, 29308 KB] g=2, 5 evaluated, 4 expanded
[t=0.0572558s, 29308 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 82
[t=0.0572651s, 29308 KB] g=2, 6 evaluated, 5 expanded
[t=0.0576074s, 29308 KB] New best heuristic value for ff(transform = adapt_costs(one)): 57
[t=0.0576184s, 29308 KB] g=4, 13 evaluated, 12 expanded
[t=0.0576766s, 29308 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 81
[t=0.0576859s, 29308 KB] g=4, 14 evaluated, 13 expanded
[t=0.0581744s, 29308 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 80
[t=0.058187s, 29308 KB] g=6, 24 evaluated, 23 expanded
[t=0.0588196s, 29308 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 79
[t=0.058836s, 29308 KB] g=8, 36 evaluated, 35 expanded
[t=0.0595467s, 29308 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 78
[t=0.0595723s, 29308 KB] g=10, 48 evaluated, 47 expanded
[t=0.0603221s, 29308 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 77
[t=0.0603351s, 29308 KB] g=12, 63 evaluated, 62 expanded
[t=0.0608721s, 29308 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 76
[t=0.0608832s, 29308 KB] g=13, 74 evaluated, 73 expanded
[t=0.0615116s, 29308 KB] New best heuristic value for ff(transform = adapt_costs(one)): 56
[t=0.0615214s, 29308 KB] g=16, 87 evaluated, 86 expanded
[t=0.0616674s, 29308 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 75
[t=0.0616833s, 29308 KB] g=15, 90 evaluated, 89 expanded
[t=0.062579s, 29308 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 74
[t=0.0625974s, 29308 KB] g=18, 108 evaluated, 107 expanded
[t=0.0637302s, 29308 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 73
[t=0.0637448s, 29308 KB] g=20, 129 evaluated, 128 expanded
[t=0.0650506s, 29308 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 72
[t=0.0650733s, 29308 KB] g=22, 154 evaluated, 153 expanded
[t=0.0664939s, 29308 KB] New best heuristic value for ff(transform = adapt_costs(one)): 55
[t=0.0665126s, 29308 KB] g=20, 182 evaluated, 181 expanded
[t=0.0667277s, 29308 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 71
[t=0.0667462s, 29308 KB] g=24, 186 evaluated, 185 expanded
[t=0.0678835s, 29308 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 70
[t=0.0679071s, 29308 KB] g=26, 209 evaluated, 208 expanded
[t=0.0695008s, 29308 KB] New best heuristic value for ff(transform = adapt_costs(one)): 54
[t=0.0695387s, 29308 KB] g=24, 242 evaluated, 241 expanded
[t=0.0704881s, 29308 KB] New best heuristic value for ff(transform = adapt_costs(one)): 53
[t=0.0705028s, 29308 KB] g=26, 260 evaluated, 259 expanded
[t=0.0708907s, 29308 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 69
[t=0.0709028s, 29308 KB] g=28, 268 evaluated, 267 expanded
[t=0.071497s, 29308 KB] New best heuristic value for ff(transform = adapt_costs(one)): 52
[t=0.071518s, 29308 KB] g=28, 279 evaluated, 278 expanded
[t=0.0722564s, 29308 KB] New best heuristic value for ff(transform = adapt_costs(one)): 50
[t=0.072278s, 29308 KB] g=30, 294 evaluated, 293 expanded
[t=0.0726505s, 29308 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 68
[t=0.0726704s, 29308 KB] g=30, 301 evaluated, 300 expanded
[t=0.0739282s, 29308 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 67
[t=0.0739507s, 29308 KB] g=32, 326 evaluated, 325 expanded
[t=0.0760263s, 29308 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 66
[t=0.0760594s, 29308 KB] g=34, 365 evaluated, 364 expanded
[t=0.077573s, 29308 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 63
[t=0.077585s, 29308 KB] g=36, 396 evaluated, 395 expanded
[t=0.0776495s, 29308 KB] New best heuristic value for ff(transform = adapt_costs(one)): 49
[t=0.0776595s, 29308 KB] g=36, 397 evaluated, 396 expanded
[t=0.0790505s, 29308 KB] New best heuristic value for ff(transform = adapt_costs(one)): 48
[t=0.079079s, 29308 KB] g=40, 426 evaluated, 425 expanded
[t=0.0793879s, 29308 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 62
[t=0.079399s, 29308 KB] g=38, 432 evaluated, 431 expanded
[t=0.0809805s, 29308 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 61
[t=0.0809976s, 29308 KB] g=40, 464 evaluated, 463 expanded
[t=0.081679s, 29308 KB] New best heuristic value for ff(transform = adapt_costs(one)): 47
[t=0.0816951s, 29308 KB] g=46, 477 evaluated, 476 expanded
[t=0.0826237s, 29308 KB] New best heuristic value for ff(transform = adapt_costs(one)): 46
[t=0.0826409s, 29308 KB] g=48, 496 evaluated, 495 expanded
[t=0.0829411s, 29308 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 60
[t=0.082965s, 29308 KB] g=42, 501 evaluated, 500 expanded
[t=0.0837303s, 29308 KB] New best heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.083756s, 29308 KB] g=50, 516 evaluated, 515 expanded
[t=0.0847106s, 29308 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0847345s, 29308 KB] g=52, 535 evaluated, 534 expanded
[t=0.0849017s, 29308 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 58
[t=0.0849146s, 29308 KB] g=44, 538 evaluated, 537 expanded
[t=0.0857273s, 29308 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0857624s, 29308 KB] g=54, 554 evaluated, 553 expanded
[t=0.0867564s, 29308 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0867698s, 29308 KB] g=56, 574 evaluated, 573 expanded
[t=0.0869318s, 29308 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 57
[t=0.0869422s, 29308 KB] g=46, 577 evaluated, 576 expanded
[t=0.0876941s, 29308 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0877055s, 29308 KB] g=47, 593 evaluated, 592 expanded
[t=0.090155s, 29308 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0902235s, 29308 KB] g=50, 642 evaluated, 641 expanded
[t=0.0919104s, 29308 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0919579s, 29308 KB] g=52, 672 evaluated, 671 expanded
[t=0.0937156s, 29308 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0937411s, 29308 KB] g=54, 707 evaluated, 706 expanded
[t=0.0965297s, 29308 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0965526s, 29308 KB] g=56, 766 evaluated, 765 expanded
[t=0.0992203s, 29308 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0992506s, 29308 KB] g=58, 821 evaluated, 820 expanded
[t=0.100537s, 29308 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.100569s, 29308 KB] g=64, 848 evaluated, 847 expanded
[t=0.101211s, 29308 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.101227s, 29308 KB] g=60, 861 evaluated, 860 expanded
[t=0.103256s, 29308 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.10329s, 29308 KB] g=70, 904 evaluated, 903 expanded
[t=0.10346s, 29308 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.103472s, 29308 KB] g=62, 907 evaluated, 906 expanded
[t=0.104299s, 29308 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.104319s, 29308 KB] g=72, 924 evaluated, 923 expanded
[t=0.10525s, 29308 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.105277s, 29308 KB] g=74, 943 evaluated, 942 expanded
[t=0.105478s, 29308 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.105489s, 29308 KB] g=64, 947 evaluated, 946 expanded
[t=0.106239s, 29308 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.10626s, 29308 KB] g=76, 962 evaluated, 961 expanded
[t=0.107203s, 29308 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.107228s, 29308 KB] g=78, 980 evaluated, 979 expanded
[t=0.108276s, 29308 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.108294s, 29308 KB] g=66, 1001 evaluated, 1000 expanded
[t=0.110161s, 29308 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.110184s, 29308 KB] g=68, 1037 evaluated, 1036 expanded
[t=0.111001s, 29308 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.111015s, 29308 KB] g=82, 1054 evaluated, 1053 expanded
[t=0.111678s, 29308 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.111692s, 29308 KB] g=84, 1068 evaluated, 1067 expanded
[t=0.112741s, 29308 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.112767s, 29308 KB] g=70, 1088 evaluated, 1087 expanded
[t=0.114945s, 29308 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.114966s, 29308 KB] g=88, 1132 evaluated, 1131 expanded
[t=0.115489s, 29308 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.115499s, 29308 KB] g=90, 1143 evaluated, 1142 expanded
[t=0.118606s, 29308 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.118625s, 29308 KB] g=96, 1209 evaluated, 1208 expanded
[t=0.160142s, 29308 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.160199s, 29308 KB] g=114, 2054 evaluated, 2053 expanded
[t=0.160667s, 29308 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.16068s, 29308 KB] g=116, 2064 evaluated, 2063 expanded
[t=0.161079s, 29308 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.161089s, 29308 KB] g=118, 2073 evaluated, 2072 expanded
[t=0.161479s, 29308 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.161489s, 29308 KB] g=120, 2082 evaluated, 2081 expanded
[t=0.161925s, 29308 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.161943s, 29308 KB] g=122, 2090 evaluated, 2089 expanded
[t=0.162299s, 29308 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.16231s, 29308 KB] g=124, 2098 evaluated, 2097 expanded
[t=0.16262s, 29308 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.16263s, 29308 KB] g=126, 2105 evaluated, 2104 expanded
[t=0.167916s, 29308 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.167987s, 29308 KB] g=134, 2223 evaluated, 2222 expanded
[t=0.168344s, 29308 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.168357s, 29308 KB] g=136, 2231 evaluated, 2230 expanded
[t=0.171409s, 29308 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.171437s, 29308 KB] g=144, 2298 evaluated, 2297 expanded
[t=0.171715s, 29308 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.171732s, 29308 KB] g=146, 2304 evaluated, 2303 expanded
[t=0.174755s, 29308 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.174776s, 29308 KB] g=162, 2377 evaluated, 2376 expanded
[t=0.175583s, 29308 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.175594s, 29308 KB] g=170, 2398 evaluated, 2397 expanded
[t=0.175973s, 29308 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.175983s, 29308 KB] g=174, 2408 evaluated, 2407 expanded
[t=0.176007s, 29308 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.176017s, 29308 KB] g=175, 2409 evaluated, 2408 expanded
[t=0.176082s, 29308 KB] Solution found!
[t=0.176098s, 29308 KB] Actual search time: 0.119259s
unstack b1 b14 (1)
stack b1 b22 (1)
unstack b23 b3 (1)
stack b23 b14 (1)
unstack b3 b9 (1)
put-down b3 (1)
unstack b9 b10 (1)
put-down b9 (1)
unstack b10 b5 (1)
put-down b10 (1)
unstack b5 b32 (1)
put-down b5 (1)
unstack b32 b4 (1)
put-down b32 (1)
unstack b4 b17 (1)
put-down b4 (1)
pick-up b3 (1)
stack b3 b4 (1)
unstack b17 b26 (1)
put-down b17 (1)
unstack b26 b13 (1)
put-down b26 (1)
unstack b13 b8 (1)
put-down b13 (1)
pick-up b10 (1)
stack b10 b8 (1)
pick-up b5 (1)
stack b5 b17 (1)
pick-up b9 (1)
stack b9 b13 (1)
unstack b10 b8 (1)
put-down b10 (1)
unstack b8 b20 (1)
stack b8 b1 (1)
pick-up b10 (1)
stack b10 b8 (1)
unstack b20 b18 (1)
put-down b20 (1)
unstack b18 b28 (1)
put-down b18 (1)
unstack b28 b7 (1)
put-down b28 (1)
unstack b7 b12 (1)
put-down b7 (1)
unstack b12 b27 (1)
stack b12 b23 (1)
unstack b27 b21 (1)
put-down b27 (1)
unstack b21 b15 (1)
stack b21 b10 (1)
unstack b15 b30 (1)
stack b15 b9 (1)
pick-up b20 (1)
stack b20 b15 (1)
pick-up b7 (1)
stack b7 b21 (1)
unstack b12 b23 (1)
put-down b12 (1)
unstack b23 b14 (1)
put-down b23 (1)
pick-up b12 (1)
stack b12 b23 (1)
unstack b14 b31 (1)
stack b14 b27 (1)
unstack b31 b24 (1)
put-down b31 (1)
unstack b24 b6 (1)
put-down b24 (1)
unstack b6 b25 (1)
stack b6 b20 (1)
unstack b25 b2 (1)
stack b25 b28 (1)
pick-up b2 (1)
stack b2 b18 (1)
pick-up b30 (1)
stack b30 b2 (1)
pick-up b32 (1)
stack b32 b25 (1)
unstack b12 b23 (1)
put-down b12 (1)
pick-up b23 (1)
stack b23 b14 (1)
pick-up b12 (1)
stack b12 b23 (1)
unstack b3 b4 (1)
put-down b3 (1)
pick-up b4 (1)
stack b4 b6 (1)
pick-up b3 (1)
stack b3 b4 (1)
unstack b5 b17 (1)
put-down b5 (1)
pick-up b17 (1)
stack b17 b31 (1)
pick-up b5 (1)
stack b5 b17 (1)
unstack b7 b21 (1)
put-down b7 (1)
unstack b21 b10 (1)
put-down b21 (1)
unstack b10 b8 (1)
put-down b10 (1)
pick-up b21 (1)
stack b21 b10 (1)
pick-up b7 (1)
stack b7 b21 (1)
unstack b8 b1 (1)
put-down b8 (1)
unstack b1 b22 (1)
put-down b1 (1)
unstack b22 b19 (1)
stack b22 b12 (1)
pick-up b1 (1)
stack b1 b22 (1)
unstack b19 b11 (1)
stack b19 b7 (1)
unstack b11 b29 (1)
put-down b11 (1)
pick-up b24 (1)
stack b24 b19 (1)
unstack b29 b16 (1)
stack b29 b3 (1)
pick-up b16 (1)
stack b16 b30 (1)
pick-up b8 (1)
stack b8 b1 (1)
unstack b32 b25 (1)
put-down b32 (1)
unstack b25 b28 (1)
put-down b25 (1)
pick-up b28 (1)
stack b28 b11 (1)
pick-up b25 (1)
stack b25 b28 (1)
pick-up b32 (1)
stack b32 b25 (1)
unstack b5 b17 (1)
put-down b5 (1)
unstack b17 b31 (1)
put-down b17 (1)
pick-up b31 (1)
stack b31 b29 (1)
pick-up b17 (1)
stack b17 b31 (1)
pick-up b5 (1)
stack b5 b17 (1)
unstack b24 b19 (1)
put-down b24 (1)
unstack b19 b7 (1)
put-down b19 (1)
unstack b7 b21 (1)
put-down b7 (1)
pick-up b19 (1)
stack b19 b7 (1)
pick-up b24 (1)
stack b24 b19 (1)
unstack b21 b10 (1)
put-down b21 (1)
pick-up b10 (1)
stack b10 b8 (1)
pick-up b21 (1)
stack b21 b10 (1)
unstack b24 b19 (1)
put-down b24 (1)
unstack b19 b7 (1)
put-down b19 (1)
pick-up b24 (1)
stack b24 b19 (1)
pick-up b7 (1)
stack b7 b21 (1)
unstack b24 b19 (1)
put-down b24 (1)
pick-up b19 (1)
stack b19 b7 (1)
pick-up b24 (1)
stack b24 b19 (1)
[t=0.176108s, 29308 KB] Plan length: 176 step(s).
[t=0.176108s, 29308 KB] Plan cost: 176
[t=0.176108s, 29308 KB] Expanded 2410 state(s).
[t=0.176108s, 29308 KB] Reopened 0 state(s).
[t=0.176108s, 29308 KB] Evaluated 2411 state(s).
[t=0.176108s, 29308 KB] Evaluations: 4822
[t=0.176108s, 29308 KB] Generated 34510 state(s).
[t=0.176108s, 29308 KB] Dead ends: 0 state(s).
[t=0.176108s, 29308 KB] Number of registered states: 2411
[t=0.176108s, 29308 KB] Int hash set load factor: 2411/4096 = 0.588623
[t=0.176108s, 29308 KB] Int hash set resizes: 12
[t=0.176108s, 29308 KB] Search time: 0.119319s
[t=0.176108s, 29308 KB] Total time: 0.176108s
Solution found.
Peak memory: 29308 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.42s
