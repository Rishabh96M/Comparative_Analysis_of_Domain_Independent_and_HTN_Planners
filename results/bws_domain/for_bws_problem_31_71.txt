INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_31/bws_problem_31_71.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.000s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.020s wall-clock]
3102 relevant atoms
2077 auxiliary atoms
5179 final queue length
9092 total queue pushes
Completing instantiation... [0.030s CPU, 0.032s wall-clock]
Instantiating: [0.050s CPU, 0.054s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.002s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
32 uncovered facts
Choosing groups: [0.000s CPU, 0.003s wall-clock]
Building translation key... [0.010s CPU, 0.001s wall-clock]
Computing fact groups: [0.020s CPU, 0.012s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.005s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.001s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.002s wall-clock]
Translating task: [0.050s CPU, 0.052s wall-clock]
2852 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
62 propositions removed
Detecting unreachable propositions: [0.040s CPU, 0.025s wall-clock]
Reordering and filtering variables...
63 of 63 variables necessary.
32 of 63 mutex groups necessary.
1922 of 1922 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.013s wall-clock]
Translator variables: 63
Translator derived variables: 0
Translator facts: 1056
Translator goal facts: 26
Translator mutex groups: 32
Translator total mutex groups size: 1024
Translator operators: 1922
Translator axioms: 0
Translator task size: 16491
Translator peak memory: 42104 KB
Writing output... [0.010s CPU, 0.010s wall-clock]
Done! [0.180s CPU, 0.178s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=1.897e-05s, 24488 KB] reading input...
[t=0.00562115s, 26640 KB] done reading input!
[t=0.00656636s, 26904 KB] Initializing landmark count heuristic...
[t=0.00659742s, 26904 KB] Generating landmark graph...
[t=0.00670903s, 27036 KB] Building a landmark graph with reasonable orders.
[t=0.0068005s, 27172 KB] Initializing Exploration...
[t=0.00734796s, 27620 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.040215s, 28404 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0403337s, 28404 KB] Landmarks generation time: 0.0336387s
[t=0.0403631s, 28404 KB] Discovered 134 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0403844s, 28404 KB] 537 edges
[t=0.040399s, 28404 KB] approx. reasonable orders
[t=0.0416664s, 28404 KB] approx. obedient reasonable orders
[t=0.0417257s, 28404 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0417562s, 28404 KB] Landmarks generation time: 0.0351604s
[t=0.0417716s, 28404 KB] Discovered 134 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0417841s, 28404 KB] 543 edges
[t=0.0417995s, 28404 KB] Landmark graph generation time: 0.0352128s
[t=0.0418125s, 28404 KB] Landmark graph contains 134 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0418248s, 28404 KB] Landmark graph contains 543 orderings.
[t=0.0428823s, 28436 KB] Simplifying 7626 unary operators... done! [5766 unary operators]
[t=0.0467425s, 28568 KB] time to simplify: 0.00445703s
[t=0.0476168s, 28568 KB] Initializing additive heuristic...
[t=0.0476903s, 28568 KB] Initializing FF heuristic...
[t=0.0478345s, 28568 KB] Building successor generator...done!
[t=0.0485962s, 28568 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0486084s, 28568 KB] time for successor generation creation: 0.000688048s
[t=0.0486441s, 28568 KB] Variables: 63
[t=0.0486527s, 28568 KB] FactPairs: 1056
[t=0.0486609s, 28568 KB] Bytes per state: 24
[t=0.0487888s, 28568 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0488282s, 28568 KB] 62 initial landmarks, 26 goal landmarks
[t=0.0489271s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 72
[t=0.0489371s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 54
[t=0.0489457s, 28568 KB] g=0, 1 evaluated, 0 expanded
[t=0.0489617s, 28568 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 72
[t=0.0489702s, 28568 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 54
[t=0.0493548s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 71
[t=0.0493652s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 53
[t=0.0493732s, 28568 KB] g=2, 9 evaluated, 8 expanded
[t=0.0497597s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 69
[t=0.0497722s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 52
[t=0.0497805s, 28568 KB] g=4, 17 evaluated, 16 expanded
[t=0.0499233s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 68
[t=0.0499322s, 28568 KB] g=5, 20 evaluated, 19 expanded
[t=0.0505265s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 67
[t=0.0505396s, 28568 KB] g=8, 33 evaluated, 32 expanded
[t=0.0508986s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 51
[t=0.0509087s, 28568 KB] g=6, 41 evaluated, 40 expanded
[t=0.0511936s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 66
[t=0.0512031s, 28568 KB] g=10, 47 evaluated, 46 expanded
[t=0.0515513s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 65
[t=0.0515608s, 28568 KB] g=11, 55 evaluated, 54 expanded
[t=0.0526348s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 62
[t=0.0526449s, 28568 KB] g=14, 79 evaluated, 78 expanded
[t=0.0531342s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 50
[t=0.0531439s, 28568 KB] g=10, 90 evaluated, 89 expanded
[t=0.0536292s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.0536515s, 28568 KB] g=16, 101 evaluated, 100 expanded
[t=0.0543232s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 49
[t=0.0543439s, 28568 KB] g=18, 113 evaluated, 112 expanded
[t=0.0544467s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 58
[t=0.054456s, 28568 KB] g=18, 115 evaluated, 114 expanded
[t=0.0552428s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 57
[t=0.0552527s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 48
[t=0.0552607s, 28568 KB] g=20, 133 evaluated, 132 expanded
[t=0.0562802s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0562955s, 28568 KB] g=23, 153 evaluated, 152 expanded
[t=0.0573514s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0573655s, 28568 KB] g=26, 169 evaluated, 168 expanded
[t=0.0580329s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0580494s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 47
[t=0.0580631s, 28568 KB] g=28, 179 evaluated, 178 expanded
[t=0.0595585s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0595761s, 28568 KB] g=32, 202 evaluated, 201 expanded
[t=0.0601683s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0601828s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 46
[t=0.0601963s, 28568 KB] g=34, 211 evaluated, 210 expanded
[t=0.0631944s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0632355s, 28568 KB] g=40, 264 evaluated, 263 expanded
[t=0.0640355s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0640691s, 28568 KB] g=42, 274 evaluated, 273 expanded
[t=0.0654501s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0655076s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0655313s, 28568 KB] g=44, 285 evaluated, 284 expanded
[t=0.0669116s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0669416s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.0669562s, 28568 KB] g=46, 295 evaluated, 294 expanded
[t=0.0678368s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0678614s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0678763s, 28568 KB] g=48, 306 evaluated, 305 expanded
[t=0.0690628s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0690853s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0690942s, 28568 KB] g=50, 316 evaluated, 315 expanded
[t=0.069458s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0694688s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0694785s, 28568 KB] g=52, 324 evaluated, 323 expanded
[t=0.0725313s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0725641s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0725736s, 28568 KB] g=58, 386 evaluated, 385 expanded
[t=0.0831512s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0831999s, 28568 KB] g=72, 560 evaluated, 559 expanded
[t=0.0834409s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0834514s, 28568 KB] g=73, 565 evaluated, 564 expanded
[t=0.0835543s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0835639s, 28568 KB] g=74, 567 evaluated, 566 expanded
[t=0.0836238s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.083633s, 28568 KB] g=75, 568 evaluated, 567 expanded
[t=0.0836924s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0837013s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0837093s, 28568 KB] g=76, 569 evaluated, 568 expanded
[t=0.0841252s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0841359s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0841441s, 28568 KB] g=78, 578 evaluated, 577 expanded
[t=0.084554s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0845644s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0845741s, 28568 KB] g=80, 587 evaluated, 586 expanded
[t=0.0849831s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0849936s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0850017s, 28568 KB] g=82, 596 evaluated, 595 expanded
[t=0.0852291s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0852389s, 28568 KB] g=83, 601 evaluated, 600 expanded
[t=0.0852951s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0853046s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0853124s, 28568 KB] g=84, 602 evaluated, 601 expanded
[t=0.0856977s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0857113s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0857202s, 28568 KB] g=86, 610 evaluated, 609 expanded
[t=0.0861237s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0861365s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0861454s, 28568 KB] g=88, 619 evaluated, 618 expanded
[t=0.0870084s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0870647s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0870919s, 28568 KB] g=90, 627 evaluated, 626 expanded
[t=0.0898321s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0898772s, 28568 KB] g=94, 668 evaluated, 667 expanded
[t=0.09051s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0905426s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0905744s, 28568 KB] g=96, 675 evaluated, 674 expanded
[t=0.0935634s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0936356s, 28568 KB] g=100, 711 evaluated, 710 expanded
[t=0.0939001s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0939098s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0939181s, 28568 KB] g=102, 717 evaluated, 716 expanded
[t=0.0965708s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0965815s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0965904s, 28568 KB] g=110, 781 evaluated, 780 expanded
[t=0.0967756s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0967852s, 28568 KB] g=110, 785 evaluated, 784 expanded
[t=0.0970029s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0970131s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0970239s, 28568 KB] g=112, 790 evaluated, 789 expanded
[t=0.0993297s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0993415s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0993501s, 28568 KB] g=120, 847 evaluated, 846 expanded
[t=0.0994796s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0994892s, 28568 KB] g=120, 850 evaluated, 849 expanded
[t=0.0996565s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0996652s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0996733s, 28568 KB] g=122, 854 evaluated, 853 expanded
[t=0.101906s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.101918s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.101926s, 28568 KB] g=134, 912 evaluated, 911 expanded
[t=0.102272s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.102281s, 28568 KB] g=138, 921 evaluated, 920 expanded
[t=0.102399s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.102408s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.102416s, 28568 KB] g=140, 924 evaluated, 923 expanded
[t=0.103672s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.103705s, 28568 KB] g=158, 961 evaluated, 960 expanded
[t=0.103785s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.1038s, 28568 KB] g=158, 963 evaluated, 962 expanded
[t=0.103909s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.103924s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.103936s, 28568 KB] g=160, 966 evaluated, 965 expanded
[t=0.104208s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.104219s, 28568 KB] g=168, 977 evaluated, 976 expanded
[t=0.10431s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.10432s, 28568 KB] g=172, 981 evaluated, 980 expanded
[t=0.104341s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.104351s, 28568 KB] g=173, 982 evaluated, 981 expanded
[t=0.104369s, 28568 KB] Solution found!
[t=0.104385s, 28568 KB] Actual search time: 0.0555537s
unstack b19 b6 (1)
put-down b19 (1)
unstack b20 b22 (1)
stack b20 b4 (1)
unstack b22 b27 (1)
put-down b22 (1)
unstack b21 b3 (1)
put-down b21 (1)
unstack b27 b25 (1)
put-down b27 (1)
unstack b25 b15 (1)
put-down b25 (1)
unstack b29 b2 (1)
stack b29 b27 (1)
unstack b9 b12 (1)
stack b9 b21 (1)
pick-up b15 (1)
stack b15 b10 (1)
pick-up b3 (1)
stack b3 b6 (1)
unstack b12 b28 (1)
put-down b12 (1)
unstack b28 b18 (1)
put-down b28 (1)
unstack b18 b30 (1)
stack b18 b20 (1)
pick-up b12 (1)
stack b12 b28 (1)
unstack b15 b10 (1)
put-down b15 (1)
pick-up b10 (1)
stack b10 b3 (1)
pick-up b15 (1)
stack b15 b10 (1)
unstack b18 b20 (1)
put-down b18 (1)
unstack b20 b4 (1)
put-down b20 (1)
unstack b4 b26 (1)
stack b4 b2 (1)
unstack b26 b16 (1)
put-down b26 (1)
unstack b16 b7 (1)
stack b16 b29 (1)
unstack b7 b14 (1)
put-down b7 (1)
pick-up b22 (1)
stack b22 b7 (1)
pick-up b14 (1)
stack b14 b18 (1)
pick-up b20 (1)
stack b20 b4 (1)
unstack b14 b18 (1)
put-down b14 (1)
pick-up b18 (1)
stack b18 b20 (1)
pick-up b14 (1)
stack b14 b18 (1)
unstack b15 b10 (1)
put-down b15 (1)
unstack b10 b3 (1)
put-down b10 (1)
unstack b3 b6 (1)
put-down b3 (1)
pick-up b10 (1)
stack b10 b3 (1)
unstack b6 b11 (1)
put-down b6 (1)
unstack b11 b31 (1)
put-down b11 (1)
unstack b31 b13 (1)
stack b31 b15 (1)
unstack b13 b1 (1)
stack b13 b14 (1)
unstack b1 b8 (1)
stack b1 b12 (1)
pick-up b6 (1)
stack b6 b11 (1)
unstack b8 b5 (1)
stack b8 b26 (1)
unstack b5 b23 (1)
stack b5 b30 (1)
unstack b23 b24 (1)
stack b23 b16 (1)
unstack b24 b17 (1)
stack b24 b19 (1)
pick-up b25 (1)
stack b25 b24 (1)
pick-up b17 (1)
stack b17 b9 (1)
unstack b10 b3 (1)
put-down b10 (1)
pick-up b3 (1)
stack b3 b6 (1)
pick-up b10 (1)
stack b10 b3 (1)
unstack b31 b15 (1)
put-down b31 (1)
pick-up b15 (1)
stack b15 b10 (1)
pick-up b31 (1)
stack b31 b15 (1)
unstack b1 b12 (1)
put-down b1 (1)
unstack b12 b28 (1)
put-down b12 (1)
pick-up b28 (1)
stack b28 b8 (1)
pick-up b12 (1)
stack b12 b28 (1)
pick-up b1 (1)
stack b1 b12 (1)
unstack b17 b9 (1)
put-down b17 (1)
unstack b9 b21 (1)
put-down b9 (1)
pick-up b21 (1)
stack b21 b5 (1)
pick-up b9 (1)
stack b9 b21 (1)
pick-up b17 (1)
stack b17 b9 (1)
unstack b23 b16 (1)
put-down b23 (1)
unstack b16 b29 (1)
put-down b16 (1)
pick-up b23 (1)
stack b23 b16 (1)
unstack b29 b27 (1)
put-down b29 (1)
pick-up b27 (1)
stack b27 b17 (1)
pick-up b29 (1)
stack b29 b27 (1)
unstack b23 b16 (1)
put-down b23 (1)
pick-up b16 (1)
stack b16 b29 (1)
pick-up b23 (1)
stack b23 b16 (1)
unstack b13 b14 (1)
put-down b13 (1)
unstack b14 b18 (1)
put-down b14 (1)
unstack b18 b20 (1)
put-down b18 (1)
pick-up b14 (1)
stack b14 b18 (1)
pick-up b13 (1)
stack b13 b14 (1)
unstack b20 b4 (1)
put-down b20 (1)
unstack b4 b2 (1)
put-down b4 (1)
pick-up b2 (1)
stack b2 b31 (1)
pick-up b4 (1)
stack b4 b2 (1)
pick-up b20 (1)
stack b20 b4 (1)
unstack b13 b14 (1)
put-down b13 (1)
unstack b14 b18 (1)
put-down b14 (1)
pick-up b13 (1)
stack b13 b14 (1)
pick-up b18 (1)
stack b18 b20 (1)
unstack b13 b14 (1)
put-down b13 (1)
pick-up b14 (1)
stack b14 b18 (1)
pick-up b13 (1)
stack b13 b14 (1)
[t=0.104396s, 28568 KB] Plan length: 174 step(s).
[t=0.104396s, 28568 KB] Plan cost: 174
[t=0.104396s, 28568 KB] Expanded 982 state(s).
[t=0.104396s, 28568 KB] Reopened 0 state(s).
[t=0.104396s, 28568 KB] Evaluated 983 state(s).
[t=0.104396s, 28568 KB] Evaluations: 1966
[t=0.104396s, 28568 KB] Generated 11211 state(s).
[t=0.104396s, 28568 KB] Dead ends: 0 state(s).
[t=0.104396s, 28568 KB] Number of registered states: 983
[t=0.104396s, 28568 KB] Int hash set load factor: 983/1024 = 0.959961
[t=0.104396s, 28568 KB] Int hash set resizes: 10
[t=0.104396s, 28568 KB] Search time: 0.0556073s
[t=0.104396s, 28568 KB] Total time: 0.104396s
Solution found.
Peak memory: 28568 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.33s
