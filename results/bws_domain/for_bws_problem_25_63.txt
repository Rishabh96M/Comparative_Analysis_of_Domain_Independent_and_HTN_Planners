INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_25/bws_problem_25_63.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.000s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.012s wall-clock]
2052 relevant atoms
1375 auxiliary atoms
3427 final queue length
5984 total queue pushes
Completing instantiation... [0.030s CPU, 0.021s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
26 uncovered facts
Choosing groups: [0.000s CPU, 0.002s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.008s wall-clock]
Building STRIPS to SAS dictionary... [0.010s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.032s wall-clock]
1850 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
50 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.022s wall-clock]
Reordering and filtering variables...
51 of 51 variables necessary.
26 of 51 mutex groups necessary.
1250 of 1250 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.009s wall-clock]
Translator variables: 51
Translator derived variables: 0
Translator facts: 702
Translator goal facts: 20
Translator mutex groups: 26
Translator total mutex groups size: 676
Translator operators: 1250
Translator axioms: 0
Translator task size: 10749
Translator peak memory: 38384 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.110s CPU, 0.118s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=1.9361e-05s, 24488 KB] reading input...
[t=0.00384091s, 25632 KB] done reading input!
[t=0.00467414s, 26028 KB] Initializing landmark count heuristic...
[t=0.00470313s, 26028 KB] Generating landmark graph...
[t=0.00478925s, 26160 KB] Building a landmark graph with reasonable orders.
[t=0.00485875s, 26160 KB] Initializing Exploration...
[t=0.00521841s, 26528 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0191545s, 27056 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0192602s, 27056 KB] Landmarks generation time: 0.0144724s
[t=0.0192759s, 27056 KB] Discovered 106 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0192971s, 27056 KB] 356 edges
[t=0.0193098s, 27056 KB] approx. reasonable orders
[t=0.0237348s, 27056 KB] approx. obedient reasonable orders
[t=0.0238698s, 27056 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0238808s, 27056 KB] Landmarks generation time: 0.0191753s
[t=0.0238907s, 27056 KB] Discovered 106 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0238992s, 27056 KB] 425 edges
[t=0.0239081s, 27056 KB] Landmark graph generation time: 0.0192125s
[t=0.023917s, 27056 KB] Landmark graph contains 106 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0239255s, 27056 KB] Landmark graph contains 425 orderings.
[t=0.0244779s, 27056 KB] Simplifying 4950 unary operators... done! [3750 unary operators]
[t=0.0257666s, 27056 KB] time to simplify: 0.00137042s
[t=0.0259244s, 27056 KB] Initializing additive heuristic...
[t=0.0259412s, 27056 KB] Initializing FF heuristic...
[t=0.0260105s, 27056 KB] Building successor generator...done!
[t=0.0262681s, 27056 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0262768s, 27056 KB] time for successor generation creation: 0.000220339s
[t=0.0262933s, 27056 KB] Variables: 51
[t=0.0263026s, 27056 KB] FactPairs: 702
[t=0.0263104s, 27056 KB] Bytes per state: 20
[t=0.0264413s, 27056 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0264808s, 27056 KB] 48 initial landmarks, 20 goal landmarks
[t=0.0265571s, 27056 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 58
[t=0.0265677s, 27056 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0265761s, 27056 KB] g=0, 1 evaluated, 0 expanded
[t=0.0265925s, 27056 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 58
[t=0.0266023s, 27056 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0268966s, 27056 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 57
[t=0.0269091s, 27056 KB] g=2, 10 evaluated, 9 expanded
[t=0.0271327s, 27056 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0271426s, 27056 KB] g=2, 17 evaluated, 16 expanded
[t=0.028052s, 27056 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0280663s, 27056 KB] g=4, 47 evaluated, 46 expanded
[t=0.0285551s, 27056 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0285699s, 27056 KB] g=6, 61 evaluated, 60 expanded
[t=0.0290831s, 27056 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0291048s, 27056 KB] g=8, 77 evaluated, 76 expanded
[t=0.0296325s, 27056 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0296503s, 27056 KB] g=10, 93 evaluated, 92 expanded
[t=0.029728s, 27056 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0297403s, 27056 KB] g=10, 95 evaluated, 94 expanded
[t=0.0302774s, 27056 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0302907s, 27056 KB] g=12, 112 evaluated, 111 expanded
[t=0.0303334s, 27056 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0303438s, 27056 KB] g=12, 113 evaluated, 112 expanded
[t=0.0309467s, 27056 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0309605s, 27056 KB] g=14, 132 evaluated, 131 expanded
[t=0.0310614s, 27056 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0310708s, 27056 KB] g=14, 135 evaluated, 134 expanded
[t=0.0316781s, 27056 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0316946s, 27056 KB] g=16, 154 evaluated, 153 expanded
[t=0.0317922s, 27056 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0318018s, 27056 KB] g=16, 157 evaluated, 156 expanded
[t=0.0322171s, 27056 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.032227s, 27056 KB] g=18, 171 evaluated, 170 expanded
[t=0.0322664s, 27056 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0322752s, 27056 KB] g=17, 172 evaluated, 171 expanded
[t=0.0328197s, 27056 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0328358s, 27056 KB] g=20, 189 evaluated, 188 expanded
[t=0.033341s, 27056 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0333619s, 27056 KB] g=20, 202 evaluated, 201 expanded
[t=0.0337813s, 27056 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0337916s, 27056 KB] g=21, 216 evaluated, 215 expanded
[t=0.0343358s, 27056 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0343463s, 27056 KB] g=23, 234 evaluated, 233 expanded
[t=0.0352588s, 27056 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0352689s, 27056 KB] g=26, 264 evaluated, 263 expanded
[t=0.0362611s, 27056 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0362722s, 27056 KB] g=28, 297 evaluated, 296 expanded
[t=0.0373321s, 27056 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.037343s, 27056 KB] g=30, 332 evaluated, 331 expanded
[t=0.0379434s, 27056 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0379541s, 27056 KB] g=32, 352 evaluated, 351 expanded
[t=0.0384232s, 27056 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0384334s, 27056 KB] g=32, 367 evaluated, 366 expanded
[t=0.0387333s, 27056 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.038757s, 27056 KB] g=34, 376 evaluated, 375 expanded
[t=0.0395196s, 27056 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0395332s, 27056 KB] g=36, 400 evaluated, 399 expanded
[t=0.0401519s, 27056 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0401623s, 27056 KB] g=38, 420 evaluated, 419 expanded
[t=0.0406766s, 27056 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0406884s, 27056 KB] g=34, 436 evaluated, 435 expanded
[t=0.0408254s, 27056 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0408347s, 27056 KB] g=40, 440 evaluated, 439 expanded
[t=0.0414863s, 27056 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0414962s, 27056 KB] g=42, 462 evaluated, 461 expanded
[t=0.0418905s, 27056 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0419016s, 27056 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0419104s, 27056 KB] g=44, 475 evaluated, 474 expanded
[t=0.0420085s, 27056 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0420177s, 27056 KB] g=45, 478 evaluated, 477 expanded
[t=0.0423092s, 27056 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0423293s, 27056 KB] g=46, 488 evaluated, 487 expanded
[t=0.0425783s, 27056 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0425885s, 27056 KB] g=48, 496 evaluated, 495 expanded
[t=0.0427471s, 27056 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0427582s, 27056 KB] g=48, 501 evaluated, 500 expanded
[t=0.0431381s, 27056 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0431547s, 27056 KB] g=50, 513 evaluated, 512 expanded
[t=0.0437405s, 27056 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0437701s, 27056 KB] g=52, 528 evaluated, 527 expanded
[t=0.0445595s, 27056 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0445726s, 27056 KB] g=54, 555 evaluated, 554 expanded
[t=0.0458963s, 27056 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0459083s, 27056 KB] g=56, 599 evaluated, 598 expanded
[t=0.0464672s, 27056 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0464778s, 27056 KB] g=58, 618 evaluated, 617 expanded
[t=0.0472305s, 27056 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0472438s, 27056 KB] g=60, 644 evaluated, 643 expanded
[t=0.0480861s, 27056 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0481022s, 27056 KB] g=62, 672 evaluated, 671 expanded
[t=0.0487331s, 27056 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0487445s, 27056 KB] g=64, 693 evaluated, 692 expanded
[t=0.0491668s, 27056 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0491791s, 27056 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0491904s, 27056 KB] g=68, 707 evaluated, 706 expanded
[t=0.04923s, 27056 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0492394s, 27056 KB] g=69, 708 evaluated, 707 expanded
[t=0.0494393s, 27056 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.049449s, 27056 KB] g=70, 715 evaluated, 714 expanded
[t=0.114912s, 27452 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.114994s, 27452 KB] g=80, 2923 evaluated, 2922 expanded
[t=0.115373s, 27452 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.115385s, 27452 KB] g=82, 2935 evaluated, 2934 expanded
[t=0.115602s, 27452 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.115614s, 27452 KB] g=84, 2942 evaluated, 2941 expanded
[t=0.11713s, 27452 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.117144s, 27452 KB] g=90, 2992 evaluated, 2991 expanded
[t=0.117705s, 27452 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.117716s, 27452 KB] g=94, 3011 evaluated, 3010 expanded
[t=0.1179s, 27452 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.11791s, 27452 KB] g=96, 3017 evaluated, 3016 expanded
[t=0.119457s, 27452 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.119472s, 27452 KB] g=104, 3068 evaluated, 3067 expanded
[t=0.119668s, 27584 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.11968s, 27584 KB] g=106, 3074 evaluated, 3073 expanded
[t=0.122451s, 27584 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.122474s, 27584 KB] g=128, 3179 evaluated, 3178 expanded
[t=0.12255s, 27584 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.122561s, 27584 KB] g=129, 3182 evaluated, 3181 expanded
[t=0.122906s, 27584 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.122917s, 27584 KB] g=130, 3197 evaluated, 3196 expanded
[t=0.122987s, 27584 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.122997s, 27584 KB] g=131, 3200 evaluated, 3199 expanded
[t=0.123364s, 27584 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.123381s, 27584 KB] g=132, 3217 evaluated, 3216 expanded
[t=0.123427s, 27584 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.123437s, 27584 KB] g=133, 3219 evaluated, 3218 expanded
[t=0.123749s, 27584 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.12376s, 27584 KB] g=138, 3235 evaluated, 3234 expanded
[t=0.123828s, 27584 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.123836s, 27584 KB] g=134, 3238 evaluated, 3237 expanded
[t=0.123908s, 27584 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.123917s, 27584 KB] g=140, 3241 evaluated, 3240 expanded
[t=0.123942s, 27584 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.123951s, 27584 KB] g=135, 3242 evaluated, 3241 expanded
[t=0.124109s, 27584 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.124118s, 27584 KB] g=136, 3250 evaluated, 3249 expanded
[t=0.124142s, 27584 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.124151s, 27584 KB] g=137, 3251 evaluated, 3250 expanded
[t=0.124178s, 27584 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.124188s, 27584 KB] g=138, 3252 evaluated, 3251 expanded
[t=0.124268s, 27584 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.124277s, 27584 KB] g=140, 3256 evaluated, 3255 expanded
[t=0.124301s, 27584 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.124314s, 27584 KB] g=141, 3257 evaluated, 3256 expanded
[t=0.124386s, 27584 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.124397s, 27584 KB] g=142, 3260 evaluated, 3259 expanded
[t=0.124422s, 27584 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.124432s, 27584 KB] g=143, 3261 evaluated, 3260 expanded
[t=0.124488s, 27584 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.124499s, 27584 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.124508s, 27584 KB] g=146, 3264 evaluated, 3263 expanded
[t=0.124527s, 27584 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.124535s, 27584 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.124544s, 27584 KB] g=147, 3265 evaluated, 3264 expanded
[t=0.124561s, 27584 KB] Solution found!
[t=0.124576s, 27584 KB] Actual search time: 0.0980904s
unstack b12 b4 (1)
put-down b12 (1)
unstack b15 b1 (1)
put-down b15 (1)
unstack b1 b16 (1)
put-down b1 (1)
unstack b2 b14 (1)
put-down b2 (1)
unstack b14 b18 (1)
put-down b14 (1)
unstack b18 b23 (1)
put-down b18 (1)
unstack b3 b8 (1)
put-down b3 (1)
unstack b4 b20 (1)
put-down b4 (1)
unstack b20 b19 (1)
put-down b20 (1)
unstack b10 b22 (1)
stack b10 b19 (1)
unstack b22 b25 (1)
put-down b22 (1)
unstack b25 b6 (1)
put-down b25 (1)
unstack b6 b5 (1)
stack b6 b17 (1)
pick-up b22 (1)
stack b22 b6 (1)
pick-up b20 (1)
stack b20 b2 (1)
pick-up b12 (1)
stack b12 b8 (1)
pick-up b14 (1)
stack b14 b10 (1)
pick-up b15 (1)
stack b15 b23 (1)
pick-up b16 (1)
stack b16 b12 (1)
pick-up b3 (1)
stack b3 b14 (1)
unstack b5 b11 (1)
stack b5 b3 (1)
pick-up b18 (1)
stack b18 b11 (1)
unstack b7 b13 (1)
stack b7 b15 (1)
pick-up b13 (1)
stack b13 b4 (1)
unstack b16 b12 (1)
put-down b16 (1)
unstack b12 b8 (1)
put-down b12 (1)
pick-up b16 (1)
stack b16 b12 (1)
pick-up b8 (1)
stack b8 b7 (1)
unstack b16 b12 (1)
put-down b16 (1)
pick-up b12 (1)
stack b12 b8 (1)
pick-up b16 (1)
stack b16 b12 (1)
unstack b5 b3 (1)
put-down b5 (1)
unstack b3 b14 (1)
put-down b3 (1)
unstack b14 b10 (1)
put-down b14 (1)
pick-up b3 (1)
stack b3 b14 (1)
pick-up b5 (1)
stack b5 b3 (1)
unstack b10 b19 (1)
put-down b10 (1)
unstack b19 b24 (1)
put-down b19 (1)
pick-up b10 (1)
stack b10 b19 (1)
unstack b24 b9 (1)
stack b24 b18 (1)
unstack b9 b21 (1)
stack b9 b16 (1)
pick-up b25 (1)
stack b25 b21 (1)
unstack b13 b4 (1)
put-down b13 (1)
pick-up b4 (1)
stack b4 b9 (1)
pick-up b13 (1)
stack b13 b4 (1)
unstack b20 b2 (1)
put-down b20 (1)
pick-up b2 (1)
stack b2 b24 (1)
pick-up b20 (1)
stack b20 b2 (1)
unstack b5 b3 (1)
put-down b5 (1)
unstack b3 b14 (1)
put-down b3 (1)
pick-up b14 (1)
stack b14 b10 (1)
pick-up b3 (1)
stack b3 b14 (1)
pick-up b5 (1)
stack b5 b3 (1)
unstack b13 b4 (1)
put-down b13 (1)
unstack b4 b9 (1)
put-down b4 (1)
pick-up b13 (1)
stack b13 b4 (1)
unstack b9 b16 (1)
put-down b9 (1)
unstack b16 b12 (1)
put-down b16 (1)
unstack b13 b4 (1)
put-down b13 (1)
unstack b12 b8 (1)
put-down b12 (1)
unstack b8 b7 (1)
put-down b8 (1)
unstack b7 b15 (1)
put-down b7 (1)
unstack b15 b23 (1)
put-down b15 (1)
pick-up b23 (1)
stack b23 b5 (1)
pick-up b15 (1)
stack b15 b23 (1)
pick-up b7 (1)
stack b7 b15 (1)
pick-up b8 (1)
stack b8 b7 (1)
pick-up b12 (1)
stack b12 b8 (1)
pick-up b13 (1)
stack b13 b4 (1)
pick-up b16 (1)
stack b16 b12 (1)
pick-up b9 (1)
stack b9 b16 (1)
unstack b13 b4 (1)
put-down b13 (1)
pick-up b4 (1)
stack b4 b9 (1)
pick-up b13 (1)
stack b13 b4 (1)
[t=0.124587s, 27584 KB] Plan length: 148 step(s).
[t=0.124587s, 27584 KB] Plan cost: 148
[t=0.124587s, 27584 KB] Expanded 3265 state(s).
[t=0.124587s, 27584 KB] Reopened 0 state(s).
[t=0.124587s, 27584 KB] Evaluated 3266 state(s).
[t=0.124587s, 27584 KB] Evaluations: 6532
[t=0.124587s, 27584 KB] Generated 38093 state(s).
[t=0.124587s, 27584 KB] Dead ends: 0 state(s).
[t=0.124587s, 27584 KB] Number of registered states: 3266
[t=0.124587s, 27584 KB] Int hash set load factor: 3266/4096 = 0.797363
[t=0.124587s, 27584 KB] Int hash set resizes: 12
[t=0.124587s, 27584 KB] Search time: 0.0981462s
[t=0.124587s, 27584 KB] Total time: 0.124587s
Solution found.
Peak memory: 27584 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.31s
