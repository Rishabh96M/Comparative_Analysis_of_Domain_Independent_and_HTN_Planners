INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_28/bws_problem_28_77.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.015s wall-clock]
2550 relevant atoms
1708 auxiliary atoms
4258 final queue length
7456 total queue pushes
Completing instantiation... [0.020s CPU, 0.027s wall-clock]
Instantiating: [0.040s CPU, 0.044s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
29 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.009s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.001s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.002s wall-clock]
Translating task: [0.060s CPU, 0.052s wall-clock]
2324 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
56 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.021s wall-clock]
Reordering and filtering variables...
57 of 57 variables necessary.
29 of 57 mutex groups necessary.
1568 of 1568 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.010s wall-clock]
Translator variables: 57
Translator derived variables: 0
Translator facts: 870
Translator goal facts: 25
Translator mutex groups: 29
Translator total mutex groups size: 841
Translator operators: 1568
Translator axioms: 0
Translator task size: 13469
Translator peak memory: 40316 KB
Writing output... [0.000s CPU, 0.008s wall-clock]
Done! [0.150s CPU, 0.150s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.2488e-05s, 24488 KB] reading input...
[t=0.00469947s, 26076 KB] done reading input!
[t=0.00593151s, 26472 KB] Initializing landmark count heuristic...
[t=0.0059976s, 26472 KB] Generating landmark graph...
[t=0.00609673s, 26604 KB] Building a landmark graph with reasonable orders.
[t=0.0062071s, 26604 KB] Initializing Exploration...
[t=0.00665912s, 27016 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0293235s, 27944 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0294375s, 27944 KB] Landmarks generation time: 0.023338s
[t=0.0294622s, 27944 KB] Discovered 127 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0294826s, 27944 KB] 924 edges
[t=0.0294937s, 27944 KB] approx. reasonable orders
[t=0.0334245s, 27944 KB] approx. obedient reasonable orders
[t=0.0334972s, 27944 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0335091s, 27944 KB] Landmarks generation time: 0.0275078s
[t=0.0335186s, 27944 KB] Discovered 127 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0335267s, 27944 KB] 969 edges
[t=0.0335347s, 27944 KB] Landmark graph generation time: 0.0275439s
[t=0.0335427s, 27944 KB] Landmark graph contains 127 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0335505s, 27944 KB] Landmark graph contains 969 orderings.
[t=0.0341019s, 27968 KB] Simplifying 6216 unary operators... done! [4704 unary operators]
[t=0.0356143s, 27968 KB] time to simplify: 0.00162194s
[t=0.0358147s, 27968 KB] Initializing additive heuristic...
[t=0.0358345s, 27968 KB] Initializing FF heuristic...
[t=0.0358885s, 27968 KB] Building successor generator...done!
[t=0.036188s, 27968 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0361983s, 27968 KB] time for successor generation creation: 0.000269265s
[t=0.0362139s, 27968 KB] Variables: 57
[t=0.0362223s, 27968 KB] FactPairs: 870
[t=0.0362304s, 27968 KB] Bytes per state: 24
[t=0.0364403s, 27968 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0364825s, 27968 KB] 57 initial landmarks, 25 goal landmarks
[t=0.0365933s, 27968 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 70
[t=0.0366051s, 27968 KB] New best heuristic value for ff(transform = adapt_costs(one)): 52
[t=0.0366142s, 27968 KB] g=0, 1 evaluated, 0 expanded
[t=0.036635s, 27968 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 70
[t=0.0366439s, 27968 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 52
[t=0.0367448s, 27968 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 69
[t=0.0367548s, 27968 KB] g=1, 3 evaluated, 2 expanded
[t=0.0371077s, 27968 KB] New best heuristic value for ff(transform = adapt_costs(one)): 51
[t=0.0371187s, 27968 KB] g=2, 12 evaluated, 11 expanded
[t=0.0373499s, 27968 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 68
[t=0.0373607s, 27968 KB] g=4, 18 evaluated, 17 expanded
[t=0.0376243s, 27968 KB] New best heuristic value for ff(transform = adapt_costs(one)): 50
[t=0.0376341s, 27968 KB] g=4, 25 evaluated, 24 expanded
[t=0.0380042s, 27968 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 67
[t=0.0380163s, 27968 KB] g=6, 35 evaluated, 34 expanded
[t=0.0386254s, 27968 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 66
[t=0.0386639s, 27968 KB] g=7, 46 evaluated, 45 expanded
[t=0.0403506s, 27968 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 65
[t=0.0404173s, 27968 KB] g=10, 66 evaluated, 65 expanded
[t=0.0413711s, 27968 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 64
[t=0.0413957s, 27968 KB] g=12, 85 evaluated, 84 expanded
[t=0.0417483s, 27968 KB] New best heuristic value for ff(transform = adapt_costs(one)): 49
[t=0.0417584s, 27968 KB] g=12, 94 evaluated, 93 expanded
[t=0.0422206s, 27968 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 63
[t=0.0422372s, 27968 KB] g=14, 106 evaluated, 105 expanded
[t=0.043622s, 27968 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 62
[t=0.0436947s, 27968 KB] g=16, 124 evaluated, 123 expanded
[t=0.0454317s, 27968 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 61
[t=0.0454547s, 27968 KB] g=18, 149 evaluated, 148 expanded
[t=0.0464462s, 27968 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.0464567s, 27968 KB] g=20, 175 evaluated, 174 expanded
[t=0.0467948s, 27968 KB] New best heuristic value for ff(transform = adapt_costs(one)): 48
[t=0.0468042s, 27968 KB] g=18, 184 evaluated, 183 expanded
[t=0.0472618s, 27968 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0472717s, 27968 KB] g=22, 196 evaluated, 195 expanded
[t=0.047863s, 27968 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0478754s, 27968 KB] g=24, 211 evaluated, 210 expanded
[t=0.0483685s, 27968 KB] New best heuristic value for ff(transform = adapt_costs(one)): 47
[t=0.0483786s, 27968 KB] g=26, 224 evaluated, 223 expanded
[t=0.048504s, 27968 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0485136s, 27968 KB] g=26, 227 evaluated, 226 expanded
[t=0.0496588s, 27968 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0496693s, 27968 KB] g=28, 258 evaluated, 257 expanded
[t=0.0500861s, 27968 KB] New best heuristic value for ff(transform = adapt_costs(one)): 46
[t=0.0500959s, 27968 KB] g=28, 269 evaluated, 268 expanded
[t=0.0507655s, 27968 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0507755s, 27968 KB] g=30, 287 evaluated, 286 expanded
[t=0.0509805s, 27968 KB] New best heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0509904s, 27968 KB] g=30, 292 evaluated, 291 expanded
[t=0.0518337s, 27968 KB] New best heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.0518462s, 27968 KB] g=32, 314 evaluated, 313 expanded
[t=0.0520847s, 27968 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0520941s, 27968 KB] g=32, 320 evaluated, 319 expanded
[t=0.0525525s, 27968 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0525626s, 27968 KB] g=33, 332 evaluated, 331 expanded
[t=0.0526184s, 27968 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0526273s, 27968 KB] g=34, 333 evaluated, 332 expanded
[t=0.0535025s, 27968 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0535129s, 27968 KB] g=34, 356 evaluated, 355 expanded
[t=0.0538345s, 27968 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0538445s, 27968 KB] g=36, 364 evaluated, 363 expanded
[t=0.054858s, 27968 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0548686s, 27968 KB] g=38, 390 evaluated, 389 expanded
[t=0.0574062s, 27968 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0574451s, 27968 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0574547s, 27968 KB] g=40, 429 evaluated, 428 expanded
[t=0.0580718s, 27968 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0580843s, 27968 KB] g=42, 445 evaluated, 444 expanded
[t=0.0584847s, 27968 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0585142s, 27968 KB] g=42, 455 evaluated, 454 expanded
[t=0.0595926s, 27968 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0596134s, 27968 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0596223s, 27968 KB] g=44, 483 evaluated, 482 expanded
[t=0.0604357s, 27968 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0604673s, 27968 KB] g=46, 496 evaluated, 495 expanded
[t=0.0609448s, 27968 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0609684s, 27968 KB] g=46, 503 evaluated, 502 expanded
[t=0.061612s, 27968 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0616292s, 27968 KB] g=48, 517 evaluated, 516 expanded
[t=0.062278s, 27968 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.062288s, 27968 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0622961s, 27968 KB] g=48, 534 evaluated, 533 expanded
[t=0.0627547s, 27968 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0627694s, 27968 KB] g=50, 546 evaluated, 545 expanded
[t=0.0630487s, 27968 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0630581s, 27968 KB] g=50, 553 evaluated, 552 expanded
[t=0.0634711s, 27968 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0634832s, 27968 KB] g=52, 563 evaluated, 562 expanded
[t=0.0638414s, 27968 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0638507s, 27968 KB] g=52, 572 evaluated, 571 expanded
[t=0.0643424s, 27968 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0643514s, 27968 KB] g=54, 585 evaluated, 584 expanded
[t=0.0644791s, 27968 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0644879s, 27968 KB] g=54, 588 evaluated, 587 expanded
[t=0.0649821s, 27968 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0649911s, 27968 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0649991s, 27968 KB] g=56, 601 evaluated, 600 expanded
[t=0.0662337s, 27968 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0662429s, 27968 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0662512s, 27968 KB] g=60, 634 evaluated, 633 expanded
[t=0.0665762s, 27968 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0665859s, 27968 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0665948s, 27968 KB] g=62, 642 evaluated, 641 expanded
[t=0.0691054s, 27968 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0691647s, 27968 KB] g=66, 691 evaluated, 690 expanded
[t=0.0694986s, 27968 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0695227s, 27968 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0695316s, 27968 KB] g=68, 697 evaluated, 696 expanded
[t=0.0713994s, 27968 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0714157s, 27968 KB] g=77, 744 evaluated, 743 expanded
[t=0.0715162s, 27968 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.071533s, 27968 KB] g=78, 746 evaluated, 745 expanded
[t=0.0718118s, 27968 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0718229s, 27968 KB] g=80, 753 evaluated, 752 expanded
[t=0.0720607s, 27968 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0720702s, 27968 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0720782s, 27968 KB] g=82, 759 evaluated, 758 expanded
[t=0.0723446s, 27968 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0723542s, 27968 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0723637s, 27968 KB] g=84, 766 evaluated, 765 expanded
[t=0.0726232s, 27968 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0726346s, 27968 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0726434s, 27968 KB] g=86, 773 evaluated, 772 expanded
[t=0.0741088s, 27968 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.074122s, 27968 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0741302s, 27968 KB] g=92, 814 evaluated, 813 expanded
[t=0.0776386s, 27968 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0777637s, 27968 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0777823s, 27968 KB] g=100, 871 evaluated, 870 expanded
[t=0.07796s, 27968 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0779708s, 27968 KB] g=100, 875 evaluated, 874 expanded
[t=0.0781636s, 27968 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0781924s, 27968 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0782007s, 27968 KB] g=102, 880 evaluated, 879 expanded
[t=0.080193s, 27968 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0802166s, 27968 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.080226s, 27968 KB] g=110, 935 evaluated, 934 expanded
[t=0.080343s, 27968 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0803533s, 27968 KB] g=110, 938 evaluated, 937 expanded
[t=0.0805169s, 27968 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0805261s, 27968 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0805341s, 27968 KB] g=112, 942 evaluated, 941 expanded
[t=0.0844578s, 27968 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0845202s, 27968 KB] g=126, 1055 evaluated, 1054 expanded
[t=0.0846592s, 27968 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.08467s, 27968 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0846787s, 27968 KB] g=128, 1059 evaluated, 1058 expanded
[t=0.0849698s, 27968 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0849793s, 27968 KB] g=132, 1068 evaluated, 1067 expanded
[t=0.0850755s, 27968 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0850847s, 27968 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0850924s, 27968 KB] g=134, 1071 evaluated, 1070 expanded
[t=0.0875603s, 27968 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0875907s, 27968 KB] g=156, 1164 evaluated, 1163 expanded
[t=0.0878045s, 27968 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0878156s, 27968 KB] g=160, 1173 evaluated, 1172 expanded
[t=0.0878908s, 27968 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0879006s, 27968 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0879126s, 27968 KB] g=162, 1176 evaluated, 1175 expanded
[t=0.0881129s, 27968 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0881234s, 27968 KB] g=170, 1186 evaluated, 1185 expanded
[t=0.0882002s, 27968 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0882091s, 27968 KB] g=174, 1190 evaluated, 1189 expanded
[t=0.08823s, 27968 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0882382s, 27968 KB] g=175, 1191 evaluated, 1190 expanded
[t=0.0882555s, 27968 KB] Solution found!
[t=0.0882741s, 27968 KB] Actual search time: 0.0517885s
unstack b18 b27 (1)
put-down b18 (1)
unstack b27 b6 (1)
put-down b27 (1)
unstack b8 b3 (1)
put-down b8 (1)
unstack b3 b20 (1)
put-down b3 (1)
unstack b9 b10 (1)
put-down b9 (1)
unstack b20 b11 (1)
put-down b20 (1)
unstack b11 b14 (1)
put-down b11 (1)
unstack b14 b19 (1)
put-down b14 (1)
unstack b19 b5 (1)
put-down b19 (1)
pick-up b3 (1)
stack b3 b19 (1)
unstack b5 b22 (1)
stack b5 b14 (1)
unstack b22 b24 (1)
stack b22 b5 (1)
unstack b24 b2 (1)
put-down b24 (1)
unstack b2 b12 (1)
put-down b2 (1)
unstack b12 b4 (1)
put-down b12 (1)
unstack b4 b21 (1)
stack b4 b9 (1)
unstack b21 b13 (1)
stack b21 b4 (1)
unstack b13 b1 (1)
put-down b13 (1)
unstack b1 b25 (1)
put-down b1 (1)
pick-up b12 (1)
stack b12 b13 (1)
pick-up b24 (1)
stack b24 b25 (1)
pick-up b18 (1)
stack b18 b24 (1)
pick-up b26 (1)
stack b26 b28 (1)
pick-up b27 (1)
stack b27 b1 (1)
pick-up b6 (1)
stack b6 b2 (1)
pick-up b10 (1)
stack b10 b6 (1)
pick-up b8 (1)
stack b8 b11 (1)
pick-up b15 (1)
stack b15 b8 (1)
unstack b26 b28 (1)
put-down b26 (1)
pick-up b28 (1)
stack b28 b27 (1)
pick-up b26 (1)
stack b26 b28 (1)
unstack b3 b19 (1)
put-down b3 (1)
pick-up b19 (1)
stack b19 b22 (1)
pick-up b3 (1)
stack b3 b19 (1)
unstack b18 b24 (1)
put-down b18 (1)
unstack b24 b25 (1)
put-down b24 (1)
pick-up b18 (1)
stack b18 b24 (1)
unstack b25 b23 (1)
put-down b25 (1)
unstack b23 b7 (1)
stack b23 b15 (1)
pick-up b25 (1)
stack b25 b23 (1)
unstack b7 b16 (1)
stack b7 b26 (1)
unstack b16 b17 (1)
stack b16 b20 (1)
pick-up b17 (1)
stack b17 b12 (1)
unstack b18 b24 (1)
put-down b18 (1)
pick-up b24 (1)
stack b24 b25 (1)
pick-up b18 (1)
stack b18 b24 (1)
unstack b10 b6 (1)
put-down b10 (1)
unstack b6 b2 (1)
put-down b6 (1)
pick-up b2 (1)
stack b2 b7 (1)
pick-up b6 (1)
stack b6 b2 (1)
pick-up b10 (1)
stack b10 b6 (1)
unstack b21 b4 (1)
put-down b21 (1)
unstack b4 b9 (1)
put-down b4 (1)
pick-up b9 (1)
stack b9 b16 (1)
pick-up b4 (1)
stack b4 b9 (1)
pick-up b21 (1)
stack b21 b4 (1)
unstack b3 b19 (1)
put-down b3 (1)
unstack b19 b22 (1)
put-down b19 (1)
pick-up b3 (1)
stack b3 b19 (1)
unstack b22 b5 (1)
put-down b22 (1)
unstack b5 b14 (1)
put-down b5 (1)
pick-up b14 (1)
stack b14 b10 (1)
pick-up b5 (1)
stack b5 b14 (1)
pick-up b22 (1)
stack b22 b5 (1)
unstack b3 b19 (1)
put-down b3 (1)
pick-up b19 (1)
stack b19 b22 (1)
pick-up b3 (1)
stack b3 b19 (1)
unstack b18 b24 (1)
put-down b18 (1)
unstack b24 b25 (1)
put-down b24 (1)
unstack b25 b23 (1)
put-down b25 (1)
pick-up b24 (1)
stack b24 b25 (1)
pick-up b18 (1)
stack b18 b24 (1)
unstack b23 b15 (1)
put-down b23 (1)
unstack b15 b8 (1)
put-down b15 (1)
pick-up b23 (1)
stack b23 b15 (1)
unstack b8 b11 (1)
put-down b8 (1)
pick-up b11 (1)
stack b11 b17 (1)
pick-up b8 (1)
stack b8 b11 (1)
unstack b23 b15 (1)
put-down b23 (1)
pick-up b15 (1)
stack b15 b8 (1)
pick-up b23 (1)
stack b23 b15 (1)
unstack b18 b24 (1)
put-down b18 (1)
unstack b24 b25 (1)
put-down b24 (1)
pick-up b18 (1)
stack b18 b24 (1)
pick-up b25 (1)
stack b25 b23 (1)
unstack b18 b24 (1)
put-down b18 (1)
pick-up b24 (1)
stack b24 b25 (1)
pick-up b18 (1)
stack b18 b24 (1)
[t=0.0882837s, 27968 KB] Plan length: 176 step(s).
[t=0.0882837s, 27968 KB] Plan cost: 176
[t=0.0882837s, 27968 KB] Expanded 1191 state(s).
[t=0.0882837s, 27968 KB] Reopened 0 state(s).
[t=0.0882837s, 27968 KB] Evaluated 1192 state(s).
[t=0.0882837s, 27968 KB] Evaluations: 2384
[t=0.0882837s, 27968 KB] Generated 12973 state(s).
[t=0.0882837s, 27968 KB] Dead ends: 0 state(s).
[t=0.0882837s, 27968 KB] Number of registered states: 1192
[t=0.0882837s, 27968 KB] Int hash set load factor: 1192/2048 = 0.582031
[t=0.0882837s, 27968 KB] Int hash set resizes: 11
[t=0.0882837s, 27968 KB] Search time: 0.0518449s
[t=0.0882837s, 27968 KB] Total time: 0.0882837s
Solution found.
Peak memory: 27968 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.29s
