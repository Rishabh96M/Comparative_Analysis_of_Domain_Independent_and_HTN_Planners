INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_29/bws_problem_29_28.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.017s wall-clock]
2728 relevant atoms
1827 auxiliary atoms
4555 final queue length
7982 total queue pushes
Completing instantiation... [0.030s CPU, 0.029s wall-clock]
Instantiating: [0.050s CPU, 0.047s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.002s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
30 uncovered facts
Choosing groups: [0.000s CPU, 0.002s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.001s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.002s wall-clock]
Translating task: [0.050s CPU, 0.050s wall-clock]
2494 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
58 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.022s wall-clock]
Reordering and filtering variables...
59 of 59 variables necessary.
30 of 59 mutex groups necessary.
1682 of 1682 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.011s wall-clock]
Translator variables: 59
Translator derived variables: 0
Translator facts: 930
Translator goal facts: 24
Translator mutex groups: 30
Translator total mutex groups size: 900
Translator operators: 1682
Translator axioms: 0
Translator task size: 14441
Translator peak memory: 40824 KB
Writing output... [0.010s CPU, 0.009s wall-clock]
Done! [0.160s CPU, 0.154s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=1.9786e-05s, 24488 KB] reading input...
[t=0.00481289s, 26220 KB] done reading input!
[t=0.00577412s, 26616 KB] Initializing landmark count heuristic...
[t=0.00583345s, 26616 KB] Generating landmark graph...
[t=0.00598024s, 26748 KB] Building a landmark graph with reasonable orders.
[t=0.00608703s, 26748 KB] Initializing Exploration...
[t=0.0065824s, 27200 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0306889s, 27860 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0308539s, 27860 KB] Landmarks generation time: 0.0248932s
[t=0.0308876s, 27860 KB] Discovered 128 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0309302s, 27860 KB] 617 edges
[t=0.0309412s, 27860 KB] approx. reasonable orders
[t=0.0318565s, 27860 KB] approx. obedient reasonable orders
[t=0.0318978s, 27860 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0319068s, 27860 KB] Landmarks generation time: 0.0260612s
[t=0.0319162s, 27860 KB] Discovered 128 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0319238s, 27860 KB] 627 edges
[t=0.0319336s, 27860 KB] Landmark graph generation time: 0.0261076s
[t=0.0319431s, 27860 KB] Landmark graph contains 128 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0319512s, 27860 KB] Landmark graph contains 627 orderings.
[t=0.0325744s, 27884 KB] Simplifying 6670 unary operators... done! [5046 unary operators]
[t=0.0342007s, 28016 KB] time to simplify: 0.00175078s
[t=0.0344323s, 28016 KB] Initializing additive heuristic...
[t=0.0344552s, 28016 KB] Initializing FF heuristic...
[t=0.0345484s, 28016 KB] Building successor generator...done!
[t=0.034902s, 28016 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0349129s, 28016 KB] time for successor generation creation: 0.000320783s
[t=0.0349342s, 28016 KB] Variables: 59
[t=0.0349441s, 28016 KB] FactPairs: 930
[t=0.0349641s, 28016 KB] Bytes per state: 24
[t=0.035236s, 28016 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0352756s, 28016 KB] 58 initial landmarks, 24 goal landmarks
[t=0.0353556s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 70
[t=0.0353666s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 51
[t=0.0353757s, 28016 KB] g=0, 1 evaluated, 0 expanded
[t=0.0353944s, 28016 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 70
[t=0.0354032s, 28016 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 51
[t=0.0354597s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 69
[t=0.0354688s, 28016 KB] g=1, 2 evaluated, 1 expanded
[t=0.0359248s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 68
[t=0.0359361s, 28016 KB] g=4, 13 evaluated, 12 expanded
[t=0.0363105s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 67
[t=0.0363208s, 28016 KB] g=6, 22 evaluated, 21 expanded
[t=0.0368077s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 66
[t=0.0368178s, 28016 KB] g=8, 34 evaluated, 33 expanded
[t=0.0373786s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 50
[t=0.0373954s, 28016 KB] g=6, 48 evaluated, 47 expanded
[t=0.0374465s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 65
[t=0.0374573s, 28016 KB] g=10, 49 evaluated, 48 expanded
[t=0.0382223s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 62
[t=0.0382489s, 28016 KB] g=12, 68 evaluated, 67 expanded
[t=0.0392088s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.0392258s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 49
[t=0.039235s, 28016 KB] g=14, 89 evaluated, 88 expanded
[t=0.0395583s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 58
[t=0.0395691s, 28016 KB] g=15, 97 evaluated, 96 expanded
[t=0.0396243s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 57
[t=0.0396544s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 48
[t=0.0396635s, 28016 KB] g=16, 98 evaluated, 97 expanded
[t=0.0400641s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0400739s, 28016 KB] g=18, 108 evaluated, 107 expanded
[t=0.0402023s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0402117s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 47
[t=0.0402201s, 28016 KB] g=18, 111 evaluated, 110 expanded
[t=0.0405756s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0405855s, 28016 KB] g=20, 120 evaluated, 119 expanded
[t=0.0407149s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 46
[t=0.0407243s, 28016 KB] g=20, 123 evaluated, 122 expanded
[t=0.0413387s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0413501s, 28016 KB] g=22, 138 evaluated, 137 expanded
[t=0.0417912s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0418025s, 28016 KB] g=22, 148 evaluated, 147 expanded
[t=0.042203s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0422132s, 28016 KB] g=24, 158 evaluated, 157 expanded
[t=0.0423013s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0423102s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0423182s, 28016 KB] g=24, 160 evaluated, 159 expanded
[t=0.042669s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0426804s, 28016 KB] g=26, 169 evaluated, 168 expanded
[t=0.0428964s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0429058s, 28016 KB] g=27, 174 evaluated, 173 expanded
[t=0.0429572s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0429666s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.042975s, 28016 KB] g=28, 175 evaluated, 174 expanded
[t=0.0433778s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0433902s, 28016 KB] g=30, 185 evaluated, 184 expanded
[t=0.0437939s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0438045s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0438128s, 28016 KB] g=32, 195 evaluated, 194 expanded
[t=0.04479s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0448031s, 28016 KB] g=35, 219 evaluated, 218 expanded
[t=0.046112s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.046124s, 28016 KB] g=38, 252 evaluated, 251 expanded
[t=0.0465197s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0465291s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0465372s, 28016 KB] g=40, 262 evaluated, 261 expanded
[t=0.0477693s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0477831s, 28016 KB] g=44, 294 evaluated, 293 expanded
[t=0.0481322s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0481419s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.04815s, 28016 KB] g=46, 303 evaluated, 302 expanded
[t=0.0495933s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0496062s, 28016 KB] g=51, 338 evaluated, 337 expanded
[t=0.0507556s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0507735s, 28016 KB] g=54, 368 evaluated, 367 expanded
[t=0.0517497s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0517618s, 28016 KB] g=56, 392 evaluated, 391 expanded
[t=0.0524037s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0524135s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0524219s, 28016 KB] g=58, 409 evaluated, 408 expanded
[t=0.0528849s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0528943s, 28016 KB] g=60, 421 evaluated, 420 expanded
[t=0.0530196s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.053029s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0530375s, 28016 KB] g=60, 424 evaluated, 423 expanded
[t=0.0535008s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0535125s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0535207s, 28016 KB] g=62, 436 evaluated, 435 expanded
[t=0.0539927s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0540118s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.05402s, 28016 KB] g=64, 447 evaluated, 446 expanded
[t=0.0543554s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0543655s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0543734s, 28016 KB] g=66, 456 evaluated, 455 expanded
[t=0.0547085s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0547205s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0547285s, 28016 KB] g=68, 465 evaluated, 464 expanded
[t=0.0550812s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0551026s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0551115s, 28016 KB] g=70, 474 evaluated, 473 expanded
[t=0.0555037s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0555171s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0555267s, 28016 KB] g=72, 484 evaluated, 483 expanded
[t=0.0558649s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0558919s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0559005s, 28016 KB] g=74, 493 evaluated, 492 expanded
[t=0.0562185s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0562393s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0562477s, 28016 KB] g=76, 501 evaluated, 500 expanded
[t=0.0568832s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0568941s, 28016 KB] g=79, 517 evaluated, 516 expanded
[t=0.0569811s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0569904s, 28016 KB] g=80, 519 evaluated, 518 expanded
[t=0.0572649s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0572754s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0572863s, 28016 KB] g=82, 526 evaluated, 525 expanded
[t=0.0579681s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0579914s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0580002s, 28016 KB] g=86, 543 evaluated, 542 expanded
[t=0.0582922s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0583021s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0583105s, 28016 KB] g=88, 550 evaluated, 549 expanded
[t=0.0597722s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0597862s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0598075s, 28016 KB] g=94, 586 evaluated, 585 expanded
[t=0.0621877s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0622037s, 28016 KB] g=102, 647 evaluated, 646 expanded
[t=0.062373s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0623829s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0623914s, 28016 KB] g=104, 651 evaluated, 650 expanded
[t=0.0648983s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0649181s, 28016 KB] g=116, 714 evaluated, 713 expanded
[t=0.0654651s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0654849s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0654933s, 28016 KB] g=122, 728 evaluated, 727 expanded
[t=0.0721146s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0721744s, 28016 KB] g=140, 891 evaluated, 890 expanded
[t=0.0723307s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0723402s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0723487s, 28016 KB] g=142, 895 evaluated, 894 expanded
[t=0.0734399s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0734521s, 28016 KB] g=150, 924 evaluated, 923 expanded
[t=0.0738707s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0738877s, 28016 KB] g=154, 933 evaluated, 932 expanded
[t=0.0740056s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.074016s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0740245s, 28016 KB] g=156, 936 evaluated, 935 expanded
[t=0.1208s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.120866s, 28016 KB] g=212, 2224 evaluated, 2223 expanded
[t=0.121017s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.121029s, 28016 KB] g=214, 2228 evaluated, 2227 expanded
[t=0.122617s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.122635s, 28016 KB] g=226, 2282 evaluated, 2281 expanded
[t=0.122905s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.122917s, 28016 KB] g=230, 2291 evaluated, 2290 expanded
[t=0.123004s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.123014s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.123022s, 28016 KB] g=232, 2294 evaluated, 2293 expanded
[t=0.123857s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.123873s, 28016 KB] g=248, 2327 evaluated, 2326 expanded
[t=0.12411s, 28148 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.124126s, 28148 KB] g=256, 2338 evaluated, 2337 expanded
[t=0.124147s, 28148 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.124156s, 28148 KB] g=257, 2339 evaluated, 2338 expanded
[t=0.124173s, 28148 KB] Solution found!
[t=0.124192s, 28148 KB] Actual search time: 0.0889125s
unstack b10 b27 (1)
put-down b10 (1)
unstack b16 b1 (1)
put-down b16 (1)
unstack b1 b20 (1)
put-down b1 (1)
unstack b17 b28 (1)
put-down b17 (1)
unstack b27 b15 (1)
put-down b27 (1)
unstack b15 b2 (1)
stack b15 b16 (1)
unstack b28 b3 (1)
stack b28 b17 (1)
unstack b3 b19 (1)
stack b3 b2 (1)
pick-up b21 (1)
stack b21 b1 (1)
unstack b19 b7 (1)
put-down b19 (1)
unstack b7 b22 (1)
stack b7 b15 (1)
pick-up b27 (1)
stack b27 b19 (1)
unstack b22 b23 (1)
put-down b22 (1)
unstack b23 b11 (1)
stack b23 b8 (1)
unstack b11 b13 (1)
put-down b11 (1)
pick-up b20 (1)
stack b20 b13 (1)
unstack b23 b8 (1)
put-down b23 (1)
unstack b8 b14 (1)
put-down b8 (1)
pick-up b11 (1)
stack b11 b14 (1)
pick-up b23 (1)
stack b23 b8 (1)
unstack b3 b2 (1)
put-down b3 (1)
pick-up b2 (1)
stack b2 b28 (1)
pick-up b3 (1)
stack b3 b2 (1)
unstack b11 b14 (1)
put-down b11 (1)
unstack b14 b25 (1)
put-down b14 (1)
unstack b25 b4 (1)
put-down b25 (1)
unstack b4 b26 (1)
put-down b4 (1)
unstack b26 b12 (1)
put-down b26 (1)
unstack b12 b9 (1)
put-down b12 (1)
unstack b9 b29 (1)
stack b9 b4 (1)
pick-up b10 (1)
stack b10 b9 (1)
pick-up b11 (1)
stack b11 b14 (1)
unstack b29 b5 (1)
stack b29 b7 (1)
unstack b5 b18 (1)
stack b5 b21 (1)
unstack b18 b24 (1)
put-down b18 (1)
unstack b24 b6 (1)
stack b24 b27 (1)
pick-up b22 (1)
stack b22 b6 (1)
pick-up b25 (1)
stack b25 b24 (1)
unstack b22 b6 (1)
put-down b22 (1)
pick-up b6 (1)
stack b6 b29 (1)
pick-up b22 (1)
stack b22 b6 (1)
unstack b23 b8 (1)
put-down b23 (1)
pick-up b8 (1)
stack b8 b18 (1)
pick-up b23 (1)
stack b23 b8 (1)
unstack b11 b14 (1)
put-down b11 (1)
pick-up b14 (1)
stack b14 b25 (1)
pick-up b11 (1)
stack b11 b14 (1)
unstack b5 b21 (1)
put-down b5 (1)
unstack b21 b1 (1)
put-down b21 (1)
pick-up b1 (1)
stack b1 b22 (1)
pick-up b21 (1)
stack b21 b1 (1)
pick-up b5 (1)
stack b5 b21 (1)
unstack b3 b2 (1)
put-down b3 (1)
unstack b2 b28 (1)
put-down b2 (1)
pick-up b3 (1)
stack b3 b2 (1)
unstack b28 b17 (1)
put-down b28 (1)
pick-up b17 (1)
stack b17 b5 (1)
pick-up b28 (1)
stack b28 b17 (1)
unstack b3 b2 (1)
put-down b3 (1)
pick-up b2 (1)
stack b2 b28 (1)
pick-up b3 (1)
stack b3 b2 (1)
unstack b11 b14 (1)
put-down b11 (1)
unstack b14 b25 (1)
put-down b14 (1)
unstack b25 b24 (1)
put-down b25 (1)
pick-up b14 (1)
stack b14 b25 (1)
pick-up b11 (1)
stack b11 b14 (1)
unstack b24 b27 (1)
put-down b24 (1)
unstack b27 b19 (1)
put-down b27 (1)
pick-up b19 (1)
stack b19 b26 (1)
pick-up b27 (1)
stack b27 b19 (1)
pick-up b24 (1)
stack b24 b27 (1)
unstack b11 b14 (1)
put-down b11 (1)
unstack b14 b25 (1)
put-down b14 (1)
pick-up b11 (1)
stack b11 b14 (1)
pick-up b25 (1)
stack b25 b24 (1)
unstack b11 b14 (1)
put-down b11 (1)
pick-up b14 (1)
stack b14 b25 (1)
pick-up b11 (1)
stack b11 b14 (1)
unstack b3 b2 (1)
put-down b3 (1)
unstack b2 b28 (1)
put-down b2 (1)
pick-up b3 (1)
stack b3 b2 (1)
unstack b28 b17 (1)
put-down b28 (1)
unstack b17 b5 (1)
put-down b17 (1)
unstack b5 b21 (1)
put-down b5 (1)
pick-up b17 (1)
stack b17 b5 (1)
pick-up b28 (1)
stack b28 b17 (1)
unstack b3 b2 (1)
put-down b3 (1)
pick-up b2 (1)
stack b2 b28 (1)
pick-up b3 (1)
stack b3 b2 (1)
unstack b21 b1 (1)
put-down b21 (1)
unstack b1 b22 (1)
put-down b1 (1)
pick-up b21 (1)
stack b21 b1 (1)
unstack b22 b6 (1)
put-down b22 (1)
unstack b6 b29 (1)
put-down b6 (1)
pick-up b22 (1)
stack b22 b6 (1)
unstack b21 b1 (1)
put-down b21 (1)
pick-up b1 (1)
stack b1 b22 (1)
pick-up b21 (1)
stack b21 b1 (1)
unstack b29 b7 (1)
put-down b29 (1)
unstack b7 b15 (1)
put-down b7 (1)
pick-up b29 (1)
stack b29 b7 (1)
unstack b15 b16 (1)
put-down b15 (1)
pick-up b16 (1)
stack b16 b11 (1)
pick-up b15 (1)
stack b15 b16 (1)
unstack b29 b7 (1)
put-down b29 (1)
pick-up b7 (1)
stack b7 b15 (1)
pick-up b29 (1)
stack b29 b7 (1)
unstack b21 b1 (1)
put-down b21 (1)
unstack b1 b22 (1)
put-down b1 (1)
pick-up b21 (1)
stack b21 b1 (1)
unstack b22 b6 (1)
put-down b22 (1)
pick-up b6 (1)
stack b6 b29 (1)
pick-up b22 (1)
stack b22 b6 (1)
unstack b21 b1 (1)
put-down b21 (1)
pick-up b1 (1)
stack b1 b22 (1)
pick-up b21 (1)
stack b21 b1 (1)
unstack b3 b2 (1)
put-down b3 (1)
unstack b2 b28 (1)
put-down b2 (1)
unstack b28 b17 (1)
put-down b28 (1)
pick-up b2 (1)
stack b2 b28 (1)
pick-up b3 (1)
stack b3 b2 (1)
unstack b17 b5 (1)
put-down b17 (1)
pick-up b5 (1)
stack b5 b21 (1)
pick-up b17 (1)
stack b17 b5 (1)
unstack b3 b2 (1)
put-down b3 (1)
unstack b2 b28 (1)
put-down b2 (1)
pick-up b28 (1)
stack b28 b17 (1)
pick-up b2 (1)
stack b2 b28 (1)
pick-up b3 (1)
stack b3 b2 (1)
[t=0.124201s, 28148 KB] Plan length: 258 step(s).
[t=0.124201s, 28148 KB] Plan cost: 258
[t=0.124201s, 28148 KB] Expanded 2339 state(s).
[t=0.124201s, 28148 KB] Reopened 0 state(s).
[t=0.124201s, 28148 KB] Evaluated 2340 state(s).
[t=0.124201s, 28148 KB] Evaluations: 4680
[t=0.124201s, 28148 KB] Generated 23972 state(s).
[t=0.124201s, 28148 KB] Dead ends: 0 state(s).
[t=0.124201s, 28148 KB] Number of registered states: 2340
[t=0.124201s, 28148 KB] Int hash set load factor: 2340/4096 = 0.571289
[t=0.124201s, 28148 KB] Int hash set resizes: 12
[t=0.124201s, 28148 KB] Search time: 0.0889665s
[t=0.124201s, 28148 KB] Total time: 0.124201s
Solution found.
Peak memory: 28148 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.33s
