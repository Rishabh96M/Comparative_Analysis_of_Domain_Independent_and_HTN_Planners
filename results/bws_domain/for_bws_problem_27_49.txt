INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_27/bws_problem_27_49.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.000s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.014s wall-clock]
2378 relevant atoms
1593 auxiliary atoms
3971 final queue length
6949 total queue pushes
Completing instantiation... [0.020s CPU, 0.023s wall-clock]
Instantiating: [0.040s CPU, 0.039s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
28 uncovered facts
Choosing groups: [0.010s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.008s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.001s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.002s wall-clock]
Translating task: [0.050s CPU, 0.048s wall-clock]
2160 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
54 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.021s wall-clock]
Reordering and filtering variables...
55 of 55 variables necessary.
28 of 55 mutex groups necessary.
1458 of 1458 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.010s wall-clock]
Translator variables: 55
Translator derived variables: 0
Translator facts: 812
Translator goal facts: 23
Translator mutex groups: 28
Translator total mutex groups size: 784
Translator operators: 1458
Translator axioms: 0
Translator task size: 12528
Translator peak memory: 39412 KB
Writing output... [0.010s CPU, 0.011s wall-clock]
Done! [0.140s CPU, 0.143s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=3.1799e-05s, 24488 KB] reading input...
[t=0.00478707s, 25936 KB] done reading input!
[t=0.00614734s, 26332 KB] Initializing landmark count heuristic...
[t=0.00619367s, 26332 KB] Generating landmark graph...
[t=0.0062807s, 26332 KB] Building a landmark graph with reasonable orders.
[t=0.00636017s, 26464 KB] Initializing Exploration...
[t=0.0067893s, 26732 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0240193s, 27392 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0241207s, 27392 KB] Landmarks generation time: 0.017848s
[t=0.0241427s, 27392 KB] Discovered 116 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0241593s, 27392 KB] 385 edges
[t=0.0241689s, 27392 KB] approx. reasonable orders
[t=0.0256638s, 27392 KB] approx. obedient reasonable orders
[t=0.0256913s, 27392 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0257006s, 27392 KB] Landmarks generation time: 0.0195029s
[t=0.0257103s, 27392 KB] Discovered 116 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0257183s, 27392 KB] 406 edges
[t=0.0257263s, 27392 KB] Landmark graph generation time: 0.0195391s
[t=0.0257342s, 27392 KB] Landmark graph contains 116 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0257418s, 27392 KB] Landmark graph contains 406 orderings.
[t=0.0262119s, 27416 KB] Simplifying 5778 unary operators... done! [4374 unary operators]
[t=0.0275957s, 27548 KB] time to simplify: 0.00147206s
[t=0.0277671s, 27548 KB] Initializing additive heuristic...
[t=0.0277835s, 27548 KB] Initializing FF heuristic...
[t=0.0278352s, 27548 KB] Building successor generator...done!
[t=0.0280862s, 27548 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0280947s, 27548 KB] time for successor generation creation: 0.00022437s
[t=0.0281071s, 27548 KB] Variables: 55
[t=0.0281151s, 27548 KB] FactPairs: 812
[t=0.0281228s, 27548 KB] Bytes per state: 24
[t=0.0282049s, 27548 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0282372s, 27548 KB] 55 initial landmarks, 23 goal landmarks
[t=0.0282963s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 61
[t=0.0283054s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 48
[t=0.0283136s, 27548 KB] g=0, 1 evaluated, 0 expanded
[t=0.0283278s, 27548 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 61
[t=0.0283363s, 27548 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 48
[t=0.0284624s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 60
[t=0.0284716s, 27548 KB] g=1, 4 evaluated, 3 expanded
[t=0.0288664s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 47
[t=0.0288869s, 27548 KB] g=2, 15 evaluated, 14 expanded
[t=0.0292696s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.0292854s, 27548 KB] g=4, 25 evaluated, 24 expanded
[t=0.0299035s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 57
[t=0.02992s, 27548 KB] g=6, 42 evaluated, 41 expanded
[t=0.0304972s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0305207s, 27548 KB] g=8, 57 evaluated, 56 expanded
[t=0.0308138s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0308243s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 46
[t=0.0308338s, 27548 KB] g=8, 65 evaluated, 64 expanded
[t=0.0311717s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0311839s, 27548 KB] g=10, 74 evaluated, 73 expanded
[t=0.0314931s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0315023s, 27548 KB] g=12, 83 evaluated, 82 expanded
[t=0.0318841s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0318942s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0319021s, 27548 KB] g=14, 94 evaluated, 93 expanded
[t=0.03235s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0323886s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.0324037s, 27548 KB] g=16, 105 evaluated, 104 expanded
[t=0.0329231s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.032946s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0329602s, 27548 KB] g=18, 115 evaluated, 114 expanded
[t=0.033788s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0338223s, 27548 KB] g=22, 136 evaluated, 135 expanded
[t=0.0342059s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0342157s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.034225s, 27548 KB] g=24, 147 evaluated, 146 expanded
[t=0.0346314s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0346412s, 27548 KB] g=26, 158 evaluated, 157 expanded
[t=0.0346861s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0346954s, 27548 KB] g=26, 159 evaluated, 158 expanded
[t=0.0353153s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0353272s, 27548 KB] g=28, 177 evaluated, 176 expanded
[t=0.035764s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0357729s, 27548 KB] g=30, 190 evaluated, 189 expanded
[t=0.0358154s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0358241s, 27548 KB] g=31, 191 evaluated, 190 expanded
[t=0.0362916s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0363006s, 27548 KB] g=32, 205 evaluated, 204 expanded
[t=0.0363723s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0363807s, 27548 KB] g=33, 207 evaluated, 206 expanded
[t=0.036871s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0368794s, 27548 KB] g=36, 222 evaluated, 221 expanded
[t=0.0387442s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0387556s, 27548 KB] g=38, 279 evaluated, 278 expanded
[t=0.0390804s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0390929s, 27548 KB] g=39, 288 evaluated, 287 expanded
[t=0.039177s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0391859s, 27548 KB] g=40, 290 evaluated, 289 expanded
[t=0.0397401s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0397495s, 27548 KB] g=42, 307 evaluated, 306 expanded
[t=0.0398576s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.039866s, 27548 KB] g=42, 310 evaluated, 309 expanded
[t=0.0406237s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0406353s, 27548 KB] g=44, 333 evaluated, 332 expanded
[t=0.0409097s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0409191s, 27548 KB] g=46, 341 evaluated, 340 expanded
[t=0.0414099s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0414204s, 27548 KB] g=48, 355 evaluated, 354 expanded
[t=0.0414961s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0415267s, 27548 KB] g=49, 357 evaluated, 356 expanded
[t=0.0419944s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0420049s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0420126s, 27548 KB] g=50, 371 evaluated, 370 expanded
[t=0.0420543s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0420627s, 27548 KB] g=51, 372 evaluated, 371 expanded
[t=0.0424545s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0424635s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0424712s, 27548 KB] g=52, 384 evaluated, 383 expanded
[t=0.0425129s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0425213s, 27548 KB] g=53, 385 evaluated, 384 expanded
[t=0.0428593s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.042869s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0428803s, 27548 KB] g=54, 395 evaluated, 394 expanded
[t=0.0429588s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0429673s, 27548 KB] g=55, 397 evaluated, 396 expanded
[t=0.0433181s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.043328s, 27548 KB] g=56, 407 evaluated, 406 expanded
[t=0.0434053s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0434139s, 27548 KB] g=57, 409 evaluated, 408 expanded
[t=0.0438108s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0438196s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0438275s, 27548 KB] g=58, 421 evaluated, 420 expanded
[t=0.0438695s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0438781s, 27548 KB] g=59, 422 evaluated, 421 expanded
[t=0.0441788s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0441883s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0441961s, 27548 KB] g=60, 431 evaluated, 430 expanded
[t=0.0442403s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0442502s, 27548 KB] g=61, 432 evaluated, 431 expanded
[t=0.0446644s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0446736s, 27548 KB] g=64, 444 evaluated, 443 expanded
[t=0.0449985s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0450071s, 27548 KB] g=66, 454 evaluated, 453 expanded
[t=0.0455015s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0455146s, 27548 KB] g=68, 468 evaluated, 467 expanded
[t=0.0457785s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0457891s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0457998s, 27548 KB] g=70, 476 evaluated, 475 expanded
[t=0.0461616s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0461753s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0461862s, 27548 KB] g=74, 487 evaluated, 486 expanded
[t=0.0463561s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0463668s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0463771s, 27548 KB] g=76, 492 evaluated, 491 expanded
[t=0.0469182s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0469291s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0469407s, 27548 KB] g=80, 508 evaluated, 507 expanded
[t=0.0470988s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0471122s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0471237s, 27548 KB] g=82, 512 evaluated, 511 expanded
[t=0.051027s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.05106s, 27548 KB] g=100, 633 evaluated, 632 expanded
[t=0.0512743s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0512885s, 27548 KB] g=102, 639 evaluated, 638 expanded
[t=0.0522123s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0522256s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0522383s, 27548 KB] g=116, 667 evaluated, 666 expanded
[t=0.0622018s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0622374s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.062251s, 27548 KB] g=102, 977 evaluated, 976 expanded
[t=0.0627433s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0627546s, 27548 KB] g=106, 993 evaluated, 992 expanded
[t=0.0628936s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0629045s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0629157s, 27548 KB] g=108, 997 evaluated, 996 expanded
[t=0.0638411s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0638559s, 27548 KB] g=116, 1027 evaluated, 1026 expanded
[t=0.0641145s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0641253s, 27548 KB] g=120, 1036 evaluated, 1035 expanded
[t=0.0642213s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0642314s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.064242s, 27548 KB] g=122, 1039 evaluated, 1038 expanded
[t=0.065064s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0650851s, 27548 KB] g=140, 1076 evaluated, 1075 expanded
[t=0.0651393s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0651526s, 27548 KB] g=140, 1078 evaluated, 1077 expanded
[t=0.0652232s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0652356s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0652459s, 27548 KB] g=142, 1081 evaluated, 1080 expanded
[t=0.0654461s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0654703s, 27548 KB] g=150, 1092 evaluated, 1091 expanded
[t=0.0655448s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0655564s, 27548 KB] g=154, 1096 evaluated, 1095 expanded
[t=0.0655787s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0655882s, 27548 KB] g=155, 1097 evaluated, 1096 expanded
[t=0.0656081s, 27548 KB] Solution found!
[t=0.0656253s, 27548 KB] Actual search time: 0.0373868s
unstack b12 b21 (1)
put-down b12 (1)
unstack b10 b23 (1)
put-down b10 (1)
unstack b20 b2 (1)
stack b20 b21 (1)
pick-up b10 (1)
stack b10 b20 (1)
unstack b4 b16 (1)
put-down b4 (1)
unstack b16 b6 (1)
put-down b16 (1)
unstack b6 b25 (1)
stack b6 b10 (1)
pick-up b11 (1)
stack b11 b6 (1)
pick-up b25 (1)
stack b25 b2 (1)
unstack b24 b7 (1)
put-down b24 (1)
unstack b7 b27 (1)
put-down b7 (1)
unstack b27 b1 (1)
put-down b27 (1)
unstack b1 b13 (1)
stack b1 b14 (1)
pick-up b12 (1)
stack b12 b1 (1)
pick-up b13 (1)
stack b13 b11 (1)
pick-up b24 (1)
stack b24 b7 (1)
unstack b15 b3 (1)
put-down b15 (1)
unstack b12 b1 (1)
put-down b12 (1)
unstack b3 b8 (1)
stack b3 b27 (1)
pick-up b12 (1)
stack b12 b1 (1)
pick-up b15 (1)
stack b15 b3 (1)
unstack b8 b26 (1)
put-down b8 (1)
unstack b26 b9 (1)
stack b26 b23 (1)
unstack b9 b17 (1)
put-down b9 (1)
pick-up b16 (1)
stack b16 b9 (1)
unstack b17 b19 (1)
stack b17 b4 (1)
unstack b19 b5 (1)
stack b19 b15 (1)
unstack b5 b22 (1)
put-down b5 (1)
pick-up b22 (1)
stack b22 b25 (1)
pick-up b8 (1)
stack b8 b19 (1)
unstack b12 b1 (1)
put-down b12 (1)
unstack b1 b14 (1)
put-down b1 (1)
pick-up b14 (1)
stack b14 b22 (1)
pick-up b1 (1)
stack b1 b14 (1)
pick-up b12 (1)
stack b12 b1 (1)
unstack b26 b23 (1)
put-down b26 (1)
pick-up b23 (1)
stack b23 b5 (1)
pick-up b26 (1)
stack b26 b23 (1)
unstack b17 b4 (1)
put-down b17 (1)
pick-up b4 (1)
stack b4 b26 (1)
pick-up b17 (1)
stack b17 b4 (1)
unstack b13 b11 (1)
put-down b13 (1)
unstack b11 b6 (1)
put-down b11 (1)
unstack b6 b10 (1)
put-down b6 (1)
pick-up b11 (1)
stack b11 b6 (1)
pick-up b13 (1)
stack b13 b11 (1)
unstack b10 b20 (1)
put-down b10 (1)
unstack b20 b21 (1)
put-down b20 (1)
unstack b21 b18 (1)
stack b21 b17 (1)
pick-up b10 (1)
stack b10 b20 (1)
pick-up b18 (1)
stack b18 b16 (1)
unstack b10 b20 (1)
put-down b10 (1)
pick-up b20 (1)
stack b20 b21 (1)
pick-up b10 (1)
stack b10 b20 (1)
unstack b13 b11 (1)
put-down b13 (1)
unstack b11 b6 (1)
put-down b11 (1)
pick-up b13 (1)
stack b13 b11 (1)
pick-up b6 (1)
stack b6 b10 (1)
unstack b13 b11 (1)
put-down b13 (1)
pick-up b11 (1)
stack b11 b6 (1)
pick-up b13 (1)
stack b13 b11 (1)
unstack b12 b1 (1)
put-down b12 (1)
unstack b1 b14 (1)
put-down b1 (1)
unstack b14 b22 (1)
put-down b14 (1)
pick-up b1 (1)
stack b1 b14 (1)
pick-up b12 (1)
stack b12 b1 (1)
unstack b22 b25 (1)
put-down b22 (1)
unstack b25 b2 (1)
put-down b25 (1)
pick-up b2 (1)
stack b2 b13 (1)
pick-up b25 (1)
stack b25 b2 (1)
pick-up b22 (1)
stack b22 b25 (1)
unstack b12 b1 (1)
put-down b12 (1)
unstack b1 b14 (1)
put-down b1 (1)
pick-up b12 (1)
stack b12 b1 (1)
pick-up b14 (1)
stack b14 b22 (1)
unstack b12 b1 (1)
put-down b12 (1)
pick-up b1 (1)
stack b1 b14 (1)
pick-up b12 (1)
stack b12 b1 (1)
[t=0.0656363s, 27548 KB] Plan length: 156 step(s).
[t=0.0656363s, 27548 KB] Plan cost: 156
[t=0.0656363s, 27548 KB] Expanded 1097 state(s).
[t=0.0656363s, 27548 KB] Reopened 0 state(s).
[t=0.0656363s, 27548 KB] Evaluated 1098 state(s).
[t=0.0656363s, 27548 KB] Evaluations: 2196
[t=0.0656363s, 27548 KB] Generated 10547 state(s).
[t=0.0656363s, 27548 KB] Dead ends: 0 state(s).
[t=0.0656363s, 27548 KB] Number of registered states: 1098
[t=0.0656363s, 27548 KB] Int hash set load factor: 1098/2048 = 0.536133
[t=0.0656363s, 27548 KB] Int hash set resizes: 11
[t=0.0656363s, 27548 KB] Search time: 0.0374317s
[t=0.0656363s, 27548 KB] Total time: 0.0656363s
Solution found.
Peak memory: 27548 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.25s
