INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_21/bws_problem_21_92.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.009s wall-clock]
1472 relevant atoms
987 auxiliary atoms
2459 final queue length
4269 total queue pushes
Completing instantiation... [0.020s CPU, 0.015s wall-clock]
Instantiating: [0.030s CPU, 0.026s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
22 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.006s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.023s wall-clock]
1302 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
42 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.011s wall-clock]
Reordering and filtering variables...
43 of 43 variables necessary.
22 of 43 mutex groups necessary.
882 of 882 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.005s wall-clock]
Translator variables: 43
Translator derived variables: 0
Translator facts: 506
Translator goal facts: 17
Translator mutex groups: 22
Translator total mutex groups size: 484
Translator operators: 882
Translator axioms: 0
Translator task size: 7602
Translator peak memory: 36456 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.080s CPU, 0.082s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=4.3679e-05s, 24488 KB] reading input...
[t=0.00271387s, 25268 KB] done reading input!
[t=0.0040641s, 25664 KB] Initializing landmark count heuristic...
[t=0.00418277s, 25664 KB] Generating landmark graph...
[t=0.00427724s, 25664 KB] Building a landmark graph with reasonable orders.
[t=0.00437411s, 25664 KB] Initializing Exploration...
[t=0.00471368s, 25852 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0135569s, 26248 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0136229s, 26248 KB] Landmarks generation time: 0.00933485s
[t=0.0136411s, 26248 KB] Discovered 89 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0136724s, 26248 KB] 297 edges
[t=0.0136846s, 26248 KB] approx. reasonable orders
[t=0.0153323s, 26248 KB] approx. obedient reasonable orders
[t=0.0153644s, 26248 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0153757s, 26248 KB] Landmarks generation time: 0.0111805s
[t=0.0153876s, 26248 KB] Discovered 89 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0153981s, 26248 KB] 332 edges
[t=0.0154088s, 26248 KB] Landmark graph generation time: 0.0112351s
[t=0.0154197s, 26248 KB] Landmark graph contains 89 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0154312s, 26248 KB] Landmark graph contains 332 orderings.
[t=0.0157312s, 26248 KB] Simplifying 3486 unary operators... done! [2646 unary operators]
[t=0.0165974s, 26380 KB] time to simplify: 0.000940291s
[t=0.0167284s, 26380 KB] Initializing additive heuristic...
[t=0.0167434s, 26380 KB] Initializing FF heuristic...
[t=0.0167962s, 26380 KB] Building successor generator...done!
[t=0.0169784s, 26380 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0169873s, 26380 KB] time for successor generation creation: 0.00014486s
[t=0.0170021s, 26380 KB] Variables: 43
[t=0.017011s, 26380 KB] FactPairs: 506
[t=0.0170208s, 26380 KB] Bytes per state: 16
[t=0.0171176s, 26380 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0171521s, 26380 KB] 41 initial landmarks, 17 goal landmarks
[t=0.0172231s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0172395s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0172908s, 26380 KB] g=0, 1 evaluated, 0 expanded
[t=0.0173078s, 26380 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0173397s, 26380 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0174961s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0175073s, 26380 KB] g=1, 5 evaluated, 4 expanded
[t=0.017586s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0175952s, 26380 KB] g=3, 8 evaluated, 7 expanded
[t=0.0176506s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0176597s, 26380 KB] g=4, 10 evaluated, 9 expanded
[t=0.0178696s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0178787s, 26380 KB] g=6, 19 evaluated, 18 expanded
[t=0.0179309s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0179395s, 26380 KB] g=7, 21 evaluated, 20 expanded
[t=0.0182553s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0182651s, 26380 KB] g=10, 35 evaluated, 34 expanded
[t=0.0186927s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0187037s, 26380 KB] g=12, 54 evaluated, 53 expanded
[t=0.0189674s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0189799s, 26380 KB] g=10, 65 evaluated, 64 expanded
[t=0.0191737s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0191854s, 26380 KB] g=14, 73 evaluated, 72 expanded
[t=0.0195603s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0195773s, 26380 KB] g=16, 89 evaluated, 88 expanded
[t=0.0201358s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0201637s, 26380 KB] g=18, 108 evaluated, 107 expanded
[t=0.0202518s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0202625s, 26380 KB] g=18, 110 evaluated, 109 expanded
[t=0.0205492s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.020562s, 26380 KB] g=20, 122 evaluated, 121 expanded
[t=0.0209138s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0209267s, 26380 KB] g=20, 136 evaluated, 135 expanded
[t=0.02142s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0214355s, 26380 KB] g=22, 157 evaluated, 156 expanded
[t=0.0215374s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0215491s, 26380 KB] g=22, 161 evaluated, 160 expanded
[t=0.0220409s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0220583s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0220706s, 26380 KB] g=24, 182 evaluated, 181 expanded
[t=0.022128s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.022137s, 26380 KB] g=25, 184 evaluated, 183 expanded
[t=0.0223931s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0224064s, 26380 KB] g=27, 192 evaluated, 191 expanded
[t=0.0224552s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0224648s, 26380 KB] g=26, 193 evaluated, 192 expanded
[t=0.0225221s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0225313s, 26380 KB] g=27, 195 evaluated, 194 expanded
[t=0.0226762s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0226861s, 26380 KB] g=29, 201 evaluated, 200 expanded
[t=0.0230282s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0230395s, 26380 KB] g=30, 216 evaluated, 215 expanded
[t=0.0230973s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0231066s, 26380 KB] g=32, 218 evaluated, 217 expanded
[t=0.023421s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0234322s, 26380 KB] g=32, 231 evaluated, 230 expanded
[t=0.0235831s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0235924s, 26380 KB] g=34, 237 evaluated, 236 expanded
[t=0.0241053s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0241173s, 26380 KB] g=34, 257 evaluated, 256 expanded
[t=0.0241496s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0241596s, 26380 KB] g=36, 258 evaluated, 257 expanded
[t=0.0244457s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0244562s, 26380 KB] g=36, 271 evaluated, 270 expanded
[t=0.024794s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0248091s, 26380 KB] g=39, 285 evaluated, 284 expanded
[t=0.0250151s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0250315s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0250402s, 26380 KB] g=40, 292 evaluated, 291 expanded
[t=0.0251149s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0251397s, 26380 KB] g=41, 295 evaluated, 294 expanded
[t=0.0254051s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0254253s, 26380 KB] g=44, 307 evaluated, 306 expanded
[t=0.0256745s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0257027s, 26380 KB] g=44, 316 evaluated, 315 expanded
[t=0.0258635s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0258758s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0258873s, 26380 KB] g=46, 322 evaluated, 321 expanded
[t=0.026036s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0260508s, 26380 KB] g=48, 327 evaluated, 326 expanded
[t=0.0264113s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0264345s, 26380 KB] g=50, 342 evaluated, 341 expanded
[t=0.0265716s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0265835s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.026594s, 26380 KB] g=52, 347 evaluated, 346 expanded
[t=0.0271558s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0271696s, 26380 KB] g=58, 371 evaluated, 370 expanded
[t=0.0273674s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.027433s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0274454s, 26380 KB] g=60, 377 evaluated, 376 expanded
[t=0.0275724s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0276007s, 26380 KB] g=60, 381 evaluated, 380 expanded
[t=0.0278084s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0278215s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0278454s, 26380 KB] g=62, 386 evaluated, 385 expanded
[t=0.0282264s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.028237s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0282475s, 26380 KB] g=66, 402 evaluated, 401 expanded
[t=0.0283485s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0283585s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0283692s, 26380 KB] g=68, 406 evaluated, 405 expanded
[t=0.0295657s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0295892s, 26380 KB] g=80, 459 evaluated, 458 expanded
[t=0.0297031s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0297134s, 26380 KB] g=82, 464 evaluated, 463 expanded
[t=0.0298043s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0298152s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0298255s, 26380 KB] g=84, 468 evaluated, 467 expanded
[t=0.0302527s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0302713s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0302834s, 26380 KB] g=90, 487 evaluated, 486 expanded
[t=0.030605s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0306155s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0306263s, 26380 KB] g=96, 502 evaluated, 501 expanded
[t=0.0313483s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0313592s, 26380 KB] g=102, 537 evaluated, 536 expanded
[t=0.0315365s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0315467s, 26380 KB] g=106, 546 evaluated, 545 expanded
[t=0.0316143s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0316246s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0316359s, 26380 KB] g=108, 549 evaluated, 548 expanded
[t=0.031898s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0319199s, 26380 KB] g=120, 565 evaluated, 564 expanded
[t=0.0319858s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0319974s, 26380 KB] g=124, 569 evaluated, 568 expanded
[t=0.0320327s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0320423s, 26380 KB] g=125, 570 evaluated, 569 expanded
[t=0.0320605s, 26380 KB] Solution found!
[t=0.0320731s, 26380 KB] Actual search time: 0.0149184s
unstack b8 b15 (1)
put-down b8 (1)
unstack b15 b7 (1)
stack b15 b17 (1)
unstack b7 b9 (1)
put-down b7 (1)
unstack b15 b17 (1)
put-down b15 (1)
unstack b17 b5 (1)
put-down b17 (1)
unstack b3 b4 (1)
put-down b3 (1)
unstack b5 b13 (1)
put-down b5 (1)
unstack b13 b20 (1)
stack b13 b7 (1)
pick-up b15 (1)
stack b15 b17 (1)
unstack b4 b12 (1)
put-down b4 (1)
pick-up b8 (1)
stack b8 b5 (1)
unstack b9 b10 (1)
stack b9 b20 (1)
pick-up b10 (1)
stack b10 b13 (1)
unstack b12 b11 (1)
put-down b12 (1)
unstack b11 b21 (1)
put-down b11 (1)
pick-up b12 (1)
stack b12 b21 (1)
unstack b6 b1 (1)
stack b6 b10 (1)
unstack b1 b19 (1)
stack b1 b3 (1)
unstack b19 b16 (1)
put-down b19 (1)
pick-up b16 (1)
stack b16 b9 (1)
unstack b15 b17 (1)
put-down b15 (1)
pick-up b17 (1)
stack b17 b16 (1)
pick-up b15 (1)
stack b15 b17 (1)
unstack b1 b3 (1)
put-down b1 (1)
pick-up b3 (1)
stack b3 b19 (1)
pick-up b1 (1)
stack b1 b3 (1)
unstack b12 b21 (1)
put-down b12 (1)
unstack b21 b14 (1)
put-down b21 (1)
unstack b14 b18 (1)
stack b14 b6 (1)
pick-up b21 (1)
stack b21 b14 (1)
pick-up b12 (1)
stack b12 b21 (1)
unstack b8 b5 (1)
put-down b8 (1)
pick-up b5 (1)
stack b5 b11 (1)
pick-up b8 (1)
stack b8 b5 (1)
unstack b15 b17 (1)
put-down b15 (1)
unstack b17 b16 (1)
put-down b17 (1)
pick-up b15 (1)
stack b15 b17 (1)
unstack b16 b9 (1)
put-down b16 (1)
unstack b9 b20 (1)
put-down b9 (1)
unstack b20 b2 (1)
stack b20 b1 (1)
pick-up b16 (1)
stack b16 b9 (1)
pick-up b2 (1)
stack b2 b4 (1)
unstack b15 b17 (1)
put-down b15 (1)
pick-up b17 (1)
stack b17 b16 (1)
pick-up b15 (1)
stack b15 b17 (1)
unstack b20 b1 (1)
put-down b20 (1)
unstack b1 b3 (1)
put-down b1 (1)
pick-up b20 (1)
stack b20 b1 (1)
unstack b3 b19 (1)
put-down b3 (1)
pick-up b19 (1)
stack b19 b2 (1)
pick-up b3 (1)
stack b3 b19 (1)
unstack b20 b1 (1)
put-down b20 (1)
pick-up b1 (1)
stack b1 b3 (1)
pick-up b20 (1)
stack b20 b1 (1)
unstack b15 b17 (1)
put-down b15 (1)
unstack b17 b16 (1)
put-down b17 (1)
pick-up b15 (1)
stack b15 b17 (1)
unstack b16 b9 (1)
put-down b16 (1)
pick-up b9 (1)
stack b9 b20 (1)
pick-up b16 (1)
stack b16 b9 (1)
unstack b15 b17 (1)
put-down b15 (1)
pick-up b17 (1)
stack b17 b16 (1)
pick-up b15 (1)
stack b15 b17 (1)
[t=0.0320837s, 26380 KB] Plan length: 126 step(s).
[t=0.0320837s, 26380 KB] Plan cost: 126
[t=0.0320837s, 26380 KB] Expanded 570 state(s).
[t=0.0320837s, 26380 KB] Reopened 0 state(s).
[t=0.0320837s, 26380 KB] Evaluated 571 state(s).
[t=0.0320837s, 26380 KB] Evaluations: 1142
[t=0.0320837s, 26380 KB] Generated 5204 state(s).
[t=0.0320837s, 26380 KB] Dead ends: 0 state(s).
[t=0.0320837s, 26380 KB] Number of registered states: 571
[t=0.0320837s, 26380 KB] Int hash set load factor: 571/1024 = 0.557617
[t=0.0320837s, 26380 KB] Int hash set resizes: 10
[t=0.0320837s, 26380 KB] Search time: 0.0149665s
[t=0.0320837s, 26380 KB] Total time: 0.0320837s
Solution found.
Peak memory: 26380 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.17s
