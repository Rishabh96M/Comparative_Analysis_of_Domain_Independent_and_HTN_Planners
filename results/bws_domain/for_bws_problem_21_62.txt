INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_21/bws_problem_21_62.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.009s wall-clock]
1472 relevant atoms
987 auxiliary atoms
2459 final queue length
4269 total queue pushes
Completing instantiation... [0.010s CPU, 0.015s wall-clock]
Instantiating: [0.020s CPU, 0.026s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.010s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
22 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.006s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.022s wall-clock]
1302 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
42 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.011s wall-clock]
Reordering and filtering variables...
43 of 43 variables necessary.
22 of 43 mutex groups necessary.
882 of 882 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 43
Translator derived variables: 0
Translator facts: 506
Translator goal facts: 15
Translator mutex groups: 22
Translator total mutex groups size: 484
Translator operators: 882
Translator axioms: 0
Translator task size: 7600
Translator peak memory: 36460 KB
Writing output... [0.000s CPU, 0.005s wall-clock]
Done! [0.070s CPU, 0.079s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=4.2601e-05s, 24488 KB] reading input...
[t=0.00292144s, 25268 KB] done reading input!
[t=0.00384659s, 25664 KB] Initializing landmark count heuristic...
[t=0.00389191s, 25664 KB] Generating landmark graph...
[t=0.00396288s, 25664 KB] Building a landmark graph with reasonable orders.
[t=0.00401641s, 25664 KB] Initializing Exploration...
[t=0.00430434s, 25852 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0120894s, 26248 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0122802s, 26248 KB] Landmarks generation time: 0.00831996s
[t=0.0122965s, 26248 KB] Discovered 84 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0123255s, 26248 KB] 275 edges
[t=0.0123409s, 26248 KB] approx. reasonable orders
[t=0.0137715s, 26248 KB] approx. obedient reasonable orders
[t=0.0138037s, 26248 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0138138s, 26248 KB] Landmarks generation time: 0.00991937s
[t=0.0138234s, 26248 KB] Discovered 84 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0138313s, 26248 KB] 306 edges
[t=0.0138405s, 26248 KB] Landmark graph generation time: 0.00995601s
[t=0.0138494s, 26248 KB] Landmark graph contains 84 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0138574s, 26248 KB] Landmark graph contains 306 orderings.
[t=0.0142156s, 26248 KB] Simplifying 3486 unary operators... done! [2646 unary operators]
[t=0.0150674s, 26380 KB] time to simplify: 0.000910763s
[t=0.0151949s, 26380 KB] Initializing additive heuristic...
[t=0.0152096s, 26380 KB] Initializing FF heuristic...
[t=0.0152629s, 26380 KB] Building successor generator...done!
[t=0.015456s, 26380 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0154651s, 26380 KB] time for successor generation creation: 0.000157083s
[t=0.0154777s, 26380 KB] Variables: 43
[t=0.0154863s, 26380 KB] FactPairs: 506
[t=0.0154949s, 26380 KB] Bytes per state: 16
[t=0.0155997s, 26380 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0156456s, 26380 KB] 41 initial landmarks, 15 goal landmarks
[t=0.0157245s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0157346s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0157428s, 26380 KB] g=0, 1 evaluated, 0 expanded
[t=0.0157565s, 26380 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0157651s, 26380 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0159196s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0159317s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0159397s, 26380 KB] g=2, 6 evaluated, 5 expanded
[t=0.0159994s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0160097s, 26380 KB] g=3, 8 evaluated, 7 expanded
[t=0.0162369s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0162481s, 26380 KB] g=6, 17 evaluated, 16 expanded
[t=0.0164513s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0164607s, 26380 KB] g=8, 25 evaluated, 24 expanded
[t=0.0165345s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0165429s, 26380 KB] g=8, 28 evaluated, 27 expanded
[t=0.016706s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0167145s, 26380 KB] g=10, 35 evaluated, 34 expanded
[t=0.0169224s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.016931s, 26380 KB] g=10, 44 evaluated, 43 expanded
[t=0.0172745s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0172838s, 26380 KB] g=12, 59 evaluated, 58 expanded
[t=0.0175856s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0175948s, 26380 KB] g=14, 72 evaluated, 71 expanded
[t=0.0176263s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0176348s, 26380 KB] g=13, 73 evaluated, 72 expanded
[t=0.0180072s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0180285s, 26380 KB] g=17, 89 evaluated, 88 expanded
[t=0.0183074s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0183169s, 26380 KB] g=19, 101 evaluated, 100 expanded
[t=0.0185071s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0185159s, 26380 KB] g=20, 109 evaluated, 108 expanded
[t=0.0186584s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0186673s, 26380 KB] g=21, 115 evaluated, 114 expanded
[t=0.0188773s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0188862s, 26380 KB] g=24, 124 evaluated, 123 expanded
[t=0.0190573s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0190662s, 26380 KB] g=26, 131 evaluated, 130 expanded
[t=0.0190987s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0191075s, 26380 KB] g=26, 132 evaluated, 131 expanded
[t=0.0193568s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0193656s, 26380 KB] g=28, 143 evaluated, 142 expanded
[t=0.0194849s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0194937s, 26380 KB] g=28, 148 evaluated, 147 expanded
[t=0.0196208s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0196417s, 26380 KB] g=30, 152 evaluated, 151 expanded
[t=0.0198531s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0198623s, 26380 KB] g=31, 161 evaluated, 160 expanded
[t=0.0198944s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0199026s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0199104s, 26380 KB] g=32, 162 evaluated, 161 expanded
[t=0.0200697s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0200787s, 26380 KB] g=34, 169 evaluated, 168 expanded
[t=0.0207795s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0207892s, 26380 KB] g=38, 201 evaluated, 200 expanded
[t=0.0210309s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0210395s, 26380 KB] g=40, 212 evaluated, 211 expanded
[t=0.0213627s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0213718s, 26380 KB] g=42, 227 evaluated, 226 expanded
[t=0.0215459s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0215545s, 26380 KB] g=44, 235 evaluated, 234 expanded
[t=0.0220849s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0220962s, 26380 KB] g=48, 259 evaluated, 258 expanded
[t=0.0222815s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0222904s, 26380 KB] g=50, 267 evaluated, 266 expanded
[t=0.0224174s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0224261s, 26380 KB] g=52, 272 evaluated, 271 expanded
[t=0.0231241s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0231445s, 26380 KB] g=58, 301 evaluated, 300 expanded
[t=0.02337s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0233794s, 26380 KB] g=60, 310 evaluated, 309 expanded
[t=0.0235981s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.023609s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.023617s, 26380 KB] g=62, 318 evaluated, 317 expanded
[t=0.0236782s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.023687s, 26380 KB] g=63, 320 evaluated, 319 expanded
[t=0.0237229s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0237318s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0237396s, 26380 KB] g=64, 321 evaluated, 320 expanded
[t=0.0238779s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0238866s, 26380 KB] g=66, 326 evaluated, 325 expanded
[t=0.0239437s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0239525s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.023961s, 26380 KB] g=66, 328 evaluated, 327 expanded
[t=0.0240887s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0240975s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0241052s, 26380 KB] g=68, 333 evaluated, 332 expanded
[t=0.0242151s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0242238s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.024232s, 26380 KB] g=70, 337 evaluated, 336 expanded
[t=0.0248707s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.024881s, 26380 KB] g=78, 366 evaluated, 365 expanded
[t=0.0250748s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0250835s, 26380 KB] g=82, 375 evaluated, 374 expanded
[t=0.0251592s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0251676s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0251751s, 26380 KB] g=84, 378 evaluated, 377 expanded
[t=0.0255292s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0255379s, 26380 KB] g=96, 397 evaluated, 396 expanded
[t=0.0255956s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0256038s, 26380 KB] g=97, 399 evaluated, 398 expanded
[t=0.0256288s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0256375s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0256454s, 26380 KB] g=98, 400 evaluated, 399 expanded
[t=0.0257024s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0257109s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0257183s, 26380 KB] g=100, 403 evaluated, 402 expanded
[t=0.0257908s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0257992s, 26380 KB] g=104, 407 evaluated, 406 expanded
[t=0.0258159s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0258243s, 26380 KB] g=105, 408 evaluated, 407 expanded
[t=0.0258386s, 26380 KB] Solution found!
[t=0.0258518s, 26380 KB] Actual search time: 0.0101953s
unstack b13 b15 (1)
put-down b13 (1)
unstack b15 b3 (1)
put-down b15 (1)
unstack b10 b14 (1)
put-down b10 (1)
pick-up b14 (1)
stack b14 b20 (1)
unstack b3 b12 (1)
stack b3 b10 (1)
unstack b12 b9 (1)
put-down b12 (1)
unstack b9 b7 (1)
stack b9 b3 (1)
unstack b6 b11 (1)
put-down b6 (1)
unstack b11 b5 (1)
put-down b11 (1)
pick-up b15 (1)
stack b15 b5 (1)
unstack b14 b20 (1)
put-down b14 (1)
unstack b20 b18 (1)
stack b20 b9 (1)
pick-up b14 (1)
stack b14 b20 (1)
unstack b18 b17 (1)
put-down b18 (1)
unstack b17 b8 (1)
put-down b17 (1)
unstack b8 b19 (1)
stack b8 b7 (1)
unstack b15 b5 (1)
put-down b15 (1)
unstack b5 b16 (1)
put-down b5 (1)
unstack b16 b4 (1)
put-down b16 (1)
pick-up b15 (1)
stack b15 b5 (1)
pick-up b6 (1)
stack b6 b4 (1)
pick-up b11 (1)
stack b11 b18 (1)
unstack b15 b5 (1)
put-down b15 (1)
pick-up b5 (1)
stack b5 b16 (1)
pick-up b15 (1)
stack b15 b5 (1)
unstack b6 b4 (1)
put-down b6 (1)
unstack b11 b18 (1)
put-down b11 (1)
unstack b4 b21 (1)
put-down b4 (1)
unstack b21 b2 (1)
put-down b21 (1)
unstack b2 b1 (1)
stack b2 b19 (1)
pick-up b1 (1)
stack b1 b6 (1)
pick-up b12 (1)
stack b12 b1 (1)
pick-up b18 (1)
stack b18 b2 (1)
pick-up b11 (1)
stack b11 b18 (1)
pick-up b4 (1)
stack b4 b21 (1)
unstack b12 b1 (1)
put-down b12 (1)
unstack b1 b6 (1)
put-down b1 (1)
pick-up b12 (1)
stack b12 b1 (1)
pick-up b6 (1)
stack b6 b4 (1)
unstack b12 b1 (1)
put-down b12 (1)
pick-up b1 (1)
stack b1 b6 (1)
pick-up b12 (1)
stack b12 b1 (1)
unstack b14 b20 (1)
put-down b14 (1)
unstack b20 b9 (1)
put-down b20 (1)
pick-up b14 (1)
stack b14 b20 (1)
unstack b9 b3 (1)
put-down b9 (1)
unstack b3 b10 (1)
put-down b3 (1)
pick-up b10 (1)
stack b10 b11 (1)
pick-up b3 (1)
stack b3 b10 (1)
pick-up b9 (1)
stack b9 b3 (1)
unstack b14 b20 (1)
put-down b14 (1)
pick-up b20 (1)
stack b20 b9 (1)
pick-up b14 (1)
stack b14 b20 (1)
[t=0.0258619s, 26380 KB] Plan length: 106 step(s).
[t=0.0258619s, 26380 KB] Plan cost: 106
[t=0.0258619s, 26380 KB] Expanded 408 state(s).
[t=0.0258619s, 26380 KB] Reopened 0 state(s).
[t=0.0258619s, 26380 KB] Evaluated 409 state(s).
[t=0.0258619s, 26380 KB] Evaluations: 818
[t=0.0258619s, 26380 KB] Generated 4043 state(s).
[t=0.0258619s, 26380 KB] Dead ends: 0 state(s).
[t=0.0258619s, 26380 KB] Number of registered states: 409
[t=0.0258619s, 26380 KB] Int hash set load factor: 409/512 = 0.798828
[t=0.0258619s, 26380 KB] Int hash set resizes: 9
[t=0.0258619s, 26380 KB] Search time: 0.0102628s
[t=0.0258619s, 26380 KB] Total time: 0.0258619s
Solution found.
Peak memory: 26380 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.15s
