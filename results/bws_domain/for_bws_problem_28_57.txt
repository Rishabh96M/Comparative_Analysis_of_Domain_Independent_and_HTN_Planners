INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_28/bws_problem_28_57.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.015s wall-clock]
2550 relevant atoms
1708 auxiliary atoms
4258 final queue length
7455 total queue pushes
Completing instantiation... [0.030s CPU, 0.026s wall-clock]
Instantiating: [0.040s CPU, 0.043s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
29 uncovered facts
Choosing groups: [0.000s CPU, 0.002s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.009s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.050s CPU, 0.048s wall-clock]
2324 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
56 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.020s wall-clock]
Reordering and filtering variables...
57 of 57 variables necessary.
29 of 57 mutex groups necessary.
1568 of 1568 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.010s wall-clock]
Translator variables: 57
Translator derived variables: 0
Translator facts: 870
Translator goal facts: 24
Translator mutex groups: 29
Translator total mutex groups size: 841
Translator operators: 1568
Translator axioms: 0
Translator task size: 13468
Translator peak memory: 40316 KB
Writing output... [0.010s CPU, 0.008s wall-clock]
Done! [0.140s CPU, 0.143s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=1.893e-05s, 24488 KB] reading input...
[t=0.00458859s, 26076 KB] done reading input!
[t=0.00609176s, 26472 KB] Initializing landmark count heuristic...
[t=0.00621995s, 26472 KB] Generating landmark graph...
[t=0.0063976s, 26604 KB] Building a landmark graph with reasonable orders.
[t=0.00657634s, 26604 KB] Initializing Exploration...
[t=0.00725734s, 27016 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.028634s, 27676 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.028764s, 27676 KB] Landmarks generation time: 0.0223744s
[t=0.0288223s, 27676 KB] Discovered 126 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0288392s, 27676 KB] 598 edges
[t=0.028849s, 27676 KB] approx. reasonable orders
[t=0.0354119s, 27676 KB] approx. obedient reasonable orders
[t=0.0359764s, 27676 KB] Removed 6 reasonable or obedient reasonable orders
[t=0.0359918s, 27676 KB] Landmarks generation time: 0.0297643s
[t=0.0360026s, 27676 KB] Discovered 126 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0360106s, 27676 KB] 722 edges
[t=0.0360187s, 27676 KB] Landmark graph generation time: 0.0298054s
[t=0.0360268s, 27676 KB] Landmark graph contains 126 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0360346s, 27676 KB] Landmark graph contains 722 orderings.
[t=0.0365905s, 27700 KB] Simplifying 6216 unary operators... done! [4704 unary operators]
[t=0.0380244s, 27832 KB] time to simplify: 0.00152694s
[t=0.038206s, 27832 KB] Initializing additive heuristic...
[t=0.0382232s, 27832 KB] Initializing FF heuristic...
[t=0.038273s, 27832 KB] Building successor generator...done!
[t=0.0385374s, 27832 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0385456s, 27832 KB] time for successor generation creation: 0.000237842s
[t=0.0385586s, 27832 KB] Variables: 57
[t=0.0385668s, 27832 KB] FactPairs: 870
[t=0.0385744s, 27832 KB] Bytes per state: 24
[t=0.0386647s, 27832 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0387178s, 27832 KB] 55 initial landmarks, 24 goal landmarks
[t=0.0387905s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 71
[t=0.0388002s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 50
[t=0.038826s, 27832 KB] g=0, 1 evaluated, 0 expanded
[t=0.0388394s, 27832 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 71
[t=0.0388477s, 27832 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 50
[t=0.0389378s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 70
[t=0.0389467s, 27832 KB] g=1, 3 evaluated, 2 expanded
[t=0.0392159s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 49
[t=0.0392255s, 27832 KB] g=2, 10 evaluated, 9 expanded
[t=0.0393065s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 69
[t=0.0393159s, 27832 KB] g=3, 12 evaluated, 11 expanded
[t=0.039719s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 68
[t=0.0397284s, 27832 KB] g=6, 23 evaluated, 22 expanded
[t=0.0401391s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 67
[t=0.0401597s, 27832 KB] g=8, 34 evaluated, 33 expanded
[t=0.0405583s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 65
[t=0.0405678s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 48
[t=0.040576s, 27832 KB] g=10, 44 evaluated, 43 expanded
[t=0.0409437s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 47
[t=0.0409537s, 27832 KB] g=12, 53 evaluated, 52 expanded
[t=0.0410363s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 64
[t=0.0410451s, 27832 KB] g=12, 55 evaluated, 54 expanded
[t=0.041645s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 63
[t=0.041656s, 27832 KB] g=14, 71 evaluated, 70 expanded
[t=0.0418272s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 46
[t=0.0418385s, 27832 KB] g=14, 74 evaluated, 73 expanded
[t=0.0424407s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 62
[t=0.0424583s, 27832 KB] g=16, 90 evaluated, 89 expanded
[t=0.043316s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.0433489s, 27832 KB] g=18, 112 evaluated, 111 expanded
[t=0.0439948s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 58
[t=0.0440215s, 27832 KB] g=20, 128 evaluated, 127 expanded
[t=0.0448767s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 57
[t=0.0449003s, 27832 KB] g=22, 150 evaluated, 149 expanded
[t=0.0459578s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0459882s, 27832 KB] g=24, 174 evaluated, 173 expanded
[t=0.0464291s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0464429s, 27832 KB] g=20, 185 evaluated, 184 expanded
[t=0.0469708s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0469835s, 27832 KB] g=26, 198 evaluated, 197 expanded
[t=0.0479584s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0479694s, 27832 KB] g=28, 223 evaluated, 222 expanded
[t=0.0489989s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.0490099s, 27832 KB] g=26, 250 evaluated, 249 expanded
[t=0.0491748s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0491853s, 27832 KB] g=30, 254 evaluated, 253 expanded
[t=0.0512362s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0512497s, 27832 KB] g=32, 307 evaluated, 306 expanded
[t=0.0527281s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0527406s, 27832 KB] g=32, 346 evaluated, 345 expanded
[t=0.0533945s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0534054s, 27832 KB] g=34, 363 evaluated, 362 expanded
[t=0.0542545s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0542668s, 27832 KB] g=36, 385 evaluated, 384 expanded
[t=0.0600948s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.060123s, 27832 KB] g=42, 539 evaluated, 538 expanded
[t=0.060833s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0608445s, 27832 KB] g=44, 558 evaluated, 557 expanded
[t=0.0648165s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0648534s, 27832 KB] g=50, 662 evaluated, 661 expanded
[t=0.0653154s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0653277s, 27832 KB] g=52, 674 evaluated, 673 expanded
[t=0.0659526s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0659728s, 27832 KB] g=54, 689 evaluated, 688 expanded
[t=0.0699626s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0699775s, 27832 KB] g=60, 798 evaluated, 797 expanded
[t=0.070566s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0705778s, 27832 KB] g=62, 814 evaluated, 813 expanded
[t=0.0711474s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0711581s, 27832 KB] g=64, 829 evaluated, 828 expanded
[t=0.0717125s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0717251s, 27832 KB] g=66, 844 evaluated, 843 expanded
[t=0.0919836s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0920421s, 27832 KB] g=74, 1389 evaluated, 1388 expanded
[t=0.0949324s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0949578s, 27832 KB] g=78, 1467 evaluated, 1466 expanded
[t=0.0954526s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0954654s, 27832 KB] g=80, 1480 evaluated, 1479 expanded
[t=0.127829s, 27964 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.127902s, 27964 KB] g=96, 2343 evaluated, 2342 expanded
[t=0.132815s, 27964 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.132841s, 27964 KB] g=106, 2475 evaluated, 2474 expanded
[t=0.133671s, 27964 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.133687s, 27964 KB] g=108, 2498 evaluated, 2497 expanded
[t=0.134294s, 28096 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.134313s, 28096 KB] g=104, 2513 evaluated, 2512 expanded
[t=0.134641s, 28096 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.134654s, 28096 KB] g=110, 2522 evaluated, 2521 expanded
[t=0.135651s, 28096 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.135666s, 28096 KB] g=112, 2547 evaluated, 2546 expanded
[t=0.136396s, 28096 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.136409s, 28096 KB] g=108, 2566 evaluated, 2565 expanded
[t=0.136723s, 28096 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.136734s, 28096 KB] g=114, 2574 evaluated, 2573 expanded
[t=0.136785s, 28096 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.136795s, 28096 KB] g=110, 2575 evaluated, 2574 expanded
[t=0.137535s, 28096 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.137548s, 28096 KB] g=113, 2595 evaluated, 2594 expanded
[t=0.138213s, 28096 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.138228s, 28096 KB] g=115, 2613 evaluated, 2612 expanded
[t=0.138532s, 28096 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.138545s, 28096 KB] g=118, 2621 evaluated, 2620 expanded
[t=0.139117s, 28096 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.139129s, 28096 KB] g=120, 2636 evaluated, 2635 expanded
[t=0.139641s, 28096 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.139653s, 28096 KB] g=122, 2651 evaluated, 2650 expanded
[t=0.140251s, 28096 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.140264s, 28096 KB] g=124, 2669 evaluated, 2668 expanded
[t=0.140937s, 28096 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.140953s, 28096 KB] g=126, 2690 evaluated, 2689 expanded
[t=0.140994s, 28096 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.141003s, 28096 KB] g=127, 2691 evaluated, 2690 expanded
[t=0.14211s, 28096 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.142144s, 28096 KB] g=128, 2723 evaluated, 2722 expanded
[t=0.142186s, 28096 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.142215s, 28096 KB] g=129, 2724 evaluated, 2723 expanded
[t=0.143042s, 28096 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.143059s, 28096 KB] g=132, 2751 evaluated, 2750 expanded
[t=0.143098s, 28096 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.143107s, 28096 KB] g=133, 2752 evaluated, 2751 expanded
[t=0.143937s, 28096 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.143965s, 28096 KB] g=137, 2782 evaluated, 2781 expanded
[t=0.144006s, 28096 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.144018s, 28096 KB] g=136, 2783 evaluated, 2782 expanded
[t=0.144084s, 28096 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.144095s, 28096 KB] g=138, 2785 evaluated, 2784 expanded
[t=0.144411s, 28096 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.144428s, 28096 KB] g=138, 2797 evaluated, 2796 expanded
[t=0.144761s, 28096 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.144776s, 28096 KB] g=140, 2809 evaluated, 2808 expanded
[t=0.144859s, 28096 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.14487s, 28096 KB] g=140, 2812 evaluated, 2811 expanded
[t=0.145049s, 28096 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.145061s, 28096 KB] g=142, 2818 evaluated, 2817 expanded
[t=0.145475s, 28096 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.14549s, 28096 KB] g=142, 2834 evaluated, 2833 expanded
[t=0.14616s, 28096 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.146174s, 28096 KB] g=144, 2860 evaluated, 2859 expanded
[t=0.146392s, 28096 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.146403s, 28096 KB] g=148, 2868 evaluated, 2867 expanded
[t=0.146682s, 28228 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.146708s, 28228 KB] g=146, 2878 evaluated, 2877 expanded
[t=0.147157s, 28228 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.147172s, 28228 KB] g=152, 2895 evaluated, 2894 expanded
[t=0.147357s, 28228 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.147369s, 28228 KB] g=154, 2901 evaluated, 2900 expanded
[t=0.148844s, 28228 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.148862s, 28228 KB] g=162, 2961 evaluated, 2960 expanded
[t=0.149069s, 28228 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.14909s, 28228 KB] g=164, 2967 evaluated, 2966 expanded
[t=0.149885s, 28228 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.149899s, 28228 KB] g=176, 3002 evaluated, 3001 expanded
[t=0.15006s, 28228 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.150071s, 28228 KB] g=180, 3009 evaluated, 3008 expanded
[t=0.15009s, 28228 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.150099s, 28228 KB] g=181, 3010 evaluated, 3009 expanded
[t=0.15014s, 28228 KB] Solution found!
[t=0.150158s, 28228 KB] Actual search time: 0.111437s
unstack b4 b12 (1)
put-down b4 (1)
unstack b10 b1 (1)
put-down b10 (1)
unstack b12 b27 (1)
put-down b12 (1)
unstack b16 b25 (1)
put-down b16 (1)
unstack b25 b17 (1)
stack b25 b27 (1)
unstack b17 b6 (1)
stack b17 b3 (1)
pick-up b7 (1)
stack b7 b17 (1)
unstack b1 b9 (1)
put-down b1 (1)
unstack b9 b28 (1)
put-down b9 (1)
pick-up b1 (1)
stack b1 b28 (1)
unstack b6 b22 (1)
put-down b6 (1)
unstack b22 b15 (1)
put-down b22 (1)
unstack b15 b8 (1)
put-down b15 (1)
pick-up b16 (1)
stack b16 b15 (1)
unstack b8 b11 (1)
put-down b8 (1)
unstack b11 b23 (1)
stack b11 b8 (1)
pick-up b10 (1)
stack b10 b23 (1)
pick-up b6 (1)
stack b6 b11 (1)
unstack b10 b23 (1)
put-down b10 (1)
unstack b23 b21 (1)
stack b23 b6 (1)
pick-up b10 (1)
stack b10 b23 (1)
pick-up b21 (1)
stack b21 b7 (1)
unstack b1 b28 (1)
put-down b1 (1)
unstack b28 b13 (1)
stack b28 b21 (1)
pick-up b1 (1)
stack b1 b28 (1)
unstack b13 b14 (1)
stack b13 b12 (1)
pick-up b14 (1)
stack b14 b16 (1)
unstack b25 b27 (1)
put-down b25 (1)
unstack b27 b26 (1)
put-down b27 (1)
pick-up b25 (1)
stack b25 b27 (1)
unstack b26 b24 (1)
stack b26 b13 (1)
unstack b24 b19 (1)
stack b24 b4 (1)
unstack b14 b16 (1)
put-down b14 (1)
unstack b19 b18 (1)
stack b19 b14 (1)
unstack b16 b15 (1)
put-down b16 (1)
pick-up b15 (1)
stack b15 b24 (1)
pick-up b16 (1)
stack b16 b15 (1)
unstack b19 b14 (1)
put-down b19 (1)
pick-up b14 (1)
stack b14 b16 (1)
pick-up b19 (1)
stack b19 b14 (1)
unstack b10 b23 (1)
put-down b10 (1)
unstack b23 b6 (1)
put-down b23 (1)
unstack b6 b11 (1)
put-down b6 (1)
pick-up b23 (1)
stack b23 b6 (1)
pick-up b10 (1)
stack b10 b23 (1)
unstack b11 b8 (1)
put-down b11 (1)
pick-up b8 (1)
stack b8 b18 (1)
pick-up b11 (1)
stack b11 b8 (1)
unstack b10 b23 (1)
put-down b10 (1)
unstack b23 b6 (1)
put-down b23 (1)
pick-up b10 (1)
stack b10 b23 (1)
pick-up b6 (1)
stack b6 b11 (1)
unstack b10 b23 (1)
put-down b10 (1)
pick-up b23 (1)
stack b23 b6 (1)
pick-up b10 (1)
stack b10 b23 (1)
unstack b1 b28 (1)
put-down b1 (1)
unstack b28 b21 (1)
put-down b28 (1)
unstack b26 b13 (1)
put-down b26 (1)
unstack b21 b7 (1)
put-down b21 (1)
unstack b7 b17 (1)
put-down b7 (1)
unstack b17 b3 (1)
put-down b17 (1)
unstack b3 b2 (1)
put-down b3 (1)
unstack b2 b5 (1)
put-down b2 (1)
unstack b5 b20 (1)
stack b5 b25 (1)
pick-up b1 (1)
stack b1 b28 (1)
pick-up b9 (1)
stack b9 b20 (1)
pick-up b17 (1)
stack b17 b3 (1)
pick-up b2 (1)
stack b2 b19 (1)
pick-up b21 (1)
stack b21 b7 (1)
pick-up b22 (1)
stack b22 b2 (1)
pick-up b26 (1)
stack b26 b13 (1)
unstack b1 b28 (1)
put-down b1 (1)
pick-up b28 (1)
stack b28 b21 (1)
pick-up b1 (1)
stack b1 b28 (1)
unstack b17 b3 (1)
put-down b17 (1)
pick-up b3 (1)
stack b3 b22 (1)
pick-up b17 (1)
stack b17 b3 (1)
unstack b26 b13 (1)
put-down b26 (1)
unstack b13 b12 (1)
put-down b13 (1)
pick-up b12 (1)
stack b12 b5 (1)
pick-up b13 (1)
stack b13 b12 (1)
pick-up b26 (1)
stack b26 b13 (1)
unstack b1 b28 (1)
put-down b1 (1)
unstack b28 b21 (1)
put-down b28 (1)
pick-up b1 (1)
stack b1 b28 (1)
unstack b21 b7 (1)
put-down b21 (1)
pick-up b7 (1)
stack b7 b17 (1)
pick-up b21 (1)
stack b21 b7 (1)
unstack b1 b28 (1)
put-down b1 (1)
pick-up b28 (1)
stack b28 b21 (1)
pick-up b1 (1)
stack b1 b28 (1)
[t=0.150167s, 28228 KB] Plan length: 182 step(s).
[t=0.150167s, 28228 KB] Plan cost: 182
[t=0.150167s, 28228 KB] Expanded 3011 state(s).
[t=0.150167s, 28228 KB] Reopened 0 state(s).
[t=0.150167s, 28228 KB] Evaluated 3012 state(s).
[t=0.150167s, 28228 KB] Evaluations: 6024
[t=0.150167s, 28228 KB] Generated 39204 state(s).
[t=0.150167s, 28228 KB] Dead ends: 0 state(s).
[t=0.150167s, 28228 KB] Number of registered states: 3012
[t=0.150167s, 28228 KB] Int hash set load factor: 3012/4096 = 0.735352
[t=0.150167s, 28228 KB] Int hash set resizes: 12
[t=0.150167s, 28228 KB] Search time: 0.111503s
[t=0.150167s, 28228 KB] Total time: 0.150167s
Solution found.
Peak memory: 28228 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.34s
