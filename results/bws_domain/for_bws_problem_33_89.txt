INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_33/bws_problem_33_89.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.021s wall-clock]
3500 relevant atoms
2343 auxiliary atoms
5843 final queue length
10268 total queue pushes
Completing instantiation... [0.050s CPU, 0.044s wall-clock]
Instantiating: [0.070s CPU, 0.067s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.004s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.001s wall-clock]
Choosing groups...
34 uncovered facts
Choosing groups: [0.000s CPU, 0.002s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.010s CPU, 0.014s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.001s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.002s wall-clock]
Translating task: [0.060s CPU, 0.058s wall-clock]
3234 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
66 propositions removed
Detecting unreachable propositions: [0.030s CPU, 0.028s wall-clock]
Reordering and filtering variables...
67 of 67 variables necessary.
34 of 67 mutex groups necessary.
2178 of 2178 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.014s wall-clock]
Translator variables: 67
Translator derived variables: 0
Translator facts: 1190
Translator goal facts: 29
Translator mutex groups: 34
Translator total mutex groups size: 1156
Translator operators: 2178
Translator axioms: 0
Translator task size: 18678
Translator peak memory: 43280 KB
Writing output... [0.010s CPU, 0.013s wall-clock]
Done! [0.200s CPU, 0.200s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.6591e-05s, 24488 KB] reading input...
[t=0.00674116s, 26928 KB] done reading input!
[t=0.00761589s, 27324 KB] Initializing landmark count heuristic...
[t=0.00764861s, 27324 KB] Generating landmark graph...
[t=0.00778261s, 27456 KB] Building a landmark graph with reasonable orders.
[t=0.00791064s, 27588 KB] Initializing Exploration...
[t=0.00866294s, 28188 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0456898s, 29644 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0457917s, 29644 KB] Landmarks generation time: 0.0380126s
[t=0.0458139s, 29644 KB] Discovered 152 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0458298s, 29644 KB] 1338 edges
[t=0.0458395s, 29644 KB] approx. reasonable orders
[t=0.051302s, 29644 KB] approx. obedient reasonable orders
[t=0.0516155s, 29644 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0516336s, 29644 KB] Landmarks generation time: 0.0439836s
[t=0.0516451s, 29644 KB] Discovered 152 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0516538s, 29644 KB] 1382 edges
[t=0.0516623s, 29644 KB] Landmark graph generation time: 0.0440206s
[t=0.0516708s, 29644 KB] Landmark graph contains 152 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0516787s, 29644 KB] Landmark graph contains 1382 orderings.
[t=0.05258s, 29680 KB] Simplifying 8646 unary operators... done! [6534 unary operators]
[t=0.0547389s, 29680 KB] time to simplify: 0.00219698s
[t=0.0548995s, 29680 KB] Initializing additive heuristic...
[t=0.0549147s, 29680 KB] Initializing FF heuristic...
[t=0.0549743s, 29680 KB] Building successor generator...done!
[t=0.0553387s, 29680 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0553486s, 29680 KB] time for successor generation creation: 0.000336862s
[t=0.0553702s, 29680 KB] Variables: 67
[t=0.0553795s, 29680 KB] FactPairs: 1190
[t=0.0553875s, 29680 KB] Bytes per state: 32
[t=0.0554927s, 29680 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0555394s, 29680 KB] 66 initial landmarks, 29 goal landmarks
[t=0.055631s, 29680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 86
[t=0.0556406s, 29680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 60
[t=0.0556495s, 29680 KB] g=0, 1 evaluated, 0 expanded
[t=0.0556639s, 29680 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 86
[t=0.0556733s, 29680 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 60
[t=0.0558936s, 29680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 85
[t=0.0559042s, 29680 KB] g=2, 5 evaluated, 4 expanded
[t=0.056357s, 29680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 59
[t=0.0563682s, 29680 KB] g=4, 14 evaluated, 13 expanded
[t=0.0564713s, 29680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 84
[t=0.0564807s, 29680 KB] g=4, 16 evaluated, 15 expanded
[t=0.0569027s, 29680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 83
[t=0.0569124s, 29680 KB] g=6, 25 evaluated, 24 expanded
[t=0.0575273s, 29680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 82
[t=0.0575488s, 29680 KB] g=8, 37 evaluated, 36 expanded
[t=0.0580487s, 29680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 58
[t=0.0580637s, 29680 KB] g=8, 46 evaluated, 45 expanded
[t=0.058264s, 29680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 81
[t=0.0582734s, 29680 KB] g=10, 50 evaluated, 49 expanded
[t=0.0586083s, 29680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 56
[t=0.0586182s, 29680 KB] g=10, 57 evaluated, 56 expanded
[t=0.0590657s, 29680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 55
[t=0.0590785s, 29680 KB] g=12, 66 evaluated, 65 expanded
[t=0.0591379s, 29680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 80
[t=0.0591493s, 29680 KB] g=13, 67 evaluated, 66 expanded
[t=0.0595599s, 29680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 79
[t=0.0595725s, 29680 KB] g=16, 75 evaluated, 74 expanded
[t=0.0602398s, 29680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 78
[t=0.0602586s, 29680 KB] g=18, 88 evaluated, 87 expanded
[t=0.0608986s, 29680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 77
[t=0.0609136s, 29680 KB] g=20, 101 evaluated, 100 expanded
[t=0.0615922s, 29680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 75
[t=0.0616117s, 29680 KB] g=22, 114 evaluated, 113 expanded
[t=0.062427s, 29680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 74
[t=0.0624428s, 29680 KB] g=24, 130 evaluated, 129 expanded
[t=0.0631543s, 29680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 73
[t=0.0631702s, 29680 KB] g=26, 144 evaluated, 143 expanded
[t=0.0640472s, 29680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 72
[t=0.0640635s, 29680 KB] g=28, 160 evaluated, 159 expanded
[t=0.064607s, 29680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 54
[t=0.0646216s, 29680 KB] g=30, 171 evaluated, 170 expanded
[t=0.0646886s, 29680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 71
[t=0.0646991s, 29680 KB] g=30, 172 evaluated, 171 expanded
[t=0.0655738s, 29680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 53
[t=0.0655846s, 29680 KB] g=32, 191 evaluated, 190 expanded
[t=0.0657347s, 29680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 68
[t=0.0657446s, 29680 KB] g=32, 194 evaluated, 193 expanded
[t=0.0665664s, 29680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 52
[t=0.06658s, 29680 KB] g=34, 211 evaluated, 210 expanded
[t=0.0666406s, 29680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 67
[t=0.0666506s, 29680 KB] g=34, 212 evaluated, 211 expanded
[t=0.0678999s, 29680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 66
[t=0.0679352s, 29680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 51
[t=0.0679463s, 29680 KB] g=36, 234 evaluated, 233 expanded
[t=0.0684484s, 29680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 65
[t=0.068459s, 29680 KB] g=38, 244 evaluated, 243 expanded
[t=0.0694698s, 29680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 50
[t=0.0694805s, 29680 KB] g=40, 265 evaluated, 264 expanded
[t=0.0698369s, 29680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 64
[t=0.0698534s, 29680 KB] g=40, 272 evaluated, 271 expanded
[t=0.0705743s, 29680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 61
[t=0.0705851s, 29680 KB] g=42, 287 evaluated, 286 expanded
[t=0.0716632s, 29680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.0716771s, 29680 KB] g=44, 309 evaluated, 308 expanded
[t=0.07174s, 29680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 49
[t=0.07175s, 29680 KB] g=42, 310 evaluated, 309 expanded
[t=0.0726705s, 29680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 58
[t=0.072683s, 29680 KB] g=46, 329 evaluated, 328 expanded
[t=0.0730112s, 29680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 48
[t=0.073025s, 29680 KB] g=44, 335 evaluated, 334 expanded
[t=0.07384s, 29680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 57
[t=0.07385s, 29680 KB] g=48, 352 evaluated, 351 expanded
[t=0.0748317s, 29680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0748427s, 29680 KB] g=50, 373 evaluated, 372 expanded
[t=0.0763159s, 29680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.076333s, 29680 KB] g=52, 402 evaluated, 401 expanded
[t=0.0775923s, 29680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0776315s, 29680 KB] g=54, 426 evaluated, 425 expanded
[t=0.0777633s, 29680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 47
[t=0.0777741s, 29680 KB] g=48, 428 evaluated, 427 expanded
[t=0.077986s, 29680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0779979s, 29680 KB] g=55, 432 evaluated, 431 expanded
[t=0.079404s, 29680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0794195s, 29680 KB] g=58, 460 evaluated, 459 expanded
[t=0.0813791s, 29680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.081395s, 29680 KB] g=60, 499 evaluated, 498 expanded
[t=0.0819719s, 29680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0819819s, 29680 KB] g=61, 510 evaluated, 509 expanded
[t=0.0820739s, 29680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0820853s, 29680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0820937s, 29680 KB] g=62, 511 evaluated, 510 expanded
[t=0.0830199s, 29680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.0830297s, 29680 KB] g=64, 529 evaluated, 528 expanded
[t=0.0833681s, 29680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0833794s, 29680 KB] g=64, 535 evaluated, 534 expanded
[t=0.0850467s, 29680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0850609s, 29680 KB] g=66, 569 evaluated, 568 expanded
[t=0.0853219s, 29680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0853314s, 29680 KB] g=66, 574 evaluated, 573 expanded
[t=0.0864787s, 29680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0864902s, 29680 KB] g=68, 598 evaluated, 597 expanded
[t=0.0871118s, 29680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0871299s, 29680 KB] g=68, 610 evaluated, 609 expanded
[t=0.0879271s, 29680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0879447s, 29680 KB] g=70, 624 evaluated, 623 expanded
[t=0.0890846s, 29680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0891002s, 29680 KB] g=72, 647 evaluated, 646 expanded
[t=0.0897388s, 29680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0897499s, 29680 KB] g=74, 660 evaluated, 659 expanded
[t=0.089817s, 29680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0898269s, 29680 KB] g=70, 661 evaluated, 660 expanded
[t=0.091108s, 29680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0911206s, 29680 KB] g=76, 687 evaluated, 686 expanded
[t=0.0912498s, 29680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0912596s, 29680 KB] g=72, 689 evaluated, 688 expanded
[t=0.0923266s, 29680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0923404s, 29680 KB] g=78, 710 evaluated, 709 expanded
[t=0.0929605s, 29680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0929709s, 29680 KB] g=74, 722 evaluated, 721 expanded
[t=0.0932829s, 29680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.093293s, 29680 KB] g=80, 728 evaluated, 727 expanded
[t=0.0943036s, 29680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0943203s, 29680 KB] g=76, 748 evaluated, 747 expanded
[t=0.0952302s, 29680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0952491s, 29680 KB] g=78, 766 evaluated, 765 expanded
[t=0.0958054s, 29680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0958177s, 29680 KB] g=80, 777 evaluated, 776 expanded
[t=0.0960345s, 29680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0960452s, 29680 KB] g=80, 781 evaluated, 780 expanded
[t=0.0967542s, 29680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0967657s, 29680 KB] g=82, 795 evaluated, 794 expanded
[t=0.0969804s, 29680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0969906s, 29680 KB] g=82, 799 evaluated, 798 expanded
[t=0.0976137s, 29680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0976436s, 29680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0976579s, 29680 KB] g=84, 810 evaluated, 809 expanded
[t=0.098085s, 29680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0981036s, 29680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0981134s, 29680 KB] g=86, 817 evaluated, 816 expanded
[t=0.104334s, 29680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.104386s, 29680 KB] g=94, 933 evaluated, 932 expanded
[t=0.104698s, 29680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.104708s, 29680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.104718s, 29680 KB] g=96, 939 evaluated, 938 expanded
[t=0.111856s, 29680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.111963s, 29680 KB] g=108, 1074 evaluated, 1073 expanded
[t=0.112409s, 29680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.112423s, 29680 KB] g=110, 1082 evaluated, 1081 expanded
[t=0.112737s, 29680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.11275s, 29680 KB] g=110, 1088 evaluated, 1087 expanded
[t=0.113109s, 29680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.113126s, 29680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.113135s, 29680 KB] g=112, 1095 evaluated, 1094 expanded
[t=0.114336s, 29680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.114364s, 29680 KB] g=116, 1119 evaluated, 1118 expanded
[t=0.114666s, 29680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.114677s, 29680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.114689s, 29680 KB] g=118, 1125 evaluated, 1124 expanded
[t=0.119704s, 29680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.119736s, 29680 KB] g=134, 1226 evaluated, 1225 expanded
[t=0.120133s, 29680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.120144s, 29680 KB] g=136, 1234 evaluated, 1233 expanded
[t=0.120856s, 29680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.120866s, 29680 KB] g=138, 1249 evaluated, 1248 expanded
[t=0.12131s, 29680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.12132s, 29680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.121329s, 29680 KB] g=140, 1258 evaluated, 1257 expanded
[t=0.121582s, 29680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.121591s, 29680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.121599s, 29680 KB] g=142, 1263 evaluated, 1262 expanded
[t=0.122575s, 29680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.122603s, 29680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.122612s, 29680 KB] g=148, 1282 evaluated, 1281 expanded
[t=0.123317s, 29680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.12333s, 29680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.123339s, 29680 KB] g=154, 1296 evaluated, 1295 expanded
[t=0.128589s, 29680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.128633s, 29680 KB] g=158, 1406 evaluated, 1405 expanded
[t=0.130578s, 29680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.130597s, 29680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.130606s, 29680 KB] g=176, 1446 evaluated, 1445 expanded
[t=0.254525s, 29680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.254595s, 29680 KB] g=220, 4060 evaluated, 4059 expanded
[t=0.255371s, 29680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.255389s, 29680 KB] g=224, 4076 evaluated, 4075 expanded
[t=0.255595s, 29680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.255604s, 29680 KB] g=226, 4080 evaluated, 4079 expanded
[t=0.258012s, 29680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.258023s, 29680 KB] g=238, 4134 evaluated, 4133 expanded
[t=0.258426s, 29680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.258435s, 29680 KB] g=242, 4143 evaluated, 4142 expanded
[t=0.258577s, 29680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.258586s, 29680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.258594s, 29680 KB] g=244, 4146 evaluated, 4145 expanded
[t=0.262186s, 29680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.26221s, 29680 KB] g=274, 4246 evaluated, 4245 expanded
[t=0.262497s, 29680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.262516s, 29680 KB] g=278, 4255 evaluated, 4254 expanded
[t=0.262619s, 29680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.262629s, 29680 KB] g=280, 4258 evaluated, 4257 expanded
[t=0.263061s, 29680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.263072s, 29680 KB] g=292, 4274 evaluated, 4273 expanded
[t=0.263167s, 29680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.263177s, 29680 KB] g=296, 4278 evaluated, 4277 expanded
[t=0.263201s, 29680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.26321s, 29680 KB] g=297, 4279 evaluated, 4278 expanded
[t=0.263228s, 29680 KB] Solution found!
[t=0.26325s, 29680 KB] Actual search time: 0.2077s
unstack b16 b19 (1)
put-down b16 (1)
unstack b19 b5 (1)
stack b19 b24 (1)
unstack b5 b27 (1)
put-down b5 (1)
unstack b27 b18 (1)
put-down b27 (1)
pick-up b16 (1)
stack b16 b27 (1)
unstack b18 b14 (1)
stack b18 b5 (1)
unstack b14 b2 (1)
put-down b14 (1)
unstack b18 b5 (1)
put-down b18 (1)
unstack b19 b24 (1)
put-down b19 (1)
unstack b2 b25 (1)
put-down b2 (1)
unstack b24 b6 (1)
stack b24 b25 (1)
unstack b3 b11 (1)
put-down b3 (1)
unstack b6 b8 (1)
put-down b6 (1)
unstack b8 b33 (1)
put-down b8 (1)
unstack b33 b28 (1)
put-down b33 (1)
unstack b28 b1 (1)
stack b28 b16 (1)
unstack b1 b31 (1)
stack b1 b18 (1)
pick-up b19 (1)
stack b19 b24 (1)
unstack b31 b7 (1)
put-down b31 (1)
unstack b1 b18 (1)
put-down b1 (1)
unstack b7 b30 (1)
stack b7 b19 (1)
pick-up b11 (1)
stack b11 b7 (1)
unstack b30 b20 (1)
put-down b30 (1)
unstack b20 b17 (1)
put-down b20 (1)
unstack b17 b22 (1)
put-down b17 (1)
unstack b22 b10 (1)
put-down b22 (1)
unstack b10 b13 (1)
put-down b10 (1)
unstack b13 b12 (1)
put-down b13 (1)
unstack b12 b9 (1)
put-down b12 (1)
unstack b9 b21 (1)
stack b9 b8 (1)
unstack b21 b32 (1)
stack b21 b28 (1)
unstack b32 b23 (1)
stack b32 b1 (1)
pick-up b10 (1)
stack b10 b23 (1)
pick-up b12 (1)
stack b12 b10 (1)
pick-up b20 (1)
stack b20 b12 (1)
pick-up b14 (1)
stack b14 b20 (1)
pick-up b30 (1)
stack b30 b17 (1)
pick-up b31 (1)
stack b31 b22 (1)
pick-up b13 (1)
stack b13 b31 (1)
pick-up b33 (1)
stack b33 b32 (1)
pick-up b5 (1)
stack b5 b30 (1)
pick-up b18 (1)
stack b18 b5 (1)
pick-up b6 (1)
stack b6 b9 (1)
unstack b33 b32 (1)
put-down b33 (1)
unstack b32 b1 (1)
put-down b32 (1)
pick-up b1 (1)
stack b1 b18 (1)
pick-up b32 (1)
stack b32 b1 (1)
pick-up b33 (1)
stack b33 b32 (1)
unstack b11 b7 (1)
put-down b11 (1)
unstack b7 b19 (1)
put-down b7 (1)
pick-up b11 (1)
stack b11 b7 (1)
unstack b19 b24 (1)
put-down b19 (1)
unstack b24 b25 (1)
put-down b24 (1)
unstack b25 b29 (1)
stack b25 b6 (1)
pick-up b24 (1)
stack b24 b25 (1)
pick-up b19 (1)
stack b19 b24 (1)
unstack b11 b7 (1)
put-down b11 (1)
pick-up b7 (1)
stack b7 b19 (1)
pick-up b11 (1)
stack b11 b7 (1)
unstack b14 b20 (1)
put-down b14 (1)
unstack b20 b12 (1)
put-down b20 (1)
pick-up b14 (1)
stack b14 b20 (1)
unstack b12 b10 (1)
put-down b12 (1)
unstack b10 b23 (1)
put-down b10 (1)
pick-up b12 (1)
stack b12 b10 (1)
unstack b23 b26 (1)
put-down b23 (1)
unstack b26 b4 (1)
stack b26 b3 (1)
unstack b4 b15 (1)
stack b4 b33 (1)
pick-up b2 (1)
stack b2 b4 (1)
pick-up b15 (1)
stack b15 b2 (1)
pick-up b23 (1)
stack b23 b26 (1)
unstack b14 b20 (1)
put-down b14 (1)
pick-up b20 (1)
stack b20 b12 (1)
pick-up b14 (1)
stack b14 b20 (1)
unstack b23 b26 (1)
put-down b23 (1)
unstack b26 b3 (1)
put-down b26 (1)
pick-up b3 (1)
stack b3 b15 (1)
pick-up b23 (1)
stack b23 b26 (1)
unstack b3 b15 (1)
put-down b3 (1)
unstack b15 b2 (1)
put-down b15 (1)
pick-up b3 (1)
stack b3 b15 (1)
unstack b23 b26 (1)
put-down b23 (1)
pick-up b26 (1)
stack b26 b3 (1)
pick-up b23 (1)
stack b23 b26 (1)
unstack b14 b20 (1)
put-down b14 (1)
unstack b20 b12 (1)
put-down b20 (1)
pick-up b14 (1)
stack b14 b20 (1)
unstack b12 b10 (1)
put-down b12 (1)
pick-up b10 (1)
stack b10 b23 (1)
pick-up b12 (1)
stack b12 b10 (1)
unstack b14 b20 (1)
put-down b14 (1)
pick-up b20 (1)
stack b20 b12 (1)
pick-up b14 (1)
stack b14 b20 (1)
unstack b2 b4 (1)
put-down b2 (1)
unstack b4 b33 (1)
put-down b4 (1)
pick-up b2 (1)
stack b2 b4 (1)
unstack b33 b32 (1)
put-down b33 (1)
unstack b32 b1 (1)
put-down b32 (1)
pick-up b33 (1)
stack b33 b32 (1)
unstack b2 b4 (1)
put-down b2 (1)
pick-up b4 (1)
stack b4 b33 (1)
pick-up b2 (1)
stack b2 b4 (1)
unstack b1 b18 (1)
put-down b1 (1)
unstack b18 b5 (1)
put-down b18 (1)
pick-up b1 (1)
stack b1 b18 (1)
unstack b5 b30 (1)
put-down b5 (1)
unstack b30 b17 (1)
put-down b30 (1)
pick-up b17 (1)
stack b17 b29 (1)
pick-up b30 (1)
stack b30 b17 (1)
pick-up b5 (1)
stack b5 b30 (1)
unstack b1 b18 (1)
put-down b1 (1)
pick-up b18 (1)
stack b18 b5 (1)
pick-up b1 (1)
stack b1 b18 (1)
unstack b2 b4 (1)
put-down b2 (1)
unstack b4 b33 (1)
put-down b4 (1)
pick-up b2 (1)
stack b2 b4 (1)
unstack b33 b32 (1)
put-down b33 (1)
pick-up b32 (1)
stack b32 b1 (1)
pick-up b33 (1)
stack b33 b32 (1)
unstack b2 b4 (1)
put-down b2 (1)
pick-up b4 (1)
stack b4 b33 (1)
pick-up b2 (1)
stack b2 b4 (1)
unstack b14 b20 (1)
put-down b14 (1)
unstack b20 b12 (1)
put-down b20 (1)
pick-up b14 (1)
stack b14 b20 (1)
unstack b12 b10 (1)
put-down b12 (1)
unstack b10 b23 (1)
put-down b10 (1)
pick-up b12 (1)
stack b12 b10 (1)
unstack b14 b20 (1)
put-down b14 (1)
pick-up b20 (1)
stack b20 b12 (1)
pick-up b14 (1)
stack b14 b20 (1)
unstack b23 b26 (1)
put-down b23 (1)
unstack b26 b3 (1)
put-down b26 (1)
pick-up b23 (1)
stack b23 b26 (1)
unstack b3 b15 (1)
put-down b3 (1)
pick-up b15 (1)
stack b15 b2 (1)
pick-up b3 (1)
stack b3 b15 (1)
unstack b23 b26 (1)
put-down b23 (1)
pick-up b26 (1)
stack b26 b3 (1)
pick-up b23 (1)
stack b23 b26 (1)
unstack b14 b20 (1)
put-down b14 (1)
unstack b20 b12 (1)
put-down b20 (1)
pick-up b14 (1)
stack b14 b20 (1)
unstack b12 b10 (1)
put-down b12 (1)
pick-up b10 (1)
stack b10 b23 (1)
pick-up b12 (1)
stack b12 b10 (1)
unstack b14 b20 (1)
put-down b14 (1)
pick-up b20 (1)
stack b20 b12 (1)
pick-up b14 (1)
stack b14 b20 (1)
[t=0.26326s, 29680 KB] Plan length: 298 step(s).
[t=0.26326s, 29680 KB] Plan cost: 298
[t=0.26326s, 29680 KB] Expanded 4279 state(s).
[t=0.26326s, 29680 KB] Reopened 0 state(s).
[t=0.26326s, 29680 KB] Evaluated 4280 state(s).
[t=0.26326s, 29680 KB] Evaluations: 8560
[t=0.26326s, 29680 KB] Generated 45271 state(s).
[t=0.26326s, 29680 KB] Dead ends: 0 state(s).
[t=0.26326s, 29680 KB] Number of registered states: 4280
[t=0.26326s, 29680 KB] Int hash set load factor: 4280/8192 = 0.522461
[t=0.26326s, 29680 KB] Int hash set resizes: 13
[t=0.26326s, 29680 KB] Search time: 0.207768s
[t=0.26326s, 29680 KB] Total time: 0.26326s
Solution found.
Peak memory: 29680 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.52s
