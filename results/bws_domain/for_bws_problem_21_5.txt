INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_21/bws_problem_21_5.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.009s wall-clock]
1472 relevant atoms
987 auxiliary atoms
2459 final queue length
4270 total queue pushes
Completing instantiation... [0.010s CPU, 0.015s wall-clock]
Instantiating: [0.020s CPU, 0.026s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.010s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
22 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.006s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.022s wall-clock]
1302 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
42 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.011s wall-clock]
Reordering and filtering variables...
43 of 43 variables necessary.
22 of 43 mutex groups necessary.
882 of 882 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.005s wall-clock]
Translator variables: 43
Translator derived variables: 0
Translator facts: 506
Translator goal facts: 19
Translator mutex groups: 22
Translator total mutex groups size: 484
Translator operators: 882
Translator axioms: 0
Translator task size: 7604
Translator peak memory: 36456 KB
Writing output... [0.000s CPU, 0.005s wall-clock]
Done! [0.080s CPU, 0.078s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=1.9328e-05s, 24488 KB] reading input...
[t=0.00255018s, 25268 KB] done reading input!
[t=0.00334154s, 25664 KB] Initializing landmark count heuristic...
[t=0.00337471s, 25664 KB] Generating landmark graph...
[t=0.00342988s, 25664 KB] Building a landmark graph with reasonable orders.
[t=0.00348295s, 25664 KB] Initializing Exploration...
[t=0.00372971s, 25852 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.013023s, 26380 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.013108s, 26380 KB] Landmarks generation time: 0.00967925s
[t=0.0131231s, 26380 KB] Discovered 97 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.01314s, 26380 KB] 360 edges
[t=0.0131516s, 26380 KB] approx. reasonable orders
[t=0.0162024s, 26380 KB] approx. obedient reasonable orders
[t=0.0162742s, 26380 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0162861s, 26380 KB] Landmarks generation time: 0.0129091s
[t=0.0162962s, 26380 KB] Discovered 97 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0163043s, 26380 KB] 429 edges
[t=0.0163127s, 26380 KB] Landmark graph generation time: 0.0129465s
[t=0.0163225s, 26380 KB] Landmark graph contains 97 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0163342s, 26380 KB] Landmark graph contains 429 orderings.
[t=0.0167295s, 26380 KB] Simplifying 3486 unary operators... done! [2646 unary operators]
[t=0.0176444s, 26380 KB] time to simplify: 0.000978777s
[t=0.0177771s, 26380 KB] Initializing additive heuristic...
[t=0.0177919s, 26380 KB] Initializing FF heuristic...
[t=0.0178622s, 26380 KB] Building successor generator...done!
[t=0.0180728s, 26380 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0180827s, 26380 KB] time for successor generation creation: 0.000179596s
[t=0.018106s, 26380 KB] Variables: 43
[t=0.0181156s, 26380 KB] FactPairs: 506
[t=0.0181236s, 26380 KB] Bytes per state: 16
[t=0.0182347s, 26380 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0182787s, 26380 KB] 43 initial landmarks, 19 goal landmarks
[t=0.0183452s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0183548s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0183694s, 26380 KB] g=0, 1 evaluated, 0 expanded
[t=0.0184002s, 26380 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0184111s, 26380 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0186032s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0186129s, 26380 KB] g=2, 8 evaluated, 7 expanded
[t=0.0187457s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0187552s, 26380 KB] g=2, 13 evaluated, 12 expanded
[t=0.0190976s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0191075s, 26380 KB] g=4, 27 evaluated, 26 expanded
[t=0.0191895s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0191992s, 26380 KB] g=4, 30 evaluated, 29 expanded
[t=0.0193771s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0193864s, 26380 KB] g=6, 37 evaluated, 36 expanded
[t=0.0195371s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0195476s, 26380 KB] g=6, 43 evaluated, 42 expanded
[t=0.0198846s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.019895s, 26380 KB] g=8, 57 evaluated, 56 expanded
[t=0.0201655s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0201763s, 26380 KB] g=9, 68 evaluated, 67 expanded
[t=0.0203829s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0203939s, 26380 KB] g=10, 76 evaluated, 75 expanded
[t=0.0206973s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0207121s, 26380 KB] g=12, 88 evaluated, 87 expanded
[t=0.0212081s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.021224s, 26380 KB] g=14, 108 evaluated, 107 expanded
[t=0.0214234s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0214359s, 26380 KB] g=16, 115 evaluated, 114 expanded
[t=0.0218235s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0218444s, 26380 KB] g=18, 130 evaluated, 129 expanded
[t=0.0219031s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0219244s, 26380 KB] g=16, 132 evaluated, 131 expanded
[t=0.0223919s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0224109s, 26380 KB] g=18, 152 evaluated, 151 expanded
[t=0.0229885s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0230247s, 26380 KB] g=20, 177 evaluated, 176 expanded
[t=0.0236904s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0237142s, 26380 KB] g=22, 205 evaluated, 204 expanded
[t=0.0243521s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0243746s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.024384s, 26380 KB] g=24, 232 evaluated, 231 expanded
[t=0.0246429s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0246542s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0246678s, 26380 KB] g=26, 243 evaluated, 242 expanded
[t=0.0249069s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.024917s, 26380 KB] g=28, 253 evaluated, 252 expanded
[t=0.0252017s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0252121s, 26380 KB] g=30, 264 evaluated, 263 expanded
[t=0.0254248s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0254343s, 26380 KB] g=32, 273 evaluated, 272 expanded
[t=0.026711s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0267257s, 26380 KB] g=38, 329 evaluated, 328 expanded
[t=0.0282915s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0283091s, 26380 KB] g=33, 395 evaluated, 394 expanded
[t=0.0289344s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0289447s, 26380 KB] g=36, 421 evaluated, 420 expanded
[t=0.0295862s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0295972s, 26380 KB] g=38, 448 evaluated, 447 expanded
[t=0.0298331s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0298456s, 26380 KB] g=46, 457 evaluated, 456 expanded
[t=0.0301781s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0301886s, 26380 KB] g=48, 471 evaluated, 470 expanded
[t=0.0303429s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0303527s, 26380 KB] g=40, 477 evaluated, 476 expanded
[t=0.0304903s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0305023s, 26380 KB] g=50, 482 evaluated, 481 expanded
[t=0.0307916s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0308028s, 26380 KB] g=52, 494 evaluated, 493 expanded
[t=0.0310683s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.03108s, 26380 KB] g=54, 505 evaluated, 504 expanded
[t=0.0311348s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0311509s, 26380 KB] g=42, 507 evaluated, 506 expanded
[t=0.0316454s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0316556s, 26380 KB] g=58, 528 evaluated, 527 expanded
[t=0.0319298s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.03194s, 26380 KB] g=60, 540 evaluated, 539 expanded
[t=0.0319706s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0319806s, 26380 KB] g=44, 541 evaluated, 540 expanded
[t=0.0322108s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0322207s, 26380 KB] g=62, 551 evaluated, 550 expanded
[t=0.0326094s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0326233s, 26380 KB] g=46, 568 evaluated, 567 expanded
[t=0.0333292s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0333389s, 26380 KB] g=68, 600 evaluated, 599 expanded
[t=0.0335063s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0335157s, 26380 KB] g=48, 607 evaluated, 606 expanded
[t=0.0338815s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0338921s, 26380 KB] g=72, 623 evaluated, 622 expanded
[t=0.0340547s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0340638s, 26380 KB] g=74, 630 evaluated, 629 expanded
[t=0.0341608s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0341698s, 26380 KB] g=50, 634 evaluated, 633 expanded
[t=0.0346388s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0346486s, 26380 KB] g=52, 655 evaluated, 654 expanded
[t=0.0351371s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0351474s, 26380 KB] g=54, 677 evaluated, 676 expanded
[t=0.0355776s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0355892s, 26380 KB] g=56, 696 evaluated, 695 expanded
[t=0.0359911s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0360024s, 26380 KB] g=58, 714 evaluated, 713 expanded
[t=0.0362715s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0362824s, 26380 KB] g=60, 726 evaluated, 725 expanded
[t=0.0363773s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0363861s, 26380 KB] g=86, 730 evaluated, 729 expanded
[t=0.0366862s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0366991s, 26380 KB] g=62, 743 evaluated, 742 expanded
[t=0.0368402s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0368594s, 26380 KB] g=90, 749 evaluated, 748 expanded
[t=0.0370173s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0370307s, 26380 KB] g=92, 754 evaluated, 753 expanded
[t=0.0370688s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0370801s, 26380 KB] g=64, 755 evaluated, 754 expanded
[t=0.0371705s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0371843s, 26380 KB] g=65, 758 evaluated, 757 expanded
[t=0.0373264s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0373431s, 26380 KB] g=66, 763 evaluated, 762 expanded
[t=0.0374211s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0374317s, 26380 KB] g=67, 766 evaluated, 765 expanded
[t=0.0374806s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0374902s, 26380 KB] g=68, 768 evaluated, 767 expanded
[t=0.0406104s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0406387s, 26380 KB] g=122, 938 evaluated, 937 expanded
[t=0.040876s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0408894s, 26380 KB] g=126, 951 evaluated, 950 expanded
[t=0.0409476s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0409577s, 26380 KB] g=128, 954 evaluated, 953 expanded
[t=0.0412638s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0412741s, 26380 KB] g=140, 974 evaluated, 973 expanded
[t=0.0413522s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0413627s, 26380 KB] g=144, 979 evaluated, 978 expanded
[t=0.0413795s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0413883s, 26380 KB] g=145, 980 evaluated, 979 expanded
[t=0.0414033s, 26380 KB] Solution found!
[t=0.0414173s, 26380 KB] Actual search time: 0.0231356s
unstack b18 b6 (1)
put-down b18 (1)
unstack b1 b12 (1)
stack b1 b6 (1)
unstack b20 b17 (1)
put-down b20 (1)
unstack b17 b3 (1)
put-down b17 (1)
unstack b3 b21 (1)
put-down b3 (1)
unstack b4 b16 (1)
put-down b4 (1)
unstack b16 b5 (1)
put-down b16 (1)
unstack b5 b11 (1)
put-down b5 (1)
unstack b9 b7 (1)
stack b9 b1 (1)
unstack b21 b14 (1)
put-down b21 (1)
pick-up b18 (1)
stack b18 b21 (1)
pick-up b16 (1)
stack b16 b18 (1)
pick-up b11 (1)
stack b11 b16 (1)
pick-up b3 (1)
stack b3 b4 (1)
pick-up b20 (1)
stack b20 b12 (1)
pick-up b7 (1)
stack b7 b5 (1)
unstack b3 b4 (1)
put-down b3 (1)
pick-up b4 (1)
stack b4 b7 (1)
pick-up b3 (1)
stack b3 b4 (1)
unstack b9 b1 (1)
put-down b9 (1)
unstack b1 b6 (1)
put-down b1 (1)
unstack b6 b10 (1)
put-down b6 (1)
pick-up b1 (1)
stack b1 b6 (1)
unstack b10 b13 (1)
stack b10 b14 (1)
unstack b13 b8 (1)
stack b13 b20 (1)
pick-up b17 (1)
stack b17 b13 (1)
unstack b8 b2 (1)
stack b8 b9 (1)
unstack b2 b15 (1)
put-down b2 (1)
unstack b15 b19 (1)
stack b15 b11 (1)
pick-up b19 (1)
stack b19 b17 (1)
pick-up b2 (1)
stack b2 b19 (1)
unstack b10 b14 (1)
put-down b10 (1)
pick-up b14 (1)
stack b14 b2 (1)
pick-up b10 (1)
stack b10 b14 (1)
unstack b8 b9 (1)
put-down b8 (1)
pick-up b9 (1)
stack b9 b1 (1)
pick-up b8 (1)
stack b8 b9 (1)
unstack b3 b4 (1)
put-down b3 (1)
unstack b4 b7 (1)
put-down b4 (1)
pick-up b3 (1)
stack b3 b4 (1)
unstack b7 b5 (1)
put-down b7 (1)
pick-up b5 (1)
stack b5 b15 (1)
pick-up b7 (1)
stack b7 b5 (1)
unstack b3 b4 (1)
put-down b3 (1)
pick-up b4 (1)
stack b4 b7 (1)
pick-up b3 (1)
stack b3 b4 (1)
unstack b10 b14 (1)
put-down b10 (1)
unstack b14 b2 (1)
put-down b14 (1)
pick-up b10 (1)
stack b10 b14 (1)
unstack b2 b19 (1)
put-down b2 (1)
unstack b19 b17 (1)
put-down b19 (1)
pick-up b2 (1)
stack b2 b19 (1)
unstack b10 b14 (1)
put-down b10 (1)
pick-up b14 (1)
stack b14 b2 (1)
pick-up b10 (1)
stack b10 b14 (1)
unstack b17 b13 (1)
put-down b17 (1)
unstack b13 b20 (1)
put-down b13 (1)
pick-up b17 (1)
stack b17 b13 (1)
unstack b20 b12 (1)
put-down b20 (1)
pick-up b12 (1)
stack b12 b8 (1)
pick-up b20 (1)
stack b20 b12 (1)
unstack b17 b13 (1)
put-down b17 (1)
pick-up b13 (1)
stack b13 b20 (1)
pick-up b17 (1)
stack b17 b13 (1)
unstack b10 b14 (1)
put-down b10 (1)
unstack b14 b2 (1)
put-down b14 (1)
pick-up b10 (1)
stack b10 b14 (1)
unstack b2 b19 (1)
put-down b2 (1)
pick-up b19 (1)
stack b19 b17 (1)
pick-up b2 (1)
stack b2 b19 (1)
unstack b10 b14 (1)
put-down b10 (1)
pick-up b14 (1)
stack b14 b2 (1)
pick-up b10 (1)
stack b10 b14 (1)
[t=0.0414269s, 26380 KB] Plan length: 146 step(s).
[t=0.0414269s, 26380 KB] Plan cost: 146
[t=0.0414269s, 26380 KB] Expanded 980 state(s).
[t=0.0414269s, 26380 KB] Reopened 0 state(s).
[t=0.0414269s, 26380 KB] Evaluated 981 state(s).
[t=0.0414269s, 26380 KB] Evaluations: 1962
[t=0.0414269s, 26380 KB] Generated 8550 state(s).
[t=0.0414269s, 26380 KB] Dead ends: 0 state(s).
[t=0.0414269s, 26380 KB] Number of registered states: 981
[t=0.0414269s, 26380 KB] Int hash set load factor: 981/1024 = 0.958008
[t=0.0414269s, 26380 KB] Int hash set resizes: 10
[t=0.0414269s, 26380 KB] Search time: 0.0231926s
[t=0.0414269s, 26380 KB] Total time: 0.0414269s
Solution found.
Peak memory: 26380 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.16s
