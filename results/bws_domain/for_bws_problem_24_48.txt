INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_24/bws_problem_24_48.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.012s wall-clock]
1898 relevant atoms
1272 auxiliary atoms
3170 final queue length
5527 total queue pushes
Completing instantiation... [0.020s CPU, 0.019s wall-clock]
Instantiating: [0.030s CPU, 0.033s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
25 uncovered facts
Choosing groups: [0.010s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.007s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.035s wall-clock]
1704 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
48 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.021s wall-clock]
Reordering and filtering variables...
49 of 49 variables necessary.
25 of 49 mutex groups necessary.
1152 of 1152 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.008s wall-clock]
Translator variables: 49
Translator derived variables: 0
Translator facts: 650
Translator goal facts: 21
Translator mutex groups: 25
Translator total mutex groups size: 625
Translator operators: 1152
Translator axioms: 0
Translator task size: 9913
Translator peak memory: 37876 KB
Writing output... [0.010s CPU, 0.006s wall-clock]
Done! [0.110s CPU, 0.114s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.5122e-05s, 24488 KB] reading input...
[t=0.00355722s, 25532 KB] done reading input!
[t=0.00474802s, 25928 KB] Initializing landmark count heuristic...
[t=0.00478995s, 25928 KB] Generating landmark graph...
[t=0.00486515s, 25928 KB] Building a landmark graph with reasonable orders.
[t=0.00494841s, 26060 KB] Initializing Exploration...
[t=0.0052986s, 26388 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0193779s, 26916 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0194763s, 26916 KB] Landmarks generation time: 0.014614s
[t=0.0194921s, 26916 KB] Discovered 110 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0195101s, 26916 KB] 463 edges
[t=0.0195203s, 26916 KB] approx. reasonable orders
[t=0.0240689s, 26916 KB] approx. obedient reasonable orders
[t=0.0243325s, 26916 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0243451s, 26916 KB] Landmarks generation time: 0.019553s
[t=0.0243553s, 26916 KB] Discovered 110 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0243638s, 26916 KB] 554 edges
[t=0.0243731s, 26916 KB] Landmark graph generation time: 0.0195906s
[t=0.0243821s, 26916 KB] Landmark graph contains 110 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0243902s, 26916 KB] Landmark graph contains 554 orderings.
[t=0.0247607s, 26916 KB] Simplifying 4560 unary operators... done! [3456 unary operators]
[t=0.0258153s, 26916 KB] time to simplify: 0.00113045s
[t=0.0259655s, 26916 KB] Initializing additive heuristic...
[t=0.025981s, 26916 KB] Initializing FF heuristic...
[t=0.0260688s, 26916 KB] Building successor generator...done!
[t=0.0263438s, 26916 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0263558s, 26916 KB] time for successor generation creation: 0.000238668s
[t=0.0263765s, 26916 KB] Variables: 49
[t=0.0263859s, 26916 KB] FactPairs: 650
[t=0.0263946s, 26916 KB] Bytes per state: 20
[t=0.0266771s, 26916 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.026727s, 26916 KB] 49 initial landmarks, 21 goal landmarks
[t=0.0268466s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 61
[t=0.0268573s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0268663s, 26916 KB] g=0, 1 evaluated, 0 expanded
[t=0.0268878s, 26916 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 61
[t=0.0268967s, 26916 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0271058s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 60
[t=0.0271233s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.0271352s, 26916 KB] g=2, 7 evaluated, 6 expanded
[t=0.027324s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.0273385s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0273468s, 26916 KB] g=4, 13 evaluated, 12 expanded
[t=0.0275264s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 58
[t=0.027537s, 26916 KB] g=6, 19 evaluated, 18 expanded
[t=0.0276675s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0276779s, 26916 KB] g=6, 23 evaluated, 22 expanded
[t=0.0281402s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 57
[t=0.0281554s, 26916 KB] g=8, 39 evaluated, 38 expanded
[t=0.0285869s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0286003s, 26916 KB] g=10, 54 evaluated, 53 expanded
[t=0.0290197s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0290304s, 26916 KB] g=12, 68 evaluated, 67 expanded
[t=0.0291359s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0291455s, 26916 KB] g=10, 71 evaluated, 70 expanded
[t=0.0295592s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0295746s, 26916 KB] g=12, 85 evaluated, 84 expanded
[t=0.0296145s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0296434s, 26916 KB] g=14, 86 evaluated, 85 expanded
[t=0.0303306s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0303473s, 26916 KB] g=16, 109 evaluated, 108 expanded
[t=0.0304761s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0304859s, 26916 KB] g=16, 113 evaluated, 112 expanded
[t=0.0308246s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0308372s, 26916 KB] g=18, 123 evaluated, 122 expanded
[t=0.0312652s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0312767s, 26916 KB] g=18, 137 evaluated, 136 expanded
[t=0.0313195s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0313287s, 26916 KB] g=20, 138 evaluated, 137 expanded
[t=0.0320194s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0320428s, 26916 KB] g=20, 158 evaluated, 157 expanded
[t=0.0323034s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.032313s, 26916 KB] g=24, 167 evaluated, 166 expanded
[t=0.0327782s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0327872s, 26916 KB] g=26, 183 evaluated, 182 expanded
[t=0.0329504s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0329601s, 26916 KB] g=22, 188 evaluated, 187 expanded
[t=0.0335819s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0335926s, 26916 KB] g=24, 209 evaluated, 208 expanded
[t=0.03433s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0343402s, 26916 KB] g=25, 234 evaluated, 233 expanded
[t=0.0352007s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0352124s, 26916 KB] g=32, 262 evaluated, 261 expanded
[t=0.0353737s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0353833s, 26916 KB] g=28, 267 evaluated, 266 expanded
[t=0.0356016s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.035611s, 26916 KB] g=34, 274 evaluated, 273 expanded
[t=0.0362705s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0362816s, 26916 KB] g=30, 296 evaluated, 295 expanded
[t=0.0372872s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0373003s, 26916 KB] g=32, 330 evaluated, 329 expanded
[t=0.0379005s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0379104s, 26916 KB] g=40, 351 evaluated, 350 expanded
[t=0.0382003s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0382097s, 26916 KB] g=42, 361 evaluated, 360 expanded
[t=0.0382465s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0382551s, 26916 KB] g=34, 362 evaluated, 361 expanded
[t=0.0385476s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0385573s, 26916 KB] g=44, 372 evaluated, 371 expanded
[t=0.0388998s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0389111s, 26916 KB] g=46, 383 evaluated, 382 expanded
[t=0.0391869s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0392048s, 26916 KB] g=35, 391 evaluated, 390 expanded
[t=0.0410229s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0410412s, 26916 KB] g=38, 455 evaluated, 454 expanded
[t=0.0425344s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0425571s, 26916 KB] g=40, 504 evaluated, 503 expanded
[t=0.0436644s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0436797s, 26916 KB] g=42, 539 evaluated, 538 expanded
[t=0.0444631s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0444755s, 26916 KB] g=44, 565 evaluated, 564 expanded
[t=0.0454442s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0454563s, 26916 KB] g=48, 600 evaluated, 599 expanded
[t=0.0455621s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0455718s, 26916 KB] g=46, 603 evaluated, 602 expanded
[t=0.046081s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0460925s, 26916 KB] g=50, 621 evaluated, 620 expanded
[t=0.0465877s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0466s, 26916 KB] g=52, 638 evaluated, 637 expanded
[t=0.0467753s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0467883s, 26916 KB] g=48, 642 evaluated, 641 expanded
[t=0.0471596s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0471744s, 26916 KB] g=54, 655 evaluated, 654 expanded
[t=0.0475999s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0476114s, 26916 KB] g=56, 670 evaluated, 669 expanded
[t=0.0476518s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0476608s, 26916 KB] g=50, 671 evaluated, 670 expanded
[t=0.0480605s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0480728s, 26916 KB] g=58, 685 evaluated, 684 expanded
[t=0.0484138s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0484259s, 26916 KB] g=60, 697 evaluated, 696 expanded
[t=0.048464s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.048474s, 26916 KB] g=52, 698 evaluated, 697 expanded
[t=0.0491801s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0491922s, 26916 KB] g=54, 723 evaluated, 722 expanded
[t=0.0498824s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0498946s, 26916 KB] g=56, 748 evaluated, 747 expanded
[t=0.0500382s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0500471s, 26916 KB] g=66, 753 evaluated, 752 expanded
[t=0.0504983s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0505106s, 26916 KB] g=58, 769 evaluated, 768 expanded
[t=0.0510095s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0510226s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0510314s, 26916 KB] g=60, 786 evaluated, 785 expanded
[t=0.0512049s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0512159s, 26916 KB] g=62, 792 evaluated, 791 expanded
[t=0.0513071s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0513339s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0513435s, 26916 KB] g=62, 795 evaluated, 794 expanded
[t=0.0515416s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0515679s, 26916 KB] g=64, 800 evaluated, 799 expanded
[t=0.051764s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0517794s, 26916 KB] g=66, 806 evaluated, 805 expanded
[t=0.0608526s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0608941s, 26916 KB] g=97, 1133 evaluated, 1132 expanded
[t=0.0609323s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0609417s, 26916 KB] g=98, 1134 evaluated, 1133 expanded
[t=0.0610511s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0610603s, 26916 KB] g=99, 1138 evaluated, 1137 expanded
[t=0.0613425s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0613534s, 26916 KB] g=103, 1149 evaluated, 1148 expanded
[t=0.0614672s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0614799s, 26916 KB] g=104, 1153 evaluated, 1152 expanded
[t=0.061711s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0617283s, 26916 KB] g=105, 1159 evaluated, 1158 expanded
[t=0.0618645s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0618734s, 26916 KB] g=106, 1164 evaluated, 1163 expanded
[t=0.0619342s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0619429s, 26916 KB] g=107, 1166 evaluated, 1165 expanded
[t=0.0619783s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0619868s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0619946s, 26916 KB] g=108, 1167 evaluated, 1166 expanded
[t=0.0621344s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0621434s, 26916 KB] g=112, 1172 evaluated, 1171 expanded
[t=0.0622298s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0622386s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0622465s, 26916 KB] g=114, 1175 evaluated, 1174 expanded
[t=0.0645456s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0645679s, 26916 KB] g=144, 1274 evaluated, 1273 expanded
[t=0.0648203s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0648637s, 26916 KB] g=148, 1283 evaluated, 1282 expanded
[t=0.0649527s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.064967s, 26916 KB] g=150, 1286 evaluated, 1285 expanded
[t=0.0652935s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0653078s, 26916 KB] g=162, 1304 evaluated, 1303 expanded
[t=0.065372s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.065383s, 26916 KB] g=166, 1308 evaluated, 1307 expanded
[t=0.0654022s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0654117s, 26916 KB] g=167, 1309 evaluated, 1308 expanded
[t=0.065429s, 26916 KB] Solution found!
[t=0.0654525s, 26916 KB] Actual search time: 0.0387246s
unstack b21 b15 (1)
put-down b21 (1)
unstack b6 b23 (1)
put-down b6 (1)
unstack b15 b3 (1)
put-down b15 (1)
unstack b23 b2 (1)
put-down b23 (1)
unstack b2 b11 (1)
put-down b2 (1)
unstack b11 b12 (1)
put-down b11 (1)
unstack b12 b24 (1)
put-down b12 (1)
unstack b4 b22 (1)
put-down b4 (1)
unstack b22 b14 (1)
put-down b22 (1)
unstack b14 b19 (1)
stack b14 b6 (1)
unstack b19 b18 (1)
put-down b19 (1)
unstack b18 b8 (1)
put-down b18 (1)
unstack b8 b16 (1)
put-down b8 (1)
unstack b16 b1 (1)
put-down b16 (1)
unstack b5 b20 (1)
stack b5 b14 (1)
unstack b20 b7 (1)
stack b20 b24 (1)
unstack b7 b9 (1)
stack b7 b21 (1)
unstack b9 b13 (1)
put-down b9 (1)
pick-up b13 (1)
stack b13 b20 (1)
pick-up b22 (1)
stack b22 b7 (1)
pick-up b11 (1)
stack b11 b22 (1)
pick-up b17 (1)
stack b17 b11 (1)
pick-up b23 (1)
stack b23 b13 (1)
pick-up b19 (1)
stack b19 b23 (1)
pick-up b15 (1)
stack b15 b19 (1)
pick-up b16 (1)
stack b16 b15 (1)
pick-up b3 (1)
stack b3 b16 (1)
pick-up b4 (1)
stack b4 b5 (1)
pick-up b2 (1)
stack b2 b4 (1)
pick-up b1 (1)
stack b1 b2 (1)
pick-up b9 (1)
stack b9 b1 (1)
pick-up b12 (1)
stack b12 b18 (1)
pick-up b8 (1)
stack b8 b12 (1)
unstack b3 b16 (1)
put-down b3 (1)
unstack b16 b15 (1)
put-down b16 (1)
pick-up b3 (1)
stack b3 b16 (1)
unstack b15 b19 (1)
put-down b15 (1)
unstack b19 b23 (1)
put-down b19 (1)
pick-up b15 (1)
stack b15 b19 (1)
unstack b3 b16 (1)
put-down b3 (1)
pick-up b16 (1)
stack b16 b15 (1)
pick-up b3 (1)
stack b3 b16 (1)
unstack b23 b13 (1)
put-down b23 (1)
unstack b13 b20 (1)
put-down b13 (1)
pick-up b23 (1)
stack b23 b13 (1)
unstack b20 b24 (1)
put-down b20 (1)
unstack b24 b10 (1)
put-down b24 (1)
pick-up b10 (1)
stack b10 b3 (1)
pick-up b20 (1)
stack b20 b24 (1)
unstack b8 b12 (1)
put-down b8 (1)
unstack b12 b18 (1)
put-down b12 (1)
pick-up b18 (1)
stack b18 b10 (1)
pick-up b12 (1)
stack b12 b18 (1)
pick-up b8 (1)
stack b8 b12 (1)
unstack b23 b13 (1)
put-down b23 (1)
pick-up b13 (1)
stack b13 b20 (1)
pick-up b23 (1)
stack b23 b13 (1)
unstack b8 b12 (1)
put-down b8 (1)
unstack b12 b18 (1)
put-down b12 (1)
pick-up b8 (1)
stack b8 b12 (1)
unstack b18 b10 (1)
put-down b18 (1)
unstack b10 b3 (1)
put-down b10 (1)
pick-up b18 (1)
stack b18 b10 (1)
unstack b8 b12 (1)
put-down b8 (1)
pick-up b12 (1)
stack b12 b18 (1)
pick-up b8 (1)
stack b8 b12 (1)
unstack b3 b16 (1)
put-down b3 (1)
unstack b16 b15 (1)
put-down b16 (1)
pick-up b3 (1)
stack b3 b16 (1)
unstack b15 b19 (1)
put-down b15 (1)
pick-up b19 (1)
stack b19 b23 (1)
pick-up b15 (1)
stack b15 b19 (1)
unstack b3 b16 (1)
put-down b3 (1)
pick-up b16 (1)
stack b16 b15 (1)
pick-up b3 (1)
stack b3 b16 (1)
unstack b8 b12 (1)
put-down b8 (1)
unstack b12 b18 (1)
put-down b12 (1)
pick-up b8 (1)
stack b8 b12 (1)
unstack b18 b10 (1)
put-down b18 (1)
pick-up b10 (1)
stack b10 b3 (1)
pick-up b18 (1)
stack b18 b10 (1)
unstack b8 b12 (1)
put-down b8 (1)
pick-up b12 (1)
stack b12 b18 (1)
pick-up b8 (1)
stack b8 b12 (1)
[t=0.0654641s, 26916 KB] Plan length: 168 step(s).
[t=0.0654641s, 26916 KB] Plan cost: 168
[t=0.0654641s, 26916 KB] Expanded 1309 state(s).
[t=0.0654641s, 26916 KB] Reopened 0 state(s).
[t=0.0654641s, 26916 KB] Evaluated 1310 state(s).
[t=0.0654641s, 26916 KB] Evaluations: 2620
[t=0.0654641s, 26916 KB] Generated 13379 state(s).
[t=0.0654641s, 26916 KB] Dead ends: 0 state(s).
[t=0.0654641s, 26916 KB] Number of registered states: 1310
[t=0.0654641s, 26916 KB] Int hash set load factor: 1310/2048 = 0.639648
[t=0.0654641s, 26916 KB] Int hash set resizes: 11
[t=0.0654641s, 26916 KB] Search time: 0.0387882s
[t=0.0654641s, 26916 KB] Total time: 0.0654641s
Solution found.
Peak memory: 26916 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.23s
