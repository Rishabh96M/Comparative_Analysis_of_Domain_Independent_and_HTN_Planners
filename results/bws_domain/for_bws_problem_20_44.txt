INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_20/bws_problem_20_44.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.008s wall-clock]
1342 relevant atoms
900 auxiliary atoms
2242 final queue length
3885 total queue pushes
Completing instantiation... [0.010s CPU, 0.013s wall-clock]
Instantiating: [0.020s CPU, 0.023s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
21 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.006s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.022s wall-clock]
1180 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
40 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.010s wall-clock]
Reordering and filtering variables...
41 of 41 variables necessary.
21 of 41 mutex groups necessary.
800 of 800 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.005s wall-clock]
Translator variables: 41
Translator derived variables: 0
Translator facts: 462
Translator goal facts: 16
Translator mutex groups: 21
Translator total mutex groups size: 441
Translator operators: 800
Translator axioms: 0
Translator task size: 6900
Translator peak memory: 35948 KB
Writing output... [0.010s CPU, 0.004s wall-clock]
Done! [0.070s CPU, 0.075s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=1.7462e-05s, 24488 KB] reading input...
[t=0.00228483s, 25180 KB] done reading input!
[t=0.00340151s, 25444 KB] Initializing landmark count heuristic...
[t=0.00346154s, 25444 KB] Generating landmark graph...
[t=0.00353754s, 25576 KB] Building a landmark graph with reasonable orders.
[t=0.00360404s, 25576 KB] Initializing Exploration...
[t=0.00385728s, 25744 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0123939s, 26140 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.012489s, 26140 KB] Landmarks generation time: 0.00894747s
[t=0.0125023s, 26140 KB] Discovered 88 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0125188s, 26140 KB] 403 edges
[t=0.0125424s, 26140 KB] approx. reasonable orders
[t=0.0135501s, 26140 KB] approx. obedient reasonable orders
[t=0.0136062s, 26140 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0136185s, 26140 KB] Landmarks generation time: 0.0101534s
[t=0.0136286s, 26140 KB] Discovered 88 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0136374s, 26140 KB] 422 edges
[t=0.013646s, 26140 KB] Landmark graph generation time: 0.0101914s
[t=0.0136546s, 26140 KB] Landmark graph contains 88 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0136629s, 26140 KB] Landmark graph contains 422 orderings.
[t=0.0140153s, 26336 KB] Simplifying 3160 unary operators... done! [2400 unary operators]
[t=0.0147898s, 26336 KB] time to simplify: 0.000828273s
[t=0.0148961s, 26336 KB] Initializing additive heuristic...
[t=0.0149098s, 26336 KB] Initializing FF heuristic...
[t=0.0149762s, 26336 KB] Building successor generator...done!
[t=0.0151557s, 26336 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0151651s, 26336 KB] time for successor generation creation: 0.000144865s
[t=0.0151776s, 26336 KB] Variables: 41
[t=0.0151865s, 26336 KB] FactPairs: 462
[t=0.0151957s, 26336 KB] Bytes per state: 16
[t=0.0153895s, 26336 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0154263s, 26336 KB] 41 initial landmarks, 16 goal landmarks
[t=0.015474s, 26336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0154843s, 26336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0154935s, 26336 KB] g=0, 1 evaluated, 0 expanded
[t=0.0155068s, 26336 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0155154s, 26336 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0155963s, 26336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.015606s, 26336 KB] g=1, 4 evaluated, 3 expanded
[t=0.0156596s, 26336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0156696s, 26336 KB] g=2, 6 evaluated, 5 expanded
[t=0.0158045s, 26336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0158138s, 26336 KB] g=3, 12 evaluated, 11 expanded
[t=0.0160614s, 26336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0160741s, 26336 KB] g=5, 20 evaluated, 19 expanded
[t=0.0161453s, 26336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.016155s, 26336 KB] g=6, 23 evaluated, 22 expanded
[t=0.016309s, 26336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0163182s, 26336 KB] g=8, 30 evaluated, 29 expanded
[t=0.0164537s, 26336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0164628s, 26336 KB] g=10, 36 evaluated, 35 expanded
[t=0.0164942s, 26336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0165032s, 26336 KB] g=10, 37 evaluated, 36 expanded
[t=0.0167178s, 26336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0167276s, 26336 KB] g=12, 47 evaluated, 46 expanded
[t=0.0168659s, 26336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0168766s, 26336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0168851s, 26336 KB] g=14, 53 evaluated, 52 expanded
[t=0.0170025s, 26336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.017019s, 26336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0170279s, 26336 KB] g=16, 58 evaluated, 57 expanded
[t=0.0171435s, 26336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0171531s, 26336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0171618s, 26336 KB] g=18, 63 evaluated, 62 expanded
[t=0.0172832s, 26336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0172927s, 26336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0173012s, 26336 KB] g=20, 68 evaluated, 67 expanded
[t=0.0173565s, 26336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0173658s, 26336 KB] g=21, 70 evaluated, 69 expanded
[t=0.0173978s, 26336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0174075s, 26336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0174168s, 26336 KB] g=22, 71 evaluated, 70 expanded
[t=0.0175572s, 26336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0175676s, 26336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0175774s, 26336 KB] g=24, 77 evaluated, 76 expanded
[t=0.0176974s, 26336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0177071s, 26336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0177158s, 26336 KB] g=26, 82 evaluated, 81 expanded
[t=0.0178353s, 26336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.017845s, 26336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0178541s, 26336 KB] g=28, 87 evaluated, 86 expanded
[t=0.0179907s, 26336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0180011s, 26336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0180102s, 26336 KB] g=30, 93 evaluated, 92 expanded
[t=0.0181486s, 26336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0181586s, 26336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0181673s, 26336 KB] g=32, 99 evaluated, 98 expanded
[t=0.0183326s, 26336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0183436s, 26336 KB] g=35, 106 evaluated, 105 expanded
[t=0.018376s, 26336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.018387s, 26336 KB] g=36, 107 evaluated, 106 expanded
[t=0.0185039s, 26336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0185138s, 26336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0185218s, 26336 KB] g=38, 112 evaluated, 111 expanded
[t=0.0186144s, 26336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0186261s, 26336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0186345s, 26336 KB] g=40, 116 evaluated, 115 expanded
[t=0.018727s, 26336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0187384s, 26336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0187472s, 26336 KB] g=42, 120 evaluated, 119 expanded
[t=0.0188384s, 26336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0188486s, 26336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0188573s, 26336 KB] g=44, 124 evaluated, 123 expanded
[t=0.0197508s, 26336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0197784s, 26336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.019797s, 26336 KB] g=56, 166 evaluated, 165 expanded
[t=0.0199851s, 26336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0199985s, 26336 KB] g=60, 175 evaluated, 174 expanded
[t=0.0200667s, 26336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.020077s, 26336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0200856s, 26336 KB] g=62, 178 evaluated, 177 expanded
[t=0.0244897s, 26336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.024527s, 26336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0245418s, 26336 KB] g=100, 402 evaluated, 401 expanded
[t=0.024706s, 26336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0247161s, 26336 KB] g=104, 411 evaluated, 410 expanded
[t=0.0247751s, 26336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0247847s, 26336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0247934s, 26336 KB] g=106, 414 evaluated, 413 expanded
[t=0.025371s, 26336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0253827s, 26336 KB] g=122, 452 evaluated, 451 expanded
[t=0.0255194s, 26336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0255289s, 26336 KB] g=130, 463 evaluated, 462 expanded
[t=0.0255457s, 26336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0255548s, 26336 KB] g=131, 464 evaluated, 463 expanded
[t=0.0255693s, 26336 KB] Solution found!
[t=0.0255811s, 26336 KB] Actual search time: 0.0101519s
unstack b18 b16 (1)
put-down b18 (1)
unstack b5 b1 (1)
put-down b5 (1)
unstack b1 b19 (1)
put-down b1 (1)
unstack b17 b10 (1)
put-down b17 (1)
unstack b10 b12 (1)
put-down b10 (1)
unstack b19 b2 (1)
stack b19 b12 (1)
pick-up b10 (1)
stack b10 b19 (1)
unstack b2 b13 (1)
stack b2 b10 (1)
unstack b13 b7 (1)
stack b13 b2 (1)
unstack b7 b15 (1)
stack b7 b17 (1)
unstack b15 b11 (1)
stack b15 b1 (1)
unstack b11 b14 (1)
stack b11 b7 (1)
unstack b14 b9 (1)
stack b14 b11 (1)
unstack b9 b8 (1)
put-down b9 (1)
unstack b8 b6 (1)
put-down b8 (1)
pick-up b6 (1)
stack b6 b13 (1)
unstack b16 b20 (1)
put-down b16 (1)
unstack b20 b3 (1)
stack b20 b6 (1)
pick-up b16 (1)
stack b16 b20 (1)
unstack b3 b4 (1)
stack b3 b16 (1)
pick-up b4 (1)
stack b4 b9 (1)
pick-up b5 (1)
stack b5 b3 (1)
unstack b14 b11 (1)
put-down b14 (1)
unstack b11 b7 (1)
put-down b11 (1)
pick-up b14 (1)
stack b14 b11 (1)
unstack b7 b17 (1)
put-down b7 (1)
pick-up b17 (1)
stack b17 b4 (1)
pick-up b7 (1)
stack b7 b17 (1)
unstack b14 b11 (1)
put-down b14 (1)
pick-up b11 (1)
stack b11 b7 (1)
pick-up b14 (1)
stack b14 b11 (1)
unstack b5 b3 (1)
put-down b5 (1)
unstack b3 b16 (1)
put-down b3 (1)
pick-up b5 (1)
stack b5 b3 (1)
unstack b16 b20 (1)
put-down b16 (1)
unstack b20 b6 (1)
put-down b20 (1)
unstack b6 b13 (1)
put-down b6 (1)
pick-up b20 (1)
stack b20 b6 (1)
pick-up b16 (1)
stack b16 b20 (1)
unstack b5 b3 (1)
put-down b5 (1)
pick-up b3 (1)
stack b3 b16 (1)
pick-up b5 (1)
stack b5 b3 (1)
unstack b13 b2 (1)
put-down b13 (1)
unstack b2 b10 (1)
put-down b2 (1)
pick-up b13 (1)
stack b13 b2 (1)
unstack b10 b19 (1)
put-down b10 (1)
unstack b19 b12 (1)
put-down b19 (1)
pick-up b12 (1)
stack b12 b14 (1)
pick-up b19 (1)
stack b19 b12 (1)
pick-up b10 (1)
stack b10 b19 (1)
unstack b13 b2 (1)
put-down b13 (1)
pick-up b2 (1)
stack b2 b10 (1)
pick-up b13 (1)
stack b13 b2 (1)
unstack b5 b3 (1)
put-down b5 (1)
unstack b3 b16 (1)
put-down b3 (1)
unstack b16 b20 (1)
put-down b16 (1)
pick-up b3 (1)
stack b3 b16 (1)
pick-up b5 (1)
stack b5 b3 (1)
unstack b20 b6 (1)
put-down b20 (1)
pick-up b6 (1)
stack b6 b13 (1)
pick-up b20 (1)
stack b20 b6 (1)
unstack b5 b3 (1)
put-down b5 (1)
unstack b3 b16 (1)
put-down b3 (1)
pick-up b16 (1)
stack b16 b20 (1)
pick-up b3 (1)
stack b3 b16 (1)
pick-up b5 (1)
stack b5 b3 (1)
[t=0.0255911s, 26336 KB] Plan length: 132 step(s).
[t=0.0255911s, 26336 KB] Plan cost: 132
[t=0.0255911s, 26336 KB] Expanded 464 state(s).
[t=0.0255911s, 26336 KB] Reopened 0 state(s).
[t=0.0255911s, 26336 KB] Evaluated 465 state(s).
[t=0.0255911s, 26336 KB] Evaluations: 930
[t=0.0255911s, 26336 KB] Generated 3687 state(s).
[t=0.0255911s, 26336 KB] Dead ends: 0 state(s).
[t=0.0255911s, 26336 KB] Number of registered states: 465
[t=0.0255911s, 26336 KB] Int hash set load factor: 465/512 = 0.908203
[t=0.0255911s, 26336 KB] Int hash set resizes: 9
[t=0.0255911s, 26336 KB] Search time: 0.010202s
[t=0.0255911s, 26336 KB] Total time: 0.0255911s
Solution found.
Peak memory: 26336 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.13s
