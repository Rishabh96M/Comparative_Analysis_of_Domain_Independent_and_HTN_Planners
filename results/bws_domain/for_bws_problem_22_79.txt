INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_22/bws_problem_22_79.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.010s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.010s wall-clock]
1608 relevant atoms
1078 auxiliary atoms
2686 final queue length
4672 total queue pushes
Completing instantiation... [0.010s CPU, 0.016s wall-clock]
Instantiating: [0.030s CPU, 0.028s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.010s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
23 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.007s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.025s wall-clock]
1430 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
44 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.012s wall-clock]
Reordering and filtering variables...
45 of 45 variables necessary.
23 of 45 mutex groups necessary.
968 of 968 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.007s wall-clock]
Translator variables: 45
Translator derived variables: 0
Translator facts: 552
Translator goal facts: 17
Translator mutex groups: 23
Translator total mutex groups size: 529
Translator operators: 968
Translator axioms: 0
Translator task size: 8337
Translator peak memory: 36976 KB
Writing output... [0.010s CPU, 0.005s wall-clock]
Done! [0.090s CPU, 0.087s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.4969e-05s, 24488 KB] reading input...
[t=0.00281508s, 25340 KB] done reading input!
[t=0.00379114s, 25736 KB] Initializing landmark count heuristic...
[t=0.00382548s, 25736 KB] Generating landmark graph...
[t=0.00388804s, 25736 KB] Building a landmark graph with reasonable orders.
[t=0.00395497s, 25736 KB] Initializing Exploration...
[t=0.00424343s, 26000 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0140311s, 26528 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0141825s, 26528 KB] Landmarks generation time: 0.0102993s
[t=0.0142022s, 26528 KB] Discovered 95 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0142327s, 26528 KB] 323 edges
[t=0.0142439s, 26528 KB] approx. reasonable orders
[t=0.0170991s, 26528 KB] approx. obedient reasonable orders
[t=0.0171938s, 26528 KB] Removed 1 reasonable or obedient reasonable orders
[t=0.017205s, 26528 KB] Landmarks generation time: 0.0133766s
[t=0.0172151s, 26528 KB] Discovered 95 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.017224s, 26528 KB] 383 edges
[t=0.0172333s, 26528 KB] Landmark graph generation time: 0.0134149s
[t=0.0172419s, 26528 KB] Landmark graph contains 95 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0172498s, 26528 KB] Landmark graph contains 383 orderings.
[t=0.0176037s, 26528 KB] Simplifying 3828 unary operators... done! [2904 unary operators]
[t=0.0185608s, 26528 KB] time to simplify: 0.00101955s
[t=0.0186916s, 26528 KB] Initializing additive heuristic...
[t=0.0187063s, 26528 KB] Initializing FF heuristic...
[t=0.0187609s, 26528 KB] Building successor generator...done!
[t=0.0189647s, 26528 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0189737s, 26528 KB] time for successor generation creation: 0.000176328s
[t=0.0189873s, 26528 KB] Variables: 45
[t=0.0189955s, 26528 KB] FactPairs: 552
[t=0.0190037s, 26528 KB] Bytes per state: 20
[t=0.0191015s, 26528 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.019139s, 26528 KB] 45 initial landmarks, 17 goal landmarks
[t=0.0192087s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.01922s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0192293s, 26528 KB] g=0, 1 evaluated, 0 expanded
[t=0.0192448s, 26528 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0192539s, 26528 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0194485s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0194588s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0194684s, 26528 KB] g=2, 8 evaluated, 7 expanded
[t=0.0196511s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0196606s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0196691s, 26528 KB] g=4, 15 evaluated, 14 expanded
[t=0.0198237s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0198335s, 26528 KB] g=6, 21 evaluated, 20 expanded
[t=0.0198952s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0199044s, 26528 KB] g=6, 23 evaluated, 22 expanded
[t=0.0201541s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0201643s, 26528 KB] g=8, 33 evaluated, 32 expanded
[t=0.0202751s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0202842s, 26528 KB] g=8, 37 evaluated, 36 expanded
[t=0.0205077s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0205173s, 26528 KB] g=10, 46 evaluated, 45 expanded
[t=0.0209333s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0209431s, 26528 KB] g=12, 63 evaluated, 62 expanded
[t=0.0212184s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0212282s, 26528 KB] g=12, 74 evaluated, 73 expanded
[t=0.0214009s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0214107s, 26528 KB] g=14, 81 evaluated, 80 expanded
[t=0.0215459s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0215556s, 26528 KB] g=15, 86 evaluated, 85 expanded
[t=0.0220496s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0220656s, 26528 KB] g=16, 106 evaluated, 105 expanded
[t=0.0221003s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0221095s, 26528 KB] g=18, 107 evaluated, 106 expanded
[t=0.0224348s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0224445s, 26528 KB] g=18, 120 evaluated, 119 expanded
[t=0.0227509s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0227617s, 26528 KB] g=20, 132 evaluated, 131 expanded
[t=0.0232954s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0233071s, 26528 KB] g=22, 152 evaluated, 151 expanded
[t=0.0239553s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0239659s, 26528 KB] g=24, 179 evaluated, 178 expanded
[t=0.0245988s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0246083s, 26528 KB] g=26, 205 evaluated, 204 expanded
[t=0.025078s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.025088s, 26528 KB] g=26, 224 evaluated, 223 expanded
[t=0.0254647s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0254798s, 26528 KB] g=28, 239 evaluated, 238 expanded
[t=0.0258899s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0258999s, 26528 KB] g=30, 255 evaluated, 254 expanded
[t=0.0261937s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0262055s, 26528 KB] g=28, 266 evaluated, 265 expanded
[t=0.026395s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0264047s, 26528 KB] g=32, 273 evaluated, 272 expanded
[t=0.0268575s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.026871s, 26528 KB] g=34, 291 evaluated, 290 expanded
[t=0.0272225s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0272623s, 26528 KB] g=30, 304 evaluated, 303 expanded
[t=0.0273576s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0273737s, 26528 KB] g=36, 307 evaluated, 306 expanded
[t=0.0277549s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0277767s, 26528 KB] g=38, 322 evaluated, 321 expanded
[t=0.0278603s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0278697s, 26528 KB] g=31, 325 evaluated, 324 expanded
[t=0.0281373s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0281512s, 26528 KB] g=40, 335 evaluated, 334 expanded
[t=0.0284557s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0284686s, 26528 KB] g=42, 347 evaluated, 346 expanded
[t=0.0287228s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0287338s, 26528 KB] g=44, 357 evaluated, 356 expanded
[t=0.0289925s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.029003s, 26528 KB] g=46, 367 evaluated, 366 expanded
[t=0.0298822s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0299135s, 26528 KB] g=34, 403 evaluated, 402 expanded
[t=0.0306824s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0307028s, 26528 KB] g=36, 434 evaluated, 433 expanded
[t=0.0316962s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0317334s, 26528 KB] g=38, 473 evaluated, 472 expanded
[t=0.0330189s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.033044s, 26528 KB] g=40, 524 evaluated, 523 expanded
[t=0.0338172s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0338284s, 26528 KB] g=54, 556 evaluated, 555 expanded
[t=0.0342435s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0342541s, 26528 KB] g=42, 573 evaluated, 572 expanded
[t=0.0349793s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0349909s, 26528 KB] g=58, 604 evaluated, 603 expanded
[t=0.0350941s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0351034s, 26528 KB] g=44, 608 evaluated, 607 expanded
[t=0.0352275s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0352369s, 26528 KB] g=60, 613 evaluated, 612 expanded
[t=0.0359171s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0359267s, 26528 KB] g=46, 644 evaluated, 643 expanded
[t=0.0364111s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0364206s, 26528 KB] g=48, 667 evaluated, 666 expanded
[t=0.0369855s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0370014s, 26528 KB] g=50, 694 evaluated, 693 expanded
[t=0.0372991s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0373084s, 26528 KB] g=52, 709 evaluated, 708 expanded
[t=0.0374467s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0374558s, 26528 KB] g=54, 717 evaluated, 716 expanded
[t=0.0376976s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0377068s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0377146s, 26528 KB] g=54, 730 evaluated, 729 expanded
[t=0.03783s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0378391s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0378473s, 26528 KB] g=56, 737 evaluated, 736 expanded
[t=0.0379427s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0379513s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.037959s, 26528 KB] g=58, 743 evaluated, 742 expanded
[t=0.0380399s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.038049s, 26528 KB] g=60, 748 evaluated, 747 expanded
[t=0.0381043s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.038113s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0381211s, 26528 KB] g=60, 751 evaluated, 750 expanded
[t=0.0381823s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0382033s, 26528 KB] g=61, 754 evaluated, 753 expanded
[t=0.0382296s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0382399s, 26528 KB] g=62, 755 evaluated, 754 expanded
[t=0.0382893s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0382992s, 26528 KB] g=64, 757 evaluated, 756 expanded
[t=0.0383214s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0383306s, 26528 KB] g=65, 758 evaluated, 757 expanded
[t=0.0383811s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0383902s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0383983s, 26528 KB] g=68, 761 evaluated, 760 expanded
[t=0.0384161s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0384249s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0384331s, 26528 KB] g=69, 762 evaluated, 761 expanded
[t=0.0384492s, 26528 KB] Solution found!
[t=0.038461s, 26528 KB] Actual search time: 0.0193184s
unstack b15 b3 (1)
put-down b15 (1)
pick-up b21 (1)
stack b21 b15 (1)
unstack b22 b1 (1)
put-down b22 (1)
unstack b3 b16 (1)
put-down b3 (1)
unstack b5 b7 (1)
put-down b5 (1)
unstack b7 b13 (1)
put-down b7 (1)
unstack b8 b14 (1)
put-down b8 (1)
unstack b14 b18 (1)
put-down b14 (1)
unstack b1 b12 (1)
put-down b1 (1)
unstack b12 b10 (1)
put-down b12 (1)
unstack b10 b2 (1)
put-down b10 (1)
unstack b2 b6 (1)
put-down b2 (1)
unstack b18 b17 (1)
put-down b18 (1)
unstack b6 b19 (1)
put-down b6 (1)
unstack b19 b4 (1)
put-down b19 (1)
unstack b4 b11 (1)
put-down b4 (1)
unstack b11 b20 (1)
put-down b11 (1)
pick-up b20 (1)
stack b20 b21 (1)
pick-up b22 (1)
stack b22 b6 (1)
pick-up b5 (1)
stack b5 b19 (1)
pick-up b7 (1)
stack b7 b5 (1)
pick-up b10 (1)
stack b10 b7 (1)
pick-up b16 (1)
stack b16 b10 (1)
pick-up b13 (1)
stack b13 b16 (1)
pick-up b12 (1)
stack b12 b13 (1)
pick-up b14 (1)
stack b14 b12 (1)
pick-up b8 (1)
stack b8 b22 (1)
pick-up b1 (1)
stack b1 b8 (1)
pick-up b17 (1)
stack b17 b1 (1)
pick-up b9 (1)
stack b9 b11 (1)
pick-up b4 (1)
stack b4 b18 (1)
pick-up b3 (1)
stack b3 b9 (1)
unstack b4 b18 (1)
put-down b4 (1)
pick-up b18 (1)
stack b18 b3 (1)
pick-up b4 (1)
stack b4 b18 (1)
[t=0.0384709s, 26528 KB] Plan length: 70 step(s).
[t=0.0384709s, 26528 KB] Plan cost: 70
[t=0.0384709s, 26528 KB] Expanded 762 state(s).
[t=0.0384709s, 26528 KB] Reopened 0 state(s).
[t=0.0384709s, 26528 KB] Evaluated 763 state(s).
[t=0.0384709s, 26528 KB] Evaluations: 1526
[t=0.0384709s, 26528 KB] Generated 9879 state(s).
[t=0.0384709s, 26528 KB] Dead ends: 0 state(s).
[t=0.0384709s, 26528 KB] Number of registered states: 763
[t=0.0384709s, 26528 KB] Int hash set load factor: 763/1024 = 0.745117
[t=0.0384709s, 26528 KB] Int hash set resizes: 10
[t=0.0384709s, 26528 KB] Search time: 0.0193697s
[t=0.0384709s, 26528 KB] Total time: 0.0384709s
Solution found.
Peak memory: 26528 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.18s
