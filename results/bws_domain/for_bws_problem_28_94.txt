INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_28/bws_problem_28_94.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.015s wall-clock]
2550 relevant atoms
1708 auxiliary atoms
4258 final queue length
7454 total queue pushes
Completing instantiation... [0.040s CPU, 0.037s wall-clock]
Instantiating: [0.060s CPU, 0.055s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.003s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
29 uncovered facts
Choosing groups: [0.010s CPU, 0.003s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.010s CPU, 0.015s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.001s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.001s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.002s wall-clock]
Translating task: [0.060s CPU, 0.058s wall-clock]
2324 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
56 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.020s wall-clock]
Reordering and filtering variables...
57 of 57 variables necessary.
29 of 57 mutex groups necessary.
1568 of 1568 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.010s wall-clock]
Translator variables: 57
Translator derived variables: 0
Translator facts: 870
Translator goal facts: 24
Translator mutex groups: 29
Translator total mutex groups size: 841
Translator operators: 1568
Translator axioms: 0
Translator task size: 13468
Translator peak memory: 40312 KB
Writing output... [0.010s CPU, 0.008s wall-clock]
Done! [0.170s CPU, 0.179s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.2518e-05s, 24488 KB] reading input...
[t=0.00587626s, 26076 KB] done reading input!
[t=0.00678695s, 26472 KB] Initializing landmark count heuristic...
[t=0.00682641s, 26472 KB] Generating landmark graph...
[t=0.0069074s, 26604 KB] Building a landmark graph with reasonable orders.
[t=0.00699301s, 26604 KB] Initializing Exploration...
[t=0.0074649s, 27016 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0305129s, 28072 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0306116s, 28072 KB] Landmarks generation time: 0.023706s
[t=0.0306344s, 28072 KB] Discovered 127 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0306501s, 28072 KB] 1237 edges
[t=0.0306596s, 28072 KB] approx. reasonable orders
[t=0.0354813s, 28072 KB] approx. obedient reasonable orders
[t=0.03563s, 28072 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0356467s, 28072 KB] Landmarks generation time: 0.0288179s
[t=0.0356576s, 28072 KB] Discovered 127 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0356674s, 28072 KB] 1288 edges
[t=0.0356772s, 28072 KB] Landmark graph generation time: 0.028858s
[t=0.0356861s, 28072 KB] Landmark graph contains 127 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0356947s, 28072 KB] Landmark graph contains 1288 orderings.
[t=0.0366937s, 28096 KB] Simplifying 6216 unary operators... done! [4704 unary operators]
[t=0.0383967s, 28096 KB] time to simplify: 0.00174667s
[t=0.0385376s, 28096 KB] Initializing additive heuristic...
[t=0.0385613s, 28096 KB] Initializing FF heuristic...
[t=0.038633s, 28096 KB] Building successor generator...done!
[t=0.0389488s, 28096 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0389583s, 28096 KB] time for successor generation creation: 0.000272375s
[t=0.038979s, 28096 KB] Variables: 57
[t=0.038989s, 28096 KB] FactPairs: 870
[t=0.0389972s, 28096 KB] Bytes per state: 24
[t=0.0391444s, 28096 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.039188s, 28096 KB] 57 initial landmarks, 24 goal landmarks
[t=0.0392752s, 28096 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 70
[t=0.0392865s, 28096 KB] New best heuristic value for ff(transform = adapt_costs(one)): 51
[t=0.0392953s, 28096 KB] g=0, 1 evaluated, 0 expanded
[t=0.0393125s, 28096 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 70
[t=0.0393213s, 28096 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 51
[t=0.0395278s, 28096 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 69
[t=0.0395382s, 28096 KB] New best heuristic value for ff(transform = adapt_costs(one)): 50
[t=0.0395465s, 28096 KB] g=2, 6 evaluated, 5 expanded
[t=0.0397402s, 28096 KB] New best heuristic value for ff(transform = adapt_costs(one)): 49
[t=0.0397502s, 28096 KB] g=4, 11 evaluated, 10 expanded
[t=0.0398076s, 28096 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 68
[t=0.0398236s, 28096 KB] g=4, 12 evaluated, 11 expanded
[t=0.0400536s, 28096 KB] New best heuristic value for ff(transform = adapt_costs(one)): 47
[t=0.0400643s, 28096 KB] g=6, 18 evaluated, 17 expanded
[t=0.0402159s, 28096 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 67
[t=0.0402257s, 28096 KB] g=8, 22 evaluated, 21 expanded
[t=0.0403397s, 28096 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 66
[t=0.040349s, 28096 KB] g=10, 25 evaluated, 24 expanded
[t=0.0405155s, 28096 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 65
[t=0.040526s, 28096 KB] g=12, 29 evaluated, 28 expanded
[t=0.04061s, 28096 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 64
[t=0.0406191s, 28096 KB] g=13, 31 evaluated, 30 expanded
[t=0.0408207s, 28096 KB] New best heuristic value for ff(transform = adapt_costs(one)): 46
[t=0.0408307s, 28096 KB] g=14, 36 evaluated, 35 expanded
[t=0.0410611s, 28096 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 63
[t=0.0410707s, 28096 KB] g=16, 42 evaluated, 41 expanded
[t=0.0414438s, 28096 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 62
[t=0.0414639s, 28096 KB] g=18, 52 evaluated, 51 expanded
[t=0.0417772s, 28096 KB] New best heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0417888s, 28096 KB] g=20, 60 evaluated, 59 expanded
[t=0.042279s, 28096 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 60
[t=0.0422954s, 28096 KB] New best heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.0423038s, 28096 KB] g=20, 73 evaluated, 72 expanded
[t=0.0425275s, 28096 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0425365s, 28096 KB] g=22, 79 evaluated, 78 expanded
[t=0.0425834s, 28096 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.0425925s, 28096 KB] g=22, 80 evaluated, 79 expanded
[t=0.042785s, 28096 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 58
[t=0.042794s, 28096 KB] g=23, 85 evaluated, 84 expanded
[t=0.0433055s, 28096 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 57
[t=0.0433155s, 28096 KB] g=26, 99 evaluated, 98 expanded
[t=0.0439897s, 28096 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0439994s, 28096 KB] g=28, 118 evaluated, 117 expanded
[t=0.0442947s, 28096 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0443037s, 28096 KB] g=30, 126 evaluated, 125 expanded
[t=0.0443503s, 28096 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.044359s, 28096 KB] g=30, 127 evaluated, 126 expanded
[t=0.0449346s, 28096 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0449503s, 28096 KB] g=32, 142 evaluated, 141 expanded
[t=0.0450733s, 28096 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0450829s, 28096 KB] g=33, 145 evaluated, 144 expanded
[t=0.0459135s, 28096 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0459256s, 28096 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0459348s, 28096 KB] g=36, 167 evaluated, 166 expanded
[t=0.0463486s, 28096 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0463594s, 28096 KB] g=38, 178 evaluated, 177 expanded
[t=0.0464835s, 28096 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0464931s, 28096 KB] g=38, 181 evaluated, 180 expanded
[t=0.0465794s, 28096 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0465885s, 28096 KB] g=39, 183 evaluated, 182 expanded
[t=0.0476173s, 28096 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0476351s, 28096 KB] g=42, 210 evaluated, 209 expanded
[t=0.0478291s, 28096 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0478385s, 28096 KB] g=40, 215 evaluated, 214 expanded
[t=0.0484983s, 28096 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0485086s, 28096 KB] g=42, 233 evaluated, 232 expanded
[t=0.0485577s, 28096 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0485673s, 28096 KB] g=44, 234 evaluated, 233 expanded
[t=0.0495746s, 28096 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0496022s, 28096 KB] g=46, 260 evaluated, 259 expanded
[t=0.0505408s, 28096 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0505557s, 28096 KB] g=46, 286 evaluated, 285 expanded
[t=0.0507486s, 28096 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.050758s, 28096 KB] g=48, 291 evaluated, 290 expanded
[t=0.0514559s, 28096 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0514688s, 28096 KB] g=48, 310 evaluated, 309 expanded
[t=0.0523679s, 28096 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0523929s, 28096 KB] g=50, 333 evaluated, 332 expanded
[t=0.0524861s, 28096 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0524968s, 28096 KB] g=50, 335 evaluated, 334 expanded
[t=0.0532302s, 28096 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.053242s, 28096 KB] g=52, 354 evaluated, 353 expanded
[t=0.0536552s, 28096 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0536651s, 28096 KB] g=52, 365 evaluated, 364 expanded
[t=0.0545271s, 28096 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0545448s, 28096 KB] g=54, 388 evaluated, 387 expanded
[t=0.0553524s, 28096 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.055367s, 28096 KB] g=56, 409 evaluated, 408 expanded
[t=0.0555214s, 28096 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0555315s, 28096 KB] g=56, 413 evaluated, 412 expanded
[t=0.0560474s, 28096 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0560597s, 28096 KB] g=58, 427 evaluated, 426 expanded
[t=0.0576875s, 28096 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0577086s, 28096 KB] g=64, 469 evaluated, 468 expanded
[t=0.0605075s, 28096 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0605253s, 28096 KB] g=72, 544 evaluated, 543 expanded
[t=0.061085s, 28096 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0610969s, 28096 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.061106s, 28096 KB] g=74, 558 evaluated, 557 expanded
[t=0.0615272s, 28096 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0615373s, 28096 KB] g=76, 569 evaluated, 568 expanded
[t=0.0616268s, 28096 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0616425s, 28096 KB] g=76, 571 evaluated, 570 expanded
[t=0.0622994s, 28096 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0623102s, 28096 KB] g=78, 589 evaluated, 588 expanded
[t=0.0624318s, 28096 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0624412s, 28096 KB] g=78, 592 evaluated, 591 expanded
[t=0.0630787s, 28096 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0630889s, 28096 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0630972s, 28096 KB] g=80, 610 evaluated, 609 expanded
[t=0.0634709s, 28096 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0634805s, 28096 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0634999s, 28096 KB] g=82, 621 evaluated, 620 expanded
[t=0.0638438s, 28096 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0638535s, 28096 KB] g=84, 631 evaluated, 630 expanded
[t=0.0639313s, 28096 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0639403s, 28096 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0639481s, 28096 KB] g=84, 633 evaluated, 632 expanded
[t=0.0642898s, 28096 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0643059s, 28096 KB] g=86, 643 evaluated, 642 expanded
[t=0.0644863s, 28096 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0644954s, 28096 KB] g=86, 648 evaluated, 647 expanded
[t=0.065046s, 28096 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0650577s, 28096 KB] g=88, 664 evaluated, 663 expanded
[t=0.0651383s, 28096 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0651472s, 28096 KB] g=88, 666 evaluated, 665 expanded
[t=0.0654571s, 28096 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0654673s, 28096 KB] g=90, 675 evaluated, 674 expanded
[t=0.0656481s, 28096 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0656661s, 28096 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0656737s, 28096 KB] g=90, 680 evaluated, 679 expanded
[t=0.0659169s, 28096 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0659257s, 28096 KB] g=92, 687 evaluated, 686 expanded
[t=0.0660022s, 28096 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0660111s, 28096 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0660188s, 28096 KB] g=92, 689 evaluated, 688 expanded
[t=0.0662213s, 28096 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0662297s, 28096 KB] g=94, 695 evaluated, 694 expanded
[t=0.0663038s, 28096 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0663124s, 28096 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0663199s, 28096 KB] g=94, 697 evaluated, 696 expanded
[t=0.066504s, 28096 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0665218s, 28096 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0665306s, 28096 KB] g=96, 702 evaluated, 701 expanded
[t=0.0672109s, 28096 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0672256s, 28096 KB] g=102, 723 evaluated, 722 expanded
[t=0.0672685s, 28096 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0672772s, 28096 KB] g=103, 724 evaluated, 723 expanded
[t=0.0673409s, 28096 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0673496s, 28096 KB] g=104, 725 evaluated, 724 expanded
[t=0.0674668s, 28096 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.067482s, 28096 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0674897s, 28096 KB] g=106, 728 evaluated, 727 expanded
[t=0.0680303s, 28096 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0680429s, 28096 KB] g=114, 743 evaluated, 742 expanded
[t=0.0681983s, 28096 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0682074s, 28096 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0682153s, 28096 KB] g=116, 747 evaluated, 746 expanded
[t=0.0776883s, 28096 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.077857s, 28096 KB] g=146, 1034 evaluated, 1033 expanded
[t=0.0789081s, 28096 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0789281s, 28096 KB] g=154, 1066 evaluated, 1065 expanded
[t=0.0790276s, 28096 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0790376s, 28096 KB] g=156, 1069 evaluated, 1068 expanded
[t=0.0800955s, 28096 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0801123s, 28096 KB] g=172, 1110 evaluated, 1109 expanded
[t=0.080336s, 28096 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0803483s, 28096 KB] g=180, 1121 evaluated, 1120 expanded
[t=0.080376s, 28096 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0803848s, 28096 KB] g=180, 1122 evaluated, 1121 expanded
[t=0.0804061s, 28096 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0804154s, 28096 KB] g=181, 1123 evaluated, 1122 expanded
[t=0.0804318s, 28096 KB] Solution found!
[t=0.0804473s, 28096 KB] Actual search time: 0.0412554s
unstack b14 b13 (1)
put-down b14 (1)
pick-up b11 (1)
stack b11 b6 (1)
pick-up b13 (1)
stack b13 b14 (1)
unstack b11 b6 (1)
put-down b11 (1)
unstack b6 b17 (1)
put-down b6 (1)
unstack b17 b16 (1)
put-down b17 (1)
unstack b16 b2 (1)
put-down b16 (1)
unstack b2 b28 (1)
put-down b2 (1)
unstack b28 b8 (1)
put-down b28 (1)
pick-up b16 (1)
stack b16 b28 (1)
unstack b8 b4 (1)
put-down b8 (1)
unstack b4 b27 (1)
put-down b4 (1)
unstack b27 b24 (1)
stack b27 b2 (1)
unstack b24 b12 (1)
put-down b24 (1)
unstack b12 b22 (1)
put-down b12 (1)
unstack b22 b19 (1)
put-down b22 (1)
unstack b19 b15 (1)
put-down b19 (1)
unstack b15 b20 (1)
stack b15 b13 (1)
unstack b20 b10 (1)
put-down b20 (1)
unstack b10 b21 (1)
put-down b10 (1)
unstack b21 b7 (1)
put-down b21 (1)
unstack b27 b2 (1)
put-down b27 (1)
unstack b7 b3 (1)
stack b7 b11 (1)
pick-up b4 (1)
stack b4 b7 (1)
pick-up b2 (1)
stack b2 b24 (1)
pick-up b27 (1)
stack b27 b2 (1)
pick-up b6 (1)
stack b6 b20 (1)
pick-up b8 (1)
stack b8 b3 (1)
pick-up b22 (1)
stack b22 b12 (1)
unstack b6 b20 (1)
put-down b6 (1)
pick-up b20 (1)
stack b20 b5 (1)
pick-up b6 (1)
stack b6 b20 (1)
unstack b8 b3 (1)
put-down b8 (1)
unstack b22 b12 (1)
put-down b22 (1)
unstack b3 b23 (1)
put-down b3 (1)
unstack b23 b26 (1)
stack b23 b27 (1)
unstack b26 b18 (1)
stack b26 b15 (1)
unstack b18 b25 (1)
put-down b18 (1)
pick-up b19 (1)
stack b19 b26 (1)
unstack b25 b1 (1)
stack b25 b17 (1)
unstack b1 b9 (1)
stack b1 b8 (1)
pick-up b12 (1)
stack b12 b25 (1)
pick-up b21 (1)
stack b21 b1 (1)
pick-up b18 (1)
stack b18 b21 (1)
pick-up b22 (1)
stack b22 b12 (1)
pick-up b3 (1)
stack b3 b23 (1)
pick-up b9 (1)
stack b9 b22 (1)
pick-up b10 (1)
stack b10 b9 (1)
unstack b6 b20 (1)
put-down b6 (1)
unstack b20 b5 (1)
put-down b20 (1)
pick-up b5 (1)
stack b5 b18 (1)
pick-up b20 (1)
stack b20 b5 (1)
pick-up b6 (1)
stack b6 b20 (1)
unstack b4 b7 (1)
put-down b4 (1)
unstack b7 b11 (1)
put-down b7 (1)
pick-up b11 (1)
stack b11 b6 (1)
pick-up b4 (1)
stack b4 b7 (1)
unstack b11 b6 (1)
put-down b11 (1)
unstack b6 b20 (1)
put-down b6 (1)
unstack b20 b5 (1)
put-down b20 (1)
pick-up b6 (1)
stack b6 b20 (1)
pick-up b11 (1)
stack b11 b6 (1)
unstack b4 b7 (1)
put-down b4 (1)
pick-up b7 (1)
stack b7 b11 (1)
pick-up b4 (1)
stack b4 b7 (1)
unstack b5 b18 (1)
put-down b5 (1)
unstack b18 b21 (1)
put-down b18 (1)
unstack b21 b1 (1)
put-down b21 (1)
pick-up b18 (1)
stack b18 b21 (1)
pick-up b5 (1)
stack b5 b18 (1)
unstack b1 b8 (1)
put-down b1 (1)
pick-up b8 (1)
stack b8 b3 (1)
pick-up b1 (1)
stack b1 b8 (1)
unstack b5 b18 (1)
put-down b5 (1)
unstack b18 b21 (1)
put-down b18 (1)
pick-up b21 (1)
stack b21 b1 (1)
pick-up b18 (1)
stack b18 b21 (1)
pick-up b5 (1)
stack b5 b18 (1)
unstack b4 b7 (1)
put-down b4 (1)
unstack b7 b11 (1)
put-down b7 (1)
unstack b11 b6 (1)
put-down b11 (1)
pick-up b7 (1)
stack b7 b11 (1)
pick-up b4 (1)
stack b4 b7 (1)
unstack b6 b20 (1)
put-down b6 (1)
pick-up b20 (1)
stack b20 b5 (1)
pick-up b6 (1)
stack b6 b20 (1)
unstack b4 b7 (1)
put-down b4 (1)
unstack b7 b11 (1)
put-down b7 (1)
pick-up b11 (1)
stack b11 b6 (1)
pick-up b7 (1)
stack b7 b11 (1)
pick-up b4 (1)
stack b4 b7 (1)
[t=0.0804582s, 28096 KB] Plan length: 182 step(s).
[t=0.0804582s, 28096 KB] Plan cost: 182
[t=0.0804582s, 28096 KB] Expanded 1123 state(s).
[t=0.0804582s, 28096 KB] Reopened 0 state(s).
[t=0.0804582s, 28096 KB] Evaluated 1124 state(s).
[t=0.0804582s, 28096 KB] Evaluations: 2248
[t=0.0804582s, 28096 KB] Generated 12541 state(s).
[t=0.0804582s, 28096 KB] Dead ends: 0 state(s).
[t=0.0804582s, 28096 KB] Number of registered states: 1124
[t=0.0804582s, 28096 KB] Int hash set load factor: 1124/2048 = 0.548828
[t=0.0804582s, 28096 KB] Int hash set resizes: 11
[t=0.0804582s, 28096 KB] Search time: 0.0413144s
[t=0.0804582s, 28096 KB] Total time: 0.0804582s
Solution found.
Peak memory: 28096 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.30s
