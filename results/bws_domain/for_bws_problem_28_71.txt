INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_28/bws_problem_28_71.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.015s wall-clock]
2550 relevant atoms
1708 auxiliary atoms
4258 final queue length
7453 total queue pushes
Completing instantiation... [0.020s CPU, 0.027s wall-clock]
Instantiating: [0.040s CPU, 0.044s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.010s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
29 uncovered facts
Choosing groups: [0.000s CPU, 0.002s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.010s CPU, 0.009s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.050s CPU, 0.048s wall-clock]
2324 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
56 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.020s wall-clock]
Reordering and filtering variables...
57 of 57 variables necessary.
29 of 57 mutex groups necessary.
1568 of 1568 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.010s wall-clock]
Translator variables: 57
Translator derived variables: 0
Translator facts: 870
Translator goal facts: 25
Translator mutex groups: 29
Translator total mutex groups size: 841
Translator operators: 1568
Translator axioms: 0
Translator task size: 13469
Translator peak memory: 40316 KB
Writing output... [0.010s CPU, 0.008s wall-clock]
Done! [0.150s CPU, 0.144s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=4.6595e-05s, 24488 KB] reading input...
[t=0.00487032s, 26076 KB] done reading input!
[t=0.00594503s, 26472 KB] Initializing landmark count heuristic...
[t=0.00598418s, 26472 KB] Generating landmark graph...
[t=0.00607048s, 26604 KB] Building a landmark graph with reasonable orders.
[t=0.00615966s, 26604 KB] Initializing Exploration...
[t=0.00659918s, 27016 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0303266s, 27944 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0304815s, 27944 KB] Landmarks generation time: 0.0244168s
[t=0.0305093s, 27944 KB] Discovered 130 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0305315s, 27944 KB] 1041 edges
[t=0.0305424s, 27944 KB] approx. reasonable orders
[t=0.0334857s, 27944 KB] approx. obedient reasonable orders
[t=0.0338542s, 27944 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.033935s, 27944 KB] Landmarks generation time: 0.0279531s
[t=0.0339537s, 27944 KB] Discovered 130 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0339699s, 27944 KB] 1073 edges
[t=0.0339847s, 27944 KB] Landmark graph generation time: 0.0280176s
[t=0.034006s, 27944 KB] Landmark graph contains 130 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0340253s, 27944 KB] Landmark graph contains 1073 orderings.
[t=0.0366884s, 27968 KB] Simplifying 6216 unary operators... done! [4704 unary operators]
[t=0.0420598s, 27968 KB] time to simplify: 0.00583446s
[t=0.0426727s, 27968 KB] Initializing additive heuristic...
[t=0.0427579s, 27968 KB] Initializing FF heuristic...
[t=0.0430419s, 27968 KB] Building successor generator...done!
[t=0.043813s, 27968 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0438301s, 27968 KB] time for successor generation creation: 0.000690341s
[t=0.0438708s, 27968 KB] Variables: 57
[t=0.0438838s, 27968 KB] FactPairs: 870
[t=0.0438967s, 27968 KB] Bytes per state: 24
[t=0.0440616s, 27968 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0441278s, 27968 KB] 57 initial landmarks, 25 goal landmarks
[t=0.0442759s, 27968 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 73
[t=0.0442927s, 27968 KB] New best heuristic value for ff(transform = adapt_costs(one)): 52
[t=0.0443068s, 27968 KB] g=0, 1 evaluated, 0 expanded
[t=0.0443344s, 27968 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 73
[t=0.0443482s, 27968 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 52
[t=0.0446425s, 27968 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 72
[t=0.0446675s, 27968 KB] g=2, 5 evaluated, 4 expanded
[t=0.0450474s, 27968 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 71
[t=0.0450718s, 27968 KB] g=4, 11 evaluated, 10 expanded
[t=0.0454967s, 27968 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 70
[t=0.0455208s, 27968 KB] g=6, 18 evaluated, 17 expanded
[t=0.0456596s, 27968 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 69
[t=0.0456767s, 27968 KB] g=7, 20 evaluated, 19 expanded
[t=0.0463942s, 27968 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 68
[t=0.0464138s, 27968 KB] g=10, 33 evaluated, 32 expanded
[t=0.0468387s, 27968 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 65
[t=0.046851s, 27968 KB] New best heuristic value for ff(transform = adapt_costs(one)): 51
[t=0.0468626s, 27968 KB] g=12, 44 evaluated, 43 expanded
[t=0.0471756s, 27968 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 64
[t=0.0471894s, 27968 KB] g=14, 52 evaluated, 51 expanded
[t=0.0472554s, 27968 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 63
[t=0.0472699s, 27968 KB] New best heuristic value for ff(transform = adapt_costs(one)): 50
[t=0.047282s, 27968 KB] g=14, 53 evaluated, 52 expanded
[t=0.0475892s, 27968 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 62
[t=0.0476108s, 27968 KB] g=16, 60 evaluated, 59 expanded
[t=0.0478924s, 27968 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 61
[t=0.0479134s, 27968 KB] New best heuristic value for ff(transform = adapt_costs(one)): 49
[t=0.0479277s, 27968 KB] g=16, 66 evaluated, 65 expanded
[t=0.0482059s, 27968 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 60
[t=0.0482176s, 27968 KB] g=18, 73 evaluated, 72 expanded
[t=0.048663s, 27968 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.0486767s, 27968 KB] New best heuristic value for ff(transform = adapt_costs(one)): 48
[t=0.0486857s, 27968 KB] g=20, 85 evaluated, 84 expanded
[t=0.0491301s, 27968 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 58
[t=0.0491551s, 27968 KB] g=22, 94 evaluated, 93 expanded
[t=0.0500659s, 27968 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 57
[t=0.0500996s, 27968 KB] g=24, 112 evaluated, 111 expanded
[t=0.0506831s, 27968 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0507062s, 27968 KB] New best heuristic value for ff(transform = adapt_costs(one)): 47
[t=0.0507186s, 27968 KB] g=26, 123 evaluated, 122 expanded
[t=0.0511797s, 27968 KB] New best heuristic value for ff(transform = adapt_costs(one)): 46
[t=0.051197s, 27968 KB] g=28, 133 evaluated, 132 expanded
[t=0.0513008s, 27968 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0513126s, 27968 KB] g=28, 135 evaluated, 134 expanded
[t=0.0522555s, 27968 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0522715s, 27968 KB] g=30, 160 evaluated, 159 expanded
[t=0.0528748s, 27968 KB] New best heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0529052s, 27968 KB] g=32, 172 evaluated, 171 expanded
[t=0.0536516s, 27968 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0536753s, 27968 KB] g=33, 188 evaluated, 187 expanded
[t=0.0547547s, 27968 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0547692s, 27968 KB] g=36, 217 evaluated, 216 expanded
[t=0.0556486s, 27968 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0556598s, 27968 KB] g=38, 241 evaluated, 240 expanded
[t=0.0562645s, 27968 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0562775s, 27968 KB] g=39, 257 evaluated, 256 expanded
[t=0.0563717s, 27968 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0563829s, 27968 KB] g=40, 259 evaluated, 258 expanded
[t=0.0573693s, 27968 KB] New best heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.0574032s, 27968 KB] g=40, 281 evaluated, 280 expanded
[t=0.0575857s, 27968 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0575973s, 27968 KB] g=42, 285 evaluated, 284 expanded
[t=0.0585195s, 27968 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0585338s, 27968 KB] g=44, 309 evaluated, 308 expanded
[t=0.0586605s, 27968 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0586785s, 27968 KB] g=42, 312 evaluated, 311 expanded
[t=0.0591352s, 27968 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0591469s, 27968 KB] g=43, 324 evaluated, 323 expanded
[t=0.0592547s, 27968 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0592654s, 27968 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0592757s, 27968 KB] g=44, 326 evaluated, 325 expanded
[t=0.0598143s, 27968 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0598252s, 27968 KB] g=46, 340 evaluated, 339 expanded
[t=0.0599228s, 27968 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0599333s, 27968 KB] g=46, 342 evaluated, 341 expanded
[t=0.0608255s, 27968 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0608409s, 27968 KB] g=48, 365 evaluated, 364 expanded
[t=0.0610115s, 27968 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0610219s, 27968 KB] g=48, 369 evaluated, 368 expanded
[t=0.0622656s, 27968 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0622846s, 27968 KB] g=50, 400 evaluated, 399 expanded
[t=0.0628495s, 27968 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.062877s, 27968 KB] g=50, 411 evaluated, 410 expanded
[t=0.0636753s, 27968 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0636899s, 27968 KB] g=52, 432 evaluated, 431 expanded
[t=0.0637393s, 27968 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0637486s, 27968 KB] g=52, 433 evaluated, 432 expanded
[t=0.0645135s, 27968 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0645236s, 27968 KB] g=54, 454 evaluated, 453 expanded
[t=0.0649335s, 27968 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0649441s, 27968 KB] g=54, 465 evaluated, 464 expanded
[t=0.0653673s, 27968 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0653779s, 27968 KB] g=56, 476 evaluated, 475 expanded
[t=0.0661988s, 27968 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0662146s, 27968 KB] g=56, 496 evaluated, 495 expanded
[t=0.0662652s, 27968 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0662747s, 27968 KB] g=58, 497 evaluated, 496 expanded
[t=0.0671979s, 27968 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0672162s, 27968 KB] g=60, 521 evaluated, 520 expanded
[t=0.0679972s, 27968 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0680414s, 27968 KB] g=58, 540 evaluated, 539 expanded
[t=0.0694243s, 27968 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0694469s, 27968 KB] g=60, 575 evaluated, 574 expanded
[t=0.0699633s, 27968 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0699831s, 27968 KB] g=62, 588 evaluated, 587 expanded
[t=0.0700705s, 27968 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.070084s, 27968 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0700925s, 27968 KB] g=62, 590 evaluated, 589 expanded
[t=0.0705459s, 27968 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.070558s, 27968 KB] g=64, 602 evaluated, 601 expanded
[t=0.0706583s, 27968 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0706683s, 27968 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0706764s, 27968 KB] g=64, 604 evaluated, 603 expanded
[t=0.071075s, 27968 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0710861s, 27968 KB] g=66, 615 evaluated, 614 expanded
[t=0.0712753s, 27968 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0712854s, 27968 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0712936s, 27968 KB] g=66, 620 evaluated, 619 expanded
[t=0.0716701s, 27968 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0716833s, 27968 KB] g=68, 630 evaluated, 629 expanded
[t=0.0717641s, 27968 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0717739s, 27968 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0717819s, 27968 KB] g=68, 632 evaluated, 631 expanded
[t=0.072095s, 27968 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0721068s, 27968 KB] g=70, 641 evaluated, 640 expanded
[t=0.0721876s, 27968 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0721979s, 27968 KB] g=70, 643 evaluated, 642 expanded
[t=0.0728155s, 27968 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0728687s, 27968 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.072883s, 27968 KB] g=72, 655 evaluated, 654 expanded
[t=0.0732614s, 27968 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0732798s, 27968 KB] g=75, 664 evaluated, 663 expanded
[t=0.073397s, 27968 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0734123s, 27968 KB] g=76, 666 evaluated, 665 expanded
[t=0.0737727s, 27968 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0737973s, 27968 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0738067s, 27968 KB] g=78, 672 evaluated, 671 expanded
[t=0.0744805s, 27968 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0744907s, 27968 KB] g=82, 691 evaluated, 690 expanded
[t=0.074678s, 27968 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0746912s, 27968 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0746993s, 27968 KB] g=84, 696 evaluated, 695 expanded
[t=0.0755761s, 27968 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0755855s, 27968 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0755934s, 27968 KB] g=90, 719 evaluated, 718 expanded
[t=0.0775235s, 27968 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0775553s, 27968 KB] g=102, 772 evaluated, 771 expanded
[t=0.0780726s, 27968 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0780826s, 27968 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0780909s, 27968 KB] g=108, 786 evaluated, 785 expanded
[t=0.0890968s, 27968 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0891975s, 27968 KB] g=130, 1073 evaluated, 1072 expanded
[t=0.0900173s, 27968 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0900889s, 27968 KB] g=134, 1089 evaluated, 1088 expanded
[t=0.0903452s, 27968 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0903628s, 27968 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0903715s, 27968 KB] g=136, 1093 evaluated, 1092 expanded
[t=0.0913819s, 27968 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0913921s, 27968 KB] g=144, 1122 evaluated, 1121 expanded
[t=0.0914706s, 27968 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0914797s, 27968 KB] g=144, 1124 evaluated, 1123 expanded
[t=0.0916007s, 27968 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0916097s, 27968 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0916177s, 27968 KB] g=146, 1127 evaluated, 1126 expanded
[t=0.115691s, 27968 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.115757s, 27968 KB] g=188, 1772 evaluated, 1771 expanded
[t=0.116579s, 27968 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.116596s, 27968 KB] g=196, 1803 evaluated, 1802 expanded
[t=0.116713s, 27968 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.116727s, 27968 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.116738s, 27968 KB] g=198, 1806 evaluated, 1805 expanded
[t=0.118366s, 27968 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.118414s, 27968 KB] g=214, 1847 evaluated, 1846 expanded
[t=0.118849s, 27968 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.118881s, 27968 KB] g=222, 1857 evaluated, 1856 expanded
[t=0.118972s, 27968 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.118984s, 27968 KB] g=226, 1861 evaluated, 1860 expanded
[t=0.119012s, 27968 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.119028s, 27968 KB] g=227, 1862 evaluated, 1861 expanded
[t=0.119045s, 27968 KB] Solution found!
[t=0.119077s, 27968 KB] Actual search time: 0.0749379s
unstack b27 b20 (1)
put-down b27 (1)
unstack b20 b25 (1)
put-down b20 (1)
unstack b25 b1 (1)
put-down b25 (1)
unstack b1 b15 (1)
put-down b1 (1)
unstack b15 b5 (1)
put-down b15 (1)
unstack b5 b3 (1)
stack b5 b27 (1)
pick-up b20 (1)
stack b20 b5 (1)
unstack b9 b11 (1)
stack b9 b3 (1)
unstack b11 b16 (1)
put-down b11 (1)
unstack b16 b12 (1)
put-down b16 (1)
unstack b12 b17 (1)
put-down b12 (1)
unstack b17 b4 (1)
put-down b17 (1)
unstack b4 b26 (1)
stack b4 b15 (1)
unstack b7 b8 (1)
put-down b7 (1)
pick-up b8 (1)
stack b8 b4 (1)
unstack b9 b3 (1)
put-down b9 (1)
unstack b3 b18 (1)
put-down b3 (1)
unstack b18 b13 (1)
put-down b18 (1)
unstack b13 b28 (1)
put-down b13 (1)
unstack b28 b6 (1)
stack b28 b7 (1)
unstack b6 b21 (1)
stack b6 b20 (1)
unstack b21 b22 (1)
stack b21 b16 (1)
unstack b22 b14 (1)
stack b22 b12 (1)
unstack b14 b19 (1)
put-down b14 (1)
unstack b19 b10 (1)
put-down b19 (1)
unstack b10 b23 (1)
stack b10 b9 (1)
pick-up b3 (1)
stack b3 b6 (1)
unstack b23 b2 (1)
put-down b23 (1)
pick-up b25 (1)
stack b25 b18 (1)
pick-up b19 (1)
stack b19 b25 (1)
pick-up b11 (1)
stack b11 b19 (1)
pick-up b13 (1)
stack b13 b11 (1)
pick-up b17 (1)
stack b17 b13 (1)
pick-up b14 (1)
stack b14 b17 (1)
pick-up b26 (1)
stack b26 b22 (1)
pick-up b1 (1)
stack b1 b26 (1)
unstack b2 b24 (1)
put-down b2 (1)
pick-up b24 (1)
stack b24 b8 (1)
pick-up b2 (1)
stack b2 b24 (1)
unstack b28 b7 (1)
put-down b28 (1)
pick-up b7 (1)
stack b7 b2 (1)
pick-up b28 (1)
stack b28 b7 (1)
unstack b10 b9 (1)
put-down b10 (1)
pick-up b9 (1)
stack b9 b3 (1)
pick-up b10 (1)
stack b10 b9 (1)
unstack b1 b26 (1)
put-down b1 (1)
unstack b26 b22 (1)
put-down b26 (1)
pick-up b1 (1)
stack b1 b26 (1)
unstack b22 b12 (1)
put-down b22 (1)
pick-up b12 (1)
stack b12 b10 (1)
pick-up b22 (1)
stack b22 b12 (1)
unstack b1 b26 (1)
put-down b1 (1)
pick-up b26 (1)
stack b26 b22 (1)
pick-up b1 (1)
stack b1 b26 (1)
unstack b28 b7 (1)
put-down b28 (1)
unstack b7 b2 (1)
put-down b7 (1)
unstack b2 b24 (1)
put-down b2 (1)
pick-up b7 (1)
stack b7 b2 (1)
pick-up b28 (1)
stack b28 b7 (1)
unstack b24 b8 (1)
put-down b24 (1)
unstack b8 b4 (1)
put-down b8 (1)
pick-up b24 (1)
stack b24 b8 (1)
unstack b4 b15 (1)
put-down b4 (1)
pick-up b15 (1)
stack b15 b23 (1)
pick-up b4 (1)
stack b4 b15 (1)
unstack b24 b8 (1)
put-down b24 (1)
pick-up b8 (1)
stack b8 b4 (1)
pick-up b24 (1)
stack b24 b8 (1)
unstack b28 b7 (1)
put-down b28 (1)
unstack b7 b2 (1)
put-down b7 (1)
pick-up b2 (1)
stack b2 b24 (1)
pick-up b7 (1)
stack b7 b2 (1)
pick-up b28 (1)
stack b28 b7 (1)
unstack b1 b26 (1)
put-down b1 (1)
unstack b26 b22 (1)
put-down b26 (1)
pick-up b1 (1)
stack b1 b26 (1)
unstack b22 b12 (1)
put-down b22 (1)
unstack b12 b10 (1)
put-down b12 (1)
unstack b10 b9 (1)
put-down b10 (1)
pick-up b12 (1)
stack b12 b10 (1)
pick-up b22 (1)
stack b22 b12 (1)
unstack b1 b26 (1)
put-down b1 (1)
pick-up b26 (1)
stack b26 b22 (1)
pick-up b1 (1)
stack b1 b26 (1)
unstack b9 b3 (1)
put-down b9 (1)
unstack b3 b6 (1)
put-down b3 (1)
unstack b6 b20 (1)
put-down b6 (1)
pick-up b3 (1)
stack b3 b6 (1)
pick-up b9 (1)
stack b9 b3 (1)
unstack b20 b5 (1)
put-down b20 (1)
unstack b5 b27 (1)
put-down b5 (1)
pick-up b27 (1)
stack b27 b14 (1)
pick-up b5 (1)
stack b5 b27 (1)
pick-up b20 (1)
stack b20 b5 (1)
unstack b9 b3 (1)
put-down b9 (1)
unstack b3 b6 (1)
put-down b3 (1)
pick-up b6 (1)
stack b6 b20 (1)
pick-up b3 (1)
stack b3 b6 (1)
pick-up b9 (1)
stack b9 b3 (1)
unstack b1 b26 (1)
put-down b1 (1)
unstack b26 b22 (1)
put-down b26 (1)
unstack b22 b12 (1)
put-down b22 (1)
pick-up b26 (1)
stack b26 b22 (1)
pick-up b1 (1)
stack b1 b26 (1)
unstack b12 b10 (1)
put-down b12 (1)
pick-up b10 (1)
stack b10 b9 (1)
pick-up b12 (1)
stack b12 b10 (1)
unstack b1 b26 (1)
put-down b1 (1)
unstack b26 b22 (1)
put-down b26 (1)
pick-up b1 (1)
stack b1 b26 (1)
pick-up b22 (1)
stack b22 b12 (1)
unstack b1 b26 (1)
put-down b1 (1)
pick-up b26 (1)
stack b26 b22 (1)
pick-up b1 (1)
stack b1 b26 (1)
[t=0.119088s, 27968 KB] Plan length: 228 step(s).
[t=0.119088s, 27968 KB] Plan cost: 228
[t=0.119088s, 27968 KB] Expanded 1862 state(s).
[t=0.119088s, 27968 KB] Reopened 0 state(s).
[t=0.119088s, 27968 KB] Evaluated 1863 state(s).
[t=0.119088s, 27968 KB] Evaluations: 3726
[t=0.119088s, 27968 KB] Generated 17999 state(s).
[t=0.119088s, 27968 KB] Dead ends: 0 state(s).
[t=0.119088s, 27968 KB] Number of registered states: 1863
[t=0.119088s, 27968 KB] Int hash set load factor: 1863/2048 = 0.909668
[t=0.119088s, 27968 KB] Int hash set resizes: 11
[t=0.119088s, 27968 KB] Search time: 0.0750285s
[t=0.119088s, 27968 KB] Total time: 0.119088s
Solution found.
Peak memory: 27968 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.31s
