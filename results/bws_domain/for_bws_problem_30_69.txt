INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_30/bws_problem_30_69.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.018s wall-clock]
2912 relevant atoms
1950 auxiliary atoms
4862 final queue length
8524 total queue pushes
Completing instantiation... [0.040s CPU, 0.034s wall-clock]
Instantiating: [0.060s CPU, 0.054s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.002s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
31 uncovered facts
Choosing groups: [0.000s CPU, 0.002s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.001s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.002s wall-clock]
Translating task: [0.050s CPU, 0.053s wall-clock]
2670 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
60 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.022s wall-clock]
Reordering and filtering variables...
61 of 61 variables necessary.
31 of 61 mutex groups necessary.
1800 of 1800 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.012s wall-clock]
Translator variables: 61
Translator derived variables: 0
Translator facts: 992
Translator goal facts: 24
Translator mutex groups: 31
Translator total mutex groups size: 961
Translator operators: 1800
Translator axioms: 0
Translator task size: 15448
Translator peak memory: 41336 KB
Writing output... [0.010s CPU, 0.010s wall-clock]
Done! [0.170s CPU, 0.170s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.4302e-05s, 24488 KB] reading input...
[t=0.00525128s, 26364 KB] done reading input!
[t=0.00612842s, 26760 KB] Initializing landmark count heuristic...
[t=0.00615798s, 26760 KB] Generating landmark graph...
[t=0.00626611s, 26892 KB] Building a landmark graph with reasonable orders.
[t=0.00636779s, 27024 KB] Initializing Exploration...
[t=0.00687149s, 27316 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0336742s, 28504 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0337693s, 28504 KB] Landmarks generation time: 0.0275233s
[t=0.0338049s, 28504 KB] Discovered 129 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0338192s, 28504 KB] 902 edges
[t=0.0338293s, 28504 KB] approx. reasonable orders
[t=0.0345001s, 28504 KB] approx. obedient reasonable orders
[t=0.034544s, 28504 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0345541s, 28504 KB] Landmarks generation time: 0.0283945s
[t=0.034564s, 28504 KB] Discovered 129 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0345724s, 28504 KB] 907 edges
[t=0.0345811s, 28504 KB] Landmark graph generation time: 0.0284301s
[t=0.0345897s, 28504 KB] Landmark graph contains 129 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0345977s, 28504 KB] Landmark graph contains 907 orderings.
[t=0.0352192s, 28532 KB] Simplifying 7140 unary operators... done! [5400 unary operators]
[t=0.0369177s, 28532 KB] time to simplify: 0.00183497s
[t=0.0371571s, 28532 KB] Initializing additive heuristic...
[t=0.0371853s, 28532 KB] Initializing FF heuristic...
[t=0.0372469s, 28532 KB] Building successor generator...done!
[t=0.0375994s, 28532 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0376104s, 28532 KB] time for successor generation creation: 0.000319256s
[t=0.0376294s, 28532 KB] Variables: 61
[t=0.037638s, 28532 KB] FactPairs: 992
[t=0.0376462s, 28532 KB] Bytes per state: 24
[t=0.0377844s, 28532 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0378228s, 28532 KB] 59 initial landmarks, 24 goal landmarks
[t=0.037906s, 28532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 70
[t=0.0379157s, 28532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 49
[t=0.0379244s, 28532 KB] g=0, 1 evaluated, 0 expanded
[t=0.0379375s, 28532 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 70
[t=0.0379462s, 28532 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 49
[t=0.038089s, 28532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 69
[t=0.0380984s, 28532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 48
[t=0.0381066s, 28532 KB] g=2, 4 evaluated, 3 expanded
[t=0.0382417s, 28532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 68
[t=0.0382508s, 28532 KB] g=4, 7 evaluated, 6 expanded
[t=0.038345s, 28532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 67
[t=0.0383551s, 28532 KB] g=5, 9 evaluated, 8 expanded
[t=0.0386926s, 28532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 66
[t=0.0387033s, 28532 KB] g=8, 17 evaluated, 16 expanded
[t=0.038915s, 28532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 64
[t=0.0389236s, 28532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 47
[t=0.0389315s, 28532 KB] g=10, 22 evaluated, 21 expanded
[t=0.039874s, 28532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 63
[t=0.0398864s, 28532 KB] g=14, 45 evaluated, 44 expanded
[t=0.0402025s, 28532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 62
[t=0.0402404s, 28532 KB] g=15, 50 evaluated, 49 expanded
[t=0.0406989s, 28532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 61
[t=0.0407129s, 28532 KB] g=17, 60 evaluated, 59 expanded
[t=0.0414909s, 28532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.0415019s, 28532 KB] g=20, 79 evaluated, 78 expanded
[t=0.042142s, 28532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 46
[t=0.0421525s, 28532 KB] g=22, 95 evaluated, 94 expanded
[t=0.0428935s, 28532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 58
[t=0.0429078s, 28532 KB] g=24, 112 evaluated, 111 expanded
[t=0.0433398s, 28532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 57
[t=0.0433509s, 28532 KB] g=25, 122 evaluated, 121 expanded
[t=0.0442803s, 28532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.04429s, 28532 KB] g=28, 145 evaluated, 144 expanded
[t=0.0443791s, 28532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0443877s, 28532 KB] g=28, 147 evaluated, 146 expanded
[t=0.0452573s, 28532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.045277s, 28532 KB] g=30, 168 evaluated, 167 expanded
[t=0.0458923s, 28532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0459055s, 28532 KB] g=32, 183 evaluated, 182 expanded
[t=0.0464625s, 28532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.04648s, 28532 KB] g=34, 196 evaluated, 195 expanded
[t=0.0468087s, 28532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0468328s, 28532 KB] g=36, 204 evaluated, 203 expanded
[t=0.0480705s, 28532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0481079s, 28532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.048117s, 28532 KB] g=38, 233 evaluated, 232 expanded
[t=0.0485402s, 28532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0485537s, 28532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.048562s, 28532 KB] g=40, 243 evaluated, 242 expanded
[t=0.0489287s, 28532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0489393s, 28532 KB] g=42, 252 evaluated, 251 expanded
[t=0.0497041s, 28532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0497148s, 28532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.049723s, 28532 KB] g=44, 270 evaluated, 269 expanded
[t=0.0502818s, 28532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0503094s, 28532 KB] g=46, 280 evaluated, 279 expanded
[t=0.05037s, 28532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0503793s, 28532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0503873s, 28532 KB] g=46, 281 evaluated, 280 expanded
[t=0.0509104s, 28532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0509296s, 28532 KB] g=48, 291 evaluated, 290 expanded
[t=0.0509882s, 28532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0509981s, 28532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.051007s, 28532 KB] g=48, 292 evaluated, 291 expanded
[t=0.051412s, 28532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0514248s, 28532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0514419s, 28532 KB] g=50, 301 evaluated, 300 expanded
[t=0.0515415s, 28532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0515506s, 28532 KB] g=51, 303 evaluated, 302 expanded
[t=0.0516089s, 28532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0516177s, 28532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0516259s, 28532 KB] g=52, 304 evaluated, 303 expanded
[t=0.0520067s, 28532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0520163s, 28532 KB] g=54, 313 evaluated, 312 expanded
[t=0.052151s, 28532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.052166s, 28532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.052174s, 28532 KB] g=54, 316 evaluated, 315 expanded
[t=0.0525391s, 28532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0525485s, 28532 KB] g=56, 325 evaluated, 324 expanded
[t=0.0529138s, 28532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0529232s, 28532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0529342s, 28532 KB] g=58, 334 evaluated, 333 expanded
[t=0.0531511s, 28532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0531599s, 28532 KB] g=59, 339 evaluated, 338 expanded
[t=0.0532135s, 28532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.053222s, 28532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0532302s, 28532 KB] g=60, 340 evaluated, 339 expanded
[t=0.0559083s, 28532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0559459s, 28532 KB] g=64, 404 evaluated, 403 expanded
[t=0.0562923s, 28532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0563022s, 28532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0563103s, 28532 KB] g=66, 412 evaluated, 411 expanded
[t=0.0579845s, 28532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0580007s, 28532 KB] g=70, 452 evaluated, 451 expanded
[t=0.0583052s, 28532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0583159s, 28532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0583326s, 28532 KB] g=72, 459 evaluated, 458 expanded
[t=0.0602203s, 28532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0602456s, 28532 KB] g=77, 501 evaluated, 500 expanded
[t=0.0603264s, 28532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0603388s, 28532 KB] g=78, 502 evaluated, 501 expanded
[t=0.0607487s, 28532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0607592s, 28532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0607688s, 28532 KB] g=80, 511 evaluated, 510 expanded
[t=0.0610686s, 28532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0610861s, 28532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0610951s, 28532 KB] g=82, 518 evaluated, 517 expanded
[t=0.0613113s, 28532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0613208s, 28532 KB] g=83, 523 evaluated, 522 expanded
[t=0.061373s, 28532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0613867s, 28532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0613947s, 28532 KB] g=84, 524 evaluated, 523 expanded
[t=0.0615223s, 28532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0615311s, 28532 KB] g=85, 527 evaluated, 526 expanded
[t=0.0615816s, 28532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0615902s, 28532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0615981s, 28532 KB] g=86, 528 evaluated, 527 expanded
[t=0.0618046s, 28532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0618178s, 28532 KB] g=87, 533 evaluated, 532 expanded
[t=0.0618681s, 28532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0618769s, 28532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0618849s, 28532 KB] g=88, 534 evaluated, 533 expanded
[t=0.0621787s, 28532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0621888s, 28532 KB] g=91, 541 evaluated, 540 expanded
[t=0.063051s, 28532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0630607s, 28532 KB] g=96, 562 evaluated, 561 expanded
[t=0.0634822s, 28532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0634935s, 28532 KB] g=100, 572 evaluated, 571 expanded
[t=0.0636652s, 28532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0636753s, 28532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0636836s, 28532 KB] g=102, 576 evaluated, 575 expanded
[t=0.0641376s, 28532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0641478s, 28532 KB] g=106, 587 evaluated, 586 expanded
[t=0.0643201s, 28532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0643292s, 28532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0643373s, 28532 KB] g=108, 591 evaluated, 590 expanded
[t=0.0686951s, 28532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0687492s, 28532 KB] g=122, 699 evaluated, 698 expanded
[t=0.0689297s, 28532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0689406s, 28532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0689488s, 28532 KB] g=124, 703 evaluated, 702 expanded
[t=0.0693178s, 28532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0693325s, 28532 KB] g=128, 712 evaluated, 711 expanded
[t=0.0694659s, 28532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0694883s, 28532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0694967s, 28532 KB] g=130, 715 evaluated, 714 expanded
[t=0.0739887s, 28532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.074047s, 28532 KB] g=160, 830 evaluated, 829 expanded
[t=0.0743558s, 28532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0743661s, 28532 KB] g=164, 839 evaluated, 838 expanded
[t=0.0744772s, 28532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0744865s, 28532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0744949s, 28532 KB] g=166, 842 evaluated, 841 expanded
[t=0.0749761s, 28532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0749944s, 28532 KB] g=178, 859 evaluated, 858 expanded
[t=0.0750974s, 28532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0751084s, 28532 KB] g=182, 863 evaluated, 862 expanded
[t=0.0751327s, 28532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0751413s, 28532 KB] g=183, 864 evaluated, 863 expanded
[t=0.0751587s, 28532 KB] Solution found!
[t=0.0751708s, 28532 KB] Actual search time: 0.037345s
unstack b26 b4 (1)
put-down b26 (1)
unstack b1 b18 (1)
put-down b1 (1)
unstack b18 b8 (1)
put-down b18 (1)
unstack b4 b16 (1)
put-down b4 (1)
unstack b16 b25 (1)
put-down b16 (1)
unstack b8 b24 (1)
put-down b8 (1)
unstack b24 b22 (1)
put-down b24 (1)
unstack b22 b6 (1)
put-down b22 (1)
unstack b6 b11 (1)
put-down b6 (1)
pick-up b16 (1)
stack b16 b8 (1)
unstack b11 b7 (1)
put-down b11 (1)
unstack b7 b3 (1)
put-down b7 (1)
pick-up b1 (1)
stack b1 b24 (1)
pick-up b11 (1)
stack b11 b7 (1)
unstack b3 b28 (1)
put-down b3 (1)
unstack b28 b5 (1)
put-down b28 (1)
pick-up b22 (1)
stack b22 b5 (1)
unstack b25 b13 (1)
put-down b25 (1)
unstack b13 b9 (1)
stack b13 b28 (1)
pick-up b25 (1)
stack b25 b13 (1)
unstack b9 b30 (1)
put-down b9 (1)
unstack b30 b27 (1)
put-down b30 (1)
unstack b27 b20 (1)
stack b27 b11 (1)
unstack b20 b12 (1)
stack b20 b9 (1)
unstack b12 b14 (1)
stack b12 b4 (1)
unstack b14 b10 (1)
stack b14 b1 (1)
pick-up b6 (1)
stack b6 b27 (1)
unstack b10 b21 (1)
put-down b10 (1)
unstack b21 b19 (1)
stack b21 b16 (1)
unstack b19 b17 (1)
stack b19 b30 (1)
unstack b12 b4 (1)
put-down b12 (1)
pick-up b4 (1)
stack b4 b21 (1)
pick-up b12 (1)
stack b12 b4 (1)
unstack b20 b9 (1)
put-down b20 (1)
pick-up b9 (1)
stack b9 b10 (1)
pick-up b20 (1)
stack b20 b9 (1)
unstack b22 b5 (1)
put-down b22 (1)
unstack b5 b2 (1)
put-down b5 (1)
unstack b2 b23 (1)
stack b2 b25 (1)
pick-up b22 (1)
stack b22 b5 (1)
unstack b23 b29 (1)
stack b23 b20 (1)
unstack b29 b15 (1)
stack b29 b26 (1)
pick-up b18 (1)
stack b18 b29 (1)
pick-up b3 (1)
stack b3 b23 (1)
unstack b14 b1 (1)
put-down b14 (1)
unstack b1 b24 (1)
put-down b1 (1)
pick-up b14 (1)
stack b14 b1 (1)
pick-up b24 (1)
stack b24 b12 (1)
unstack b14 b1 (1)
put-down b14 (1)
pick-up b1 (1)
stack b1 b24 (1)
pick-up b14 (1)
stack b14 b1 (1)
unstack b22 b5 (1)
put-down b22 (1)
pick-up b5 (1)
stack b5 b2 (1)
pick-up b22 (1)
stack b22 b5 (1)
unstack b3 b23 (1)
put-down b3 (1)
unstack b23 b20 (1)
put-down b23 (1)
pick-up b3 (1)
stack b3 b23 (1)
unstack b20 b9 (1)
put-down b20 (1)
unstack b9 b10 (1)
put-down b9 (1)
pick-up b10 (1)
stack b10 b15 (1)
pick-up b9 (1)
stack b9 b10 (1)
pick-up b20 (1)
stack b20 b9 (1)
unstack b3 b23 (1)
put-down b3 (1)
pick-up b23 (1)
stack b23 b20 (1)
pick-up b3 (1)
stack b3 b23 (1)
unstack b14 b1 (1)
put-down b14 (1)
unstack b1 b24 (1)
put-down b1 (1)
pick-up b14 (1)
stack b14 b1 (1)
unstack b24 b12 (1)
put-down b24 (1)
unstack b12 b4 (1)
put-down b12 (1)
pick-up b24 (1)
stack b24 b12 (1)
unstack b14 b1 (1)
put-down b14 (1)
pick-up b1 (1)
stack b1 b24 (1)
pick-up b14 (1)
stack b14 b1 (1)
unstack b4 b21 (1)
put-down b4 (1)
unstack b21 b16 (1)
put-down b21 (1)
pick-up b4 (1)
stack b4 b21 (1)
unstack b16 b8 (1)
put-down b16 (1)
pick-up b8 (1)
stack b8 b17 (1)
pick-up b16 (1)
stack b16 b8 (1)
unstack b4 b21 (1)
put-down b4 (1)
pick-up b21 (1)
stack b21 b16 (1)
pick-up b4 (1)
stack b4 b21 (1)
unstack b14 b1 (1)
put-down b14 (1)
unstack b1 b24 (1)
put-down b1 (1)
pick-up b14 (1)
stack b14 b1 (1)
unstack b24 b12 (1)
put-down b24 (1)
pick-up b12 (1)
stack b12 b4 (1)
pick-up b24 (1)
stack b24 b12 (1)
unstack b14 b1 (1)
put-down b14 (1)
pick-up b1 (1)
stack b1 b24 (1)
pick-up b14 (1)
stack b14 b1 (1)
[t=0.0751807s, 28532 KB] Plan length: 184 step(s).
[t=0.0751807s, 28532 KB] Plan cost: 184
[t=0.0751807s, 28532 KB] Expanded 864 state(s).
[t=0.0751807s, 28532 KB] Reopened 0 state(s).
[t=0.0751807s, 28532 KB] Evaluated 865 state(s).
[t=0.0751807s, 28532 KB] Evaluations: 1730
[t=0.0751807s, 28532 KB] Generated 9837 state(s).
[t=0.0751807s, 28532 KB] Dead ends: 0 state(s).
[t=0.0751807s, 28532 KB] Number of registered states: 865
[t=0.0751807s, 28532 KB] Int hash set load factor: 865/1024 = 0.844727
[t=0.0751807s, 28532 KB] Int hash set resizes: 10
[t=0.0751807s, 28532 KB] Search time: 0.0373968s
[t=0.0751807s, 28532 KB] Total time: 0.0751807s
Solution found.
Peak memory: 28532 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.29s
