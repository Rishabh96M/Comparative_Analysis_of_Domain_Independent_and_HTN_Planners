INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_21/bws_problem_21_16.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.010s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.000s CPU, 0.009s wall-clock]
1472 relevant atoms
987 auxiliary atoms
2459 final queue length
4270 total queue pushes
Completing instantiation... [0.020s CPU, 0.015s wall-clock]
Instantiating: [0.030s CPU, 0.025s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
22 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.006s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.021s wall-clock]
1302 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
42 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.010s wall-clock]
Reordering and filtering variables...
43 of 43 variables necessary.
22 of 43 mutex groups necessary.
882 of 882 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 43
Translator derived variables: 0
Translator facts: 506
Translator goal facts: 15
Translator mutex groups: 22
Translator total mutex groups size: 484
Translator operators: 882
Translator axioms: 0
Translator task size: 7600
Translator peak memory: 36456 KB
Writing output... [0.000s CPU, 0.005s wall-clock]
Done! [0.080s CPU, 0.078s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.2272e-05s, 24488 KB] reading input...
[t=0.00258665s, 25268 KB] done reading input!
[t=0.0036097s, 25664 KB] Initializing landmark count heuristic...
[t=0.00364531s, 25664 KB] Generating landmark graph...
[t=0.00370328s, 25664 KB] Building a landmark graph with reasonable orders.
[t=0.00375878s, 25664 KB] Initializing Exploration...
[t=0.00401924s, 25852 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.011889s, 26248 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0119836s, 26248 KB] Landmarks generation time: 0.00828154s
[t=0.0119995s, 26248 KB] Discovered 85 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.012026s, 26248 KB] 263 edges
[t=0.0120427s, 26248 KB] approx. reasonable orders
[t=0.0143113s, 26248 KB] approx. obedient reasonable orders
[t=0.0144085s, 26248 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.014422s, 26248 KB] Landmarks generation time: 0.0107734s
[t=0.0144321s, 26248 KB] Discovered 85 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0144407s, 26248 KB] 313 edges
[t=0.0144496s, 26248 KB] Landmark graph generation time: 0.0108114s
[t=0.014458s, 26248 KB] Landmark graph contains 85 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0144688s, 26248 KB] Landmark graph contains 313 orderings.
[t=0.0148885s, 26248 KB] Simplifying 3486 unary operators... done! [2646 unary operators]
[t=0.0157492s, 26380 KB] time to simplify: 0.000917439s
[t=0.0158592s, 26380 KB] Initializing additive heuristic...
[t=0.0158732s, 26380 KB] Initializing FF heuristic...
[t=0.015939s, 26380 KB] Building successor generator...done!
[t=0.0162421s, 26380 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0162699s, 26380 KB] time for successor generation creation: 0.000242709s
[t=0.0162863s, 26380 KB] Variables: 43
[t=0.0162949s, 26380 KB] FactPairs: 506
[t=0.0163028s, 26380 KB] Bytes per state: 16
[t=0.0164918s, 26380 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0165294s, 26380 KB] 40 initial landmarks, 15 goal landmarks
[t=0.016619s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0166374s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0166468s, 26380 KB] g=0, 1 evaluated, 0 expanded
[t=0.0166635s, 26380 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0166886s, 26380 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0167535s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.016765s, 26380 KB] g=1, 3 evaluated, 2 expanded
[t=0.0169435s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.016953s, 26380 KB] g=2, 10 evaluated, 9 expanded
[t=0.0170535s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0170625s, 26380 KB] g=3, 14 evaluated, 13 expanded
[t=0.017235s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0172443s, 26380 KB] g=4, 21 evaluated, 20 expanded
[t=0.0173457s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0173545s, 26380 KB] g=5, 25 evaluated, 24 expanded
[t=0.0175934s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0176031s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0176111s, 26380 KB] g=8, 35 evaluated, 34 expanded
[t=0.0177839s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0177938s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.017802s, 26380 KB] g=10, 42 evaluated, 41 expanded
[t=0.0179711s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0179801s, 26380 KB] g=12, 49 evaluated, 48 expanded
[t=0.0180826s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0180916s, 26380 KB] g=12, 53 evaluated, 52 expanded
[t=0.0183732s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0183831s, 26380 KB] g=14, 65 evaluated, 64 expanded
[t=0.0186542s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0186687s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0186773s, 26380 KB] g=16, 77 evaluated, 76 expanded
[t=0.0188177s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0188264s, 26380 KB] g=18, 83 evaluated, 82 expanded
[t=0.0188803s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0188889s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0188966s, 26380 KB] g=18, 85 evaluated, 84 expanded
[t=0.0190152s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0190237s, 26380 KB] g=20, 90 evaluated, 89 expanded
[t=0.0190762s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0190848s, 26380 KB] g=20, 92 evaluated, 91 expanded
[t=0.0192669s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0192755s, 26380 KB] g=22, 100 evaluated, 99 expanded
[t=0.0193073s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0193159s, 26380 KB] g=22, 101 evaluated, 100 expanded
[t=0.0194987s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0195079s, 26380 KB] g=24, 109 evaluated, 108 expanded
[t=0.0196037s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0196126s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0196205s, 26380 KB] g=26, 113 evaluated, 112 expanded
[t=0.0197146s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0197236s, 26380 KB] g=28, 117 evaluated, 116 expanded
[t=0.0198183s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0198275s, 26380 KB] g=30, 121 evaluated, 120 expanded
[t=0.0199645s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0199731s, 26380 KB] g=32, 127 evaluated, 126 expanded
[t=0.0201241s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.020135s, 26380 KB] g=34, 133 evaluated, 132 expanded
[t=0.0202348s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0202436s, 26380 KB] g=34, 137 evaluated, 136 expanded
[t=0.0204985s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0205075s, 26380 KB] g=36, 149 evaluated, 148 expanded
[t=0.0205373s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0205461s, 26380 KB] g=37, 150 evaluated, 149 expanded
[t=0.020665s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.020674s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0206822s, 26380 KB] g=38, 155 evaluated, 154 expanded
[t=0.0207113s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0207199s, 26380 KB] g=39, 156 evaluated, 155 expanded
[t=0.0208659s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0208764s, 26380 KB] g=42, 163 evaluated, 162 expanded
[t=0.0209427s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0209513s, 26380 KB] g=44, 166 evaluated, 165 expanded
[t=0.0210539s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0210622s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0210704s, 26380 KB] g=46, 171 evaluated, 170 expanded
[t=0.0211153s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0211238s, 26380 KB] g=47, 173 evaluated, 172 expanded
[t=0.0211529s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0211616s, 26380 KB] g=48, 174 evaluated, 173 expanded
[t=0.0212049s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0212132s, 26380 KB] g=49, 176 evaluated, 175 expanded
[t=0.0212756s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0212841s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0212919s, 26380 KB] g=50, 179 evaluated, 178 expanded
[t=0.0213166s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0213251s, 26380 KB] g=51, 180 evaluated, 179 expanded
[t=0.0213869s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0213955s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0214032s, 26380 KB] g=52, 183 evaluated, 182 expanded
[t=0.0214274s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0214356s, 26380 KB] g=53, 184 evaluated, 183 expanded
[t=0.0215031s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0215116s, 26380 KB] g=57, 188 evaluated, 187 expanded
[t=0.021567s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0215756s, 26380 KB] g=60, 191 evaluated, 190 expanded
[t=0.0215964s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0216048s, 26380 KB] g=61, 192 evaluated, 191 expanded
[t=0.0216549s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0216634s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0216712s, 26380 KB] g=64, 195 evaluated, 194 expanded
[t=0.021688s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0216964s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0217043s, 26380 KB] g=65, 196 evaluated, 195 expanded
[t=0.0217187s, 26380 KB] Solution found!
[t=0.0217287s, 26380 KB] Actual search time: 0.00519548s
unstack b4 b5 (1)
put-down b4 (1)
unstack b5 b1 (1)
put-down b5 (1)
unstack b10 b14 (1)
put-down b10 (1)
unstack b12 b15 (1)
stack b12 b4 (1)
unstack b14 b16 (1)
stack b14 b5 (1)
unstack b17 b7 (1)
stack b17 b15 (1)
unstack b7 b8 (1)
put-down b7 (1)
pick-up b1 (1)
stack b1 b7 (1)
pick-up b8 (1)
stack b8 b12 (1)
unstack b9 b21 (1)
stack b9 b17 (1)
unstack b21 b18 (1)
stack b21 b1 (1)
unstack b16 b3 (1)
put-down b16 (1)
unstack b3 b19 (1)
stack b3 b14 (1)
unstack b9 b17 (1)
put-down b9 (1)
unstack b17 b15 (1)
put-down b17 (1)
unstack b15 b11 (1)
stack b15 b3 (1)
pick-up b10 (1)
stack b10 b11 (1)
pick-up b17 (1)
stack b17 b15 (1)
pick-up b9 (1)
stack b9 b17 (1)
unstack b10 b11 (1)
put-down b10 (1)
unstack b11 b2 (1)
stack b11 b16 (1)
pick-up b10 (1)
stack b10 b11 (1)
unstack b2 b20 (1)
stack b2 b21 (1)
unstack b20 b6 (1)
put-down b20 (1)
unstack b6 b13 (1)
stack b6 b9 (1)
pick-up b13 (1)
stack b13 b19 (1)
unstack b10 b11 (1)
put-down b10 (1)
unstack b11 b16 (1)
put-down b11 (1)
pick-up b10 (1)
stack b10 b11 (1)
pick-up b16 (1)
stack b16 b2 (1)
unstack b10 b11 (1)
put-down b10 (1)
pick-up b11 (1)
stack b11 b16 (1)
pick-up b10 (1)
stack b10 b11 (1)
[t=0.0217374s, 26380 KB] Plan length: 66 step(s).
[t=0.0217374s, 26380 KB] Plan cost: 66
[t=0.0217374s, 26380 KB] Expanded 196 state(s).
[t=0.0217374s, 26380 KB] Reopened 0 state(s).
[t=0.0217374s, 26380 KB] Evaluated 197 state(s).
[t=0.0217374s, 26380 KB] Evaluations: 394
[t=0.0217374s, 26380 KB] Generated 1675 state(s).
[t=0.0217374s, 26380 KB] Dead ends: 0 state(s).
[t=0.0217374s, 26380 KB] Number of registered states: 197
[t=0.0217374s, 26380 KB] Int hash set load factor: 197/256 = 0.769531
[t=0.0217374s, 26380 KB] Int hash set resizes: 8
[t=0.0217374s, 26380 KB] Search time: 0.00524651s
[t=0.0217374s, 26380 KB] Total time: 0.0217374s
Solution found.
Peak memory: 26380 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.15s
