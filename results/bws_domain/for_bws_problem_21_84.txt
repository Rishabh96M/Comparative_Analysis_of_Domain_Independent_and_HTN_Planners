INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_21/bws_problem_21_84.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.009s wall-clock]
1472 relevant atoms
987 auxiliary atoms
2459 final queue length
4270 total queue pushes
Completing instantiation... [0.020s CPU, 0.015s wall-clock]
Instantiating: [0.030s CPU, 0.025s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
22 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.006s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.021s wall-clock]
1302 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
42 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.012s wall-clock]
Reordering and filtering variables...
43 of 43 variables necessary.
22 of 43 mutex groups necessary.
882 of 882 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.005s wall-clock]
Translator variables: 43
Translator derived variables: 0
Translator facts: 506
Translator goal facts: 16
Translator mutex groups: 22
Translator total mutex groups size: 484
Translator operators: 882
Translator axioms: 0
Translator task size: 7601
Translator peak memory: 36456 KB
Writing output... [0.000s CPU, 0.005s wall-clock]
Done! [0.070s CPU, 0.078s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.4664e-05s, 24488 KB] reading input...
[t=0.00272847s, 25268 KB] done reading input!
[t=0.00361977s, 25664 KB] Initializing landmark count heuristic...
[t=0.00365585s, 25664 KB] Generating landmark graph...
[t=0.00371277s, 25664 KB] Building a landmark graph with reasonable orders.
[t=0.00376564s, 25664 KB] Initializing Exploration...
[t=0.00401333s, 25852 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0123203s, 26380 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0124152s, 26380 KB] Landmarks generation time: 0.0087194s
[t=0.0124459s, 26380 KB] Discovered 88 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0124621s, 26380 KB] 350 edges
[t=0.0124724s, 26380 KB] approx. reasonable orders
[t=0.0149588s, 26380 KB] approx. obedient reasonable orders
[t=0.0152714s, 26380 KB] Removed 1 reasonable or obedient reasonable orders
[t=0.0152855s, 26380 KB] Landmarks generation time: 0.011633s
[t=0.0153032s, 26380 KB] Discovered 88 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0153302s, 26380 KB] 429 edges
[t=0.0153383s, 26380 KB] Landmark graph generation time: 0.0116894s
[t=0.0153469s, 26380 KB] Landmark graph contains 88 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0153546s, 26380 KB] Landmark graph contains 429 orderings.
[t=0.0158257s, 26380 KB] Simplifying 3486 unary operators... done! [2646 unary operators]
[t=0.0166425s, 26380 KB] time to simplify: 0.000873986s
[t=0.016753s, 26380 KB] Initializing additive heuristic...
[t=0.0167666s, 26380 KB] Initializing FF heuristic...
[t=0.016816s, 26380 KB] Building successor generator...done!
[t=0.0169933s, 26380 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0170016s, 26380 KB] time for successor generation creation: 0.000147463s
[t=0.0170126s, 26380 KB] Variables: 43
[t=0.0170208s, 26380 KB] FactPairs: 506
[t=0.0170287s, 26380 KB] Bytes per state: 16
[t=0.0171282s, 26380 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0171701s, 26380 KB] 41 initial landmarks, 16 goal landmarks
[t=0.0172543s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0172644s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0172728s, 26380 KB] g=0, 1 evaluated, 0 expanded
[t=0.0172896s, 26380 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0173033s, 26380 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0173951s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0174067s, 26380 KB] g=1, 4 evaluated, 3 expanded
[t=0.0175534s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0175634s, 26380 KB] g=2, 10 evaluated, 9 expanded
[t=0.0176374s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0176462s, 26380 KB] g=3, 13 evaluated, 12 expanded
[t=0.0178731s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0178823s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0178901s, 26380 KB] g=6, 23 evaluated, 22 expanded
[t=0.018007s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0180164s, 26380 KB] g=8, 28 evaluated, 27 expanded
[t=0.0181608s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0181709s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.018179s, 26380 KB] g=10, 34 evaluated, 33 expanded
[t=0.0183815s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0183993s, 26380 KB] g=12, 41 evaluated, 40 expanded
[t=0.0184915s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0185062s, 26380 KB] g=12, 43 evaluated, 42 expanded
[t=0.0187362s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0187518s, 26380 KB] g=14, 52 evaluated, 51 expanded
[t=0.0188474s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0188575s, 26380 KB] g=15, 56 evaluated, 55 expanded
[t=0.0189119s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0189211s, 26380 KB] g=16, 57 evaluated, 56 expanded
[t=0.019232s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0192499s, 26380 KB] g=18, 71 evaluated, 70 expanded
[t=0.0195171s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0195279s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0195366s, 26380 KB] g=20, 83 evaluated, 82 expanded
[t=0.0196484s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.019657s, 26380 KB] g=21, 87 evaluated, 86 expanded
[t=0.0198142s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0198232s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0198311s, 26380 KB] g=22, 94 evaluated, 93 expanded
[t=0.0199041s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0199125s, 26380 KB] g=23, 97 evaluated, 96 expanded
[t=0.020068s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0200766s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0200841s, 26380 KB] g=24, 104 evaluated, 103 expanded
[t=0.0201345s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.020143s, 26380 KB] g=25, 106 evaluated, 105 expanded
[t=0.0203775s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0203871s, 26380 KB] g=28, 117 evaluated, 116 expanded
[t=0.0209817s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0209929s, 26380 KB] g=32, 145 evaluated, 144 expanded
[t=0.021264s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.021285s, 26380 KB] g=30, 156 evaluated, 155 expanded
[t=0.0215123s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0215229s, 26380 KB] g=34, 166 evaluated, 165 expanded
[t=0.0215989s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0216159s, 26380 KB] g=32, 168 evaluated, 167 expanded
[t=0.0218563s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0218661s, 26380 KB] g=34, 179 evaluated, 178 expanded
[t=0.0220476s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0220567s, 26380 KB] g=36, 186 evaluated, 185 expanded
[t=0.0223559s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0223726s, 26380 KB] g=38, 197 evaluated, 196 expanded
[t=0.022591s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0226034s, 26380 KB] g=40, 205 evaluated, 204 expanded
[t=0.0226848s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0226949s, 26380 KB] g=36, 208 evaluated, 207 expanded
[t=0.0228194s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0228285s, 26380 KB] g=42, 213 evaluated, 212 expanded
[t=0.0230571s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0230661s, 26380 KB] g=44, 223 evaluated, 222 expanded
[t=0.0238598s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0238763s, 26380 KB] g=50, 259 evaluated, 258 expanded
[t=0.0243275s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0243368s, 26380 KB] g=50, 280 evaluated, 279 expanded
[t=0.0246313s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0246419s, 26380 KB] g=54, 293 evaluated, 292 expanded
[t=0.0247564s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.024765s, 26380 KB] g=56, 298 evaluated, 297 expanded
[t=0.0273328s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0273528s, 26380 KB] g=78, 427 evaluated, 426 expanded
[t=0.0274114s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0274205s, 26380 KB] g=80, 430 evaluated, 429 expanded
[t=0.0276077s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0276164s, 26380 KB] g=88, 442 evaluated, 441 expanded
[t=0.027633s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0276412s, 26380 KB] g=89, 443 evaluated, 442 expanded
[t=0.0276554s, 26380 KB] Solution found!
[t=0.0276659s, 26380 KB] Actual search time: 0.0104872s
unstack b5 b8 (1)
put-down b5 (1)
unstack b21 b7 (1)
put-down b21 (1)
pick-up b3 (1)
stack b3 b7 (1)
unstack b4 b1 (1)
put-down b4 (1)
unstack b1 b2 (1)
put-down b1 (1)
unstack b2 b11 (1)
stack b2 b8 (1)
unstack b11 b19 (1)
put-down b11 (1)
unstack b19 b18 (1)
stack b19 b4 (1)
unstack b18 b14 (1)
put-down b18 (1)
unstack b14 b15 (1)
stack b14 b1 (1)
pick-up b15 (1)
stack b15 b14 (1)
pick-up b18 (1)
stack b18 b15 (1)
unstack b3 b7 (1)
put-down b3 (1)
unstack b7 b9 (1)
put-down b7 (1)
pick-up b3 (1)
stack b3 b7 (1)
unstack b9 b10 (1)
stack b9 b17 (1)
unstack b10 b16 (1)
stack b10 b2 (1)
unstack b16 b20 (1)
stack b16 b10 (1)
unstack b20 b6 (1)
stack b20 b16 (1)
pick-up b21 (1)
stack b21 b20 (1)
unstack b6 b13 (1)
stack b6 b11 (1)
unstack b13 b12 (1)
stack b13 b18 (1)
unstack b9 b17 (1)
put-down b9 (1)
pick-up b17 (1)
stack b17 b6 (1)
pick-up b9 (1)
stack b9 b17 (1)
unstack b19 b4 (1)
put-down b19 (1)
pick-up b4 (1)
stack b4 b9 (1)
pick-up b19 (1)
stack b19 b4 (1)
unstack b21 b20 (1)
put-down b21 (1)
unstack b20 b16 (1)
put-down b20 (1)
unstack b16 b10 (1)
put-down b16 (1)
pick-up b20 (1)
stack b20 b16 (1)
pick-up b21 (1)
stack b21 b20 (1)
unstack b10 b2 (1)
put-down b10 (1)
unstack b2 b8 (1)
put-down b2 (1)
pick-up b10 (1)
stack b10 b2 (1)
pick-up b8 (1)
stack b8 b13 (1)
unstack b10 b2 (1)
put-down b10 (1)
pick-up b2 (1)
stack b2 b8 (1)
pick-up b10 (1)
stack b10 b2 (1)
unstack b21 b20 (1)
put-down b21 (1)
unstack b20 b16 (1)
put-down b20 (1)
pick-up b16 (1)
stack b16 b10 (1)
pick-up b20 (1)
stack b20 b16 (1)
pick-up b21 (1)
stack b21 b20 (1)
[t=0.0276748s, 26380 KB] Plan length: 90 step(s).
[t=0.0276748s, 26380 KB] Plan cost: 90
[t=0.0276748s, 26380 KB] Expanded 443 state(s).
[t=0.0276748s, 26380 KB] Reopened 0 state(s).
[t=0.0276748s, 26380 KB] Evaluated 444 state(s).
[t=0.0276748s, 26380 KB] Evaluations: 888
[t=0.0276748s, 26380 KB] Generated 4358 state(s).
[t=0.0276748s, 26380 KB] Dead ends: 0 state(s).
[t=0.0276748s, 26380 KB] Number of registered states: 444
[t=0.0276748s, 26380 KB] Int hash set load factor: 444/512 = 0.867188
[t=0.0276748s, 26380 KB] Int hash set resizes: 9
[t=0.0276748s, 26380 KB] Search time: 0.0105471s
[t=0.0276748s, 26380 KB] Total time: 0.0276748s
Solution found.
Peak memory: 26380 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.15s
