INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_21/bws_problem_21_9.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.009s wall-clock]
1472 relevant atoms
987 auxiliary atoms
2459 final queue length
4271 total queue pushes
Completing instantiation... [0.020s CPU, 0.015s wall-clock]
Instantiating: [0.030s CPU, 0.027s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
22 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.006s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.023s wall-clock]
1302 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
42 propositions removed
Detecting unreachable propositions: [0.000s CPU, 0.010s wall-clock]
Reordering and filtering variables...
43 of 43 variables necessary.
22 of 43 mutex groups necessary.
882 of 882 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.005s wall-clock]
Translator variables: 43
Translator derived variables: 0
Translator facts: 506
Translator goal facts: 16
Translator mutex groups: 22
Translator total mutex groups size: 484
Translator operators: 882
Translator axioms: 0
Translator task size: 7601
Translator peak memory: 36456 KB
Writing output... [0.000s CPU, 0.005s wall-clock]
Done! [0.070s CPU, 0.080s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=1.6655e-05s, 24488 KB] reading input...
[t=0.00246059s, 25268 KB] done reading input!
[t=0.00345767s, 25664 KB] Initializing landmark count heuristic...
[t=0.0034885s, 25664 KB] Generating landmark graph...
[t=0.00356099s, 25664 KB] Building a landmark graph with reasonable orders.
[t=0.00363104s, 25664 KB] Initializing Exploration...
[t=0.00391019s, 25852 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0124283s, 26380 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0125221s, 26380 KB] Landmarks generation time: 0.00897137s
[t=0.012552s, 26380 KB] Discovered 89 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0125689s, 26380 KB] 361 edges
[t=0.0125788s, 26380 KB] approx. reasonable orders
[t=0.014947s, 26380 KB] approx. obedient reasonable orders
[t=0.0150285s, 26380 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0150389s, 26380 KB] Landmarks generation time: 0.0115477s
[t=0.0150491s, 26380 KB] Discovered 89 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0150577s, 26380 KB] 409 edges
[t=0.0150676s, 26380 KB] Landmark graph generation time: 0.0115862s
[t=0.0150766s, 26380 KB] Landmark graph contains 89 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.015085s, 26380 KB] Landmark graph contains 409 orderings.
[t=0.0155163s, 26380 KB] Simplifying 3486 unary operators... done! [2646 unary operators]
[t=0.0163442s, 26380 KB] time to simplify: 0.00091002s
[t=0.0164845s, 26380 KB] Initializing additive heuristic...
[t=0.0164989s, 26380 KB] Initializing FF heuristic...
[t=0.0165555s, 26380 KB] Building successor generator...done!
[t=0.0167573s, 26380 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0167675s, 26380 KB] time for successor generation creation: 0.000165238s
[t=0.0167819s, 26380 KB] Variables: 43
[t=0.0167904s, 26380 KB] FactPairs: 506
[t=0.0167987s, 26380 KB] Bytes per state: 16
[t=0.0169174s, 26380 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0169545s, 26380 KB] 42 initial landmarks, 16 goal landmarks
[t=0.0170374s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0170482s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0170571s, 26380 KB] g=0, 1 evaluated, 0 expanded
[t=0.0170734s, 26380 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0170826s, 26380 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0172622s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0172732s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.017282s, 26380 KB] g=2, 8 evaluated, 7 expanded
[t=0.0174446s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.017454s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0174626s, 26380 KB] g=4, 15 evaluated, 14 expanded
[t=0.017622s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0176314s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0176392s, 26380 KB] g=6, 22 evaluated, 21 expanded
[t=0.0178016s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0178113s, 26380 KB] g=8, 29 evaluated, 28 expanded
[t=0.0178466s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0178555s, 26380 KB] g=8, 30 evaluated, 29 expanded
[t=0.018146s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0181548s, 26380 KB] g=10, 43 evaluated, 42 expanded
[t=0.0182537s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.018263s, 26380 KB] g=10, 47 evaluated, 46 expanded
[t=0.0185878s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0185978s, 26380 KB] g=12, 61 evaluated, 60 expanded
[t=0.0189276s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0189375s, 26380 KB] g=16, 75 evaluated, 74 expanded
[t=0.019014s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0190301s, 26380 KB] g=14, 78 evaluated, 77 expanded
[t=0.0193125s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0193224s, 26380 KB] g=18, 90 evaluated, 89 expanded
[t=0.0194925s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0195024s, 26380 KB] g=16, 97 evaluated, 96 expanded
[t=0.0196713s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0196807s, 26380 KB] g=20, 104 evaluated, 103 expanded
[t=0.0199859s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0199957s, 26380 KB] g=18, 117 evaluated, 116 expanded
[t=0.0200311s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0200401s, 26380 KB] g=22, 118 evaluated, 117 expanded
[t=0.0203765s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0203864s, 26380 KB] g=24, 132 evaluated, 131 expanded
[t=0.0205109s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0205201s, 26380 KB] g=20, 137 evaluated, 136 expanded
[t=0.0207107s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0207245s, 26380 KB] g=26, 145 evaluated, 144 expanded
[t=0.0210668s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0210768s, 26380 KB] g=28, 159 evaluated, 158 expanded
[t=0.021109s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0211181s, 26380 KB] g=22, 160 evaluated, 159 expanded
[t=0.021411s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0214269s, 26380 KB] g=30, 172 evaluated, 171 expanded
[t=0.0217213s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0217312s, 26380 KB] g=32, 184 evaluated, 183 expanded
[t=0.0217665s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0217755s, 26380 KB] g=24, 185 evaluated, 184 expanded
[t=0.0222803s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0222913s, 26380 KB] g=26, 207 evaluated, 206 expanded
[t=0.0223443s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0223536s, 26380 KB] g=27, 209 evaluated, 208 expanded
[t=0.0229993s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0230087s, 26380 KB] g=30, 239 evaluated, 238 expanded
[t=0.0235419s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0235518s, 26380 KB] g=38, 263 evaluated, 262 expanded
[t=0.0235833s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0235922s, 26380 KB] g=32, 264 evaluated, 263 expanded
[t=0.023812s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.023822s, 26380 KB] g=40, 274 evaluated, 273 expanded
[t=0.0242888s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0242987s, 26380 KB] g=34, 296 evaluated, 295 expanded
[t=0.0246667s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0246794s, 26380 KB] g=36, 314 evaluated, 313 expanded
[t=0.0248999s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0249141s, 26380 KB] g=46, 324 evaluated, 323 expanded
[t=0.0252451s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0252551s, 26380 KB] g=38, 340 evaluated, 339 expanded
[t=0.0256712s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0256832s, 26380 KB] g=42, 362 evaluated, 361 expanded
[t=0.0258052s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0258159s, 26380 KB] g=40, 368 evaluated, 367 expanded
[t=0.0259129s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0259224s, 26380 KB] g=44, 373 evaluated, 372 expanded
[t=0.0261251s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0261414s, 26380 KB] g=46, 384 evaluated, 383 expanded
[t=0.0262805s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0262912s, 26380 KB] g=48, 390 evaluated, 389 expanded
[t=0.0263174s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0263263s, 26380 KB] g=42, 391 evaluated, 390 expanded
[t=0.0265388s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0265484s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0265577s, 26380 KB] g=44, 403 evaluated, 402 expanded
[t=0.0266579s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0266681s, 26380 KB] g=46, 409 evaluated, 408 expanded
[t=0.0268395s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0268505s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0268593s, 26380 KB] g=46, 419 evaluated, 418 expanded
[t=0.0269417s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0269523s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0269607s, 26380 KB] g=48, 424 evaluated, 423 expanded
[t=0.0270264s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0270366s, 26380 KB] g=50, 428 evaluated, 427 expanded
[t=0.0270792s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0270889s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0270977s, 26380 KB] g=50, 430 evaluated, 429 expanded
[t=0.0271476s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0271574s, 26380 KB] g=52, 433 evaluated, 432 expanded
[t=0.0271804s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0271897s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0271978s, 26380 KB] g=52, 434 evaluated, 433 expanded
[t=0.0272163s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0272259s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0272341s, 26380 KB] g=53, 435 evaluated, 434 expanded
[t=0.0272489s, 26380 KB] Solution found!
[t=0.0272594s, 26380 KB] Actual search time: 0.0102909s
unstack b1 b20 (1)
put-down b1 (1)
unstack b20 b7 (1)
put-down b20 (1)
unstack b12 b19 (1)
stack b12 b20 (1)
unstack b15 b4 (1)
put-down b15 (1)
unstack b8 b16 (1)
put-down b8 (1)
unstack b16 b11 (1)
put-down b16 (1)
unstack b11 b2 (1)
put-down b11 (1)
unstack b2 b14 (1)
stack b2 b1 (1)
unstack b14 b17 (1)
put-down b14 (1)
unstack b17 b21 (1)
stack b17 b2 (1)
unstack b21 b18 (1)
put-down b21 (1)
unstack b9 b10 (1)
stack b9 b17 (1)
unstack b18 b13 (1)
put-down b18 (1)
unstack b13 b6 (1)
put-down b13 (1)
unstack b6 b5 (1)
put-down b6 (1)
pick-up b5 (1)
stack b5 b12 (1)
pick-up b16 (1)
stack b16 b10 (1)
pick-up b13 (1)
stack b13 b16 (1)
pick-up b19 (1)
stack b19 b9 (1)
pick-up b6 (1)
stack b6 b19 (1)
pick-up b15 (1)
stack b15 b6 (1)
pick-up b7 (1)
stack b7 b15 (1)
pick-up b8 (1)
stack b8 b18 (1)
pick-up b14 (1)
stack b14 b8 (1)
pick-up b21 (1)
stack b21 b14 (1)
pick-up b4 (1)
stack b4 b21 (1)
pick-up b3 (1)
stack b3 b4 (1)
[t=0.0272691s, 26380 KB] Plan length: 54 step(s).
[t=0.0272691s, 26380 KB] Plan cost: 54
[t=0.0272691s, 26380 KB] Expanded 435 state(s).
[t=0.0272691s, 26380 KB] Reopened 0 state(s).
[t=0.0272691s, 26380 KB] Evaluated 436 state(s).
[t=0.0272691s, 26380 KB] Evaluations: 872
[t=0.0272691s, 26380 KB] Generated 4860 state(s).
[t=0.0272691s, 26380 KB] Dead ends: 0 state(s).
[t=0.0272691s, 26380 KB] Number of registered states: 436
[t=0.0272691s, 26380 KB] Int hash set load factor: 436/512 = 0.851562
[t=0.0272691s, 26380 KB] Int hash set resizes: 9
[t=0.0272691s, 26380 KB] Search time: 0.0103524s
[t=0.0272691s, 26380 KB] Total time: 0.0272691s
Solution found.
Peak memory: 26380 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.15s
