INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_26/bws_problem_26_66.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.000s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
2212 relevant atoms
1482 auxiliary atoms
3694 final queue length
6457 total queue pushes
Completing instantiation... [0.020s CPU, 0.022s wall-clock]
Instantiating: [0.030s CPU, 0.037s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
27 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.008s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.002s wall-clock]
Translating task: [0.040s CPU, 0.034s wall-clock]
2002 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
52 propositions removed
Detecting unreachable propositions: [0.030s CPU, 0.023s wall-clock]
Reordering and filtering variables...
53 of 53 variables necessary.
27 of 53 mutex groups necessary.
1352 of 1352 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.009s wall-clock]
Translator variables: 53
Translator derived variables: 0
Translator facts: 756
Translator goal facts: 22
Translator mutex groups: 27
Translator total mutex groups size: 729
Translator operators: 1352
Translator axioms: 0
Translator task size: 11622
Translator peak memory: 38896 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.120s CPU, 0.122s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=3.2138e-05s, 24488 KB] reading input...
[t=0.00408011s, 25744 KB] done reading input!
[t=0.00520874s, 26140 KB] Initializing landmark count heuristic...
[t=0.00524794s, 26140 KB] Generating landmark graph...
[t=0.00532923s, 26272 KB] Building a landmark graph with reasonable orders.
[t=0.00540546s, 26272 KB] Initializing Exploration...
[t=0.00578465s, 26680 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.023098s, 27208 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0231924s, 27208 KB] Landmarks generation time: 0.0178638s
[t=0.0232069s, 27208 KB] Discovered 116 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0232237s, 27208 KB] 360 edges
[t=0.023234s, 27208 KB] approx. reasonable orders
[t=0.0282178s, 27208 KB] approx. obedient reasonable orders
[t=0.0284776s, 27208 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0284915s, 27208 KB] Landmarks generation time: 0.023242s
[t=0.0285026s, 27208 KB] Discovered 116 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0285117s, 27208 KB] 448 edges
[t=0.0285211s, 27208 KB] Landmark graph generation time: 0.0232808s
[t=0.0285303s, 27208 KB] Landmark graph contains 116 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0285391s, 27208 KB] Landmark graph contains 448 orderings.
[t=0.0290562s, 27208 KB] Simplifying 5356 unary operators... done! [4056 unary operators]
[t=0.0303397s, 27340 KB] time to simplify: 0.00136986s
[t=0.0305077s, 27340 KB] Initializing additive heuristic...
[t=0.0305243s, 27340 KB] Initializing FF heuristic...
[t=0.0306201s, 27340 KB] Building successor generator...done!
[t=0.03091s, 27340 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0309205s, 27340 KB] time for successor generation creation: 0.000261143s
[t=0.0309353s, 27340 KB] Variables: 53
[t=0.0309434s, 27340 KB] FactPairs: 756
[t=0.0309512s, 27340 KB] Bytes per state: 20
[t=0.031095s, 27340 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0311331s, 27340 KB] 53 initial landmarks, 22 goal landmarks
[t=0.0312177s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 63
[t=0.0312434s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 48
[t=0.0312524s, 27340 KB] g=0, 1 evaluated, 0 expanded
[t=0.031276s, 27340 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 63
[t=0.0312849s, 27340 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 48
[t=0.0315662s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 62
[t=0.0315754s, 27340 KB] g=1, 8 evaluated, 7 expanded
[t=0.0316534s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 47
[t=0.0316628s, 27340 KB] g=2, 10 evaluated, 9 expanded
[t=0.0321502s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 61
[t=0.0321667s, 27340 KB] g=3, 24 evaluated, 23 expanded
[t=0.0322591s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 46
[t=0.0322722s, 27340 KB] g=4, 26 evaluated, 25 expanded
[t=0.0327537s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 60
[t=0.0327638s, 27340 KB] g=5, 40 evaluated, 39 expanded
[t=0.0328438s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0328533s, 27340 KB] g=6, 42 evaluated, 41 expanded
[t=0.0333424s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.033361s, 27340 KB] g=7, 56 evaluated, 55 expanded
[t=0.0334549s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.0334641s, 27340 KB] g=8, 58 evaluated, 57 expanded
[t=0.0339128s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 58
[t=0.0339224s, 27340 KB] g=9, 72 evaluated, 71 expanded
[t=0.0339673s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0339758s, 27340 KB] g=10, 73 evaluated, 72 expanded
[t=0.0344713s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0344807s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0344888s, 27340 KB] g=12, 89 evaluated, 88 expanded
[t=0.0347195s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.034729s, 27340 KB] g=13, 96 evaluated, 95 expanded
[t=0.0349343s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0349431s, 27340 KB] g=14, 102 evaluated, 101 expanded
[t=0.0354242s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.035435s, 27340 KB] g=15, 116 evaluated, 115 expanded
[t=0.0354801s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0354897s, 27340 KB] g=16, 117 evaluated, 116 expanded
[t=0.0357646s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0357758s, 27340 KB] g=17, 124 evaluated, 123 expanded
[t=0.0364135s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0364283s, 27340 KB] g=19, 142 evaluated, 141 expanded
[t=0.0369061s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0369285s, 27340 KB] g=21, 156 evaluated, 155 expanded
[t=0.0372483s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0372769s, 27340 KB] g=20, 165 evaluated, 164 expanded
[t=0.0378221s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.037839s, 27340 KB] g=24, 177 evaluated, 176 expanded
[t=0.0385816s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0385915s, 27340 KB] g=26, 199 evaluated, 198 expanded
[t=0.0390233s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.039045s, 27340 KB] g=24, 212 evaluated, 211 expanded
[t=0.0393124s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0393219s, 27340 KB] g=28, 220 evaluated, 219 expanded
[t=0.0398281s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0398384s, 27340 KB] g=29, 236 evaluated, 235 expanded
[t=0.0402851s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0402948s, 27340 KB] g=28, 250 evaluated, 249 expanded
[t=0.0407773s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0407869s, 27340 KB] g=32, 265 evaluated, 264 expanded
[t=0.0416149s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0416262s, 27340 KB] g=34, 290 evaluated, 289 expanded
[t=0.0423077s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0423304s, 27340 KB] g=32, 311 evaluated, 310 expanded
[t=0.0430568s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0430667s, 27340 KB] g=36, 334 evaluated, 333 expanded
[t=0.0439668s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0439759s, 27340 KB] g=38, 363 evaluated, 362 expanded
[t=0.0448618s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0448735s, 27340 KB] g=36, 392 evaluated, 391 expanded
[t=0.0452641s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0452757s, 27340 KB] g=38, 404 evaluated, 403 expanded
[t=0.0453196s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0453464s, 27340 KB] g=40, 405 evaluated, 404 expanded
[t=0.0458561s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.045872s, 27340 KB] g=40, 421 evaluated, 420 expanded
[t=0.0461622s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0461773s, 27340 KB] g=42, 430 evaluated, 429 expanded
[t=0.0463847s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0463959s, 27340 KB] g=42, 436 evaluated, 435 expanded
[t=0.0469048s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0469275s, 27340 KB] g=42, 452 evaluated, 451 expanded
[t=0.0469714s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0469816s, 27340 KB] g=44, 453 evaluated, 452 expanded
[t=0.0475791s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0476039s, 27340 KB] g=44, 468 evaluated, 467 expanded
[t=0.0480177s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0480298s, 27340 KB] g=46, 481 evaluated, 480 expanded
[t=0.0480763s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0480856s, 27340 KB] g=46, 482 evaluated, 481 expanded
[t=0.0485346s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.048545s, 27340 KB] g=48, 496 evaluated, 495 expanded
[t=0.048892s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0489021s, 27340 KB] g=48, 507 evaluated, 506 expanded
[t=0.0489517s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0489625s, 27340 KB] g=50, 508 evaluated, 507 expanded
[t=0.0496762s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0496899s, 27340 KB] g=50, 531 evaluated, 530 expanded
[t=0.0499997s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0500119s, 27340 KB] g=54, 542 evaluated, 541 expanded
[t=0.0503086s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0503242s, 27340 KB] g=56, 553 evaluated, 552 expanded
[t=0.0510009s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0510136s, 27340 KB] g=60, 577 evaluated, 576 expanded
[t=0.0512614s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0512708s, 27340 KB] g=62, 586 evaluated, 585 expanded
[t=0.0514349s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0514445s, 27340 KB] g=52, 592 evaluated, 591 expanded
[t=0.0522696s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0522874s, 27340 KB] g=54, 623 evaluated, 622 expanded
[t=0.0526654s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0526753s, 27340 KB] g=74, 639 evaluated, 638 expanded
[t=0.0528769s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0528862s, 27340 KB] g=56, 648 evaluated, 647 expanded
[t=0.0529175s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0529268s, 27340 KB] g=76, 649 evaluated, 648 expanded
[t=0.0531076s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0531177s, 27340 KB] g=78, 657 evaluated, 656 expanded
[t=0.0532513s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0532608s, 27340 KB] g=80, 663 evaluated, 662 expanded
[t=0.0533911s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0534014s, 27340 KB] g=82, 668 evaluated, 667 expanded
[t=0.0536541s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0536641s, 27340 KB] g=58, 679 evaluated, 678 expanded
[t=0.0538649s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0538746s, 27340 KB] g=90, 689 evaluated, 688 expanded
[t=0.0539623s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0539715s, 27340 KB] g=90, 693 evaluated, 692 expanded
[t=0.0540173s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0540275s, 27340 KB] g=91, 695 evaluated, 694 expanded
[t=0.0540646s, 27340 KB] Solution found!
[t=0.0540758s, 27340 KB] Actual search time: 0.0229393s
unstack b17 b7 (1)
put-down b17 (1)
unstack b26 b16 (1)
put-down b26 (1)
unstack b16 b24 (1)
put-down b16 (1)
unstack b9 b25 (1)
put-down b9 (1)
unstack b8 b4 (1)
stack b8 b25 (1)
unstack b14 b15 (1)
stack b14 b9 (1)
unstack b4 b11 (1)
stack b4 b5 (1)
pick-up b11 (1)
stack b11 b17 (1)
unstack b1 b20 (1)
put-down b1 (1)
unstack b15 b22 (1)
stack b15 b20 (1)
unstack b22 b23 (1)
put-down b22 (1)
pick-up b23 (1)
stack b23 b16 (1)
unstack b7 b12 (1)
put-down b7 (1)
unstack b12 b3 (1)
put-down b12 (1)
pick-up b24 (1)
stack b24 b12 (1)
pick-up b3 (1)
stack b3 b14 (1)
unstack b15 b20 (1)
put-down b15 (1)
unstack b20 b19 (1)
stack b20 b11 (1)
pick-up b15 (1)
stack b15 b20 (1)
unstack b19 b21 (1)
stack b19 b26 (1)
unstack b21 b18 (1)
stack b21 b3 (1)
pick-up b1 (1)
stack b1 b21 (1)
unstack b18 b10 (1)
stack b18 b1 (1)
pick-up b10 (1)
stack b10 b4 (1)
pick-up b7 (1)
stack b7 b10 (1)
unstack b24 b12 (1)
put-down b24 (1)
pick-up b12 (1)
stack b12 b18 (1)
pick-up b24 (1)
stack b24 b12 (1)
unstack b8 b25 (1)
put-down b8 (1)
pick-up b25 (1)
stack b25 b24 (1)
pick-up b8 (1)
stack b8 b25 (1)
unstack b7 b10 (1)
put-down b7 (1)
unstack b10 b4 (1)
put-down b10 (1)
pick-up b7 (1)
stack b7 b10 (1)
unstack b4 b5 (1)
put-down b4 (1)
unstack b5 b13 (1)
stack b5 b15 (1)
unstack b13 b6 (1)
stack b13 b19 (1)
pick-up b22 (1)
stack b22 b13 (1)
pick-up b4 (1)
stack b4 b5 (1)
unstack b6 b2 (1)
stack b6 b7 (1)
pick-up b2 (1)
stack b2 b23 (1)
unstack b6 b7 (1)
put-down b6 (1)
unstack b7 b10 (1)
put-down b7 (1)
pick-up b10 (1)
stack b10 b4 (1)
pick-up b7 (1)
stack b7 b10 (1)
pick-up b6 (1)
stack b6 b7 (1)
[t=0.054085s, 27340 KB] Plan length: 92 step(s).
[t=0.054085s, 27340 KB] Plan cost: 92
[t=0.054085s, 27340 KB] Expanded 696 state(s).
[t=0.054085s, 27340 KB] Reopened 0 state(s).
[t=0.054085s, 27340 KB] Evaluated 697 state(s).
[t=0.054085s, 27340 KB] Evaluations: 1394
[t=0.054085s, 27340 KB] Generated 9149 state(s).
[t=0.054085s, 27340 KB] Dead ends: 0 state(s).
[t=0.054085s, 27340 KB] Number of registered states: 697
[t=0.054085s, 27340 KB] Int hash set load factor: 697/1024 = 0.680664
[t=0.054085s, 27340 KB] Int hash set resizes: 10
[t=0.054085s, 27340 KB] Search time: 0.0229905s
[t=0.054085s, 27340 KB] Total time: 0.054085s
Solution found.
Peak memory: 27340 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.23s
