INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_21/bws_problem_21_97.pddl --sas-file output.sas
Parsing...
Parsing: [0.010s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
1472 relevant atoms
987 auxiliary atoms
2459 final queue length
4268 total queue pushes
Completing instantiation... [0.020s CPU, 0.023s wall-clock]
Instantiating: [0.030s CPU, 0.038s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.010s CPU, 0.002s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.001s wall-clock]
Choosing groups...
22 uncovered facts
Choosing groups: [0.000s CPU, 0.002s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.001s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.027s wall-clock]
1302 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
42 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.017s wall-clock]
Reordering and filtering variables...
43 of 43 variables necessary.
22 of 43 mutex groups necessary.
882 of 882 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.007s wall-clock]
Translator variables: 43
Translator derived variables: 0
Translator facts: 506
Translator goal facts: 16
Translator mutex groups: 22
Translator total mutex groups size: 484
Translator operators: 882
Translator axioms: 0
Translator task size: 7601
Translator peak memory: 36456 KB
Writing output... [0.010s CPU, 0.008s wall-clock]
Done! [0.120s CPU, 0.112s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=1.8172e-05s, 24488 KB] reading input...
[t=0.00254647s, 25268 KB] done reading input!
[t=0.00418573s, 25664 KB] Initializing landmark count heuristic...
[t=0.00435871s, 25664 KB] Generating landmark graph...
[t=0.00446888s, 25664 KB] Building a landmark graph with reasonable orders.
[t=0.0045472s, 25664 KB] Initializing Exploration...
[t=0.00487985s, 25852 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0137758s, 26380 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.013855s, 26380 KB] Landmarks generation time: 0.00938013s
[t=0.0138731s, 26380 KB] Discovered 90 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0138901s, 26380 KB] 370 edges
[t=0.0139009s, 26380 KB] approx. reasonable orders
[t=0.0144812s, 26380 KB] approx. obedient reasonable orders
[t=0.0145048s, 26380 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0145149s, 26380 KB] Landmarks generation time: 0.0101511s
[t=0.0145245s, 26380 KB] Discovered 90 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0145326s, 26380 KB] 386 edges
[t=0.014541s, 26380 KB] Landmark graph generation time: 0.0101897s
[t=0.01455s, 26380 KB] Landmark graph contains 90 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.014559s, 26380 KB] Landmark graph contains 386 orderings.
[t=0.0148794s, 26380 KB] Simplifying 3486 unary operators... done! [2646 unary operators]
[t=0.0157285s, 26380 KB] time to simplify: 0.000905709s
[t=0.0158394s, 26380 KB] Initializing additive heuristic...
[t=0.0158537s, 26380 KB] Initializing FF heuristic...
[t=0.0159058s, 26380 KB] Building successor generator...done!
[t=0.0160842s, 26380 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0160931s, 26380 KB] time for successor generation creation: 0.000146741s
[t=0.0161051s, 26380 KB] Variables: 43
[t=0.016114s, 26380 KB] FactPairs: 506
[t=0.0161222s, 26380 KB] Bytes per state: 16
[t=0.016213s, 26380 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0162458s, 26380 KB] 42 initial landmarks, 16 goal landmarks
[t=0.0162928s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0163022s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0163109s, 26380 KB] g=0, 1 evaluated, 0 expanded
[t=0.016324s, 26380 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0163324s, 26380 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0164417s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.016451s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0164591s, 26380 KB] g=2, 5 evaluated, 4 expanded
[t=0.0165136s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0165225s, 26380 KB] g=3, 7 evaluated, 6 expanded
[t=0.0166926s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0167017s, 26380 KB] g=6, 14 evaluated, 13 expanded
[t=0.016758s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0167666s, 26380 KB] g=4, 16 evaluated, 15 expanded
[t=0.0168681s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0168772s, 26380 KB] g=5, 20 evaluated, 19 expanded
[t=0.0169584s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0169722s, 26380 KB] g=6, 23 evaluated, 22 expanded
[t=0.0170587s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0170683s, 26380 KB] g=7, 26 evaluated, 25 expanded
[t=0.0171693s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0171783s, 26380 KB] g=8, 30 evaluated, 29 expanded
[t=0.0172312s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0172406s, 26380 KB] g=9, 32 evaluated, 31 expanded
[t=0.0173869s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0173961s, 26380 KB] g=11, 38 evaluated, 37 expanded
[t=0.017477s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0174895s, 26380 KB] g=13, 41 evaluated, 40 expanded
[t=0.0177501s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0177596s, 26380 KB] g=16, 52 evaluated, 51 expanded
[t=0.0180432s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.018053s, 26380 KB] g=18, 64 evaluated, 63 expanded
[t=0.0183004s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0183095s, 26380 KB] g=20, 74 evaluated, 73 expanded
[t=0.0183684s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0183779s, 26380 KB] g=20, 76 evaluated, 75 expanded
[t=0.0186931s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0187043s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0187126s, 26380 KB] g=22, 89 evaluated, 88 expanded
[t=0.0188992s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0189143s, 26380 KB] g=24, 96 evaluated, 95 expanded
[t=0.0189528s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0189622s, 26380 KB] g=24, 97 evaluated, 96 expanded
[t=0.0192685s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0192798s, 26380 KB] g=26, 110 evaluated, 109 expanded
[t=0.0194745s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.019485s, 26380 KB] g=28, 118 evaluated, 117 expanded
[t=0.0195199s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0195294s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0195376s, 26380 KB] g=28, 119 evaluated, 118 expanded
[t=0.0197045s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0197145s, 26380 KB] g=30, 126 evaluated, 125 expanded
[t=0.0202487s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0202647s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0202735s, 26380 KB] g=34, 148 evaluated, 147 expanded
[t=0.0204512s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0204612s, 26380 KB] g=36, 155 evaluated, 154 expanded
[t=0.020524s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0205334s, 26380 KB] g=36, 157 evaluated, 156 expanded
[t=0.0207673s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0207782s, 26380 KB] g=38, 167 evaluated, 166 expanded
[t=0.0208108s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0208201s, 26380 KB] g=38, 168 evaluated, 167 expanded
[t=0.0211512s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0211653s, 26380 KB] g=40, 182 evaluated, 181 expanded
[t=0.0215558s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0215696s, 26380 KB] g=42, 198 evaluated, 197 expanded
[t=0.0221445s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0221635s, 26380 KB] g=46, 223 evaluated, 222 expanded
[t=0.0222919s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0223205s, 26380 KB] g=48, 228 evaluated, 227 expanded
[t=0.0226293s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0226551s, 26380 KB] g=52, 241 evaluated, 240 expanded
[t=0.0233334s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0233464s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0233549s, 26380 KB] g=54, 269 evaluated, 268 expanded
[t=0.0234387s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0234553s, 26380 KB] g=56, 272 evaluated, 271 expanded
[t=0.02396s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0239748s, 26380 KB] g=58, 293 evaluated, 292 expanded
[t=0.0254811s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0254994s, 26380 KB] g=67, 358 evaluated, 357 expanded
[t=0.0255335s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0255427s, 26380 KB] g=68, 359 evaluated, 358 expanded
[t=0.0258634s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0258728s, 26380 KB] g=70, 373 evaluated, 372 expanded
[t=0.02606s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0260712s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0260793s, 26380 KB] g=72, 381 evaluated, 380 expanded
[t=0.026237s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0262464s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0262548s, 26380 KB] g=74, 388 evaluated, 387 expanded
[t=0.0263857s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0263946s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0264024s, 26380 KB] g=76, 394 evaluated, 393 expanded
[t=0.026496s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0265054s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0265134s, 26380 KB] g=78, 398 evaluated, 397 expanded
[t=0.0269123s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0269239s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0269324s, 26380 KB] g=84, 417 evaluated, 416 expanded
[t=0.0272621s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0272719s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0272797s, 26380 KB] g=92, 432 evaluated, 431 expanded
[t=0.02733s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0273388s, 26380 KB] g=92, 434 evaluated, 433 expanded
[t=0.0274073s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.027416s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.027424s, 26380 KB] g=94, 437 evaluated, 436 expanded
[t=0.027947s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0279567s, 26380 KB] g=108, 467 evaluated, 466 expanded
[t=0.0280121s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0280216s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0280292s, 26380 KB] g=110, 470 evaluated, 469 expanded
[t=0.0280889s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0280977s, 26380 KB] g=114, 474 evaluated, 473 expanded
[t=0.0281146s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0281231s, 26380 KB] g=115, 475 evaluated, 474 expanded
[t=0.028138s, 26380 KB] Solution found!
[t=0.02815s, 26380 KB] Actual search time: 0.0119015s
unstack b12 b20 (1)
put-down b12 (1)
unstack b4 b13 (1)
stack b4 b19 (1)
unstack b13 b16 (1)
put-down b13 (1)
unstack b16 b6 (1)
put-down b16 (1)
unstack b20 b1 (1)
put-down b20 (1)
unstack b6 b10 (1)
put-down b6 (1)
unstack b10 b14 (1)
put-down b10 (1)
unstack b1 b15 (1)
put-down b1 (1)
unstack b14 b18 (1)
put-down b14 (1)
unstack b18 b2 (1)
stack b18 b15 (1)
pick-up b10 (1)
stack b10 b18 (1)
unstack b2 b9 (1)
put-down b2 (1)
unstack b9 b17 (1)
put-down b9 (1)
pick-up b6 (1)
stack b6 b17 (1)
pick-up b1 (1)
stack b1 b2 (1)
unstack b4 b19 (1)
put-down b4 (1)
unstack b19 b11 (1)
stack b19 b13 (1)
unstack b11 b3 (1)
put-down b11 (1)
unstack b1 b2 (1)
put-down b1 (1)
unstack b3 b5 (1)
stack b3 b16 (1)
pick-up b20 (1)
stack b20 b5 (1)
pick-up b1 (1)
stack b1 b2 (1)
pick-up b14 (1)
stack b14 b11 (1)
pick-up b4 (1)
stack b4 b19 (1)
unstack b1 b2 (1)
put-down b1 (1)
unstack b14 b11 (1)
put-down b14 (1)
unstack b20 b5 (1)
put-down b20 (1)
pick-up b5 (1)
stack b5 b14 (1)
pick-up b20 (1)
stack b20 b5 (1)
unstack b10 b18 (1)
put-down b10 (1)
unstack b18 b15 (1)
put-down b18 (1)
pick-up b10 (1)
stack b10 b18 (1)
unstack b15 b7 (1)
put-down b15 (1)
unstack b7 b8 (1)
stack b7 b1 (1)
unstack b8 b21 (1)
stack b8 b3 (1)
pick-up b11 (1)
stack b11 b8 (1)
pick-up b21 (1)
stack b21 b4 (1)
pick-up b15 (1)
stack b15 b7 (1)
pick-up b2 (1)
stack b2 b21 (1)
unstack b10 b18 (1)
put-down b10 (1)
pick-up b18 (1)
stack b18 b15 (1)
pick-up b10 (1)
stack b10 b18 (1)
unstack b20 b5 (1)
put-down b20 (1)
unstack b5 b14 (1)
put-down b5 (1)
pick-up b14 (1)
stack b14 b11 (1)
pick-up b5 (1)
stack b5 b14 (1)
pick-up b20 (1)
stack b20 b5 (1)
unstack b10 b18 (1)
put-down b10 (1)
unstack b18 b15 (1)
put-down b18 (1)
pick-up b10 (1)
stack b10 b18 (1)
unstack b15 b7 (1)
put-down b15 (1)
unstack b7 b1 (1)
put-down b7 (1)
pick-up b1 (1)
stack b1 b2 (1)
pick-up b7 (1)
stack b7 b1 (1)
pick-up b15 (1)
stack b15 b7 (1)
unstack b10 b18 (1)
put-down b10 (1)
pick-up b18 (1)
stack b18 b15 (1)
pick-up b10 (1)
stack b10 b18 (1)
[t=0.0281596s, 26380 KB] Plan length: 116 step(s).
[t=0.0281596s, 26380 KB] Plan cost: 116
[t=0.0281596s, 26380 KB] Expanded 475 state(s).
[t=0.0281596s, 26380 KB] Reopened 0 state(s).
[t=0.0281596s, 26380 KB] Evaluated 476 state(s).
[t=0.0281596s, 26380 KB] Evaluations: 952
[t=0.0281596s, 26380 KB] Generated 4808 state(s).
[t=0.0281596s, 26380 KB] Dead ends: 0 state(s).
[t=0.0281596s, 26380 KB] Number of registered states: 476
[t=0.0281596s, 26380 KB] Int hash set load factor: 476/512 = 0.929688
[t=0.0281596s, 26380 KB] Int hash set resizes: 9
[t=0.0281596s, 26380 KB] Search time: 0.0119469s
[t=0.0281596s, 26380 KB] Total time: 0.0281596s
Solution found.
Peak memory: 26380 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.19s
