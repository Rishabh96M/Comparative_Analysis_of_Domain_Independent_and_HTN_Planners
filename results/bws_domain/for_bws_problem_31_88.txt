INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_31/bws_problem_31_88.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.000s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.018s wall-clock]
3102 relevant atoms
2077 auxiliary atoms
5179 final queue length
9090 total queue pushes
Completing instantiation... [0.040s CPU, 0.034s wall-clock]
Instantiating: [0.060s CPU, 0.054s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.002s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.001s wall-clock]
Choosing groups...
32 uncovered facts
Choosing groups: [0.010s CPU, 0.004s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.010s CPU, 0.013s wall-clock]
Building STRIPS to SAS dictionary... [0.010s CPU, 0.006s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.001s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.002s wall-clock]
Translating task: [0.050s CPU, 0.050s wall-clock]
2852 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
62 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.025s wall-clock]
Reordering and filtering variables...
63 of 63 variables necessary.
32 of 63 mutex groups necessary.
1922 of 1922 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.012s wall-clock]
Translator variables: 63
Translator derived variables: 0
Translator facts: 1056
Translator goal facts: 26
Translator mutex groups: 32
Translator total mutex groups size: 1024
Translator operators: 1922
Translator axioms: 0
Translator task size: 16491
Translator peak memory: 42104 KB
Writing output... [0.000s CPU, 0.010s wall-clock]
Done! [0.170s CPU, 0.175s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.627e-05s, 24488 KB] reading input...
[t=0.00581235s, 26640 KB] done reading input!
[t=0.0069308s, 26904 KB] Initializing landmark count heuristic...
[t=0.00696959s, 26904 KB] Generating landmark graph...
[t=0.00707032s, 27036 KB] Building a landmark graph with reasonable orders.
[t=0.0071625s, 27172 KB] Initializing Exploration...
[t=0.00772702s, 27620 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0361539s, 28672 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0362756s, 28672 KB] Landmarks generation time: 0.0292174s
[t=0.0363025s, 28672 KB] Discovered 141 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0363222s, 28672 KB] 953 edges
[t=0.0363329s, 28672 KB] approx. reasonable orders
[t=0.0461913s, 28672 KB] approx. obedient reasonable orders
[t=0.0468896s, 28672 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0469068s, 28672 KB] Landmarks generation time: 0.0399343s
[t=0.0469182s, 28672 KB] Discovered 141 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0469277s, 28672 KB] 1070 edges
[t=0.0469371s, 28672 KB] Landmark graph generation time: 0.0399749s
[t=0.0469459s, 28672 KB] Landmark graph contains 141 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.046954s, 28672 KB] Landmark graph contains 1070 orderings.
[t=0.0477079s, 28704 KB] Simplifying 7626 unary operators... done! [5766 unary operators]
[t=0.0498984s, 28704 KB] time to simplify: 0.00233429s
[t=0.0501689s, 28704 KB] Initializing additive heuristic...
[t=0.0501909s, 28704 KB] Initializing FF heuristic...
[t=0.0502821s, 28704 KB] Building successor generator...done!
[t=0.0506981s, 28704 KB] peak memory difference for successor generator creation: 0 KB
[t=0.050708s, 28704 KB] time for successor generation creation: 0.000383513s
[t=0.0507292s, 28704 KB] Variables: 63
[t=0.0507375s, 28704 KB] FactPairs: 1056
[t=0.0507468s, 28704 KB] Bytes per state: 24
[t=0.050883s, 28704 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0509265s, 28704 KB] 63 initial landmarks, 26 goal landmarks
[t=0.0510271s, 28704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 78
[t=0.0510374s, 28704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 57
[t=0.0510461s, 28704 KB] g=0, 1 evaluated, 0 expanded
[t=0.051064s, 28704 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 78
[t=0.0510735s, 28704 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 57
[t=0.0513214s, 28704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 77
[t=0.0513354s, 28704 KB] g=1, 6 evaluated, 5 expanded
[t=0.0514343s, 28704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 56
[t=0.0514439s, 28704 KB] g=2, 8 evaluated, 7 expanded
[t=0.0518782s, 28704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 76
[t=0.0518882s, 28704 KB] g=3, 18 evaluated, 17 expanded
[t=0.0519448s, 28704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 55
[t=0.0519535s, 28704 KB] g=4, 19 evaluated, 18 expanded
[t=0.0525185s, 28704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 74
[t=0.0525294s, 28704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 53
[t=0.0525373s, 28704 KB] g=6, 32 evaluated, 31 expanded
[t=0.0527665s, 28704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 73
[t=0.0527761s, 28704 KB] g=7, 37 evaluated, 36 expanded
[t=0.0531854s, 28704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 72
[t=0.0531954s, 28704 KB] g=9, 46 evaluated, 45 expanded
[t=0.0539065s, 28704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 71
[t=0.0539166s, 28704 KB] g=12, 62 evaluated, 61 expanded
[t=0.0542451s, 28704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 52
[t=0.054256s, 28704 KB] g=10, 69 evaluated, 68 expanded
[t=0.0546227s, 28704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 70
[t=0.0546411s, 28704 KB] g=14, 77 evaluated, 76 expanded
[t=0.0548956s, 28704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 51
[t=0.054917s, 28704 KB] g=12, 82 evaluated, 81 expanded
[t=0.055532s, 28704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 69
[t=0.0555424s, 28704 KB] g=16, 96 evaluated, 95 expanded
[t=0.0563782s, 28704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 68
[t=0.056388s, 28704 KB] g=18, 115 evaluated, 114 expanded
[t=0.0573073s, 28704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 67
[t=0.0573183s, 28704 KB] g=20, 136 evaluated, 135 expanded
[t=0.0577354s, 28704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 50
[t=0.0577455s, 28704 KB] g=16, 145 evaluated, 144 expanded
[t=0.0583786s, 28704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 64
[t=0.0583907s, 28704 KB] g=22, 159 evaluated, 158 expanded
[t=0.0596789s, 28704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 63
[t=0.0597019s, 28704 KB] g=24, 185 evaluated, 184 expanded
[t=0.0601499s, 28704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 49
[t=0.0601601s, 28704 KB] g=20, 195 evaluated, 194 expanded
[t=0.0608219s, 28704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 60
[t=0.0608313s, 28704 KB] g=26, 210 evaluated, 209 expanded
[t=0.0609765s, 28704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 47
[t=0.0609856s, 28704 KB] g=22, 213 evaluated, 212 expanded
[t=0.0618616s, 28704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 46
[t=0.0618708s, 28704 KB] g=24, 233 evaluated, 232 expanded
[t=0.0619256s, 28704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.0619345s, 28704 KB] g=28, 234 evaluated, 233 expanded
[t=0.0633135s, 28704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 58
[t=0.0633247s, 28704 KB] g=30, 264 evaluated, 263 expanded
[t=0.0640432s, 28704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0640531s, 28704 KB] g=28, 280 evaluated, 279 expanded
[t=0.0642816s, 28704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 57
[t=0.0642916s, 28704 KB] g=31, 285 evaluated, 284 expanded
[t=0.0647486s, 28704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0647586s, 28704 KB] g=33, 295 evaluated, 294 expanded
[t=0.0649965s, 28704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.0650067s, 28704 KB] g=30, 300 evaluated, 299 expanded
[t=0.0681635s, 28704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0682071s, 28704 KB] g=36, 371 evaluated, 370 expanded
[t=0.0688708s, 28704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0688996s, 28704 KB] g=38, 383 evaluated, 382 expanded
[t=0.0699273s, 28704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0699403s, 28704 KB] g=38, 405 evaluated, 404 expanded
[t=0.0700897s, 28704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0700999s, 28704 KB] g=40, 408 evaluated, 407 expanded
[t=0.0711248s, 28704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0711386s, 28704 KB] g=42, 431 evaluated, 430 expanded
[t=0.0713369s, 28704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0713607s, 28704 KB] g=40, 435 evaluated, 434 expanded
[t=0.0728866s, 28704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0729191s, 28704 KB] g=42, 468 evaluated, 467 expanded
[t=0.0732798s, 28704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.073295s, 28704 KB] g=46, 475 evaluated, 474 expanded
[t=0.0752244s, 28704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0752387s, 28704 KB] g=48, 516 evaluated, 515 expanded
[t=0.0763455s, 28704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0763564s, 28704 KB] g=50, 541 evaluated, 540 expanded
[t=0.0766932s, 28704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0767066s, 28704 KB] g=44, 548 evaluated, 547 expanded
[t=0.0774271s, 28704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.077437s, 28704 KB] g=52, 564 evaluated, 563 expanded
[t=0.078465s, 28704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.078492s, 28704 KB] g=46, 586 evaluated, 585 expanded
[t=0.0805005s, 28704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0805483s, 28704 KB] g=48, 625 evaluated, 624 expanded
[t=0.0825488s, 28704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0825646s, 28704 KB] g=50, 670 evaluated, 669 expanded
[t=0.0840814s, 28704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0840925s, 28704 KB] g=52, 704 evaluated, 703 expanded
[t=0.0850651s, 28704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0850786s, 28704 KB] g=56, 726 evaluated, 725 expanded
[t=0.0858047s, 28704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.085816s, 28704 KB] g=58, 742 evaluated, 741 expanded
[t=0.0863175s, 28704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0863292s, 28704 KB] g=54, 753 evaluated, 752 expanded
[t=0.086476s, 28704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0864861s, 28704 KB] g=60, 756 evaluated, 755 expanded
[t=0.0931019s, 28704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0931339s, 28704 KB] g=64, 900 evaluated, 899 expanded
[t=0.0939195s, 28704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0939306s, 28704 KB] g=66, 917 evaluated, 916 expanded
[t=0.099429s, 28704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0994556s, 28704 KB] g=72, 1035 evaluated, 1034 expanded
[t=0.100159s, 28704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.100171s, 28704 KB] g=74, 1051 evaluated, 1050 expanded
[t=0.100793s, 28704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.100804s, 28704 KB] g=76, 1065 evaluated, 1064 expanded
[t=0.104492s, 28704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.104505s, 28704 KB] g=80, 1150 evaluated, 1149 expanded
[t=0.105179s, 28704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.105193s, 28704 KB] g=82, 1165 evaluated, 1164 expanded
[t=0.105699s, 28704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.105709s, 28704 KB] g=84, 1177 evaluated, 1176 expanded
[t=0.108438s, 28704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.108451s, 28704 KB] g=90, 1240 evaluated, 1239 expanded
[t=0.109861s, 28704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.109888s, 28704 KB] g=96, 1270 evaluated, 1269 expanded
[t=0.110465s, 28704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.110477s, 28704 KB] g=100, 1283 evaluated, 1282 expanded
[t=0.110713s, 28704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.110725s, 28704 KB] g=102, 1288 evaluated, 1287 expanded
[t=0.131974s, 28704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.13207s, 28704 KB] g=120, 1766 evaluated, 1765 expanded
[t=0.132299s, 28704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.13231s, 28704 KB] g=122, 1771 evaluated, 1770 expanded
[t=0.13376s, 28704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.133771s, 28704 KB] g=130, 1804 evaluated, 1803 expanded
[t=0.133956s, 28704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.133966s, 28704 KB] g=132, 1808 evaluated, 1807 expanded
[t=0.141692s, 28704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.141732s, 28704 KB] g=162, 2003 evaluated, 2002 expanded
[t=0.142478s, 28704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.142489s, 28704 KB] g=166, 2022 evaluated, 2021 expanded
[t=0.14269s, 28704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.142701s, 28704 KB] g=168, 2027 evaluated, 2026 expanded
[t=0.143989s, 28704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.144002s, 28704 KB] g=180, 2062 evaluated, 2061 expanded
[t=0.144344s, 28704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.144354s, 28704 KB] g=184, 2072 evaluated, 2071 expanded
[t=0.144417s, 28704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.144425s, 28704 KB] g=185, 2074 evaluated, 2073 expanded
[t=0.144444s, 28704 KB] Solution found!
[t=0.14446s, 28704 KB] Actual search time: 0.0935293s
unstack b13 b23 (1)
put-down b13 (1)
unstack b7 b30 (1)
stack b7 b23 (1)
unstack b21 b27 (1)
stack b21 b13 (1)
unstack b11 b12 (1)
put-down b11 (1)
unstack b12 b31 (1)
stack b12 b11 (1)
unstack b31 b16 (1)
put-down b31 (1)
unstack b19 b29 (1)
put-down b19 (1)
unstack b16 b22 (1)
stack b16 b29 (1)
unstack b22 b28 (1)
put-down b22 (1)
unstack b28 b6 (1)
put-down b28 (1)
pick-up b19 (1)
stack b19 b28 (1)
unstack b6 b18 (1)
stack b6 b30 (1)
unstack b18 b9 (1)
put-down b18 (1)
unstack b9 b26 (1)
put-down b9 (1)
unstack b26 b20 (1)
stack b26 b27 (1)
unstack b20 b15 (1)
put-down b20 (1)
unstack b15 b1 (1)
put-down b15 (1)
unstack b1 b17 (1)
put-down b1 (1)
unstack b17 b25 (1)
stack b17 b1 (1)
pick-up b22 (1)
stack b22 b17 (1)
unstack b25 b10 (1)
stack b25 b15 (1)
unstack b10 b5 (1)
put-down b10 (1)
unstack b5 b14 (1)
stack b5 b12 (1)
unstack b14 b3 (1)
put-down b14 (1)
pick-up b20 (1)
stack b20 b5 (1)
pick-up b3 (1)
stack b3 b19 (1)
unstack b16 b29 (1)
put-down b16 (1)
unstack b29 b8 (1)
stack b29 b21 (1)
pick-up b10 (1)
stack b10 b8 (1)
pick-up b16 (1)
stack b16 b29 (1)
unstack b10 b8 (1)
put-down b10 (1)
pick-up b8 (1)
stack b8 b16 (1)
pick-up b10 (1)
stack b10 b8 (1)
unstack b26 b27 (1)
put-down b26 (1)
unstack b27 b24 (1)
stack b27 b20 (1)
unstack b24 b2 (1)
stack b24 b22 (1)
pick-up b18 (1)
stack b18 b2 (1)
pick-up b26 (1)
stack b26 b27 (1)
unstack b18 b2 (1)
put-down b18 (1)
unstack b2 b4 (1)
stack b2 b14 (1)
pick-up b18 (1)
stack b18 b2 (1)
pick-up b4 (1)
stack b4 b3 (1)
unstack b25 b15 (1)
put-down b25 (1)
pick-up b15 (1)
stack b15 b24 (1)
pick-up b25 (1)
stack b25 b15 (1)
unstack b6 b30 (1)
put-down b6 (1)
pick-up b30 (1)
stack b30 b26 (1)
pick-up b6 (1)
stack b6 b30 (1)
unstack b7 b23 (1)
put-down b7 (1)
pick-up b23 (1)
stack b23 b31 (1)
pick-up b7 (1)
stack b7 b23 (1)
unstack b25 b15 (1)
put-down b25 (1)
unstack b15 b24 (1)
put-down b15 (1)
unstack b24 b22 (1)
put-down b24 (1)
pick-up b15 (1)
stack b15 b24 (1)
pick-up b25 (1)
stack b25 b15 (1)
unstack b22 b17 (1)
put-down b22 (1)
unstack b17 b1 (1)
put-down b17 (1)
pick-up b1 (1)
stack b1 b4 (1)
pick-up b17 (1)
stack b17 b1 (1)
pick-up b22 (1)
stack b22 b17 (1)
unstack b25 b15 (1)
put-down b25 (1)
unstack b15 b24 (1)
put-down b15 (1)
pick-up b24 (1)
stack b24 b22 (1)
pick-up b15 (1)
stack b15 b24 (1)
pick-up b25 (1)
stack b25 b15 (1)
unstack b6 b30 (1)
put-down b6 (1)
unstack b30 b26 (1)
put-down b30 (1)
pick-up b6 (1)
stack b6 b30 (1)
unstack b26 b27 (1)
put-down b26 (1)
unstack b27 b20 (1)
put-down b27 (1)
pick-up b26 (1)
stack b26 b27 (1)
unstack b6 b30 (1)
put-down b6 (1)
pick-up b30 (1)
stack b30 b26 (1)
pick-up b6 (1)
stack b6 b30 (1)
unstack b20 b5 (1)
put-down b20 (1)
unstack b5 b12 (1)
put-down b5 (1)
pick-up b20 (1)
stack b20 b5 (1)
unstack b12 b11 (1)
put-down b12 (1)
pick-up b11 (1)
stack b11 b9 (1)
pick-up b12 (1)
stack b12 b11 (1)
unstack b20 b5 (1)
put-down b20 (1)
pick-up b5 (1)
stack b5 b12 (1)
pick-up b20 (1)
stack b20 b5 (1)
unstack b6 b30 (1)
put-down b6 (1)
unstack b30 b26 (1)
put-down b30 (1)
pick-up b6 (1)
stack b6 b30 (1)
unstack b26 b27 (1)
put-down b26 (1)
pick-up b27 (1)
stack b27 b20 (1)
pick-up b26 (1)
stack b26 b27 (1)
unstack b6 b30 (1)
put-down b6 (1)
pick-up b30 (1)
stack b30 b26 (1)
pick-up b6 (1)
stack b6 b30 (1)
[t=0.144469s, 28704 KB] Plan length: 186 step(s).
[t=0.144469s, 28704 KB] Plan cost: 186
[t=0.144469s, 28704 KB] Expanded 2074 state(s).
[t=0.144469s, 28704 KB] Reopened 0 state(s).
[t=0.144469s, 28704 KB] Evaluated 2075 state(s).
[t=0.144469s, 28704 KB] Evaluations: 4150
[t=0.144469s, 28704 KB] Generated 28592 state(s).
[t=0.144469s, 28704 KB] Dead ends: 0 state(s).
[t=0.144469s, 28704 KB] Number of registered states: 2075
[t=0.144469s, 28704 KB] Int hash set load factor: 2075/4096 = 0.506592
[t=0.144469s, 28704 KB] Int hash set resizes: 12
[t=0.144469s, 28704 KB] Search time: 0.0935867s
[t=0.144469s, 28704 KB] Total time: 0.144469s
Solution found.
Peak memory: 28704 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.37s
