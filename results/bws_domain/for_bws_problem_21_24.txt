INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_21/bws_problem_21_24.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.009s wall-clock]
1472 relevant atoms
987 auxiliary atoms
2459 final queue length
4269 total queue pushes
Completing instantiation... [0.020s CPU, 0.016s wall-clock]
Instantiating: [0.030s CPU, 0.027s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
22 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.006s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.022s wall-clock]
1302 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
42 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.012s wall-clock]
Reordering and filtering variables...
43 of 43 variables necessary.
22 of 43 mutex groups necessary.
882 of 882 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.005s wall-clock]
Translator variables: 43
Translator derived variables: 0
Translator facts: 506
Translator goal facts: 17
Translator mutex groups: 22
Translator total mutex groups size: 484
Translator operators: 882
Translator axioms: 0
Translator task size: 7602
Translator peak memory: 36456 KB
Writing output... [0.000s CPU, 0.005s wall-clock]
Done! [0.080s CPU, 0.081s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=1.8619e-05s, 24488 KB] reading input...
[t=0.0026424s, 25268 KB] done reading input!
[t=0.00351689s, 25664 KB] Initializing landmark count heuristic...
[t=0.00354819s, 25664 KB] Generating landmark graph...
[t=0.00360454s, 25664 KB] Building a landmark graph with reasonable orders.
[t=0.003659s, 25664 KB] Initializing Exploration...
[t=0.00392531s, 25852 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0130207s, 26248 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0132163s, 26248 KB] Landmarks generation time: 0.00964481s
[t=0.0132791s, 26248 KB] Discovered 94 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.013309s, 26248 KB] 329 edges
[t=0.0133293s, 26248 KB] approx. reasonable orders
[t=0.0164785s, 26248 KB] approx. obedient reasonable orders
[t=0.0167627s, 26248 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0167757s, 26248 KB] Landmarks generation time: 0.0132249s
[t=0.0167856s, 26248 KB] Discovered 94 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0167943s, 26248 KB] 401 edges
[t=0.0168026s, 26248 KB] Landmark graph generation time: 0.013261s
[t=0.0168109s, 26248 KB] Landmark graph contains 94 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0168187s, 26248 KB] Landmark graph contains 401 orderings.
[t=0.0171303s, 26248 KB] Simplifying 3486 unary operators... done! [2646 unary operators]
[t=0.0179166s, 26380 KB] time to simplify: 0.000838721s
[t=0.0180224s, 26380 KB] Initializing additive heuristic...
[t=0.018036s, 26380 KB] Initializing FF heuristic...
[t=0.018084s, 26380 KB] Building successor generator...done!
[t=0.0182557s, 26380 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0182637s, 26380 KB] time for successor generation creation: 0.000142179s
[t=0.0182745s, 26380 KB] Variables: 43
[t=0.0182824s, 26380 KB] FactPairs: 506
[t=0.0182902s, 26380 KB] Bytes per state: 16
[t=0.0183751s, 26380 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0184168s, 26380 KB] 43 initial landmarks, 17 goal landmarks
[t=0.0184714s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0184816s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0184897s, 26380 KB] g=0, 1 evaluated, 0 expanded
[t=0.0185028s, 26380 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0185113s, 26380 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0186408s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0186497s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0186578s, 26380 KB] g=2, 6 evaluated, 5 expanded
[t=0.0187935s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0188024s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0188102s, 26380 KB] g=4, 11 evaluated, 10 expanded
[t=0.0189339s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0189441s, 26380 KB] g=6, 16 evaluated, 15 expanded
[t=0.0189788s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0189875s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0189955s, 26380 KB] g=6, 17 evaluated, 16 expanded
[t=0.0191217s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0191309s, 26380 KB] g=8, 22 evaluated, 21 expanded
[t=0.019171s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0191797s, 26380 KB] g=8, 23 evaluated, 22 expanded
[t=0.0193261s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0193348s, 26380 KB] g=10, 29 evaluated, 28 expanded
[t=0.0194376s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0194462s, 26380 KB] g=10, 33 evaluated, 32 expanded
[t=0.0195458s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0195544s, 26380 KB] g=12, 37 evaluated, 36 expanded
[t=0.0198194s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.019837s, 26380 KB] g=12, 48 evaluated, 47 expanded
[t=0.019872s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0198807s, 26380 KB] g=14, 49 evaluated, 48 expanded
[t=0.0200774s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0200862s, 26380 KB] g=16, 57 evaluated, 56 expanded
[t=0.0202345s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0202436s, 26380 KB] g=14, 63 evaluated, 62 expanded
[t=0.0203363s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0203475s, 26380 KB] g=18, 66 evaluated, 65 expanded
[t=0.020854s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0208882s, 26380 KB] g=15, 77 evaluated, 76 expanded
[t=0.0209331s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0209425s, 26380 KB] g=16, 78 evaluated, 77 expanded
[t=0.0214176s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0214274s, 26380 KB] g=18, 97 evaluated, 96 expanded
[t=0.0214683s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0214811s, 26380 KB] g=24, 98 evaluated, 97 expanded
[t=0.0216683s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.021677s, 26380 KB] g=19, 106 evaluated, 105 expanded
[t=0.0220536s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0220638s, 26380 KB] g=22, 122 evaluated, 121 expanded
[t=0.0226068s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0226233s, 26380 KB] g=24, 143 evaluated, 142 expanded
[t=0.0231629s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0231911s, 26380 KB] g=30, 165 evaluated, 164 expanded
[t=0.023371s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.023381s, 26380 KB] g=26, 172 evaluated, 171 expanded
[t=0.023491s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0235013s, 26380 KB] g=32, 176 evaluated, 175 expanded
[t=0.0237489s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0237605s, 26380 KB] g=28, 186 evaluated, 185 expanded
[t=0.024216s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0242413s, 26380 KB] g=30, 205 evaluated, 204 expanded
[t=0.0243833s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.024403s, 26380 KB] g=31, 210 evaluated, 209 expanded
[t=0.0244427s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0244565s, 26380 KB] g=32, 211 evaluated, 210 expanded
[t=0.0253559s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0253896s, 26380 KB] g=38, 249 evaluated, 248 expanded
[t=0.0257121s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0257393s, 26380 KB] g=40, 258 evaluated, 257 expanded
[t=0.0260395s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0260508s, 26380 KB] g=42, 271 evaluated, 270 expanded
[t=0.0273736s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0273969s, 26380 KB] g=48, 330 evaluated, 329 expanded
[t=0.0310047s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0310239s, 26380 KB] g=62, 489 evaluated, 488 expanded
[t=0.0321323s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0321439s, 26380 KB] g=66, 538 evaluated, 537 expanded
[t=0.0323545s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.032364s, 26380 KB] g=68, 547 evaluated, 546 expanded
[t=0.0331384s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0331513s, 26380 KB] g=72, 581 evaluated, 580 expanded
[t=0.0333123s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0333219s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0333299s, 26380 KB] g=74, 588 evaluated, 587 expanded
[t=0.0333599s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0333684s, 26380 KB] g=75, 589 evaluated, 588 expanded
[t=0.0334618s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0334706s, 26380 KB] g=76, 593 evaluated, 592 expanded
[t=0.0334989s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0335073s, 26380 KB] g=77, 594 evaluated, 593 expanded
[t=0.0336541s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.033663s, 26380 KB] g=81, 601 evaluated, 600 expanded
[t=0.0338452s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.033854s, 26380 KB] g=83, 610 evaluated, 609 expanded
[t=0.0339738s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0339834s, 26380 KB] g=85, 616 evaluated, 615 expanded
[t=0.0341623s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0341716s, 26380 KB] g=87, 625 evaluated, 624 expanded
[t=0.034374s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0343836s, 26380 KB] g=89, 636 evaluated, 635 expanded
[t=0.0347334s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0347461s, 26380 KB] g=84, 654 evaluated, 653 expanded
[t=0.0347951s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0348043s, 26380 KB] g=85, 656 evaluated, 655 expanded
[t=0.0348819s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0348911s, 26380 KB] g=86, 659 evaluated, 658 expanded
[t=0.0349181s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0349267s, 26380 KB] g=87, 660 evaluated, 659 expanded
[t=0.035004s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0350126s, 26380 KB] g=91, 664 evaluated, 663 expanded
[t=0.0350998s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0351085s, 26380 KB] g=93, 669 evaluated, 668 expanded
[t=0.0352047s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0352137s, 26380 KB] g=95, 675 evaluated, 674 expanded
[t=0.0353465s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0353584s, 26380 KB] g=96, 683 evaluated, 682 expanded
[t=0.0353824s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0353981s, 26380 KB] g=97, 684 evaluated, 683 expanded
[t=0.0354802s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0354911s, 26380 KB] g=100, 689 evaluated, 688 expanded
[t=0.0355223s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0355349s, 26380 KB] g=101, 690 evaluated, 689 expanded
[t=0.0356151s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0356284s, 26380 KB] g=102, 693 evaluated, 692 expanded
[t=0.0356501s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0356592s, 26380 KB] g=103, 694 evaluated, 693 expanded
[t=0.0357079s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0357167s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0357246s, 26380 KB] g=106, 697 evaluated, 696 expanded
[t=0.0357418s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0357503s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0357613s, 26380 KB] g=107, 698 evaluated, 697 expanded
[t=0.0357766s, 26380 KB] Solution found!
[t=0.0357883s, 26380 KB] Actual search time: 0.0173663s
unstack b19 b3 (1)
put-down b19 (1)
unstack b7 b4 (1)
put-down b7 (1)
unstack b17 b13 (1)
stack b17 b19 (1)
unstack b13 b21 (1)
put-down b13 (1)
unstack b14 b5 (1)
put-down b14 (1)
unstack b21 b10 (1)
put-down b21 (1)
unstack b3 b8 (1)
put-down b3 (1)
unstack b8 b16 (1)
stack b8 b7 (1)
unstack b4 b20 (1)
put-down b4 (1)
unstack b20 b1 (1)
put-down b20 (1)
unstack b5 b9 (1)
stack b5 b10 (1)
unstack b16 b2 (1)
put-down b16 (1)
pick-up b3 (1)
stack b3 b5 (1)
unstack b1 b12 (1)
stack b1 b3 (1)
unstack b12 b18 (1)
put-down b12 (1)
unstack b18 b11 (1)
stack b18 b16 (1)
pick-up b11 (1)
stack b11 b12 (1)
pick-up b13 (1)
stack b13 b14 (1)
pick-up b2 (1)
stack b2 b4 (1)
pick-up b21 (1)
stack b21 b13 (1)
pick-up b9 (1)
stack b9 b2 (1)
unstack b11 b12 (1)
put-down b11 (1)
pick-up b12 (1)
stack b12 b9 (1)
pick-up b11 (1)
stack b11 b12 (1)
unstack b1 b3 (1)
put-down b1 (1)
unstack b3 b5 (1)
put-down b3 (1)
pick-up b1 (1)
stack b1 b3 (1)
unstack b5 b10 (1)
put-down b5 (1)
unstack b10 b6 (1)
put-down b10 (1)
pick-up b20 (1)
stack b20 b6 (1)
pick-up b5 (1)
stack b5 b10 (1)
unstack b1 b3 (1)
put-down b1 (1)
pick-up b3 (1)
stack b3 b5 (1)
pick-up b1 (1)
stack b1 b3 (1)
unstack b20 b6 (1)
put-down b20 (1)
unstack b6 b15 (1)
stack b6 b1 (1)
pick-up b15 (1)
stack b15 b17 (1)
pick-up b20 (1)
stack b20 b6 (1)
unstack b21 b13 (1)
put-down b21 (1)
unstack b13 b14 (1)
put-down b13 (1)
pick-up b14 (1)
stack b14 b15 (1)
pick-up b13 (1)
stack b13 b14 (1)
pick-up b21 (1)
stack b21 b13 (1)
unstack b11 b12 (1)
put-down b11 (1)
unstack b12 b9 (1)
put-down b12 (1)
unstack b9 b2 (1)
put-down b9 (1)
unstack b2 b4 (1)
put-down b2 (1)
pick-up b4 (1)
stack b4 b21 (1)
pick-up b11 (1)
stack b11 b12 (1)
pick-up b2 (1)
stack b2 b4 (1)
pick-up b9 (1)
stack b9 b2 (1)
unstack b11 b12 (1)
put-down b11 (1)
pick-up b12 (1)
stack b12 b9 (1)
pick-up b11 (1)
stack b11 b12 (1)
[t=0.0357981s, 26380 KB] Plan length: 108 step(s).
[t=0.0357981s, 26380 KB] Plan cost: 108
[t=0.0357981s, 26380 KB] Expanded 698 state(s).
[t=0.0357981s, 26380 KB] Reopened 0 state(s).
[t=0.0357981s, 26380 KB] Evaluated 699 state(s).
[t=0.0357981s, 26380 KB] Evaluations: 1398
[t=0.0357981s, 26380 KB] Generated 6914 state(s).
[t=0.0357981s, 26380 KB] Dead ends: 0 state(s).
[t=0.0357981s, 26380 KB] Number of registered states: 699
[t=0.0357981s, 26380 KB] Int hash set load factor: 699/1024 = 0.682617
[t=0.0357981s, 26380 KB] Int hash set resizes: 10
[t=0.0357981s, 26380 KB] Search time: 0.0174236s
[t=0.0357981s, 26380 KB] Total time: 0.0357981s
Solution found.
Peak memory: 26380 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.17s
