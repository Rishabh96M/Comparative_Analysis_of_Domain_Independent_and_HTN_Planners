INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_21/bws_problem_21_33.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.009s wall-clock]
1472 relevant atoms
987 auxiliary atoms
2459 final queue length
4269 total queue pushes
Completing instantiation... [0.020s CPU, 0.015s wall-clock]
Instantiating: [0.030s CPU, 0.025s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
22 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.006s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.002s wall-clock]
Translating task: [0.020s CPU, 0.022s wall-clock]
1302 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
42 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.011s wall-clock]
Reordering and filtering variables...
43 of 43 variables necessary.
22 of 43 mutex groups necessary.
882 of 882 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 43
Translator derived variables: 0
Translator facts: 506
Translator goal facts: 19
Translator mutex groups: 22
Translator total mutex groups size: 484
Translator operators: 882
Translator axioms: 0
Translator task size: 7604
Translator peak memory: 36456 KB
Writing output... [0.010s CPU, 0.004s wall-clock]
Done! [0.080s CPU, 0.079s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=1.9557e-05s, 24488 KB] reading input...
[t=0.00242243s, 25268 KB] done reading input!
[t=0.00324179s, 25664 KB] Initializing landmark count heuristic...
[t=0.0032728s, 25664 KB] Generating landmark graph...
[t=0.00332854s, 25664 KB] Building a landmark graph with reasonable orders.
[t=0.00338141s, 25664 KB] Initializing Exploration...
[t=0.00364019s, 25852 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0130587s, 26380 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0132227s, 26380 KB] Landmarks generation time: 0.00989983s
[t=0.0132416s, 26380 KB] Discovered 93 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0132831s, 26380 KB] 640 edges
[t=0.0132961s, 26380 KB] approx. reasonable orders
[t=0.0147499s, 26380 KB] approx. obedient reasonable orders
[t=0.0148152s, 26380 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0148261s, 26380 KB] Landmarks generation time: 0.0115514s
[t=0.0148369s, 26380 KB] Discovered 93 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0148457s, 26380 KB] 669 edges
[t=0.0148559s, 26380 KB] Landmark graph generation time: 0.011591s
[t=0.0148655s, 26380 KB] Landmark graph contains 93 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0148748s, 26380 KB] Landmark graph contains 669 orderings.
[t=0.0152664s, 26380 KB] Simplifying 3486 unary operators... done! [2646 unary operators]
[t=0.0161878s, 26380 KB] time to simplify: 0.000982426s
[t=0.0163066s, 26380 KB] Initializing additive heuristic...
[t=0.0163207s, 26380 KB] Initializing FF heuristic...
[t=0.0163744s, 26380 KB] Building successor generator...done!
[t=0.0165976s, 26536 KB] peak memory difference for successor generator creation: 156 KB
[t=0.0166068s, 26536 KB] time for successor generation creation: 0.000187976s
[t=0.0166196s, 26536 KB] Variables: 43
[t=0.0166282s, 26536 KB] FactPairs: 506
[t=0.0166364s, 26536 KB] Bytes per state: 16
[t=0.0167277s, 26536 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0167706s, 26536 KB] 42 initial landmarks, 19 goal landmarks
[t=0.016833s, 26536 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0168483s, 26536 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0168572s, 26536 KB] g=0, 1 evaluated, 0 expanded
[t=0.0168716s, 26536 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0168805s, 26536 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0170382s, 26536 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0170542s, 26536 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0170626s, 26536 KB] g=2, 6 evaluated, 5 expanded
[t=0.017186s, 26536 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0171961s, 26536 KB] g=4, 11 evaluated, 10 expanded
[t=0.0172281s, 26536 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0172371s, 26536 KB] g=4, 12 evaluated, 11 expanded
[t=0.0174249s, 26536 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.017435s, 26536 KB] g=6, 20 evaluated, 19 expanded
[t=0.0176685s, 26536 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0176807s, 26536 KB] g=8, 30 evaluated, 29 expanded
[t=0.0179463s, 26536 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0179579s, 26536 KB] g=10, 41 evaluated, 40 expanded
[t=0.01823s, 26536 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0182397s, 26536 KB] g=12, 53 evaluated, 52 expanded
[t=0.0185306s, 26536 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0185409s, 26536 KB] g=14, 65 evaluated, 64 expanded
[t=0.0186376s, 26536 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0186468s, 26536 KB] g=14, 69 evaluated, 68 expanded
[t=0.0188527s, 26536 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0188619s, 26536 KB] g=15, 78 evaluated, 77 expanded
[t=0.0193238s, 26536 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0193483s, 26536 KB] g=18, 97 evaluated, 96 expanded
[t=0.0198774s, 26536 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0198873s, 26536 KB] g=20, 121 evaluated, 120 expanded
[t=0.0204675s, 26536 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0204771s, 26536 KB] g=22, 147 evaluated, 146 expanded
[t=0.0205549s, 26536 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0205639s, 26536 KB] g=20, 150 evaluated, 149 expanded
[t=0.0209592s, 26536 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0209682s, 26536 KB] g=22, 168 evaluated, 167 expanded
[t=0.021087s, 26536 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0210959s, 26536 KB] g=24, 173 evaluated, 172 expanded
[t=0.0216612s, 26536 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0216713s, 26536 KB] g=26, 198 evaluated, 197 expanded
[t=0.0221705s, 26536 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0221885s, 26536 KB] g=24, 219 evaluated, 218 expanded
[t=0.0223423s, 26536 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0223522s, 26536 KB] g=28, 225 evaluated, 224 expanded
[t=0.0227922s, 26536 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0228021s, 26536 KB] g=30, 244 evaluated, 243 expanded
[t=0.0229486s, 26536 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0229581s, 26536 KB] g=30, 250 evaluated, 249 expanded
[t=0.0231665s, 26536 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.023179s, 26536 KB] g=32, 257 evaluated, 256 expanded
[t=0.0236539s, 26536 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0236642s, 26536 KB] g=34, 277 evaluated, 276 expanded
[t=0.0242659s, 26536 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.024283s, 26536 KB] g=39, 302 evaluated, 301 expanded
[t=0.0243455s, 26536 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0243548s, 26536 KB] g=40, 304 evaluated, 303 expanded
[t=0.0247904s, 26536 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0248005s, 26536 KB] g=42, 322 evaluated, 321 expanded
[t=0.025098s, 26536 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0251117s, 26536 KB] g=44, 334 evaluated, 333 expanded
[t=0.0253129s, 26536 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0253223s, 26536 KB] g=44, 342 evaluated, 341 expanded
[t=0.0254239s, 26536 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0254337s, 26536 KB] g=46, 346 evaluated, 345 expanded
[t=0.0257667s, 26536 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0257772s, 26536 KB] g=46, 360 evaluated, 359 expanded
[t=0.0260606s, 26536 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0260701s, 26536 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0260786s, 26536 KB] g=48, 372 evaluated, 371 expanded
[t=0.0267328s, 26536 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0267522s, 26536 KB] g=52, 399 evaluated, 398 expanded
[t=0.0269177s, 26536 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0269288s, 26536 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.026943s, 26536 KB] g=54, 405 evaluated, 404 expanded
[t=0.0276476s, 26536 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0276577s, 26536 KB] g=58, 434 evaluated, 433 expanded
[t=0.0278007s, 26536 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0278095s, 26536 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0278176s, 26536 KB] g=60, 439 evaluated, 438 expanded
[t=0.0286927s, 26536 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0287023s, 26536 KB] g=69, 476 evaluated, 475 expanded
[t=0.0287354s, 26536 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0287443s, 26536 KB] g=70, 477 evaluated, 476 expanded
[t=0.0288697s, 26536 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0288787s, 26536 KB] g=72, 482 evaluated, 481 expanded
[t=0.0294022s, 26536 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0294173s, 26536 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0294272s, 26536 KB] g=78, 505 evaluated, 504 expanded
[t=0.0339542s, 26536 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0339753s, 26536 KB] g=94, 701 evaluated, 700 expanded
[t=0.034308s, 26536 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0343196s, 26536 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0343295s, 26536 KB] g=100, 715 evaluated, 714 expanded
[t=0.0436049s, 26536 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.043651s, 26536 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0436608s, 26536 KB] g=142, 1121 evaluated, 1120 expanded
[t=0.0971688s, 26640 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0972439s, 26640 KB] g=114, 3407 evaluated, 3406 expanded
[t=0.097677s, 26772 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.097706s, 26772 KB] g=118, 3423 evaluated, 3422 expanded
[t=0.0978067s, 26772 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0978173s, 26772 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0978256s, 26772 KB] g=120, 3427 evaluated, 3426 expanded
[t=0.098511s, 26772 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0985238s, 26772 KB] g=128, 3457 evaluated, 3456 expanded
[t=0.0987371s, 26772 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0987476s, 26772 KB] g=132, 3466 evaluated, 3465 expanded
[t=0.0988199s, 26772 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0988289s, 26772 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0988372s, 26772 KB] g=134, 3469 evaluated, 3468 expanded
[t=0.12002s, 26904 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.120089s, 26904 KB] g=182, 4439 evaluated, 4438 expanded
[t=0.120172s, 26904 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.120183s, 26904 KB] g=184, 4443 evaluated, 4442 expanded
[t=0.120669s, 26904 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.120686s, 26904 KB] g=192, 4472 evaluated, 4471 expanded
[t=0.120743s, 26904 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.120755s, 26904 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.120763s, 26904 KB] g=194, 4475 evaluated, 4474 expanded
[t=0.121417s, 26904 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.12143s, 26904 KB] g=210, 4518 evaluated, 4517 expanded
[t=0.121558s, 26904 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.121574s, 26904 KB] g=218, 4528 evaluated, 4527 expanded
[t=0.121628s, 26904 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.121639s, 26904 KB] g=222, 4532 evaluated, 4531 expanded
[t=0.121664s, 26904 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.121674s, 26904 KB] g=223, 4533 evaluated, 4532 expanded
[t=0.12169s, 26904 KB] Solution found!
[t=0.121714s, 26904 KB] Actual search time: 0.104939s
unstack b6 b13 (1)
put-down b6 (1)
unstack b5 b11 (1)
put-down b5 (1)
unstack b11 b10 (1)
put-down b11 (1)
unstack b10 b16 (1)
put-down b10 (1)
unstack b16 b18 (1)
put-down b16 (1)
unstack b18 b15 (1)
put-down b18 (1)
unstack b15 b14 (1)
put-down b15 (1)
unstack b14 b12 (1)
put-down b14 (1)
unstack b12 b20 (1)
put-down b12 (1)
unstack b20 b7 (1)
stack b20 b11 (1)
unstack b7 b21 (1)
stack b7 b13 (1)
unstack b21 b17 (1)
stack b21 b16 (1)
pick-up b12 (1)
stack b12 b21 (1)
pick-up b10 (1)
stack b10 b12 (1)
pick-up b14 (1)
stack b14 b5 (1)
pick-up b1 (1)
stack b1 b18 (1)
pick-up b4 (1)
stack b4 b1 (1)
unstack b17 b2 (1)
put-down b17 (1)
unstack b14 b5 (1)
put-down b14 (1)
unstack b2 b8 (1)
stack b2 b10 (1)
unstack b8 b3 (1)
stack b8 b17 (1)
pick-up b15 (1)
stack b15 b8 (1)
pick-up b5 (1)
stack b5 b3 (1)
pick-up b14 (1)
stack b14 b5 (1)
unstack b7 b13 (1)
put-down b7 (1)
pick-up b13 (1)
stack b13 b4 (1)
pick-up b7 (1)
stack b7 b13 (1)
unstack b20 b11 (1)
put-down b20 (1)
pick-up b11 (1)
stack b11 b7 (1)
pick-up b20 (1)
stack b20 b11 (1)
unstack b15 b8 (1)
put-down b15 (1)
unstack b8 b17 (1)
put-down b8 (1)
pick-up b15 (1)
stack b15 b8 (1)
pick-up b17 (1)
stack b17 b2 (1)
unstack b15 b8 (1)
put-down b15 (1)
pick-up b8 (1)
stack b8 b17 (1)
pick-up b15 (1)
stack b15 b8 (1)
unstack b14 b5 (1)
put-down b14 (1)
unstack b5 b3 (1)
put-down b5 (1)
pick-up b14 (1)
stack b14 b5 (1)
unstack b3 b9 (1)
put-down b3 (1)
unstack b9 b19 (1)
stack b9 b15 (1)
pick-up b3 (1)
stack b3 b9 (1)
unstack b14 b5 (1)
put-down b14 (1)
pick-up b5 (1)
stack b5 b3 (1)
pick-up b14 (1)
stack b14 b5 (1)
unstack b20 b11 (1)
put-down b20 (1)
unstack b11 b7 (1)
put-down b11 (1)
unstack b7 b13 (1)
put-down b7 (1)
pick-up b11 (1)
stack b11 b7 (1)
pick-up b20 (1)
stack b20 b11 (1)
unstack b13 b4 (1)
put-down b13 (1)
unstack b4 b1 (1)
put-down b4 (1)
unstack b1 b18 (1)
put-down b1 (1)
pick-up b13 (1)
stack b13 b4 (1)
pick-up b18 (1)
stack b18 b19 (1)
pick-up b1 (1)
stack b1 b18 (1)
unstack b13 b4 (1)
put-down b13 (1)
pick-up b4 (1)
stack b4 b1 (1)
pick-up b13 (1)
stack b13 b4 (1)
unstack b20 b11 (1)
put-down b20 (1)
unstack b11 b7 (1)
put-down b11 (1)
pick-up b20 (1)
stack b20 b11 (1)
pick-up b7 (1)
stack b7 b13 (1)
unstack b20 b11 (1)
put-down b20 (1)
pick-up b11 (1)
stack b11 b7 (1)
pick-up b20 (1)
stack b20 b11 (1)
unstack b14 b5 (1)
put-down b14 (1)
unstack b5 b3 (1)
put-down b5 (1)
pick-up b14 (1)
stack b14 b5 (1)
unstack b3 b9 (1)
put-down b3 (1)
unstack b9 b15 (1)
put-down b9 (1)
unstack b15 b8 (1)
put-down b15 (1)
pick-up b9 (1)
stack b9 b15 (1)
pick-up b3 (1)
stack b3 b9 (1)
unstack b14 b5 (1)
put-down b14 (1)
pick-up b5 (1)
stack b5 b3 (1)
pick-up b14 (1)
stack b14 b5 (1)
unstack b8 b17 (1)
put-down b8 (1)
unstack b17 b2 (1)
put-down b17 (1)
unstack b2 b10 (1)
put-down b2 (1)
pick-up b17 (1)
stack b17 b2 (1)
pick-up b8 (1)
stack b8 b17 (1)
unstack b10 b12 (1)
put-down b10 (1)
unstack b12 b21 (1)
put-down b12 (1)
pick-up b10 (1)
stack b10 b12 (1)
unstack b21 b16 (1)
put-down b21 (1)
pick-up b16 (1)
stack b16 b20 (1)
pick-up b21 (1)
stack b21 b16 (1)
unstack b10 b12 (1)
put-down b10 (1)
pick-up b12 (1)
stack b12 b21 (1)
pick-up b10 (1)
stack b10 b12 (1)
unstack b8 b17 (1)
put-down b8 (1)
unstack b17 b2 (1)
put-down b17 (1)
pick-up b2 (1)
stack b2 b10 (1)
pick-up b17 (1)
stack b17 b2 (1)
pick-up b8 (1)
stack b8 b17 (1)
unstack b14 b5 (1)
put-down b14 (1)
unstack b5 b3 (1)
put-down b5 (1)
unstack b3 b9 (1)
put-down b3 (1)
pick-up b5 (1)
stack b5 b3 (1)
pick-up b14 (1)
stack b14 b5 (1)
unstack b9 b15 (1)
put-down b9 (1)
pick-up b15 (1)
stack b15 b8 (1)
pick-up b9 (1)
stack b9 b15 (1)
unstack b14 b5 (1)
put-down b14 (1)
unstack b5 b3 (1)
put-down b5 (1)
pick-up b14 (1)
stack b14 b5 (1)
pick-up b3 (1)
stack b3 b9 (1)
unstack b14 b5 (1)
put-down b14 (1)
pick-up b5 (1)
stack b5 b3 (1)
pick-up b14 (1)
stack b14 b5 (1)
[t=0.121726s, 26904 KB] Plan length: 224 step(s).
[t=0.121726s, 26904 KB] Plan cost: 224
[t=0.121726s, 26904 KB] Expanded 4533 state(s).
[t=0.121726s, 26904 KB] Reopened 0 state(s).
[t=0.121726s, 26904 KB] Evaluated 4534 state(s).
[t=0.121726s, 26904 KB] Evaluations: 9068
[t=0.121726s, 26904 KB] Generated 34357 state(s).
[t=0.121726s, 26904 KB] Dead ends: 0 state(s).
[t=0.121726s, 26904 KB] Number of registered states: 4534
[t=0.121726s, 26904 KB] Int hash set load factor: 4534/8192 = 0.553467
[t=0.121726s, 26904 KB] Int hash set resizes: 13
[t=0.121726s, 26904 KB] Search time: 0.104998s
[t=0.121726s, 26904 KB] Total time: 0.121726s
Solution found.
Peak memory: 26904 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.25s
