INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_23/bws_problem_23_93.pddl --sas-file output.sas
Parsing...
Parsing: [0.010s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.010s wall-clock]
1750 relevant atoms
1173 auxiliary atoms
2923 final queue length
5092 total queue pushes
Completing instantiation... [0.020s CPU, 0.019s wall-clock]
Instantiating: [0.030s CPU, 0.031s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
24 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.007s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.027s wall-clock]
1564 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
46 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.013s wall-clock]
Reordering and filtering variables...
47 of 47 variables necessary.
24 of 47 mutex groups necessary.
1058 of 1058 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 47
Translator derived variables: 0
Translator facts: 600
Translator goal facts: 19
Translator mutex groups: 24
Translator total mutex groups size: 576
Translator operators: 1058
Translator axioms: 0
Translator task size: 9108
Translator peak memory: 37484 KB
Writing output... [0.010s CPU, 0.006s wall-clock]
Done! [0.100s CPU, 0.095s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=0.000115039s, 24488 KB] reading input...
[t=0.00467777s, 25428 KB] done reading input!
[t=0.00570594s, 25824 KB] Initializing landmark count heuristic...
[t=0.005747s, 25824 KB] Generating landmark graph...
[t=0.00583495s, 25824 KB] Building a landmark graph with reasonable orders.
[t=0.00590156s, 25956 KB] Initializing Exploration...
[t=0.00623828s, 26256 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0172054s, 26652 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0172742s, 26652 KB] Landmarks generation time: 0.0114403s
[t=0.0172914s, 26652 KB] Discovered 98 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0173076s, 26652 KB] 276 edges
[t=0.017317s, 26652 KB] approx. reasonable orders
[t=0.0178583s, 26652 KB] approx. obedient reasonable orders
[t=0.0178836s, 26652 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0178924s, 26652 KB] Landmarks generation time: 0.0121428s
[t=0.0179018s, 26652 KB] Discovered 98 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0179094s, 26652 KB] 287 edges
[t=0.0179174s, 26652 KB] Landmark graph generation time: 0.0121771s
[t=0.0179257s, 26652 KB] Landmark graph contains 98 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0179332s, 26652 KB] Landmark graph contains 287 orderings.
[t=0.0182564s, 26652 KB] Simplifying 4186 unary operators... done! [3174 unary operators]
[t=0.0192655s, 26652 KB] time to simplify: 0.00107514s
[t=0.0194157s, 26652 KB] Initializing additive heuristic...
[t=0.0194382s, 26652 KB] Initializing FF heuristic...
[t=0.0194917s, 26652 KB] Building successor generator...done!
[t=0.0197047s, 26652 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0197147s, 26652 KB] time for successor generation creation: 0.000179744s
[t=0.019727s, 26652 KB] Variables: 47
[t=0.0197355s, 26652 KB] FactPairs: 600
[t=0.0197437s, 26652 KB] Bytes per state: 20
[t=0.0198315s, 26652 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0198629s, 26652 KB] 46 initial landmarks, 19 goal landmarks
[t=0.0199119s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0199212s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0199301s, 26652 KB] g=0, 1 evaluated, 0 expanded
[t=0.0199445s, 26652 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0199534s, 26652 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0201852s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0201945s, 26652 KB] g=2, 9 evaluated, 8 expanded
[t=0.0202324s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0202415s, 26652 KB] g=2, 10 evaluated, 9 expanded
[t=0.0205974s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.020607s, 26652 KB] g=4, 23 evaluated, 22 expanded
[t=0.0206983s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0207075s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0207156s, 26652 KB] g=4, 26 evaluated, 25 expanded
[t=0.0208816s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0208901s, 26652 KB] g=6, 32 evaluated, 31 expanded
[t=0.0209274s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0209359s, 26652 KB] g=6, 33 evaluated, 32 expanded
[t=0.021298s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0213077s, 26652 KB] g=8, 47 evaluated, 46 expanded
[t=0.0213447s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0213541s, 26652 KB] g=8, 48 evaluated, 47 expanded
[t=0.0217493s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0217591s, 26652 KB] g=10, 63 evaluated, 62 expanded
[t=0.0219508s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0219597s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0219677s, 26652 KB] g=12, 70 evaluated, 69 expanded
[t=0.0221546s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0221639s, 26652 KB] g=14, 77 evaluated, 76 expanded
[t=0.0225323s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0225421s, 26652 KB] g=17, 91 evaluated, 90 expanded
[t=0.0229328s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0229427s, 26652 KB] g=16, 106 evaluated, 105 expanded
[t=0.0231072s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0231164s, 26652 KB] g=20, 112 evaluated, 111 expanded
[t=0.0231532s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.023162s, 26652 KB] g=18, 113 evaluated, 112 expanded
[t=0.023687s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0236986s, 26652 KB] g=21, 131 evaluated, 130 expanded
[t=0.0240591s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0240691s, 26652 KB] g=24, 145 evaluated, 144 expanded
[t=0.024261s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0242704s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0242787s, 26652 KB] g=26, 152 evaluated, 151 expanded
[t=0.0245046s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0245184s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0245265s, 26652 KB] g=28, 160 evaluated, 159 expanded
[t=0.0246904s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0246995s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0247082s, 26652 KB] g=30, 166 evaluated, 165 expanded
[t=0.0248697s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.02488s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0248881s, 26652 KB] g=32, 172 evaluated, 171 expanded
[t=0.0254219s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.025432s, 26652 KB] g=38, 192 evaluated, 191 expanded
[t=0.0256008s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0256114s, 26652 KB] g=40, 198 evaluated, 197 expanded
[t=0.0256785s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0256893s, 26652 KB] g=40, 200 evaluated, 199 expanded
[t=0.0258297s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0258393s, 26652 KB] g=42, 205 evaluated, 204 expanded
[t=0.0258766s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0258858s, 26652 KB] g=42, 206 evaluated, 205 expanded
[t=0.0261062s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0261155s, 26652 KB] g=44, 214 evaluated, 213 expanded
[t=0.0262303s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0262446s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0262533s, 26652 KB] g=46, 218 evaluated, 217 expanded
[t=0.0263953s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0264043s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0264125s, 26652 KB] g=48, 223 evaluated, 222 expanded
[t=0.0265512s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0265604s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0265688s, 26652 KB] g=50, 228 evaluated, 227 expanded
[t=0.0269516s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0269631s, 26652 KB] g=54, 243 evaluated, 242 expanded
[t=0.0270747s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0270842s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0270926s, 26652 KB] g=56, 247 evaluated, 246 expanded
[t=0.0627854s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0628487s, 26652 KB] g=96, 1557 evaluated, 1556 expanded
[t=0.0630541s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.063064s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0630722s, 26652 KB] g=98, 1565 evaluated, 1564 expanded
[t=0.0632506s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.06326s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0632682s, 26652 KB] g=100, 1572 evaluated, 1571 expanded
[t=0.0633963s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0634061s, 26652 KB] g=100, 1577 evaluated, 1576 expanded
[t=0.0635655s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0635763s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.063585s, 26652 KB] g=102, 1583 evaluated, 1582 expanded
[t=0.0639353s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0639453s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0639538s, 26652 KB] g=106, 1597 evaluated, 1596 expanded
[t=0.0640824s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0640915s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0640995s, 26652 KB] g=108, 1602 evaluated, 1601 expanded
[t=0.0644715s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0644811s, 26652 KB] g=112, 1618 evaluated, 1617 expanded
[t=0.0645802s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0645894s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0645974s, 26652 KB] g=114, 1622 evaluated, 1621 expanded
[t=0.0657389s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0657501s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0657586s, 26652 KB] g=126, 1675 evaluated, 1674 expanded
[t=0.0659617s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.065972s, 26652 KB] g=130, 1684 evaluated, 1683 expanded
[t=0.0660694s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0660795s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0660896s, 26652 KB] g=132, 1687 evaluated, 1686 expanded
[t=0.0668212s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0668308s, 26652 KB] g=148, 1724 evaluated, 1723 expanded
[t=0.0669832s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0669919s, 26652 KB] g=156, 1734 evaluated, 1733 expanded
[t=0.0670508s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0670598s, 26652 KB] g=160, 1738 evaluated, 1737 expanded
[t=0.0670765s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0670852s, 26652 KB] g=161, 1739 evaluated, 1738 expanded
[t=0.0670997s, 26652 KB] Solution found!
[t=0.0671135s, 26652 KB] Actual search time: 0.0472478s
unstack b12 b23 (1)
stack b12 b16 (1)
unstack b23 b5 (1)
stack b23 b12 (1)
unstack b1 b18 (1)
stack b1 b5 (1)
pick-up b6 (1)
stack b6 b15 (1)
unstack b18 b2 (1)
put-down b18 (1)
unstack b2 b9 (1)
stack b2 b21 (1)
unstack b1 b5 (1)
put-down b1 (1)
pick-up b5 (1)
stack b5 b6 (1)
pick-up b1 (1)
stack b1 b5 (1)
unstack b13 b4 (1)
put-down b13 (1)
unstack b4 b17 (1)
put-down b4 (1)
unstack b17 b3 (1)
stack b17 b1 (1)
unstack b3 b20 (1)
put-down b3 (1)
pick-up b13 (1)
stack b13 b4 (1)
pick-up b20 (1)
stack b20 b3 (1)
pick-up b9 (1)
stack b9 b17 (1)
unstack b23 b12 (1)
put-down b23 (1)
unstack b12 b16 (1)
put-down b12 (1)
unstack b16 b11 (1)
stack b16 b18 (1)
pick-up b12 (1)
stack b12 b16 (1)
pick-up b23 (1)
stack b23 b12 (1)
unstack b11 b8 (1)
put-down b11 (1)
unstack b8 b7 (1)
stack b8 b9 (1)
unstack b7 b14 (1)
stack b7 b8 (1)
pick-up b14 (1)
stack b14 b11 (1)
unstack b13 b4 (1)
put-down b13 (1)
unstack b7 b8 (1)
put-down b7 (1)
pick-up b4 (1)
stack b4 b7 (1)
pick-up b13 (1)
stack b13 b4 (1)
unstack b8 b9 (1)
put-down b8 (1)
unstack b9 b17 (1)
put-down b9 (1)
pick-up b8 (1)
stack b8 b9 (1)
unstack b13 b4 (1)
put-down b13 (1)
unstack b4 b7 (1)
put-down b4 (1)
pick-up b13 (1)
stack b13 b4 (1)
pick-up b7 (1)
stack b7 b8 (1)
unstack b13 b4 (1)
put-down b13 (1)
pick-up b4 (1)
stack b4 b7 (1)
pick-up b13 (1)
stack b13 b4 (1)
unstack b17 b1 (1)
put-down b17 (1)
unstack b1 b5 (1)
put-down b1 (1)
pick-up b17 (1)
stack b17 b1 (1)
unstack b5 b6 (1)
put-down b5 (1)
unstack b6 b15 (1)
put-down b6 (1)
unstack b15 b22 (1)
put-down b15 (1)
unstack b22 b10 (1)
put-down b22 (1)
unstack b10 b19 (1)
put-down b10 (1)
pick-up b15 (1)
stack b15 b10 (1)
pick-up b19 (1)
stack b19 b20 (1)
pick-up b6 (1)
stack b6 b15 (1)
pick-up b5 (1)
stack b5 b6 (1)
unstack b14 b11 (1)
put-down b14 (1)
pick-up b11 (1)
stack b11 b19 (1)
pick-up b14 (1)
stack b14 b11 (1)
unstack b17 b1 (1)
put-down b17 (1)
pick-up b1 (1)
stack b1 b5 (1)
pick-up b17 (1)
stack b17 b1 (1)
unstack b23 b12 (1)
put-down b23 (1)
unstack b12 b16 (1)
put-down b12 (1)
pick-up b23 (1)
stack b23 b12 (1)
unstack b16 b18 (1)
put-down b16 (1)
pick-up b18 (1)
stack b18 b22 (1)
pick-up b16 (1)
stack b16 b18 (1)
unstack b23 b12 (1)
put-down b23 (1)
pick-up b12 (1)
stack b12 b16 (1)
pick-up b23 (1)
stack b23 b12 (1)
unstack b13 b4 (1)
put-down b13 (1)
unstack b4 b7 (1)
put-down b4 (1)
unstack b7 b8 (1)
put-down b7 (1)
pick-up b4 (1)
stack b4 b7 (1)
pick-up b13 (1)
stack b13 b4 (1)
unstack b8 b9 (1)
put-down b8 (1)
pick-up b9 (1)
stack b9 b17 (1)
pick-up b8 (1)
stack b8 b9 (1)
unstack b13 b4 (1)
put-down b13 (1)
unstack b4 b7 (1)
put-down b4 (1)
pick-up b13 (1)
stack b13 b4 (1)
pick-up b7 (1)
stack b7 b8 (1)
unstack b13 b4 (1)
put-down b13 (1)
pick-up b4 (1)
stack b4 b7 (1)
pick-up b13 (1)
stack b13 b4 (1)
[t=0.0671231s, 26652 KB] Plan length: 162 step(s).
[t=0.0671231s, 26652 KB] Plan cost: 162
[t=0.0671231s, 26652 KB] Expanded 1739 state(s).
[t=0.0671231s, 26652 KB] Reopened 0 state(s).
[t=0.0671231s, 26652 KB] Evaluated 1740 state(s).
[t=0.0671231s, 26652 KB] Evaluations: 3480
[t=0.0671231s, 26652 KB] Generated 15249 state(s).
[t=0.0671231s, 26652 KB] Dead ends: 0 state(s).
[t=0.0671231s, 26652 KB] Number of registered states: 1740
[t=0.0671231s, 26652 KB] Int hash set load factor: 1740/2048 = 0.849609
[t=0.0671231s, 26652 KB] Int hash set resizes: 11
[t=0.0671231s, 26652 KB] Search time: 0.0472923s
[t=0.0671231s, 26652 KB] Total time: 0.0671231s
Solution found.
Peak memory: 26652 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.21s
