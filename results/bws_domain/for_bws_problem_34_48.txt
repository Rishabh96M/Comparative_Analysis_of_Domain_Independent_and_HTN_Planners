INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_34/bws_problem_34_48.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.030s CPU, 0.024s wall-clock]
3708 relevant atoms
2482 auxiliary atoms
6190 final queue length
10889 total queue pushes
Completing instantiation... [0.040s CPU, 0.045s wall-clock]
Instantiating: [0.070s CPU, 0.071s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.010s CPU, 0.002s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.001s wall-clock]
Choosing groups...
35 uncovered facts
Choosing groups: [0.000s CPU, 0.002s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.010s CPU, 0.013s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.001s wall-clock]
Building dictionary for full mutex groups... [0.010s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.001s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.004s wall-clock]
Translating task: [0.060s CPU, 0.060s wall-clock]
3434 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
68 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.028s wall-clock]
Reordering and filtering variables...
69 of 69 variables necessary.
35 of 69 mutex groups necessary.
2312 of 2312 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.020s CPU, 0.014s wall-clock]
Translator variables: 69
Translator derived variables: 0
Translator facts: 1260
Translator goal facts: 30
Translator mutex groups: 35
Translator total mutex groups size: 1225
Translator operators: 2312
Translator axioms: 0
Translator task size: 19822
Translator peak memory: 44420 KB
Writing output... [0.010s CPU, 0.013s wall-clock]
Done! [0.200s CPU, 0.206s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=3.7277e-05s, 24488 KB] reading input...
[t=0.00749729s, 27204 KB] done reading input!
[t=0.00876724s, 27600 KB] Initializing landmark count heuristic...
[t=0.00880767s, 27600 KB] Generating landmark graph...
[t=0.00893528s, 27732 KB] Building a landmark graph with reasonable orders.
[t=0.00906631s, 27864 KB] Initializing Exploration...
[t=0.00971976s, 28512 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0473144s, 29568 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0474332s, 29568 KB] Landmarks generation time: 0.0385052s
[t=0.0474554s, 29568 KB] Discovered 151 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0474726s, 29568 KB] 769 edges
[t=0.0474824s, 29568 KB] approx. reasonable orders
[t=0.049442s, 29568 KB] approx. obedient reasonable orders
[t=0.0495219s, 29568 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0495327s, 29568 KB] Landmarks generation time: 0.040722s
[t=0.0495426s, 29568 KB] Discovered 151 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0495505s, 29568 KB] 785 edges
[t=0.0495586s, 29568 KB] Landmark graph generation time: 0.0407578s
[t=0.049567s, 29568 KB] Landmark graph contains 151 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0495748s, 29568 KB] Landmark graph contains 785 orderings.
[t=0.050327s, 29568 KB] Simplifying 9180 unary operators... done! [6936 unary operators]
[t=0.0527649s, 29568 KB] time to simplify: 0.00246004s
[t=0.0529294s, 29568 KB] Initializing additive heuristic...
[t=0.052951s, 29568 KB] Initializing FF heuristic...
[t=0.0530106s, 29568 KB] Building successor generator...done!
[t=0.0534289s, 29568 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0534387s, 29568 KB] time for successor generation creation: 0.000386959s
[t=0.0534526s, 29568 KB] Variables: 69
[t=0.0534609s, 29568 KB] FactPairs: 1260
[t=0.0534685s, 29568 KB] Bytes per state: 32
[t=0.0535542s, 29568 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0535858s, 29568 KB] 68 initial landmarks, 30 goal landmarks
[t=0.053665s, 29568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 83
[t=0.0536743s, 29568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 61
[t=0.0536824s, 29568 KB] g=0, 1 evaluated, 0 expanded
[t=0.0536971s, 29568 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 83
[t=0.0537053s, 29568 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 61
[t=0.0539334s, 29568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 82
[t=0.0539432s, 29568 KB] g=1, 5 evaluated, 4 expanded
[t=0.0540061s, 29568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 80
[t=0.0540151s, 29568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 59
[t=0.0540237s, 29568 KB] g=2, 6 evaluated, 5 expanded
[t=0.0543896s, 29568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 79
[t=0.0543998s, 29568 KB] g=4, 13 evaluated, 12 expanded
[t=0.0546754s, 29568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 78
[t=0.0546867s, 29568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 58
[t=0.0546959s, 29568 KB] g=4, 18 evaluated, 17 expanded
[t=0.0550476s, 29568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 77
[t=0.0550584s, 29568 KB] g=6, 24 evaluated, 23 expanded
[t=0.0559507s, 29568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 76
[t=0.0559632s, 29568 KB] g=8, 41 evaluated, 40 expanded
[t=0.0565609s, 29568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 73
[t=0.0565747s, 29568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 57
[t=0.0565832s, 29568 KB] g=10, 52 evaluated, 51 expanded
[t=0.0570038s, 29568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 71
[t=0.0570152s, 29568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 56
[t=0.0570243s, 29568 KB] g=12, 60 evaluated, 59 expanded
[t=0.0574025s, 29568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 70
[t=0.0574151s, 29568 KB] g=14, 67 evaluated, 66 expanded
[t=0.0581423s, 29568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 69
[t=0.0581567s, 29568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 55
[t=0.0581651s, 29568 KB] g=16, 81 evaluated, 80 expanded
[t=0.0586415s, 29568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 68
[t=0.058655s, 29568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 54
[t=0.0586632s, 29568 KB] g=18, 90 evaluated, 89 expanded
[t=0.0593148s, 29568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 66
[t=0.0593534s, 29568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 53
[t=0.0593671s, 29568 KB] g=20, 99 evaluated, 98 expanded
[t=0.0600642s, 29568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 65
[t=0.0600988s, 29568 KB] g=22, 107 evaluated, 106 expanded
[t=0.0607839s, 29568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 62
[t=0.0608098s, 29568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 51
[t=0.0608207s, 29568 KB] g=24, 116 evaluated, 115 expanded
[t=0.0613656s, 29568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.0613771s, 29568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 50
[t=0.0613854s, 29568 KB] g=26, 126 evaluated, 125 expanded
[t=0.0615702s, 29568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 58
[t=0.06158s, 29568 KB] g=27, 129 evaluated, 128 expanded
[t=0.0616489s, 29568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0616584s, 29568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 49
[t=0.0616664s, 29568 KB] g=28, 130 evaluated, 129 expanded
[t=0.0621439s, 29568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0621585s, 29568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 48
[t=0.0621712s, 29568 KB] g=30, 139 evaluated, 138 expanded
[t=0.0627467s, 29568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0627684s, 29568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 47
[t=0.0627795s, 29568 KB] g=32, 149 evaluated, 148 expanded
[t=0.0637462s, 29568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0637617s, 29568 KB] g=35, 167 evaluated, 166 expanded
[t=0.0644966s, 29568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0645094s, 29568 KB] g=38, 180 evaluated, 179 expanded
[t=0.0650594s, 29568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0650694s, 29568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 46
[t=0.0650785s, 29568 KB] g=40, 190 evaluated, 189 expanded
[t=0.0660364s, 29568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.066047s, 29568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0660561s, 29568 KB] g=42, 208 evaluated, 207 expanded
[t=0.0672733s, 29568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0672857s, 29568 KB] g=45, 231 evaluated, 230 expanded
[t=0.0673517s, 29568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0673613s, 29568 KB] g=46, 232 evaluated, 231 expanded
[t=0.0678426s, 29568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0678542s, 29568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0678684s, 29568 KB] g=48, 241 evaluated, 240 expanded
[t=0.0684172s, 29568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0684301s, 29568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0684395s, 29568 KB] g=50, 251 evaluated, 250 expanded
[t=0.0689262s, 29568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0689369s, 29568 KB] g=52, 260 evaluated, 259 expanded
[t=0.0690562s, 29568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0690654s, 29568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0690734s, 29568 KB] g=52, 262 evaluated, 261 expanded
[t=0.0694896s, 29568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0694993s, 29568 KB] g=54, 270 evaluated, 269 expanded
[t=0.0696149s, 29568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0696239s, 29568 KB] g=54, 272 evaluated, 271 expanded
[t=0.0703364s, 29568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0703475s, 29568 KB] g=56, 286 evaluated, 285 expanded
[t=0.070721s, 29568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0707326s, 29568 KB] g=58, 293 evaluated, 292 expanded
[t=0.0707979s, 29568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0708147s, 29568 KB] g=58, 294 evaluated, 293 expanded
[t=0.0716504s, 29568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0716789s, 29568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0716931s, 29568 KB] g=60, 308 evaluated, 307 expanded
[t=0.072542s, 29568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0725697s, 29568 KB] g=62, 317 evaluated, 316 expanded
[t=0.074555s, 29568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0745726s, 29568 KB] g=66, 351 evaluated, 350 expanded
[t=0.0752861s, 29568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0752958s, 29568 KB] g=68, 365 evaluated, 364 expanded
[t=0.0759206s, 29568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0759313s, 29568 KB] g=70, 377 evaluated, 376 expanded
[t=0.0761075s, 29568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0761183s, 29568 KB] g=70, 380 evaluated, 379 expanded
[t=0.07685s, 29568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0768605s, 29568 KB] g=72, 394 evaluated, 393 expanded
[t=0.0772679s, 29568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0772848s, 29568 KB] g=72, 401 evaluated, 400 expanded
[t=0.0780144s, 29568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0780254s, 29568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0780341s, 29568 KB] g=74, 415 evaluated, 414 expanded
[t=0.0792847s, 29568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0793024s, 29568 KB] g=78, 438 evaluated, 437 expanded
[t=0.0798402s, 29568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0798588s, 29568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0798675s, 29568 KB] g=80, 448 evaluated, 447 expanded
[t=0.0812701s, 29568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0812822s, 29568 KB] g=84, 475 evaluated, 474 expanded
[t=0.0816587s, 29568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0816691s, 29568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0816776s, 29568 KB] g=86, 482 evaluated, 481 expanded
[t=0.092938s, 29568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0929859s, 29568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0929963s, 29568 KB] g=94, 696 evaluated, 695 expanded
[t=0.0933125s, 29568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0933273s, 29568 KB] g=94, 702 evaluated, 701 expanded
[t=0.0936999s, 29568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.093711s, 29568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0937193s, 29568 KB] g=96, 709 evaluated, 708 expanded
[t=0.107872s, 29568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.10791s, 29568 KB] g=108, 991 evaluated, 990 expanded
[t=0.109617s, 29568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.10963s, 29568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.109639s, 29568 KB] g=114, 1022 evaluated, 1021 expanded
[t=0.119469s, 29568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.119537s, 29568 KB] g=128, 1192 evaluated, 1191 expanded
[t=0.120083s, 29568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.120095s, 29568 KB] g=130, 1202 evaluated, 1201 expanded
[t=0.121314s, 29568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.121326s, 29568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.121335s, 29568 KB] g=136, 1225 evaluated, 1224 expanded
[t=0.139207s, 29568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.139264s, 29568 KB] g=152, 1561 evaluated, 1560 expanded
[t=0.139616s, 29568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.139628s, 29568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.139636s, 29568 KB] g=154, 1568 evaluated, 1567 expanded
[t=0.139938s, 29568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.139956s, 29568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.139964s, 29568 KB] g=156, 1574 evaluated, 1573 expanded
[t=0.14024s, 29568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.140255s, 29568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.140264s, 29568 KB] g=158, 1579 evaluated, 1578 expanded
[t=0.143025s, 29568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.143035s, 29568 KB] g=166, 1635 evaluated, 1634 expanded
[t=0.143238s, 29568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.143247s, 29568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.143255s, 29568 KB] g=168, 1639 evaluated, 1638 expanded
[t=0.155334s, 29568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.155442s, 29568 KB] g=186, 1860 evaluated, 1859 expanded
[t=0.155651s, 29568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.155662s, 29568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.15567s, 29568 KB] g=188, 1864 evaluated, 1863 expanded
[t=0.156973s, 29568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.156986s, 29568 KB] g=196, 1891 evaluated, 1890 expanded
[t=0.157536s, 29568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.157546s, 29568 KB] g=200, 1903 evaluated, 1902 expanded
[t=0.157688s, 29568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.157698s, 29568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.157706s, 29568 KB] g=202, 1906 evaluated, 1905 expanded
[t=0.168748s, 29568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.168783s, 29568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.168792s, 29568 KB] g=240, 2203 evaluated, 2202 expanded
[t=0.169094s, 29568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.169104s, 29568 KB] g=244, 2212 evaluated, 2211 expanded
[t=0.169211s, 29568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.169221s, 29568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.169229s, 29568 KB] g=246, 2215 evaluated, 2214 expanded
[t=0.170301s, 29568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.170313s, 29568 KB] g=262, 2253 evaluated, 2252 expanded
[t=0.170568s, 29568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.17058s, 29568 KB] g=270, 2264 evaluated, 2263 expanded
[t=0.170603s, 29568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.170612s, 29568 KB] g=271, 2265 evaluated, 2264 expanded
[t=0.170631s, 29568 KB] Solution found!
[t=0.17066s, 29568 KB] Actual search time: 0.117072s
unstack b26 b6 (1)
stack b26 b1 (1)
unstack b29 b8 (1)
stack b29 b27 (1)
unstack b16 b3 (1)
put-down b16 (1)
unstack b24 b31 (1)
put-down b24 (1)
unstack b3 b5 (1)
stack b3 b29 (1)
pick-up b31 (1)
stack b31 b24 (1)
unstack b32 b13 (1)
put-down b32 (1)
unstack b13 b11 (1)
put-down b13 (1)
unstack b11 b18 (1)
put-down b11 (1)
unstack b18 b7 (1)
stack b18 b8 (1)
unstack b6 b12 (1)
put-down b6 (1)
unstack b12 b22 (1)
stack b12 b11 (1)
unstack b22 b28 (1)
stack b22 b3 (1)
unstack b28 b2 (1)
stack b28 b32 (1)
unstack b2 b4 (1)
put-down b2 (1)
pick-up b4 (1)
stack b4 b16 (1)
unstack b18 b8 (1)
put-down b18 (1)
unstack b8 b33 (1)
put-down b8 (1)
unstack b33 b23 (1)
stack b33 b6 (1)
pick-up b8 (1)
stack b8 b23 (1)
pick-up b18 (1)
stack b18 b8 (1)
unstack b7 b15 (1)
put-down b7 (1)
unstack b15 b14 (1)
stack b15 b18 (1)
unstack b14 b21 (1)
stack b14 b12 (1)
unstack b21 b19 (1)
stack b21 b22 (1)
pick-up b5 (1)
stack b5 b21 (1)
pick-up b7 (1)
stack b7 b15 (1)
unstack b19 b10 (1)
put-down b19 (1)
unstack b10 b34 (1)
stack b10 b19 (1)
unstack b34 b17 (1)
stack b34 b4 (1)
unstack b17 b20 (1)
put-down b17 (1)
unstack b20 b25 (1)
put-down b20 (1)
unstack b10 b19 (1)
put-down b10 (1)
unstack b25 b9 (1)
stack b25 b13 (1)
pick-up b19 (1)
stack b19 b9 (1)
pick-up b10 (1)
stack b10 b19 (1)
pick-up b17 (1)
stack b17 b20 (1)
unstack b28 b32 (1)
put-down b28 (1)
pick-up b32 (1)
stack b32 b33 (1)
pick-up b28 (1)
stack b28 b32 (1)
unstack b31 b24 (1)
put-down b31 (1)
pick-up b24 (1)
stack b24 b10 (1)
pick-up b31 (1)
stack b31 b24 (1)
unstack b34 b4 (1)
put-down b34 (1)
unstack b4 b16 (1)
put-down b4 (1)
pick-up b16 (1)
stack b16 b14 (1)
pick-up b4 (1)
stack b4 b16 (1)
pick-up b34 (1)
stack b34 b4 (1)
unstack b28 b32 (1)
put-down b28 (1)
unstack b32 b33 (1)
put-down b32 (1)
pick-up b28 (1)
stack b28 b32 (1)
unstack b33 b6 (1)
put-down b33 (1)
pick-up b6 (1)
stack b6 b17 (1)
pick-up b33 (1)
stack b33 b6 (1)
unstack b28 b32 (1)
put-down b28 (1)
pick-up b32 (1)
stack b32 b33 (1)
pick-up b28 (1)
stack b28 b32 (1)
unstack b31 b24 (1)
put-down b31 (1)
unstack b24 b10 (1)
put-down b24 (1)
pick-up b31 (1)
stack b31 b24 (1)
unstack b10 b19 (1)
put-down b10 (1)
unstack b19 b9 (1)
put-down b19 (1)
pick-up b9 (1)
stack b9 b7 (1)
pick-up b19 (1)
stack b19 b9 (1)
pick-up b10 (1)
stack b10 b19 (1)
unstack b31 b24 (1)
put-down b31 (1)
pick-up b24 (1)
stack b24 b10 (1)
pick-up b31 (1)
stack b31 b24 (1)
unstack b5 b21 (1)
put-down b5 (1)
unstack b21 b22 (1)
put-down b21 (1)
unstack b22 b3 (1)
put-down b22 (1)
pick-up b21 (1)
stack b21 b22 (1)
pick-up b5 (1)
stack b5 b21 (1)
unstack b3 b29 (1)
put-down b3 (1)
unstack b29 b27 (1)
put-down b29 (1)
unstack b27 b30 (1)
stack b27 b2 (1)
pick-up b29 (1)
stack b29 b27 (1)
pick-up b3 (1)
stack b3 b29 (1)
pick-up b30 (1)
stack b30 b34 (1)
unstack b5 b21 (1)
put-down b5 (1)
unstack b21 b22 (1)
put-down b21 (1)
pick-up b22 (1)
stack b22 b3 (1)
pick-up b21 (1)
stack b21 b22 (1)
pick-up b5 (1)
stack b5 b21 (1)
unstack b28 b32 (1)
put-down b28 (1)
unstack b32 b33 (1)
put-down b32 (1)
unstack b33 b6 (1)
put-down b33 (1)
pick-up b32 (1)
stack b32 b33 (1)
pick-up b28 (1)
stack b28 b32 (1)
unstack b6 b17 (1)
put-down b6 (1)
unstack b17 b20 (1)
put-down b17 (1)
pick-up b20 (1)
stack b20 b30 (1)
pick-up b17 (1)
stack b17 b20 (1)
pick-up b6 (1)
stack b6 b17 (1)
unstack b28 b32 (1)
put-down b28 (1)
unstack b32 b33 (1)
put-down b32 (1)
pick-up b28 (1)
stack b28 b32 (1)
pick-up b33 (1)
stack b33 b6 (1)
unstack b28 b32 (1)
put-down b28 (1)
pick-up b32 (1)
stack b32 b33 (1)
pick-up b28 (1)
stack b28 b32 (1)
unstack b31 b24 (1)
put-down b31 (1)
unstack b24 b10 (1)
put-down b24 (1)
pick-up b31 (1)
stack b31 b24 (1)
unstack b10 b19 (1)
put-down b10 (1)
unstack b19 b9 (1)
put-down b19 (1)
unstack b9 b7 (1)
put-down b9 (1)
pick-up b19 (1)
stack b19 b9 (1)
pick-up b10 (1)
stack b10 b19 (1)
unstack b31 b24 (1)
put-down b31 (1)
pick-up b24 (1)
stack b24 b10 (1)
pick-up b31 (1)
stack b31 b24 (1)
unstack b7 b15 (1)
put-down b7 (1)
unstack b15 b18 (1)
put-down b15 (1)
pick-up b7 (1)
stack b7 b15 (1)
unstack b18 b8 (1)
put-down b18 (1)
unstack b8 b23 (1)
put-down b8 (1)
pick-up b23 (1)
stack b23 b25 (1)
pick-up b8 (1)
stack b8 b23 (1)
pick-up b18 (1)
stack b18 b8 (1)
unstack b7 b15 (1)
put-down b7 (1)
pick-up b15 (1)
stack b15 b18 (1)
pick-up b7 (1)
stack b7 b15 (1)
unstack b31 b24 (1)
put-down b31 (1)
unstack b24 b10 (1)
put-down b24 (1)
unstack b10 b19 (1)
put-down b10 (1)
pick-up b24 (1)
stack b24 b10 (1)
pick-up b31 (1)
stack b31 b24 (1)
unstack b19 b9 (1)
put-down b19 (1)
pick-up b9 (1)
stack b9 b7 (1)
pick-up b19 (1)
stack b19 b9 (1)
unstack b31 b24 (1)
put-down b31 (1)
unstack b24 b10 (1)
put-down b24 (1)
pick-up b10 (1)
stack b10 b19 (1)
pick-up b24 (1)
stack b24 b10 (1)
pick-up b31 (1)
stack b31 b24 (1)
[t=0.170671s, 29568 KB] Plan length: 272 step(s).
[t=0.170671s, 29568 KB] Plan cost: 272
[t=0.170671s, 29568 KB] Expanded 2265 state(s).
[t=0.170671s, 29568 KB] Reopened 0 state(s).
[t=0.170671s, 29568 KB] Evaluated 2266 state(s).
[t=0.170671s, 29568 KB] Evaluations: 4532
[t=0.170671s, 29568 KB] Generated 23972 state(s).
[t=0.170671s, 29568 KB] Dead ends: 0 state(s).
[t=0.170671s, 29568 KB] Number of registered states: 2266
[t=0.170671s, 29568 KB] Int hash set load factor: 2266/4096 = 0.553223
[t=0.170671s, 29568 KB] Int hash set resizes: 12
[t=0.170671s, 29568 KB] Search time: 0.117117s
[t=0.170671s, 29568 KB] Total time: 0.170671s
Solution found.
Peak memory: 29568 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.43s
