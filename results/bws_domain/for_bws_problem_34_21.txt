INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_34/bws_problem_34_21.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.000s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.022s wall-clock]
3708 relevant atoms
2482 auxiliary atoms
6190 final queue length
10886 total queue pushes
Completing instantiation... [0.040s CPU, 0.044s wall-clock]
Instantiating: [0.060s CPU, 0.068s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.002s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.001s wall-clock]
Choosing groups...
35 uncovered facts
Choosing groups: [0.000s CPU, 0.002s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.020s CPU, 0.013s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.001s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.001s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.002s wall-clock]
Translating task: [0.060s CPU, 0.060s wall-clock]
3434 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
68 propositions removed
Detecting unreachable propositions: [0.030s CPU, 0.030s wall-clock]
Reordering and filtering variables...
69 of 69 variables necessary.
35 of 69 mutex groups necessary.
2312 of 2312 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.015s wall-clock]
Translator variables: 69
Translator derived variables: 0
Translator facts: 1260
Translator goal facts: 32
Translator mutex groups: 35
Translator total mutex groups size: 1225
Translator operators: 2312
Translator axioms: 0
Translator task size: 19824
Translator peak memory: 44444 KB
Writing output... [0.010s CPU, 0.012s wall-clock]
Done! [0.200s CPU, 0.205s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=4.0724e-05s, 24488 KB] reading input...
[t=0.00733582s, 27204 KB] done reading input!
[t=0.00832574s, 27600 KB] Initializing landmark count heuristic...
[t=0.00838048s, 27600 KB] Generating landmark graph...
[t=0.00854989s, 27732 KB] Building a landmark graph with reasonable orders.
[t=0.00869677s, 27864 KB] Initializing Exploration...
[t=0.0093747s, 28512 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.049349s, 29712 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0494762s, 29712 KB] Landmarks generation time: 0.0409361s
[t=0.0495025s, 29712 KB] Discovered 159 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0495203s, 29712 KB] 980 edges
[t=0.0495302s, 29712 KB] approx. reasonable orders
[t=0.0558914s, 29712 KB] approx. obedient reasonable orders
[t=0.0561905s, 29712 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0562132s, 29712 KB] Landmarks generation time: 0.0478326s
[t=0.0562286s, 29712 KB] Discovered 159 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0562408s, 29712 KB] 1035 edges
[t=0.0562514s, 29712 KB] Landmark graph generation time: 0.0478784s
[t=0.0562608s, 29712 KB] Landmark graph contains 159 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0562694s, 29712 KB] Landmark graph contains 1035 orderings.
[t=0.057671s, 29712 KB] Simplifying 9180 unary operators... done! [6936 unary operators]
[t=0.0600572s, 29712 KB] time to simplify: 0.00240871s
[t=0.0602337s, 29712 KB] Initializing additive heuristic...
[t=0.0602567s, 29712 KB] Initializing FF heuristic...
[t=0.0603283s, 29712 KB] Building successor generator...done!
[t=0.0607657s, 29712 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0607769s, 29712 KB] time for successor generation creation: 0.000403941s
[t=0.0607928s, 29712 KB] Variables: 69
[t=0.0608013s, 29712 KB] FactPairs: 1260
[t=0.0608099s, 29712 KB] Bytes per state: 32
[t=0.0609317s, 29712 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0609678s, 29712 KB] 69 initial landmarks, 32 goal landmarks
[t=0.0610584s, 29712 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 90
[t=0.0610687s, 29712 KB] New best heuristic value for ff(transform = adapt_costs(one)): 64
[t=0.0610773s, 29712 KB] g=0, 1 evaluated, 0 expanded
[t=0.061092s, 29712 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 90
[t=0.061101s, 29712 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 64
[t=0.0613986s, 29712 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 89
[t=0.0614087s, 29712 KB] New best heuristic value for ff(transform = adapt_costs(one)): 63
[t=0.0614171s, 29712 KB] g=2, 6 evaluated, 5 expanded
[t=0.0617039s, 29712 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 88
[t=0.0617145s, 29712 KB] g=4, 11 evaluated, 10 expanded
[t=0.0618921s, 29712 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 87
[t=0.0619013s, 29712 KB] New best heuristic value for ff(transform = adapt_costs(one)): 62
[t=0.0619095s, 29712 KB] g=4, 14 evaluated, 13 expanded
[t=0.0621454s, 29712 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 86
[t=0.0621558s, 29712 KB] g=6, 18 evaluated, 17 expanded
[t=0.0627098s, 29712 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 85
[t=0.0627201s, 29712 KB] g=8, 28 evaluated, 27 expanded
[t=0.0629458s, 29712 KB] New best heuristic value for ff(transform = adapt_costs(one)): 61
[t=0.0629708s, 29712 KB] g=8, 32 evaluated, 31 expanded
[t=0.0637938s, 29712 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 84
[t=0.0638036s, 29712 KB] g=10, 47 evaluated, 46 expanded
[t=0.0643011s, 29712 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 83
[t=0.0643113s, 29712 KB] g=12, 56 evaluated, 55 expanded
[t=0.0648216s, 29712 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 82
[t=0.0648321s, 29712 KB] g=14, 65 evaluated, 64 expanded
[t=0.0656031s, 29712 KB] New best heuristic value for ff(transform = adapt_costs(one)): 60
[t=0.06562s, 29712 KB] g=16, 79 evaluated, 78 expanded
[t=0.0658457s, 29712 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 79
[t=0.0658551s, 29712 KB] g=16, 83 evaluated, 82 expanded
[t=0.0666103s, 29712 KB] New best heuristic value for ff(transform = adapt_costs(one)): 59
[t=0.0666295s, 29712 KB] g=18, 95 evaluated, 94 expanded
[t=0.0669759s, 29712 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 78
[t=0.0669865s, 29712 KB] g=18, 101 evaluated, 100 expanded
[t=0.0701988s, 29712 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 77
[t=0.0702159s, 29712 KB] g=21, 164 evaluated, 163 expanded
[t=0.0711503s, 29712 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 76
[t=0.0711763s, 29712 KB] g=23, 174 evaluated, 173 expanded
[t=0.072763s, 29712 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 73
[t=0.0728032s, 29712 KB] g=26, 198 evaluated, 197 expanded
[t=0.07458s, 29712 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 70
[t=0.074608s, 29712 KB] g=28, 223 evaluated, 222 expanded
[t=0.0759292s, 29712 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 69
[t=0.0759413s, 29712 KB] g=30, 248 evaluated, 247 expanded
[t=0.0772484s, 29712 KB] New best heuristic value for ff(transform = adapt_costs(one)): 58
[t=0.0772665s, 29712 KB] g=32, 272 evaluated, 271 expanded
[t=0.0775279s, 29712 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 66
[t=0.0775511s, 29712 KB] g=32, 277 evaluated, 276 expanded
[t=0.078521s, 29712 KB] New best heuristic value for ff(transform = adapt_costs(one)): 57
[t=0.0785333s, 29712 KB] g=34, 296 evaluated, 295 expanded
[t=0.0789419s, 29712 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 65
[t=0.0789522s, 29712 KB] g=34, 304 evaluated, 303 expanded
[t=0.0797619s, 29712 KB] New best heuristic value for ff(transform = adapt_costs(one)): 56
[t=0.0797721s, 29712 KB] g=36, 320 evaluated, 319 expanded
[t=0.0805612s, 29712 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 63
[t=0.0805712s, 29712 KB] g=36, 335 evaluated, 334 expanded
[t=0.0809246s, 29712 KB] New best heuristic value for ff(transform = adapt_costs(one)): 55
[t=0.0809342s, 29712 KB] g=38, 342 evaluated, 341 expanded
[t=0.0819711s, 29712 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 62
[t=0.0819813s, 29712 KB] g=38, 363 evaluated, 362 expanded
[t=0.0834371s, 29712 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 61
[t=0.0834487s, 29712 KB] g=40, 392 evaluated, 391 expanded
[t=0.0842849s, 29712 KB] New best heuristic value for ff(transform = adapt_costs(one)): 54
[t=0.084295s, 29712 KB] g=44, 409 evaluated, 408 expanded
[t=0.0855992s, 29712 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.0856192s, 29712 KB] g=42, 434 evaluated, 433 expanded
[t=0.096675s, 29712 KB] New best heuristic value for ff(transform = adapt_costs(one)): 53
[t=0.0967781s, 29712 KB] g=48, 647 evaluated, 646 expanded
[t=0.108981s, 29712 KB] New best heuristic value for ff(transform = adapt_costs(one)): 52
[t=0.109021s, 29712 KB] g=54, 885 evaluated, 884 expanded
[t=0.113535s, 29712 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 58
[t=0.113571s, 29712 KB] g=62, 954 evaluated, 953 expanded
[t=0.119592s, 29712 KB] New best heuristic value for ff(transform = adapt_costs(one)): 51
[t=0.119692s, 29712 KB] g=60, 1068 evaluated, 1067 expanded
[t=0.129284s, 29712 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 57
[t=0.129327s, 29712 KB] g=70, 1250 evaluated, 1249 expanded
[t=0.131214s, 29712 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.131229s, 29712 KB] g=72, 1285 evaluated, 1284 expanded
[t=0.13335s, 29712 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.133362s, 29712 KB] g=74, 1326 evaluated, 1325 expanded
[t=0.13546s, 29712 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.135481s, 29712 KB] g=76, 1365 evaluated, 1364 expanded
[t=0.140466s, 29712 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.140518s, 29712 KB] g=78, 1455 evaluated, 1454 expanded
[t=0.14354s, 29712 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.143553s, 29712 KB] g=80, 1514 evaluated, 1513 expanded
[t=0.146624s, 29712 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.146649s, 29712 KB] g=82, 1570 evaluated, 1569 expanded
[t=0.148874s, 29712 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.148886s, 29712 KB] g=84, 1614 evaluated, 1613 expanded
[t=0.153537s, 29712 KB] New best heuristic value for ff(transform = adapt_costs(one)): 50
[t=0.15362s, 29712 KB] g=90, 1679 evaluated, 1678 expanded
[t=0.154978s, 29712 KB] New best heuristic value for ff(transform = adapt_costs(one)): 49
[t=0.154998s, 29712 KB] g=92, 1705 evaluated, 1704 expanded
[t=0.1564s, 29712 KB] New best heuristic value for ff(transform = adapt_costs(one)): 48
[t=0.156426s, 29712 KB] g=94, 1730 evaluated, 1729 expanded
[t=0.162259s, 29712 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.162278s, 29712 KB] g=102, 1842 evaluated, 1841 expanded
[t=0.169343s, 29712 KB] New best heuristic value for ff(transform = adapt_costs(one)): 47
[t=0.16939s, 29712 KB] g=100, 1979 evaluated, 1978 expanded
[t=0.171596s, 29712 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.171614s, 29712 KB] g=105, 2020 evaluated, 2019 expanded
[t=0.171734s, 29712 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.171745s, 29712 KB] g=106, 2022 evaluated, 2021 expanded
[t=0.173514s, 29712 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.173527s, 29712 KB] g=108, 2057 evaluated, 2056 expanded
[t=0.175315s, 29712 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.175326s, 29712 KB] g=110, 2092 evaluated, 2091 expanded
[t=0.177097s, 29712 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.177119s, 29712 KB] g=112, 2125 evaluated, 2124 expanded
[t=0.177487s, 29712 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.177505s, 29712 KB] g=113, 2132 evaluated, 2131 expanded
[t=0.179208s, 29712 KB] New best heuristic value for ff(transform = adapt_costs(one)): 46
[t=0.179221s, 29712 KB] g=116, 2165 evaluated, 2164 expanded
[t=0.180754s, 29712 KB] New best heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.180785s, 29712 KB] g=118, 2194 evaluated, 2193 expanded
[t=0.181498s, 29712 KB] New best heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.181519s, 29712 KB] g=120, 2208 evaluated, 2207 expanded
[t=0.181962s, 29712 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.181982s, 29712 KB] g=116, 2216 evaluated, 2215 expanded
[t=0.182836s, 29712 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.182853s, 29712 KB] g=122, 2232 evaluated, 2231 expanded
[t=0.183986s, 29712 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.183998s, 29712 KB] g=118, 2254 evaluated, 2253 expanded
[t=0.184062s, 29712 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.184071s, 29712 KB] g=124, 2255 evaluated, 2254 expanded
[t=0.185232s, 29712 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.185245s, 29712 KB] g=126, 2278 evaluated, 2277 expanded
[t=0.186444s, 29712 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.186467s, 29712 KB] g=120, 2299 evaluated, 2298 expanded
[t=0.188264s, 29712 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.188276s, 29712 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.188285s, 29712 KB] g=122, 2335 evaluated, 2334 expanded
[t=0.188978s, 29712 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.188989s, 29712 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.188997s, 29712 KB] g=124, 2349 evaluated, 2348 expanded
[t=0.189642s, 29712 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.189652s, 29712 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.18966s, 29712 KB] g=126, 2362 evaluated, 2361 expanded
[t=0.190327s, 29712 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.190341s, 29712 KB] g=128, 2374 evaluated, 2373 expanded
[t=0.191224s, 29712 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.191272s, 29712 KB] g=128, 2382 evaluated, 2381 expanded
[t=0.192873s, 29712 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.192901s, 29712 KB] g=130, 2402 evaluated, 2401 expanded
[t=0.193119s, 29712 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.193134s, 29712 KB] g=130, 2405 evaluated, 2404 expanded
[t=0.19357s, 29712 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.193581s, 29712 KB] g=131, 2414 evaluated, 2413 expanded
[t=0.193688s, 29712 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.193697s, 29712 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.193705s, 29712 KB] g=132, 2416 evaluated, 2415 expanded
[t=0.194154s, 29712 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.194166s, 29712 KB] g=134, 2424 evaluated, 2423 expanded
[t=0.194283s, 29712 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.194308s, 29712 KB] g=134, 2426 evaluated, 2425 expanded
[t=0.194931s, 29712 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.194941s, 29712 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.194949s, 29712 KB] g=136, 2438 evaluated, 2437 expanded
[t=0.195248s, 29712 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.195257s, 29712 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.195265s, 29712 KB] g=138, 2444 evaluated, 2443 expanded
[t=0.199756s, 29712 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.199851s, 29712 KB] g=146, 2532 evaluated, 2531 expanded
[t=0.200419s, 29712 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.200432s, 29712 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.200455s, 29712 KB] g=148, 2542 evaluated, 2541 expanded
[t=0.20726s, 29712 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.207298s, 29712 KB] g=160, 2675 evaluated, 2674 expanded
[t=0.208389s, 29712 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.208403s, 29712 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.208412s, 29712 KB] g=166, 2698 evaluated, 2697 expanded
[t=0.261383s, 29892 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.261453s, 29892 KB] g=202, 3727 evaluated, 3726 expanded
[t=0.265044s, 29892 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.265061s, 29892 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.265069s, 29892 KB] g=220, 3800 evaluated, 3799 expanded
[t=0.282447s, 30056 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.282544s, 30056 KB] g=250, 4117 evaluated, 4116 expanded
[t=0.283342s, 30056 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.283358s, 30056 KB] g=254, 4133 evaluated, 4132 expanded
[t=0.283578s, 30056 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.28359s, 30056 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.283598s, 30056 KB] g=256, 4137 evaluated, 4136 expanded
[t=0.28611s, 30056 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.286152s, 30056 KB] g=268, 4187 evaluated, 4186 expanded
[t=0.286602s, 30056 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.286616s, 30056 KB] g=272, 4196 evaluated, 4195 expanded
[t=0.286779s, 30056 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.286791s, 30056 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.2868s, 30056 KB] g=274, 4199 evaluated, 4198 expanded
[t=0.498918s, 31060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.498988s, 31060 KB] g=362, 8606 evaluated, 8605 expanded
[t=0.499646s, 31060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.499666s, 31060 KB] g=366, 8622 evaluated, 8621 expanded
[t=0.499834s, 31060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.499844s, 31060 KB] g=368, 8626 evaluated, 8625 expanded
[t=0.50183s, 31060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.501844s, 31060 KB] g=380, 8680 evaluated, 8679 expanded
[t=0.502189s, 31060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.502201s, 31060 KB] g=384, 8689 evaluated, 8688 expanded
[t=0.502313s, 31060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.502323s, 31060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.502331s, 31060 KB] g=386, 8692 evaluated, 8691 expanded
[t=0.505213s, 31196 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.505239s, 31196 KB] g=416, 8792 evaluated, 8791 expanded
[t=0.505482s, 31196 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.505493s, 31196 KB] g=420, 8801 evaluated, 8800 expanded
[t=0.505591s, 31196 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.505604s, 31196 KB] g=422, 8804 evaluated, 8803 expanded
[t=0.505962s, 31196 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.505974s, 31196 KB] g=434, 8820 evaluated, 8819 expanded
[t=0.50606s, 31196 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.506069s, 31196 KB] g=438, 8824 evaluated, 8823 expanded
[t=0.506091s, 31196 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.5061s, 31196 KB] g=439, 8825 evaluated, 8824 expanded
[t=0.506118s, 31196 KB] Solution found!
[t=0.506148s, 31196 KB] Actual search time: 0.445178s
unstack b15 b17 (1)
put-down b15 (1)
unstack b30 b34 (1)
stack b30 b17 (1)
unstack b14 b24 (1)
put-down b14 (1)
unstack b24 b1 (1)
put-down b24 (1)
unstack b34 b2 (1)
put-down b34 (1)
unstack b2 b13 (1)
put-down b2 (1)
unstack b13 b32 (1)
put-down b13 (1)
unstack b32 b26 (1)
stack b32 b34 (1)
unstack b26 b33 (1)
put-down b26 (1)
unstack b25 b6 (1)
put-down b25 (1)
unstack b6 b22 (1)
put-down b6 (1)
unstack b22 b29 (1)
put-down b22 (1)
unstack b29 b5 (1)
stack b29 b30 (1)
unstack b5 b20 (1)
stack b5 b13 (1)
unstack b20 b31 (1)
stack b20 b26 (1)
pick-up b14 (1)
stack b14 b2 (1)
pick-up b22 (1)
stack b22 b33 (1)
pick-up b25 (1)
stack b25 b6 (1)
unstack b31 b19 (1)
stack b31 b24 (1)
unstack b19 b7 (1)
put-down b19 (1)
unstack b7 b11 (1)
put-down b7 (1)
unstack b11 b3 (1)
put-down b11 (1)
pick-up b1 (1)
stack b1 b11 (1)
pick-up b3 (1)
stack b3 b25 (1)
unstack b32 b34 (1)
put-down b32 (1)
pick-up b34 (1)
stack b34 b3 (1)
pick-up b32 (1)
stack b32 b34 (1)
unstack b1 b11 (1)
put-down b1 (1)
unstack b22 b33 (1)
put-down b22 (1)
unstack b14 b2 (1)
put-down b14 (1)
unstack b20 b26 (1)
put-down b20 (1)
unstack b29 b30 (1)
put-down b29 (1)
unstack b30 b17 (1)
put-down b30 (1)
unstack b17 b10 (1)
put-down b17 (1)
unstack b10 b16 (1)
put-down b10 (1)
unstack b16 b9 (1)
put-down b16 (1)
unstack b9 b18 (1)
stack b9 b31 (1)
unstack b18 b4 (1)
put-down b18 (1)
pick-up b19 (1)
stack b19 b9 (1)
pick-up b30 (1)
stack b30 b17 (1)
pick-up b7 (1)
stack b7 b18 (1)
pick-up b16 (1)
stack b16 b7 (1)
pick-up b22 (1)
stack b22 b33 (1)
pick-up b1 (1)
stack b1 b11 (1)
pick-up b10 (1)
stack b10 b20 (1)
pick-up b14 (1)
stack b14 b2 (1)
pick-up b29 (1)
stack b29 b30 (1)
unstack b1 b11 (1)
put-down b1 (1)
unstack b22 b33 (1)
put-down b22 (1)
unstack b10 b20 (1)
put-down b10 (1)
unstack b14 b2 (1)
put-down b14 (1)
unstack b4 b27 (1)
put-down b4 (1)
unstack b27 b23 (1)
stack b27 b29 (1)
unstack b23 b8 (1)
stack b23 b15 (1)
unstack b8 b21 (1)
put-down b8 (1)
unstack b21 b12 (1)
stack b21 b32 (1)
unstack b12 b28 (1)
put-down b12 (1)
pick-up b11 (1)
stack b11 b8 (1)
pick-up b1 (1)
stack b1 b11 (1)
pick-up b26 (1)
stack b26 b23 (1)
pick-up b20 (1)
stack b20 b26 (1)
pick-up b10 (1)
stack b10 b20 (1)
pick-up b12 (1)
stack b12 b10 (1)
pick-up b28 (1)
stack b28 b5 (1)
pick-up b33 (1)
stack b33 b21 (1)
pick-up b22 (1)
stack b22 b33 (1)
pick-up b2 (1)
stack b2 b28 (1)
pick-up b14 (1)
stack b14 b2 (1)
pick-up b4 (1)
stack b4 b27 (1)
unstack b16 b7 (1)
put-down b16 (1)
unstack b7 b18 (1)
put-down b7 (1)
pick-up b18 (1)
stack b18 b14 (1)
pick-up b7 (1)
stack b7 b18 (1)
pick-up b16 (1)
stack b16 b7 (1)
unstack b19 b9 (1)
put-down b19 (1)
unstack b9 b31 (1)
put-down b9 (1)
pick-up b19 (1)
stack b19 b9 (1)
unstack b31 b24 (1)
put-down b31 (1)
pick-up b24 (1)
stack b24 b4 (1)
pick-up b31 (1)
stack b31 b24 (1)
unstack b19 b9 (1)
put-down b19 (1)
pick-up b9 (1)
stack b9 b31 (1)
pick-up b19 (1)
stack b19 b9 (1)
unstack b22 b33 (1)
put-down b22 (1)
unstack b33 b21 (1)
put-down b33 (1)
pick-up b22 (1)
stack b22 b33 (1)
unstack b21 b32 (1)
put-down b21 (1)
unstack b32 b34 (1)
put-down b32 (1)
pick-up b21 (1)
stack b21 b32 (1)
unstack b22 b33 (1)
put-down b22 (1)
pick-up b33 (1)
stack b33 b21 (1)
pick-up b22 (1)
stack b22 b33 (1)
unstack b34 b3 (1)
put-down b34 (1)
unstack b3 b25 (1)
put-down b3 (1)
pick-up b34 (1)
stack b34 b3 (1)
unstack b25 b6 (1)
put-down b25 (1)
pick-up b6 (1)
stack b6 b19 (1)
pick-up b25 (1)
stack b25 b6 (1)
unstack b34 b3 (1)
put-down b34 (1)
pick-up b3 (1)
stack b3 b25 (1)
pick-up b34 (1)
stack b34 b3 (1)
unstack b22 b33 (1)
put-down b22 (1)
unstack b33 b21 (1)
put-down b33 (1)
pick-up b22 (1)
stack b22 b33 (1)
unstack b21 b32 (1)
put-down b21 (1)
pick-up b32 (1)
stack b32 b34 (1)
pick-up b21 (1)
stack b21 b32 (1)
unstack b22 b33 (1)
put-down b22 (1)
pick-up b33 (1)
stack b33 b21 (1)
pick-up b22 (1)
stack b22 b33 (1)
unstack b16 b7 (1)
put-down b16 (1)
unstack b7 b18 (1)
put-down b7 (1)
pick-up b16 (1)
stack b16 b7 (1)
unstack b18 b14 (1)
put-down b18 (1)
unstack b14 b2 (1)
put-down b14 (1)
pick-up b18 (1)
stack b18 b14 (1)
unstack b16 b7 (1)
put-down b16 (1)
pick-up b7 (1)
stack b7 b18 (1)
pick-up b16 (1)
stack b16 b7 (1)
unstack b2 b28 (1)
put-down b2 (1)
unstack b28 b5 (1)
put-down b28 (1)
pick-up b2 (1)
stack b2 b28 (1)
unstack b5 b13 (1)
put-down b5 (1)
pick-up b13 (1)
stack b13 b1 (1)
pick-up b5 (1)
stack b5 b13 (1)
unstack b2 b28 (1)
put-down b2 (1)
pick-up b28 (1)
stack b28 b5 (1)
pick-up b2 (1)
stack b2 b28 (1)
unstack b16 b7 (1)
put-down b16 (1)
unstack b7 b18 (1)
put-down b7 (1)
pick-up b16 (1)
stack b16 b7 (1)
unstack b18 b14 (1)
put-down b18 (1)
pick-up b14 (1)
stack b14 b2 (1)
pick-up b18 (1)
stack b18 b14 (1)
unstack b16 b7 (1)
put-down b16 (1)
pick-up b7 (1)
stack b7 b18 (1)
pick-up b16 (1)
stack b16 b7 (1)
unstack b22 b33 (1)
put-down b22 (1)
unstack b33 b21 (1)
put-down b33 (1)
pick-up b22 (1)
stack b22 b33 (1)
unstack b21 b32 (1)
put-down b21 (1)
unstack b32 b34 (1)
put-down b32 (1)
pick-up b21 (1)
stack b21 b32 (1)
unstack b22 b33 (1)
put-down b22 (1)
pick-up b33 (1)
stack b33 b21 (1)
pick-up b22 (1)
stack b22 b33 (1)
unstack b34 b3 (1)
put-down b34 (1)
unstack b3 b25 (1)
put-down b3 (1)
pick-up b34 (1)
stack b34 b3 (1)
unstack b25 b6 (1)
put-down b25 (1)
unstack b6 b19 (1)
put-down b6 (1)
pick-up b25 (1)
stack b25 b6 (1)
unstack b34 b3 (1)
put-down b34 (1)
pick-up b3 (1)
stack b3 b25 (1)
pick-up b34 (1)
stack b34 b3 (1)
unstack b22 b33 (1)
put-down b22 (1)
unstack b33 b21 (1)
put-down b33 (1)
pick-up b22 (1)
stack b22 b33 (1)
unstack b21 b32 (1)
put-down b21 (1)
pick-up b32 (1)
stack b32 b34 (1)
pick-up b21 (1)
stack b21 b32 (1)
unstack b22 b33 (1)
put-down b22 (1)
pick-up b33 (1)
stack b33 b21 (1)
pick-up b22 (1)
stack b22 b33 (1)
unstack b19 b9 (1)
put-down b19 (1)
unstack b9 b31 (1)
put-down b9 (1)
pick-up b19 (1)
stack b19 b9 (1)
unstack b31 b24 (1)
put-down b31 (1)
unstack b24 b4 (1)
put-down b24 (1)
pick-up b31 (1)
stack b31 b24 (1)
unstack b19 b9 (1)
put-down b19 (1)
pick-up b9 (1)
stack b9 b31 (1)
pick-up b19 (1)
stack b19 b9 (1)
unstack b4 b27 (1)
put-down b4 (1)
unstack b27 b29 (1)
put-down b27 (1)
pick-up b4 (1)
stack b4 b27 (1)
unstack b29 b30 (1)
put-down b29 (1)
unstack b30 b17 (1)
put-down b30 (1)
pick-up b17 (1)
stack b17 b16 (1)
pick-up b30 (1)
stack b30 b17 (1)
pick-up b29 (1)
stack b29 b30 (1)
unstack b4 b27 (1)
put-down b4 (1)
pick-up b27 (1)
stack b27 b29 (1)
pick-up b4 (1)
stack b4 b27 (1)
unstack b19 b9 (1)
put-down b19 (1)
unstack b9 b31 (1)
put-down b9 (1)
pick-up b19 (1)
stack b19 b9 (1)
unstack b31 b24 (1)
put-down b31 (1)
pick-up b24 (1)
stack b24 b4 (1)
pick-up b31 (1)
stack b31 b24 (1)
unstack b19 b9 (1)
put-down b19 (1)
pick-up b9 (1)
stack b9 b31 (1)
pick-up b19 (1)
stack b19 b9 (1)
unstack b22 b33 (1)
put-down b22 (1)
unstack b33 b21 (1)
put-down b33 (1)
pick-up b22 (1)
stack b22 b33 (1)
unstack b21 b32 (1)
put-down b21 (1)
unstack b32 b34 (1)
put-down b32 (1)
pick-up b21 (1)
stack b21 b32 (1)
unstack b22 b33 (1)
put-down b22 (1)
pick-up b33 (1)
stack b33 b21 (1)
pick-up b22 (1)
stack b22 b33 (1)
unstack b34 b3 (1)
put-down b34 (1)
unstack b3 b25 (1)
put-down b3 (1)
pick-up b34 (1)
stack b34 b3 (1)
unstack b25 b6 (1)
put-down b25 (1)
pick-up b6 (1)
stack b6 b19 (1)
pick-up b25 (1)
stack b25 b6 (1)
unstack b34 b3 (1)
put-down b34 (1)
pick-up b3 (1)
stack b3 b25 (1)
pick-up b34 (1)
stack b34 b3 (1)
unstack b22 b33 (1)
put-down b22 (1)
unstack b33 b21 (1)
put-down b33 (1)
pick-up b22 (1)
stack b22 b33 (1)
unstack b21 b32 (1)
put-down b21 (1)
pick-up b32 (1)
stack b32 b34 (1)
pick-up b21 (1)
stack b21 b32 (1)
unstack b22 b33 (1)
put-down b22 (1)
pick-up b33 (1)
stack b33 b21 (1)
pick-up b22 (1)
stack b22 b33 (1)
[t=0.506158s, 31196 KB] Plan length: 440 step(s).
[t=0.506158s, 31196 KB] Plan cost: 440
[t=0.506158s, 31196 KB] Expanded 8825 state(s).
[t=0.506158s, 31196 KB] Reopened 0 state(s).
[t=0.506158s, 31196 KB] Evaluated 8826 state(s).
[t=0.506158s, 31196 KB] Evaluations: 17652
[t=0.506158s, 31196 KB] Generated 84376 state(s).
[t=0.506158s, 31196 KB] Dead ends: 0 state(s).
[t=0.506158s, 31196 KB] Number of registered states: 8826
[t=0.506158s, 31196 KB] Int hash set load factor: 8826/16384 = 0.538696
[t=0.506158s, 31196 KB] Int hash set resizes: 14
[t=0.506158s, 31196 KB] Search time: 0.445227s
[t=0.506158s, 31196 KB] Total time: 0.506158s
Solution found.
Peak memory: 31196 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.77s
