INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_27/bws_problem_27_58.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.000s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.016s wall-clock]
2378 relevant atoms
1593 auxiliary atoms
3971 final queue length
6946 total queue pushes
Completing instantiation... [0.020s CPU, 0.024s wall-clock]
Instantiating: [0.040s CPU, 0.042s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
28 uncovered facts
Choosing groups: [0.000s CPU, 0.002s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.010s CPU, 0.008s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.001s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.002s wall-clock]
Translating task: [0.040s CPU, 0.040s wall-clock]
2160 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
54 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.017s wall-clock]
Reordering and filtering variables...
55 of 55 variables necessary.
28 of 55 mutex groups necessary.
1458 of 1458 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.009s wall-clock]
Translator variables: 55
Translator derived variables: 0
Translator facts: 812
Translator goal facts: 23
Translator mutex groups: 28
Translator total mutex groups size: 784
Translator operators: 1458
Translator axioms: 0
Translator task size: 12528
Translator peak memory: 39412 KB
Writing output... [0.010s CPU, 0.008s wall-clock]
Done! [0.130s CPU, 0.131s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=1.9047e-05s, 24488 KB] reading input...
[t=0.00454988s, 25936 KB] done reading input!
[t=0.00567498s, 26332 KB] Initializing landmark count heuristic...
[t=0.0057227s, 26332 KB] Generating landmark graph...
[t=0.00580971s, 26332 KB] Building a landmark graph with reasonable orders.
[t=0.00589167s, 26464 KB] Initializing Exploration...
[t=0.00636337s, 26732 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0244698s, 27392 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0245801s, 27392 KB] Landmarks generation time: 0.0187802s
[t=0.0246052s, 27392 KB] Discovered 118 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0246248s, 27392 KB] 552 edges
[t=0.0246348s, 27392 KB] approx. reasonable orders
[t=0.0270988s, 27392 KB] approx. obedient reasonable orders
[t=0.0271298s, 27392 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0271391s, 27392 KB] Landmarks generation time: 0.0214128s
[t=0.0271485s, 27392 KB] Discovered 118 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0271566s, 27392 KB] 588 edges
[t=0.0271648s, 27392 KB] Landmark graph generation time: 0.0214491s
[t=0.0271733s, 27392 KB] Landmark graph contains 118 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0271812s, 27392 KB] Landmark graph contains 588 orderings.
[t=0.0276367s, 27468 KB] Simplifying 5778 unary operators... done! [4374 unary operators]
[t=0.0290032s, 27600 KB] time to simplify: 0.00145684s
[t=0.0291804s, 27600 KB] Initializing additive heuristic...
[t=0.0291973s, 27600 KB] Initializing FF heuristic...
[t=0.0292475s, 27600 KB] Building successor generator...done!
[t=0.0295099s, 27600 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0295194s, 27600 KB] time for successor generation creation: 0.000225937s
[t=0.0295325s, 27600 KB] Variables: 55
[t=0.0295408s, 27600 KB] FactPairs: 812
[t=0.0295487s, 27600 KB] Bytes per state: 24
[t=0.0296334s, 27600 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0296674s, 27600 KB] 53 initial landmarks, 23 goal landmarks
[t=0.0297336s, 27600 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 65
[t=0.0297437s, 27600 KB] New best heuristic value for ff(transform = adapt_costs(one)): 48
[t=0.0297525s, 27600 KB] g=0, 1 evaluated, 0 expanded
[t=0.0297671s, 27600 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 65
[t=0.0297762s, 27600 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 48
[t=0.0300357s, 27600 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 64
[t=0.0300479s, 27600 KB] New best heuristic value for ff(transform = adapt_costs(one)): 47
[t=0.0300572s, 27600 KB] g=2, 7 evaluated, 6 expanded
[t=0.0302925s, 27600 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 63
[t=0.030302s, 27600 KB] g=4, 13 evaluated, 12 expanded
[t=0.0304285s, 27600 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 62
[t=0.030438s, 27600 KB] New best heuristic value for ff(transform = adapt_costs(one)): 46
[t=0.0304468s, 27600 KB] g=4, 16 evaluated, 15 expanded
[t=0.0306397s, 27600 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 61
[t=0.0306484s, 27600 KB] g=6, 21 evaluated, 20 expanded
[t=0.0311523s, 27600 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 60
[t=0.0311626s, 27600 KB] g=8, 35 evaluated, 34 expanded
[t=0.0314962s, 27600 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.0315068s, 27600 KB] g=10, 44 evaluated, 43 expanded
[t=0.0320731s, 27600 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0320894s, 27600 KB] New best heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0320984s, 27600 KB] g=12, 60 evaluated, 59 expanded
[t=0.0323868s, 27600 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0323997s, 27600 KB] g=14, 68 evaluated, 67 expanded
[t=0.0324451s, 27600 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0324654s, 27600 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0324742s, 27600 KB] g=14, 69 evaluated, 68 expanded
[t=0.0327539s, 27600 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0327637s, 27600 KB] g=16, 77 evaluated, 76 expanded
[t=0.0330297s, 27600 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0330393s, 27600 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0330477s, 27600 KB] g=16, 84 evaluated, 83 expanded
[t=0.0330961s, 27600 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0331054s, 27600 KB] g=17, 85 evaluated, 84 expanded
[t=0.0336121s, 27600 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0336228s, 27600 KB] g=20, 99 evaluated, 98 expanded
[t=0.0339567s, 27600 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0339692s, 27600 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0339781s, 27600 KB] g=22, 108 evaluated, 107 expanded
[t=0.034293s, 27600 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0343029s, 27600 KB] g=24, 117 evaluated, 116 expanded
[t=0.0363592s, 27600 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0363692s, 27600 KB] g=29, 178 evaluated, 177 expanded
[t=0.0364159s, 27600 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0364253s, 27600 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0364333s, 27600 KB] g=30, 179 evaluated, 178 expanded
[t=0.0368224s, 27600 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0368483s, 27600 KB] g=32, 190 evaluated, 189 expanded
[t=0.0369293s, 27600 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0369381s, 27600 KB] g=32, 192 evaluated, 191 expanded
[t=0.037561s, 27600 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0375704s, 27600 KB] g=34, 210 evaluated, 209 expanded
[t=0.0376154s, 27600 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0376243s, 27600 KB] g=34, 211 evaluated, 210 expanded
[t=0.0384195s, 27600 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0384302s, 27600 KB] g=36, 234 evaluated, 233 expanded
[t=0.0393599s, 27600 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0393705s, 27600 KB] g=38, 261 evaluated, 260 expanded
[t=0.040027s, 27600 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0400379s, 27600 KB] g=40, 280 evaluated, 279 expanded
[t=0.040121s, 27600 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0401306s, 27600 KB] g=40, 282 evaluated, 281 expanded
[t=0.0405881s, 27600 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0405974s, 27600 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0406061s, 27600 KB] g=42, 295 evaluated, 294 expanded
[t=0.0408549s, 27600 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0408668s, 27600 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0408753s, 27600 KB] g=44, 302 evaluated, 301 expanded
[t=0.0413669s, 27600 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0413779s, 27600 KB] g=48, 316 evaluated, 315 expanded
[t=0.0416645s, 27600 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0416743s, 27600 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0416834s, 27600 KB] g=50, 324 evaluated, 323 expanded
[t=0.0419435s, 27600 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0419559s, 27600 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0419651s, 27600 KB] g=52, 331 evaluated, 330 expanded
[t=0.0422145s, 27600 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.042224s, 27600 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0422326s, 27600 KB] g=54, 338 evaluated, 337 expanded
[t=0.0424882s, 27600 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0424972s, 27600 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0425055s, 27600 KB] g=56, 345 evaluated, 344 expanded
[t=0.0427121s, 27600 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0427215s, 27600 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0427328s, 27600 KB] g=58, 351 evaluated, 350 expanded
[t=0.043697s, 27600 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.043711s, 27600 KB] g=62, 381 evaluated, 380 expanded
[t=0.0438841s, 27600 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0438927s, 27600 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0439009s, 27600 KB] g=64, 386 evaluated, 385 expanded
[t=0.0446475s, 27600 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.044657s, 27600 KB] g=68, 409 evaluated, 408 expanded
[t=0.0447955s, 27600 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0448041s, 27600 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.044812s, 27600 KB] g=70, 413 evaluated, 412 expanded
[t=0.120543s, 27736 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.120617s, 27736 KB] g=120, 2641 evaluated, 2640 expanded
[t=0.121008s, 27736 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.121023s, 27736 KB] g=122, 2652 evaluated, 2651 expanded
[t=0.121102s, 27736 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.121114s, 27736 KB] g=123, 2654 evaluated, 2653 expanded
[t=0.121191s, 27736 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.121201s, 27736 KB] g=124, 2656 evaluated, 2655 expanded
[t=0.121245s, 27736 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.121257s, 27736 KB] g=125, 2657 evaluated, 2656 expanded
[t=0.121318s, 27736 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.121334s, 27736 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.121356s, 27736 KB] g=126, 2658 evaluated, 2657 expanded
[t=0.121575s, 27736 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.121585s, 27736 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.121593s, 27736 KB] g=128, 2664 evaluated, 2663 expanded
[t=0.12181s, 27736 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.12182s, 27736 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.121829s, 27736 KB] g=130, 2670 evaluated, 2669 expanded
[t=0.122016s, 27736 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.122029s, 27736 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.122038s, 27736 KB] g=132, 2675 evaluated, 2674 expanded
[t=0.124273s, 27736 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.124289s, 27736 KB] g=140, 2741 evaluated, 2740 expanded
[t=0.124429s, 27736 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.12444s, 27736 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.124448s, 27736 KB] g=142, 2745 evaluated, 2744 expanded
[t=0.128368s, 27736 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.128383s, 27736 KB] g=156, 2865 evaluated, 2864 expanded
[t=0.128522s, 27736 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.128532s, 27736 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.128541s, 27736 KB] g=158, 2869 evaluated, 2868 expanded
[t=0.128834s, 27736 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.128844s, 27736 KB] g=162, 2878 evaluated, 2877 expanded
[t=0.128944s, 27736 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.128954s, 27736 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.128963s, 27736 KB] g=164, 2881 evaluated, 2880 expanded
[t=0.132048s, 27736 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.132064s, 27736 KB] g=194, 2994 evaluated, 2993 expanded
[t=0.132276s, 27736 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.132287s, 27736 KB] g=198, 3003 evaluated, 3002 expanded
[t=0.132363s, 27736 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.132373s, 27736 KB] g=200, 3006 evaluated, 3005 expanded
[t=0.132703s, 27736 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.132713s, 27736 KB] g=212, 3023 evaluated, 3022 expanded
[t=0.132784s, 27736 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.132793s, 27736 KB] g=216, 3027 evaluated, 3026 expanded
[t=0.132812s, 27736 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.132821s, 27736 KB] g=217, 3028 evaluated, 3027 expanded
[t=0.132837s, 27736 KB] Solution found!
[t=0.132852s, 27736 KB] Actual search time: 0.103182s
unstack b1 b22 (1)
put-down b1 (1)
unstack b22 b18 (1)
stack b22 b20 (1)
unstack b15 b25 (1)
put-down b15 (1)
unstack b18 b23 (1)
put-down b18 (1)
unstack b19 b16 (1)
put-down b19 (1)
unstack b23 b7 (1)
stack b23 b22 (1)
pick-up b16 (1)
stack b16 b1 (1)
unstack b7 b12 (1)
stack b7 b4 (1)
unstack b12 b14 (1)
put-down b12 (1)
unstack b14 b6 (1)
put-down b14 (1)
unstack b25 b13 (1)
stack b25 b6 (1)
unstack b13 b17 (1)
stack b13 b14 (1)
unstack b7 b4 (1)
put-down b7 (1)
unstack b4 b27 (1)
put-down b4 (1)
unstack b27 b24 (1)
stack b27 b16 (1)
unstack b13 b14 (1)
put-down b13 (1)
unstack b24 b8 (1)
stack b24 b23 (1)
pick-up b15 (1)
stack b15 b24 (1)
pick-up b8 (1)
stack b8 b15 (1)
pick-up b14 (1)
stack b14 b8 (1)
pick-up b13 (1)
stack b13 b14 (1)
pick-up b7 (1)
stack b7 b4 (1)
unstack b25 b6 (1)
put-down b25 (1)
unstack b6 b5 (1)
put-down b6 (1)
unstack b5 b2 (1)
stack b5 b19 (1)
unstack b2 b26 (1)
stack b2 b13 (1)
unstack b26 b10 (1)
stack b26 b18 (1)
pick-up b10 (1)
stack b10 b2 (1)
pick-up b25 (1)
stack b25 b6 (1)
unstack b5 b19 (1)
put-down b5 (1)
pick-up b19 (1)
stack b19 b10 (1)
pick-up b5 (1)
stack b5 b19 (1)
unstack b7 b4 (1)
put-down b7 (1)
pick-up b4 (1)
stack b4 b26 (1)
pick-up b7 (1)
stack b7 b4 (1)
unstack b5 b19 (1)
put-down b5 (1)
unstack b19 b10 (1)
put-down b19 (1)
unstack b10 b2 (1)
put-down b10 (1)
pick-up b19 (1)
stack b19 b10 (1)
pick-up b5 (1)
stack b5 b19 (1)
unstack b2 b13 (1)
put-down b2 (1)
unstack b13 b14 (1)
put-down b13 (1)
unstack b14 b8 (1)
put-down b14 (1)
pick-up b13 (1)
stack b13 b14 (1)
pick-up b2 (1)
stack b2 b13 (1)
unstack b5 b19 (1)
put-down b5 (1)
unstack b19 b10 (1)
put-down b19 (1)
pick-up b10 (1)
stack b10 b2 (1)
pick-up b19 (1)
stack b19 b10 (1)
pick-up b5 (1)
stack b5 b19 (1)
unstack b8 b15 (1)
put-down b8 (1)
unstack b15 b24 (1)
put-down b15 (1)
unstack b24 b23 (1)
put-down b24 (1)
pick-up b15 (1)
stack b15 b24 (1)
pick-up b8 (1)
stack b8 b15 (1)
unstack b23 b22 (1)
put-down b23 (1)
unstack b22 b20 (1)
put-down b22 (1)
unstack b20 b9 (1)
put-down b20 (1)
unstack b9 b3 (1)
put-down b9 (1)
unstack b3 b21 (1)
stack b3 b25 (1)
unstack b21 b11 (1)
stack b21 b5 (1)
pick-up b11 (1)
stack b11 b7 (1)
pick-up b12 (1)
stack b12 b21 (1)
pick-up b20 (1)
stack b20 b9 (1)
pick-up b22 (1)
stack b22 b20 (1)
pick-up b23 (1)
stack b23 b22 (1)
unstack b8 b15 (1)
put-down b8 (1)
unstack b15 b24 (1)
put-down b15 (1)
pick-up b24 (1)
stack b24 b23 (1)
pick-up b15 (1)
stack b15 b24 (1)
pick-up b8 (1)
stack b8 b15 (1)
unstack b11 b7 (1)
put-down b11 (1)
unstack b7 b4 (1)
put-down b7 (1)
pick-up b11 (1)
stack b11 b7 (1)
unstack b4 b26 (1)
put-down b4 (1)
unstack b26 b18 (1)
put-down b26 (1)
pick-up b18 (1)
stack b18 b3 (1)
pick-up b26 (1)
stack b26 b18 (1)
pick-up b4 (1)
stack b4 b26 (1)
unstack b11 b7 (1)
put-down b11 (1)
pick-up b7 (1)
stack b7 b4 (1)
pick-up b11 (1)
stack b11 b7 (1)
unstack b12 b21 (1)
put-down b12 (1)
unstack b21 b5 (1)
put-down b21 (1)
pick-up b12 (1)
stack b12 b21 (1)
unstack b5 b19 (1)
put-down b5 (1)
unstack b19 b10 (1)
put-down b19 (1)
pick-up b5 (1)
stack b5 b19 (1)
unstack b12 b21 (1)
put-down b12 (1)
pick-up b21 (1)
stack b21 b5 (1)
pick-up b12 (1)
stack b12 b21 (1)
unstack b10 b2 (1)
put-down b10 (1)
unstack b2 b13 (1)
put-down b2 (1)
pick-up b10 (1)
stack b10 b2 (1)
unstack b13 b14 (1)
put-down b13 (1)
pick-up b14 (1)
stack b14 b8 (1)
pick-up b13 (1)
stack b13 b14 (1)
unstack b10 b2 (1)
put-down b10 (1)
pick-up b2 (1)
stack b2 b13 (1)
pick-up b10 (1)
stack b10 b2 (1)
unstack b12 b21 (1)
put-down b12 (1)
unstack b21 b5 (1)
put-down b21 (1)
pick-up b12 (1)
stack b12 b21 (1)
unstack b5 b19 (1)
put-down b5 (1)
pick-up b19 (1)
stack b19 b10 (1)
pick-up b5 (1)
stack b5 b19 (1)
unstack b12 b21 (1)
put-down b12 (1)
pick-up b21 (1)
stack b21 b5 (1)
pick-up b12 (1)
stack b12 b21 (1)
[t=0.132862s, 27736 KB] Plan length: 218 step(s).
[t=0.132862s, 27736 KB] Plan cost: 218
[t=0.132862s, 27736 KB] Expanded 3028 state(s).
[t=0.132862s, 27736 KB] Reopened 0 state(s).
[t=0.132862s, 27736 KB] Evaluated 3029 state(s).
[t=0.132862s, 27736 KB] Evaluations: 6058
[t=0.132862s, 27736 KB] Generated 29876 state(s).
[t=0.132862s, 27736 KB] Dead ends: 0 state(s).
[t=0.132862s, 27736 KB] Number of registered states: 3029
[t=0.132862s, 27736 KB] Int hash set load factor: 3029/4096 = 0.739502
[t=0.132862s, 27736 KB] Int hash set resizes: 12
[t=0.132862s, 27736 KB] Search time: 0.10323s
[t=0.132862s, 27736 KB] Total time: 0.132862s
Solution found.
Peak memory: 27736 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.31s
