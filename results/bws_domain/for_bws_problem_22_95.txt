INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_22/bws_problem_22_95.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.011s wall-clock]
1608 relevant atoms
1078 auxiliary atoms
2686 final queue length
4669 total queue pushes
Completing instantiation... [0.020s CPU, 0.018s wall-clock]
Instantiating: [0.030s CPU, 0.030s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
23 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.007s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.026s wall-clock]
1430 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
44 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
45 of 45 variables necessary.
23 of 45 mutex groups necessary.
968 of 968 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 45
Translator derived variables: 0
Translator facts: 552
Translator goal facts: 15
Translator mutex groups: 23
Translator total mutex groups size: 529
Translator operators: 968
Translator axioms: 0
Translator task size: 8335
Translator peak memory: 36976 KB
Writing output... [0.010s CPU, 0.005s wall-clock]
Done! [0.090s CPU, 0.091s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=1.8782e-05s, 24488 KB] reading input...
[t=0.002884s, 25340 KB] done reading input!
[t=0.0037417s, 25736 KB] Initializing landmark count heuristic...
[t=0.0037782s, 25736 KB] Generating landmark graph...
[t=0.00388434s, 25736 KB] Building a landmark graph with reasonable orders.
[t=0.00397703s, 25736 KB] Initializing Exploration...
[t=0.00429449s, 26000 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0149967s, 26528 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0150639s, 26528 KB] Landmarks generation time: 0.0111716s
[t=0.0150777s, 26528 KB] Discovered 90 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0150923s, 26528 KB] 430 edges
[t=0.015103s, 26528 KB] approx. reasonable orders
[t=0.0174655s, 26528 KB] approx. obedient reasonable orders
[t=0.017694s, 26528 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0177131s, 26528 KB] Landmarks generation time: 0.0139259s
[t=0.0177234s, 26528 KB] Discovered 90 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0177317s, 26528 KB] 485 edges
[t=0.0177401s, 26528 KB] Landmark graph generation time: 0.0139693s
[t=0.01775s, 26528 KB] Landmark graph contains 90 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0177759s, 26528 KB] Landmark graph contains 485 orderings.
[t=0.0181198s, 26528 KB] Simplifying 3828 unary operators... done! [2904 unary operators]
[t=0.0193524s, 26528 KB] time to simplify: 0.00135984s
[t=0.019584s, 26528 KB] Initializing additive heuristic...
[t=0.0196108s, 26528 KB] Initializing FF heuristic...
[t=0.0197644s, 26528 KB] Building successor generator...done!
[t=0.0201038s, 26528 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0201142s, 26528 KB] time for successor generation creation: 0.000289092s
[t=0.0201354s, 26528 KB] Variables: 45
[t=0.0201439s, 26528 KB] FactPairs: 552
[t=0.020152s, 26528 KB] Bytes per state: 20
[t=0.0204112s, 26528 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0204787s, 26528 KB] 42 initial landmarks, 15 goal landmarks
[t=0.0205625s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0205815s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0205949s, 26528 KB] g=0, 1 evaluated, 0 expanded
[t=0.0206207s, 26528 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0206346s, 26528 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0208019s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0208216s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.020835s, 26528 KB] g=2, 5 evaluated, 4 expanded
[t=0.0209583s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0209772s, 26528 KB] g=3, 8 evaluated, 7 expanded
[t=0.0210322s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0210473s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0210569s, 26528 KB] g=4, 9 evaluated, 8 expanded
[t=0.0211705s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0211846s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0211987s, 26528 KB] g=6, 13 evaluated, 12 expanded
[t=0.0213425s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0213596s, 26528 KB] g=8, 17 evaluated, 16 expanded
[t=0.0214431s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0214613s, 26528 KB] g=9, 19 evaluated, 18 expanded
[t=0.0217324s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0217579s, 26528 KB] g=11, 27 evaluated, 26 expanded
[t=0.0220657s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0220927s, 26528 KB] g=14, 36 evaluated, 35 expanded
[t=0.0225341s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0225693s, 26528 KB] g=16, 49 evaluated, 48 expanded
[t=0.0226527s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0226653s, 26528 KB] g=16, 51 evaluated, 50 expanded
[t=0.0230014s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.023028s, 26528 KB] g=18, 62 evaluated, 61 expanded
[t=0.0231671s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0231827s, 26528 KB] g=18, 67 evaluated, 66 expanded
[t=0.0235151s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0235362s, 26528 KB] g=19, 79 evaluated, 78 expanded
[t=0.0237079s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0237241s, 26528 KB] g=20, 85 evaluated, 84 expanded
[t=0.0251647s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0252102s, 26528 KB] g=24, 138 evaluated, 137 expanded
[t=0.0252774s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0252902s, 26528 KB] g=24, 140 evaluated, 139 expanded
[t=0.0257175s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0257453s, 26528 KB] g=26, 154 evaluated, 153 expanded
[t=0.0258846s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0259021s, 26528 KB] g=26, 158 evaluated, 157 expanded
[t=0.0261925s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0262113s, 26528 KB] g=28, 168 evaluated, 167 expanded
[t=0.0265555s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0265731s, 26528 KB] g=30, 180 evaluated, 179 expanded
[t=0.0268314s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0268465s, 26528 KB] g=28, 189 evaluated, 188 expanded
[t=0.0273211s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.027338s, 26528 KB] g=30, 206 evaluated, 205 expanded
[t=0.028005s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0280302s, 26528 KB] g=34, 231 evaluated, 230 expanded
[t=0.0280946s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0281046s, 26528 KB] g=32, 233 evaluated, 232 expanded
[t=0.0284034s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0284176s, 26528 KB] g=36, 244 evaluated, 243 expanded
[t=0.0287776s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0287895s, 26528 KB] g=38, 257 evaluated, 256 expanded
[t=0.0289018s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0289135s, 26528 KB] g=39, 261 evaluated, 260 expanded
[t=0.0290522s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0290636s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0290721s, 26528 KB] g=40, 266 evaluated, 265 expanded
[t=0.0291324s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0291427s, 26528 KB] g=41, 268 evaluated, 267 expanded
[t=0.029283s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0292949s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.029313s, 26528 KB] g=42, 273 evaluated, 272 expanded
[t=0.0293767s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0293872s, 26528 KB] g=43, 275 evaluated, 274 expanded
[t=0.029501s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0295124s, 26528 KB] g=44, 279 evaluated, 278 expanded
[t=0.029671s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0296841s, 26528 KB] g=45, 285 evaluated, 284 expanded
[t=0.0297211s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.029731s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0297399s, 26528 KB] g=44, 286 evaluated, 285 expanded
[t=0.0298006s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0298105s, 26528 KB] g=45, 288 evaluated, 287 expanded
[t=0.02994s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.02996s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0299734s, 26528 KB] g=46, 292 evaluated, 291 expanded
[t=0.0300259s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0300431s, 26528 KB] g=47, 293 evaluated, 292 expanded
[t=0.0301736s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.030194s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0302074s, 26528 KB] g=48, 297 evaluated, 296 expanded
[t=0.0302606s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0302728s, 26528 KB] g=49, 298 evaluated, 297 expanded
[t=0.0303948s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.030409s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0304231s, 26528 KB] g=50, 302 evaluated, 301 expanded
[t=0.0304622s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0304744s, 26528 KB] g=51, 303 evaluated, 302 expanded
[t=0.0306089s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0306264s, 26528 KB] g=53, 307 evaluated, 306 expanded
[t=0.0306681s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0306826s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0306936s, 26528 KB] g=54, 308 evaluated, 307 expanded
[t=0.030729s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0307382s, 26528 KB] g=55, 309 evaluated, 308 expanded
[t=0.0307689s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0307778s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.030786s, 26528 KB] g=56, 310 evaluated, 309 expanded
[t=0.0308196s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0308317s, 26528 KB] g=57, 311 evaluated, 310 expanded
[t=0.0309555s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0309706s, 26528 KB] g=61, 317 evaluated, 316 expanded
[t=0.0310372s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0310464s, 26528 KB] g=62, 320 evaluated, 319 expanded
[t=0.0310868s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0310962s, 26528 KB] g=63, 322 evaluated, 321 expanded
[t=0.0311236s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0311325s, 26528 KB] g=64, 323 evaluated, 322 expanded
[t=0.0311571s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0311662s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0311745s, 26528 KB] g=64, 324 evaluated, 323 expanded
[t=0.0311935s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0312029s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0312113s, 26528 KB] g=65, 325 evaluated, 324 expanded
[t=0.0312271s, 26528 KB] Solution found!
[t=0.0312395s, 26528 KB] Actual search time: 0.0107505s
unstack b11 b22 (1)
put-down b11 (1)
unstack b22 b18 (1)
stack b22 b11 (1)
unstack b4 b21 (1)
put-down b4 (1)
unstack b2 b16 (1)
put-down b2 (1)
unstack b16 b5 (1)
put-down b16 (1)
unstack b5 b3 (1)
put-down b5 (1)
unstack b21 b13 (1)
put-down b21 (1)
unstack b13 b10 (1)
stack b13 b21 (1)
unstack b3 b17 (1)
put-down b3 (1)
pick-up b5 (1)
stack b5 b13 (1)
unstack b10 b20 (1)
put-down b10 (1)
unstack b20 b15 (1)
stack b20 b17 (1)
unstack b15 b14 (1)
put-down b15 (1)
pick-up b10 (1)
stack b10 b14 (1)
unstack b18 b1 (1)
stack b18 b15 (1)
unstack b10 b14 (1)
put-down b10 (1)
unstack b14 b19 (1)
stack b14 b3 (1)
unstack b19 b7 (1)
put-down b19 (1)
pick-up b10 (1)
stack b10 b14 (1)
pick-up b2 (1)
stack b2 b19 (1)
unstack b7 b6 (1)
stack b7 b18 (1)
unstack b6 b8 (1)
stack b6 b10 (1)
pick-up b16 (1)
stack b16 b6 (1)
unstack b8 b9 (1)
stack b8 b4 (1)
pick-up b9 (1)
stack b9 b2 (1)
unstack b20 b17 (1)
put-down b20 (1)
unstack b17 b12 (1)
stack b17 b7 (1)
pick-up b20 (1)
stack b20 b17 (1)
unstack b5 b13 (1)
put-down b5 (1)
unstack b13 b21 (1)
put-down b13 (1)
pick-up b21 (1)
stack b21 b12 (1)
pick-up b13 (1)
stack b13 b21 (1)
pick-up b5 (1)
stack b5 b13 (1)
[t=0.0312491s, 26528 KB] Plan length: 66 step(s).
[t=0.0312491s, 26528 KB] Plan cost: 66
[t=0.0312491s, 26528 KB] Expanded 325 state(s).
[t=0.0312491s, 26528 KB] Reopened 0 state(s).
[t=0.0312491s, 26528 KB] Evaluated 326 state(s).
[t=0.0312491s, 26528 KB] Evaluations: 652
[t=0.0312491s, 26528 KB] Generated 3547 state(s).
[t=0.0312491s, 26528 KB] Dead ends: 0 state(s).
[t=0.0312491s, 26528 KB] Number of registered states: 326
[t=0.0312491s, 26528 KB] Int hash set load factor: 326/512 = 0.636719
[t=0.0312491s, 26528 KB] Int hash set resizes: 9
[t=0.0312491s, 26528 KB] Search time: 0.0108495s
[t=0.0312491s, 26528 KB] Total time: 0.0312491s
Solution found.
Peak memory: 26528 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.17s
