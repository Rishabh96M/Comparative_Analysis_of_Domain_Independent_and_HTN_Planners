INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_25/bws_problem_25_55.pddl --sas-file output.sas
Parsing...
Parsing: [0.010s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.012s wall-clock]
2052 relevant atoms
1375 auxiliary atoms
3427 final queue length
5980 total queue pushes
Completing instantiation... [0.020s CPU, 0.021s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
26 uncovered facts
Choosing groups: [0.000s CPU, 0.002s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.008s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.031s wall-clock]
1850 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
50 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.020s wall-clock]
Reordering and filtering variables...
51 of 51 variables necessary.
26 of 51 mutex groups necessary.
1250 of 1250 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.008s wall-clock]
Translator variables: 51
Translator derived variables: 0
Translator facts: 702
Translator goal facts: 20
Translator mutex groups: 26
Translator total mutex groups size: 676
Translator operators: 1250
Translator axioms: 0
Translator task size: 10749
Translator peak memory: 38388 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.120s CPU, 0.114s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=1.6089e-05s, 24488 KB] reading input...
[t=0.00432646s, 25632 KB] done reading input!
[t=0.00578445s, 26028 KB] Initializing landmark count heuristic...
[t=0.00583279s, 26028 KB] Generating landmark graph...
[t=0.00591819s, 26160 KB] Building a landmark graph with reasonable orders.
[t=0.00598755s, 26160 KB] Initializing Exploration...
[t=0.00634986s, 26532 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0226226s, 27192 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0227539s, 27192 KB] Landmarks generation time: 0.0168382s
[t=0.0227709s, 27192 KB] Discovered 107 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0227966s, 27192 KB] 782 edges
[t=0.0228081s, 27192 KB] approx. reasonable orders
[t=0.0237616s, 27192 KB] approx. obedient reasonable orders
[t=0.0238464s, 27192 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0238571s, 27192 KB] Landmarks generation time: 0.0180216s
[t=0.0238671s, 27192 KB] Discovered 107 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0238755s, 27192 KB] 792 edges
[t=0.0238849s, 27192 KB] Landmark graph generation time: 0.0180591s
[t=0.0238934s, 27192 KB] Landmark graph contains 107 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0239014s, 27192 KB] Landmark graph contains 792 orderings.
[t=0.0243132s, 27192 KB] Simplifying 4950 unary operators... done! [3750 unary operators]
[t=0.025483s, 27192 KB] time to simplify: 0.0012481s
[t=0.0256472s, 27336 KB] Initializing additive heuristic...
[t=0.0256642s, 27336 KB] Initializing FF heuristic...
[t=0.0257152s, 27336 KB] Building successor generator...done!
[t=0.0259416s, 27336 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0259497s, 27336 KB] time for successor generation creation: 0.000193432s
[t=0.0259613s, 27336 KB] Variables: 51
[t=0.0259692s, 27336 KB] FactPairs: 702
[t=0.0259769s, 27336 KB] Bytes per state: 20
[t=0.0260613s, 27336 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0260923s, 27336 KB] 48 initial landmarks, 20 goal landmarks
[t=0.0261515s, 27336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.0261608s, 27336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0261691s, 27336 KB] g=0, 1 evaluated, 0 expanded
[t=0.0261816s, 27336 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.02619s, 27336 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0263342s, 27336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 58
[t=0.0263434s, 27336 KB] g=2, 5 evaluated, 4 expanded
[t=0.02653s, 27336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 57
[t=0.0265391s, 27336 KB] g=4, 11 evaluated, 10 expanded
[t=0.0266622s, 27336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0266709s, 27336 KB] g=4, 15 evaluated, 14 expanded
[t=0.0267943s, 27336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.026803s, 27336 KB] g=5, 19 evaluated, 18 expanded
[t=0.027051s, 27336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0270643s, 27336 KB] g=7, 27 evaluated, 26 expanded
[t=0.0272757s, 27336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0272865s, 27336 KB] g=10, 33 evaluated, 32 expanded
[t=0.0275035s, 27336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0275134s, 27336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0275221s, 27336 KB] g=12, 40 evaluated, 39 expanded
[t=0.0277146s, 27336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0277234s, 27336 KB] g=14, 46 evaluated, 45 expanded
[t=0.0282483s, 27336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0282608s, 27336 KB] g=17, 63 evaluated, 62 expanded
[t=0.0283013s, 27336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0283156s, 27336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0283243s, 27336 KB] g=18, 64 evaluated, 63 expanded
[t=0.0286034s, 27336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0286126s, 27336 KB] g=20, 73 evaluated, 72 expanded
[t=0.028653s, 27336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0286618s, 27336 KB] g=21, 74 evaluated, 73 expanded
[t=0.0291683s, 27336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.029179s, 27336 KB] g=24, 90 evaluated, 89 expanded
[t=0.0293592s, 27336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.029368s, 27336 KB] g=24, 96 evaluated, 95 expanded
[t=0.0297728s, 27336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.029782s, 27336 KB] g=26, 110 evaluated, 109 expanded
[t=0.0299391s, 27336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0299479s, 27336 KB] g=27, 115 evaluated, 114 expanded
[t=0.0299897s, 27336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0299982s, 27336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0300061s, 27336 KB] g=28, 116 evaluated, 115 expanded
[t=0.0304277s, 27336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0304667s, 27336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0304877s, 27336 KB] g=30, 125 evaluated, 124 expanded
[t=0.0311175s, 27336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0311468s, 27336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0311631s, 27336 KB] g=32, 134 evaluated, 133 expanded
[t=0.0316351s, 27336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0316785s, 27336 KB] g=34, 142 evaluated, 141 expanded
[t=0.0324271s, 27336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0324538s, 27336 KB] g=36, 151 evaluated, 150 expanded
[t=0.033054s, 27336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.033075s, 27336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0330838s, 27336 KB] g=36, 165 evaluated, 164 expanded
[t=0.033376s, 27336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.033385s, 27336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0333931s, 27336 KB] g=38, 173 evaluated, 172 expanded
[t=0.0336525s, 27336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0336629s, 27336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0336725s, 27336 KB] g=40, 181 evaluated, 180 expanded
[t=0.033912s, 27336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0339263s, 27336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0339351s, 27336 KB] g=42, 188 evaluated, 187 expanded
[t=0.0343205s, 27336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0343324s, 27336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0343573s, 27336 KB] g=42, 200 evaluated, 199 expanded
[t=0.0346157s, 27336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0346278s, 27336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0346393s, 27336 KB] g=44, 208 evaluated, 207 expanded
[t=0.0355151s, 27336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0355561s, 27336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0355748s, 27336 KB] g=46, 216 evaluated, 215 expanded
[t=0.0361464s, 27336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0361817s, 27336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0361997s, 27336 KB] g=48, 223 evaluated, 222 expanded
[t=0.0366362s, 27336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0366617s, 27336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.036677s, 27336 KB] g=50, 229 evaluated, 228 expanded
[t=0.0371524s, 27336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.037181s, 27336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0371932s, 27336 KB] g=52, 236 evaluated, 235 expanded
[t=0.0375485s, 27336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.037607s, 27336 KB] g=53, 240 evaluated, 239 expanded
[t=0.0377529s, 27336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0377822s, 27336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0377998s, 27336 KB] g=54, 241 evaluated, 240 expanded
[t=0.0385468s, 27336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0385807s, 27336 KB] g=57, 248 evaluated, 247 expanded
[t=0.0399032s, 27336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0399289s, 27336 KB] g=62, 270 evaluated, 269 expanded
[t=0.0403463s, 27336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0403571s, 27336 KB] g=66, 283 evaluated, 282 expanded
[t=0.0404897s, 27336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0404991s, 27336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0405075s, 27336 KB] g=68, 287 evaluated, 286 expanded
[t=0.0418141s, 27336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0418248s, 27336 KB] g=78, 331 evaluated, 330 expanded
[t=0.04195s, 27336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0419587s, 27336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0419664s, 27336 KB] g=80, 335 evaluated, 334 expanded
[t=0.0430842s, 27336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0430935s, 27336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0431014s, 27336 KB] g=88, 373 evaluated, 372 expanded
[t=0.0432282s, 27336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.043237s, 27336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0432495s, 27336 KB] g=90, 377 evaluated, 376 expanded
[t=0.0440393s, 27336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0440516s, 27336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0440601s, 27336 KB] g=98, 405 evaluated, 404 expanded
[t=0.0441531s, 27336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0441623s, 27336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0441704s, 27336 KB] g=100, 408 evaluated, 407 expanded
[t=0.0461906s, 27336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0462021s, 27336 KB] g=122, 493 evaluated, 492 expanded
[t=0.0463993s, 27336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0464081s, 27336 KB] g=126, 502 evaluated, 501 expanded
[t=0.0464789s, 27336 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0464875s, 27336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0464954s, 27336 KB] g=128, 505 evaluated, 504 expanded
[t=0.0467077s, 27336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0467172s, 27336 KB] g=136, 515 evaluated, 514 expanded
[t=0.0467925s, 27336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0468011s, 27336 KB] g=140, 519 evaluated, 518 expanded
[t=0.0468197s, 27336 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0468279s, 27336 KB] g=141, 520 evaluated, 519 expanded
[t=0.046843s, 27336 KB] Solution found!
[t=0.046854s, 27336 KB] Actual search time: 0.0207588s
unstack b7 b1 (1)
put-down b7 (1)
unstack b1 b3 (1)
put-down b1 (1)
unstack b22 b23 (1)
put-down b22 (1)
unstack b3 b16 (1)
put-down b3 (1)
unstack b23 b5 (1)
put-down b23 (1)
unstack b5 b14 (1)
stack b5 b22 (1)
unstack b14 b9 (1)
put-down b14 (1)
unstack b16 b24 (1)
put-down b16 (1)
unstack b24 b12 (1)
stack b24 b19 (1)
unstack b12 b10 (1)
stack b12 b7 (1)
unstack b10 b15 (1)
put-down b10 (1)
unstack b15 b13 (1)
put-down b15 (1)
unstack b13 b17 (1)
stack b13 b23 (1)
unstack b17 b25 (1)
stack b17 b13 (1)
pick-up b14 (1)
stack b14 b15 (1)
pick-up b16 (1)
stack b16 b24 (1)
unstack b25 b21 (1)
put-down b25 (1)
unstack b21 b20 (1)
stack b21 b5 (1)
unstack b20 b6 (1)
stack b20 b12 (1)
pick-up b3 (1)
stack b3 b20 (1)
unstack b6 b2 (1)
stack b6 b1 (1)
unstack b2 b18 (1)
put-down b2 (1)
pick-up b10 (1)
stack b10 b2 (1)
unstack b18 b4 (1)
stack b18 b25 (1)
unstack b4 b8 (1)
stack b4 b16 (1)
pick-up b8 (1)
stack b8 b21 (1)
unstack b9 b11 (1)
stack b9 b18 (1)
unstack b17 b13 (1)
put-down b17 (1)
unstack b13 b23 (1)
put-down b13 (1)
pick-up b17 (1)
stack b17 b13 (1)
pick-up b23 (1)
stack b23 b8 (1)
unstack b17 b13 (1)
put-down b17 (1)
pick-up b13 (1)
stack b13 b23 (1)
pick-up b17 (1)
stack b17 b13 (1)
unstack b3 b20 (1)
put-down b3 (1)
unstack b20 b12 (1)
put-down b20 (1)
unstack b12 b7 (1)
put-down b12 (1)
pick-up b20 (1)
stack b20 b12 (1)
pick-up b3 (1)
stack b3 b20 (1)
pick-up b7 (1)
stack b7 b4 (1)
unstack b3 b20 (1)
put-down b3 (1)
unstack b20 b12 (1)
put-down b20 (1)
pick-up b12 (1)
stack b12 b7 (1)
pick-up b20 (1)
stack b20 b12 (1)
pick-up b3 (1)
stack b3 b20 (1)
unstack b9 b18 (1)
put-down b9 (1)
unstack b18 b25 (1)
put-down b18 (1)
pick-up b25 (1)
stack b25 b6 (1)
pick-up b18 (1)
stack b18 b25 (1)
pick-up b9 (1)
stack b9 b18 (1)
unstack b17 b13 (1)
put-down b17 (1)
unstack b13 b23 (1)
put-down b13 (1)
unstack b23 b8 (1)
put-down b23 (1)
pick-up b13 (1)
stack b13 b23 (1)
pick-up b17 (1)
stack b17 b13 (1)
unstack b8 b21 (1)
put-down b8 (1)
unstack b21 b5 (1)
put-down b21 (1)
pick-up b8 (1)
stack b8 b21 (1)
unstack b5 b22 (1)
put-down b5 (1)
pick-up b22 (1)
stack b22 b14 (1)
pick-up b5 (1)
stack b5 b22 (1)
unstack b8 b21 (1)
put-down b8 (1)
pick-up b21 (1)
stack b21 b5 (1)
pick-up b8 (1)
stack b8 b21 (1)
unstack b17 b13 (1)
put-down b17 (1)
unstack b13 b23 (1)
put-down b13 (1)
pick-up b17 (1)
stack b17 b13 (1)
pick-up b23 (1)
stack b23 b8 (1)
unstack b17 b13 (1)
put-down b17 (1)
pick-up b13 (1)
stack b13 b23 (1)
pick-up b17 (1)
stack b17 b13 (1)
[t=0.0468633s, 27336 KB] Plan length: 142 step(s).
[t=0.0468633s, 27336 KB] Plan cost: 142
[t=0.0468633s, 27336 KB] Expanded 520 state(s).
[t=0.0468633s, 27336 KB] Reopened 0 state(s).
[t=0.0468633s, 27336 KB] Evaluated 521 state(s).
[t=0.0468633s, 27336 KB] Evaluations: 1042
[t=0.0468633s, 27336 KB] Generated 5080 state(s).
[t=0.0468633s, 27336 KB] Dead ends: 0 state(s).
[t=0.0468633s, 27336 KB] Number of registered states: 521
[t=0.0468633s, 27336 KB] Int hash set load factor: 521/1024 = 0.508789
[t=0.0468633s, 27336 KB] Int hash set resizes: 10
[t=0.0468633s, 27336 KB] Search time: 0.0208024s
[t=0.0468633s, 27336 KB] Total time: 0.0468633s
Solution found.
Peak memory: 27336 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.21s
