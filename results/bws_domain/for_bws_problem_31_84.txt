INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_31/bws_problem_31_84.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.019s wall-clock]
3102 relevant atoms
2077 auxiliary atoms
5179 final queue length
9093 total queue pushes
Completing instantiation... [0.030s CPU, 0.034s wall-clock]
Instantiating: [0.050s CPU, 0.056s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.002s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
32 uncovered facts
Choosing groups: [0.000s CPU, 0.002s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.010s CPU, 0.011s wall-clock]
Building STRIPS to SAS dictionary... [0.010s CPU, 0.004s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.001s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.002s wall-clock]
Translating task: [0.060s CPU, 0.050s wall-clock]
2852 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
62 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.024s wall-clock]
Reordering and filtering variables...
63 of 63 variables necessary.
32 of 63 mutex groups necessary.
1922 of 1922 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.012s wall-clock]
Translator variables: 63
Translator derived variables: 0
Translator facts: 1056
Translator goal facts: 29
Translator mutex groups: 32
Translator total mutex groups size: 1024
Translator operators: 1922
Translator axioms: 0
Translator task size: 16494
Translator peak memory: 42104 KB
Writing output... [0.010s CPU, 0.012s wall-clock]
Done! [0.180s CPU, 0.176s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=6.2123e-05s, 24488 KB] reading input...
[t=0.0060147s, 26640 KB] done reading input!
[t=0.00689606s, 26904 KB] Initializing landmark count heuristic...
[t=0.00693126s, 26904 KB] Generating landmark graph...
[t=0.00702679s, 27036 KB] Building a landmark graph with reasonable orders.
[t=0.00711893s, 27168 KB] Initializing Exploration...
[t=0.0076831s, 27612 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0349922s, 28400 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0351208s, 28400 KB] Landmarks generation time: 0.0281044s
[t=0.0351456s, 28400 KB] Discovered 140 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0351684s, 28400 KB] 462 edges
[t=0.0351833s, 28400 KB] approx. reasonable orders
[t=0.0397146s, 28400 KB] approx. obedient reasonable orders
[t=0.0398565s, 28400 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0398696s, 28400 KB] Landmarks generation time: 0.0329388s
[t=0.0398842s, 28400 KB] Discovered 140 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0398945s, 28400 KB] 502 edges
[t=0.0399055s, 28400 KB] Landmark graph generation time: 0.0329839s
[t=0.0399181s, 28400 KB] Landmark graph contains 140 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0399265s, 28400 KB] Landmark graph contains 502 orderings.
[t=0.041s, 28432 KB] Simplifying 7626 unary operators... done! [5766 unary operators]
[t=0.042992s, 28564 KB] time to simplify: 0.00211283s
[t=0.0432306s, 28564 KB] Initializing additive heuristic...
[t=0.0432535s, 28564 KB] Initializing FF heuristic...
[t=0.0433275s, 28564 KB] Building successor generator...done!
[t=0.043692s, 28564 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0437144s, 28564 KB] time for successor generation creation: 0.000324795s
[t=0.0437284s, 28564 KB] Variables: 63
[t=0.0437366s, 28564 KB] FactPairs: 1056
[t=0.0437446s, 28564 KB] Bytes per state: 24
[t=0.043852s, 28564 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0438855s, 28564 KB] 63 initial landmarks, 29 goal landmarks
[t=0.0439873s, 28564 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 77
[t=0.0439964s, 28564 KB] New best heuristic value for ff(transform = adapt_costs(one)): 58
[t=0.0440045s, 28564 KB] g=0, 1 evaluated, 0 expanded
[t=0.0440209s, 28564 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 77
[t=0.0440334s, 28564 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 58
[t=0.0442417s, 28564 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 76
[t=0.0442509s, 28564 KB] g=1, 5 evaluated, 4 expanded
[t=0.044689s, 28564 KB] New best heuristic value for ff(transform = adapt_costs(one)): 57
[t=0.0446992s, 28564 KB] g=2, 14 evaluated, 13 expanded
[t=0.0449842s, 28564 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 75
[t=0.0449938s, 28564 KB] g=3, 20 evaluated, 19 expanded
[t=0.0454924s, 28564 KB] New best heuristic value for ff(transform = adapt_costs(one)): 56
[t=0.0455016s, 28564 KB] g=4, 31 evaluated, 30 expanded
[t=0.0460311s, 28564 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 74
[t=0.0460455s, 28564 KB] g=6, 41 evaluated, 40 expanded
[t=0.0468757s, 28564 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 71
[t=0.0468888s, 28564 KB] New best heuristic value for ff(transform = adapt_costs(one)): 55
[t=0.0469005s, 28564 KB] g=8, 59 evaluated, 58 expanded
[t=0.0474203s, 28564 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 69
[t=0.0474332s, 28564 KB] New best heuristic value for ff(transform = adapt_costs(one)): 53
[t=0.047442s, 28564 KB] g=10, 70 evaluated, 69 expanded
[t=0.0478934s, 28564 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 67
[t=0.0479033s, 28564 KB] New best heuristic value for ff(transform = adapt_costs(one)): 52
[t=0.0479113s, 28564 KB] g=12, 80 evaluated, 79 expanded
[t=0.0483094s, 28564 KB] New best heuristic value for ff(transform = adapt_costs(one)): 51
[t=0.0483192s, 28564 KB] g=14, 89 evaluated, 88 expanded
[t=0.0484153s, 28564 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 66
[t=0.0484305s, 28564 KB] g=14, 91 evaluated, 90 expanded
[t=0.0492106s, 28564 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 65
[t=0.0492213s, 28564 KB] New best heuristic value for ff(transform = adapt_costs(one)): 50
[t=0.0492297s, 28564 KB] g=16, 109 evaluated, 108 expanded
[t=0.0496264s, 28564 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 64
[t=0.049636s, 28564 KB] g=18, 118 evaluated, 117 expanded
[t=0.0498821s, 28564 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 63
[t=0.0498919s, 28564 KB] New best heuristic value for ff(transform = adapt_costs(one)): 49
[t=0.0499008s, 28564 KB] g=18, 123 evaluated, 122 expanded
[t=0.0503049s, 28564 KB] New best heuristic value for ff(transform = adapt_costs(one)): 48
[t=0.0503146s, 28564 KB] g=20, 132 evaluated, 131 expanded
[t=0.0504562s, 28564 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 62
[t=0.050465s, 28564 KB] g=20, 135 evaluated, 134 expanded
[t=0.0515216s, 28564 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 61
[t=0.0515366s, 28564 KB] g=22, 158 evaluated, 157 expanded
[t=0.052589s, 28564 KB] New best heuristic value for ff(transform = adapt_costs(one)): 47
[t=0.0526011s, 28564 KB] g=24, 181 evaluated, 180 expanded
[t=0.0527028s, 28564 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 60
[t=0.0527137s, 28564 KB] g=24, 183 evaluated, 182 expanded
[t=0.0537695s, 28564 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.0537849s, 28564 KB] g=26, 207 evaluated, 206 expanded
[t=0.0542646s, 28564 KB] New best heuristic value for ff(transform = adapt_costs(one)): 46
[t=0.0542836s, 28564 KB] g=26, 218 evaluated, 217 expanded
[t=0.054989s, 28564 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 57
[t=0.0550063s, 28564 KB] g=28, 234 evaluated, 233 expanded
[t=0.0561505s, 28564 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0561745s, 28564 KB] g=30, 256 evaluated, 255 expanded
[t=0.0575642s, 28564 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0575787s, 28564 KB] g=32, 286 evaluated, 285 expanded
[t=0.0587954s, 28564 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0588062s, 28564 KB] g=34, 313 evaluated, 312 expanded
[t=0.0596798s, 28564 KB] New best heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0596917s, 28564 KB] g=36, 333 evaluated, 332 expanded
[t=0.0600997s, 28564 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0601106s, 28564 KB] g=36, 342 evaluated, 341 expanded
[t=0.060626s, 28564 KB] New best heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.0606362s, 28564 KB] g=38, 354 evaluated, 353 expanded
[t=0.0612424s, 28564 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0612551s, 28564 KB] g=38, 366 evaluated, 365 expanded
[t=0.0618918s, 28564 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0619016s, 28564 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0619175s, 28564 KB] g=40, 381 evaluated, 380 expanded
[t=0.0623499s, 28564 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.06236s, 28564 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0623735s, 28564 KB] g=42, 391 evaluated, 390 expanded
[t=0.0633631s, 28564 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.063376s, 28564 KB] g=45, 413 evaluated, 412 expanded
[t=0.0634347s, 28564 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0634449s, 28564 KB] g=46, 414 evaluated, 413 expanded
[t=0.063899s, 28564 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0639155s, 28564 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0639244s, 28564 KB] g=48, 424 evaluated, 423 expanded
[t=0.0643683s, 28564 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0643785s, 28564 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0643864s, 28564 KB] g=50, 434 evaluated, 433 expanded
[t=0.065133s, 28564 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0651553s, 28564 KB] g=53, 451 evaluated, 450 expanded
[t=0.066382s, 28564 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0663965s, 28564 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0664079s, 28564 KB] g=56, 478 evaluated, 477 expanded
[t=0.0668718s, 28564 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0668826s, 28564 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0668919s, 28564 KB] g=58, 488 evaluated, 487 expanded
[t=0.0673047s, 28564 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0673282s, 28564 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0673364s, 28564 KB] g=60, 497 evaluated, 496 expanded
[t=0.0693025s, 28564 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.06933s, 28564 KB] g=66, 543 evaluated, 542 expanded
[t=0.0784137s, 28564 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.078444s, 28564 KB] g=70, 750 evaluated, 749 expanded
[t=0.0790943s, 28564 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0791111s, 28564 KB] g=72, 765 evaluated, 764 expanded
[t=0.080509s, 28564 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0805195s, 28564 KB] g=78, 797 evaluated, 796 expanded
[t=0.0816469s, 28564 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0816628s, 28564 KB] g=84, 823 evaluated, 822 expanded
[t=0.0912759s, 28564 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0913457s, 28564 KB] g=96, 1051 evaluated, 1050 expanded
[t=0.0917109s, 28564 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0917233s, 28564 KB] g=98, 1059 evaluated, 1058 expanded
[t=0.0920422s, 28564 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0920605s, 28564 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0920716s, 28564 KB] g=100, 1066 evaluated, 1065 expanded
[t=0.0924393s, 28564 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0924524s, 28564 KB] g=102, 1074 evaluated, 1073 expanded
[t=0.0925066s, 28564 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0925155s, 28564 KB] g=102, 1075 evaluated, 1074 expanded
[t=0.093015s, 28564 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0930272s, 28564 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.093035s, 28564 KB] g=104, 1087 evaluated, 1086 expanded
[t=0.093374s, 28564 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0933853s, 28564 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0933962s, 28564 KB] g=106, 1094 evaluated, 1093 expanded
[t=0.0936487s, 28564 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0936577s, 28564 KB] g=108, 1100 evaluated, 1099 expanded
[t=0.0940703s, 28564 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0940801s, 28564 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0940878s, 28564 KB] g=110, 1110 evaluated, 1109 expanded
[t=0.0943755s, 28564 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.094385s, 28564 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0943934s, 28564 KB] g=112, 1117 evaluated, 1116 expanded
[t=0.0961298s, 28564 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0961445s, 28564 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0961529s, 28564 KB] g=118, 1158 evaluated, 1157 expanded
[t=0.0996629s, 28564 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0996863s, 28564 KB] g=128, 1242 evaluated, 1241 expanded
[t=0.100062s, 28564 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.100073s, 28564 KB] g=130, 1251 evaluated, 1250 expanded
[t=0.101094s, 28564 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.101134s, 28564 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.101143s, 28564 KB] g=136, 1275 evaluated, 1274 expanded
[t=0.11272s, 28564 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.112754s, 28564 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.112763s, 28564 KB] g=146, 1551 evaluated, 1550 expanded
[t=0.126284s, 28564 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.12632s, 28564 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.126329s, 28564 KB] g=180, 1876 evaluated, 1875 expanded
[t=0.12707s, 28564 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.127082s, 28564 KB] g=184, 1892 evaluated, 1891 expanded
[t=0.12726s, 28564 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.127269s, 28564 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.127282s, 28564 KB] g=186, 1896 evaluated, 1895 expanded
[t=0.129436s, 28564 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.129451s, 28564 KB] g=198, 1950 evaluated, 1949 expanded
[t=0.129791s, 28564 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.1298s, 28564 KB] g=202, 1959 evaluated, 1958 expanded
[t=0.129917s, 28564 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.129925s, 28564 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.129934s, 28564 KB] g=204, 1962 evaluated, 1961 expanded
[t=0.160963s, 28564 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.161031s, 28564 KB] g=252, 2941 evaluated, 2940 expanded
[t=0.16115s, 28564 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.161161s, 28564 KB] g=254, 2945 evaluated, 2944 expanded
[t=0.161915s, 28564 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.16193s, 28564 KB] g=262, 2974 evaluated, 2973 expanded
[t=0.162011s, 28564 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.162021s, 28564 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.162029s, 28564 KB] g=264, 2977 evaluated, 2976 expanded
[t=0.162966s, 28696 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.162983s, 28696 KB] g=280, 3020 evaluated, 3019 expanded
[t=0.163195s, 28696 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.163207s, 28696 KB] g=288, 3031 evaluated, 3030 expanded
[t=0.163233s, 28696 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.163241s, 28696 KB] g=288, 3032 evaluated, 3031 expanded
[t=0.163261s, 28696 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.163269s, 28696 KB] g=289, 3033 evaluated, 3032 expanded
[t=0.163293s, 28696 KB] Solution found!
[t=0.163314s, 28696 KB] Actual search time: 0.119426s
unstack b19 b2 (1)
put-down b19 (1)
unstack b14 b30 (1)
put-down b14 (1)
unstack b10 b23 (1)
put-down b10 (1)
unstack b11 b16 (1)
stack b11 b19 (1)
pick-up b10 (1)
stack b10 b11 (1)
unstack b16 b26 (1)
stack b16 b22 (1)
unstack b2 b15 (1)
stack b2 b26 (1)
unstack b23 b20 (1)
stack b23 b6 (1)
unstack b8 b18 (1)
stack b8 b15 (1)
unstack b2 b26 (1)
put-down b2 (1)
unstack b20 b21 (1)
put-down b20 (1)
unstack b24 b27 (1)
put-down b24 (1)
unstack b26 b9 (1)
put-down b26 (1)
unstack b27 b7 (1)
stack b27 b21 (1)
unstack b7 b28 (1)
put-down b7 (1)
unstack b28 b31 (1)
stack b28 b16 (1)
unstack b31 b4 (1)
stack b31 b2 (1)
pick-up b18 (1)
stack b18 b23 (1)
pick-up b14 (1)
stack b14 b18 (1)
pick-up b20 (1)
stack b20 b27 (1)
pick-up b9 (1)
stack b9 b28 (1)
unstack b30 b3 (1)
put-down b30 (1)
unstack b3 b1 (1)
stack b3 b20 (1)
pick-up b1 (1)
stack b1 b7 (1)
pick-up b30 (1)
stack b30 b3 (1)
unstack b8 b15 (1)
put-down b8 (1)
unstack b15 b17 (1)
put-down b15 (1)
pick-up b17 (1)
stack b17 b10 (1)
pick-up b24 (1)
stack b24 b17 (1)
pick-up b8 (1)
stack b8 b15 (1)
unstack b14 b18 (1)
put-down b14 (1)
unstack b18 b23 (1)
put-down b18 (1)
pick-up b14 (1)
stack b14 b18 (1)
unstack b23 b6 (1)
put-down b23 (1)
pick-up b6 (1)
stack b6 b30 (1)
pick-up b23 (1)
stack b23 b6 (1)
unstack b14 b18 (1)
put-down b14 (1)
pick-up b18 (1)
stack b18 b23 (1)
pick-up b14 (1)
stack b14 b18 (1)
unstack b31 b2 (1)
put-down b31 (1)
pick-up b2 (1)
stack b2 b26 (1)
pick-up b31 (1)
stack b31 b2 (1)
unstack b9 b28 (1)
put-down b9 (1)
unstack b28 b16 (1)
put-down b28 (1)
pick-up b9 (1)
stack b9 b28 (1)
unstack b16 b22 (1)
put-down b16 (1)
unstack b22 b13 (1)
put-down b22 (1)
unstack b13 b5 (1)
stack b13 b8 (1)
pick-up b16 (1)
stack b16 b22 (1)
unstack b5 b12 (1)
stack b5 b1 (1)
unstack b12 b29 (1)
stack b12 b4 (1)
unstack b29 b25 (1)
stack b29 b9 (1)
pick-up b25 (1)
stack b25 b31 (1)
unstack b12 b4 (1)
put-down b12 (1)
pick-up b4 (1)
stack b4 b5 (1)
pick-up b12 (1)
stack b12 b4 (1)
unstack b16 b22 (1)
put-down b16 (1)
pick-up b22 (1)
stack b22 b13 (1)
pick-up b16 (1)
stack b16 b22 (1)
unstack b29 b9 (1)
put-down b29 (1)
unstack b9 b28 (1)
put-down b9 (1)
pick-up b28 (1)
stack b28 b16 (1)
pick-up b9 (1)
stack b9 b28 (1)
pick-up b29 (1)
stack b29 b9 (1)
unstack b25 b31 (1)
put-down b25 (1)
unstack b31 b2 (1)
put-down b31 (1)
pick-up b25 (1)
stack b25 b31 (1)
unstack b2 b26 (1)
put-down b2 (1)
pick-up b26 (1)
stack b26 b29 (1)
pick-up b2 (1)
stack b2 b26 (1)
unstack b25 b31 (1)
put-down b25 (1)
pick-up b31 (1)
stack b31 b2 (1)
pick-up b25 (1)
stack b25 b31 (1)
unstack b14 b18 (1)
put-down b14 (1)
unstack b18 b23 (1)
put-down b18 (1)
pick-up b14 (1)
stack b14 b18 (1)
unstack b23 b6 (1)
put-down b23 (1)
unstack b6 b30 (1)
put-down b6 (1)
pick-up b23 (1)
stack b23 b6 (1)
unstack b14 b18 (1)
put-down b14 (1)
pick-up b18 (1)
stack b18 b23 (1)
pick-up b14 (1)
stack b14 b18 (1)
unstack b30 b3 (1)
put-down b30 (1)
unstack b3 b20 (1)
put-down b3 (1)
pick-up b30 (1)
stack b30 b3 (1)
unstack b20 b27 (1)
put-down b20 (1)
unstack b27 b21 (1)
put-down b27 (1)
pick-up b21 (1)
stack b21 b24 (1)
pick-up b27 (1)
stack b27 b21 (1)
pick-up b20 (1)
stack b20 b27 (1)
unstack b30 b3 (1)
put-down b30 (1)
pick-up b3 (1)
stack b3 b20 (1)
pick-up b30 (1)
stack b30 b3 (1)
unstack b14 b18 (1)
put-down b14 (1)
unstack b18 b23 (1)
put-down b18 (1)
pick-up b14 (1)
stack b14 b18 (1)
unstack b23 b6 (1)
put-down b23 (1)
pick-up b6 (1)
stack b6 b30 (1)
pick-up b23 (1)
stack b23 b6 (1)
unstack b14 b18 (1)
put-down b14 (1)
pick-up b18 (1)
stack b18 b23 (1)
pick-up b14 (1)
stack b14 b18 (1)
unstack b25 b31 (1)
put-down b25 (1)
unstack b31 b2 (1)
put-down b31 (1)
pick-up b25 (1)
stack b25 b31 (1)
unstack b2 b26 (1)
put-down b2 (1)
unstack b26 b29 (1)
put-down b26 (1)
unstack b29 b9 (1)
put-down b29 (1)
pick-up b26 (1)
stack b26 b29 (1)
pick-up b2 (1)
stack b2 b26 (1)
unstack b25 b31 (1)
put-down b25 (1)
pick-up b31 (1)
stack b31 b2 (1)
pick-up b25 (1)
stack b25 b31 (1)
unstack b9 b28 (1)
put-down b9 (1)
unstack b28 b16 (1)
put-down b28 (1)
unstack b16 b22 (1)
put-down b16 (1)
pick-up b28 (1)
stack b28 b16 (1)
pick-up b9 (1)
stack b9 b28 (1)
unstack b22 b13 (1)
put-down b22 (1)
unstack b13 b8 (1)
put-down b13 (1)
pick-up b22 (1)
stack b22 b13 (1)
unstack b8 b15 (1)
put-down b8 (1)
pick-up b15 (1)
stack b15 b12 (1)
pick-up b8 (1)
stack b8 b15 (1)
unstack b22 b13 (1)
put-down b22 (1)
pick-up b13 (1)
stack b13 b8 (1)
pick-up b22 (1)
stack b22 b13 (1)
unstack b9 b28 (1)
put-down b9 (1)
unstack b28 b16 (1)
put-down b28 (1)
pick-up b16 (1)
stack b16 b22 (1)
pick-up b28 (1)
stack b28 b16 (1)
pick-up b9 (1)
stack b9 b28 (1)
unstack b25 b31 (1)
put-down b25 (1)
unstack b31 b2 (1)
put-down b31 (1)
unstack b2 b26 (1)
put-down b2 (1)
pick-up b31 (1)
stack b31 b2 (1)
pick-up b25 (1)
stack b25 b31 (1)
unstack b26 b29 (1)
put-down b26 (1)
pick-up b29 (1)
stack b29 b9 (1)
pick-up b26 (1)
stack b26 b29 (1)
unstack b25 b31 (1)
put-down b25 (1)
unstack b31 b2 (1)
put-down b31 (1)
pick-up b2 (1)
stack b2 b26 (1)
pick-up b31 (1)
stack b31 b2 (1)
pick-up b25 (1)
stack b25 b31 (1)
[t=0.163325s, 28696 KB] Plan length: 290 step(s).
[t=0.163325s, 28696 KB] Plan cost: 290
[t=0.163325s, 28696 KB] Expanded 3033 state(s).
[t=0.163325s, 28696 KB] Reopened 0 state(s).
[t=0.163325s, 28696 KB] Evaluated 3034 state(s).
[t=0.163325s, 28696 KB] Evaluations: 6068
[t=0.163325s, 28696 KB] Generated 25918 state(s).
[t=0.163325s, 28696 KB] Dead ends: 0 state(s).
[t=0.163325s, 28696 KB] Number of registered states: 3034
[t=0.163325s, 28696 KB] Int hash set load factor: 3034/4096 = 0.740723
[t=0.163325s, 28696 KB] Int hash set resizes: 12
[t=0.163325s, 28696 KB] Search time: 0.119473s
[t=0.163325s, 28696 KB] Total time: 0.163325s
Solution found.
Peak memory: 28696 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.38s
