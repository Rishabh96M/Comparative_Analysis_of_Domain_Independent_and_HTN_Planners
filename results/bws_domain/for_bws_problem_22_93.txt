INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_22/bws_problem_22_93.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.010s wall-clock]
1608 relevant atoms
1078 auxiliary atoms
2686 final queue length
4669 total queue pushes
Completing instantiation... [0.020s CPU, 0.016s wall-clock]
Instantiating: [0.030s CPU, 0.028s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
23 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.007s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.025s wall-clock]
1430 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
44 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.011s wall-clock]
Reordering and filtering variables...
45 of 45 variables necessary.
23 of 45 mutex groups necessary.
968 of 968 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.007s wall-clock]
Translator variables: 45
Translator derived variables: 0
Translator facts: 552
Translator goal facts: 18
Translator mutex groups: 23
Translator total mutex groups size: 529
Translator operators: 968
Translator axioms: 0
Translator task size: 8338
Translator peak memory: 36976 KB
Writing output... [0.010s CPU, 0.005s wall-clock]
Done! [0.090s CPU, 0.087s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=1.8902e-05s, 24488 KB] reading input...
[t=0.00271873s, 25340 KB] done reading input!
[t=0.00373605s, 25736 KB] Initializing landmark count heuristic...
[t=0.00376946s, 25736 KB] Generating landmark graph...
[t=0.003832s, 25736 KB] Building a landmark graph with reasonable orders.
[t=0.00389196s, 25736 KB] Initializing Exploration...
[t=0.00421673s, 26000 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0151348s, 26528 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0151952s, 26528 KB] Landmarks generation time: 0.0113639s
[t=0.0152091s, 26528 KB] Discovered 100 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0152253s, 26528 KB] 470 edges
[t=0.0152353s, 26528 KB] approx. reasonable orders
[t=0.0185029s, 26528 KB] approx. obedient reasonable orders
[t=0.0188367s, 26528 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0188565s, 26528 KB] Landmarks generation time: 0.0150863s
[t=0.0188688s, 26528 KB] Discovered 100 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0188784s, 26528 KB] 559 edges
[t=0.0188875s, 26528 KB] Landmark graph generation time: 0.0151256s
[t=0.0188968s, 26528 KB] Landmark graph contains 100 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0189051s, 26528 KB] Landmark graph contains 559 orderings.
[t=0.0192762s, 26528 KB] Simplifying 3828 unary operators... done! [2904 unary operators]
[t=0.0202349s, 26528 KB] time to simplify: 0.00106086s
[t=0.0204081s, 26528 KB] Initializing additive heuristic...
[t=0.020424s, 26528 KB] Initializing FF heuristic...
[t=0.0204867s, 26528 KB] Building successor generator...done!
[t=0.0206996s, 26528 KB] peak memory difference for successor generator creation: 0 KB
[t=0.020709s, 26528 KB] time for successor generation creation: 0.000178267s
[t=0.020722s, 26528 KB] Variables: 45
[t=0.0207313s, 26528 KB] FactPairs: 552
[t=0.0207397s, 26528 KB] Bytes per state: 20
[t=0.0208569s, 26528 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0208961s, 26528 KB] 45 initial landmarks, 18 goal landmarks
[t=0.0209592s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0209706s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0209802s, 26528 KB] g=0, 1 evaluated, 0 expanded
[t=0.0209955s, 26528 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0210058s, 26528 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0212587s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0212749s, 26528 KB] g=1, 4 evaluated, 3 expanded
[t=0.0213386s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0213492s, 26528 KB] g=2, 6 evaluated, 5 expanded
[t=0.02146s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0214699s, 26528 KB] g=3, 10 evaluated, 9 expanded
[t=0.0215805s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0215902s, 26528 KB] g=4, 14 evaluated, 13 expanded
[t=0.0216262s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0216388s, 26528 KB] g=5, 15 evaluated, 14 expanded
[t=0.0217509s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0217612s, 26528 KB] g=7, 19 evaluated, 18 expanded
[t=0.0220223s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0220332s, 26528 KB] g=10, 29 evaluated, 28 expanded
[t=0.0222486s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0222612s, 26528 KB] g=12, 37 evaluated, 36 expanded
[t=0.0223232s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0223325s, 26528 KB] g=12, 39 evaluated, 38 expanded
[t=0.0226173s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0226307s, 26528 KB] g=14, 50 evaluated, 49 expanded
[t=0.0227704s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0227833s, 26528 KB] g=14, 55 evaluated, 54 expanded
[t=0.0231457s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.023162s, 26528 KB] g=16, 68 evaluated, 67 expanded
[t=0.0236766s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0236903s, 26528 KB] g=18, 88 evaluated, 87 expanded
[t=0.0237302s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.02374s, 26528 KB] g=18, 89 evaluated, 88 expanded
[t=0.0237761s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0237851s, 26528 KB] g=19, 90 evaluated, 89 expanded
[t=0.0243224s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0243415s, 26528 KB] g=20, 109 evaluated, 108 expanded
[t=0.024484s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0245017s, 26528 KB] g=22, 114 evaluated, 113 expanded
[t=0.0247425s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0247568s, 26528 KB] g=22, 123 evaluated, 122 expanded
[t=0.0251681s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.025184s, 26528 KB] g=24, 137 evaluated, 136 expanded
[t=0.0252463s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0252556s, 26528 KB] g=24, 139 evaluated, 138 expanded
[t=0.0258711s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0258866s, 26528 KB] g=28, 162 evaluated, 161 expanded
[t=0.0259263s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0259357s, 26528 KB] g=26, 163 evaluated, 162 expanded
[t=0.0264531s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0264641s, 26528 KB] g=28, 183 evaluated, 182 expanded
[t=0.027213s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0272244s, 26528 KB] g=30, 212 evaluated, 211 expanded
[t=0.0275639s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0275745s, 26528 KB] g=32, 225 evaluated, 224 expanded
[t=0.0279445s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0279546s, 26528 KB] g=32, 239 evaluated, 238 expanded
[t=0.0279938s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0280029s, 26528 KB] g=34, 240 evaluated, 239 expanded
[t=0.0287402s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0287515s, 26528 KB] g=38, 268 evaluated, 267 expanded
[t=0.0291528s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0291648s, 26528 KB] g=40, 283 evaluated, 282 expanded
[t=0.0294467s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0294568s, 26528 KB] g=34, 294 evaluated, 293 expanded
[t=0.0299959s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0300121s, 26528 KB] g=44, 314 evaluated, 313 expanded
[t=0.0302786s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0302885s, 26528 KB] g=36, 324 evaluated, 323 expanded
[t=0.0303522s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0303612s, 26528 KB] g=44, 326 evaluated, 325 expanded
[t=0.0307158s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0307386s, 26528 KB] g=46, 340 evaluated, 339 expanded
[t=0.0309771s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0309864s, 26528 KB] g=38, 349 evaluated, 348 expanded
[t=0.0316181s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0316287s, 26528 KB] g=40, 374 evaluated, 373 expanded
[t=0.0320938s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0321174s, 26528 KB] g=50, 392 evaluated, 391 expanded
[t=0.032154s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0321633s, 26528 KB] g=42, 393 evaluated, 392 expanded
[t=0.0324749s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0324859s, 26528 KB] g=52, 405 evaluated, 404 expanded
[t=0.0326784s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0326903s, 26528 KB] g=44, 412 evaluated, 411 expanded
[t=0.0335s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0335137s, 26528 KB] g=46, 443 evaluated, 442 expanded
[t=0.0340511s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0340636s, 26528 KB] g=48, 465 evaluated, 464 expanded
[t=0.0344014s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0344118s, 26528 KB] g=50, 479 evaluated, 478 expanded
[t=0.0347044s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0347176s, 26528 KB] g=62, 491 evaluated, 490 expanded
[t=0.0348376s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.034849s, 26528 KB] g=52, 496 evaluated, 495 expanded
[t=0.0349656s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0349754s, 26528 KB] g=64, 501 evaluated, 500 expanded
[t=0.0351872s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0351981s, 26528 KB] g=66, 510 evaluated, 509 expanded
[t=0.0353281s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0353443s, 26528 KB] g=54, 514 evaluated, 513 expanded
[t=0.0355827s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0355928s, 26528 KB] g=56, 525 evaluated, 524 expanded
[t=0.0356799s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0356894s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.035698s, 26528 KB] g=58, 529 evaluated, 528 expanded
[t=0.0360551s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0360667s, 26528 KB] g=69, 549 evaluated, 548 expanded
[t=0.0360952s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.036104s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0361129s, 26528 KB] g=70, 550 evaluated, 549 expanded
[t=0.0362044s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0362155s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0362234s, 26528 KB] g=72, 555 evaluated, 554 expanded
[t=0.0362657s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0362759s, 26528 KB] g=73, 556 evaluated, 555 expanded
[t=0.0363014s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0363103s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0363187s, 26528 KB] g=74, 557 evaluated, 556 expanded
[t=0.0363741s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0363834s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0363918s, 26528 KB] g=76, 560 evaluated, 559 expanded
[t=0.0364547s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0364653s, 26528 KB] g=80, 564 evaluated, 563 expanded
[t=0.0364839s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0364939s, 26528 KB] g=81, 565 evaluated, 564 expanded
[t=0.0365097s, 26528 KB] Solution found!
[t=0.0365243s, 26528 KB] Actual search time: 0.0156245s
unstack b19 b6 (1)
put-down b19 (1)
unstack b3 b2 (1)
put-down b3 (1)
unstack b18 b9 (1)
put-down b18 (1)
unstack b2 b7 (1)
put-down b2 (1)
unstack b6 b8 (1)
put-down b6 (1)
unstack b7 b22 (1)
put-down b7 (1)
unstack b22 b15 (1)
put-down b22 (1)
unstack b15 b16 (1)
put-down b15 (1)
unstack b8 b11 (1)
stack b8 b16 (1)
unstack b11 b20 (1)
put-down b11 (1)
unstack b20 b5 (1)
stack b20 b3 (1)
unstack b5 b17 (1)
put-down b5 (1)
unstack b9 b12 (1)
put-down b9 (1)
unstack b12 b1 (1)
stack b12 b19 (1)
unstack b17 b13 (1)
put-down b17 (1)
unstack b13 b21 (1)
put-down b13 (1)
pick-up b15 (1)
stack b15 b20 (1)
pick-up b21 (1)
stack b21 b8 (1)
pick-up b2 (1)
stack b2 b21 (1)
pick-up b6 (1)
stack b6 b15 (1)
pick-up b22 (1)
stack b22 b6 (1)
unstack b1 b14 (1)
put-down b1 (1)
pick-up b14 (1)
stack b14 b22 (1)
pick-up b5 (1)
stack b5 b14 (1)
pick-up b1 (1)
stack b1 b5 (1)
pick-up b13 (1)
stack b13 b1 (1)
pick-up b9 (1)
stack b9 b13 (1)
pick-up b7 (1)
stack b7 b9 (1)
pick-up b11 (1)
stack b11 b7 (1)
unstack b2 b21 (1)
put-down b2 (1)
unstack b21 b8 (1)
put-down b21 (1)
pick-up b2 (1)
stack b2 b21 (1)
unstack b8 b16 (1)
put-down b8 (1)
unstack b16 b4 (1)
put-down b16 (1)
unstack b4 b10 (1)
stack b4 b17 (1)
pick-up b10 (1)
stack b10 b12 (1)
pick-up b18 (1)
stack b18 b10 (1)
pick-up b8 (1)
stack b8 b16 (1)
unstack b2 b21 (1)
put-down b2 (1)
pick-up b21 (1)
stack b21 b8 (1)
pick-up b2 (1)
stack b2 b21 (1)
[t=0.0365349s, 26528 KB] Plan length: 82 step(s).
[t=0.0365349s, 26528 KB] Plan cost: 82
[t=0.0365349s, 26528 KB] Expanded 565 state(s).
[t=0.0365349s, 26528 KB] Reopened 0 state(s).
[t=0.0365349s, 26528 KB] Evaluated 566 state(s).
[t=0.0365349s, 26528 KB] Evaluations: 1132
[t=0.0365349s, 26528 KB] Generated 6019 state(s).
[t=0.0365349s, 26528 KB] Dead ends: 0 state(s).
[t=0.0365349s, 26528 KB] Number of registered states: 566
[t=0.0365349s, 26528 KB] Int hash set load factor: 566/1024 = 0.552734
[t=0.0365349s, 26528 KB] Int hash set resizes: 10
[t=0.0365349s, 26528 KB] Search time: 0.0156784s
[t=0.0365349s, 26528 KB] Total time: 0.0365349s
Solution found.
Peak memory: 26528 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.17s
