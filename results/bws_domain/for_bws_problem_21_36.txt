INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_21/bws_problem_21_36.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.010s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.000s CPU, 0.009s wall-clock]
1472 relevant atoms
987 auxiliary atoms
2459 final queue length
4269 total queue pushes
Completing instantiation... [0.010s CPU, 0.015s wall-clock]
Instantiating: [0.020s CPU, 0.026s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.010s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
22 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.006s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.022s wall-clock]
1302 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
42 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.011s wall-clock]
Reordering and filtering variables...
43 of 43 variables necessary.
22 of 43 mutex groups necessary.
882 of 882 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.005s wall-clock]
Translator variables: 43
Translator derived variables: 0
Translator facts: 506
Translator goal facts: 18
Translator mutex groups: 22
Translator total mutex groups size: 484
Translator operators: 882
Translator axioms: 0
Translator task size: 7603
Translator peak memory: 36456 KB
Writing output... [0.000s CPU, 0.005s wall-clock]
Done! [0.070s CPU, 0.080s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.2685e-05s, 24488 KB] reading input...
[t=0.0024942s, 25268 KB] done reading input!
[t=0.0033493s, 25664 KB] Initializing landmark count heuristic...
[t=0.00339853s, 25664 KB] Generating landmark graph...
[t=0.00346004s, 25664 KB] Building a landmark graph with reasonable orders.
[t=0.00351949s, 25664 KB] Initializing Exploration...
[t=0.00378431s, 25852 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0125554s, 26380 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0126375s, 26380 KB] Landmarks generation time: 0.00917535s
[t=0.0126521s, 26380 KB] Discovered 89 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0126692s, 26380 KB] 423 edges
[t=0.0126795s, 26380 KB] approx. reasonable orders
[t=0.013661s, 26380 KB] approx. obedient reasonable orders
[t=0.0136913s, 26380 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0137041s, 26380 KB] Landmarks generation time: 0.0103033s
[t=0.0137147s, 26380 KB] Discovered 89 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.013724s, 26380 KB] 446 edges
[t=0.0137335s, 26380 KB] Landmark graph generation time: 0.0103425s
[t=0.0137427s, 26380 KB] Landmark graph contains 89 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0137506s, 26380 KB] Landmark graph contains 446 orderings.
[t=0.0142937s, 26380 KB] Simplifying 3486 unary operators... done! [2646 unary operators]
[t=0.0151815s, 26380 KB] time to simplify: 0.000943536s
[t=0.0152882s, 26380 KB] Initializing additive heuristic...
[t=0.015301s, 26380 KB] Initializing FF heuristic...
[t=0.015352s, 26380 KB] Building successor generator...done!
[t=0.015521s, 26380 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0155292s, 26380 KB] time for successor generation creation: 0.000139105s
[t=0.0155408s, 26380 KB] Variables: 43
[t=0.0155491s, 26380 KB] FactPairs: 506
[t=0.015557s, 26380 KB] Bytes per state: 16
[t=0.0156569s, 26380 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0156896s, 26380 KB] 42 initial landmarks, 18 goal landmarks
[t=0.0157391s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0157487s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0157571s, 26380 KB] g=0, 1 evaluated, 0 expanded
[t=0.0157699s, 26380 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0157785s, 26380 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0158842s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0158935s, 26380 KB] g=1, 5 evaluated, 4 expanded
[t=0.0159481s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0159569s, 26380 KB] g=2, 7 evaluated, 6 expanded
[t=0.0160331s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0160418s, 26380 KB] g=3, 10 evaluated, 9 expanded
[t=0.0162341s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0162431s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0162517s, 26380 KB] g=4, 18 evaluated, 17 expanded
[t=0.0163497s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0163583s, 26380 KB] g=5, 22 evaluated, 21 expanded
[t=0.0164357s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0164511s, 26380 KB] g=7, 25 evaluated, 24 expanded
[t=0.0164835s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0164928s, 26380 KB] g=8, 26 evaluated, 25 expanded
[t=0.0167804s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0167893s, 26380 KB] g=10, 38 evaluated, 37 expanded
[t=0.0170474s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.017056s, 26380 KB] g=12, 49 evaluated, 48 expanded
[t=0.0170874s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0170962s, 26380 KB] g=13, 50 evaluated, 49 expanded
[t=0.017417s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.01743s, 26380 KB] g=17, 64 evaluated, 63 expanded
[t=0.0178933s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0179119s, 26380 KB] g=18, 82 evaluated, 81 expanded
[t=0.0179926s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0180025s, 26380 KB] g=20, 85 evaluated, 84 expanded
[t=0.0181697s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.018179s, 26380 KB] g=20, 92 evaluated, 91 expanded
[t=0.018506s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0185165s, 26380 KB] g=22, 106 evaluated, 105 expanded
[t=0.0190451s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0190561s, 26380 KB] g=24, 129 evaluated, 128 expanded
[t=0.0196801s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0196895s, 26380 KB] g=25, 156 evaluated, 155 expanded
[t=0.0199022s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0199115s, 26380 KB] g=26, 165 evaluated, 164 expanded
[t=0.0200964s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0201052s, 26380 KB] g=28, 173 evaluated, 172 expanded
[t=0.0206871s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0206964s, 26380 KB] g=30, 199 evaluated, 198 expanded
[t=0.0210191s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0210288s, 26380 KB] g=32, 213 evaluated, 212 expanded
[t=0.0212394s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0212483s, 26380 KB] g=32, 222 evaluated, 221 expanded
[t=0.0216889s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0217s, 26380 KB] g=37, 240 evaluated, 239 expanded
[t=0.0217588s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0217684s, 26380 KB] g=38, 242 evaluated, 241 expanded
[t=0.0222133s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0222253s, 26380 KB] g=40, 260 evaluated, 259 expanded
[t=0.022513s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0225334s, 26380 KB] g=40, 269 evaluated, 268 expanded
[t=0.0227637s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0227846s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0227994s, 26380 KB] g=42, 277 evaluated, 276 expanded
[t=0.0233981s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0234141s, 26380 KB] g=46, 300 evaluated, 299 expanded
[t=0.0235959s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.023607s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0236151s, 26380 KB] g=48, 308 evaluated, 307 expanded
[t=0.0237694s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0237812s, 26380 KB] g=50, 315 evaluated, 314 expanded
[t=0.0238344s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.023856s, 26380 KB] g=50, 317 evaluated, 316 expanded
[t=0.0240977s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0241099s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0241179s, 26380 KB] g=52, 328 evaluated, 327 expanded
[t=0.024198s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0242237s, 26380 KB] g=53, 331 evaluated, 330 expanded
[t=0.0242549s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0242644s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0242731s, 26380 KB] g=54, 332 evaluated, 331 expanded
[t=0.0244194s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0244298s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0244386s, 26380 KB] g=56, 338 evaluated, 337 expanded
[t=0.0248646s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0248784s, 26380 KB] g=60, 357 evaluated, 356 expanded
[t=0.0249934s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0250041s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0250122s, 26380 KB] g=62, 362 evaluated, 361 expanded
[t=0.0258248s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0258489s, 26380 KB] g=70, 401 evaluated, 400 expanded
[t=0.0259873s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0259978s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0260059s, 26380 KB] g=72, 407 evaluated, 406 expanded
[t=0.0266242s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0266474s, 26380 KB] g=80, 433 evaluated, 432 expanded
[t=0.0267264s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0267361s, 26380 KB] g=81, 436 evaluated, 435 expanded
[t=0.0267688s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0267775s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0267877s, 26380 KB] g=82, 437 evaluated, 436 expanded
[t=0.026883s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0268938s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0269027s, 26380 KB] g=84, 441 evaluated, 440 expanded
[t=0.0269542s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0269636s, 26380 KB] g=84, 443 evaluated, 442 expanded
[t=0.0270364s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0270473s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0270554s, 26380 KB] g=86, 446 evaluated, 445 expanded
[t=0.028697s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0287125s, 26380 KB] g=108, 533 evaluated, 532 expanded
[t=0.0288576s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0288672s, 26380 KB] g=112, 542 evaluated, 541 expanded
[t=0.0289192s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0289322s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0289407s, 26380 KB] g=114, 545 evaluated, 544 expanded
[t=0.0290753s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0290844s, 26380 KB] g=122, 555 evaluated, 554 expanded
[t=0.0291387s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0291474s, 26380 KB] g=126, 559 evaluated, 558 expanded
[t=0.0291634s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0291723s, 26380 KB] g=127, 560 evaluated, 559 expanded
[t=0.0291875s, 26380 KB] Solution found!
[t=0.0292008s, 26380 KB] Actual search time: 0.0135097s
unstack b20 b19 (1)
put-down b20 (1)
unstack b6 b12 (1)
stack b6 b20 (1)
unstack b7 b1 (1)
put-down b7 (1)
unstack b1 b16 (1)
stack b1 b19 (1)
unstack b12 b9 (1)
put-down b12 (1)
pick-up b7 (1)
stack b7 b9 (1)
unstack b16 b11 (1)
put-down b16 (1)
unstack b11 b8 (1)
stack b11 b12 (1)
pick-up b16 (1)
stack b16 b11 (1)
unstack b8 b15 (1)
put-down b8 (1)
pick-up b2 (1)
stack b2 b8 (1)
unstack b15 b10 (1)
put-down b15 (1)
unstack b1 b19 (1)
put-down b1 (1)
unstack b10 b3 (1)
put-down b10 (1)
pick-up b19 (1)
stack b19 b10 (1)
pick-up b1 (1)
stack b1 b19 (1)
unstack b7 b9 (1)
put-down b7 (1)
unstack b9 b14 (1)
put-down b9 (1)
unstack b14 b17 (1)
stack b14 b6 (1)
pick-up b9 (1)
stack b9 b14 (1)
pick-up b7 (1)
stack b7 b9 (1)
unstack b3 b4 (1)
put-down b3 (1)
unstack b4 b18 (1)
put-down b4 (1)
unstack b18 b21 (1)
stack b18 b3 (1)
unstack b21 b13 (1)
stack b21 b2 (1)
unstack b13 b5 (1)
stack b13 b16 (1)
pick-up b17 (1)
stack b17 b5 (1)
pick-up b15 (1)
stack b15 b21 (1)
unstack b18 b3 (1)
put-down b18 (1)
pick-up b3 (1)
stack b3 b4 (1)
pick-up b18 (1)
stack b18 b3 (1)
unstack b1 b19 (1)
put-down b1 (1)
unstack b19 b10 (1)
put-down b19 (1)
pick-up b10 (1)
stack b10 b15 (1)
pick-up b19 (1)
stack b19 b10 (1)
pick-up b1 (1)
stack b1 b19 (1)
unstack b13 b16 (1)
put-down b13 (1)
unstack b16 b11 (1)
put-down b16 (1)
unstack b11 b12 (1)
put-down b11 (1)
pick-up b12 (1)
stack b12 b18 (1)
pick-up b11 (1)
stack b11 b12 (1)
pick-up b16 (1)
stack b16 b11 (1)
pick-up b13 (1)
stack b13 b16 (1)
unstack b1 b19 (1)
put-down b1 (1)
unstack b19 b10 (1)
put-down b19 (1)
unstack b10 b15 (1)
put-down b10 (1)
pick-up b19 (1)
stack b19 b10 (1)
pick-up b1 (1)
stack b1 b19 (1)
unstack b15 b21 (1)
put-down b15 (1)
unstack b21 b2 (1)
put-down b21 (1)
pick-up b15 (1)
stack b15 b21 (1)
unstack b2 b8 (1)
put-down b2 (1)
pick-up b8 (1)
stack b8 b13 (1)
pick-up b2 (1)
stack b2 b8 (1)
unstack b15 b21 (1)
put-down b15 (1)
pick-up b21 (1)
stack b21 b2 (1)
pick-up b15 (1)
stack b15 b21 (1)
unstack b1 b19 (1)
put-down b1 (1)
unstack b19 b10 (1)
put-down b19 (1)
pick-up b1 (1)
stack b1 b19 (1)
pick-up b10 (1)
stack b10 b15 (1)
unstack b1 b19 (1)
put-down b1 (1)
pick-up b19 (1)
stack b19 b10 (1)
pick-up b1 (1)
stack b1 b19 (1)
[t=0.0292115s, 26380 KB] Plan length: 128 step(s).
[t=0.0292115s, 26380 KB] Plan cost: 128
[t=0.0292115s, 26380 KB] Expanded 560 state(s).
[t=0.0292115s, 26380 KB] Reopened 0 state(s).
[t=0.0292115s, 26380 KB] Evaluated 561 state(s).
[t=0.0292115s, 26380 KB] Evaluations: 1122
[t=0.0292115s, 26380 KB] Generated 4355 state(s).
[t=0.0292115s, 26380 KB] Dead ends: 0 state(s).
[t=0.0292115s, 26380 KB] Number of registered states: 561
[t=0.0292115s, 26380 KB] Int hash set load factor: 561/1024 = 0.547852
[t=0.0292115s, 26380 KB] Int hash set resizes: 10
[t=0.0292115s, 26380 KB] Search time: 0.013555s
[t=0.0292115s, 26380 KB] Total time: 0.0292115s
Solution found.
Peak memory: 26380 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.16s
