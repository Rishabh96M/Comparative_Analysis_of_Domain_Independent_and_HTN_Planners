INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_24/bws_problem_24_25.pddl --sas-file output.sas
Parsing...
Parsing: [0.010s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.012s wall-clock]
1898 relevant atoms
1272 auxiliary atoms
3170 final queue length
5528 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.033s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
25 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.007s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.002s wall-clock]
Translating task: [0.030s CPU, 0.030s wall-clock]
1704 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
48 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.020s wall-clock]
Reordering and filtering variables...
49 of 49 variables necessary.
25 of 49 mutex groups necessary.
1152 of 1152 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.007s wall-clock]
Translator variables: 49
Translator derived variables: 0
Translator facts: 650
Translator goal facts: 20
Translator mutex groups: 25
Translator total mutex groups size: 625
Translator operators: 1152
Translator axioms: 0
Translator task size: 9912
Translator peak memory: 37880 KB
Writing output... [0.000s CPU, 0.006s wall-clock]
Done! [0.110s CPU, 0.107s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=3.9142e-05s, 24488 KB] reading input...
[t=0.00349493s, 25532 KB] done reading input!
[t=0.00498731s, 25928 KB] Initializing landmark count heuristic...
[t=0.00503417s, 25928 KB] Generating landmark graph...
[t=0.00511978s, 25928 KB] Building a landmark graph with reasonable orders.
[t=0.00518779s, 26060 KB] Initializing Exploration...
[t=0.00554904s, 26388 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0185234s, 26916 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.018616s, 26916 KB] Landmarks generation time: 0.0134985s
[t=0.0186307s, 26916 KB] Discovered 103 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0186465s, 26916 KB] 439 edges
[t=0.0186563s, 26916 KB] approx. reasonable orders
[t=0.0207323s, 26916 KB] approx. obedient reasonable orders
[t=0.0207633s, 26916 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0207727s, 26916 KB] Landmarks generation time: 0.0157357s
[t=0.0207829s, 26916 KB] Discovered 103 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.020791s, 26916 KB] 479 edges
[t=0.0207997s, 26916 KB] Landmark graph generation time: 0.0157726s
[t=0.0208083s, 26916 KB] Landmark graph contains 103 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0208161s, 26916 KB] Landmark graph contains 479 orderings.
[t=0.0211842s, 26916 KB] Simplifying 4560 unary operators... done! [3456 unary operators]
[t=0.0223428s, 26916 KB] time to simplify: 0.00124011s
[t=0.0224955s, 26916 KB] Initializing additive heuristic...
[t=0.0225116s, 26916 KB] Initializing FF heuristic...
[t=0.0225633s, 26916 KB] Building successor generator...done!
[t=0.0227901s, 26916 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0227985s, 26916 KB] time for successor generation creation: 0.000193498s
[t=0.0228104s, 26916 KB] Variables: 49
[t=0.0228188s, 26916 KB] FactPairs: 650
[t=0.0228269s, 26916 KB] Bytes per state: 20
[t=0.0229107s, 26916 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0229435s, 26916 KB] 47 initial landmarks, 20 goal landmarks
[t=0.023s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0230095s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0230182s, 26916 KB] g=0, 1 evaluated, 0 expanded
[t=0.023032s, 26916 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0230413s, 26916 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0232694s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0232791s, 26916 KB] g=2, 8 evaluated, 7 expanded
[t=0.0234374s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0234899s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0234997s, 26916 KB] g=2, 13 evaluated, 12 expanded
[t=0.023689s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0236985s, 26916 KB] g=4, 19 evaluated, 18 expanded
[t=0.0239609s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0239698s, 26916 KB] g=6, 28 evaluated, 27 expanded
[t=0.0243021s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0243153s, 26916 KB] g=8, 39 evaluated, 38 expanded
[t=0.0247598s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0247693s, 26916 KB] g=10, 55 evaluated, 54 expanded
[t=0.025083s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0250929s, 26916 KB] g=12, 66 evaluated, 65 expanded
[t=0.02556s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0255696s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0255777s, 26916 KB] g=14, 83 evaluated, 82 expanded
[t=0.0258016s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0258106s, 26916 KB] g=16, 91 evaluated, 90 expanded
[t=0.0264304s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0264504s, 26916 KB] g=20, 113 evaluated, 112 expanded
[t=0.0269197s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0269298s, 26916 KB] g=22, 130 evaluated, 129 expanded
[t=0.0275847s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0276001s, 26916 KB] g=20, 152 evaluated, 151 expanded
[t=0.027748s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0277607s, 26916 KB] g=24, 157 evaluated, 156 expanded
[t=0.0281168s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.028134s, 26916 KB] g=26, 170 evaluated, 169 expanded
[t=0.0285702s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0285855s, 26916 KB] g=28, 186 evaluated, 185 expanded
[t=0.0294674s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0294891s, 26916 KB] g=27, 218 evaluated, 217 expanded
[t=0.0300949s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0301068s, 26916 KB] g=30, 240 evaluated, 239 expanded
[t=0.0307029s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0307141s, 26916 KB] g=32, 261 evaluated, 260 expanded
[t=0.0307801s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0307892s, 26916 KB] g=36, 263 evaluated, 262 expanded
[t=0.0313161s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0313339s, 26916 KB] g=34, 280 evaluated, 279 expanded
[t=0.0320216s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0320327s, 26916 KB] g=36, 302 evaluated, 301 expanded
[t=0.0328163s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0328375s, 26916 KB] g=38, 327 evaluated, 326 expanded
[t=0.0333032s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.033314s, 26916 KB] g=40, 343 evaluated, 342 expanded
[t=0.0334677s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0334771s, 26916 KB] g=40, 348 evaluated, 347 expanded
[t=0.0338852s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0338953s, 26916 KB] g=42, 362 evaluated, 361 expanded
[t=0.0342218s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.034231s, 26916 KB] g=42, 373 evaluated, 372 expanded
[t=0.0343963s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0344053s, 26916 KB] g=43, 378 evaluated, 377 expanded
[t=0.034475s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0344837s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0344915s, 26916 KB] g=44, 380 evaluated, 379 expanded
[t=0.0348206s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0348302s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0348382s, 26916 KB] g=46, 391 evaluated, 390 expanded
[t=0.0351355s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0351544s, 26916 KB] g=48, 401 evaluated, 400 expanded
[t=0.0352245s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0352335s, 26916 KB] g=48, 403 evaluated, 402 expanded
[t=0.035712s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0357221s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0357304s, 26916 KB] g=50, 420 evaluated, 419 expanded
[t=0.0360093s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.036018s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0360256s, 26916 KB] g=52, 430 evaluated, 429 expanded
[t=0.0362854s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.036301s, 26916 KB] g=54, 438 evaluated, 437 expanded
[t=0.0363389s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.036352s, 26916 KB] g=54, 439 evaluated, 438 expanded
[t=0.0366962s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0367052s, 26916 KB] g=56, 452 evaluated, 451 expanded
[t=0.0369271s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0369363s, 26916 KB] g=57, 460 evaluated, 459 expanded
[t=0.0372838s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0372943s, 26916 KB] g=60, 473 evaluated, 472 expanded
[t=0.0378242s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0378344s, 26916 KB] g=62, 493 evaluated, 492 expanded
[t=0.0380901s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0381033s, 26916 KB] g=64, 502 evaluated, 501 expanded
[t=0.0382769s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0382894s, 26916 KB] g=66, 508 evaluated, 507 expanded
[t=0.0383542s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0383647s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0383732s, 26916 KB] g=66, 510 evaluated, 509 expanded
[t=0.0385739s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0385929s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.038602s, 26916 KB] g=68, 516 evaluated, 515 expanded
[t=0.0395126s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0395255s, 26916 KB] g=74, 549 evaluated, 548 expanded
[t=0.0396908s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0397s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0397082s, 26916 KB] g=76, 555 evaluated, 554 expanded
[t=0.0398218s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0398318s, 26916 KB] g=76, 559 evaluated, 558 expanded
[t=0.0399714s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0399814s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0399896s, 26916 KB] g=78, 564 evaluated, 563 expanded
[t=0.0410053s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0410249s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0410336s, 26916 KB] g=86, 604 evaluated, 603 expanded
[t=0.0411169s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.041126s, 26916 KB] g=86, 607 evaluated, 606 expanded
[t=0.0412394s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0412548s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0412635s, 26916 KB] g=88, 611 evaluated, 610 expanded
[t=0.0421204s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0421378s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.042147s, 26916 KB] g=102, 648 evaluated, 647 expanded
[t=0.043595s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0436081s, 26916 KB] g=116, 713 evaluated, 712 expanded
[t=0.0438059s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0438153s, 26916 KB] g=120, 722 evaluated, 721 expanded
[t=0.0438818s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0438914s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0438997s, 26916 KB] g=122, 725 evaluated, 724 expanded
[t=0.0441876s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.044203s, 26916 KB] g=134, 741 evaluated, 740 expanded
[t=0.0442673s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0442764s, 26916 KB] g=138, 745 evaluated, 744 expanded
[t=0.0442951s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0443049s, 26916 KB] g=139, 746 evaluated, 745 expanded
[t=0.044321s, 26916 KB] Solution found!
[t=0.0443347s, 26916 KB] Actual search time: 0.0213885s
unstack b24 b22 (1)
stack b24 b18 (1)
unstack b14 b11 (1)
put-down b14 (1)
unstack b11 b21 (1)
put-down b11 (1)
unstack b16 b12 (1)
put-down b16 (1)
unstack b22 b23 (1)
put-down b22 (1)
pick-up b21 (1)
stack b21 b11 (1)
pick-up b7 (1)
stack b7 b12 (1)
unstack b21 b11 (1)
put-down b21 (1)
unstack b23 b15 (1)
put-down b23 (1)
unstack b15 b8 (1)
put-down b15 (1)
unstack b8 b19 (1)
put-down b8 (1)
pick-up b23 (1)
stack b23 b15 (1)
unstack b24 b18 (1)
put-down b24 (1)
unstack b18 b6 (1)
put-down b18 (1)
unstack b6 b2 (1)
stack b6 b24 (1)
pick-up b19 (1)
stack b19 b6 (1)
unstack b2 b3 (1)
put-down b2 (1)
unstack b3 b5 (1)
stack b3 b4 (1)
unstack b5 b10 (1)
stack b5 b21 (1)
unstack b10 b9 (1)
put-down b10 (1)
unstack b9 b17 (1)
stack b9 b14 (1)
unstack b17 b13 (1)
stack b17 b9 (1)
pick-up b11 (1)
stack b11 b3 (1)
unstack b13 b1 (1)
stack b13 b22 (1)
unstack b1 b20 (1)
stack b1 b7 (1)
pick-up b16 (1)
stack b16 b5 (1)
pick-up b18 (1)
stack b18 b2 (1)
pick-up b8 (1)
stack b8 b1 (1)
unstack b18 b2 (1)
put-down b18 (1)
unstack b13 b22 (1)
put-down b13 (1)
pick-up b2 (1)
stack b2 b16 (1)
pick-up b18 (1)
stack b18 b2 (1)
pick-up b22 (1)
stack b22 b8 (1)
pick-up b13 (1)
stack b13 b22 (1)
unstack b11 b3 (1)
put-down b11 (1)
unstack b3 b4 (1)
put-down b3 (1)
pick-up b4 (1)
stack b4 b20 (1)
pick-up b3 (1)
stack b3 b4 (1)
pick-up b11 (1)
stack b11 b3 (1)
unstack b17 b9 (1)
put-down b17 (1)
unstack b9 b14 (1)
put-down b9 (1)
pick-up b14 (1)
stack b14 b13 (1)
pick-up b9 (1)
stack b9 b14 (1)
pick-up b17 (1)
stack b17 b9 (1)
unstack b19 b6 (1)
put-down b19 (1)
unstack b6 b24 (1)
put-down b6 (1)
pick-up b19 (1)
stack b19 b6 (1)
unstack b18 b2 (1)
put-down b18 (1)
pick-up b24 (1)
stack b24 b18 (1)
unstack b19 b6 (1)
put-down b19 (1)
pick-up b6 (1)
stack b6 b24 (1)
pick-up b19 (1)
stack b19 b6 (1)
unstack b2 b16 (1)
put-down b2 (1)
unstack b16 b5 (1)
put-down b16 (1)
pick-up b2 (1)
stack b2 b16 (1)
unstack b5 b21 (1)
put-down b5 (1)
pick-up b21 (1)
stack b21 b11 (1)
pick-up b5 (1)
stack b5 b21 (1)
unstack b2 b16 (1)
put-down b2 (1)
pick-up b16 (1)
stack b16 b5 (1)
pick-up b2 (1)
stack b2 b16 (1)
unstack b19 b6 (1)
put-down b19 (1)
unstack b6 b24 (1)
put-down b6 (1)
pick-up b19 (1)
stack b19 b6 (1)
unstack b24 b18 (1)
put-down b24 (1)
pick-up b18 (1)
stack b18 b2 (1)
pick-up b24 (1)
stack b24 b18 (1)
unstack b19 b6 (1)
put-down b19 (1)
pick-up b6 (1)
stack b6 b24 (1)
pick-up b19 (1)
stack b19 b6 (1)
[t=0.0443451s, 26916 KB] Plan length: 140 step(s).
[t=0.0443451s, 26916 KB] Plan cost: 140
[t=0.0443451s, 26916 KB] Expanded 746 state(s).
[t=0.0443451s, 26916 KB] Reopened 0 state(s).
[t=0.0443451s, 26916 KB] Evaluated 747 state(s).
[t=0.0443451s, 26916 KB] Evaluations: 1494
[t=0.0443451s, 26916 KB] Generated 7674 state(s).
[t=0.0443451s, 26916 KB] Dead ends: 0 state(s).
[t=0.0443451s, 26916 KB] Number of registered states: 747
[t=0.0443451s, 26916 KB] Int hash set load factor: 747/1024 = 0.729492
[t=0.0443451s, 26916 KB] Int hash set resizes: 10
[t=0.0443451s, 26916 KB] Search time: 0.0214347s
[t=0.0443451s, 26916 KB] Total time: 0.0443451s
Solution found.
Peak memory: 26916 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.20s
