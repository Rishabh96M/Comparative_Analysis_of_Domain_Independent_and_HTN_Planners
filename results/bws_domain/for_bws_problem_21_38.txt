INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_21/bws_problem_21_38.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.009s wall-clock]
1472 relevant atoms
987 auxiliary atoms
2459 final queue length
4270 total queue pushes
Completing instantiation... [0.020s CPU, 0.018s wall-clock]
Instantiating: [0.030s CPU, 0.028s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
22 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.006s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.023s wall-clock]
1302 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
42 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.010s wall-clock]
Reordering and filtering variables...
43 of 43 variables necessary.
22 of 43 mutex groups necessary.
882 of 882 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.005s wall-clock]
Translator variables: 43
Translator derived variables: 0
Translator facts: 506
Translator goal facts: 17
Translator mutex groups: 22
Translator total mutex groups size: 484
Translator operators: 882
Translator axioms: 0
Translator task size: 7602
Translator peak memory: 36460 KB
Writing output... [0.010s CPU, 0.004s wall-clock]
Done! [0.080s CPU, 0.081s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=3.7138e-05s, 24488 KB] reading input...
[t=0.0027596s, 25268 KB] done reading input!
[t=0.00414576s, 25664 KB] Initializing landmark count heuristic...
[t=0.00423192s, 25664 KB] Generating landmark graph...
[t=0.0044009s, 25664 KB] Building a landmark graph with reasonable orders.
[t=0.00454599s, 25664 KB] Initializing Exploration...
[t=0.00499634s, 25852 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0138433s, 26380 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0138967s, 26380 KB] Landmarks generation time: 0.00947352s
[t=0.0139098s, 26380 KB] Discovered 91 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0139254s, 26380 KB] 410 edges
[t=0.0139347s, 26380 KB] approx. reasonable orders
[t=0.0164954s, 26380 KB] approx. obedient reasonable orders
[t=0.0166041s, 26380 KB] Removed 1 reasonable or obedient reasonable orders
[t=0.0166164s, 26380 KB] Landmarks generation time: 0.0123799s
[t=0.0166266s, 26380 KB] Discovered 91 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0166348s, 26380 KB] 475 edges
[t=0.0166429s, 26380 KB] Landmark graph generation time: 0.0124187s
[t=0.0166515s, 26380 KB] Landmark graph contains 91 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0166596s, 26380 KB] Landmark graph contains 475 orderings.
[t=0.0169645s, 26380 KB] Simplifying 3486 unary operators... done! [2646 unary operators]
[t=0.0177829s, 26380 KB] time to simplify: 0.000874027s
[t=0.0178934s, 26380 KB] Initializing additive heuristic...
[t=0.0179072s, 26380 KB] Initializing FF heuristic...
[t=0.0179633s, 26380 KB] Building successor generator...done!
[t=0.0181511s, 26380 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0181599s, 26380 KB] time for successor generation creation: 0.000154662s
[t=0.0181733s, 26380 KB] Variables: 43
[t=0.0181815s, 26380 KB] FactPairs: 506
[t=0.0181905s, 26380 KB] Bytes per state: 16
[t=0.0182948s, 26380 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.01833s, 26380 KB] 41 initial landmarks, 17 goal landmarks
[t=0.0183825s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0183928s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0184014s, 26380 KB] g=0, 1 evaluated, 0 expanded
[t=0.0184158s, 26380 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0184255s, 26380 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.018586s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0185959s, 26380 KB] g=2, 7 evaluated, 6 expanded
[t=0.0186559s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0186651s, 26380 KB] g=2, 9 evaluated, 8 expanded
[t=0.0188841s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0188937s, 26380 KB] g=4, 18 evaluated, 17 expanded
[t=0.0191126s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0191231s, 26380 KB] g=6, 27 evaluated, 26 expanded
[t=0.0194058s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.019418s, 26380 KB] g=8, 39 evaluated, 38 expanded
[t=0.0195123s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0195217s, 26380 KB] g=6, 42 evaluated, 41 expanded
[t=0.019788s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0197989s, 26380 KB] g=10, 53 evaluated, 52 expanded
[t=0.020178s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0201932s, 26380 KB] g=12, 69 evaluated, 68 expanded
[t=0.0203008s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0203275s, 26380 KB] g=10, 73 evaluated, 72 expanded
[t=0.0206449s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0206613s, 26380 KB] g=14, 86 evaluated, 85 expanded
[t=0.0213323s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0213486s, 26380 KB] g=14, 115 evaluated, 114 expanded
[t=0.0214638s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.021474s, 26380 KB] g=16, 119 evaluated, 118 expanded
[t=0.0216244s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0216338s, 26380 KB] g=16, 125 evaluated, 124 expanded
[t=0.0219526s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0219637s, 26380 KB] g=18, 138 evaluated, 137 expanded
[t=0.0221836s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0221931s, 26380 KB] g=20, 147 evaluated, 146 expanded
[t=0.0224889s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0224986s, 26380 KB] g=21, 159 evaluated, 158 expanded
[t=0.0225327s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0225417s, 26380 KB] g=22, 160 evaluated, 159 expanded
[t=0.0228517s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0228618s, 26380 KB] g=24, 173 evaluated, 172 expanded
[t=0.0230072s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0230161s, 26380 KB] g=23, 179 evaluated, 178 expanded
[t=0.0234546s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0234733s, 26380 KB] g=28, 197 evaluated, 196 expanded
[t=0.0236907s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0237025s, 26380 KB] g=26, 206 evaluated, 205 expanded
[t=0.0238721s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0238829s, 26380 KB] g=27, 213 evaluated, 212 expanded
[t=0.0245568s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0245686s, 26380 KB] g=30, 242 evaluated, 241 expanded
[t=0.0254485s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0254597s, 26380 KB] g=34, 280 evaluated, 279 expanded
[t=0.0255413s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.025551s, 26380 KB] g=32, 283 evaluated, 282 expanded
[t=0.0257634s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0257726s, 26380 KB] g=36, 292 evaluated, 291 expanded
[t=0.0260837s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0260932s, 26380 KB] g=38, 306 evaluated, 305 expanded
[t=0.0264338s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0264438s, 26380 KB] g=34, 320 evaluated, 319 expanded
[t=0.027155s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0271656s, 26380 KB] g=36, 352 evaluated, 351 expanded
[t=0.0275323s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0275421s, 26380 KB] g=42, 369 evaluated, 368 expanded
[t=0.0278038s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0278129s, 26380 KB] g=38, 381 evaluated, 380 expanded
[t=0.0278453s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0278542s, 26380 KB] g=44, 382 evaluated, 381 expanded
[t=0.0281005s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0281093s, 26380 KB] g=46, 394 evaluated, 393 expanded
[t=0.028331s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0283497s, 26380 KB] g=46, 404 evaluated, 403 expanded
[t=0.0285616s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0285717s, 26380 KB] g=48, 412 evaluated, 411 expanded
[t=0.0287477s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0287575s, 26380 KB] g=40, 420 evaluated, 419 expanded
[t=0.0292841s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0292956s, 26380 KB] g=52, 446 evaluated, 445 expanded
[t=0.0294249s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0294343s, 26380 KB] g=54, 452 evaluated, 451 expanded
[t=0.0295203s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0295301s, 26380 KB] g=42, 456 evaluated, 455 expanded
[t=0.0299379s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0299496s, 26380 KB] g=44, 478 evaluated, 477 expanded
[t=0.0304504s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0304699s, 26380 KB] g=62, 505 evaluated, 504 expanded
[t=0.0305866s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0306008s, 26380 KB] g=46, 509 evaluated, 508 expanded
[t=0.0309079s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0309302s, 26380 KB] g=66, 526 evaluated, 525 expanded
[t=0.0310119s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0310214s, 26380 KB] g=68, 530 evaluated, 529 expanded
[t=0.0311382s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0311515s, 26380 KB] g=48, 536 evaluated, 535 expanded
[t=0.0313909s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.031401s, 26380 KB] g=76, 552 evaluated, 551 expanded
[t=0.0314378s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0314474s, 26380 KB] g=77, 554 evaluated, 553 expanded
[t=0.031462s, 26380 KB] Solution found!
[t=0.0314729s, 26380 KB] Actual search time: 0.0131399s
unstack b10 b1 (1)
put-down b10 (1)
unstack b18 b6 (1)
stack b18 b10 (1)
unstack b1 b16 (1)
stack b1 b2 (1)
unstack b16 b8 (1)
put-down b16 (1)
unstack b8 b12 (1)
stack b8 b18 (1)
unstack b12 b17 (1)
put-down b12 (1)
unstack b17 b5 (1)
stack b17 b12 (1)
unstack b5 b19 (1)
put-down b5 (1)
unstack b19 b4 (1)
put-down b19 (1)
unstack b21 b13 (1)
stack b21 b5 (1)
unstack b13 b20 (1)
stack b13 b6 (1)
pick-up b16 (1)
stack b16 b20 (1)
unstack b4 b11 (1)
put-down b4 (1)
unstack b11 b9 (1)
stack b11 b3 (1)
unstack b1 b2 (1)
put-down b1 (1)
unstack b2 b15 (1)
stack b2 b9 (1)
pick-up b1 (1)
stack b1 b2 (1)
unstack b15 b14 (1)
stack b15 b11 (1)
pick-up b14 (1)
stack b14 b15 (1)
unstack b16 b20 (1)
put-down b16 (1)
unstack b20 b7 (1)
stack b20 b21 (1)
pick-up b16 (1)
stack b16 b20 (1)
pick-up b7 (1)
stack b7 b13 (1)
pick-up b4 (1)
stack b4 b7 (1)
unstack b17 b12 (1)
put-down b17 (1)
pick-up b12 (1)
stack b12 b19 (1)
pick-up b17 (1)
stack b17 b12 (1)
unstack b1 b2 (1)
put-down b1 (1)
unstack b2 b9 (1)
put-down b2 (1)
pick-up b1 (1)
stack b1 b2 (1)
pick-up b9 (1)
stack b9 b14 (1)
unstack b1 b2 (1)
put-down b1 (1)
pick-up b2 (1)
stack b2 b9 (1)
pick-up b1 (1)
stack b1 b2 (1)
unstack b8 b18 (1)
put-down b8 (1)
unstack b18 b10 (1)
put-down b18 (1)
pick-up b10 (1)
stack b10 b4 (1)
pick-up b18 (1)
stack b18 b10 (1)
pick-up b8 (1)
stack b8 b18 (1)
[t=0.0314823s, 26380 KB] Plan length: 78 step(s).
[t=0.0314823s, 26380 KB] Plan cost: 78
[t=0.0314823s, 26380 KB] Expanded 554 state(s).
[t=0.0314823s, 26380 KB] Reopened 0 state(s).
[t=0.0314823s, 26380 KB] Evaluated 555 state(s).
[t=0.0314823s, 26380 KB] Evaluations: 1110
[t=0.0314823s, 26380 KB] Generated 6213 state(s).
[t=0.0314823s, 26380 KB] Dead ends: 0 state(s).
[t=0.0314823s, 26380 KB] Number of registered states: 555
[t=0.0314823s, 26380 KB] Int hash set load factor: 555/1024 = 0.541992
[t=0.0314823s, 26380 KB] Int hash set resizes: 10
[t=0.0314823s, 26380 KB] Search time: 0.013188s
[t=0.0314823s, 26380 KB] Total time: 0.0314823s
Solution found.
Peak memory: 26380 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.16s
