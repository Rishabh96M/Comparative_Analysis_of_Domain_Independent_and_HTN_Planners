INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_29/bws_problem_29_18.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.018s wall-clock]
2728 relevant atoms
1827 auxiliary atoms
4555 final queue length
7984 total queue pushes
Completing instantiation... [0.030s CPU, 0.029s wall-clock]
Instantiating: [0.050s CPU, 0.048s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.002s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
30 uncovered facts
Choosing groups: [0.000s CPU, 0.002s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.001s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.002s wall-clock]
Translating task: [0.060s CPU, 0.052s wall-clock]
2494 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
58 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.023s wall-clock]
Reordering and filtering variables...
59 of 59 variables necessary.
30 of 59 mutex groups necessary.
1682 of 1682 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.012s wall-clock]
Translator variables: 59
Translator derived variables: 0
Translator facts: 930
Translator goal facts: 24
Translator mutex groups: 30
Translator total mutex groups size: 900
Translator operators: 1682
Translator axioms: 0
Translator task size: 14441
Translator peak memory: 40824 KB
Writing output... [0.010s CPU, 0.008s wall-clock]
Done! [0.160s CPU, 0.159s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=1.757e-05s, 24488 KB] reading input...
[t=0.00512049s, 26220 KB] done reading input!
[t=0.00614452s, 26616 KB] Initializing landmark count heuristic...
[t=0.00618154s, 26616 KB] Generating landmark graph...
[t=0.00627593s, 26748 KB] Building a landmark graph with reasonable orders.
[t=0.0065152s, 26748 KB] Initializing Exploration...
[t=0.00711493s, 27200 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0310469s, 27860 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0312083s, 27860 KB] Landmarks generation time: 0.0249447s
[t=0.0312366s, 27860 KB] Discovered 129 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0312544s, 27860 KB] 547 edges
[t=0.0312644s, 27860 KB] approx. reasonable orders
[t=0.038234s, 27860 KB] approx. obedient reasonable orders
[t=0.0390329s, 27860 KB] Removed 13 reasonable or obedient reasonable orders
[t=0.0390583s, 27860 KB] Landmarks generation time: 0.0328778s
[t=0.0390742s, 27860 KB] Discovered 129 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0390843s, 27860 KB] 666 edges
[t=0.0390957s, 27860 KB] Landmark graph generation time: 0.0329218s
[t=0.0391049s, 27860 KB] Landmark graph contains 129 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0391135s, 27860 KB] Landmark graph contains 666 orderings.
[t=0.0401334s, 27884 KB] Simplifying 6670 unary operators... done! [5046 unary operators]
[t=0.0420208s, 28016 KB] time to simplify: 0.00203724s
[t=0.0422825s, 28016 KB] Initializing additive heuristic...
[t=0.0423074s, 28016 KB] Initializing FF heuristic...
[t=0.0424246s, 28016 KB] Building successor generator...done!
[t=0.04281s, 28016 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0428218s, 28016 KB] time for successor generation creation: 0.000348735s
[t=0.0428499s, 28016 KB] Variables: 59
[t=0.0428588s, 28016 KB] FactPairs: 930
[t=0.0428672s, 28016 KB] Bytes per state: 24
[t=0.0430373s, 28016 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0430866s, 28016 KB] 59 initial landmarks, 24 goal landmarks
[t=0.0431881s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 70
[t=0.0432003s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 53
[t=0.0432093s, 28016 KB] g=0, 1 evaluated, 0 expanded
[t=0.0432292s, 28016 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 70
[t=0.0432408s, 28016 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 53
[t=0.0436239s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 69
[t=0.0436789s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 52
[t=0.0436998s, 28016 KB] g=2, 9 evaluated, 8 expanded
[t=0.0440356s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 68
[t=0.0440455s, 28016 KB] g=4, 17 evaluated, 16 expanded
[t=0.0441869s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 51
[t=0.044197s, 28016 KB] g=4, 20 evaluated, 19 expanded
[t=0.044803s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 50
[t=0.0448153s, 28016 KB] g=6, 34 evaluated, 33 expanded
[t=0.0453105s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 67
[t=0.0453217s, 28016 KB] g=6, 46 evaluated, 45 expanded
[t=0.0454962s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 49
[t=0.0455056s, 28016 KB] g=8, 50 evaluated, 49 expanded
[t=0.0460971s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 66
[t=0.0461091s, 28016 KB] g=8, 64 evaluated, 63 expanded
[t=0.0462472s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 48
[t=0.0462664s, 28016 KB] g=10, 66 evaluated, 65 expanded
[t=0.0470378s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 65
[t=0.0470535s, 28016 KB] g=10, 84 evaluated, 83 expanded
[t=0.0472293s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 47
[t=0.047239s, 28016 KB] g=14, 88 evaluated, 87 expanded
[t=0.0479895s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 64
[t=0.0480009s, 28016 KB] g=12, 106 evaluated, 105 expanded
[t=0.0485057s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 46
[t=0.0485577s, 28016 KB] g=18, 117 evaluated, 116 expanded
[t=0.0490787s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 63
[t=0.0490894s, 28016 KB] g=14, 129 evaluated, 128 expanded
[t=0.0492572s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.0492662s, 28016 KB] g=20, 133 evaluated, 132 expanded
[t=0.0499273s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.049938s, 28016 KB] g=22, 149 evaluated, 148 expanded
[t=0.0501538s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 62
[t=0.0501631s, 28016 KB] g=16, 154 evaluated, 153 expanded
[t=0.0505335s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0505433s, 28016 KB] g=24, 163 evaluated, 162 expanded
[t=0.0513201s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0513339s, 28016 KB] g=26, 179 evaluated, 178 expanded
[t=0.0513864s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 61
[t=0.0513962s, 28016 KB] g=18, 180 evaluated, 179 expanded
[t=0.0524497s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.05247s, 28016 KB] g=28, 205 evaluated, 204 expanded
[t=0.0526129s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 60
[t=0.0526236s, 28016 KB] g=20, 208 evaluated, 207 expanded
[t=0.053712s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.0537359s, 28016 KB] g=22, 232 evaluated, 231 expanded
[t=0.054996s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 58
[t=0.0550068s, 28016 KB] g=24, 263 evaluated, 262 expanded
[t=0.0559982s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0560088s, 28016 KB] g=34, 287 evaluated, 286 expanded
[t=0.0563179s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 57
[t=0.0563322s, 28016 KB] g=26, 293 evaluated, 292 expanded
[t=0.0571506s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0571657s, 28016 KB] g=38, 311 evaluated, 310 expanded
[t=0.0577019s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0577123s, 28016 KB] g=40, 324 evaluated, 323 expanded
[t=0.0578533s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0578627s, 28016 KB] g=28, 327 evaluated, 326 expanded
[t=0.0583363s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0583463s, 28016 KB] g=42, 338 evaluated, 337 expanded
[t=0.0589648s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0589779s, 28016 KB] g=44, 351 evaluated, 350 expanded
[t=0.0595185s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0595295s, 28016 KB] g=30, 364 evaluated, 363 expanded
[t=0.0595863s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0595957s, 28016 KB] g=46, 365 evaluated, 364 expanded
[t=0.0597301s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0597399s, 28016 KB] g=31, 368 evaluated, 367 expanded
[t=0.0601394s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0601551s, 28016 KB] g=48, 377 evaluated, 376 expanded
[t=0.0607413s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0607532s, 28016 KB] g=50, 391 evaluated, 390 expanded
[t=0.0613606s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0613745s, 28016 KB] g=52, 404 evaluated, 403 expanded
[t=0.0616066s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0616166s, 28016 KB] g=34, 409 evaluated, 408 expanded
[t=0.0631522s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0631636s, 28016 KB] g=36, 448 evaluated, 447 expanded
[t=0.085587s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0856426s, 28016 KB] g=66, 995 evaluated, 994 expanded
[t=0.0862521s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0862698s, 28016 KB] g=68, 1008 evaluated, 1007 expanded
[t=0.0869156s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0869284s, 28016 KB] g=70, 1022 evaluated, 1021 expanded
[t=0.0899445s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0899999s, 28016 KB] g=76, 1095 evaluated, 1094 expanded
[t=0.0916189s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0916488s, 28016 KB] g=82, 1133 evaluated, 1132 expanded
[t=0.0981902s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0982144s, 28016 KB] g=94, 1293 evaluated, 1292 expanded
[t=0.0995943s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0996086s, 28016 KB] g=98, 1327 evaluated, 1326 expanded
[t=0.0998892s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0998999s, 28016 KB] g=100, 1334 evaluated, 1333 expanded
[t=0.124081s, 28152 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.124153s, 28152 KB] g=122, 1938 evaluated, 1937 expanded
[t=0.124318s, 28152 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.124329s, 28152 KB] g=124, 1942 evaluated, 1941 expanded
[t=0.125811s, 28292 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.125829s, 28292 KB] g=132, 1979 evaluated, 1978 expanded
[t=0.12611s, 28292 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.126173s, 28292 KB] g=134, 1985 evaluated, 1984 expanded
[t=0.131361s, 28292 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.131391s, 28292 KB] g=164, 2133 evaluated, 2132 expanded
[t=0.131759s, 28292 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.13177s, 28292 KB] g=168, 2145 evaluated, 2144 expanded
[t=0.131853s, 28292 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.131862s, 28292 KB] g=170, 2148 evaluated, 2147 expanded
[t=0.132618s, 28292 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.13263s, 28292 KB] g=182, 2173 evaluated, 2172 expanded
[t=0.132709s, 28292 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.132718s, 28292 KB] g=186, 2177 evaluated, 2176 expanded
[t=0.132738s, 28292 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.132748s, 28292 KB] g=187, 2178 evaluated, 2177 expanded
[t=0.132766s, 28292 KB] Solution found!
[t=0.132784s, 28292 KB] Actual search time: 0.0896917s
unstack b11 b8 (1)
put-down b11 (1)
unstack b25 b15 (1)
stack b25 b12 (1)
unstack b15 b17 (1)
stack b15 b24 (1)
pick-up b29 (1)
stack b29 b8 (1)
pick-up b7 (1)
stack b7 b27 (1)
unstack b17 b4 (1)
put-down b17 (1)
unstack b4 b23 (1)
put-down b4 (1)
unstack b23 b1 (1)
put-down b23 (1)
unstack b1 b28 (1)
stack b1 b23 (1)
unstack b28 b16 (1)
stack b28 b11 (1)
unstack b16 b2 (1)
stack b16 b29 (1)
unstack b2 b6 (1)
put-down b2 (1)
pick-up b6 (1)
stack b6 b16 (1)
pick-up b17 (1)
stack b17 b6 (1)
unstack b25 b12 (1)
put-down b25 (1)
unstack b12 b3 (1)
stack b12 b15 (1)
pick-up b25 (1)
stack b25 b12 (1)
unstack b3 b14 (1)
put-down b3 (1)
unstack b14 b5 (1)
stack b14 b3 (1)
unstack b5 b21 (1)
stack b5 b2 (1)
unstack b21 b18 (1)
put-down b21 (1)
unstack b18 b26 (1)
put-down b18 (1)
unstack b26 b13 (1)
stack b26 b7 (1)
unstack b13 b10 (1)
stack b13 b5 (1)
unstack b10 b20 (1)
stack b10 b26 (1)
pick-up b20 (1)
stack b20 b13 (1)
unstack b25 b12 (1)
put-down b25 (1)
unstack b12 b15 (1)
put-down b12 (1)
pick-up b25 (1)
stack b25 b12 (1)
unstack b15 b24 (1)
put-down b15 (1)
unstack b24 b9 (1)
stack b24 b14 (1)
pick-up b15 (1)
stack b15 b24 (1)
unstack b9 b22 (1)
stack b9 b28 (1)
unstack b22 b19 (1)
stack b22 b20 (1)
pick-up b19 (1)
stack b19 b17 (1)
unstack b1 b23 (1)
put-down b1 (1)
pick-up b23 (1)
stack b23 b19 (1)
pick-up b1 (1)
stack b1 b23 (1)
unstack b25 b12 (1)
put-down b25 (1)
pick-up b12 (1)
stack b12 b15 (1)
pick-up b25 (1)
stack b25 b12 (1)
unstack b10 b26 (1)
put-down b10 (1)
unstack b26 b7 (1)
put-down b26 (1)
pick-up b10 (1)
stack b10 b26 (1)
unstack b7 b27 (1)
put-down b7 (1)
pick-up b27 (1)
stack b27 b9 (1)
pick-up b7 (1)
stack b7 b27 (1)
unstack b10 b26 (1)
put-down b10 (1)
pick-up b26 (1)
stack b26 b7 (1)
pick-up b10 (1)
stack b10 b26 (1)
unstack b25 b12 (1)
put-down b25 (1)
unstack b12 b15 (1)
put-down b12 (1)
unstack b15 b24 (1)
put-down b15 (1)
pick-up b12 (1)
stack b12 b15 (1)
pick-up b25 (1)
stack b25 b12 (1)
unstack b24 b14 (1)
put-down b24 (1)
unstack b14 b3 (1)
put-down b14 (1)
pick-up b24 (1)
stack b24 b14 (1)
pick-up b3 (1)
stack b3 b22 (1)
unstack b24 b14 (1)
put-down b24 (1)
pick-up b14 (1)
stack b14 b3 (1)
pick-up b24 (1)
stack b24 b14 (1)
unstack b25 b12 (1)
put-down b25 (1)
unstack b12 b15 (1)
put-down b12 (1)
pick-up b15 (1)
stack b15 b24 (1)
pick-up b12 (1)
stack b12 b15 (1)
pick-up b25 (1)
stack b25 b12 (1)
unstack b1 b23 (1)
put-down b1 (1)
unstack b23 b19 (1)
put-down b23 (1)
pick-up b1 (1)
stack b1 b23 (1)
unstack b19 b17 (1)
put-down b19 (1)
unstack b17 b6 (1)
put-down b17 (1)
pick-up b19 (1)
stack b19 b17 (1)
unstack b1 b23 (1)
put-down b1 (1)
pick-up b23 (1)
stack b23 b19 (1)
pick-up b1 (1)
stack b1 b23 (1)
unstack b6 b16 (1)
put-down b6 (1)
unstack b16 b29 (1)
put-down b16 (1)
pick-up b6 (1)
stack b6 b16 (1)
unstack b29 b8 (1)
put-down b29 (1)
pick-up b8 (1)
stack b8 b25 (1)
pick-up b29 (1)
stack b29 b8 (1)
unstack b6 b16 (1)
put-down b6 (1)
pick-up b16 (1)
stack b16 b29 (1)
pick-up b6 (1)
stack b6 b16 (1)
unstack b1 b23 (1)
put-down b1 (1)
unstack b23 b19 (1)
put-down b23 (1)
pick-up b1 (1)
stack b1 b23 (1)
unstack b19 b17 (1)
put-down b19 (1)
pick-up b17 (1)
stack b17 b6 (1)
pick-up b19 (1)
stack b19 b17 (1)
unstack b1 b23 (1)
put-down b1 (1)
pick-up b23 (1)
stack b23 b19 (1)
pick-up b1 (1)
stack b1 b23 (1)
[t=0.132793s, 28292 KB] Plan length: 188 step(s).
[t=0.132793s, 28292 KB] Plan cost: 188
[t=0.132793s, 28292 KB] Expanded 2178 state(s).
[t=0.132793s, 28292 KB] Reopened 0 state(s).
[t=0.132793s, 28292 KB] Evaluated 2179 state(s).
[t=0.132793s, 28292 KB] Evaluations: 4358
[t=0.132793s, 28292 KB] Generated 37205 state(s).
[t=0.132793s, 28292 KB] Dead ends: 0 state(s).
[t=0.132793s, 28292 KB] Number of registered states: 2179
[t=0.132793s, 28292 KB] Int hash set load factor: 2179/4096 = 0.531982
[t=0.132793s, 28292 KB] Int hash set resizes: 12
[t=0.132793s, 28292 KB] Search time: 0.0897567s
[t=0.132793s, 28292 KB] Total time: 0.132793s
Solution found.
Peak memory: 28292 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.34s
