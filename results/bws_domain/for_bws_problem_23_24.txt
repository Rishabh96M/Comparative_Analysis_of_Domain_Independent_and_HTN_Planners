INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_23/bws_problem_23_24.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.010s wall-clock]
1750 relevant atoms
1173 auxiliary atoms
2923 final queue length
5088 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.032s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.002s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
24 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.008s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.040s CPU, 0.031s wall-clock]
1564 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
46 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.015s wall-clock]
Reordering and filtering variables...
47 of 47 variables necessary.
24 of 47 mutex groups necessary.
1058 of 1058 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 47
Translator derived variables: 0
Translator facts: 600
Translator goal facts: 20
Translator mutex groups: 24
Translator total mutex groups size: 576
Translator operators: 1058
Translator axioms: 0
Translator task size: 9109
Translator peak memory: 37488 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.110s CPU, 0.104s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.6494e-05s, 24488 KB] reading input...
[t=0.00323252s, 25428 KB] done reading input!
[t=0.00443952s, 25824 KB] Initializing landmark count heuristic...
[t=0.00453298s, 25824 KB] Generating landmark graph...
[t=0.00463077s, 25824 KB] Building a landmark graph with reasonable orders.
[t=0.00470712s, 25956 KB] Initializing Exploration...
[t=0.0050481s, 26256 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0172584s, 26784 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.017388s, 26784 KB] Landmarks generation time: 0.0127587s
[t=0.0174037s, 26784 KB] Discovered 104 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.017451s, 26784 KB] 625 edges
[t=0.0174618s, 26784 KB] approx. reasonable orders
[t=0.0180491s, 26784 KB] approx. obedient reasonable orders
[t=0.0180805s, 26784 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0180893s, 26784 KB] Landmarks generation time: 0.0135502s
[t=0.0180984s, 26784 KB] Discovered 104 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0181064s, 26784 KB] 637 edges
[t=0.0181144s, 26784 KB] Landmark graph generation time: 0.013589s
[t=0.0181238s, 26784 KB] Landmark graph contains 104 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0181318s, 26784 KB] Landmark graph contains 637 orderings.
[t=0.0184838s, 26784 KB] Simplifying 4186 unary operators... done! [3174 unary operators]
[t=0.0194254s, 26784 KB] time to simplify: 0.00100833s
[t=0.0195555s, 26784 KB] Initializing additive heuristic...
[t=0.0195706s, 26784 KB] Initializing FF heuristic...
[t=0.0196214s, 26784 KB] Building successor generator...done!
[t=0.0198216s, 26784 KB] peak memory difference for successor generator creation: 0 KB
[t=0.01983s, 26784 KB] time for successor generation creation: 0.000173793s
[t=0.0198416s, 26784 KB] Variables: 47
[t=0.0198496s, 26784 KB] FactPairs: 600
[t=0.0198571s, 26784 KB] Bytes per state: 20
[t=0.0200299s, 26784 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0200709s, 26784 KB] 46 initial landmarks, 20 goal landmarks
[t=0.0201309s, 26784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 58
[t=0.0201408s, 26784 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0201496s, 26784 KB] g=0, 1 evaluated, 0 expanded
[t=0.0201697s, 26784 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 58
[t=0.0201788s, 26784 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0203242s, 26784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 57
[t=0.0203344s, 26784 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0203432s, 26784 KB] g=2, 5 evaluated, 4 expanded
[t=0.0204329s, 26784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0204417s, 26784 KB] g=4, 8 evaluated, 7 expanded
[t=0.0206058s, 26784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0206153s, 26784 KB] g=6, 14 evaluated, 13 expanded
[t=0.0208313s, 26784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0208408s, 26784 KB] g=8, 22 evaluated, 21 expanded
[t=0.0209253s, 26784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0209351s, 26784 KB] g=9, 25 evaluated, 24 expanded
[t=0.0211987s, 26784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0212086s, 26784 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0212165s, 26784 KB] g=12, 35 evaluated, 34 expanded
[t=0.0213765s, 26784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0213855s, 26784 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0213933s, 26784 KB] g=14, 41 evaluated, 40 expanded
[t=0.0215974s, 26784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0216096s, 26784 KB] g=16, 48 evaluated, 47 expanded
[t=0.0217465s, 26784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0217678s, 26784 KB] g=17, 53 evaluated, 52 expanded
[t=0.0220508s, 26784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0220662s, 26784 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0220746s, 26784 KB] g=20, 63 evaluated, 62 expanded
[t=0.0223185s, 26784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0223389s, 26784 KB] g=22, 71 evaluated, 70 expanded
[t=0.0224366s, 26784 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0224516s, 26784 KB] g=22, 74 evaluated, 73 expanded
[t=0.0228447s, 26784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0228593s, 26784 KB] g=24, 88 evaluated, 87 expanded
[t=0.0233549s, 26784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0233725s, 26784 KB] g=26, 105 evaluated, 104 expanded
[t=0.0235001s, 26784 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0235106s, 26784 KB] g=26, 109 evaluated, 108 expanded
[t=0.0239436s, 26784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0239557s, 26784 KB] g=28, 124 evaluated, 123 expanded
[t=0.0240531s, 26784 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.024063s, 26784 KB] g=28, 127 evaluated, 126 expanded
[t=0.0244332s, 26784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0244452s, 26784 KB] g=30, 140 evaluated, 139 expanded
[t=0.0245398s, 26784 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0245491s, 26784 KB] g=30, 143 evaluated, 142 expanded
[t=0.0249613s, 26784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0249707s, 26784 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0249801s, 26784 KB] g=32, 158 evaluated, 157 expanded
[t=0.0251506s, 26784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0251602s, 26784 KB] g=32, 164 evaluated, 163 expanded
[t=0.0255976s, 26784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0256072s, 26784 KB] g=34, 180 evaluated, 179 expanded
[t=0.0270892s, 26784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0271019s, 26784 KB] g=38, 234 evaluated, 233 expanded
[t=0.0273739s, 26784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0273838s, 26784 KB] g=40, 244 evaluated, 243 expanded
[t=0.0281313s, 26784 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0281457s, 26784 KB] g=38, 270 evaluated, 269 expanded
[t=0.0301838s, 26784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0301968s, 26784 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0302051s, 26784 KB] g=46, 348 evaluated, 347 expanded
[t=0.0310891s, 26784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0311054s, 26784 KB] g=52, 380 evaluated, 379 expanded
[t=0.043129s, 26784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0431663s, 26784 KB] g=66, 828 evaluated, 827 expanded
[t=0.0436352s, 26784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0436466s, 26784 KB] g=68, 845 evaluated, 844 expanded
[t=0.0441287s, 26784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0441413s, 26784 KB] g=70, 862 evaluated, 861 expanded
[t=0.0444615s, 26784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0444713s, 26784 KB] g=72, 874 evaluated, 873 expanded
[t=0.0447897s, 26784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0447993s, 26784 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0448071s, 26784 KB] g=74, 886 evaluated, 885 expanded
[t=0.045099s, 26784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0451087s, 26784 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0451198s, 26784 KB] g=76, 897 evaluated, 896 expanded
[t=0.0453122s, 26784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0453213s, 26784 KB] g=77, 904 evaluated, 903 expanded
[t=0.0453566s, 26784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0453654s, 26784 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0453733s, 26784 KB] g=78, 905 evaluated, 904 expanded
[t=0.0456455s, 26784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0456545s, 26784 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0456624s, 26784 KB] g=80, 915 evaluated, 914 expanded
[t=0.0459035s, 26784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0459145s, 26784 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0459226s, 26784 KB] g=82, 924 evaluated, 923 expanded
[t=0.0461201s, 26784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0461317s, 26784 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.04614s, 26784 KB] g=84, 931 evaluated, 930 expanded
[t=0.0463022s, 26784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0463117s, 26784 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0463197s, 26784 KB] g=86, 937 evaluated, 936 expanded
[t=0.0468706s, 26784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0468808s, 26784 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0468901s, 26784 KB] g=90, 959 evaluated, 958 expanded
[t=0.0470619s, 26784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0470737s, 26784 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.047082s, 26784 KB] g=92, 965 evaluated, 964 expanded
[t=0.0477018s, 26784 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.047713s, 26784 KB] g=96, 990 evaluated, 989 expanded
[t=0.047856s, 26784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0478656s, 26784 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0478744s, 26784 KB] g=98, 995 evaluated, 994 expanded
[t=0.0489287s, 26784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0489418s, 26784 KB] g=106, 1039 evaluated, 1038 expanded
[t=0.0490245s, 26784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0490345s, 26784 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0490426s, 26784 KB] g=108, 1042 evaluated, 1041 expanded
[t=0.0496817s, 26784 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0496961s, 26784 KB] g=116, 1069 evaluated, 1068 expanded
[t=0.0497712s, 26784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0497811s, 26784 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0497906s, 26784 KB] g=118, 1072 evaluated, 1071 expanded
[t=0.0514529s, 26784 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0514715s, 26784 KB] g=140, 1153 evaluated, 1152 expanded
[t=0.0516282s, 26784 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0516377s, 26784 KB] g=144, 1162 evaluated, 1161 expanded
[t=0.0516936s, 26784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0517027s, 26784 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0517108s, 26784 KB] g=146, 1165 evaluated, 1164 expanded
[t=0.0518774s, 26784 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0518893s, 26784 KB] g=154, 1176 evaluated, 1175 expanded
[t=0.0519103s, 26784 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0519751s, 26784 KB] g=155, 1177 evaluated, 1176 expanded
[t=0.0519909s, 26784 KB] Solution found!
[t=0.0520051s, 26784 KB] Actual search time: 0.0319343s
unstack b16 b12 (1)
put-down b16 (1)
unstack b14 b9 (1)
put-down b14 (1)
unstack b19 b23 (1)
put-down b19 (1)
unstack b23 b22 (1)
put-down b23 (1)
unstack b22 b13 (1)
put-down b22 (1)
unstack b9 b21 (1)
stack b9 b13 (1)
unstack b21 b15 (1)
stack b21 b16 (1)
unstack b15 b7 (1)
put-down b15 (1)
unstack b7 b4 (1)
put-down b7 (1)
unstack b4 b17 (1)
stack b4 b19 (1)
unstack b17 b11 (1)
put-down b17 (1)
unstack b11 b2 (1)
stack b11 b23 (1)
pick-up b15 (1)
stack b15 b11 (1)
unstack b2 b6 (1)
stack b2 b9 (1)
pick-up b14 (1)
stack b14 b6 (1)
pick-up b22 (1)
stack b22 b17 (1)
unstack b4 b19 (1)
put-down b4 (1)
pick-up b19 (1)
stack b19 b2 (1)
pick-up b4 (1)
stack b4 b19 (1)
unstack b14 b6 (1)
put-down b14 (1)
unstack b6 b8 (1)
put-down b6 (1)
pick-up b14 (1)
stack b14 b6 (1)
pick-up b8 (1)
stack b8 b14 (1)
unstack b15 b11 (1)
put-down b15 (1)
unstack b11 b23 (1)
put-down b11 (1)
pick-up b15 (1)
stack b15 b11 (1)
unstack b4 b19 (1)
put-down b4 (1)
unstack b19 b2 (1)
put-down b19 (1)
unstack b2 b9 (1)
put-down b2 (1)
pick-up b19 (1)
stack b19 b2 (1)
unstack b9 b13 (1)
put-down b9 (1)
unstack b13 b10 (1)
put-down b13 (1)
unstack b10 b18 (1)
stack b10 b21 (1)
unstack b18 b20 (1)
put-down b18 (1)
unstack b20 b5 (1)
stack b20 b12 (1)
unstack b5 b3 (1)
put-down b5 (1)
unstack b3 b1 (1)
stack b3 b15 (1)
pick-up b1 (1)
stack b1 b4 (1)
pick-up b7 (1)
stack b7 b5 (1)
pick-up b13 (1)
stack b13 b10 (1)
pick-up b18 (1)
stack b18 b3 (1)
pick-up b23 (1)
stack b23 b1 (1)
pick-up b9 (1)
stack b9 b13 (1)
unstack b22 b17 (1)
put-down b22 (1)
pick-up b17 (1)
stack b17 b20 (1)
pick-up b22 (1)
stack b22 b17 (1)
unstack b19 b2 (1)
put-down b19 (1)
pick-up b2 (1)
stack b2 b9 (1)
pick-up b19 (1)
stack b19 b2 (1)
unstack b8 b14 (1)
put-down b8 (1)
unstack b14 b6 (1)
put-down b14 (1)
pick-up b6 (1)
stack b6 b18 (1)
pick-up b14 (1)
stack b14 b6 (1)
pick-up b8 (1)
stack b8 b14 (1)
unstack b23 b1 (1)
put-down b23 (1)
unstack b1 b4 (1)
put-down b1 (1)
pick-up b4 (1)
stack b4 b19 (1)
pick-up b1 (1)
stack b1 b4 (1)
pick-up b23 (1)
stack b23 b1 (1)
unstack b8 b14 (1)
put-down b8 (1)
unstack b14 b6 (1)
put-down b14 (1)
unstack b6 b18 (1)
put-down b6 (1)
pick-up b14 (1)
stack b14 b6 (1)
pick-up b8 (1)
stack b8 b14 (1)
unstack b18 b3 (1)
put-down b18 (1)
unstack b3 b15 (1)
put-down b3 (1)
pick-up b18 (1)
stack b18 b3 (1)
unstack b15 b11 (1)
put-down b15 (1)
pick-up b11 (1)
stack b11 b23 (1)
pick-up b15 (1)
stack b15 b11 (1)
unstack b18 b3 (1)
put-down b18 (1)
pick-up b3 (1)
stack b3 b15 (1)
pick-up b18 (1)
stack b18 b3 (1)
unstack b8 b14 (1)
put-down b8 (1)
unstack b14 b6 (1)
put-down b14 (1)
pick-up b6 (1)
stack b6 b18 (1)
pick-up b14 (1)
stack b14 b6 (1)
pick-up b8 (1)
stack b8 b14 (1)
[t=0.0520181s, 26784 KB] Plan length: 156 step(s).
[t=0.0520181s, 26784 KB] Plan cost: 156
[t=0.0520181s, 26784 KB] Expanded 1177 state(s).
[t=0.0520181s, 26784 KB] Reopened 0 state(s).
[t=0.0520181s, 26784 KB] Evaluated 1178 state(s).
[t=0.0520181s, 26784 KB] Evaluations: 2356
[t=0.0520181s, 26784 KB] Generated 11466 state(s).
[t=0.0520181s, 26784 KB] Dead ends: 0 state(s).
[t=0.0520181s, 26784 KB] Number of registered states: 1178
[t=0.0520181s, 26784 KB] Int hash set load factor: 1178/2048 = 0.575195
[t=0.0520181s, 26784 KB] Int hash set resizes: 11
[t=0.0520181s, 26784 KB] Search time: 0.0319888s
[t=0.0520181s, 26784 KB] Total time: 0.0520181s
Solution found.
Peak memory: 26784 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.20s
