INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_21/bws_problem_21_19.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.009s wall-clock]
1472 relevant atoms
987 auxiliary atoms
2459 final queue length
4268 total queue pushes
Completing instantiation... [0.020s CPU, 0.017s wall-clock]
Instantiating: [0.030s CPU, 0.028s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
22 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.006s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.010s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
1302 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
42 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.012s wall-clock]
Reordering and filtering variables...
43 of 43 variables necessary.
22 of 43 mutex groups necessary.
882 of 882 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 43
Translator derived variables: 0
Translator facts: 506
Translator goal facts: 17
Translator mutex groups: 22
Translator total mutex groups size: 484
Translator operators: 882
Translator axioms: 0
Translator task size: 7602
Translator peak memory: 36452 KB
Writing output... [0.010s CPU, 0.005s wall-clock]
Done! [0.080s CPU, 0.085s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=1.9223e-05s, 24488 KB] reading input...
[t=0.00246722s, 25268 KB] done reading input!
[t=0.00325498s, 25664 KB] Initializing landmark count heuristic...
[t=0.00328355s, 25664 KB] Generating landmark graph...
[t=0.00333931s, 25664 KB] Building a landmark graph with reasonable orders.
[t=0.00339236s, 25664 KB] Initializing Exploration...
[t=0.00366334s, 25852 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0126161s, 26380 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0127094s, 26380 KB] Landmarks generation time: 0.00937466s
[t=0.01273s, 26380 KB] Discovered 90 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0127499s, 26380 KB] 394 edges
[t=0.0127612s, 26380 KB] approx. reasonable orders
[t=0.0147825s, 26380 KB] approx. obedient reasonable orders
[t=0.0148102s, 26380 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0148196s, 26380 KB] Landmarks generation time: 0.0115331s
[t=0.0148289s, 26380 KB] Discovered 90 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0148367s, 26380 KB] 441 edges
[t=0.0148447s, 26380 KB] Landmark graph generation time: 0.0115684s
[t=0.0148533s, 26380 KB] Landmark graph contains 90 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0148613s, 26380 KB] Landmark graph contains 441 orderings.
[t=0.0151529s, 26380 KB] Simplifying 3486 unary operators... done! [2646 unary operators]
[t=0.0159847s, 26380 KB] time to simplify: 0.000899764s
[t=0.0161105s, 26380 KB] Initializing additive heuristic...
[t=0.016125s, 26380 KB] Initializing FF heuristic...
[t=0.0162378s, 26380 KB] Building successor generator...done!
[t=0.0164288s, 26380 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0164383s, 26380 KB] time for successor generation creation: 0.000156867s
[t=0.0164514s, 26380 KB] Variables: 43
[t=0.0164608s, 26380 KB] FactPairs: 506
[t=0.0164701s, 26380 KB] Bytes per state: 16
[t=0.0166577s, 26380 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0166976s, 26380 KB] 41 initial landmarks, 17 goal landmarks
[t=0.0167721s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0167834s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0167919s, 26380 KB] g=0, 1 evaluated, 0 expanded
[t=0.016808s, 26380 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0168169s, 26380 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0169349s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0169455s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0169555s, 26380 KB] g=2, 5 evaluated, 4 expanded
[t=0.0170633s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0170734s, 26380 KB] g=4, 9 evaluated, 8 expanded
[t=0.0171559s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0171659s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0171742s, 26380 KB] g=4, 12 evaluated, 11 expanded
[t=0.0172548s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0172651s, 26380 KB] g=6, 15 evaluated, 14 expanded
[t=0.0173233s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0173323s, 26380 KB] g=7, 17 evaluated, 16 expanded
[t=0.0175817s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0175983s, 26380 KB] g=10, 27 evaluated, 26 expanded
[t=0.0177745s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.017784s, 26380 KB] g=10, 34 evaluated, 33 expanded
[t=0.0178186s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0178278s, 26380 KB] g=12, 35 evaluated, 34 expanded
[t=0.0182983s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0183114s, 26380 KB] g=13, 55 evaluated, 54 expanded
[t=0.0185025s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0185201s, 26380 KB] g=14, 63 evaluated, 62 expanded
[t=0.0187339s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0187508s, 26380 KB] g=16, 70 evaluated, 69 expanded
[t=0.0190972s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0191095s, 26380 KB] g=18, 85 evaluated, 84 expanded
[t=0.0196072s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0196237s, 26380 KB] g=20, 107 evaluated, 106 expanded
[t=0.0196825s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0196959s, 26380 KB] g=20, 109 evaluated, 108 expanded
[t=0.0207216s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0207459s, 26380 KB] g=22, 152 evaluated, 151 expanded
[t=0.0213s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.021322s, 26380 KB] g=24, 176 evaluated, 175 expanded
[t=0.0214458s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0214567s, 26380 KB] g=26, 181 evaluated, 180 expanded
[t=0.0217528s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0217719s, 26380 KB] g=28, 194 evaluated, 193 expanded
[t=0.0220352s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0220633s, 26380 KB] g=30, 204 evaluated, 203 expanded
[t=0.023859s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0238811s, 26380 KB] g=36, 282 evaluated, 281 expanded
[t=0.0239655s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0239751s, 26380 KB] g=37, 285 evaluated, 284 expanded
[t=0.0241502s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0241603s, 26380 KB] g=38, 292 evaluated, 291 expanded
[t=0.0242411s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0242504s, 26380 KB] g=39, 295 evaluated, 294 expanded
[t=0.0245334s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0245446s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0245536s, 26380 KB] g=40, 306 evaluated, 305 expanded
[t=0.0246111s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0246202s, 26380 KB] g=41, 308 evaluated, 307 expanded
[t=0.0248639s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0248798s, 26380 KB] g=43, 317 evaluated, 316 expanded
[t=0.025182s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0251929s, 26380 KB] g=46, 330 evaluated, 329 expanded
[t=0.0257016s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0257161s, 26380 KB] g=48, 352 evaluated, 351 expanded
[t=0.0262311s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0262418s, 26380 KB] g=50, 374 evaluated, 373 expanded
[t=0.026977s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0269902s, 26380 KB] g=54, 407 evaluated, 406 expanded
[t=0.0279719s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0279842s, 26380 KB] g=58, 450 evaluated, 449 expanded
[t=0.0282059s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0282165s, 26380 KB] g=60, 459 evaluated, 458 expanded
[t=0.0284503s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0284599s, 26380 KB] g=63, 469 evaluated, 468 expanded
[t=0.0328834s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0329046s, 26380 KB] g=68, 666 evaluated, 665 expanded
[t=0.0330877s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0330976s, 26380 KB] g=68, 674 evaluated, 673 expanded
[t=0.0332583s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0332674s, 26380 KB] g=70, 681 evaluated, 680 expanded
[t=0.0333421s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.033351s, 26380 KB] g=71, 684 evaluated, 683 expanded
[t=0.0334853s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0334945s, 26380 KB] g=73, 690 evaluated, 689 expanded
[t=0.0362639s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0362882s, 26380 KB] g=83, 820 evaluated, 819 expanded
[t=0.036326s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0363358s, 26380 KB] g=84, 821 evaluated, 820 expanded
[t=0.0363667s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0363761s, 26380 KB] g=85, 822 evaluated, 821 expanded
[t=0.0364292s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0364382s, 26380 KB] g=86, 824 evaluated, 823 expanded
[t=0.0366231s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0366332s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0366417s, 26380 KB] g=88, 833 evaluated, 832 expanded
[t=0.036798s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.036808s, 26380 KB] g=90, 841 evaluated, 840 expanded
[t=0.0369115s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0369212s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0369296s, 26380 KB] g=90, 846 evaluated, 845 expanded
[t=0.0370633s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0370723s, 26380 KB] g=92, 853 evaluated, 852 expanded
[t=0.037169s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0371786s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0371877s, 26380 KB] g=92, 858 evaluated, 857 expanded
[t=0.0372324s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0372418s, 26380 KB] g=93, 860 evaluated, 859 expanded
[t=0.0372684s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0372771s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0372853s, 26380 KB] g=94, 861 evaluated, 860 expanded
[t=0.037328s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0373414s, 26380 KB] g=95, 863 evaluated, 862 expanded
[t=0.0373684s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0373773s, 26380 KB] g=96, 864 evaluated, 863 expanded
[t=0.0374523s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0374613s, 26380 KB] g=98, 868 evaluated, 867 expanded
[t=0.0375269s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0375394s, 26380 KB] g=96, 871 evaluated, 870 expanded
[t=0.0375967s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0376058s, 26380 KB] g=97, 874 evaluated, 873 expanded
[t=0.037653s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0376634s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0376717s, 26380 KB] g=98, 876 evaluated, 875 expanded
[t=0.0377285s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0377377s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0377459s, 26380 KB] g=100, 879 evaluated, 878 expanded
[t=0.0378947s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0379038s, 26380 KB] g=108, 889 evaluated, 888 expanded
[t=0.0379623s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0379712s, 26380 KB] g=112, 893 evaluated, 892 expanded
[t=0.0379968s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0380059s, 26380 KB] g=113, 894 evaluated, 893 expanded
[t=0.0380208s, 26380 KB] Solution found!
[t=0.0380325s, 26380 KB] Actual search time: 0.0213305s
unstack b9 b7 (1)
put-down b9 (1)
unstack b7 b10 (1)
stack b7 b12 (1)
unstack b10 b14 (1)
put-down b10 (1)
unstack b14 b21 (1)
put-down b14 (1)
unstack b21 b11 (1)
put-down b21 (1)
unstack b16 b18 (1)
put-down b16 (1)
unstack b11 b4 (1)
put-down b11 (1)
unstack b18 b3 (1)
put-down b18 (1)
unstack b4 b2 (1)
put-down b4 (1)
unstack b2 b8 (1)
put-down b2 (1)
pick-up b8 (1)
stack b8 b16 (1)
pick-up b11 (1)
stack b11 b3 (1)
pick-up b10 (1)
stack b10 b2 (1)
pick-up b14 (1)
stack b14 b4 (1)
pick-up b18 (1)
stack b18 b8 (1)
unstack b7 b12 (1)
put-down b7 (1)
unstack b12 b15 (1)
put-down b12 (1)
unstack b15 b5 (1)
stack b15 b7 (1)
unstack b5 b6 (1)
put-down b5 (1)
pick-up b12 (1)
stack b12 b5 (1)
unstack b11 b3 (1)
put-down b11 (1)
unstack b14 b4 (1)
put-down b14 (1)
unstack b10 b2 (1)
put-down b10 (1)
pick-up b2 (1)
stack b2 b6 (1)
pick-up b10 (1)
stack b10 b2 (1)
pick-up b11 (1)
stack b11 b3 (1)
pick-up b14 (1)
stack b14 b4 (1)
unstack b15 b7 (1)
put-down b15 (1)
pick-up b7 (1)
stack b7 b12 (1)
pick-up b15 (1)
stack b15 b7 (1)
unstack b18 b8 (1)
put-down b18 (1)
unstack b8 b16 (1)
put-down b8 (1)
pick-up b16 (1)
stack b16 b15 (1)
pick-up b8 (1)
stack b8 b16 (1)
pick-up b18 (1)
stack b18 b8 (1)
unstack b10 b2 (1)
put-down b10 (1)
unstack b2 b6 (1)
put-down b2 (1)
pick-up b10 (1)
stack b10 b2 (1)
unstack b11 b3 (1)
put-down b11 (1)
unstack b14 b4 (1)
put-down b14 (1)
unstack b6 b19 (1)
put-down b6 (1)
unstack b19 b1 (1)
stack b19 b9 (1)
unstack b1 b13 (1)
stack b1 b10 (1)
unstack b13 b20 (1)
stack b13 b18 (1)
pick-up b20 (1)
stack b20 b21 (1)
unstack b3 b17 (1)
stack b3 b13 (1)
pick-up b11 (1)
stack b11 b3 (1)
pick-up b4 (1)
stack b4 b20 (1)
pick-up b14 (1)
stack b14 b4 (1)
pick-up b6 (1)
stack b6 b19 (1)
unstack b1 b10 (1)
put-down b1 (1)
unstack b10 b2 (1)
put-down b10 (1)
pick-up b1 (1)
stack b1 b10 (1)
pick-up b2 (1)
stack b2 b6 (1)
unstack b1 b10 (1)
put-down b1 (1)
pick-up b10 (1)
stack b10 b2 (1)
pick-up b1 (1)
stack b1 b10 (1)
[t=0.0380426s, 26380 KB] Plan length: 114 step(s).
[t=0.0380426s, 26380 KB] Plan cost: 114
[t=0.0380426s, 26380 KB] Expanded 894 state(s).
[t=0.0380426s, 26380 KB] Reopened 0 state(s).
[t=0.0380426s, 26380 KB] Evaluated 895 state(s).
[t=0.0380426s, 26380 KB] Evaluations: 1790
[t=0.0380426s, 26380 KB] Generated 8534 state(s).
[t=0.0380426s, 26380 KB] Dead ends: 0 state(s).
[t=0.0380426s, 26380 KB] Number of registered states: 895
[t=0.0380426s, 26380 KB] Int hash set load factor: 895/1024 = 0.874023
[t=0.0380426s, 26380 KB] Int hash set resizes: 10
[t=0.0380426s, 26380 KB] Search time: 0.0213857s
[t=0.0380426s, 26380 KB] Total time: 0.0380426s
Solution found.
Peak memory: 26380 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.17s
