INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_34/bws_problem_34_51.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.023s wall-clock]
3708 relevant atoms
2482 auxiliary atoms
6190 final queue length
10888 total queue pushes
Completing instantiation... [0.050s CPU, 0.043s wall-clock]
Instantiating: [0.070s CPU, 0.068s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.002s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
35 uncovered facts
Choosing groups: [0.000s CPU, 0.002s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.010s CPU, 0.012s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.001s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.001s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.003s wall-clock]
Translating task: [0.060s CPU, 0.061s wall-clock]
3434 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
68 propositions removed
Detecting unreachable propositions: [0.030s CPU, 0.029s wall-clock]
Reordering and filtering variables...
69 of 69 variables necessary.
35 of 69 mutex groups necessary.
2312 of 2312 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.020s CPU, 0.014s wall-clock]
Translator variables: 69
Translator derived variables: 0
Translator facts: 1260
Translator goal facts: 30
Translator mutex groups: 35
Translator total mutex groups size: 1225
Translator operators: 2312
Translator axioms: 0
Translator task size: 19822
Translator peak memory: 44444 KB
Writing output... [0.010s CPU, 0.011s wall-clock]
Done! [0.200s CPU, 0.203s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=1.6289e-05s, 24488 KB] reading input...
[t=0.00716019s, 27204 KB] done reading input!
[t=0.00825s, 27600 KB] Initializing landmark count heuristic...
[t=0.00828518s, 27600 KB] Generating landmark graph...
[t=0.00840934s, 27732 KB] Building a landmark graph with reasonable orders.
[t=0.00852214s, 27864 KB] Initializing Exploration...
[t=0.00918014s, 28512 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0467634s, 29572 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0469294s, 29572 KB] Landmarks generation time: 0.0385415s
[t=0.0469663s, 29572 KB] Discovered 153 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0469847s, 29572 KB] 898 edges
[t=0.0469948s, 29572 KB] approx. reasonable orders
[t=0.048378s, 29572 KB] approx. obedient reasonable orders
[t=0.0484605s, 29572 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0484725s, 29572 KB] Landmarks generation time: 0.0401855s
[t=0.0484829s, 29572 KB] Discovered 153 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0484911s, 29572 KB] 909 edges
[t=0.0484995s, 29572 KB] Landmark graph generation time: 0.0402214s
[t=0.0485082s, 29572 KB] Landmark graph contains 153 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0485166s, 29572 KB] Landmark graph contains 909 orderings.
[t=0.0493914s, 29572 KB] Simplifying 9180 unary operators... done! [6936 unary operators]
[t=0.0518328s, 29572 KB] time to simplify: 0.00250231s
[t=0.0520723s, 29640 KB] Initializing additive heuristic...
[t=0.052107s, 29640 KB] Initializing FF heuristic...
[t=0.0521769s, 29640 KB] Building successor generator...done!
[t=0.0525748s, 29640 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0525877s, 29640 KB] time for successor generation creation: 0.000361693s
[t=0.0526034s, 29640 KB] Variables: 69
[t=0.0526113s, 29640 KB] FactPairs: 1260
[t=0.0526201s, 29640 KB] Bytes per state: 32
[t=0.0527294s, 29640 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0527627s, 29640 KB] 67 initial landmarks, 30 goal landmarks
[t=0.0528526s, 29640 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 86
[t=0.0528615s, 29640 KB] New best heuristic value for ff(transform = adapt_costs(one)): 61
[t=0.0528694s, 29640 KB] g=0, 1 evaluated, 0 expanded
[t=0.0528905s, 29640 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 86
[t=0.0528989s, 29640 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 61
[t=0.0530221s, 29640 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 85
[t=0.053031s, 29640 KB] g=1, 3 evaluated, 2 expanded
[t=0.0536198s, 29640 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 84
[t=0.0536298s, 29640 KB] g=4, 14 evaluated, 13 expanded
[t=0.0542253s, 29640 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 83
[t=0.0542353s, 29640 KB] g=6, 25 evaluated, 24 expanded
[t=0.0549006s, 29640 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 82
[t=0.0549106s, 29640 KB] g=8, 37 evaluated, 36 expanded
[t=0.0557673s, 29640 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 79
[t=0.0557798s, 29640 KB] New best heuristic value for ff(transform = adapt_costs(one)): 59
[t=0.0557881s, 29640 KB] g=10, 53 evaluated, 52 expanded
[t=0.0563141s, 29640 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 78
[t=0.0563236s, 29640 KB] New best heuristic value for ff(transform = adapt_costs(one)): 58
[t=0.0563316s, 29640 KB] g=12, 63 evaluated, 62 expanded
[t=0.05656s, 29640 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 77
[t=0.0565687s, 29640 KB] g=13, 67 evaluated, 66 expanded
[t=0.0566316s, 29640 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 76
[t=0.0566404s, 29640 KB] New best heuristic value for ff(transform = adapt_costs(one)): 57
[t=0.0566481s, 29640 KB] g=14, 68 evaluated, 67 expanded
[t=0.057122s, 29640 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 75
[t=0.0571466s, 29640 KB] New best heuristic value for ff(transform = adapt_costs(one)): 56
[t=0.0571548s, 29640 KB] g=16, 77 evaluated, 76 expanded
[t=0.0576074s, 29640 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 74
[t=0.0576162s, 29640 KB] g=18, 85 evaluated, 84 expanded
[t=0.0576781s, 29640 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 73
[t=0.0576865s, 29640 KB] New best heuristic value for ff(transform = adapt_costs(one)): 55
[t=0.057698s, 29640 KB] g=18, 86 evaluated, 85 expanded
[t=0.0580799s, 29640 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 72
[t=0.0580889s, 29640 KB] g=20, 93 evaluated, 92 expanded
[t=0.0584082s, 29640 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 71
[t=0.0584171s, 29640 KB] g=21, 99 evaluated, 98 expanded
[t=0.0590235s, 29640 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 68
[t=0.0590453s, 29640 KB] New best heuristic value for ff(transform = adapt_costs(one)): 54
[t=0.0590538s, 29640 KB] g=24, 110 evaluated, 109 expanded
[t=0.0595476s, 29640 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 65
[t=0.0595571s, 29640 KB] New best heuristic value for ff(transform = adapt_costs(one)): 53
[t=0.0595661s, 29640 KB] g=26, 119 evaluated, 118 expanded
[t=0.0601353s, 29640 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 64
[t=0.0601483s, 29640 KB] g=29, 129 evaluated, 128 expanded
[t=0.0610179s, 29640 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 63
[t=0.0610292s, 29640 KB] g=32, 145 evaluated, 144 expanded
[t=0.0621547s, 29640 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 62
[t=0.0621645s, 29640 KB] g=34, 166 evaluated, 165 expanded
[t=0.0634305s, 29640 KB] New best heuristic value for ff(transform = adapt_costs(one)): 52
[t=0.0634445s, 29640 KB] g=36, 189 evaluated, 188 expanded
[t=0.0636811s, 29640 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.0636914s, 29640 KB] g=36, 193 evaluated, 192 expanded
[t=0.0648103s, 29640 KB] New best heuristic value for ff(transform = adapt_costs(one)): 51
[t=0.0648343s, 29640 KB] g=38, 213 evaluated, 212 expanded
[t=0.0650753s, 29640 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0650877s, 29640 KB] g=38, 217 evaluated, 216 expanded
[t=0.0662119s, 29640 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0662347s, 29640 KB] New best heuristic value for ff(transform = adapt_costs(one)): 50
[t=0.0662435s, 29640 KB] g=40, 238 evaluated, 237 expanded
[t=0.0669306s, 29640 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0669486s, 29640 KB] New best heuristic value for ff(transform = adapt_costs(one)): 49
[t=0.0669573s, 29640 KB] g=42, 251 evaluated, 250 expanded
[t=0.0677398s, 29640 KB] New best heuristic value for ff(transform = adapt_costs(one)): 48
[t=0.0677554s, 29640 KB] g=44, 265 evaluated, 264 expanded
[t=0.0678851s, 29640 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0678998s, 29640 KB] g=44, 267 evaluated, 266 expanded
[t=0.0699769s, 29640 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0700893s, 29640 KB] New best heuristic value for ff(transform = adapt_costs(one)): 47
[t=0.0701015s, 29640 KB] g=46, 290 evaluated, 289 expanded
[t=0.0711631s, 29640 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0712608s, 29640 KB] New best heuristic value for ff(transform = adapt_costs(one)): 46
[t=0.0712763s, 29640 KB] g=48, 302 evaluated, 301 expanded
[t=0.0720688s, 29640 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0720885s, 29640 KB] New best heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0720969s, 29640 KB] g=50, 313 evaluated, 312 expanded
[t=0.0727279s, 29640 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0727403s, 29640 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0727492s, 29640 KB] g=52, 324 evaluated, 323 expanded
[t=0.0733531s, 29640 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0733631s, 29640 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0733726s, 29640 KB] g=54, 335 evaluated, 334 expanded
[t=0.0742756s, 29640 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0742865s, 29640 KB] g=57, 351 evaluated, 350 expanded
[t=0.0754716s, 29640 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.075485s, 29640 KB] g=60, 372 evaluated, 371 expanded
[t=0.0764938s, 29640 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0765034s, 29640 KB] g=61, 391 evaluated, 390 expanded
[t=0.0766206s, 29640 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0766297s, 29640 KB] g=62, 393 evaluated, 392 expanded
[t=0.0772593s, 29640 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0772691s, 29640 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0772771s, 29640 KB] g=64, 405 evaluated, 404 expanded
[t=0.0778595s, 29640 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0778698s, 29640 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0778778s, 29640 KB] g=66, 416 evaluated, 415 expanded
[t=0.0784676s, 29640 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.078477s, 29640 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0784851s, 29640 KB] g=68, 427 evaluated, 426 expanded
[t=0.0791431s, 29640 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0791533s, 29640 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0791614s, 29640 KB] g=70, 439 evaluated, 438 expanded
[t=0.0797554s, 29640 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0797655s, 29640 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0797734s, 29640 KB] g=72, 450 evaluated, 449 expanded
[t=0.0803277s, 29640 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0803493s, 29640 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0803582s, 29640 KB] g=74, 460 evaluated, 459 expanded
[t=0.0808447s, 29640 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0808603s, 29640 KB] g=74, 469 evaluated, 468 expanded
[t=0.0815865s, 29640 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0816137s, 29640 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0816224s, 29640 KB] g=76, 479 evaluated, 478 expanded
[t=0.083355s, 29640 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0833718s, 29640 KB] g=80, 509 evaluated, 508 expanded
[t=0.0838193s, 29640 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0838386s, 29640 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0838485s, 29640 KB] g=82, 517 evaluated, 516 expanded
[t=0.0867558s, 29640 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0867932s, 29640 KB] g=86, 572 evaluated, 571 expanded
[t=0.0872132s, 29640 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.087226s, 29640 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0872343s, 29640 KB] g=88, 579 evaluated, 578 expanded
[t=0.0893735s, 29640 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0893852s, 29640 KB] g=92, 620 evaluated, 619 expanded
[t=0.0897285s, 29640 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0897378s, 29640 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0897458s, 29640 KB] g=94, 626 evaluated, 625 expanded
[t=0.095459s, 29640 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0954756s, 29640 KB] g=102, 736 evaluated, 735 expanded
[t=0.0960219s, 29640 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0960329s, 29640 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0960417s, 29640 KB] g=104, 746 evaluated, 745 expanded
[t=0.116725s, 29640 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.116805s, 29640 KB] g=102, 1096 evaluated, 1095 expanded
[t=0.117196s, 29640 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.117209s, 29640 KB] g=104, 1103 evaluated, 1102 expanded
[t=0.121337s, 29640 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.121433s, 29640 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.121443s, 29640 KB] g=112, 1177 evaluated, 1176 expanded
[t=0.121666s, 29640 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.121676s, 29640 KB] g=112, 1181 evaluated, 1180 expanded
[t=0.121947s, 29640 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.121958s, 29640 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.121966s, 29640 KB] g=114, 1186 evaluated, 1185 expanded
[t=0.141409s, 29640 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.141458s, 29640 KB] g=134, 1567 evaluated, 1566 expanded
[t=0.144867s, 29640 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.144887s, 29640 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.144896s, 29640 KB] g=148, 1631 evaluated, 1630 expanded
[t=0.165549s, 29640 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.165673s, 29640 KB] g=180, 1999 evaluated, 1998 expanded
[t=0.165946s, 29640 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.165957s, 29640 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.165967s, 29640 KB] g=182, 2004 evaluated, 2003 expanded
[t=0.166768s, 29640 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.166779s, 29640 KB] g=186, 2020 evaluated, 2019 expanded
[t=0.166997s, 29640 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.167009s, 29640 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.167018s, 29640 KB] g=188, 2024 evaluated, 2023 expanded
[t=0.169517s, 29640 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.169559s, 29640 KB] g=200, 2078 evaluated, 2077 expanded
[t=0.169992s, 29640 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.17001s, 29640 KB] g=204, 2087 evaluated, 2086 expanded
[t=0.170154s, 29640 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.170163s, 29640 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.170171s, 29640 KB] g=206, 2090 evaluated, 2089 expanded
[t=0.173641s, 29640 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.173659s, 29640 KB] g=236, 2185 evaluated, 2184 expanded
[t=0.17395s, 29640 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.17396s, 29640 KB] g=240, 2194 evaluated, 2193 expanded
[t=0.174063s, 29640 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.174072s, 29640 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.174082s, 29640 KB] g=242, 2197 evaluated, 2196 expanded
[t=0.174579s, 29640 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.174599s, 29640 KB] g=254, 2214 evaluated, 2213 expanded
[t=0.174709s, 29640 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.17472s, 29640 KB] g=258, 2218 evaluated, 2217 expanded
[t=0.174743s, 29640 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.174752s, 29640 KB] g=259, 2219 evaluated, 2218 expanded
[t=0.17477s, 29640 KB] Solution found!
[t=0.174788s, 29640 KB] Actual search time: 0.122023s
unstack b11 b16 (1)
put-down b11 (1)
unstack b16 b34 (1)
put-down b16 (1)
unstack b18 b4 (1)
put-down b18 (1)
unstack b19 b20 (1)
put-down b19 (1)
unstack b20 b1 (1)
stack b20 b27 (1)
unstack b4 b17 (1)
put-down b4 (1)
unstack b17 b15 (1)
stack b17 b1 (1)
pick-up b15 (1)
stack b15 b9 (1)
pick-up b16 (1)
stack b16 b15 (1)
unstack b3 b32 (1)
put-down b3 (1)
unstack b32 b6 (1)
put-down b32 (1)
unstack b6 b13 (1)
stack b6 b19 (1)
unstack b13 b12 (1)
stack b13 b6 (1)
unstack b17 b1 (1)
put-down b17 (1)
unstack b1 b31 (1)
put-down b1 (1)
unstack b31 b10 (1)
put-down b31 (1)
unstack b10 b7 (1)
put-down b10 (1)
unstack b7 b33 (1)
stack b7 b10 (1)
unstack b33 b23 (1)
stack b33 b4 (1)
unstack b23 b8 (1)
stack b23 b7 (1)
unstack b8 b21 (1)
put-down b8 (1)
unstack b21 b28 (1)
stack b21 b31 (1)
pick-up b11 (1)
stack b11 b21 (1)
pick-up b17 (1)
stack b17 b1 (1)
unstack b28 b25 (1)
stack b28 b16 (1)
pick-up b25 (1)
stack b25 b20 (1)
pick-up b3 (1)
stack b3 b33 (1)
unstack b12 b14 (1)
put-down b12 (1)
unstack b14 b29 (1)
put-down b14 (1)
unstack b29 b5 (1)
put-down b29 (1)
unstack b5 b30 (1)
stack b5 b18 (1)
pick-up b12 (1)
stack b12 b14 (1)
unstack b30 b24 (1)
stack b30 b28 (1)
unstack b24 b22 (1)
stack b24 b25 (1)
unstack b22 b26 (1)
stack b22 b34 (1)
pick-up b26 (1)
stack b26 b13 (1)
pick-up b29 (1)
stack b29 b24 (1)
pick-up b32 (1)
stack b32 b29 (1)
unstack b22 b34 (1)
put-down b22 (1)
pick-up b34 (1)
stack b34 b30 (1)
pick-up b22 (1)
stack b22 b34 (1)
unstack b17 b1 (1)
put-down b17 (1)
pick-up b1 (1)
stack b1 b26 (1)
pick-up b17 (1)
stack b17 b1 (1)
unstack b5 b18 (1)
put-down b5 (1)
pick-up b18 (1)
stack b18 b22 (1)
pick-up b5 (1)
stack b5 b18 (1)
unstack b23 b7 (1)
put-down b23 (1)
unstack b7 b10 (1)
put-down b7 (1)
pick-up b10 (1)
stack b10 b3 (1)
pick-up b7 (1)
stack b7 b10 (1)
pick-up b23 (1)
stack b23 b7 (1)
unstack b11 b21 (1)
put-down b11 (1)
unstack b21 b31 (1)
put-down b21 (1)
pick-up b31 (1)
stack b31 b23 (1)
pick-up b21 (1)
stack b21 b31 (1)
pick-up b11 (1)
stack b11 b21 (1)
unstack b17 b1 (1)
put-down b17 (1)
unstack b1 b26 (1)
put-down b1 (1)
unstack b26 b13 (1)
put-down b26 (1)
pick-up b1 (1)
stack b1 b26 (1)
pick-up b17 (1)
stack b17 b1 (1)
unstack b13 b6 (1)
put-down b13 (1)
unstack b6 b19 (1)
put-down b6 (1)
pick-up b19 (1)
stack b19 b12 (1)
pick-up b6 (1)
stack b6 b19 (1)
pick-up b13 (1)
stack b13 b6 (1)
unstack b17 b1 (1)
put-down b17 (1)
unstack b1 b26 (1)
put-down b1 (1)
pick-up b17 (1)
stack b17 b1 (1)
pick-up b26 (1)
stack b26 b13 (1)
unstack b17 b1 (1)
put-down b17 (1)
pick-up b1 (1)
stack b1 b26 (1)
pick-up b17 (1)
stack b17 b1 (1)
unstack b5 b18 (1)
put-down b5 (1)
unstack b18 b22 (1)
put-down b18 (1)
pick-up b5 (1)
stack b5 b18 (1)
unstack b22 b34 (1)
put-down b22 (1)
unstack b34 b30 (1)
put-down b34 (1)
pick-up b22 (1)
stack b22 b34 (1)
unstack b5 b18 (1)
put-down b5 (1)
pick-up b18 (1)
stack b18 b22 (1)
pick-up b5 (1)
stack b5 b18 (1)
unstack b30 b28 (1)
put-down b30 (1)
unstack b28 b16 (1)
put-down b28 (1)
pick-up b30 (1)
stack b30 b28 (1)
unstack b16 b15 (1)
put-down b16 (1)
unstack b15 b9 (1)
put-down b15 (1)
unstack b9 b2 (1)
stack b9 b8 (1)
pick-up b15 (1)
stack b15 b9 (1)
pick-up b16 (1)
stack b16 b15 (1)
unstack b30 b28 (1)
put-down b30 (1)
pick-up b28 (1)
stack b28 b16 (1)
pick-up b30 (1)
stack b30 b28 (1)
unstack b5 b18 (1)
put-down b5 (1)
unstack b18 b22 (1)
put-down b18 (1)
pick-up b5 (1)
stack b5 b18 (1)
unstack b22 b34 (1)
put-down b22 (1)
pick-up b34 (1)
stack b34 b30 (1)
pick-up b22 (1)
stack b22 b34 (1)
unstack b5 b18 (1)
put-down b5 (1)
pick-up b18 (1)
stack b18 b22 (1)
pick-up b5 (1)
stack b5 b18 (1)
unstack b17 b1 (1)
put-down b17 (1)
unstack b1 b26 (1)
put-down b1 (1)
pick-up b17 (1)
stack b17 b1 (1)
unstack b26 b13 (1)
put-down b26 (1)
unstack b13 b6 (1)
put-down b13 (1)
pick-up b26 (1)
stack b26 b13 (1)
unstack b17 b1 (1)
put-down b17 (1)
pick-up b1 (1)
stack b1 b26 (1)
pick-up b17 (1)
stack b17 b1 (1)
unstack b6 b19 (1)
put-down b6 (1)
unstack b19 b12 (1)
put-down b19 (1)
pick-up b6 (1)
stack b6 b19 (1)
unstack b12 b14 (1)
put-down b12 (1)
pick-up b14 (1)
stack b14 b2 (1)
pick-up b12 (1)
stack b12 b14 (1)
unstack b6 b19 (1)
put-down b6 (1)
pick-up b19 (1)
stack b19 b12 (1)
pick-up b6 (1)
stack b6 b19 (1)
unstack b17 b1 (1)
put-down b17 (1)
unstack b1 b26 (1)
put-down b1 (1)
pick-up b17 (1)
stack b17 b1 (1)
unstack b26 b13 (1)
put-down b26 (1)
pick-up b13 (1)
stack b13 b6 (1)
pick-up b26 (1)
stack b26 b13 (1)
unstack b17 b1 (1)
put-down b17 (1)
pick-up b1 (1)
stack b1 b26 (1)
pick-up b17 (1)
stack b17 b1 (1)
[t=0.174799s, 29640 KB] Plan length: 260 step(s).
[t=0.174799s, 29640 KB] Plan cost: 260
[t=0.174799s, 29640 KB] Expanded 2219 state(s).
[t=0.174799s, 29640 KB] Reopened 0 state(s).
[t=0.174799s, 29640 KB] Evaluated 2220 state(s).
[t=0.174799s, 29640 KB] Evaluations: 4440
[t=0.174799s, 29640 KB] Generated 22379 state(s).
[t=0.174799s, 29640 KB] Dead ends: 0 state(s).
[t=0.174799s, 29640 KB] Number of registered states: 2220
[t=0.174799s, 29640 KB] Int hash set load factor: 2220/4096 = 0.541992
[t=0.174799s, 29640 KB] Int hash set resizes: 12
[t=0.174799s, 29640 KB] Search time: 0.12207s
[t=0.174799s, 29640 KB] Total time: 0.174799s
Solution found.
Peak memory: 29640 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.44s
