INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_34/bws_problem_34_50.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.000s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.023s wall-clock]
3708 relevant atoms
2482 auxiliary atoms
6190 final queue length
10888 total queue pushes
Completing instantiation... [0.040s CPU, 0.044s wall-clock]
Instantiating: [0.070s CPU, 0.069s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.002s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.001s wall-clock]
Choosing groups...
35 uncovered facts
Choosing groups: [0.000s CPU, 0.002s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.010s CPU, 0.013s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.001s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.001s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.002s wall-clock]
Translating task: [0.060s CPU, 0.058s wall-clock]
3434 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
68 propositions removed
Detecting unreachable propositions: [0.030s CPU, 0.028s wall-clock]
Reordering and filtering variables...
69 of 69 variables necessary.
35 of 69 mutex groups necessary.
2312 of 2312 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.015s wall-clock]
Translator variables: 69
Translator derived variables: 0
Translator facts: 1260
Translator goal facts: 29
Translator mutex groups: 35
Translator total mutex groups size: 1225
Translator operators: 2312
Translator axioms: 0
Translator task size: 19821
Translator peak memory: 44440 KB
Writing output... [0.010s CPU, 0.012s wall-clock]
Done! [0.200s CPU, 0.202s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=3.994e-05s, 24488 KB] reading input...
[t=0.0073311s, 27204 KB] done reading input!
[t=0.00860988s, 27600 KB] Initializing landmark count heuristic...
[t=0.00865467s, 27600 KB] Generating landmark graph...
[t=0.00880274s, 27732 KB] Building a landmark graph with reasonable orders.
[t=0.00896274s, 27864 KB] Initializing Exploration...
[t=0.00964694s, 28516 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0476343s, 29704 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0477935s, 29704 KB] Landmarks generation time: 0.0390103s
[t=0.0478319s, 29704 KB] Discovered 155 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0478636s, 29704 KB] 1003 edges
[t=0.0478753s, 29704 KB] approx. reasonable orders
[t=0.0599011s, 29704 KB] approx. obedient reasonable orders
[t=0.0609552s, 29704 KB] Removed 4 reasonable or obedient reasonable orders
[t=0.0609777s, 29704 KB] Landmarks generation time: 0.0523212s
[t=0.0609893s, 29704 KB] Discovered 155 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.060998s, 29704 KB] 1159 edges
[t=0.0610064s, 29704 KB] Landmark graph generation time: 0.0523586s
[t=0.0610148s, 29704 KB] Landmark graph contains 155 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0610227s, 29704 KB] Landmark graph contains 1159 orderings.
[t=0.0617782s, 29704 KB] Simplifying 9180 unary operators... done! [6936 unary operators]
[t=0.0643328s, 29704 KB] time to simplify: 0.00258163s
[t=0.064533s, 29704 KB] Initializing additive heuristic...
[t=0.0645583s, 29704 KB] Initializing FF heuristic...
[t=0.0646488s, 29704 KB] Building successor generator...done!
[t=0.0651118s, 29704 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0651242s, 29704 KB] time for successor generation creation: 0.000429568s
[t=0.0651553s, 29704 KB] Variables: 69
[t=0.0651645s, 29704 KB] FactPairs: 1260
[t=0.0651737s, 29704 KB] Bytes per state: 32
[t=0.0653733s, 29704 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0654144s, 29704 KB] 69 initial landmarks, 29 goal landmarks
[t=0.0655203s, 29704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 86
[t=0.0655313s, 29704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 63
[t=0.0655406s, 29704 KB] g=0, 1 evaluated, 0 expanded
[t=0.0655571s, 29704 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 86
[t=0.0655673s, 29704 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 63
[t=0.0658263s, 29704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 85
[t=0.0658438s, 29704 KB] g=1, 5 evaluated, 4 expanded
[t=0.0661837s, 29704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 62
[t=0.0661972s, 29704 KB] g=2, 11 evaluated, 10 expanded
[t=0.0665891s, 29704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 84
[t=0.0666043s, 29704 KB] g=3, 18 evaluated, 17 expanded
[t=0.0669326s, 29704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 61
[t=0.066948s, 29704 KB] g=4, 24 evaluated, 23 expanded
[t=0.0672218s, 29704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 83
[t=0.0672345s, 29704 KB] g=5, 29 evaluated, 28 expanded
[t=0.0678877s, 29704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 82
[t=0.067915s, 29704 KB] g=8, 41 evaluated, 40 expanded
[t=0.0680944s, 29704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 81
[t=0.0681068s, 29704 KB] g=9, 44 evaluated, 43 expanded
[t=0.0683377s, 29704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 60
[t=0.068353s, 29704 KB] g=8, 48 evaluated, 47 expanded
[t=0.0691919s, 29704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 80
[t=0.0692053s, 29704 KB] g=12, 64 evaluated, 63 expanded
[t=0.0694426s, 29704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 58
[t=0.0694541s, 29704 KB] g=10, 68 evaluated, 67 expanded
[t=0.0701914s, 29704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 79
[t=0.070207s, 29704 KB] g=12, 81 evaluated, 80 expanded
[t=0.070341s, 29704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 78
[t=0.070352s, 29704 KB] g=13, 83 evaluated, 82 expanded
[t=0.0705314s, 29704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 57
[t=0.0705438s, 29704 KB] g=12, 86 evaluated, 85 expanded
[t=0.0713744s, 29704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 77
[t=0.0713888s, 29704 KB] g=16, 101 evaluated, 100 expanded
[t=0.0714589s, 29704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 56
[t=0.071469s, 29704 KB] g=14, 102 evaluated, 101 expanded
[t=0.0723806s, 29704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 55
[t=0.0724125s, 29704 KB] g=16, 118 evaluated, 117 expanded
[t=0.0726523s, 29704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 76
[t=0.0726627s, 29704 KB] g=18, 122 evaluated, 121 expanded
[t=0.0735422s, 29704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 75
[t=0.073553s, 29704 KB] g=19, 138 evaluated, 137 expanded
[t=0.0746301s, 29704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 54
[t=0.074643s, 29704 KB] g=22, 158 evaluated, 157 expanded
[t=0.0748642s, 29704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 74
[t=0.0748744s, 29704 KB] g=22, 162 evaluated, 161 expanded
[t=0.0762374s, 29704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 73
[t=0.0762488s, 29704 KB] g=24, 188 evaluated, 187 expanded
[t=0.0775281s, 29704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 72
[t=0.077543s, 29704 KB] g=26, 211 evaluated, 210 expanded
[t=0.0785574s, 29704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 53
[t=0.0785714s, 29704 KB] g=30, 230 evaluated, 229 expanded
[t=0.0790946s, 29704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 71
[t=0.0791047s, 29704 KB] g=28, 240 evaluated, 239 expanded
[t=0.079473s, 29704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 70
[t=0.0794826s, 29704 KB] g=29, 247 evaluated, 246 expanded
[t=0.080902s, 29704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 69
[t=0.0809144s, 29704 KB] g=32, 274 evaluated, 273 expanded
[t=0.0831661s, 29704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 68
[t=0.083191s, 29704 KB] g=34, 316 evaluated, 315 expanded
[t=0.0852117s, 29704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 66
[t=0.0852372s, 29704 KB] g=36, 353 evaluated, 352 expanded
[t=0.0867426s, 29704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 63
[t=0.0867871s, 29704 KB] g=38, 380 evaluated, 379 expanded
[t=0.0879654s, 29704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 62
[t=0.0879867s, 29704 KB] g=40, 401 evaluated, 400 expanded
[t=0.0898084s, 29704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 61
[t=0.089825s, 29704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 51
[t=0.0898348s, 29704 KB] g=42, 434 evaluated, 433 expanded
[t=0.0908231s, 29704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 60
[t=0.0908381s, 29704 KB] g=44, 452 evaluated, 451 expanded
[t=0.0909068s, 29704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 50
[t=0.0909168s, 29704 KB] g=44, 453 evaluated, 452 expanded
[t=0.0926298s, 29704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 49
[t=0.092648s, 29704 KB] g=46, 485 evaluated, 484 expanded
[t=0.0928835s, 29704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.0928945s, 29704 KB] g=47, 489 evaluated, 488 expanded
[t=0.0942633s, 29704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 48
[t=0.0942773s, 29704 KB] g=48, 514 evaluated, 513 expanded
[t=0.0945014s, 29704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 58
[t=0.0945115s, 29704 KB] g=50, 518 evaluated, 517 expanded
[t=0.0958714s, 29704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 46
[t=0.095883s, 29704 KB] g=50, 544 evaluated, 543 expanded
[t=0.0962239s, 29704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0962345s, 29704 KB] g=52, 550 evaluated, 549 expanded
[t=0.0974853s, 29704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0975126s, 29704 KB] g=52, 573 evaluated, 572 expanded
[t=0.0981987s, 29704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0982199s, 29704 KB] g=54, 585 evaluated, 584 expanded
[t=0.099007s, 29704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.0990257s, 29704 KB] g=54, 599 evaluated, 598 expanded
[t=0.100106s, 29704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.100118s, 29704 KB] g=56, 618 evaluated, 617 expanded
[t=0.102686s, 29704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.102723s, 29704 KB] g=58, 663 evaluated, 662 expanded
[t=0.103577s, 29704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.103591s, 29704 KB] g=58, 678 evaluated, 677 expanded
[t=0.10473s, 29704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.104741s, 29704 KB] g=60, 699 evaluated, 698 expanded
[t=0.105458s, 29704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.105471s, 29704 KB] g=60, 712 evaluated, 711 expanded
[t=0.107721s, 29704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.107738s, 29704 KB] g=62, 753 evaluated, 752 expanded
[t=0.109326s, 29704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.109339s, 29704 KB] g=64, 782 evaluated, 781 expanded
[t=0.1118s, 29704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.111816s, 29704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.111825s, 29704 KB] g=66, 828 evaluated, 827 expanded
[t=0.112558s, 29704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.112571s, 29704 KB] g=68, 842 evaluated, 841 expanded
[t=0.112745s, 29704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.112754s, 29704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.112763s, 29704 KB] g=68, 845 evaluated, 844 expanded
[t=0.11345s, 29704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.11346s, 29704 KB] g=70, 858 evaluated, 857 expanded
[t=0.114421s, 29704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.114434s, 29704 KB] g=72, 875 evaluated, 874 expanded
[t=0.115051s, 29704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.115064s, 29704 KB] g=74, 886 evaluated, 885 expanded
[t=0.115967s, 29704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.115979s, 29704 KB] g=76, 903 evaluated, 902 expanded
[t=0.1171s, 29704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.117125s, 29704 KB] g=78, 924 evaluated, 923 expanded
[t=0.119298s, 29704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.119323s, 29704 KB] g=80, 964 evaluated, 963 expanded
[t=0.120339s, 29704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.120352s, 29704 KB] g=82, 983 evaluated, 982 expanded
[t=0.126169s, 29704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.126194s, 29704 KB] g=88, 1092 evaluated, 1091 expanded
[t=0.130011s, 29704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.130037s, 29704 KB] g=94, 1165 evaluated, 1164 expanded
[t=0.154524s, 29704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.154573s, 29704 KB] g=112, 1628 evaluated, 1627 expanded
[t=0.170557s, 29704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.170673s, 29704 KB] g=130, 1926 evaluated, 1925 expanded
[t=0.188538s, 29704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.188604s, 29704 KB] g=148, 2253 evaluated, 2252 expanded
[t=0.190985s, 29704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.191s, 29704 KB] g=152, 2297 evaluated, 2296 expanded
[t=0.191609s, 29704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.191623s, 29704 KB] g=154, 2308 evaluated, 2307 expanded
[t=0.192056s, 29704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.192067s, 29704 KB] g=156, 2316 evaluated, 2315 expanded
[t=0.192524s, 29704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.192537s, 29704 KB] g=158, 2324 evaluated, 2323 expanded
[t=0.192978s, 29704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.192989s, 29704 KB] g=160, 2332 evaluated, 2331 expanded
[t=0.194264s, 29704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.194278s, 29704 KB] g=166, 2356 evaluated, 2355 expanded
[t=0.194787s, 29704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.194798s, 29704 KB] g=168, 2366 evaluated, 2365 expanded
[t=0.194908s, 29704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.194917s, 29704 KB] g=169, 2368 evaluated, 2367 expanded
[t=0.194976s, 29704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.194985s, 29704 KB] g=170, 2369 evaluated, 2368 expanded
[t=0.195671s, 29704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.195681s, 29704 KB] g=172, 2383 evaluated, 2382 expanded
[t=0.195987s, 29704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.195997s, 29704 KB] g=173, 2389 evaluated, 2388 expanded
[t=0.196116s, 29704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.196131s, 29704 KB] g=168, 2391 evaluated, 2390 expanded
[t=0.196189s, 29704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.196208s, 29704 KB] g=174, 2392 evaluated, 2391 expanded
[t=0.196981s, 29704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.196992s, 29704 KB] g=176, 2408 evaluated, 2407 expanded
[t=0.19715s, 29704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.197159s, 29704 KB] g=172, 2411 evaluated, 2410 expanded
[t=0.197447s, 29704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.197459s, 29704 KB] g=174, 2417 evaluated, 2416 expanded
[t=0.197879s, 29704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.197897s, 29704 KB] g=178, 2426 evaluated, 2425 expanded
[t=0.198954s, 29704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.19897s, 29704 KB] g=180, 2449 evaluated, 2448 expanded
[t=0.25448s, 30064 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.254596s, 30064 KB] g=220, 3795 evaluated, 3794 expanded
[t=0.257031s, 30064 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.257059s, 30064 KB] g=228, 3858 evaluated, 3857 expanded
[t=0.257319s, 30064 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.257329s, 30064 KB] g=230, 3864 evaluated, 3863 expanded
[t=0.260412s, 30064 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.260444s, 30064 KB] g=246, 3949 evaluated, 3948 expanded
[t=0.261208s, 30196 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.261225s, 30196 KB] g=254, 3972 evaluated, 3971 expanded
[t=0.261392s, 30196 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.26142s, 30196 KB] g=254, 3976 evaluated, 3975 expanded
[t=0.261489s, 30196 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.2615s, 30196 KB] g=255, 3978 evaluated, 3977 expanded
[t=0.26156s, 30196 KB] Solution found!
[t=0.261583s, 30196 KB] Actual search time: 0.196166s
unstack b2 b32 (1)
put-down b2 (1)
unstack b32 b27 (1)
put-down b32 (1)
unstack b24 b28 (1)
put-down b24 (1)
unstack b28 b4 (1)
put-down b28 (1)
pick-up b29 (1)
stack b29 b2 (1)
unstack b11 b22 (1)
put-down b11 (1)
unstack b22 b34 (1)
put-down b22 (1)
unstack b27 b16 (1)
put-down b27 (1)
unstack b34 b8 (1)
put-down b34 (1)
unstack b8 b1 (1)
put-down b8 (1)
unstack b4 b5 (1)
put-down b4 (1)
unstack b5 b26 (1)
put-down b5 (1)
unstack b26 b7 (1)
put-down b26 (1)
unstack b7 b14 (1)
put-down b7 (1)
unstack b14 b21 (1)
put-down b14 (1)
unstack b21 b10 (1)
put-down b21 (1)
unstack b10 b3 (1)
put-down b10 (1)
unstack b3 b12 (1)
stack b3 b16 (1)
unstack b12 b13 (1)
stack b12 b29 (1)
unstack b13 b33 (1)
stack b13 b6 (1)
pick-up b11 (1)
stack b11 b10 (1)
pick-up b14 (1)
stack b14 b4 (1)
pick-up b20 (1)
stack b20 b3 (1)
unstack b14 b4 (1)
put-down b14 (1)
unstack b13 b6 (1)
put-down b13 (1)
unstack b33 b18 (1)
stack b33 b12 (1)
unstack b18 b9 (1)
put-down b18 (1)
unstack b9 b17 (1)
put-down b9 (1)
pick-up b26 (1)
stack b26 b33 (1)
pick-up b34 (1)
stack b34 b11 (1)
pick-up b4 (1)
stack b4 b20 (1)
pick-up b14 (1)
stack b14 b4 (1)
pick-up b6 (1)
stack b6 b26 (1)
pick-up b13 (1)
stack b13 b6 (1)
unstack b1 b19 (1)
stack b1 b9 (1)
pick-up b17 (1)
stack b17 b5 (1)
pick-up b18 (1)
stack b18 b7 (1)
unstack b19 b25 (1)
stack b19 b21 (1)
unstack b25 b30 (1)
stack b25 b18 (1)
pick-up b24 (1)
stack b24 b25 (1)
pick-up b30 (1)
stack b30 b13 (1)
unstack b1 b9 (1)
put-down b1 (1)
pick-up b9 (1)
stack b9 b19 (1)
pick-up b1 (1)
stack b1 b9 (1)
unstack b17 b5 (1)
put-down b17 (1)
pick-up b5 (1)
stack b5 b27 (1)
pick-up b17 (1)
stack b17 b5 (1)
unstack b1 b9 (1)
put-down b1 (1)
unstack b9 b19 (1)
put-down b9 (1)
pick-up b1 (1)
stack b1 b9 (1)
unstack b19 b21 (1)
put-down b19 (1)
pick-up b21 (1)
stack b21 b17 (1)
pick-up b19 (1)
stack b19 b21 (1)
unstack b1 b9 (1)
put-down b1 (1)
pick-up b9 (1)
stack b9 b19 (1)
pick-up b1 (1)
stack b1 b9 (1)
unstack b24 b25 (1)
put-down b24 (1)
unstack b25 b18 (1)
put-down b25 (1)
pick-up b24 (1)
stack b24 b25 (1)
unstack b18 b7 (1)
put-down b18 (1)
pick-up b7 (1)
stack b7 b1 (1)
pick-up b18 (1)
stack b18 b7 (1)
unstack b24 b25 (1)
put-down b24 (1)
pick-up b25 (1)
stack b25 b18 (1)
pick-up b24 (1)
stack b24 b25 (1)
unstack b14 b4 (1)
put-down b14 (1)
unstack b4 b20 (1)
put-down b4 (1)
unstack b20 b3 (1)
put-down b20 (1)
pick-up b4 (1)
stack b4 b20 (1)
pick-up b14 (1)
stack b14 b4 (1)
unstack b3 b16 (1)
put-down b3 (1)
unstack b16 b23 (1)
put-down b16 (1)
pick-up b22 (1)
stack b22 b23 (1)
pick-up b3 (1)
stack b3 b16 (1)
unstack b22 b23 (1)
put-down b22 (1)
unstack b23 b31 (1)
stack b23 b34 (1)
pick-up b22 (1)
stack b22 b23 (1)
unstack b31 b15 (1)
stack b31 b28 (1)
pick-up b15 (1)
stack b15 b30 (1)
pick-up b8 (1)
stack b8 b31 (1)
unstack b14 b4 (1)
put-down b14 (1)
unstack b4 b20 (1)
put-down b4 (1)
pick-up b14 (1)
stack b14 b4 (1)
pick-up b20 (1)
stack b20 b3 (1)
unstack b14 b4 (1)
put-down b14 (1)
pick-up b4 (1)
stack b4 b20 (1)
pick-up b14 (1)
stack b14 b4 (1)
unstack b24 b25 (1)
put-down b24 (1)
unstack b25 b18 (1)
put-down b25 (1)
pick-up b24 (1)
stack b24 b25 (1)
unstack b18 b7 (1)
put-down b18 (1)
unstack b7 b1 (1)
put-down b7 (1)
unstack b1 b9 (1)
put-down b1 (1)
pick-up b7 (1)
stack b7 b1 (1)
pick-up b18 (1)
stack b18 b7 (1)
unstack b24 b25 (1)
put-down b24 (1)
pick-up b25 (1)
stack b25 b18 (1)
pick-up b24 (1)
stack b24 b25 (1)
unstack b9 b19 (1)
put-down b9 (1)
unstack b19 b21 (1)
put-down b19 (1)
unstack b21 b17 (1)
put-down b21 (1)
pick-up b19 (1)
stack b19 b21 (1)
pick-up b9 (1)
stack b9 b19 (1)
unstack b17 b5 (1)
put-down b17 (1)
unstack b5 b27 (1)
put-down b5 (1)
pick-up b17 (1)
stack b17 b5 (1)
pick-up b27 (1)
stack b27 b15 (1)
unstack b17 b5 (1)
put-down b17 (1)
pick-up b5 (1)
stack b5 b27 (1)
pick-up b17 (1)
stack b17 b5 (1)
unstack b9 b19 (1)
put-down b9 (1)
unstack b19 b21 (1)
put-down b19 (1)
pick-up b21 (1)
stack b21 b17 (1)
pick-up b19 (1)
stack b19 b21 (1)
pick-up b9 (1)
stack b9 b19 (1)
unstack b24 b25 (1)
put-down b24 (1)
unstack b25 b18 (1)
put-down b25 (1)
unstack b18 b7 (1)
put-down b18 (1)
pick-up b25 (1)
stack b25 b18 (1)
pick-up b24 (1)
stack b24 b25 (1)
unstack b7 b1 (1)
put-down b7 (1)
pick-up b1 (1)
stack b1 b9 (1)
pick-up b7 (1)
stack b7 b1 (1)
unstack b24 b25 (1)
put-down b24 (1)
unstack b25 b18 (1)
put-down b25 (1)
pick-up b18 (1)
stack b18 b7 (1)
pick-up b25 (1)
stack b25 b18 (1)
pick-up b24 (1)
stack b24 b25 (1)
[t=0.261595s, 30196 KB] Plan length: 256 step(s).
[t=0.261595s, 30196 KB] Plan cost: 256
[t=0.261595s, 30196 KB] Expanded 3979 state(s).
[t=0.261595s, 30196 KB] Reopened 0 state(s).
[t=0.261595s, 30196 KB] Evaluated 3980 state(s).
[t=0.261595s, 30196 KB] Evaluations: 7960
[t=0.261595s, 30196 KB] Generated 55678 state(s).
[t=0.261595s, 30196 KB] Dead ends: 0 state(s).
[t=0.261595s, 30196 KB] Number of registered states: 3980
[t=0.261595s, 30196 KB] Int hash set load factor: 3980/8192 = 0.48584
[t=0.261595s, 30196 KB] Int hash set resizes: 13
[t=0.261595s, 30196 KB] Search time: 0.196222s
[t=0.261595s, 30196 KB] Total time: 0.261595s
Solution found.
Peak memory: 30196 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.51s
