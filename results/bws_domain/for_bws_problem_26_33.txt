INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_26/bws_problem_26_33.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
2212 relevant atoms
1482 auxiliary atoms
3694 final queue length
6454 total queue pushes
Completing instantiation... [0.030s CPU, 0.022s wall-clock]
Instantiating: [0.040s CPU, 0.038s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
27 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.008s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.001s wall-clock]
Translating task: [0.040s CPU, 0.033s wall-clock]
2002 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
52 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.021s wall-clock]
Reordering and filtering variables...
53 of 53 variables necessary.
27 of 53 mutex groups necessary.
1352 of 1352 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.009s wall-clock]
Translator variables: 53
Translator derived variables: 0
Translator facts: 756
Translator goal facts: 20
Translator mutex groups: 27
Translator total mutex groups size: 729
Translator operators: 1352
Translator axioms: 0
Translator task size: 11620
Translator peak memory: 38900 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.120s CPU, 0.122s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=1.9732e-05s, 24488 KB] reading input...
[t=0.00413177s, 25744 KB] done reading input!
[t=0.00526693s, 26140 KB] Initializing landmark count heuristic...
[t=0.0053028s, 26140 KB] Generating landmark graph...
[t=0.00539138s, 26272 KB] Building a landmark graph with reasonable orders.
[t=0.00547024s, 26272 KB] Initializing Exploration...
[t=0.00584081s, 26680 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0224927s, 27208 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0225989s, 27208 KB] Landmarks generation time: 0.0172107s
[t=0.0226176s, 27208 KB] Discovered 113 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0226378s, 27208 KB] 528 edges
[t=0.0226515s, 27208 KB] approx. reasonable orders
[t=0.0256595s, 27208 KB] approx. obedient reasonable orders
[t=0.0257004s, 27208 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.025713s, 27208 KB] Landmarks generation time: 0.0204058s
[t=0.0257254s, 27208 KB] Discovered 113 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0257368s, 27208 KB] 574 edges
[t=0.025747s, 27208 KB] Landmark graph generation time: 0.0204531s
[t=0.0257577s, 27208 KB] Landmark graph contains 113 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0257676s, 27208 KB] Landmark graph contains 574 orderings.
[t=0.0261899s, 27208 KB] Simplifying 5356 unary operators... done! [4056 unary operators]
[t=0.0274428s, 27340 KB] time to simplify: 0.00133727s
[t=0.0276137s, 27340 KB] Initializing additive heuristic...
[t=0.0276287s, 27340 KB] Initializing FF heuristic...
[t=0.0276909s, 27340 KB] Building successor generator...done!
[t=0.0279724s, 27340 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0279828s, 27340 KB] time for successor generation creation: 0.000247779s
[t=0.0280009s, 27340 KB] Variables: 53
[t=0.02801s, 27340 KB] FactPairs: 756
[t=0.0280205s, 27340 KB] Bytes per state: 20
[t=0.028137s, 27340 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0281855s, 27340 KB] 53 initial landmarks, 20 goal landmarks
[t=0.0282634s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 60
[t=0.0282742s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0282861s, 27340 KB] g=0, 1 evaluated, 0 expanded
[t=0.0283062s, 27340 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 60
[t=0.028316s, 27340 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0284082s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.0284209s, 27340 KB] g=1, 3 evaluated, 2 expanded
[t=0.0286145s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.0286268s, 27340 KB] g=2, 8 evaluated, 7 expanded
[t=0.0287083s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 58
[t=0.0287187s, 27340 KB] g=3, 10 evaluated, 9 expanded
[t=0.0290261s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 57
[t=0.0290369s, 27340 KB] g=6, 19 evaluated, 18 expanded
[t=0.0292073s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0292357s, 27340 KB] g=4, 24 evaluated, 23 expanded
[t=0.0294722s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.029483s, 27340 KB] g=6, 31 evaluated, 30 expanded
[t=0.0295288s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0295399s, 27340 KB] g=8, 32 evaluated, 31 expanded
[t=0.0299117s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0299256s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0299371s, 27340 KB] g=8, 43 evaluated, 42 expanded
[t=0.0300187s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0300287s, 27340 KB] g=9, 45 evaluated, 44 expanded
[t=0.030206s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0302167s, 27340 KB] g=10, 50 evaluated, 49 expanded
[t=0.0302938s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0303162s, 27340 KB] g=11, 52 evaluated, 51 expanded
[t=0.0306265s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0306367s, 27340 KB] g=14, 61 evaluated, 60 expanded
[t=0.0310396s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0310499s, 27340 KB] g=16, 73 evaluated, 72 expanded
[t=0.0314558s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0314662s, 27340 KB] g=18, 85 evaluated, 84 expanded
[t=0.0319928s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0320041s, 27340 KB] g=20, 101 evaluated, 100 expanded
[t=0.0322754s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0322856s, 27340 KB] g=16, 109 evaluated, 108 expanded
[t=0.0323335s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0323438s, 27340 KB] g=17, 110 evaluated, 109 expanded
[t=0.0327224s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0327355s, 27340 KB] g=20, 121 evaluated, 120 expanded
[t=0.0328851s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0328959s, 27340 KB] g=18, 125 evaluated, 124 expanded
[t=0.0332495s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0332601s, 27340 KB] g=22, 135 evaluated, 134 expanded
[t=0.0337327s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.033743s, 27340 KB] g=24, 149 evaluated, 148 expanded
[t=0.0342781s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0342889s, 27340 KB] g=26, 165 evaluated, 164 expanded
[t=0.0349164s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0349267s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0349375s, 27340 KB] g=28, 184 evaluated, 183 expanded
[t=0.03524s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0352504s, 27340 KB] g=30, 193 evaluated, 192 expanded
[t=0.0357428s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0357532s, 27340 KB] g=32, 208 evaluated, 207 expanded
[t=0.0358618s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0358716s, 27340 KB] g=32, 211 evaluated, 210 expanded
[t=0.0364468s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.036457s, 27340 KB] g=34, 229 evaluated, 228 expanded
[t=0.036794s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.036806s, 27340 KB] g=36, 238 evaluated, 237 expanded
[t=0.0371265s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0371377s, 27340 KB] g=38, 248 evaluated, 247 expanded
[t=0.0375482s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0375583s, 27340 KB] g=40, 260 evaluated, 259 expanded
[t=0.0376992s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0377088s, 27340 KB] g=37, 264 evaluated, 263 expanded
[t=0.038299s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0383135s, 27340 KB] g=40, 281 evaluated, 280 expanded
[t=0.0390418s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0390521s, 27340 KB] g=42, 303 evaluated, 302 expanded
[t=0.039669s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0396792s, 27340 KB] g=43, 322 evaluated, 321 expanded
[t=0.0400817s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0400923s, 27340 KB] g=46, 334 evaluated, 333 expanded
[t=0.0405283s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0405491s, 27340 KB] g=46, 347 evaluated, 346 expanded
[t=0.04137s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0413806s, 27340 KB] g=48, 372 evaluated, 371 expanded
[t=0.0419402s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.041951s, 27340 KB] g=50, 389 evaluated, 388 expanded
[t=0.0423245s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0423354s, 27340 KB] g=50, 400 evaluated, 399 expanded
[t=0.0425766s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0425868s, 27340 KB] g=52, 407 evaluated, 406 expanded
[t=0.043144s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0431548s, 27340 KB] g=54, 424 evaluated, 423 expanded
[t=0.0435266s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0435368s, 27340 KB] g=52, 435 evaluated, 434 expanded
[t=0.0435872s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0435973s, 27340 KB] g=56, 436 evaluated, 435 expanded
[t=0.0440722s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0440837s, 27340 KB] g=58, 450 evaluated, 449 expanded
[t=0.0444062s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0444167s, 27340 KB] g=54, 459 evaluated, 458 expanded
[t=0.0445372s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.044565s, 27340 KB] g=60, 462 evaluated, 461 expanded
[t=0.0451098s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.045124s, 27340 KB] g=62, 479 evaluated, 478 expanded
[t=0.0453936s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0454227s, 27340 KB] g=56, 487 evaluated, 486 expanded
[t=0.0459921s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.046011s, 27340 KB] g=66, 504 evaluated, 503 expanded
[t=0.0462094s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0462209s, 27340 KB] g=58, 510 evaluated, 509 expanded
[t=0.0464221s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0464408s, 27340 KB] g=68, 516 evaluated, 515 expanded
[t=0.0466989s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0467098s, 27340 KB] g=60, 524 evaluated, 523 expanded
[t=0.0471898s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0472021s, 27340 KB] g=62, 539 evaluated, 538 expanded
[t=0.047248s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.047265s, 27340 KB] g=70, 540 evaluated, 539 expanded
[t=0.047595s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.047607s, 27340 KB] g=64, 550 evaluated, 549 expanded
[t=0.0478773s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0478884s, 27340 KB] g=66, 558 evaluated, 557 expanded
[t=0.0482112s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0482222s, 27340 KB] g=70, 567 evaluated, 566 expanded
[t=0.0483981s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0484085s, 27340 KB] g=72, 572 evaluated, 571 expanded
[t=0.048497s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0485087s, 27340 KB] g=72, 574 evaluated, 573 expanded
[t=0.0487565s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.048767s, 27340 KB] g=74, 581 evaluated, 580 expanded
[t=0.0489133s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0489233s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0489338s, 27340 KB] g=76, 585 evaluated, 584 expanded
[t=0.0490999s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.04911s, 27340 KB] g=78, 590 evaluated, 589 expanded
[t=0.0491688s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0491788s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0491902s, 27340 KB] g=78, 591 evaluated, 590 expanded
[t=0.0493361s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0493464s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0493577s, 27340 KB] g=80, 595 evaluated, 594 expanded
[t=0.0496493s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0496604s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0496709s, 27340 KB] g=84, 604 evaluated, 603 expanded
[t=0.0497751s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0497855s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0497956s, 27340 KB] g=86, 607 evaluated, 606 expanded
[t=0.0524194s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0524508s, 27340 KB] g=116, 704 evaluated, 703 expanded
[t=0.052691s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0527027s, 27340 KB] g=120, 713 evaluated, 712 expanded
[t=0.0527902s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0528008s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0528127s, 27340 KB] g=122, 716 evaluated, 715 expanded
[t=0.0531523s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0531627s, 27340 KB] g=134, 732 evaluated, 731 expanded
[t=0.0532459s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0532564s, 27340 KB] g=138, 736 evaluated, 735 expanded
[t=0.0532804s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0532901s, 27340 KB] g=139, 737 evaluated, 736 expanded
[t=0.0533102s, 27340 KB] Solution found!
[t=0.0533247s, 27340 KB] Actual search time: 0.0251358s
unstack b13 b14 (1)
put-down b13 (1)
unstack b22 b8 (1)
stack b22 b14 (1)
unstack b8 b9 (1)
put-down b8 (1)
unstack b23 b16 (1)
stack b23 b13 (1)
unstack b16 b3 (1)
put-down b16 (1)
unstack b9 b19 (1)
put-down b9 (1)
unstack b19 b6 (1)
put-down b19 (1)
unstack b6 b24 (1)
stack b6 b9 (1)
unstack b12 b18 (1)
put-down b12 (1)
unstack b22 b14 (1)
put-down b22 (1)
unstack b14 b10 (1)
put-down b14 (1)
unstack b24 b26 (1)
put-down b24 (1)
pick-up b18 (1)
stack b18 b26 (1)
pick-up b10 (1)
stack b10 b23 (1)
unstack b18 b26 (1)
put-down b18 (1)
unstack b26 b20 (1)
put-down b26 (1)
pick-up b18 (1)
stack b18 b26 (1)
unstack b3 b4 (1)
put-down b3 (1)
unstack b4 b1 (1)
put-down b4 (1)
unstack b1 b21 (1)
stack b1 b16 (1)
unstack b21 b7 (1)
put-down b21 (1)
unstack b7 b17 (1)
put-down b7 (1)
unstack b17 b5 (1)
stack b17 b10 (1)
unstack b5 b15 (1)
stack b5 b6 (1)
pick-up b7 (1)
stack b7 b15 (1)
pick-up b21 (1)
stack b21 b5 (1)
pick-up b14 (1)
stack b14 b21 (1)
pick-up b22 (1)
stack b22 b14 (1)
pick-up b20 (1)
stack b20 b22 (1)
pick-up b12 (1)
stack b12 b20 (1)
pick-up b24 (1)
stack b24 b1 (1)
pick-up b19 (1)
stack b19 b24 (1)
pick-up b3 (1)
stack b3 b4 (1)
unstack b7 b15 (1)
put-down b7 (1)
unstack b15 b11 (1)
put-down b15 (1)
pick-up b7 (1)
stack b7 b15 (1)
unstack b11 b25 (1)
put-down b11 (1)
unstack b25 b2 (1)
put-down b25 (1)
pick-up b2 (1)
stack b2 b19 (1)
pick-up b11 (1)
stack b11 b2 (1)
unstack b3 b4 (1)
put-down b3 (1)
pick-up b4 (1)
stack b4 b11 (1)
pick-up b3 (1)
stack b3 b4 (1)
unstack b12 b20 (1)
put-down b12 (1)
unstack b20 b22 (1)
put-down b20 (1)
pick-up b12 (1)
stack b12 b20 (1)
unstack b22 b14 (1)
put-down b22 (1)
unstack b14 b21 (1)
put-down b14 (1)
pick-up b22 (1)
stack b22 b14 (1)
unstack b12 b20 (1)
put-down b12 (1)
pick-up b20 (1)
stack b20 b22 (1)
pick-up b12 (1)
stack b12 b20 (1)
unstack b21 b5 (1)
put-down b21 (1)
unstack b5 b6 (1)
put-down b5 (1)
pick-up b21 (1)
stack b21 b5 (1)
unstack b6 b9 (1)
put-down b6 (1)
pick-up b9 (1)
stack b9 b17 (1)
pick-up b6 (1)
stack b6 b9 (1)
unstack b21 b5 (1)
put-down b21 (1)
pick-up b5 (1)
stack b5 b6 (1)
pick-up b21 (1)
stack b21 b5 (1)
unstack b12 b20 (1)
put-down b12 (1)
unstack b20 b22 (1)
put-down b20 (1)
pick-up b12 (1)
stack b12 b20 (1)
unstack b22 b14 (1)
put-down b22 (1)
pick-up b14 (1)
stack b14 b21 (1)
pick-up b22 (1)
stack b22 b14 (1)
unstack b12 b20 (1)
put-down b12 (1)
pick-up b20 (1)
stack b20 b22 (1)
pick-up b12 (1)
stack b12 b20 (1)
[t=0.0533405s, 27340 KB] Plan length: 140 step(s).
[t=0.0533405s, 27340 KB] Plan cost: 140
[t=0.0533405s, 27340 KB] Expanded 737 state(s).
[t=0.0533405s, 27340 KB] Reopened 0 state(s).
[t=0.0533405s, 27340 KB] Evaluated 738 state(s).
[t=0.0533405s, 27340 KB] Evaluations: 1476
[t=0.0533405s, 27340 KB] Generated 8190 state(s).
[t=0.0533405s, 27340 KB] Dead ends: 0 state(s).
[t=0.0533405s, 27340 KB] Number of registered states: 738
[t=0.0533405s, 27340 KB] Int hash set load factor: 738/1024 = 0.720703
[t=0.0533405s, 27340 KB] Int hash set resizes: 10
[t=0.0533405s, 27340 KB] Search time: 0.0252038s
[t=0.0533405s, 27340 KB] Total time: 0.0533405s
Solution found.
Peak memory: 27340 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.23s
