INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_26/bws_problem_26_98.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.017s wall-clock]
2212 relevant atoms
1482 auxiliary atoms
3694 final queue length
6455 total queue pushes
Completing instantiation... [0.040s CPU, 0.034s wall-clock]
Instantiating: [0.060s CPU, 0.054s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
27 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.008s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.010s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.001s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.002s wall-clock]
Translating task: [0.050s CPU, 0.049s wall-clock]
2002 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
52 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.025s wall-clock]
Reordering and filtering variables...
53 of 53 variables necessary.
27 of 53 mutex groups necessary.
1352 of 1352 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.009s wall-clock]
Translator variables: 53
Translator derived variables: 0
Translator facts: 756
Translator goal facts: 22
Translator mutex groups: 27
Translator total mutex groups size: 729
Translator operators: 1352
Translator axioms: 0
Translator task size: 11622
Translator peak memory: 38900 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.160s CPU, 0.156s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=1.7744e-05s, 24488 KB] reading input...
[t=0.00377311s, 25744 KB] done reading input!
[t=0.00500178s, 26140 KB] Initializing landmark count heuristic...
[t=0.00508866s, 26140 KB] Generating landmark graph...
[t=0.00518627s, 26272 KB] Building a landmark graph with reasonable orders.
[t=0.0052645s, 26272 KB] Initializing Exploration...
[t=0.00565771s, 26680 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0218213s, 27208 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0219631s, 27208 KB] Landmarks generation time: 0.0167776s
[t=0.0219791s, 27208 KB] Discovered 110 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0220041s, 27208 KB] 628 edges
[t=0.0220151s, 27208 KB] approx. reasonable orders
[t=0.0232095s, 27208 KB] approx. obedient reasonable orders
[t=0.0232507s, 27208 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0232612s, 27208 KB] Landmarks generation time: 0.0182121s
[t=0.023323s, 27208 KB] Discovered 110 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0233321s, 27208 KB] 643 edges
[t=0.0233553s, 27208 KB] Landmark graph generation time: 0.0182737s
[t=0.0233644s, 27208 KB] Landmark graph contains 110 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0233728s, 27208 KB] Landmark graph contains 643 orderings.
[t=0.0239247s, 27208 KB] Simplifying 5356 unary operators... done! [4056 unary operators]
[t=0.0253642s, 27340 KB] time to simplify: 0.00155193s
[t=0.025564s, 27340 KB] Initializing additive heuristic...
[t=0.0255853s, 27340 KB] Initializing FF heuristic...
[t=0.0256802s, 27340 KB] Building successor generator...done!
[t=0.0260243s, 27340 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0260347s, 27340 KB] time for successor generation creation: 0.000301316s
[t=0.0260625s, 27340 KB] Variables: 53
[t=0.0260712s, 27340 KB] FactPairs: 756
[t=0.02608s, 27340 KB] Bytes per state: 20
[t=0.0261958s, 27340 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0262313s, 27340 KB] 50 initial landmarks, 22 goal landmarks
[t=0.0262976s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 60
[t=0.0263075s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.0263162s, 27340 KB] g=0, 1 evaluated, 0 expanded
[t=0.0263312s, 27340 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 60
[t=0.0263401s, 27340 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.0265042s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.0265219s, 27340 KB] g=1, 5 evaluated, 4 expanded
[t=0.0266729s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0266831s, 27340 KB] g=2, 9 evaluated, 8 expanded
[t=0.0268893s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 58
[t=0.0269044s, 27340 KB] g=3, 15 evaluated, 14 expanded
[t=0.0271956s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 57
[t=0.0272109s, 27340 KB] g=5, 23 evaluated, 22 expanded
[t=0.0274888s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0275026s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0275113s, 27340 KB] g=6, 31 evaluated, 30 expanded
[t=0.0276861s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0276998s, 27340 KB] g=7, 36 evaluated, 35 expanded
[t=0.028086s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0280974s, 27340 KB] g=9, 48 evaluated, 47 expanded
[t=0.0282639s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0282724s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0282802s, 27340 KB] g=10, 53 evaluated, 52 expanded
[t=0.0285061s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0285146s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0285304s, 27340 KB] g=12, 60 evaluated, 59 expanded
[t=0.0287676s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0287763s, 27340 KB] g=14, 67 evaluated, 66 expanded
[t=0.0290153s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0290302s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0290416s, 27340 KB] g=16, 74 evaluated, 73 expanded
[t=0.0292768s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0292856s, 27340 KB] g=18, 81 evaluated, 80 expanded
[t=0.0293928s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0294016s, 27340 KB] g=18, 84 evaluated, 83 expanded
[t=0.0298207s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0298335s, 27340 KB] g=20, 95 evaluated, 94 expanded
[t=0.0301077s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0301181s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0301262s, 27340 KB] g=22, 103 evaluated, 102 expanded
[t=0.0303604s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0303692s, 27340 KB] g=24, 110 evaluated, 109 expanded
[t=0.030493s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.030502s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0305104s, 27340 KB] g=24, 113 evaluated, 112 expanded
[t=0.0307139s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0307228s, 27340 KB] g=26, 119 evaluated, 118 expanded
[t=0.0309554s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0309641s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.030972s, 27340 KB] g=28, 126 evaluated, 125 expanded
[t=0.031187s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0311973s, 27340 KB] g=29, 132 evaluated, 131 expanded
[t=0.0315398s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0315582s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0315669s, 27340 KB] g=32, 142 evaluated, 141 expanded
[t=0.0318519s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0318618s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0318704s, 27340 KB] g=34, 151 evaluated, 150 expanded
[t=0.0320924s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0321013s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0321095s, 27340 KB] g=36, 158 evaluated, 157 expanded
[t=0.0331973s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0332067s, 27340 KB] g=41, 194 evaluated, 193 expanded
[t=0.0334602s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0334708s, 27340 KB] g=40, 201 evaluated, 200 expanded
[t=0.0338342s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0338533s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0338633s, 27340 KB] g=42, 212 evaluated, 211 expanded
[t=0.0346487s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0346616s, 27340 KB] g=47, 237 evaluated, 236 expanded
[t=0.0353683s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0353801s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0353882s, 27340 KB] g=52, 259 evaluated, 258 expanded
[t=0.0360558s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0360722s, 27340 KB] g=55, 280 evaluated, 279 expanded
[t=0.0361497s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0361584s, 27340 KB] g=56, 282 evaluated, 281 expanded
[t=0.0363504s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0363591s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0363669s, 27340 KB] g=58, 288 evaluated, 287 expanded
[t=0.0365564s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0365659s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0365744s, 27340 KB] g=60, 294 evaluated, 293 expanded
[t=0.0368262s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0368352s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0368431s, 27340 KB] g=62, 301 evaluated, 300 expanded
[t=0.0370061s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0370143s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0370219s, 27340 KB] g=64, 306 evaluated, 305 expanded
[t=0.0374733s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0374818s, 27340 KB] g=68, 320 evaluated, 319 expanded
[t=0.0376138s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0376284s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0376361s, 27340 KB] g=70, 324 evaluated, 323 expanded
[t=0.0385207s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.038552s, 27340 KB] g=74, 350 evaluated, 349 expanded
[t=0.0386663s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0386756s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0386839s, 27340 KB] g=76, 353 evaluated, 352 expanded
[t=0.0426784s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0427319s, 27340 KB] g=94, 456 evaluated, 455 expanded
[t=0.0434s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0434298s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0434391s, 27340 KB] g=100, 475 evaluated, 474 expanded
[t=0.0450522s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0450839s, 27340 KB] g=102, 509 evaluated, 508 expanded
[t=0.0453197s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.045334s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0453441s, 27340 KB] g=104, 513 evaluated, 512 expanded
[t=0.0456497s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0456652s, 27340 KB] g=108, 522 evaluated, 521 expanded
[t=0.0457686s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0457775s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0457856s, 27340 KB] g=110, 525 evaluated, 524 expanded
[t=0.0495729s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0495946s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0496045s, 27340 KB] g=144, 663 evaluated, 662 expanded
[t=0.049814s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0498265s, 27340 KB] g=148, 672 evaluated, 671 expanded
[t=0.0499019s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0499122s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.049921s, 27340 KB] g=150, 675 evaluated, 674 expanded
[t=0.0502993s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0503224s, 27340 KB] g=162, 692 evaluated, 691 expanded
[t=0.0503981s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0504073s, 27340 KB] g=166, 696 evaluated, 695 expanded
[t=0.0504262s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0504345s, 27340 KB] g=167, 697 evaluated, 696 expanded
[t=0.0504524s, 27340 KB] Solution found!
[t=0.0504667s, 27340 KB] Actual search time: 0.0242327s
unstack b10 b6 (1)
put-down b10 (1)
unstack b24 b22 (1)
put-down b24 (1)
unstack b22 b2 (1)
stack b22 b26 (1)
unstack b6 b7 (1)
put-down b6 (1)
unstack b2 b20 (1)
stack b2 b7 (1)
unstack b20 b15 (1)
stack b20 b2 (1)
unstack b15 b19 (1)
put-down b15 (1)
unstack b19 b12 (1)
stack b19 b11 (1)
unstack b12 b18 (1)
put-down b12 (1)
unstack b18 b25 (1)
stack b18 b19 (1)
pick-up b15 (1)
stack b15 b18 (1)
pick-up b6 (1)
stack b6 b12 (1)
unstack b25 b21 (1)
put-down b25 (1)
unstack b21 b4 (1)
stack b21 b20 (1)
unstack b4 b13 (1)
put-down b4 (1)
unstack b13 b23 (1)
stack b13 b10 (1)
pick-up b23 (1)
stack b23 b16 (1)
pick-up b24 (1)
stack b24 b13 (1)
unstack b6 b12 (1)
put-down b6 (1)
pick-up b12 (1)
stack b12 b21 (1)
pick-up b6 (1)
stack b6 b12 (1)
unstack b23 b16 (1)
put-down b23 (1)
unstack b16 b1 (1)
put-down b16 (1)
unstack b1 b5 (1)
stack b1 b25 (1)
pick-up b16 (1)
stack b16 b1 (1)
pick-up b23 (1)
stack b23 b16 (1)
unstack b5 b17 (1)
put-down b5 (1)
unstack b17 b3 (1)
stack b17 b23 (1)
unstack b3 b14 (1)
stack b3 b15 (1)
unstack b14 b9 (1)
put-down b14 (1)
pick-up b4 (1)
stack b4 b9 (1)
pick-up b5 (1)
stack b5 b17 (1)
unstack b22 b26 (1)
put-down b22 (1)
pick-up b26 (1)
stack b26 b3 (1)
pick-up b22 (1)
stack b22 b26 (1)
unstack b4 b9 (1)
put-down b4 (1)
unstack b9 b8 (1)
stack b9 b22 (1)
pick-up b4 (1)
stack b4 b9 (1)
unstack b5 b17 (1)
put-down b5 (1)
unstack b17 b23 (1)
put-down b17 (1)
pick-up b5 (1)
stack b5 b17 (1)
unstack b23 b16 (1)
put-down b23 (1)
unstack b16 b1 (1)
put-down b16 (1)
unstack b1 b25 (1)
put-down b1 (1)
pick-up b16 (1)
stack b16 b1 (1)
pick-up b23 (1)
stack b23 b16 (1)
pick-up b25 (1)
stack b25 b14 (1)
unstack b23 b16 (1)
put-down b23 (1)
unstack b16 b1 (1)
put-down b16 (1)
pick-up b1 (1)
stack b1 b25 (1)
pick-up b16 (1)
stack b16 b1 (1)
pick-up b23 (1)
stack b23 b16 (1)
unstack b5 b17 (1)
put-down b5 (1)
pick-up b17 (1)
stack b17 b23 (1)
pick-up b5 (1)
stack b5 b17 (1)
unstack b4 b9 (1)
put-down b4 (1)
unstack b9 b22 (1)
put-down b9 (1)
pick-up b4 (1)
stack b4 b9 (1)
unstack b22 b26 (1)
put-down b22 (1)
unstack b26 b3 (1)
put-down b26 (1)
pick-up b22 (1)
stack b22 b26 (1)
unstack b4 b9 (1)
put-down b4 (1)
pick-up b9 (1)
stack b9 b22 (1)
pick-up b4 (1)
stack b4 b9 (1)
unstack b3 b15 (1)
put-down b3 (1)
unstack b15 b18 (1)
put-down b15 (1)
pick-up b3 (1)
stack b3 b15 (1)
unstack b18 b19 (1)
put-down b18 (1)
unstack b19 b11 (1)
put-down b19 (1)
pick-up b11 (1)
stack b11 b5 (1)
pick-up b19 (1)
stack b19 b11 (1)
pick-up b18 (1)
stack b18 b19 (1)
unstack b3 b15 (1)
put-down b3 (1)
pick-up b15 (1)
stack b15 b18 (1)
pick-up b3 (1)
stack b3 b15 (1)
unstack b4 b9 (1)
put-down b4 (1)
unstack b9 b22 (1)
put-down b9 (1)
pick-up b4 (1)
stack b4 b9 (1)
unstack b22 b26 (1)
put-down b22 (1)
pick-up b26 (1)
stack b26 b3 (1)
pick-up b22 (1)
stack b22 b26 (1)
unstack b4 b9 (1)
put-down b4 (1)
pick-up b9 (1)
stack b9 b22 (1)
pick-up b4 (1)
stack b4 b9 (1)
[t=0.0504776s, 27340 KB] Plan length: 168 step(s).
[t=0.0504776s, 27340 KB] Plan cost: 168
[t=0.0504776s, 27340 KB] Expanded 697 state(s).
[t=0.0504776s, 27340 KB] Reopened 0 state(s).
[t=0.0504776s, 27340 KB] Evaluated 698 state(s).
[t=0.0504776s, 27340 KB] Evaluations: 1396
[t=0.0504776s, 27340 KB] Generated 5938 state(s).
[t=0.0504776s, 27340 KB] Dead ends: 0 state(s).
[t=0.0504776s, 27340 KB] Number of registered states: 698
[t=0.0504776s, 27340 KB] Int hash set load factor: 698/1024 = 0.681641
[t=0.0504776s, 27340 KB] Int hash set resizes: 10
[t=0.0504776s, 27340 KB] Search time: 0.0242823s
[t=0.0504776s, 27340 KB] Total time: 0.0504776s
Solution found.
Peak memory: 27340 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.26s
