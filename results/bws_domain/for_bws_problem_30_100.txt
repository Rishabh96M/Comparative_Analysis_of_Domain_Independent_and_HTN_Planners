INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_30/bws_problem_30_100.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.010s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.017s wall-clock]
2912 relevant atoms
1950 auxiliary atoms
4862 final queue length
8528 total queue pushes
Completing instantiation... [0.030s CPU, 0.030s wall-clock]
Instantiating: [0.050s CPU, 0.048s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.010s CPU, 0.002s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
31 uncovered facts
Choosing groups: [0.000s CPU, 0.002s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.001s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.002s wall-clock]
Translating task: [0.050s CPU, 0.050s wall-clock]
2670 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
60 propositions removed
Detecting unreachable propositions: [0.030s CPU, 0.023s wall-clock]
Reordering and filtering variables...
61 of 61 variables necessary.
31 of 61 mutex groups necessary.
1800 of 1800 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.011s wall-clock]
Translator variables: 61
Translator derived variables: 0
Translator facts: 992
Translator goal facts: 26
Translator mutex groups: 31
Translator total mutex groups size: 961
Translator operators: 1800
Translator axioms: 0
Translator task size: 15450
Translator peak memory: 41336 KB
Writing output... [0.010s CPU, 0.009s wall-clock]
Done! [0.160s CPU, 0.158s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=5.7193e-05s, 24488 KB] reading input...
[t=0.00614784s, 26364 KB] done reading input!
[t=0.0074789s, 26760 KB] Initializing landmark count heuristic...
[t=0.00752011s, 26760 KB] Generating landmark graph...
[t=0.00763486s, 26892 KB] Building a landmark graph with reasonable orders.
[t=0.00774728s, 27024 KB] Initializing Exploration...
[t=0.00844399s, 27316 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0330195s, 28108 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0333118s, 28108 KB] Landmarks generation time: 0.0256875s
[t=0.0333534s, 28108 KB] Discovered 132 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0333794s, 28108 KB] 473 edges
[t=0.0333933s, 28108 KB] approx. reasonable orders
[t=0.0363799s, 28108 KB] approx. obedient reasonable orders
[t=0.0364452s, 28108 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0364572s, 28108 KB] Landmarks generation time: 0.028931s
[t=0.0364688s, 28108 KB] Discovered 132 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0364788s, 28108 KB] 504 edges
[t=0.0364901s, 28108 KB] Landmark graph generation time: 0.0289794s
[t=0.036501s, 28108 KB] Landmark graph contains 132 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0365107s, 28108 KB] Landmark graph contains 504 orderings.
[t=0.0371299s, 28136 KB] Simplifying 7140 unary operators... done! [5400 unary operators]
[t=0.0390241s, 28268 KB] time to simplify: 0.00209318s
[t=0.0393719s, 28268 KB] Initializing additive heuristic...
[t=0.0394008s, 28268 KB] Initializing FF heuristic...
[t=0.0395265s, 28268 KB] Building successor generator...done!
[t=0.0399547s, 28268 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0399705s, 28268 KB] time for successor generation creation: 0.000389463s
[t=0.0400195s, 28268 KB] Variables: 61
[t=0.0400298s, 28268 KB] FactPairs: 992
[t=0.0400406s, 28268 KB] Bytes per state: 24
[t=0.040236s, 28268 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.040303s, 28268 KB] 60 initial landmarks, 26 goal landmarks
[t=0.0404705s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 72
[t=0.0404865s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 53
[t=0.0405062s, 28268 KB] g=0, 1 evaluated, 0 expanded
[t=0.0405336s, 28268 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 72
[t=0.040548s, 28268 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 53
[t=0.0409527s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 71
[t=0.0409681s, 28268 KB] g=2, 8 evaluated, 7 expanded
[t=0.0412918s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 70
[t=0.0413275s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 52
[t=0.0413366s, 28268 KB] g=2, 13 evaluated, 12 expanded
[t=0.0413917s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 69
[t=0.0414007s, 28268 KB] g=3, 14 evaluated, 13 expanded
[t=0.041936s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 68
[t=0.0419478s, 28268 KB] g=6, 26 evaluated, 25 expanded
[t=0.042466s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 67
[t=0.0424758s, 28268 KB] g=8, 38 evaluated, 37 expanded
[t=0.0428944s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 66
[t=0.0429163s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 51
[t=0.0429249s, 28268 KB] g=6, 45 evaluated, 44 expanded
[t=0.0432057s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 65
[t=0.0432157s, 28268 KB] g=8, 51 evaluated, 50 expanded
[t=0.0440797s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 64
[t=0.0440896s, 28268 KB] g=10, 72 evaluated, 71 expanded
[t=0.0446261s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 63
[t=0.044636s, 28268 KB] g=12, 85 evaluated, 84 expanded
[t=0.045021s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 50
[t=0.0450312s, 28268 KB] g=10, 94 evaluated, 93 expanded
[t=0.0455054s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 62
[t=0.0455154s, 28268 KB] g=14, 105 evaluated, 104 expanded
[t=0.0457036s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 61
[t=0.0457138s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 48
[t=0.0457238s, 28268 KB] g=12, 109 evaluated, 108 expanded
[t=0.0459392s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 60
[t=0.0459493s, 28268 KB] g=13, 114 evaluated, 113 expanded
[t=0.046571s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.0465838s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 47
[t=0.046597s, 28268 KB] g=16, 127 evaluated, 126 expanded
[t=0.0467152s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 58
[t=0.0467275s, 28268 KB] g=17, 129 evaluated, 128 expanded
[t=0.0467922s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 46
[t=0.0468027s, 28268 KB] g=18, 130 evaluated, 129 expanded
[t=0.0476307s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 57
[t=0.0476467s, 28268 KB] g=20, 149 evaluated, 148 expanded
[t=0.0477537s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0477659s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.0477777s, 28268 KB] g=20, 151 evaluated, 150 expanded
[t=0.0478825s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0478952s, 28268 KB] g=21, 153 evaluated, 152 expanded
[t=0.0487511s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.048772s, 28268 KB] g=24, 172 evaluated, 171 expanded
[t=0.0496596s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0496752s, 28268 KB] g=26, 193 evaluated, 192 expanded
[t=0.0499707s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0499819s, 28268 KB] g=24, 200 evaluated, 199 expanded
[t=0.0508057s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0508424s, 28268 KB] g=28, 218 evaluated, 217 expanded
[t=0.0510837s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0510935s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0511012s, 28268 KB] g=26, 223 evaluated, 222 expanded
[t=0.0512403s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0512571s, 28268 KB] g=27, 226 evaluated, 225 expanded
[t=0.0518649s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0518748s, 28268 KB] g=28, 240 evaluated, 239 expanded
[t=0.0521317s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0521405s, 28268 KB] g=30, 246 evaluated, 245 expanded
[t=0.0531082s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.053127s, 28268 KB] g=32, 268 evaluated, 267 expanded
[t=0.053471s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0534824s, 28268 KB] g=32, 276 evaluated, 275 expanded
[t=0.0541685s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0541771s, 28268 KB] g=34, 293 evaluated, 292 expanded
[t=0.0542276s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0542367s, 28268 KB] g=34, 294 evaluated, 293 expanded
[t=0.0550279s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0550393s, 28268 KB] g=34, 313 evaluated, 312 expanded
[t=0.0553426s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0553525s, 28268 KB] g=36, 320 evaluated, 319 expanded
[t=0.0557858s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0557974s, 28268 KB] g=36, 330 evaluated, 329 expanded
[t=0.0565342s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0565442s, 28268 KB] g=38, 348 evaluated, 347 expanded
[t=0.0575602s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0575888s, 28268 KB] g=38, 373 evaluated, 372 expanded
[t=0.0589308s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0589452s, 28268 KB] g=40, 403 evaluated, 402 expanded
[t=0.0604969s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0605086s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0605172s, 28268 KB] g=42, 442 evaluated, 441 expanded
[t=0.0610364s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0610545s, 28268 KB] g=44, 454 evaluated, 453 expanded
[t=0.0613153s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.061326s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0613339s, 28268 KB] g=44, 460 evaluated, 459 expanded
[t=0.0617754s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0617848s, 28268 KB] g=46, 471 evaluated, 470 expanded
[t=0.0622317s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0622412s, 28268 KB] g=48, 482 evaluated, 481 expanded
[t=0.062686s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.062707s, 28268 KB] g=50, 492 evaluated, 491 expanded
[t=0.0641852s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0641981s, 28268 KB] g=47, 528 evaluated, 527 expanded
[t=0.0642945s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0643037s, 28268 KB] g=48, 530 evaluated, 529 expanded
[t=0.0653898s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0654182s, 28268 KB] g=50, 556 evaluated, 555 expanded
[t=0.0663546s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0663734s, 28268 KB] g=52, 578 evaluated, 577 expanded
[t=0.0667971s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0668132s, 28268 KB] g=54, 588 evaluated, 587 expanded
[t=0.0671113s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.067139s, 28268 KB] g=54, 595 evaluated, 594 expanded
[t=0.0674753s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0674893s, 28268 KB] g=56, 603 evaluated, 602 expanded
[t=0.0680827s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0680977s, 28268 KB] g=58, 617 evaluated, 616 expanded
[t=0.0681894s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.068198s, 28268 KB] g=56, 619 evaluated, 618 expanded
[t=0.0687708s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0687911s, 28268 KB] g=60, 633 evaluated, 632 expanded
[t=0.0688831s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0688932s, 28268 KB] g=58, 635 evaluated, 634 expanded
[t=0.0703462s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0703573s, 28268 KB] g=60, 671 evaluated, 670 expanded
[t=0.0706794s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.070693s, 28268 KB] g=62, 678 evaluated, 677 expanded
[t=0.0721009s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0721128s, 28268 KB] g=68, 713 evaluated, 712 expanded
[t=0.0725663s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0725759s, 28268 KB] g=68, 724 evaluated, 723 expanded
[t=0.0735858s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0735983s, 28268 KB] g=70, 748 evaluated, 747 expanded
[t=0.0773417s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0773734s, 28268 KB] g=82, 842 evaluated, 841 expanded
[t=0.114649s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.11475s, 28268 KB] g=104, 1742 evaluated, 1741 expanded
[t=0.11503s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.115041s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.115049s, 28268 KB] g=106, 1749 evaluated, 1748 expanded
[t=0.115279s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.115289s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.115297s, 28268 KB] g=108, 1755 evaluated, 1754 expanded
[t=0.116158s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.11617s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.116178s, 28268 KB] g=114, 1778 evaluated, 1777 expanded
[t=0.117494s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.117511s, 28268 KB] g=122, 1812 evaluated, 1811 expanded
[t=0.117634s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.117643s, 28268 KB] g=123, 1815 evaluated, 1814 expanded
[t=0.11769s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.117698s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.117706s, 28268 KB] g=124, 1816 evaluated, 1815 expanded
[t=0.117912s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.117938s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.117947s, 28268 KB] g=126, 1821 evaluated, 1820 expanded
[t=0.118078s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.118087s, 28268 KB] g=126, 1824 evaluated, 1823 expanded
[t=0.11826s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.11827s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.118278s, 28268 KB] g=128, 1828 evaluated, 1827 expanded
[t=0.119592s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.11962s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.119634s, 28268 KB] g=142, 1861 evaluated, 1860 expanded
[t=0.131019s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.131169s, 28268 KB] g=164, 2177 evaluated, 2176 expanded
[t=0.131365s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.13138s, 28268 KB] g=166, 2182 evaluated, 2181 expanded
[t=0.131496s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.131508s, 28268 KB] g=166, 2185 evaluated, 2184 expanded
[t=0.131647s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.131657s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.131667s, 28268 KB] g=168, 2189 evaluated, 2188 expanded
[t=0.131942s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.131953s, 28268 KB] g=172, 2198 evaluated, 2197 expanded
[t=0.132054s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.132064s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.132075s, 28268 KB] g=174, 2201 evaluated, 2200 expanded
[t=0.133032s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.133045s, 28268 KB] g=190, 2239 evaluated, 2238 expanded
[t=0.133253s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.133267s, 28268 KB] g=198, 2249 evaluated, 2248 expanded
[t=0.133369s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.13338s, 28268 KB] g=202, 2253 evaluated, 2252 expanded
[t=0.133405s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.133422s, 28268 KB] g=203, 2254 evaluated, 2253 expanded
[t=0.133443s, 28268 KB] Solution found!
[t=0.133476s, 28268 KB] Actual search time: 0.0931692s
unstack b25 b10 (1)
stack b25 b4 (1)
unstack b10 b30 (1)
put-down b10 (1)
unstack b30 b23 (1)
stack b30 b25 (1)
unstack b19 b14 (1)
put-down b19 (1)
unstack b14 b24 (1)
put-down b14 (1)
unstack b15 b17 (1)
stack b15 b14 (1)
unstack b24 b29 (1)
put-down b24 (1)
unstack b29 b13 (1)
put-down b29 (1)
unstack b13 b9 (1)
stack b13 b28 (1)
unstack b9 b26 (1)
stack b9 b15 (1)
unstack b17 b11 (1)
put-down b17 (1)
unstack b11 b8 (1)
put-down b11 (1)
unstack b8 b1 (1)
stack b8 b30 (1)
unstack b13 b28 (1)
put-down b13 (1)
unstack b21 b12 (1)
put-down b21 (1)
unstack b12 b3 (1)
put-down b12 (1)
unstack b28 b22 (1)
put-down b28 (1)
unstack b22 b7 (1)
stack b22 b9 (1)
unstack b7 b20 (1)
stack b7 b22 (1)
pick-up b24 (1)
stack b24 b7 (1)
pick-up b3 (1)
stack b3 b23 (1)
pick-up b17 (1)
stack b17 b3 (1)
unstack b20 b2 (1)
put-down b20 (1)
unstack b2 b6 (1)
stack b2 b17 (1)
unstack b6 b27 (1)
stack b6 b19 (1)
pick-up b10 (1)
stack b10 b6 (1)
pick-up b27 (1)
stack b27 b8 (1)
pick-up b28 (1)
stack b28 b27 (1)
pick-up b13 (1)
stack b13 b28 (1)
pick-up b20 (1)
stack b20 b2 (1)
pick-up b12 (1)
stack b12 b21 (1)
unstack b26 b5 (1)
put-down b26 (1)
pick-up b5 (1)
stack b5 b12 (1)
pick-up b26 (1)
stack b26 b5 (1)
unstack b10 b6 (1)
put-down b10 (1)
unstack b6 b19 (1)
put-down b6 (1)
pick-up b10 (1)
stack b10 b6 (1)
pick-up b19 (1)
stack b19 b1 (1)
unstack b10 b6 (1)
put-down b10 (1)
pick-up b6 (1)
stack b6 b19 (1)
pick-up b10 (1)
stack b10 b6 (1)
unstack b13 b28 (1)
put-down b13 (1)
unstack b28 b27 (1)
put-down b28 (1)
unstack b27 b8 (1)
put-down b27 (1)
pick-up b28 (1)
stack b28 b27 (1)
pick-up b13 (1)
stack b13 b28 (1)
unstack b8 b30 (1)
put-down b8 (1)
unstack b30 b25 (1)
put-down b30 (1)
pick-up b8 (1)
stack b8 b30 (1)
unstack b25 b4 (1)
put-down b25 (1)
unstack b4 b18 (1)
stack b4 b26 (1)
unstack b18 b16 (1)
stack b18 b20 (1)
pick-up b16 (1)
stack b16 b11 (1)
pick-up b25 (1)
stack b25 b4 (1)
unstack b8 b30 (1)
put-down b8 (1)
pick-up b30 (1)
stack b30 b25 (1)
pick-up b8 (1)
stack b8 b30 (1)
unstack b10 b6 (1)
put-down b10 (1)
unstack b6 b19 (1)
put-down b6 (1)
unstack b19 b1 (1)
put-down b19 (1)
pick-up b1 (1)
stack b1 b16 (1)
pick-up b19 (1)
stack b19 b1 (1)
pick-up b6 (1)
stack b6 b19 (1)
pick-up b10 (1)
stack b10 b6 (1)
unstack b13 b28 (1)
put-down b13 (1)
unstack b28 b27 (1)
put-down b28 (1)
pick-up b13 (1)
stack b13 b28 (1)
unstack b8 b30 (1)
put-down b8 (1)
unstack b30 b25 (1)
put-down b30 (1)
pick-up b8 (1)
stack b8 b30 (1)
pick-up b27 (1)
stack b27 b8 (1)
unstack b13 b28 (1)
put-down b13 (1)
pick-up b28 (1)
stack b28 b27 (1)
pick-up b13 (1)
stack b13 b28 (1)
unstack b25 b4 (1)
put-down b25 (1)
unstack b4 b26 (1)
put-down b4 (1)
pick-up b25 (1)
stack b25 b4 (1)
unstack b26 b5 (1)
put-down b26 (1)
unstack b5 b12 (1)
put-down b5 (1)
unstack b12 b21 (1)
put-down b12 (1)
pick-up b21 (1)
stack b21 b18 (1)
pick-up b12 (1)
stack b12 b21 (1)
pick-up b5 (1)
stack b5 b12 (1)
pick-up b26 (1)
stack b26 b5 (1)
unstack b25 b4 (1)
put-down b25 (1)
pick-up b4 (1)
stack b4 b26 (1)
pick-up b25 (1)
stack b25 b4 (1)
unstack b13 b28 (1)
put-down b13 (1)
unstack b28 b27 (1)
put-down b28 (1)
unstack b27 b8 (1)
put-down b27 (1)
pick-up b28 (1)
stack b28 b27 (1)
pick-up b13 (1)
stack b13 b28 (1)
unstack b8 b30 (1)
put-down b8 (1)
pick-up b30 (1)
stack b30 b25 (1)
pick-up b8 (1)
stack b8 b30 (1)
unstack b13 b28 (1)
put-down b13 (1)
unstack b28 b27 (1)
put-down b28 (1)
pick-up b13 (1)
stack b13 b28 (1)
pick-up b27 (1)
stack b27 b8 (1)
unstack b13 b28 (1)
put-down b13 (1)
pick-up b28 (1)
stack b28 b27 (1)
pick-up b13 (1)
stack b13 b28 (1)
[t=0.133491s, 28268 KB] Plan length: 204 step(s).
[t=0.133491s, 28268 KB] Plan cost: 204
[t=0.133491s, 28268 KB] Expanded 2254 state(s).
[t=0.133491s, 28268 KB] Reopened 0 state(s).
[t=0.133491s, 28268 KB] Evaluated 2255 state(s).
[t=0.133491s, 28268 KB] Evaluations: 4510
[t=0.133491s, 28268 KB] Generated 24548 state(s).
[t=0.133491s, 28268 KB] Dead ends: 0 state(s).
[t=0.133491s, 28268 KB] Number of registered states: 2255
[t=0.133491s, 28268 KB] Int hash set load factor: 2255/4096 = 0.550537
[t=0.133491s, 28268 KB] Int hash set resizes: 12
[t=0.133491s, 28268 KB] Search time: 0.0932559s
[t=0.133491s, 28268 KB] Total time: 0.133491s
Solution found.
Peak memory: 28268 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.34s
