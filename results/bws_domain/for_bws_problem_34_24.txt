INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_34/bws_problem_34_24.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.000s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.022s wall-clock]
3708 relevant atoms
2482 auxiliary atoms
6190 final queue length
10886 total queue pushes
Completing instantiation... [0.040s CPU, 0.042s wall-clock]
Instantiating: [0.060s CPU, 0.067s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.010s CPU, 0.002s wall-clock]
Collecting mutex groups... [0.010s CPU, 0.000s wall-clock]
Choosing groups...
35 uncovered facts
Choosing groups: [0.000s CPU, 0.002s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.020s CPU, 0.012s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.001s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.010s CPU, 0.001s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.003s wall-clock]
Translating task: [0.050s CPU, 0.059s wall-clock]
3434 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
68 propositions removed
Detecting unreachable propositions: [0.030s CPU, 0.031s wall-clock]
Reordering and filtering variables...
69 of 69 variables necessary.
35 of 69 mutex groups necessary.
2312 of 2312 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.020s CPU, 0.015s wall-clock]
Translator variables: 69
Translator derived variables: 0
Translator facts: 1260
Translator goal facts: 30
Translator mutex groups: 35
Translator total mutex groups size: 1225
Translator operators: 2312
Translator axioms: 0
Translator task size: 19822
Translator peak memory: 44420 KB
Writing output... [0.010s CPU, 0.012s wall-clock]
Done! [0.200s CPU, 0.202s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.302e-05s, 24488 KB] reading input...
[t=0.00781045s, 27204 KB] done reading input!
[t=0.00876131s, 27600 KB] Initializing landmark count heuristic...
[t=0.00880124s, 27600 KB] Generating landmark graph...
[t=0.00893253s, 27732 KB] Building a landmark graph with reasonable orders.
[t=0.00904925s, 27864 KB] Initializing Exploration...
[t=0.00975147s, 28512 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0493889s, 29704 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0495218s, 29704 KB] Landmarks generation time: 0.040597s
[t=0.049544s, 29704 KB] Discovered 157 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.049561s, 29704 KB] 1004 edges
[t=0.049571s, 29704 KB] approx. reasonable orders
[t=0.0523036s, 29704 KB] approx. obedient reasonable orders
[t=0.0523652s, 29704 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0523757s, 29704 KB] Landmarks generation time: 0.0435713s
[t=0.0523856s, 29704 KB] Discovered 157 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0523938s, 29704 KB] 1027 edges
[t=0.0524018s, 29704 KB] Landmark graph generation time: 0.0436073s
[t=0.05241s, 29704 KB] Landmark graph contains 157 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0524178s, 29704 KB] Landmark graph contains 1027 orderings.
[t=0.0531014s, 29704 KB] Simplifying 9180 unary operators... done! [6936 unary operators]
[t=0.055474s, 29704 KB] time to simplify: 0.00239226s
[t=0.0556375s, 29704 KB] Initializing additive heuristic...
[t=0.0556597s, 29704 KB] Initializing FF heuristic...
[t=0.0557136s, 29704 KB] Building successor generator...done!
[t=0.0561205s, 29704 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0561363s, 29704 KB] time for successor generation creation: 0.00037045s
[t=0.056163s, 29704 KB] Variables: 69
[t=0.0561713s, 29704 KB] FactPairs: 1260
[t=0.0561794s, 29704 KB] Bytes per state: 32
[t=0.056278s, 29704 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0563101s, 29704 KB] 69 initial landmarks, 30 goal landmarks
[t=0.0563887s, 29704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 88
[t=0.0563988s, 29704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 63
[t=0.0564077s, 29704 KB] g=0, 1 evaluated, 0 expanded
[t=0.0564216s, 29704 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 88
[t=0.0564305s, 29704 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 63
[t=0.0567564s, 29704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 87
[t=0.0567664s, 29704 KB] g=2, 7 evaluated, 6 expanded
[t=0.0575007s, 29704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 86
[t=0.0575106s, 29704 KB] g=4, 21 evaluated, 20 expanded
[t=0.0577823s, 29704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 85
[t=0.0577917s, 29704 KB] g=6, 26 evaluated, 25 expanded
[t=0.0584418s, 29704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 84
[t=0.058453s, 29704 KB] g=8, 38 evaluated, 37 expanded
[t=0.0592075s, 29704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 83
[t=0.059227s, 29704 KB] g=10, 52 evaluated, 51 expanded
[t=0.0594518s, 29704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 82
[t=0.0594623s, 29704 KB] g=11, 56 evaluated, 55 expanded
[t=0.0601261s, 29704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 81
[t=0.0601385s, 29704 KB] g=14, 69 evaluated, 68 expanded
[t=0.0602059s, 29704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 62
[t=0.0602148s, 29704 KB] g=8, 70 evaluated, 69 expanded
[t=0.0610442s, 29704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 61
[t=0.0610529s, 29704 KB] g=10, 86 evaluated, 85 expanded
[t=0.0612687s, 29704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 80
[t=0.0612778s, 29704 KB] g=16, 90 evaluated, 89 expanded
[t=0.0618571s, 29704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 60
[t=0.0618723s, 29704 KB] g=12, 101 evaluated, 100 expanded
[t=0.0625565s, 29704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 79
[t=0.062567s, 29704 KB] g=18, 114 evaluated, 113 expanded
[t=0.0637896s, 29704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 78
[t=0.0637995s, 29704 KB] g=20, 138 evaluated, 137 expanded
[t=0.0645515s, 29704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 59
[t=0.0645631s, 29704 KB] g=16, 152 evaluated, 151 expanded
[t=0.0646976s, 29704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 77
[t=0.0647131s, 29704 KB] g=17, 154 evaluated, 153 expanded
[t=0.0655541s, 29704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 76
[t=0.0655662s, 29704 KB] g=20, 169 evaluated, 168 expanded
[t=0.0661105s, 29704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 75
[t=0.066128s, 29704 KB] g=22, 179 evaluated, 178 expanded
[t=0.066404s, 29704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 74
[t=0.0664159s, 29704 KB] g=23, 184 evaluated, 183 expanded
[t=0.0670327s, 29704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 73
[t=0.0670467s, 29704 KB] g=26, 196 evaluated, 195 expanded
[t=0.0679799s, 29704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 72
[t=0.0679971s, 29704 KB] g=28, 214 evaluated, 213 expanded
[t=0.0688805s, 29704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 58
[t=0.0688927s, 29704 KB] g=30, 231 evaluated, 230 expanded
[t=0.0690134s, 29704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 71
[t=0.0690307s, 29704 KB] g=30, 233 evaluated, 232 expanded
[t=0.0703906s, 29704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 70
[t=0.0704092s, 29704 KB] g=32, 259 evaluated, 258 expanded
[t=0.0706445s, 29704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 57
[t=0.0706585s, 29704 KB] g=32, 263 evaluated, 262 expanded
[t=0.0719515s, 29704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 69
[t=0.071965s, 29704 KB] g=34, 287 evaluated, 286 expanded
[t=0.0726467s, 29704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 56
[t=0.0726584s, 29704 KB] g=36, 300 evaluated, 299 expanded
[t=0.0728292s, 29704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 68
[t=0.0728384s, 29704 KB] g=36, 303 evaluated, 302 expanded
[t=0.074051s, 29704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 65
[t=0.0740706s, 29704 KB] g=38, 326 evaluated, 325 expanded
[t=0.0755724s, 29704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 63
[t=0.0756167s, 29704 KB] g=40, 343 evaluated, 342 expanded
[t=0.0766796s, 29704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 55
[t=0.0766988s, 29704 KB] g=38, 362 evaluated, 361 expanded
[t=0.0770151s, 29704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 61
[t=0.0770255s, 29704 KB] g=42, 368 evaluated, 367 expanded
[t=0.0780621s, 29704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 54
[t=0.0780792s, 29704 KB] g=44, 388 evaluated, 387 expanded
[t=0.0799485s, 29704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 60
[t=0.0799605s, 29704 KB] g=45, 424 evaluated, 423 expanded
[t=0.0820053s, 29704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 58
[t=0.0820196s, 29704 KB] g=48, 464 evaluated, 463 expanded
[t=0.0836847s, 29704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 53
[t=0.083709s, 29704 KB] g=52, 496 evaluated, 495 expanded
[t=0.0842807s, 29704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 57
[t=0.0842957s, 29704 KB] g=54, 507 evaluated, 506 expanded
[t=0.0919015s, 29704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0919172s, 29704 KB] g=62, 655 evaluated, 654 expanded
[t=0.0929726s, 29704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0929841s, 29704 KB] g=64, 675 evaluated, 674 expanded
[t=0.0945942s, 29704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0946057s, 29704 KB] g=66, 706 evaluated, 705 expanded
[t=0.0959298s, 29704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 52
[t=0.095943s, 29704 KB] g=68, 732 evaluated, 731 expanded
[t=0.0963437s, 29704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0963543s, 29704 KB] g=68, 739 evaluated, 738 expanded
[t=0.0973728s, 29704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 51
[t=0.0973871s, 29704 KB] g=70, 758 evaluated, 757 expanded
[t=0.0982039s, 29704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0982264s, 29704 KB] g=70, 773 evaluated, 772 expanded
[t=0.0989417s, 29704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 50
[t=0.0989595s, 29704 KB] g=72, 786 evaluated, 785 expanded
[t=0.100048s, 29704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.10006s, 29704 KB] g=72, 806 evaluated, 805 expanded
[t=0.101709s, 29704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 49
[t=0.10173s, 29704 KB] g=76, 838 evaluated, 837 expanded
[t=0.102549s, 29704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 48
[t=0.102564s, 29704 KB] g=78, 853 evaluated, 852 expanded
[t=0.103297s, 29704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.10331s, 29704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 47
[t=0.103318s, 29704 KB] g=80, 867 evaluated, 866 expanded
[t=0.10405s, 29704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 46
[t=0.104062s, 29704 KB] g=82, 881 evaluated, 880 expanded
[t=0.104126s, 29704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.104135s, 29704 KB] g=82, 882 evaluated, 881 expanded
[t=0.105363s, 29704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.105378s, 29704 KB] g=84, 905 evaluated, 904 expanded
[t=0.105719s, 29704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.105732s, 29704 KB] g=84, 911 evaluated, 910 expanded
[t=0.106655s, 29704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.106684s, 29704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.106693s, 29704 KB] g=86, 927 evaluated, 926 expanded
[t=0.107242s, 29704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.107252s, 29704 KB] g=88, 937 evaluated, 936 expanded
[t=0.108102s, 29704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.108125s, 29704 KB] g=90, 952 evaluated, 951 expanded
[t=0.108724s, 29704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.108738s, 29704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.108747s, 29704 KB] g=92, 963 evaluated, 962 expanded
[t=0.109325s, 29704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.109339s, 29704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.109349s, 29704 KB] g=94, 973 evaluated, 972 expanded
[t=0.10989s, 29704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.109908s, 29704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.109917s, 29704 KB] g=96, 983 evaluated, 982 expanded
[t=0.110537s, 29704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.110551s, 29704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.11056s, 29704 KB] g=98, 994 evaluated, 993 expanded
[t=0.111077s, 29704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.111087s, 29704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.111095s, 29704 KB] g=100, 1004 evaluated, 1003 expanded
[t=0.111559s, 29704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.111569s, 29704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.111577s, 29704 KB] g=102, 1013 evaluated, 1012 expanded
[t=0.113115s, 29704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.113127s, 29704 KB] g=106, 1042 evaluated, 1041 expanded
[t=0.11354s, 29704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.113551s, 29704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.113564s, 29704 KB] g=108, 1050 evaluated, 1049 expanded
[t=0.115186s, 29704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.115199s, 29704 KB] g=112, 1081 evaluated, 1080 expanded
[t=0.115565s, 29704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.115577s, 29704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.115585s, 29704 KB] g=114, 1088 evaluated, 1087 expanded
[t=0.117998s, 29704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.118021s, 29704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.118031s, 29704 KB] g=120, 1135 evaluated, 1134 expanded
[t=0.123153s, 29704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.123186s, 29704 KB] g=128, 1232 evaluated, 1231 expanded
[t=0.123457s, 29704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.123488s, 29704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.123498s, 29704 KB] g=130, 1237 evaluated, 1236 expanded
[t=0.127343s, 29704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.127357s, 29704 KB] g=139, 1311 evaluated, 1310 expanded
[t=0.127719s, 29704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.12773s, 29704 KB] g=140, 1318 evaluated, 1317 expanded
[t=0.128039s, 29704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.12805s, 29704 KB] g=141, 1324 evaluated, 1323 expanded
[t=0.128662s, 29704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.128672s, 29704 KB] g=142, 1336 evaluated, 1335 expanded
[t=0.128784s, 29704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.128794s, 29704 KB] g=143, 1338 evaluated, 1337 expanded
[t=0.128856s, 29704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.128865s, 29704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.128873s, 29704 KB] g=144, 1339 evaluated, 1338 expanded
[t=0.129179s, 29704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.129188s, 29704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.129196s, 29704 KB] g=146, 1345 evaluated, 1344 expanded
[t=0.129456s, 29704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.129465s, 29704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.129473s, 29704 KB] g=148, 1350 evaluated, 1349 expanded
[t=0.133708s, 29704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.133721s, 29704 KB] g=160, 1434 evaluated, 1433 expanded
[t=0.134437s, 29704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.13445s, 29704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.134459s, 29704 KB] g=166, 1448 evaluated, 1447 expanded
[t=0.152835s, 29704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.152996s, 29704 KB] g=196, 1795 evaluated, 1794 expanded
[t=0.153796s, 29704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.15381s, 29704 KB] g=200, 1811 evaluated, 1810 expanded
[t=0.154017s, 29704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.154027s, 29704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.154035s, 29704 KB] g=202, 1815 evaluated, 1814 expanded
[t=0.156795s, 29704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.156815s, 29704 KB] g=214, 1869 evaluated, 1868 expanded
[t=0.157241s, 29704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.157251s, 29704 KB] g=218, 1878 evaluated, 1877 expanded
[t=0.157409s, 29704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.157419s, 29704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.157427s, 29704 KB] g=220, 1881 evaluated, 1880 expanded
[t=0.225561s, 29804 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.225638s, 29804 KB] g=286, 3455 evaluated, 3454 expanded
[t=0.225855s, 29804 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.225867s, 29804 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.225876s, 29804 KB] g=288, 3460 evaluated, 3459 expanded
[t=0.226524s, 29804 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.226554s, 29804 KB] g=292, 3476 evaluated, 3475 expanded
[t=0.226716s, 29804 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.226728s, 29804 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.226737s, 29804 KB] g=294, 3480 evaluated, 3479 expanded
[t=0.228625s, 29804 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.228639s, 29804 KB] g=306, 3534 evaluated, 3533 expanded
[t=0.228948s, 29804 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.228959s, 29804 KB] g=310, 3543 evaluated, 3542 expanded
[t=0.22907s, 29804 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.229079s, 29804 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.229087s, 29804 KB] g=312, 3546 evaluated, 3545 expanded
[t=0.23076s, 29804 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.230774s, 29804 KB] g=330, 3605 evaluated, 3604 expanded
[t=0.230868s, 29804 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.230879s, 29804 KB] g=332, 3608 evaluated, 3607 expanded
[t=0.231149s, 29804 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.23116s, 29804 KB] g=340, 3619 evaluated, 3618 expanded
[t=0.231256s, 29804 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.231266s, 29804 KB] g=344, 3623 evaluated, 3622 expanded
[t=0.231289s, 29804 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.231298s, 29804 KB] g=345, 3624 evaluated, 3623 expanded
[t=0.231317s, 29804 KB] Solution found!
[t=0.231338s, 29804 KB] Actual search time: 0.175026s
unstack b17 b5 (1)
put-down b17 (1)
unstack b25 b30 (1)
put-down b25 (1)
unstack b30 b6 (1)
put-down b30 (1)
unstack b6 b19 (1)
put-down b6 (1)
unstack b19 b9 (1)
stack b19 b5 (1)
pick-up b21 (1)
stack b21 b19 (1)
unstack b9 b16 (1)
put-down b9 (1)
unstack b16 b1 (1)
put-down b16 (1)
unstack b1 b18 (1)
put-down b1 (1)
unstack b34 b24 (1)
put-down b34 (1)
unstack b24 b22 (1)
put-down b24 (1)
unstack b22 b27 (1)
put-down b22 (1)
unstack b27 b14 (1)
put-down b27 (1)
unstack b14 b12 (1)
put-down b14 (1)
unstack b12 b10 (1)
stack b12 b14 (1)
pick-up b34 (1)
stack b34 b27 (1)
unstack b10 b4 (1)
put-down b10 (1)
unstack b12 b14 (1)
put-down b12 (1)
unstack b4 b7 (1)
stack b4 b34 (1)
pick-up b1 (1)
stack b1 b4 (1)
pick-up b7 (1)
stack b7 b24 (1)
unstack b18 b31 (1)
put-down b18 (1)
unstack b31 b26 (1)
put-down b31 (1)
pick-up b26 (1)
stack b26 b9 (1)
pick-up b12 (1)
stack b12 b14 (1)
pick-up b18 (1)
stack b18 b31 (1)
unstack b21 b19 (1)
put-down b21 (1)
unstack b12 b14 (1)
put-down b12 (1)
unstack b19 b5 (1)
put-down b19 (1)
unstack b5 b29 (1)
put-down b5 (1)
unstack b29 b15 (1)
stack b29 b26 (1)
unstack b15 b20 (1)
stack b15 b17 (1)
pick-up b12 (1)
stack b12 b14 (1)
pick-up b19 (1)
stack b19 b5 (1)
unstack b20 b8 (1)
stack b20 b21 (1)
pick-up b30 (1)
stack b30 b15 (1)
unstack b8 b13 (1)
put-down b8 (1)
unstack b13 b11 (1)
stack b13 b12 (1)
unstack b11 b28 (1)
put-down b11 (1)
unstack b28 b23 (1)
put-down b28 (1)
pick-up b10 (1)
stack b10 b23 (1)
pick-up b22 (1)
stack b22 b11 (1)
pick-up b25 (1)
stack b25 b13 (1)
unstack b10 b23 (1)
put-down b10 (1)
unstack b23 b33 (1)
stack b23 b18 (1)
pick-up b10 (1)
stack b10 b23 (1)
unstack b33 b2 (1)
stack b33 b25 (1)
unstack b2 b32 (1)
stack b2 b6 (1)
unstack b32 b3 (1)
stack b32 b30 (1)
pick-up b3 (1)
stack b3 b10 (1)
pick-up b8 (1)
stack b8 b3 (1)
unstack b19 b5 (1)
put-down b19 (1)
pick-up b5 (1)
stack b5 b32 (1)
pick-up b19 (1)
stack b19 b5 (1)
unstack b7 b24 (1)
put-down b7 (1)
pick-up b24 (1)
stack b24 b8 (1)
pick-up b7 (1)
stack b7 b24 (1)
unstack b20 b21 (1)
put-down b20 (1)
pick-up b21 (1)
stack b21 b19 (1)
pick-up b20 (1)
stack b20 b21 (1)
unstack b29 b26 (1)
put-down b29 (1)
unstack b26 b9 (1)
put-down b26 (1)
pick-up b9 (1)
stack b9 b20 (1)
pick-up b26 (1)
stack b26 b9 (1)
pick-up b29 (1)
stack b29 b26 (1)
unstack b33 b25 (1)
put-down b33 (1)
unstack b25 b13 (1)
put-down b25 (1)
unstack b13 b12 (1)
put-down b13 (1)
unstack b12 b14 (1)
put-down b12 (1)
pick-up b14 (1)
stack b14 b28 (1)
pick-up b12 (1)
stack b12 b14 (1)
pick-up b13 (1)
stack b13 b12 (1)
pick-up b25 (1)
stack b25 b13 (1)
pick-up b33 (1)
stack b33 b25 (1)
unstack b1 b4 (1)
put-down b1 (1)
unstack b4 b34 (1)
put-down b4 (1)
pick-up b1 (1)
stack b1 b4 (1)
unstack b34 b27 (1)
put-down b34 (1)
pick-up b27 (1)
stack b27 b29 (1)
pick-up b34 (1)
stack b34 b27 (1)
unstack b1 b4 (1)
put-down b1 (1)
pick-up b4 (1)
stack b4 b34 (1)
pick-up b1 (1)
stack b1 b4 (1)
unstack b7 b24 (1)
put-down b7 (1)
unstack b24 b8 (1)
put-down b24 (1)
pick-up b7 (1)
stack b7 b24 (1)
unstack b8 b3 (1)
put-down b8 (1)
unstack b3 b10 (1)
put-down b3 (1)
pick-up b8 (1)
stack b8 b3 (1)
unstack b7 b24 (1)
put-down b7 (1)
pick-up b24 (1)
stack b24 b8 (1)
pick-up b7 (1)
stack b7 b24 (1)
unstack b10 b23 (1)
put-down b10 (1)
unstack b23 b18 (1)
put-down b23 (1)
pick-up b10 (1)
stack b10 b23 (1)
unstack b18 b31 (1)
put-down b18 (1)
pick-up b31 (1)
stack b31 b33 (1)
pick-up b18 (1)
stack b18 b31 (1)
unstack b10 b23 (1)
put-down b10 (1)
pick-up b23 (1)
stack b23 b18 (1)
pick-up b10 (1)
stack b10 b23 (1)
unstack b7 b24 (1)
put-down b7 (1)
unstack b24 b8 (1)
put-down b24 (1)
pick-up b7 (1)
stack b7 b24 (1)
unstack b8 b3 (1)
put-down b8 (1)
pick-up b3 (1)
stack b3 b10 (1)
pick-up b8 (1)
stack b8 b3 (1)
unstack b7 b24 (1)
put-down b7 (1)
pick-up b24 (1)
stack b24 b8 (1)
pick-up b7 (1)
stack b7 b24 (1)
unstack b1 b4 (1)
put-down b1 (1)
unstack b4 b34 (1)
put-down b4 (1)
unstack b34 b27 (1)
put-down b34 (1)
pick-up b4 (1)
stack b4 b34 (1)
pick-up b1 (1)
stack b1 b4 (1)
unstack b27 b29 (1)
put-down b27 (1)
unstack b29 b26 (1)
put-down b29 (1)
unstack b26 b9 (1)
put-down b26 (1)
pick-up b29 (1)
stack b29 b26 (1)
pick-up b27 (1)
stack b27 b29 (1)
unstack b1 b4 (1)
put-down b1 (1)
unstack b4 b34 (1)
put-down b4 (1)
pick-up b1 (1)
stack b1 b4 (1)
pick-up b34 (1)
stack b34 b27 (1)
unstack b1 b4 (1)
put-down b1 (1)
pick-up b4 (1)
stack b4 b34 (1)
pick-up b1 (1)
stack b1 b4 (1)
unstack b9 b20 (1)
put-down b9 (1)
unstack b20 b21 (1)
put-down b20 (1)
pick-up b9 (1)
stack b9 b20 (1)
unstack b21 b19 (1)
put-down b21 (1)
unstack b19 b5 (1)
put-down b19 (1)
pick-up b21 (1)
stack b21 b19 (1)
unstack b9 b20 (1)
put-down b9 (1)
pick-up b20 (1)
stack b20 b21 (1)
pick-up b9 (1)
stack b9 b20 (1)
unstack b5 b32 (1)
put-down b5 (1)
unstack b32 b30 (1)
put-down b32 (1)
pick-up b5 (1)
stack b5 b32 (1)
unstack b30 b15 (1)
put-down b30 (1)
unstack b15 b17 (1)
put-down b15 (1)
pick-up b17 (1)
stack b17 b2 (1)
pick-up b15 (1)
stack b15 b17 (1)
pick-up b30 (1)
stack b30 b15 (1)
unstack b5 b32 (1)
put-down b5 (1)
pick-up b32 (1)
stack b32 b30 (1)
pick-up b5 (1)
stack b5 b32 (1)
unstack b9 b20 (1)
put-down b9 (1)
unstack b20 b21 (1)
put-down b20 (1)
pick-up b9 (1)
stack b9 b20 (1)
unstack b21 b19 (1)
put-down b21 (1)
pick-up b19 (1)
stack b19 b5 (1)
pick-up b21 (1)
stack b21 b19 (1)
unstack b9 b20 (1)
put-down b9 (1)
pick-up b20 (1)
stack b20 b21 (1)
pick-up b9 (1)
stack b9 b20 (1)
unstack b1 b4 (1)
put-down b1 (1)
unstack b4 b34 (1)
put-down b4 (1)
unstack b34 b27 (1)
put-down b34 (1)
pick-up b4 (1)
stack b4 b34 (1)
pick-up b1 (1)
stack b1 b4 (1)
unstack b27 b29 (1)
put-down b27 (1)
unstack b29 b26 (1)
put-down b29 (1)
pick-up b26 (1)
stack b26 b9 (1)
pick-up b29 (1)
stack b29 b26 (1)
pick-up b27 (1)
stack b27 b29 (1)
unstack b1 b4 (1)
put-down b1 (1)
unstack b4 b34 (1)
put-down b4 (1)
pick-up b1 (1)
stack b1 b4 (1)
pick-up b34 (1)
stack b34 b27 (1)
unstack b1 b4 (1)
put-down b1 (1)
pick-up b4 (1)
stack b4 b34 (1)
pick-up b1 (1)
stack b1 b4 (1)
[t=0.231348s, 29804 KB] Plan length: 346 step(s).
[t=0.231348s, 29804 KB] Plan cost: 346
[t=0.231348s, 29804 KB] Expanded 3624 state(s).
[t=0.231348s, 29804 KB] Reopened 0 state(s).
[t=0.231348s, 29804 KB] Evaluated 3625 state(s).
[t=0.231348s, 29804 KB] Evaluations: 7250
[t=0.231348s, 29804 KB] Generated 39081 state(s).
[t=0.231348s, 29804 KB] Dead ends: 0 state(s).
[t=0.231348s, 29804 KB] Number of registered states: 3625
[t=0.231348s, 29804 KB] Int hash set load factor: 3625/4096 = 0.88501
[t=0.231348s, 29804 KB] Int hash set resizes: 12
[t=0.231348s, 29804 KB] Search time: 0.17507s
[t=0.231348s, 29804 KB] Total time: 0.231348s
Solution found.
Peak memory: 29804 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.49s
