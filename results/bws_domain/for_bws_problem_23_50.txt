INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_23/bws_problem_23_50.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.013s wall-clock]
1750 relevant atoms
1173 auxiliary atoms
2923 final queue length
5089 total queue pushes
Completing instantiation... [0.020s CPU, 0.019s wall-clock]
Instantiating: [0.040s CPU, 0.033s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
24 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.007s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.027s wall-clock]
1564 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
46 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.014s wall-clock]
Reordering and filtering variables...
47 of 47 variables necessary.
24 of 47 mutex groups necessary.
1058 of 1058 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.007s wall-clock]
Translator variables: 47
Translator derived variables: 0
Translator facts: 600
Translator goal facts: 19
Translator mutex groups: 24
Translator total mutex groups size: 576
Translator operators: 1058
Translator axioms: 0
Translator task size: 9108
Translator peak memory: 37488 KB
Writing output... [0.010s CPU, 0.006s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=3.1482e-05s, 24488 KB] reading input...
[t=0.00369318s, 25428 KB] done reading input!
[t=0.0050658s, 25824 KB] Initializing landmark count heuristic...
[t=0.00511656s, 25824 KB] Generating landmark graph...
[t=0.00518313s, 25824 KB] Building a landmark graph with reasonable orders.
[t=0.00524921s, 25956 KB] Initializing Exploration...
[t=0.00556579s, 26256 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0171252s, 26652 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0172513s, 26652 KB] Landmarks generation time: 0.01207s
[t=0.0172663s, 26652 KB] Discovered 102 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0172875s, 26652 KB] 515 edges
[t=0.0172983s, 26652 KB] approx. reasonable orders
[t=0.0198777s, 26652 KB] approx. obedient reasonable orders
[t=0.0199168s, 26652 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0199266s, 26652 KB] Landmarks generation time: 0.0148081s
[t=0.0199367s, 26652 KB] Discovered 102 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0199452s, 26652 KB] 558 edges
[t=0.0199539s, 26652 KB] Landmark graph generation time: 0.0148445s
[t=0.0199624s, 26652 KB] Landmark graph contains 102 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0199705s, 26652 KB] Landmark graph contains 558 orderings.
[t=0.020316s, 26652 KB] Simplifying 4186 unary operators... done! [3174 unary operators]
[t=0.021384s, 26652 KB] time to simplify: 0.00114253s
[t=0.0215307s, 26652 KB] Initializing additive heuristic...
[t=0.0215477s, 26652 KB] Initializing FF heuristic...
[t=0.0216244s, 26652 KB] Building successor generator...done!
[t=0.0219896s, 26812 KB] peak memory difference for successor generator creation: 160 KB
[t=0.0220109s, 26812 KB] time for successor generation creation: 0.000310169s
[t=0.0220444s, 26812 KB] Variables: 47
[t=0.0220588s, 26812 KB] FactPairs: 600
[t=0.0220715s, 26812 KB] Bytes per state: 20
[t=0.0223493s, 26812 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0224734s, 26812 KB] 47 initial landmarks, 19 goal landmarks
[t=0.0225748s, 26812 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0225925s, 26812 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0226072s, 26812 KB] g=0, 1 evaluated, 0 expanded
[t=0.0226341s, 26812 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0226486s, 26812 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0228445s, 26812 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0228569s, 26812 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0228655s, 26812 KB] g=2, 6 evaluated, 5 expanded
[t=0.0230084s, 26812 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0230177s, 26812 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0230261s, 26812 KB] g=4, 11 evaluated, 10 expanded
[t=0.0230636s, 26812 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.023073s, 26812 KB] g=5, 12 evaluated, 11 expanded
[t=0.0231109s, 26812 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0231198s, 26812 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.023128s, 26812 KB] g=6, 13 evaluated, 12 expanded
[t=0.023268s, 26812 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0232774s, 26812 KB] g=8, 18 evaluated, 17 expanded
[t=0.0233131s, 26812 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0233222s, 26812 KB] g=8, 19 evaluated, 18 expanded
[t=0.0235622s, 26812 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0235712s, 26812 KB] g=10, 28 evaluated, 27 expanded
[t=0.0238133s, 26812 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0238224s, 26812 KB] g=12, 37 evaluated, 36 expanded
[t=0.02401s, 26812 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.024019s, 26812 KB] g=12, 44 evaluated, 43 expanded
[t=0.0241124s, 26812 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0241229s, 26812 KB] g=14, 47 evaluated, 46 expanded
[t=0.0243634s, 26812 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0243751s, 26812 KB] g=16, 56 evaluated, 55 expanded
[t=0.0245907s, 26812 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0246027s, 26812 KB] g=17, 64 evaluated, 63 expanded
[t=0.024973s, 26812 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0249854s, 26812 KB] g=20, 78 evaluated, 77 expanded
[t=0.0253544s, 26812 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0253641s, 26812 KB] g=22, 92 evaluated, 91 expanded
[t=0.025575s, 26812 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0255847s, 26812 KB] g=24, 100 evaluated, 99 expanded
[t=0.025797s, 26812 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0258344s, 26812 KB] g=24, 108 evaluated, 107 expanded
[t=0.0259234s, 26812 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0259326s, 26812 KB] g=26, 111 evaluated, 110 expanded
[t=0.0261437s, 26812 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0261533s, 26812 KB] g=25, 119 evaluated, 118 expanded
[t=0.0263173s, 26812 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0263262s, 26812 KB] g=28, 125 evaluated, 124 expanded
[t=0.0266027s, 26812 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0266129s, 26812 KB] g=28, 135 evaluated, 134 expanded
[t=0.0270242s, 26812 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0270376s, 26812 KB] g=32, 149 evaluated, 148 expanded
[t=0.0271293s, 26812 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0271444s, 26812 KB] g=30, 152 evaluated, 151 expanded
[t=0.0274033s, 26812 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.027413s, 26812 KB] g=34, 161 evaluated, 160 expanded
[t=0.027638s, 26812 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0276488s, 26812 KB] g=32, 169 evaluated, 168 expanded
[t=0.0277983s, 26812 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0278087s, 26812 KB] g=36, 174 evaluated, 173 expanded
[t=0.02814s, 26812 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0281564s, 26812 KB] g=38, 186 evaluated, 185 expanded
[t=0.0283076s, 26812 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.028327s, 26812 KB] g=34, 191 evaluated, 190 expanded
[t=0.0288227s, 26812 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0288435s, 26812 KB] g=36, 209 evaluated, 208 expanded
[t=0.0294205s, 26812 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0294373s, 26812 KB] g=42, 230 evaluated, 229 expanded
[t=0.0295287s, 26812 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0295389s, 26812 KB] g=38, 233 evaluated, 232 expanded
[t=0.0300656s, 26812 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0300801s, 26812 KB] g=46, 253 evaluated, 252 expanded
[t=0.0302072s, 26812 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0302245s, 26812 KB] g=40, 257 evaluated, 256 expanded
[t=0.0304785s, 26812 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0304961s, 26812 KB] g=48, 266 evaluated, 265 expanded
[t=0.0309347s, 26812 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0309581s, 26812 KB] g=42, 282 evaluated, 281 expanded
[t=0.0314896s, 26812 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0315039s, 26812 KB] g=44, 302 evaluated, 301 expanded
[t=0.0321284s, 26812 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0321419s, 26812 KB] g=46, 326 evaluated, 325 expanded
[t=0.0328765s, 26812 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0328901s, 26812 KB] g=48, 354 evaluated, 353 expanded
[t=0.0334742s, 26812 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0334871s, 26812 KB] g=54, 376 evaluated, 375 expanded
[t=0.033576s, 26812 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0335864s, 26812 KB] g=50, 379 evaluated, 378 expanded
[t=0.0339348s, 26812 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0339455s, 26812 KB] g=52, 392 evaluated, 391 expanded
[t=0.0343699s, 26812 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0343804s, 26812 KB] g=54, 408 evaluated, 407 expanded
[t=0.0347014s, 26812 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0347126s, 26812 KB] g=56, 420 evaluated, 419 expanded
[t=0.0355489s, 26812 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0355623s, 26812 KB] g=62, 451 evaluated, 450 expanded
[t=0.0357248s, 26812 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0357399s, 26812 KB] g=64, 457 evaluated, 456 expanded
[t=0.0358763s, 26812 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0358878s, 26812 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0358959s, 26812 KB] g=66, 462 evaluated, 461 expanded
[t=0.0362812s, 26812 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0362992s, 26812 KB] g=70, 477 evaluated, 476 expanded
[t=0.0364107s, 26812 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0364222s, 26812 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0364308s, 26812 KB] g=72, 481 evaluated, 480 expanded
[t=0.0367176s, 26812 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0367291s, 26812 KB] g=76, 492 evaluated, 491 expanded
[t=0.0368148s, 26812 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0368241s, 26812 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0368322s, 26812 KB] g=78, 495 evaluated, 494 expanded
[t=0.0377445s, 26812 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0377646s, 26812 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0377738s, 26812 KB] g=96, 528 evaluated, 527 expanded
[t=0.0759711s, 26812 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0760462s, 26812 KB] g=136, 1992 evaluated, 1991 expanded
[t=0.0767391s, 26812 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0767863s, 26812 KB] g=140, 2008 evaluated, 2007 expanded
[t=0.0769353s, 26812 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0769541s, 26812 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0769625s, 26812 KB] g=142, 2012 evaluated, 2011 expanded
[t=0.0783979s, 26812 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0784181s, 26812 KB] g=154, 2066 evaluated, 2065 expanded
[t=0.0786613s, 26812 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.078674s, 26812 KB] g=158, 2075 evaluated, 2074 expanded
[t=0.0787541s, 26812 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0787638s, 26812 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.078772s, 26812 KB] g=160, 2078 evaluated, 2077 expanded
[t=0.0808627s, 26908 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0808925s, 26908 KB] g=190, 2179 evaluated, 2178 expanded
[t=0.081063s, 26908 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0810744s, 26908 KB] g=194, 2188 evaluated, 2187 expanded
[t=0.0811343s, 26908 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0811446s, 26908 KB] g=196, 2191 evaluated, 2190 expanded
[t=0.0814313s, 26908 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0814445s, 26908 KB] g=208, 2209 evaluated, 2208 expanded
[t=0.0815076s, 26908 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0815188s, 26908 KB] g=212, 2213 evaluated, 2212 expanded
[t=0.0815372s, 26908 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0815468s, 26908 KB] g=213, 2214 evaluated, 2213 expanded
[t=0.0815627s, 26908 KB] Solution found!
[t=0.0815862s, 26908 KB] Actual search time: 0.0591102s
unstack b18 b9 (1)
put-down b18 (1)
unstack b11 b20 (1)
stack b11 b18 (1)
unstack b20 b3 (1)
stack b20 b11 (1)
unstack b7 b5 (1)
put-down b7 (1)
unstack b5 b16 (1)
stack b5 b9 (1)
unstack b16 b15 (1)
put-down b16 (1)
pick-up b7 (1)
stack b7 b15 (1)
unstack b5 b9 (1)
put-down b5 (1)
unstack b9 b12 (1)
put-down b9 (1)
unstack b12 b22 (1)
put-down b12 (1)
unstack b22 b6 (1)
put-down b22 (1)
unstack b6 b8 (1)
put-down b6 (1)
unstack b8 b23 (1)
put-down b8 (1)
unstack b23 b1 (1)
stack b23 b7 (1)
unstack b1 b2 (1)
put-down b1 (1)
unstack b2 b14 (1)
put-down b2 (1)
unstack b14 b13 (1)
put-down b14 (1)
unstack b13 b17 (1)
put-down b13 (1)
unstack b17 b19 (1)
put-down b17 (1)
unstack b19 b4 (1)
stack b19 b5 (1)
pick-up b8 (1)
stack b8 b2 (1)
pick-up b9 (1)
stack b9 b17 (1)
pick-up b13 (1)
stack b13 b4 (1)
pick-up b21 (1)
stack b21 b23 (1)
pick-up b3 (1)
stack b3 b21 (1)
pick-up b1 (1)
stack b1 b3 (1)
pick-up b16 (1)
stack b16 b1 (1)
pick-up b14 (1)
stack b14 b16 (1)
unstack b13 b4 (1)
put-down b13 (1)
unstack b4 b10 (1)
put-down b4 (1)
pick-up b10 (1)
stack b10 b14 (1)
pick-up b4 (1)
stack b4 b10 (1)
pick-up b13 (1)
stack b13 b4 (1)
unstack b8 b2 (1)
put-down b8 (1)
pick-up b2 (1)
stack b2 b19 (1)
pick-up b8 (1)
stack b8 b2 (1)
unstack b13 b4 (1)
put-down b13 (1)
unstack b4 b10 (1)
put-down b4 (1)
pick-up b13 (1)
stack b13 b4 (1)
unstack b9 b17 (1)
put-down b9 (1)
pick-up b17 (1)
stack b17 b13 (1)
pick-up b9 (1)
stack b9 b17 (1)
unstack b8 b2 (1)
put-down b8 (1)
unstack b2 b19 (1)
put-down b2 (1)
pick-up b8 (1)
stack b8 b2 (1)
unstack b19 b5 (1)
put-down b19 (1)
pick-up b5 (1)
stack b5 b9 (1)
pick-up b19 (1)
stack b19 b5 (1)
unstack b8 b2 (1)
put-down b8 (1)
pick-up b2 (1)
stack b2 b19 (1)
pick-up b8 (1)
stack b8 b2 (1)
unstack b10 b14 (1)
put-down b10 (1)
unstack b14 b16 (1)
put-down b14 (1)
pick-up b10 (1)
stack b10 b14 (1)
unstack b16 b1 (1)
put-down b16 (1)
unstack b1 b3 (1)
put-down b1 (1)
pick-up b16 (1)
stack b16 b1 (1)
unstack b10 b14 (1)
put-down b10 (1)
pick-up b14 (1)
stack b14 b16 (1)
pick-up b10 (1)
stack b10 b14 (1)
unstack b3 b21 (1)
put-down b3 (1)
unstack b21 b23 (1)
put-down b21 (1)
pick-up b3 (1)
stack b3 b21 (1)
unstack b23 b7 (1)
put-down b23 (1)
unstack b7 b15 (1)
put-down b7 (1)
pick-up b15 (1)
stack b15 b6 (1)
pick-up b7 (1)
stack b7 b15 (1)
pick-up b23 (1)
stack b23 b7 (1)
unstack b3 b21 (1)
put-down b3 (1)
pick-up b21 (1)
stack b21 b23 (1)
pick-up b3 (1)
stack b3 b21 (1)
unstack b10 b14 (1)
put-down b10 (1)
unstack b14 b16 (1)
put-down b14 (1)
pick-up b10 (1)
stack b10 b14 (1)
unstack b16 b1 (1)
put-down b16 (1)
pick-up b1 (1)
stack b1 b3 (1)
pick-up b16 (1)
stack b16 b1 (1)
unstack b10 b14 (1)
put-down b10 (1)
pick-up b14 (1)
stack b14 b16 (1)
pick-up b10 (1)
stack b10 b14 (1)
unstack b8 b2 (1)
put-down b8 (1)
unstack b2 b19 (1)
put-down b2 (1)
pick-up b8 (1)
stack b8 b2 (1)
unstack b19 b5 (1)
put-down b19 (1)
unstack b5 b9 (1)
put-down b5 (1)
pick-up b19 (1)
stack b19 b5 (1)
unstack b8 b2 (1)
put-down b8 (1)
pick-up b2 (1)
stack b2 b19 (1)
pick-up b8 (1)
stack b8 b2 (1)
unstack b9 b17 (1)
put-down b9 (1)
unstack b17 b13 (1)
put-down b17 (1)
pick-up b9 (1)
stack b9 b17 (1)
unstack b13 b4 (1)
put-down b13 (1)
pick-up b4 (1)
stack b4 b10 (1)
pick-up b13 (1)
stack b13 b4 (1)
unstack b9 b17 (1)
put-down b9 (1)
pick-up b17 (1)
stack b17 b13 (1)
pick-up b9 (1)
stack b9 b17 (1)
unstack b8 b2 (1)
put-down b8 (1)
unstack b2 b19 (1)
put-down b2 (1)
pick-up b8 (1)
stack b8 b2 (1)
unstack b19 b5 (1)
put-down b19 (1)
pick-up b5 (1)
stack b5 b9 (1)
pick-up b19 (1)
stack b19 b5 (1)
unstack b8 b2 (1)
put-down b8 (1)
pick-up b2 (1)
stack b2 b19 (1)
pick-up b8 (1)
stack b8 b2 (1)
[t=0.0816002s, 26908 KB] Plan length: 214 step(s).
[t=0.0816002s, 26908 KB] Plan cost: 214
[t=0.0816002s, 26908 KB] Expanded 2214 state(s).
[t=0.0816002s, 26908 KB] Reopened 0 state(s).
[t=0.0816002s, 26908 KB] Evaluated 2215 state(s).
[t=0.0816002s, 26908 KB] Evaluations: 4430
[t=0.0816002s, 26908 KB] Generated 20976 state(s).
[t=0.0816002s, 26908 KB] Dead ends: 0 state(s).
[t=0.0816002s, 26908 KB] Number of registered states: 2215
[t=0.0816002s, 26908 KB] Int hash set load factor: 2215/4096 = 0.540771
[t=0.0816002s, 26908 KB] Int hash set resizes: 12
[t=0.0816002s, 26908 KB] Search time: 0.0592552s
[t=0.0816002s, 26908 KB] Total time: 0.0816002s
Solution found.
Peak memory: 26908 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.22s
