INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_27/bws_problem_27_76.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.000s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.016s wall-clock]
2378 relevant atoms
1593 auxiliary atoms
3971 final queue length
6946 total queue pushes
Completing instantiation... [0.040s CPU, 0.031s wall-clock]
Instantiating: [0.050s CPU, 0.049s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.001s wall-clock]
Choosing groups...
28 uncovered facts
Choosing groups: [0.000s CPU, 0.002s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.010s CPU, 0.012s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.002s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.001s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.002s wall-clock]
Translating task: [0.060s CPU, 0.055s wall-clock]
2160 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
54 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.021s wall-clock]
Reordering and filtering variables...
55 of 55 variables necessary.
28 of 55 mutex groups necessary.
1458 of 1458 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.010s wall-clock]
Translator variables: 55
Translator derived variables: 0
Translator facts: 812
Translator goal facts: 24
Translator mutex groups: 28
Translator total mutex groups size: 784
Translator operators: 1458
Translator axioms: 0
Translator task size: 12529
Translator peak memory: 39412 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.160s CPU, 0.162s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=1.8301e-05s, 24488 KB] reading input...
[t=0.00420405s, 25936 KB] done reading input!
[t=0.00530232s, 26332 KB] Initializing landmark count heuristic...
[t=0.00533235s, 26332 KB] Generating landmark graph...
[t=0.00540929s, 26332 KB] Building a landmark graph with reasonable orders.
[t=0.00550302s, 26464 KB] Initializing Exploration...
[t=0.00600083s, 26732 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0254631s, 27524 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0256087s, 27524 KB] Landmarks generation time: 0.0201987s
[t=0.0256372s, 27524 KB] Discovered 122 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0256604s, 27524 KB] 759 edges
[t=0.0256762s, 27524 KB] approx. reasonable orders
[t=0.0256879s, 27524 KB] approx. obedient reasonable orders
[t=0.0257187s, 27524 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.025729s, 27524 KB] Landmarks generation time: 0.0203952s
[t=0.0257393s, 27524 KB] Discovered 122 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0257474s, 27524 KB] 759 edges
[t=0.0257561s, 27524 KB] Landmark graph generation time: 0.0204308s
[t=0.0257648s, 27524 KB] Landmark graph contains 122 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0257735s, 27524 KB] Landmark graph contains 759 orderings.
[t=0.0265205s, 27600 KB] Simplifying 5778 unary operators... done! [4374 unary operators]
[t=0.0279629s, 27600 KB] time to simplify: 0.00154497s
[t=0.0281661s, 27600 KB] Initializing additive heuristic...
[t=0.0282032s, 27600 KB] Initializing FF heuristic...
[t=0.0284087s, 27600 KB] Building successor generator...done!
[t=0.0287818s, 27600 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0287932s, 27600 KB] time for successor generation creation: 0.000328461s
[t=0.0288162s, 27600 KB] Variables: 55
[t=0.0288256s, 27600 KB] FactPairs: 812
[t=0.0288345s, 27600 KB] Bytes per state: 24
[t=0.0290133s, 27600 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0290626s, 27600 KB] 54 initial landmarks, 24 goal landmarks
[t=0.0293468s, 27600 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 68
[t=0.0293601s, 27600 KB] New best heuristic value for ff(transform = adapt_costs(one)): 49
[t=0.0293714s, 27600 KB] g=0, 1 evaluated, 0 expanded
[t=0.0293952s, 27600 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 68
[t=0.0294052s, 27600 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 49
[t=0.029536s, 27600 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 67
[t=0.029546s, 27600 KB] g=1, 4 evaluated, 3 expanded
[t=0.029771s, 27600 KB] New best heuristic value for ff(transform = adapt_costs(one)): 48
[t=0.0297806s, 27600 KB] g=2, 10 evaluated, 9 expanded
[t=0.0298597s, 27600 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 66
[t=0.0298689s, 27600 KB] g=3, 12 evaluated, 11 expanded
[t=0.0300894s, 27600 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 65
[t=0.0300994s, 27600 KB] g=5, 18 evaluated, 17 expanded
[t=0.0305208s, 27600 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 63
[t=0.0305305s, 27600 KB] New best heuristic value for ff(transform = adapt_costs(one)): 47
[t=0.0305393s, 27600 KB] g=8, 30 evaluated, 29 expanded
[t=0.0307984s, 27600 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 60
[t=0.0308076s, 27600 KB] New best heuristic value for ff(transform = adapt_costs(one)): 46
[t=0.0308166s, 27600 KB] g=10, 37 evaluated, 36 expanded
[t=0.0310924s, 27600 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.0311066s, 27600 KB] g=12, 44 evaluated, 43 expanded
[t=0.0316659s, 27600 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 57
[t=0.0316761s, 27600 KB] New best heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0316872s, 27600 KB] g=14, 60 evaluated, 59 expanded
[t=0.0319767s, 27600 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0319936s, 27600 KB] New best heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.0320027s, 27600 KB] g=16, 68 evaluated, 67 expanded
[t=0.0327602s, 27600 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0327734s, 27600 KB] g=19, 89 evaluated, 88 expanded
[t=0.0328957s, 27600 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0329056s, 27600 KB] g=21, 92 evaluated, 91 expanded
[t=0.032955s, 27600 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0329644s, 27600 KB] g=22, 93 evaluated, 92 expanded
[t=0.0333188s, 27600 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0333295s, 27600 KB] g=24, 102 evaluated, 101 expanded
[t=0.0334524s, 27600 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0334618s, 27600 KB] g=24, 105 evaluated, 104 expanded
[t=0.0340119s, 27600 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0340232s, 27600 KB] g=26, 120 evaluated, 119 expanded
[t=0.0343208s, 27600 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0343321s, 27600 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0343567s, 27600 KB] g=28, 128 evaluated, 127 expanded
[t=0.0347013s, 27600 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0347113s, 27600 KB] g=30, 137 evaluated, 136 expanded
[t=0.0350759s, 27600 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0350855s, 27600 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0350938s, 27600 KB] g=32, 147 evaluated, 146 expanded
[t=0.0358107s, 27600 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0358214s, 27600 KB] g=35, 167 evaluated, 166 expanded
[t=0.0358666s, 27600 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0358751s, 27600 KB] g=36, 168 evaluated, 167 expanded
[t=0.0362605s, 27600 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.036271s, 27600 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0362791s, 27600 KB] g=38, 179 evaluated, 178 expanded
[t=0.0366346s, 27600 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0366608s, 27600 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0366696s, 27600 KB] g=40, 189 evaluated, 188 expanded
[t=0.0370658s, 27600 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0370949s, 27600 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0371035s, 27600 KB] g=42, 200 evaluated, 199 expanded
[t=0.0375134s, 27600 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0375259s, 27600 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0375359s, 27600 KB] g=44, 211 evaluated, 210 expanded
[t=0.0379022s, 27600 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0379143s, 27600 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0379316s, 27600 KB] g=46, 221 evaluated, 220 expanded
[t=0.0387608s, 27600 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.03878s, 27600 KB] g=48, 243 evaluated, 242 expanded
[t=0.0391095s, 27600 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0391195s, 27600 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0391282s, 27600 KB] g=50, 252 evaluated, 251 expanded
[t=0.0404795s, 27600 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0404929s, 27600 KB] g=54, 290 evaluated, 289 expanded
[t=0.0407921s, 27600 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0408051s, 27600 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0408142s, 27600 KB] g=56, 298 evaluated, 297 expanded
[t=0.0427762s, 27600 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0428111s, 27600 KB] g=60, 353 evaluated, 352 expanded
[t=0.0430656s, 27600 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0430757s, 27600 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0430841s, 27600 KB] g=62, 360 evaluated, 359 expanded
[t=0.0457565s, 27600 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0457699s, 27600 KB] g=68, 438 evaluated, 437 expanded
[t=0.0460765s, 27600 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0460872s, 27600 KB] g=70, 446 evaluated, 445 expanded
[t=0.0463356s, 27600 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0463449s, 27600 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0463529s, 27600 KB] g=72, 453 evaluated, 452 expanded
[t=0.0466162s, 27600 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0466251s, 27600 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0466331s, 27600 KB] g=74, 460 evaluated, 459 expanded
[t=0.0468627s, 27600 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0468722s, 27600 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.046881s, 27600 KB] g=76, 466 evaluated, 465 expanded
[t=0.0470973s, 27600 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0471067s, 27600 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0471151s, 27600 KB] g=78, 472 evaluated, 471 expanded
[t=0.0483278s, 27600 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0483376s, 27600 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0483459s, 27600 KB] g=82, 507 evaluated, 506 expanded
[t=0.0485905s, 27600 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0485998s, 27600 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0486085s, 27600 KB] g=84, 513 evaluated, 512 expanded
[t=0.0497205s, 27600 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0497324s, 27600 KB] g=90, 545 evaluated, 544 expanded
[t=0.0499367s, 27600 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0499476s, 27600 KB] g=92, 550 evaluated, 549 expanded
[t=0.0500938s, 27600 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.050103s, 27600 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0501114s, 27600 KB] g=94, 554 evaluated, 553 expanded
[t=0.051371s, 27600 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.051381s, 27600 KB] g=102, 591 evaluated, 590 expanded
[t=0.0515898s, 27600 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0515993s, 27600 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0516079s, 27600 KB] g=104, 597 evaluated, 596 expanded
[t=0.0879143s, 27600 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0879722s, 27600 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0879898s, 27600 KB] g=142, 1664 evaluated, 1663 expanded
[t=0.0888801s, 27600 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0889182s, 27600 KB] g=146, 1680 evaluated, 1679 expanded
[t=0.0891069s, 27600 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.089122s, 27600 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.089131s, 27600 KB] g=148, 1684 evaluated, 1683 expanded
[t=0.0947365s, 27600 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0948383s, 27600 KB] g=164, 1836 evaluated, 1835 expanded
[t=0.0959563s, 27600 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0959937s, 27600 KB] g=172, 1867 evaluated, 1866 expanded
[t=0.0961487s, 27600 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0961668s, 27600 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0961761s, 27600 KB] g=174, 1870 evaluated, 1869 expanded
[t=0.108761s, 27600 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.10888s, 27600 KB] g=212, 2280 evaluated, 2279 expanded
[t=0.109104s, 27600 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.109116s, 27600 KB] g=216, 2289 evaluated, 2288 expanded
[t=0.109199s, 27600 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.109219s, 27600 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.109228s, 27600 KB] g=218, 2292 evaluated, 2291 expanded
[t=0.110032s, 27600 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.110047s, 27600 KB] g=234, 2330 evaluated, 2329 expanded
[t=0.110242s, 27600 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.110258s, 27600 KB] g=242, 2341 evaluated, 2340 expanded
[t=0.110285s, 27600 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.110295s, 27600 KB] g=242, 2342 evaluated, 2341 expanded
[t=0.110316s, 27600 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.110326s, 27600 KB] g=243, 2343 evaluated, 2342 expanded
[t=0.110344s, 27600 KB] Solution found!
[t=0.110375s, 27600 KB] Actual search time: 0.0813094s
unstack b23 b15 (1)
put-down b23 (1)
unstack b15 b7 (1)
put-down b15 (1)
unstack b24 b14 (1)
put-down b24 (1)
unstack b14 b21 (1)
stack b14 b27 (1)
unstack b21 b17 (1)
stack b21 b14 (1)
unstack b17 b9 (1)
put-down b17 (1)
unstack b4 b22 (1)
stack b4 b9 (1)
pick-up b19 (1)
stack b19 b22 (1)
unstack b4 b9 (1)
put-down b4 (1)
unstack b9 b13 (1)
put-down b9 (1)
unstack b13 b18 (1)
stack b13 b17 (1)
pick-up b4 (1)
stack b4 b9 (1)
unstack b18 b20 (1)
put-down b18 (1)
unstack b20 b11 (1)
stack b20 b18 (1)
unstack b11 b16 (1)
put-down b11 (1)
unstack b16 b1 (1)
stack b16 b20 (1)
unstack b1 b3 (1)
put-down b1 (1)
unstack b3 b25 (1)
stack b3 b7 (1)
pick-up b1 (1)
stack b1 b3 (1)
unstack b25 b10 (1)
stack b25 b23 (1)
unstack b10 b8 (1)
put-down b10 (1)
pick-up b15 (1)
stack b15 b10 (1)
unstack b8 b5 (1)
put-down b8 (1)
pick-up b24 (1)
stack b24 b8 (1)
pick-up b5 (1)
stack b5 b1 (1)
unstack b13 b17 (1)
put-down b13 (1)
pick-up b17 (1)
stack b17 b11 (1)
pick-up b13 (1)
stack b13 b17 (1)
unstack b4 b9 (1)
put-down b4 (1)
pick-up b9 (1)
stack b9 b5 (1)
pick-up b4 (1)
stack b4 b9 (1)
unstack b21 b14 (1)
put-down b21 (1)
unstack b14 b27 (1)
put-down b14 (1)
unstack b27 b6 (1)
stack b27 b16 (1)
pick-up b14 (1)
stack b14 b27 (1)
unstack b6 b26 (1)
stack b6 b19 (1)
pick-up b21 (1)
stack b21 b14 (1)
unstack b26 b2 (1)
stack b26 b21 (1)
unstack b2 b12 (1)
stack b2 b4 (1)
unstack b24 b8 (1)
put-down b24 (1)
pick-up b8 (1)
stack b8 b12 (1)
pick-up b24 (1)
stack b24 b8 (1)
unstack b6 b19 (1)
put-down b6 (1)
unstack b19 b22 (1)
put-down b19 (1)
pick-up b22 (1)
stack b22 b2 (1)
pick-up b19 (1)
stack b19 b22 (1)
pick-up b6 (1)
stack b6 b19 (1)
unstack b13 b17 (1)
put-down b13 (1)
unstack b17 b11 (1)
put-down b17 (1)
pick-up b11 (1)
stack b11 b26 (1)
pick-up b17 (1)
stack b17 b11 (1)
pick-up b13 (1)
stack b13 b17 (1)
unstack b6 b19 (1)
put-down b6 (1)
unstack b19 b22 (1)
put-down b19 (1)
pick-up b6 (1)
stack b6 b19 (1)
unstack b22 b2 (1)
put-down b22 (1)
unstack b2 b4 (1)
put-down b2 (1)
unstack b4 b9 (1)
put-down b4 (1)
pick-up b2 (1)
stack b2 b4 (1)
pick-up b22 (1)
stack b22 b2 (1)
unstack b6 b19 (1)
put-down b6 (1)
pick-up b19 (1)
stack b19 b22 (1)
pick-up b6 (1)
stack b6 b19 (1)
unstack b9 b5 (1)
put-down b9 (1)
unstack b5 b1 (1)
put-down b5 (1)
pick-up b9 (1)
stack b9 b5 (1)
unstack b1 b3 (1)
put-down b1 (1)
unstack b3 b7 (1)
put-down b3 (1)
pick-up b7 (1)
stack b7 b25 (1)
pick-up b3 (1)
stack b3 b7 (1)
pick-up b1 (1)
stack b1 b3 (1)
unstack b9 b5 (1)
put-down b9 (1)
pick-up b5 (1)
stack b5 b1 (1)
pick-up b9 (1)
stack b9 b5 (1)
unstack b6 b19 (1)
put-down b6 (1)
unstack b19 b22 (1)
put-down b19 (1)
unstack b22 b2 (1)
put-down b22 (1)
pick-up b19 (1)
stack b19 b22 (1)
pick-up b6 (1)
stack b6 b19 (1)
unstack b2 b4 (1)
put-down b2 (1)
pick-up b4 (1)
stack b4 b9 (1)
pick-up b2 (1)
stack b2 b4 (1)
unstack b6 b19 (1)
put-down b6 (1)
unstack b19 b22 (1)
put-down b19 (1)
pick-up b22 (1)
stack b22 b2 (1)
pick-up b19 (1)
stack b19 b22 (1)
pick-up b6 (1)
stack b6 b19 (1)
unstack b13 b17 (1)
put-down b13 (1)
unstack b17 b11 (1)
put-down b17 (1)
pick-up b13 (1)
stack b13 b17 (1)
unstack b11 b26 (1)
put-down b11 (1)
unstack b26 b21 (1)
put-down b26 (1)
unstack b21 b14 (1)
put-down b21 (1)
pick-up b26 (1)
stack b26 b21 (1)
pick-up b11 (1)
stack b11 b26 (1)
unstack b13 b17 (1)
put-down b13 (1)
pick-up b17 (1)
stack b17 b11 (1)
pick-up b13 (1)
stack b13 b17 (1)
unstack b14 b27 (1)
put-down b14 (1)
unstack b27 b16 (1)
put-down b27 (1)
pick-up b14 (1)
stack b14 b27 (1)
unstack b16 b20 (1)
put-down b16 (1)
unstack b20 b18 (1)
put-down b20 (1)
pick-up b18 (1)
stack b18 b6 (1)
pick-up b20 (1)
stack b20 b18 (1)
pick-up b16 (1)
stack b16 b20 (1)
unstack b14 b27 (1)
put-down b14 (1)
pick-up b27 (1)
stack b27 b16 (1)
pick-up b14 (1)
stack b14 b27 (1)
unstack b13 b17 (1)
put-down b13 (1)
unstack b17 b11 (1)
put-down b17 (1)
unstack b11 b26 (1)
put-down b11 (1)
pick-up b17 (1)
stack b17 b11 (1)
pick-up b13 (1)
stack b13 b17 (1)
unstack b26 b21 (1)
put-down b26 (1)
pick-up b21 (1)
stack b21 b14 (1)
pick-up b26 (1)
stack b26 b21 (1)
unstack b13 b17 (1)
put-down b13 (1)
unstack b17 b11 (1)
put-down b17 (1)
pick-up b11 (1)
stack b11 b26 (1)
pick-up b17 (1)
stack b17 b11 (1)
pick-up b13 (1)
stack b13 b17 (1)
[t=0.11039s, 27600 KB] Plan length: 244 step(s).
[t=0.11039s, 27600 KB] Plan cost: 244
[t=0.11039s, 27600 KB] Expanded 2343 state(s).
[t=0.11039s, 27600 KB] Reopened 0 state(s).
[t=0.11039s, 27600 KB] Evaluated 2344 state(s).
[t=0.11039s, 27600 KB] Evaluations: 4688
[t=0.11039s, 27600 KB] Generated 20631 state(s).
[t=0.11039s, 27600 KB] Dead ends: 0 state(s).
[t=0.11039s, 27600 KB] Number of registered states: 2344
[t=0.11039s, 27600 KB] Int hash set load factor: 2344/4096 = 0.572266
[t=0.11039s, 27600 KB] Int hash set resizes: 12
[t=0.11039s, 27600 KB] Search time: 0.0813793s
[t=0.11039s, 27600 KB] Total time: 0.11039s
Solution found.
Peak memory: 27600 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.33s
