INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_32/bws_problem_32_98.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.021s wall-clock]
3298 relevant atoms
2208 auxiliary atoms
5506 final queue length
9672 total queue pushes
Completing instantiation... [0.040s CPU, 0.043s wall-clock]
Instantiating: [0.060s CPU, 0.066s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.002s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.001s wall-clock]
Choosing groups...
33 uncovered facts
Choosing groups: [0.000s CPU, 0.003s wall-clock]
Building translation key... [0.010s CPU, 0.001s wall-clock]
Computing fact groups: [0.020s CPU, 0.013s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.001s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.002s wall-clock]
Translating task: [0.050s CPU, 0.055s wall-clock]
3040 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
64 propositions removed
Detecting unreachable propositions: [0.030s CPU, 0.025s wall-clock]
Reordering and filtering variables...
65 of 65 variables necessary.
33 of 65 mutex groups necessary.
2048 of 2048 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.013s wall-clock]
Translator variables: 65
Translator derived variables: 0
Translator facts: 1122
Translator goal facts: 29
Translator mutex groups: 33
Translator total mutex groups size: 1089
Translator operators: 2048
Translator axioms: 0
Translator task size: 17569
Translator peak memory: 42624 KB
Writing output... [0.010s CPU, 0.010s wall-clock]
Done! [0.180s CPU, 0.190s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.5542e-05s, 24488 KB] reading input...
[t=0.00640912s, 26784 KB] done reading input!
[t=0.00768652s, 27180 KB] Initializing landmark count heuristic...
[t=0.00774951s, 27180 KB] Generating landmark graph...
[t=0.00788883s, 27312 KB] Building a landmark graph with reasonable orders.
[t=0.00799089s, 27312 KB] Initializing Exploration...
[t=0.00860046s, 27768 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0397221s, 28692 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0398309s, 28692 KB] Landmarks generation time: 0.0319522s
[t=0.0398563s, 28692 KB] Discovered 147 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0398729s, 28692 KB] 578 edges
[t=0.0398831s, 28692 KB] approx. reasonable orders
[t=0.047279s, 28692 KB] approx. obedient reasonable orders
[t=0.0474607s, 28692 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0474765s, 28692 KB] Landmarks generation time: 0.0397264s
[t=0.0474898s, 28692 KB] Discovered 147 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0474993s, 28692 KB] 653 edges
[t=0.0475085s, 28692 KB] Landmark graph generation time: 0.0397664s
[t=0.0475176s, 28692 KB] Landmark graph contains 147 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0475264s, 28692 KB] Landmark graph contains 653 orderings.
[t=0.0484215s, 28724 KB] Simplifying 8128 unary operators... done! [6144 unary operators]
[t=0.0506821s, 28856 KB] time to simplify: 0.00230111s
[t=0.0508484s, 28856 KB] Initializing additive heuristic...
[t=0.0508693s, 28856 KB] Initializing FF heuristic...
[t=0.0509334s, 28856 KB] Building successor generator...done!
[t=0.0513098s, 28856 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0513202s, 28856 KB] time for successor generation creation: 0.00034274s
[t=0.0513397s, 28856 KB] Variables: 65
[t=0.0513491s, 28856 KB] FactPairs: 1122
[t=0.0513578s, 28856 KB] Bytes per state: 32
[t=0.0514626s, 28856 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0514986s, 28856 KB] 65 initial landmarks, 29 goal landmarks
[t=0.0515819s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 82
[t=0.0515919s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 60
[t=0.0516006s, 28856 KB] g=0, 1 evaluated, 0 expanded
[t=0.0516151s, 28856 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 82
[t=0.0516244s, 28856 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 60
[t=0.052052s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 59
[t=0.0520702s, 28856 KB] g=2, 9 evaluated, 8 expanded
[t=0.0521326s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 81
[t=0.0521425s, 28856 KB] g=2, 10 evaluated, 9 expanded
[t=0.0526523s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 58
[t=0.0526622s, 28856 KB] g=4, 20 evaluated, 19 expanded
[t=0.0529636s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 80
[t=0.0529736s, 28856 KB] g=4, 26 evaluated, 25 expanded
[t=0.0533737s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 57
[t=0.0533836s, 28856 KB] g=6, 34 evaluated, 33 expanded
[t=0.0537826s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 79
[t=0.0537926s, 28856 KB] g=6, 42 evaluated, 41 expanded
[t=0.0541469s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 56
[t=0.0541566s, 28856 KB] g=8, 49 evaluated, 48 expanded
[t=0.0547106s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 78
[t=0.0547271s, 28856 KB] g=10, 60 evaluated, 59 expanded
[t=0.0548353s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 55
[t=0.0548448s, 28856 KB] g=10, 62 evaluated, 61 expanded
[t=0.055437s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 77
[t=0.0554489s, 28856 KB] g=12, 74 evaluated, 73 expanded
[t=0.0561673s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 76
[t=0.0561773s, 28856 KB] g=14, 89 evaluated, 88 expanded
[t=0.0570444s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 75
[t=0.0570687s, 28856 KB] g=16, 107 evaluated, 106 expanded
[t=0.0574171s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 54
[t=0.0574279s, 28856 KB] g=14, 114 evaluated, 113 expanded
[t=0.0581064s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 74
[t=0.0581177s, 28856 KB] g=18, 128 evaluated, 127 expanded
[t=0.0582365s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 53
[t=0.0582461s, 28856 KB] g=16, 130 evaluated, 129 expanded
[t=0.0591711s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 73
[t=0.0591822s, 28856 KB] g=20, 149 evaluated, 148 expanded
[t=0.0602591s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 72
[t=0.0602767s, 28856 KB] g=22, 172 evaluated, 171 expanded
[t=0.0614477s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 71
[t=0.0614634s, 28856 KB] g=24, 197 evaluated, 196 expanded
[t=0.0615236s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 52
[t=0.0615328s, 28856 KB] g=20, 198 evaluated, 197 expanded
[t=0.0626917s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 70
[t=0.0627012s, 28856 KB] g=26, 223 evaluated, 222 expanded
[t=0.063968s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 67
[t=0.0639856s, 28856 KB] g=28, 250 evaluated, 249 expanded
[t=0.0652793s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 66
[t=0.0652908s, 28856 KB] g=30, 277 evaluated, 276 expanded
[t=0.066587s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 65
[t=0.0666359s, 28856 KB] g=32, 302 evaluated, 301 expanded
[t=0.067792s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 63
[t=0.0678025s, 28856 KB] g=34, 326 evaluated, 325 expanded
[t=0.0691536s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 62
[t=0.0691715s, 28856 KB] g=36, 355 evaluated, 354 expanded
[t=0.0702881s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.0703007s, 28856 KB] g=38, 378 evaluated, 377 expanded
[t=0.0715207s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 58
[t=0.0715441s, 28856 KB] g=40, 402 evaluated, 401 expanded
[t=0.0731805s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 57
[t=0.0731922s, 28856 KB] g=42, 435 evaluated, 434 expanded
[t=0.0745931s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 51
[t=0.0746132s, 28856 KB] g=44, 463 evaluated, 462 expanded
[t=0.0748256s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0748366s, 28856 KB] g=44, 467 evaluated, 466 expanded
[t=0.076149s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 50
[t=0.076168s, 28856 KB] g=46, 495 evaluated, 494 expanded
[t=0.0765046s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0765372s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 49
[t=0.0765461s, 28856 KB] g=46, 502 evaluated, 501 expanded
[t=0.077228s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 48
[t=0.0772465s, 28856 KB] g=48, 516 evaluated, 515 expanded
[t=0.0776346s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0776495s, 28856 KB] g=48, 524 evaluated, 523 expanded
[t=0.0788156s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 47
[t=0.078838s, 28856 KB] g=50, 548 evaluated, 547 expanded
[t=0.0805076s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0805303s, 28856 KB] g=52, 584 evaluated, 583 expanded
[t=0.0814515s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 46
[t=0.0814842s, 28856 KB] g=52, 604 evaluated, 603 expanded
[t=0.0818553s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0818665s, 28856 KB] g=54, 611 evaluated, 610 expanded
[t=0.0824637s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.082474s, 28856 KB] g=54, 623 evaluated, 622 expanded
[t=0.08323s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0832472s, 28856 KB] g=56, 639 evaluated, 638 expanded
[t=0.0848872s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.084898s, 28856 KB] g=58, 674 evaluated, 673 expanded
[t=0.0855665s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.0855861s, 28856 KB] g=60, 688 evaluated, 687 expanded
[t=0.0862915s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0863012s, 28856 KB] g=60, 703 evaluated, 702 expanded
[t=0.0873764s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0873871s, 28856 KB] g=62, 727 evaluated, 726 expanded
[t=0.0884357s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0884522s, 28856 KB] g=64, 750 evaluated, 749 expanded
[t=0.0890226s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0890336s, 28856 KB] g=66, 762 evaluated, 761 expanded
[t=0.0942992s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0943718s, 28856 KB] g=66, 874 evaluated, 873 expanded
[t=0.0946648s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0946755s, 28856 KB] g=67, 880 evaluated, 879 expanded
[t=0.094783s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0947925s, 28856 KB] g=68, 882 evaluated, 881 expanded
[t=0.096517s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0965368s, 28856 KB] g=70, 919 evaluated, 918 expanded
[t=0.0972934s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0973118s, 28856 KB] g=72, 935 evaluated, 934 expanded
[t=0.0982588s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0982701s, 28856 KB] g=72, 955 evaluated, 954 expanded
[t=0.0988755s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0988848s, 28856 KB] g=74, 968 evaluated, 967 expanded
[t=0.10008s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.100108s, 28856 KB] g=76, 993 evaluated, 992 expanded
[t=0.100688s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.100698s, 28856 KB] g=78, 1005 evaluated, 1004 expanded
[t=0.101667s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.101679s, 28856 KB] g=80, 1025 evaluated, 1024 expanded
[t=0.104224s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.104242s, 28856 KB] g=82, 1081 evaluated, 1080 expanded
[t=0.107619s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.107657s, 28856 KB] g=86, 1154 evaluated, 1153 expanded
[t=0.111875s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.111918s, 28856 KB] g=92, 1241 evaluated, 1240 expanded
[t=0.11294s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.112954s, 28856 KB] g=88, 1261 evaluated, 1260 expanded
[t=0.114288s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.114309s, 28856 KB] g=90, 1289 evaluated, 1288 expanded
[t=0.11558s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.115591s, 28856 KB] g=92, 1317 evaluated, 1316 expanded
[t=0.11652s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.116538s, 28856 KB] g=94, 1337 evaluated, 1336 expanded
[t=0.117643s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.117653s, 28856 KB] g=96, 1361 evaluated, 1360 expanded
[t=0.118483s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.118501s, 28856 KB] g=98, 1379 evaluated, 1378 expanded
[t=0.119573s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.119587s, 28856 KB] g=100, 1402 evaluated, 1401 expanded
[t=0.120919s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.120937s, 28856 KB] g=104, 1431 evaluated, 1430 expanded
[t=0.120994s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.121003s, 28856 KB] g=102, 1432 evaluated, 1431 expanded
[t=0.121669s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.121679s, 28856 KB] g=106, 1447 evaluated, 1446 expanded
[t=0.121961s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.12197s, 28856 KB] g=104, 1453 evaluated, 1452 expanded
[t=0.122286s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.122295s, 28856 KB] g=108, 1460 evaluated, 1459 expanded
[t=0.122786s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.122795s, 28856 KB] g=106, 1471 evaluated, 1470 expanded
[t=0.122852s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.122861s, 28856 KB] g=110, 1472 evaluated, 1471 expanded
[t=0.123561s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.123578s, 28856 KB] g=108, 1487 evaluated, 1486 expanded
[t=0.12422s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.124231s, 28856 KB] g=110, 1501 evaluated, 1500 expanded
[t=0.124544s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.124563s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.124572s, 28856 KB] g=112, 1508 evaluated, 1507 expanded
[t=0.125395s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.125407s, 28856 KB] g=116, 1527 evaluated, 1526 expanded
[t=0.125602s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.12562s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.125628s, 28856 KB] g=118, 1531 evaluated, 1530 expanded
[t=0.128078s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.128113s, 28856 KB] g=130, 1586 evaluated, 1585 expanded
[t=0.12873s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.128742s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.12875s, 28856 KB] g=136, 1600 evaluated, 1599 expanded
[t=0.166869s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.166985s, 28856 KB] g=170, 2412 evaluated, 2411 expanded
[t=0.167733s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.167751s, 28856 KB] g=174, 2428 evaluated, 2427 expanded
[t=0.167939s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.167955s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.167963s, 28856 KB] g=176, 2432 evaluated, 2431 expanded
[t=0.170391s, 28992 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.170417s, 28992 KB] g=188, 2486 evaluated, 2485 expanded
[t=0.170823s, 28992 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.170836s, 28992 KB] g=192, 2495 evaluated, 2494 expanded
[t=0.170976s, 28992 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.170987s, 28992 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.170995s, 28992 KB] g=194, 2498 evaluated, 2497 expanded
[t=0.236609s, 29308 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.236676s, 29308 KB] g=270, 4129 evaluated, 4128 expanded
[t=0.23696s, 29308 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.236991s, 29308 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.237001s, 29308 KB] g=272, 4133 evaluated, 4132 expanded
[t=0.238876s, 29308 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.238892s, 29308 KB] g=284, 4187 evaluated, 4186 expanded
[t=0.239201s, 29308 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.239211s, 29308 KB] g=288, 4196 evaluated, 4195 expanded
[t=0.239317s, 29308 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.23934s, 29308 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.239352s, 29308 KB] g=290, 4199 evaluated, 4198 expanded
[t=0.241763s, 29444 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.241782s, 29444 KB] g=312, 4285 evaluated, 4284 expanded
[t=0.24206s, 29444 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.242075s, 29444 KB] g=316, 4294 evaluated, 4293 expanded
[t=0.242151s, 29444 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.242161s, 29444 KB] g=318, 4297 evaluated, 4296 expanded
[t=0.242368s, 29444 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.242383s, 29444 KB] g=326, 4307 evaluated, 4306 expanded
[t=0.242465s, 29444 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.242475s, 29444 KB] g=330, 4311 evaluated, 4310 expanded
[t=0.242496s, 29444 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.242504s, 29444 KB] g=331, 4312 evaluated, 4311 expanded
[t=0.242522s, 29444 KB] Solution found!
[t=0.242544s, 29444 KB] Actual search time: 0.191045s
unstack b11 b4 (1)
stack b11 b2 (1)
unstack b12 b13 (1)
stack b12 b29 (1)
unstack b3 b32 (1)
stack b3 b11 (1)
unstack b32 b27 (1)
stack b32 b12 (1)
unstack b13 b7 (1)
put-down b13 (1)
unstack b27 b20 (1)
put-down b27 (1)
unstack b20 b1 (1)
put-down b20 (1)
unstack b1 b24 (1)
put-down b1 (1)
unstack b3 b11 (1)
put-down b3 (1)
unstack b11 b2 (1)
put-down b11 (1)
unstack b2 b26 (1)
put-down b2 (1)
unstack b26 b6 (1)
put-down b26 (1)
unstack b4 b30 (1)
put-down b4 (1)
unstack b6 b10 (1)
stack b6 b13 (1)
unstack b10 b22 (1)
put-down b10 (1)
unstack b22 b31 (1)
put-down b22 (1)
unstack b31 b5 (1)
stack b31 b24 (1)
pick-up b5 (1)
stack b5 b7 (1)
unstack b8 b23 (1)
stack b8 b10 (1)
unstack b23 b19 (1)
put-down b23 (1)
pick-up b19 (1)
stack b19 b30 (1)
pick-up b20 (1)
stack b20 b31 (1)
pick-up b26 (1)
stack b26 b23 (1)
pick-up b27 (1)
stack b27 b8 (1)
unstack b5 b7 (1)
put-down b5 (1)
unstack b7 b18 (1)
put-down b7 (1)
unstack b18 b17 (1)
put-down b18 (1)
unstack b17 b9 (1)
stack b17 b6 (1)
pick-up b5 (1)
stack b5 b7 (1)
pick-up b9 (1)
stack b9 b27 (1)
unstack b19 b30 (1)
put-down b19 (1)
unstack b30 b15 (1)
put-down b30 (1)
unstack b15 b16 (1)
put-down b15 (1)
unstack b16 b21 (1)
stack b16 b17 (1)
pick-up b21 (1)
stack b21 b26 (1)
pick-up b30 (1)
stack b30 b15 (1)
pick-up b11 (1)
stack b11 b2 (1)
pick-up b18 (1)
stack b18 b3 (1)
pick-up b19 (1)
stack b19 b30 (1)
unstack b11 b2 (1)
put-down b11 (1)
unstack b18 b3 (1)
put-down b18 (1)
unstack b32 b12 (1)
put-down b32 (1)
unstack b12 b29 (1)
put-down b12 (1)
unstack b29 b14 (1)
put-down b29 (1)
unstack b14 b25 (1)
stack b14 b20 (1)
unstack b25 b28 (1)
stack b25 b9 (1)
pick-up b1 (1)
stack b1 b14 (1)
pick-up b22 (1)
stack b22 b1 (1)
pick-up b2 (1)
stack b2 b22 (1)
pick-up b11 (1)
stack b11 b2 (1)
pick-up b3 (1)
stack b3 b11 (1)
pick-up b18 (1)
stack b18 b3 (1)
pick-up b28 (1)
stack b28 b18 (1)
pick-up b32 (1)
stack b32 b12 (1)
pick-up b4 (1)
stack b4 b25 (1)
pick-up b29 (1)
stack b29 b4 (1)
unstack b32 b12 (1)
put-down b32 (1)
pick-up b12 (1)
stack b12 b29 (1)
pick-up b32 (1)
stack b32 b12 (1)
unstack b16 b17 (1)
put-down b16 (1)
unstack b17 b6 (1)
put-down b17 (1)
pick-up b16 (1)
stack b16 b17 (1)
unstack b6 b13 (1)
put-down b6 (1)
pick-up b13 (1)
stack b13 b28 (1)
pick-up b6 (1)
stack b6 b13 (1)
unstack b16 b17 (1)
put-down b16 (1)
pick-up b17 (1)
stack b17 b6 (1)
pick-up b16 (1)
stack b16 b17 (1)
unstack b32 b12 (1)
put-down b32 (1)
unstack b12 b29 (1)
put-down b12 (1)
pick-up b32 (1)
stack b32 b12 (1)
unstack b29 b4 (1)
put-down b29 (1)
unstack b4 b25 (1)
put-down b4 (1)
pick-up b29 (1)
stack b29 b4 (1)
unstack b32 b12 (1)
put-down b32 (1)
pick-up b12 (1)
stack b12 b29 (1)
pick-up b32 (1)
stack b32 b12 (1)
unstack b25 b9 (1)
put-down b25 (1)
unstack b9 b27 (1)
put-down b9 (1)
pick-up b25 (1)
stack b25 b9 (1)
unstack b27 b8 (1)
put-down b27 (1)
unstack b8 b10 (1)
put-down b8 (1)
pick-up b10 (1)
stack b10 b21 (1)
pick-up b8 (1)
stack b8 b10 (1)
pick-up b27 (1)
stack b27 b8 (1)
unstack b25 b9 (1)
put-down b25 (1)
pick-up b9 (1)
stack b9 b27 (1)
pick-up b25 (1)
stack b25 b9 (1)
unstack b32 b12 (1)
put-down b32 (1)
unstack b12 b29 (1)
put-down b12 (1)
pick-up b32 (1)
stack b32 b12 (1)
unstack b29 b4 (1)
put-down b29 (1)
pick-up b4 (1)
stack b4 b25 (1)
pick-up b29 (1)
stack b29 b4 (1)
unstack b32 b12 (1)
put-down b32 (1)
pick-up b12 (1)
stack b12 b29 (1)
pick-up b32 (1)
stack b32 b12 (1)
unstack b16 b17 (1)
put-down b16 (1)
unstack b17 b6 (1)
put-down b17 (1)
unstack b6 b13 (1)
put-down b6 (1)
pick-up b17 (1)
stack b17 b6 (1)
pick-up b16 (1)
stack b16 b17 (1)
unstack b13 b28 (1)
put-down b13 (1)
unstack b28 b18 (1)
put-down b28 (1)
pick-up b13 (1)
stack b13 b28 (1)
unstack b18 b3 (1)
put-down b18 (1)
unstack b3 b11 (1)
put-down b3 (1)
pick-up b18 (1)
stack b18 b3 (1)
unstack b13 b28 (1)
put-down b13 (1)
pick-up b28 (1)
stack b28 b18 (1)
pick-up b13 (1)
stack b13 b28 (1)
unstack b16 b17 (1)
put-down b16 (1)
unstack b17 b6 (1)
put-down b17 (1)
pick-up b16 (1)
stack b16 b17 (1)
pick-up b6 (1)
stack b6 b13 (1)
unstack b16 b17 (1)
put-down b16 (1)
pick-up b17 (1)
stack b17 b6 (1)
pick-up b16 (1)
stack b16 b17 (1)
unstack b11 b2 (1)
put-down b11 (1)
unstack b2 b22 (1)
put-down b2 (1)
pick-up b11 (1)
stack b11 b2 (1)
unstack b22 b1 (1)
put-down b22 (1)
unstack b1 b14 (1)
put-down b1 (1)
pick-up b22 (1)
stack b22 b1 (1)
unstack b11 b2 (1)
put-down b11 (1)
pick-up b2 (1)
stack b2 b22 (1)
pick-up b11 (1)
stack b11 b2 (1)
unstack b14 b20 (1)
put-down b14 (1)
unstack b20 b31 (1)
put-down b20 (1)
pick-up b14 (1)
stack b14 b20 (1)
unstack b31 b24 (1)
put-down b31 (1)
pick-up b24 (1)
stack b24 b19 (1)
pick-up b31 (1)
stack b31 b24 (1)
unstack b14 b20 (1)
put-down b14 (1)
pick-up b20 (1)
stack b20 b31 (1)
pick-up b14 (1)
stack b14 b20 (1)
unstack b11 b2 (1)
put-down b11 (1)
unstack b2 b22 (1)
put-down b2 (1)
pick-up b11 (1)
stack b11 b2 (1)
unstack b22 b1 (1)
put-down b22 (1)
pick-up b1 (1)
stack b1 b14 (1)
pick-up b22 (1)
stack b22 b1 (1)
unstack b11 b2 (1)
put-down b11 (1)
pick-up b2 (1)
stack b2 b22 (1)
pick-up b11 (1)
stack b11 b2 (1)
unstack b16 b17 (1)
put-down b16 (1)
unstack b17 b6 (1)
put-down b17 (1)
unstack b6 b13 (1)
put-down b6 (1)
pick-up b17 (1)
stack b17 b6 (1)
pick-up b16 (1)
stack b16 b17 (1)
unstack b13 b28 (1)
put-down b13 (1)
unstack b28 b18 (1)
put-down b28 (1)
pick-up b13 (1)
stack b13 b28 (1)
unstack b18 b3 (1)
put-down b18 (1)
pick-up b3 (1)
stack b3 b11 (1)
pick-up b18 (1)
stack b18 b3 (1)
unstack b13 b28 (1)
put-down b13 (1)
pick-up b28 (1)
stack b28 b18 (1)
pick-up b13 (1)
stack b13 b28 (1)
unstack b16 b17 (1)
put-down b16 (1)
unstack b17 b6 (1)
put-down b17 (1)
pick-up b16 (1)
stack b16 b17 (1)
pick-up b6 (1)
stack b6 b13 (1)
unstack b16 b17 (1)
put-down b16 (1)
pick-up b17 (1)
stack b17 b6 (1)
pick-up b16 (1)
stack b16 b17 (1)
[t=0.242557s, 29444 KB] Plan length: 332 step(s).
[t=0.242557s, 29444 KB] Plan cost: 332
[t=0.242557s, 29444 KB] Expanded 4312 state(s).
[t=0.242557s, 29444 KB] Reopened 0 state(s).
[t=0.242557s, 29444 KB] Evaluated 4313 state(s).
[t=0.242557s, 29444 KB] Evaluations: 8626
[t=0.242557s, 29444 KB] Generated 42929 state(s).
[t=0.242557s, 29444 KB] Dead ends: 0 state(s).
[t=0.242557s, 29444 KB] Number of registered states: 4313
[t=0.242557s, 29444 KB] Int hash set load factor: 4313/8192 = 0.526489
[t=0.242557s, 29444 KB] Int hash set resizes: 13
[t=0.242557s, 29444 KB] Search time: 0.191095s
[t=0.242557s, 29444 KB] Total time: 0.242557s
Solution found.
Peak memory: 29444 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.48s
