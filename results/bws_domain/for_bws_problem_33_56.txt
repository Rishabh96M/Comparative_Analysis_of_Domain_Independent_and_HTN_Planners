INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_33/bws_problem_33_56.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.003s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.010s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.023s wall-clock]
3500 relevant atoms
2343 auxiliary atoms
5843 final queue length
10272 total queue pushes
Completing instantiation... [0.040s CPU, 0.048s wall-clock]
Instantiating: [0.070s CPU, 0.072s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.002s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
34 uncovered facts
Choosing groups: [0.000s CPU, 0.003s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.020s CPU, 0.012s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.001s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.002s wall-clock]
Translating task: [0.050s CPU, 0.057s wall-clock]
3234 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
66 propositions removed
Detecting unreachable propositions: [0.030s CPU, 0.028s wall-clock]
Reordering and filtering variables...
67 of 67 variables necessary.
34 of 67 mutex groups necessary.
2178 of 2178 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.015s wall-clock]
Translator variables: 67
Translator derived variables: 0
Translator facts: 1190
Translator goal facts: 28
Translator mutex groups: 34
Translator total mutex groups size: 1156
Translator operators: 2178
Translator axioms: 0
Translator task size: 18677
Translator peak memory: 43260 KB
Writing output... [0.010s CPU, 0.011s wall-clock]
Done! [0.200s CPU, 0.204s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=3.6624e-05s, 24488 KB] reading input...
[t=0.00718088s, 26928 KB] done reading input!
[t=0.00827428s, 27324 KB] Initializing landmark count heuristic...
[t=0.00832563s, 27324 KB] Generating landmark graph...
[t=0.00853765s, 27456 KB] Building a landmark graph with reasonable orders.
[t=0.00873632s, 27588 KB] Initializing Exploration...
[t=0.00982115s, 28188 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.042423s, 29112 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.04254s, 29112 KB] Landmarks generation time: 0.0340055s
[t=0.0425822s, 29112 KB] Discovered 146 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0425984s, 29112 KB] 561 edges
[t=0.0426081s, 29112 KB] approx. reasonable orders
[t=0.0440255s, 29112 KB] approx. obedient reasonable orders
[t=0.044112s, 29112 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0441256s, 29112 KB] Landmarks generation time: 0.0358091s
[t=0.0441532s, 29112 KB] Discovered 146 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0441649s, 29112 KB] 567 edges
[t=0.0441769s, 29112 KB] Landmark graph generation time: 0.0358611s
[t=0.0441888s, 29112 KB] Landmark graph contains 146 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0442078s, 29112 KB] Landmark graph contains 567 orderings.
[t=0.0448906s, 29112 KB] Simplifying 8646 unary operators... done! [6534 unary operators]
[t=0.047161s, 29176 KB] time to simplify: 0.00231345s
[t=0.0473364s, 29176 KB] Initializing additive heuristic...
[t=0.0473576s, 29176 KB] Initializing FF heuristic...
[t=0.0474263s, 29176 KB] Building successor generator...done!
[t=0.047822s, 29176 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0478308s, 29176 KB] time for successor generation creation: 0.00036765s
[t=0.0478478s, 29176 KB] Variables: 67
[t=0.047856s, 29176 KB] FactPairs: 1190
[t=0.0478641s, 29176 KB] Bytes per state: 32
[t=0.0479595s, 29176 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0479946s, 29176 KB] 66 initial landmarks, 28 goal landmarks
[t=0.0480892s, 29176 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 80
[t=0.048103s, 29176 KB] New best heuristic value for ff(transform = adapt_costs(one)): 59
[t=0.0481117s, 29176 KB] g=0, 1 evaluated, 0 expanded
[t=0.0481281s, 29176 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 80
[t=0.0481442s, 29176 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 59
[t=0.0484598s, 29176 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 79
[t=0.0484706s, 29176 KB] g=1, 7 evaluated, 6 expanded
[t=0.0485296s, 29176 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 78
[t=0.0485385s, 29176 KB] New best heuristic value for ff(transform = adapt_costs(one)): 58
[t=0.0485464s, 29176 KB] g=2, 8 evaluated, 7 expanded
[t=0.0488819s, 29176 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 76
[t=0.0488909s, 29176 KB] New best heuristic value for ff(transform = adapt_costs(one)): 57
[t=0.0488986s, 29176 KB] g=4, 15 evaluated, 14 expanded
[t=0.0489569s, 29176 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 75
[t=0.048966s, 29176 KB] g=5, 16 evaluated, 15 expanded
[t=0.0496445s, 29176 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 73
[t=0.0496572s, 29176 KB] New best heuristic value for ff(transform = adapt_costs(one)): 56
[t=0.0496662s, 29176 KB] g=8, 30 evaluated, 29 expanded
[t=0.0500883s, 29176 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 70
[t=0.0501033s, 29176 KB] New best heuristic value for ff(transform = adapt_costs(one)): 55
[t=0.0501125s, 29176 KB] g=10, 38 evaluated, 37 expanded
[t=0.0505046s, 29176 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 69
[t=0.0505223s, 29176 KB] g=12, 46 evaluated, 45 expanded
[t=0.0514003s, 29176 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 68
[t=0.0514125s, 29176 KB] New best heuristic value for ff(transform = adapt_costs(one)): 54
[t=0.0514309s, 29176 KB] g=14, 64 evaluated, 63 expanded
[t=0.05184s, 29176 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 67
[t=0.0518584s, 29176 KB] g=16, 72 evaluated, 71 expanded
[t=0.0523023s, 29176 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 66
[t=0.052331s, 29176 KB] New best heuristic value for ff(transform = adapt_costs(one)): 53
[t=0.052339s, 29176 KB] g=18, 81 evaluated, 80 expanded
[t=0.0528487s, 29176 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 65
[t=0.0528587s, 29176 KB] g=20, 91 evaluated, 90 expanded
[t=0.0533487s, 29176 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 62
[t=0.0533576s, 29176 KB] New best heuristic value for ff(transform = adapt_costs(one)): 52
[t=0.0533652s, 29176 KB] g=22, 101 evaluated, 100 expanded
[t=0.0538626s, 29176 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 61
[t=0.0538728s, 29176 KB] g=24, 111 evaluated, 110 expanded
[t=0.0539855s, 29176 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 60
[t=0.053995s, 29176 KB] New best heuristic value for ff(transform = adapt_costs(one)): 51
[t=0.054012s, 29176 KB] g=24, 113 evaluated, 112 expanded
[t=0.0544537s, 29176 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.054463s, 29176 KB] g=26, 122 evaluated, 121 expanded
[t=0.0554944s, 29176 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 58
[t=0.0555245s, 29176 KB] g=29, 142 evaluated, 141 expanded
[t=0.0557433s, 29176 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.055757s, 29176 KB] g=30, 144 evaluated, 143 expanded
[t=0.0564005s, 29176 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0564202s, 29176 KB] g=32, 155 evaluated, 154 expanded
[t=0.0565819s, 29176 KB] New best heuristic value for ff(transform = adapt_costs(one)): 50
[t=0.0565919s, 29176 KB] g=32, 158 evaluated, 157 expanded
[t=0.0575466s, 29176 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0575567s, 29176 KB] g=34, 177 evaluated, 176 expanded
[t=0.0576713s, 29176 KB] New best heuristic value for ff(transform = adapt_costs(one)): 49
[t=0.0576805s, 29176 KB] g=34, 179 evaluated, 178 expanded
[t=0.058621s, 29176 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0586329s, 29176 KB] g=36, 198 evaluated, 197 expanded
[t=0.0592039s, 29176 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0592147s, 29176 KB] New best heuristic value for ff(transform = adapt_costs(one)): 47
[t=0.0592227s, 29176 KB] g=38, 209 evaluated, 208 expanded
[t=0.0597442s, 29176 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0597537s, 29176 KB] New best heuristic value for ff(transform = adapt_costs(one)): 46
[t=0.0597614s, 29176 KB] g=40, 220 evaluated, 219 expanded
[t=0.0602002s, 29176 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0602099s, 29176 KB] New best heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0602234s, 29176 KB] g=42, 229 evaluated, 228 expanded
[t=0.0611916s, 29176 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0612047s, 29176 KB] g=46, 249 evaluated, 248 expanded
[t=0.0616969s, 29176 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0617069s, 29176 KB] New best heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.0617166s, 29176 KB] g=48, 259 evaluated, 258 expanded
[t=0.0621717s, 29176 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0621931s, 29176 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0622014s, 29176 KB] g=50, 268 evaluated, 267 expanded
[t=0.0626507s, 29176 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0626599s, 29176 KB] g=53, 277 evaluated, 276 expanded
[t=0.0627704s, 29176 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0627793s, 29176 KB] g=54, 279 evaluated, 278 expanded
[t=0.0632092s, 29176 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0632205s, 29176 KB] g=56, 287 evaluated, 286 expanded
[t=0.0635613s, 29176 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0635717s, 29176 KB] g=58, 294 evaluated, 293 expanded
[t=0.0638638s, 29176 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0638778s, 29176 KB] g=60, 300 evaluated, 299 expanded
[t=0.0670073s, 29176 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0670679s, 29176 KB] g=66, 363 evaluated, 362 expanded
[t=0.0675355s, 29176 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0675448s, 29176 KB] g=68, 372 evaluated, 371 expanded
[t=0.0680432s, 29176 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0680525s, 29176 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0680605s, 29176 KB] g=70, 382 evaluated, 381 expanded
[t=0.0685127s, 29176 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0685216s, 29176 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0685292s, 29176 KB] g=72, 391 evaluated, 390 expanded
[t=0.0689652s, 29176 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0689749s, 29176 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0689829s, 29176 KB] g=74, 400 evaluated, 399 expanded
[t=0.0693837s, 29176 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0693937s, 29176 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0694021s, 29176 KB] g=76, 408 evaluated, 407 expanded
[t=0.0697498s, 29176 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0697593s, 29176 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0697675s, 29176 KB] g=78, 415 evaluated, 414 expanded
[t=0.0784183s, 29176 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0784569s, 29176 KB] g=88, 581 evaluated, 580 expanded
[t=0.0790523s, 29176 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0790877s, 29176 KB] g=90, 592 evaluated, 591 expanded
[t=0.0799354s, 29176 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0799454s, 29176 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0799534s, 29176 KB] g=92, 609 evaluated, 608 expanded
[t=0.0804962s, 29176 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.080506s, 29176 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0805156s, 29176 KB] g=94, 620 evaluated, 619 expanded
[t=0.0809876s, 29176 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0809983s, 29176 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0810065s, 29176 KB] g=96, 630 evaluated, 629 expanded
[t=0.0813776s, 29176 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0813876s, 29176 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.081397s, 29176 KB] g=98, 638 evaluated, 637 expanded
[t=0.081737s, 29176 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0817491s, 29176 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0817604s, 29176 KB] g=100, 645 evaluated, 644 expanded
[t=0.0824035s, 29176 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0824211s, 29176 KB] g=103, 658 evaluated, 657 expanded
[t=0.0824796s, 29176 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0824894s, 29176 KB] g=104, 659 evaluated, 658 expanded
[t=0.0827857s, 29176 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0827987s, 29176 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0828072s, 29176 KB] g=106, 665 evaluated, 664 expanded
[t=0.0903634s, 29176 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0904231s, 29176 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0904335s, 29176 KB] g=116, 820 evaluated, 819 expanded
[t=0.0973819s, 29176 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0974182s, 29176 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0974276s, 29176 KB] g=128, 963 evaluated, 962 expanded
[t=0.0984298s, 29176 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0984418s, 29176 KB] g=132, 984 evaluated, 983 expanded
[t=0.0986765s, 29176 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0986858s, 29176 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0986935s, 29176 KB] g=134, 989 evaluated, 988 expanded
[t=0.104348s, 29176 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.104432s, 29176 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.104442s, 29176 KB] g=146, 1099 evaluated, 1098 expanded
[t=0.105214s, 29176 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.105226s, 29176 KB] g=150, 1115 evaluated, 1114 expanded
[t=0.105583s, 29176 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.105706s, 29176 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.105727s, 29176 KB] g=152, 1119 evaluated, 1118 expanded
[t=0.112825s, 29176 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.113068s, 29176 KB] g=166, 1233 evaluated, 1232 expanded
[t=0.113442s, 29176 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.113491s, 29176 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.113506s, 29176 KB] g=168, 1237 evaluated, 1236 expanded
[t=0.114227s, 29176 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.114276s, 29176 KB] g=172, 1246 evaluated, 1245 expanded
[t=0.114522s, 29176 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.114542s, 29176 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.114557s, 29176 KB] g=174, 1249 evaluated, 1248 expanded
[t=0.133071s, 29176 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.133182s, 29176 KB] g=212, 1639 evaluated, 1638 expanded
[t=0.133506s, 29176 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.13353s, 29176 KB] g=216, 1648 evaluated, 1647 expanded
[t=0.133629s, 29176 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.133639s, 29176 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.133647s, 29176 KB] g=218, 1651 evaluated, 1650 expanded
[t=0.1347s, 29176 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.134715s, 29176 KB] g=234, 1689 evaluated, 1688 expanded
[t=0.134972s, 29176 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.134984s, 29176 KB] g=242, 1700 evaluated, 1699 expanded
[t=0.135015s, 29176 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.135029s, 29176 KB] g=243, 1701 evaluated, 1700 expanded
[t=0.135054s, 29176 KB] Solution found!
[t=0.135083s, 29176 KB] Actual search time: 0.0870861s
unstack b8 b17 (1)
stack b8 b30 (1)
unstack b17 b20 (1)
stack b17 b21 (1)
unstack b20 b5 (1)
put-down b20 (1)
unstack b22 b2 (1)
stack b22 b27 (1)
unstack b24 b19 (1)
stack b24 b22 (1)
unstack b5 b32 (1)
put-down b5 (1)
pick-up b20 (1)
stack b20 b32 (1)
unstack b9 b6 (1)
put-down b9 (1)
unstack b6 b31 (1)
put-down b6 (1)
unstack b31 b18 (1)
put-down b31 (1)
unstack b18 b26 (1)
stack b18 b31 (1)
pick-up b5 (1)
stack b5 b18 (1)
unstack b26 b11 (1)
put-down b26 (1)
unstack b20 b32 (1)
put-down b20 (1)
unstack b32 b13 (1)
stack b32 b5 (1)
unstack b13 b12 (1)
put-down b13 (1)
unstack b12 b33 (1)
stack b12 b17 (1)
pick-up b19 (1)
stack b19 b12 (1)
pick-up b33 (1)
stack b33 b6 (1)
pick-up b2 (1)
stack b2 b13 (1)
pick-up b20 (1)
stack b20 b32 (1)
unstack b8 b30 (1)
put-down b8 (1)
unstack b30 b4 (1)
put-down b30 (1)
unstack b4 b23 (1)
put-down b4 (1)
pick-up b8 (1)
stack b8 b30 (1)
unstack b11 b16 (1)
put-down b11 (1)
unstack b16 b10 (1)
stack b16 b2 (1)
pick-up b10 (1)
stack b10 b9 (1)
pick-up b11 (1)
stack b11 b16 (1)
unstack b10 b9 (1)
put-down b10 (1)
unstack b24 b22 (1)
put-down b24 (1)
unstack b22 b27 (1)
put-down b22 (1)
unstack b27 b25 (1)
stack b27 b10 (1)
unstack b25 b14 (1)
stack b25 b23 (1)
unstack b14 b29 (1)
stack b14 b26 (1)
unstack b29 b1 (1)
stack b29 b14 (1)
pick-up b22 (1)
stack b22 b27 (1)
pick-up b9 (1)
stack b9 b29 (1)
pick-up b24 (1)
stack b24 b22 (1)
unstack b19 b12 (1)
put-down b19 (1)
unstack b12 b17 (1)
put-down b12 (1)
unstack b17 b21 (1)
put-down b17 (1)
unstack b21 b28 (1)
put-down b21 (1)
unstack b28 b3 (1)
stack b28 b24 (1)
unstack b3 b15 (1)
put-down b3 (1)
unstack b15 b7 (1)
stack b15 b25 (1)
pick-up b1 (1)
stack b1 b15 (1)
pick-up b21 (1)
stack b21 b7 (1)
pick-up b12 (1)
stack b12 b17 (1)
pick-up b19 (1)
stack b19 b12 (1)
unstack b21 b7 (1)
put-down b21 (1)
pick-up b7 (1)
stack b7 b28 (1)
pick-up b21 (1)
stack b21 b7 (1)
unstack b19 b12 (1)
put-down b19 (1)
unstack b12 b17 (1)
put-down b12 (1)
pick-up b17 (1)
stack b17 b21 (1)
pick-up b12 (1)
stack b12 b17 (1)
pick-up b19 (1)
stack b19 b12 (1)
unstack b11 b16 (1)
put-down b11 (1)
unstack b16 b2 (1)
put-down b16 (1)
pick-up b11 (1)
stack b11 b16 (1)
unstack b2 b13 (1)
put-down b2 (1)
pick-up b13 (1)
stack b13 b3 (1)
pick-up b2 (1)
stack b2 b13 (1)
unstack b11 b16 (1)
put-down b11 (1)
pick-up b16 (1)
stack b16 b2 (1)
pick-up b11 (1)
stack b11 b16 (1)
unstack b9 b29 (1)
put-down b9 (1)
unstack b29 b14 (1)
put-down b29 (1)
pick-up b9 (1)
stack b9 b29 (1)
unstack b14 b26 (1)
put-down b14 (1)
pick-up b26 (1)
stack b26 b1 (1)
pick-up b14 (1)
stack b14 b26 (1)
unstack b9 b29 (1)
put-down b9 (1)
pick-up b29 (1)
stack b29 b14 (1)
pick-up b9 (1)
stack b9 b29 (1)
unstack b20 b32 (1)
put-down b20 (1)
unstack b32 b5 (1)
put-down b32 (1)
pick-up b20 (1)
stack b20 b32 (1)
unstack b5 b18 (1)
put-down b5 (1)
unstack b18 b31 (1)
put-down b18 (1)
pick-up b31 (1)
stack b31 b11 (1)
pick-up b18 (1)
stack b18 b31 (1)
pick-up b5 (1)
stack b5 b18 (1)
unstack b20 b32 (1)
put-down b20 (1)
pick-up b32 (1)
stack b32 b5 (1)
pick-up b20 (1)
stack b20 b32 (1)
unstack b19 b12 (1)
put-down b19 (1)
unstack b12 b17 (1)
put-down b12 (1)
pick-up b19 (1)
stack b19 b12 (1)
unstack b17 b21 (1)
put-down b17 (1)
unstack b21 b7 (1)
put-down b21 (1)
unstack b7 b28 (1)
put-down b7 (1)
pick-up b21 (1)
stack b21 b7 (1)
pick-up b17 (1)
stack b17 b21 (1)
unstack b19 b12 (1)
put-down b19 (1)
pick-up b12 (1)
stack b12 b17 (1)
pick-up b19 (1)
stack b19 b12 (1)
unstack b28 b24 (1)
put-down b28 (1)
unstack b24 b22 (1)
put-down b24 (1)
pick-up b28 (1)
stack b28 b24 (1)
unstack b22 b27 (1)
put-down b22 (1)
unstack b27 b10 (1)
put-down b27 (1)
pick-up b10 (1)
stack b10 b9 (1)
pick-up b27 (1)
stack b27 b10 (1)
pick-up b22 (1)
stack b22 b27 (1)
unstack b28 b24 (1)
put-down b28 (1)
pick-up b24 (1)
stack b24 b22 (1)
pick-up b28 (1)
stack b28 b24 (1)
unstack b19 b12 (1)
put-down b19 (1)
unstack b12 b17 (1)
put-down b12 (1)
unstack b17 b21 (1)
put-down b17 (1)
pick-up b12 (1)
stack b12 b17 (1)
pick-up b19 (1)
stack b19 b12 (1)
unstack b21 b7 (1)
put-down b21 (1)
pick-up b7 (1)
stack b7 b28 (1)
pick-up b21 (1)
stack b21 b7 (1)
unstack b19 b12 (1)
put-down b19 (1)
unstack b12 b17 (1)
put-down b12 (1)
pick-up b17 (1)
stack b17 b21 (1)
pick-up b12 (1)
stack b12 b17 (1)
pick-up b19 (1)
stack b19 b12 (1)
[t=0.135096s, 29176 KB] Plan length: 244 step(s).
[t=0.135096s, 29176 KB] Plan cost: 244
[t=0.135096s, 29176 KB] Expanded 1701 state(s).
[t=0.135096s, 29176 KB] Reopened 0 state(s).
[t=0.135096s, 29176 KB] Evaluated 1702 state(s).
[t=0.135096s, 29176 KB] Evaluations: 3404
[t=0.135096s, 29176 KB] Generated 18571 state(s).
[t=0.135096s, 29176 KB] Dead ends: 0 state(s).
[t=0.135096s, 29176 KB] Number of registered states: 1702
[t=0.135096s, 29176 KB] Int hash set load factor: 1702/2048 = 0.831055
[t=0.135096s, 29176 KB] Int hash set resizes: 11
[t=0.135096s, 29176 KB] Search time: 0.0871367s
[t=0.135096s, 29176 KB] Total time: 0.135096s
Solution found.
Peak memory: 29176 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.38s
