INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_22/bws_problem_22_96.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.010s wall-clock]
1608 relevant atoms
1078 auxiliary atoms
2686 final queue length
4670 total queue pushes
Completing instantiation... [0.020s CPU, 0.016s wall-clock]
Instantiating: [0.030s CPU, 0.028s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.003s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.002s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
23 uncovered facts
Choosing groups: [0.010s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.009s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.026s wall-clock]
1430 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
44 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.014s wall-clock]
Reordering and filtering variables...
45 of 45 variables necessary.
23 of 45 mutex groups necessary.
968 of 968 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.008s wall-clock]
Translator variables: 45
Translator derived variables: 0
Translator facts: 552
Translator goal facts: 15
Translator mutex groups: 23
Translator total mutex groups size: 529
Translator operators: 968
Translator axioms: 0
Translator task size: 8335
Translator peak memory: 36976 KB
Writing output... [0.000s CPU, 0.005s wall-clock]
Done! [0.090s CPU, 0.094s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=4.243e-05s, 24488 KB] reading input...
[t=0.00378992s, 25340 KB] done reading input!
[t=0.00514938s, 25736 KB] Initializing landmark count heuristic...
[t=0.00524905s, 25736 KB] Generating landmark graph...
[t=0.00552756s, 25736 KB] Building a landmark graph with reasonable orders.
[t=0.00566447s, 25736 KB] Initializing Exploration...
[t=0.00621992s, 26000 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0158387s, 26532 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0159071s, 26532 KB] Landmarks generation time: 0.0103624s
[t=0.0159204s, 26532 KB] Discovered 89 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0159367s, 26532 KB] 342 edges
[t=0.015946s, 26532 KB] approx. reasonable orders
[t=0.0159554s, 26532 KB] approx. obedient reasonable orders
[t=0.0159772s, 26532 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0159859s, 26532 KB] Landmarks generation time: 0.0107254s
[t=0.0159952s, 26532 KB] Discovered 89 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0160039s, 26532 KB] 342 edges
[t=0.0160121s, 26532 KB] Landmark graph generation time: 0.0107702s
[t=0.0160207s, 26532 KB] Landmark graph contains 89 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0160286s, 26532 KB] Landmark graph contains 342 orderings.
[t=0.0163452s, 26532 KB] Simplifying 3828 unary operators... done! [2904 unary operators]
[t=0.0171997s, 26532 KB] time to simplify: 0.00091372s
[t=0.0173189s, 26532 KB] Initializing additive heuristic...
[t=0.0173324s, 26532 KB] Initializing FF heuristic...
[t=0.0173848s, 26532 KB] Building successor generator...done!
[t=0.017577s, 26532 KB] peak memory difference for successor generator creation: 0 KB
[t=0.017586s, 26532 KB] time for successor generation creation: 0.000159762s
[t=0.0175974s, 26532 KB] Variables: 45
[t=0.0176054s, 26532 KB] FactPairs: 552
[t=0.0176132s, 26532 KB] Bytes per state: 20
[t=0.0176963s, 26532 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0177281s, 26532 KB] 43 initial landmarks, 15 goal landmarks
[t=0.0177908s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0178003s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0178087s, 26532 KB] g=0, 1 evaluated, 0 expanded
[t=0.0178217s, 26532 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0178302s, 26532 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0179177s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0179268s, 26532 KB] g=1, 4 evaluated, 3 expanded
[t=0.0179608s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0179693s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0179778s, 26532 KB] g=2, 5 evaluated, 4 expanded
[t=0.0180846s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0180939s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0181023s, 26532 KB] g=4, 9 evaluated, 8 expanded
[t=0.0182819s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0183036s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0183122s, 26532 KB] g=6, 14 evaluated, 13 expanded
[t=0.0184217s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0184307s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0184388s, 26532 KB] g=8, 18 evaluated, 17 expanded
[t=0.0185447s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0185538s, 26532 KB] g=10, 22 evaluated, 21 expanded
[t=0.018661s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0186699s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0186782s, 26532 KB] g=12, 26 evaluated, 25 expanded
[t=0.0188123s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0188265s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0188351s, 26532 KB] g=14, 31 evaluated, 30 expanded
[t=0.0189476s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0189566s, 26532 KB] g=15, 35 evaluated, 34 expanded
[t=0.0190927s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0191018s, 26532 KB] g=17, 40 evaluated, 39 expanded
[t=0.0191375s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0191464s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0191547s, 26532 KB] g=18, 41 evaluated, 40 expanded
[t=0.0193173s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.019326s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0193347s, 26532 KB] g=20, 47 evaluated, 46 expanded
[t=0.019467s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0194761s, 26532 KB] g=21, 52 evaluated, 51 expanded
[t=0.0195106s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0195191s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0195274s, 26532 KB] g=22, 53 evaluated, 52 expanded
[t=0.0196562s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.019665s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0196732s, 26532 KB] g=24, 58 evaluated, 57 expanded
[t=0.0198029s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0198119s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0198208s, 26532 KB] g=26, 63 evaluated, 62 expanded
[t=0.0199572s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0199661s, 26532 KB] g=29, 68 evaluated, 67 expanded
[t=0.0202717s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0202898s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0202978s, 26532 KB] g=30, 80 evaluated, 79 expanded
[t=0.0204315s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0204399s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0204476s, 26532 KB] g=32, 85 evaluated, 84 expanded
[t=0.0205493s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0205577s, 26532 KB] g=34, 89 evaluated, 88 expanded
[t=0.0206662s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0206762s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0206843s, 26532 KB] g=36, 93 evaluated, 92 expanded
[t=0.0208182s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.020827s, 26532 KB] g=38, 98 evaluated, 97 expanded
[t=0.0209216s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0209306s, 26532 KB] g=39, 102 evaluated, 101 expanded
[t=0.0209645s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0209732s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.020981s, 26532 KB] g=40, 103 evaluated, 102 expanded
[t=0.0211199s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0211283s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0211362s, 26532 KB] g=42, 109 evaluated, 108 expanded
[t=0.0212705s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0212792s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0212871s, 26532 KB] g=44, 115 evaluated, 114 expanded
[t=0.0213965s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0214056s, 26532 KB] g=47, 120 evaluated, 119 expanded
[t=0.0214336s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0214419s, 26532 KB] g=48, 121 evaluated, 120 expanded
[t=0.0215109s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0215192s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0215269s, 26532 KB] g=50, 124 evaluated, 123 expanded
[t=0.0216452s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.021658s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0216676s, 26532 KB] g=54, 129 evaluated, 128 expanded
[t=0.0217339s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0217424s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0217509s, 26532 KB] g=56, 132 evaluated, 131 expanded
[t=0.0219434s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0219565s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0219739s, 26532 KB] g=64, 143 evaluated, 142 expanded
[t=0.022s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0220088s, 26532 KB] g=64, 144 evaluated, 143 expanded
[t=0.0220264s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0220351s, 26532 KB] g=65, 145 evaluated, 144 expanded
[t=0.0220501s, 26532 KB] Solution found!
[t=0.0220609s, 26532 KB] Actual search time: 0.00433018s
unstack b16 b14 (1)
stack b16 b5 (1)
unstack b14 b13 (1)
put-down b14 (1)
unstack b15 b4 (1)
put-down b15 (1)
unstack b19 b1 (1)
put-down b19 (1)
unstack b13 b8 (1)
put-down b13 (1)
unstack b8 b11 (1)
put-down b8 (1)
unstack b11 b21 (1)
put-down b11 (1)
unstack b21 b6 (1)
put-down b21 (1)
unstack b6 b20 (1)
stack b6 b4 (1)
unstack b20 b22 (1)
stack b20 b14 (1)
unstack b22 b2 (1)
stack b22 b13 (1)
pick-up b2 (1)
stack b2 b11 (1)
pick-up b21 (1)
stack b21 b20 (1)
unstack b16 b5 (1)
put-down b16 (1)
unstack b5 b3 (1)
stack b5 b8 (1)
pick-up b16 (1)
stack b16 b5 (1)
unstack b3 b18 (1)
put-down b3 (1)
unstack b18 b9 (1)
stack b18 b2 (1)
unstack b9 b7 (1)
put-down b9 (1)
unstack b7 b17 (1)
stack b7 b19 (1)
pick-up b17 (1)
stack b17 b18 (1)
pick-up b9 (1)
stack b9 b17 (1)
unstack b1 b10 (1)
put-down b1 (1)
unstack b10 b12 (1)
stack b10 b3 (1)
pick-up b1 (1)
stack b1 b10 (1)
unstack b22 b13 (1)
put-down b22 (1)
pick-up b13 (1)
stack b13 b9 (1)
pick-up b22 (1)
stack b22 b13 (1)
unstack b1 b10 (1)
put-down b1 (1)
unstack b10 b3 (1)
put-down b10 (1)
pick-up b3 (1)
stack b3 b12 (1)
pick-up b10 (1)
stack b10 b3 (1)
pick-up b1 (1)
stack b1 b10 (1)
[t=0.0220707s, 26532 KB] Plan length: 66 step(s).
[t=0.0220707s, 26532 KB] Plan cost: 66
[t=0.0220707s, 26532 KB] Expanded 145 state(s).
[t=0.0220707s, 26532 KB] Reopened 0 state(s).
[t=0.0220707s, 26532 KB] Evaluated 146 state(s).
[t=0.0220707s, 26532 KB] Evaluations: 292
[t=0.0220707s, 26532 KB] Generated 1420 state(s).
[t=0.0220707s, 26532 KB] Dead ends: 0 state(s).
[t=0.0220707s, 26532 KB] Number of registered states: 146
[t=0.0220707s, 26532 KB] Int hash set load factor: 146/256 = 0.570312
[t=0.0220707s, 26532 KB] Int hash set resizes: 8
[t=0.0220707s, 26532 KB] Search time: 0.00437481s
[t=0.0220707s, 26532 KB] Total time: 0.0220707s
Solution found.
Peak memory: 26532 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.17s
