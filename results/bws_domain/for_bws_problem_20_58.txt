INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_20/bws_problem_20_58.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.008s wall-clock]
1342 relevant atoms
900 auxiliary atoms
2242 final queue length
3888 total queue pushes
Completing instantiation... [0.020s CPU, 0.015s wall-clock]
Instantiating: [0.030s CPU, 0.025s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
21 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.006s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.020s wall-clock]
1180 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
40 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.010s wall-clock]
Reordering and filtering variables...
41 of 41 variables necessary.
21 of 41 mutex groups necessary.
800 of 800 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.005s wall-clock]
Translator variables: 41
Translator derived variables: 0
Translator facts: 462
Translator goal facts: 14
Translator mutex groups: 21
Translator total mutex groups size: 441
Translator operators: 800
Translator axioms: 0
Translator task size: 6898
Translator peak memory: 35944 KB
Writing output... [0.000s CPU, 0.004s wall-clock]
Done! [0.070s CPU, 0.075s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.2677e-05s, 24488 KB] reading input...
[t=0.00234127s, 25180 KB] done reading input!
[t=0.00335666s, 25444 KB] Initializing landmark count heuristic...
[t=0.00340347s, 25444 KB] Generating landmark graph...
[t=0.00347013s, 25576 KB] Building a landmark graph with reasonable orders.
[t=0.00352535s, 25576 KB] Initializing Exploration...
[t=0.00379252s, 25744 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0106864s, 26140 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0107946s, 26140 KB] Landmarks generation time: 0.00732419s
[t=0.0108084s, 26140 KB] Discovered 82 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.010827s, 26140 KB] 245 edges
[t=0.0108381s, 26140 KB] approx. reasonable orders
[t=0.0127091s, 26140 KB] approx. obedient reasonable orders
[t=0.0128196s, 26140 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0128301s, 26140 KB] Landmarks generation time: 0.00942417s
[t=0.0128398s, 26140 KB] Discovered 82 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0128475s, 26140 KB] 291 edges
[t=0.0128556s, 26140 KB] Landmark graph generation time: 0.00945922s
[t=0.0128641s, 26140 KB] Landmark graph contains 82 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0128717s, 26140 KB] Landmark graph contains 291 orderings.
[t=0.0131415s, 26140 KB] Simplifying 3160 unary operators... done! [2400 unary operators]
[t=0.0138849s, 26140 KB] time to simplify: 0.000793108s
[t=0.013985s, 26140 KB] Initializing additive heuristic...
[t=0.0139978s, 26140 KB] Initializing FF heuristic...
[t=0.0140657s, 26140 KB] Building successor generator...done!
[t=0.0142382s, 26140 KB] peak memory difference for successor generator creation: 0 KB
[t=0.014247s, 26140 KB] time for successor generation creation: 0.000141236s
[t=0.0142583s, 26140 KB] Variables: 41
[t=0.0142666s, 26140 KB] FactPairs: 462
[t=0.0142744s, 26140 KB] Bytes per state: 16
[t=0.0143629s, 26140 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.014396s, 26140 KB] 40 initial landmarks, 14 goal landmarks
[t=0.0144416s, 26140 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0144515s, 26140 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0144598s, 26140 KB] g=0, 1 evaluated, 0 expanded
[t=0.0144741s, 26140 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0144827s, 26140 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0146369s, 26140 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0146635s, 26140 KB] g=1, 7 evaluated, 6 expanded
[t=0.0147202s, 26140 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0147294s, 26140 KB] g=2, 9 evaluated, 8 expanded
[t=0.0149138s, 26140 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0149229s, 26140 KB] g=3, 17 evaluated, 16 expanded
[t=0.0150231s, 26140 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0150322s, 26140 KB] g=4, 21 evaluated, 20 expanded
[t=0.0151678s, 26140 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0151766s, 26140 KB] g=5, 27 evaluated, 26 expanded
[t=0.0153148s, 26140 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.015324s, 26140 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0153322s, 26140 KB] g=6, 33 evaluated, 32 expanded
[t=0.0153851s, 26140 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0154046s, 26140 KB] g=7, 35 evaluated, 34 expanded
[t=0.015598s, 26140 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0156142s, 26140 KB] g=9, 43 evaluated, 42 expanded
[t=0.0158527s, 26140 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0158624s, 26140 KB] g=12, 53 evaluated, 52 expanded
[t=0.0159173s, 26140 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0159267s, 26140 KB] g=12, 55 evaluated, 54 expanded
[t=0.0161318s, 26140 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.016146s, 26140 KB] g=14, 64 evaluated, 63 expanded
[t=0.0162719s, 26140 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0162814s, 26140 KB] g=14, 69 evaluated, 68 expanded
[t=0.0164639s, 26140 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.016473s, 26140 KB] g=16, 77 evaluated, 76 expanded
[t=0.0166743s, 26140 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0166837s, 26140 KB] g=16, 86 evaluated, 85 expanded
[t=0.0168106s, 26140 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0168225s, 26140 KB] g=18, 91 evaluated, 90 expanded
[t=0.0170693s, 26140 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0170788s, 26140 KB] g=18, 102 evaluated, 101 expanded
[t=0.0171122s, 26140 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0171214s, 26140 KB] g=20, 103 evaluated, 102 expanded
[t=0.0174357s, 26140 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0174453s, 26140 KB] g=20, 117 evaluated, 116 expanded
[t=0.0175454s, 26140 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0175548s, 26140 KB] g=21, 121 evaluated, 120 expanded
[t=0.0180893s, 26140 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0181047s, 26140 KB] g=24, 144 evaluated, 143 expanded
[t=0.0183443s, 26140 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0183606s, 26140 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0183703s, 26140 KB] g=26, 155 evaluated, 154 expanded
[t=0.018604s, 26140 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0186145s, 26140 KB] g=28, 166 evaluated, 165 expanded
[t=0.0186844s, 26140 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0187077s, 26140 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0187171s, 26140 KB] g=28, 169 evaluated, 168 expanded
[t=0.0189239s, 26140 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0189382s, 26140 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0189468s, 26140 KB] g=30, 179 evaluated, 178 expanded
[t=0.0191443s, 26140 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0191553s, 26140 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0191644s, 26140 KB] g=32, 189 evaluated, 188 expanded
[t=0.0193523s, 26140 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0193632s, 26140 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0193716s, 26140 KB] g=34, 199 evaluated, 198 expanded
[t=0.0195355s, 26140 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0195654s, 26140 KB] g=36, 208 evaluated, 207 expanded
[t=0.0196134s, 26140 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0196255s, 26140 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.019634s, 26140 KB] g=36, 210 evaluated, 209 expanded
[t=0.0197802s, 26140 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0197941s, 26140 KB] g=38, 218 evaluated, 217 expanded
[t=0.0198454s, 26140 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0198578s, 26140 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0198667s, 26140 KB] g=38, 220 evaluated, 219 expanded
[t=0.0199889s, 26140 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.02s, 26140 KB] g=40, 227 evaluated, 226 expanded
[t=0.0200448s, 26140 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0200546s, 26140 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0200637s, 26140 KB] g=40, 229 evaluated, 228 expanded
[t=0.0201659s, 26140 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0201778s, 26140 KB] g=42, 235 evaluated, 234 expanded
[t=0.020301s, 26140 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0203215s, 26140 KB] g=44, 241 evaluated, 240 expanded
[t=0.0204047s, 26140 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0204142s, 26140 KB] g=46, 245 evaluated, 244 expanded
[t=0.0204594s, 26140 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0204688s, 26140 KB] g=42, 247 evaluated, 246 expanded
[t=0.0206052s, 26140 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0206144s, 26140 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0206228s, 26140 KB] g=44, 255 evaluated, 254 expanded
[t=0.0206457s, 26140 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0206545s, 26140 KB] g=45, 256 evaluated, 255 expanded
[t=0.0206936s, 26140 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0207023s, 26140 KB] g=46, 257 evaluated, 256 expanded
[t=0.0207447s, 26140 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0207536s, 26140 KB] g=48, 259 evaluated, 258 expanded
[t=0.0207758s, 26140 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0207851s, 26140 KB] g=49, 260 evaluated, 259 expanded
[t=0.0208375s, 26140 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0208472s, 26140 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0208557s, 26140 KB] g=52, 263 evaluated, 262 expanded
[t=0.0208727s, 26140 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0208821s, 26140 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.02089s, 26140 KB] g=53, 264 evaluated, 263 expanded
[t=0.0209046s, 26140 KB] Solution found!
[t=0.0209321s, 26140 KB] Actual search time: 0.00653332s
unstack b15 b8 (1)
put-down b15 (1)
unstack b17 b9 (1)
put-down b17 (1)
pick-up b5 (1)
stack b5 b15 (1)
unstack b7 b20 (1)
put-down b7 (1)
unstack b9 b4 (1)
put-down b9 (1)
unstack b20 b18 (1)
put-down b20 (1)
unstack b4 b3 (1)
put-down b4 (1)
unstack b3 b2 (1)
stack b3 b11 (1)
unstack b2 b16 (1)
stack b2 b3 (1)
unstack b6 b10 (1)
put-down b6 (1)
unstack b10 b12 (1)
put-down b10 (1)
unstack b12 b14 (1)
stack b12 b2 (1)
unstack b16 b1 (1)
put-down b16 (1)
pick-up b7 (1)
stack b7 b12 (1)
unstack b18 b13 (1)
put-down b18 (1)
unstack b13 b19 (1)
put-down b13 (1)
pick-up b1 (1)
stack b1 b16 (1)
pick-up b8 (1)
stack b8 b18 (1)
pick-up b9 (1)
stack b9 b1 (1)
pick-up b14 (1)
stack b14 b17 (1)
pick-up b6 (1)
stack b6 b14 (1)
pick-up b19 (1)
stack b19 b6 (1)
pick-up b10 (1)
stack b10 b20 (1)
pick-up b4 (1)
stack b4 b19 (1)
unstack b10 b20 (1)
put-down b10 (1)
pick-up b20 (1)
stack b20 b4 (1)
pick-up b10 (1)
stack b10 b20 (1)
[t=0.0209419s, 26140 KB] Plan length: 54 step(s).
[t=0.0209419s, 26140 KB] Plan cost: 54
[t=0.0209419s, 26140 KB] Expanded 264 state(s).
[t=0.0209419s, 26140 KB] Reopened 0 state(s).
[t=0.0209419s, 26140 KB] Evaluated 265 state(s).
[t=0.0209419s, 26140 KB] Evaluations: 530
[t=0.0209419s, 26140 KB] Generated 2921 state(s).
[t=0.0209419s, 26140 KB] Dead ends: 0 state(s).
[t=0.0209419s, 26140 KB] Number of registered states: 265
[t=0.0209419s, 26140 KB] Int hash set load factor: 265/512 = 0.517578
[t=0.0209419s, 26140 KB] Int hash set resizes: 9
[t=0.0209419s, 26140 KB] Search time: 0.00657964s
[t=0.0209419s, 26140 KB] Total time: 0.0209419s
Solution found.
Peak memory: 26140 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.15s
