INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_30/bws_problem_30_6.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.017s wall-clock]
2912 relevant atoms
1950 auxiliary atoms
4862 final queue length
8528 total queue pushes
Completing instantiation... [0.020s CPU, 0.031s wall-clock]
Instantiating: [0.040s CPU, 0.050s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.002s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
31 uncovered facts
Choosing groups: [0.010s CPU, 0.002s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.001s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.002s wall-clock]
Translating task: [0.050s CPU, 0.053s wall-clock]
2670 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
60 propositions removed
Detecting unreachable propositions: [0.030s CPU, 0.022s wall-clock]
Reordering and filtering variables...
61 of 61 variables necessary.
31 of 61 mutex groups necessary.
1800 of 1800 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.012s wall-clock]
Translator variables: 61
Translator derived variables: 0
Translator facts: 992
Translator goal facts: 26
Translator mutex groups: 31
Translator total mutex groups size: 961
Translator operators: 1800
Translator axioms: 0
Translator task size: 15450
Translator peak memory: 41336 KB
Writing output... [0.010s CPU, 0.009s wall-clock]
Done! [0.150s CPU, 0.163s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.9393e-05s, 24488 KB] reading input...
[t=0.00560083s, 26364 KB] done reading input!
[t=0.0065049s, 26760 KB] Initializing landmark count heuristic...
[t=0.00654192s, 26760 KB] Generating landmark graph...
[t=0.00664672s, 26892 KB] Building a landmark graph with reasonable orders.
[t=0.00674314s, 27024 KB] Initializing Exploration...
[t=0.0072565s, 27316 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0346868s, 28508 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0347995s, 28508 KB] Landmarks generation time: 0.0281609s
[t=0.0348247s, 28508 KB] Discovered 134 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0348445s, 28508 KB] 1071 edges
[t=0.0348565s, 28508 KB] approx. reasonable orders
[t=0.03744s, 28508 KB] approx. obedient reasonable orders
[t=0.0375043s, 28508 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0375172s, 28508 KB] Landmarks generation time: 0.0309696s
[t=0.0375292s, 28508 KB] Discovered 134 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.037541s, 28508 KB] 1095 edges
[t=0.037575s, 28508 KB] Landmark graph generation time: 0.0310437s
[t=0.037588s, 28508 KB] Landmark graph contains 134 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0376357s, 28508 KB] Landmark graph contains 1095 orderings.
[t=0.0382504s, 28536 KB] Simplifying 7140 unary operators... done! [5400 unary operators]
[t=0.0400789s, 28536 KB] time to simplify: 0.00184733s
[t=0.0402685s, 28536 KB] Initializing additive heuristic...
[t=0.0402919s, 28536 KB] Initializing FF heuristic...
[t=0.0403435s, 28536 KB] Building successor generator...done!
[t=0.040662s, 28536 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0406718s, 28536 KB] time for successor generation creation: 0.00029143s
[t=0.0406859s, 28536 KB] Variables: 61
[t=0.0406943s, 28536 KB] FactPairs: 992
[t=0.0407026s, 28536 KB] Bytes per state: 24
[t=0.04079s, 28536 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0408225s, 28536 KB] 60 initial landmarks, 26 goal landmarks
[t=0.0409132s, 28536 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 74
[t=0.0409232s, 28536 KB] New best heuristic value for ff(transform = adapt_costs(one)): 54
[t=0.0409316s, 28536 KB] g=0, 1 evaluated, 0 expanded
[t=0.0409454s, 28536 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 74
[t=0.0409543s, 28536 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 54
[t=0.0412678s, 28536 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 73
[t=0.0412793s, 28536 KB] New best heuristic value for ff(transform = adapt_costs(one)): 53
[t=0.0412909s, 28536 KB] g=2, 8 evaluated, 7 expanded
[t=0.0415528s, 28536 KB] New best heuristic value for ff(transform = adapt_costs(one)): 52
[t=0.0415621s, 28536 KB] g=4, 14 evaluated, 13 expanded
[t=0.0416134s, 28536 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 72
[t=0.0416228s, 28536 KB] g=4, 15 evaluated, 14 expanded
[t=0.0418407s, 28536 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 71
[t=0.0418496s, 28536 KB] g=5, 20 evaluated, 19 expanded
[t=0.042482s, 28536 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 70
[t=0.0424919s, 28536 KB] g=8, 35 evaluated, 34 expanded
[t=0.0432515s, 28536 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 69
[t=0.0432691s, 28536 KB] g=10, 51 evaluated, 50 expanded
[t=0.0436626s, 28536 KB] New best heuristic value for ff(transform = adapt_costs(one)): 50
[t=0.043674s, 28536 KB] g=8, 60 evaluated, 59 expanded
[t=0.044094s, 28536 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 68
[t=0.0441049s, 28536 KB] g=12, 70 evaluated, 69 expanded
[t=0.044906s, 28536 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 67
[t=0.0449237s, 28536 KB] g=14, 89 evaluated, 88 expanded
[t=0.0454762s, 28536 KB] New best heuristic value for ff(transform = adapt_costs(one)): 49
[t=0.0455043s, 28536 KB] g=12, 100 evaluated, 99 expanded
[t=0.0458787s, 28536 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 66
[t=0.0459085s, 28536 KB] g=16, 109 evaluated, 108 expanded
[t=0.0466004s, 28536 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 65
[t=0.0466138s, 28536 KB] g=18, 125 evaluated, 124 expanded
[t=0.0472881s, 28536 KB] New best heuristic value for ff(transform = adapt_costs(one)): 48
[t=0.0473009s, 28536 KB] g=18, 141 evaluated, 140 expanded
[t=0.0478062s, 28536 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 63
[t=0.0478248s, 28536 KB] New best heuristic value for ff(transform = adapt_costs(one)): 47
[t=0.0478344s, 28536 KB] g=20, 151 evaluated, 150 expanded
[t=0.0480908s, 28536 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 62
[t=0.0481007s, 28536 KB] g=22, 157 evaluated, 156 expanded
[t=0.0490177s, 28536 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 61
[t=0.0490423s, 28536 KB] g=26, 179 evaluated, 178 expanded
[t=0.0494718s, 28536 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 58
[t=0.0494948s, 28536 KB] g=28, 189 evaluated, 188 expanded
[t=0.0501186s, 28536 KB] New best heuristic value for ff(transform = adapt_costs(one)): 46
[t=0.0501324s, 28536 KB] g=28, 204 evaluated, 203 expanded
[t=0.0502214s, 28536 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 57
[t=0.0502749s, 28536 KB] g=30, 205 evaluated, 204 expanded
[t=0.0508199s, 28536 KB] New best heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0508305s, 28536 KB] g=30, 218 evaluated, 217 expanded
[t=0.0512193s, 28536 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0512301s, 28536 KB] g=32, 227 evaluated, 226 expanded
[t=0.0513295s, 28536 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.051339s, 28536 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0513594s, 28536 KB] g=32, 229 evaluated, 228 expanded
[t=0.0516725s, 28536 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.051694s, 28536 KB] g=34, 236 evaluated, 235 expanded
[t=0.0517882s, 28536 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0517977s, 28536 KB] g=34, 238 evaluated, 237 expanded
[t=0.0522232s, 28536 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0522339s, 28536 KB] g=36, 248 evaluated, 247 expanded
[t=0.0525779s, 28536 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0525882s, 28536 KB] g=38, 256 evaluated, 255 expanded
[t=0.0531092s, 28536 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0531238s, 28536 KB] g=40, 265 evaluated, 264 expanded
[t=0.053264s, 28536 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0532733s, 28536 KB] g=40, 268 evaluated, 267 expanded
[t=0.053748s, 28536 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0537574s, 28536 KB] g=42, 279 evaluated, 278 expanded
[t=0.0540628s, 28536 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0540721s, 28536 KB] g=43, 286 evaluated, 285 expanded
[t=0.0545505s, 28536 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0545675s, 28536 KB] g=45, 297 evaluated, 296 expanded
[t=0.0546675s, 28536 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0546769s, 28536 KB] g=46, 299 evaluated, 298 expanded
[t=0.0555606s, 28536 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0555749s, 28536 KB] g=48, 318 evaluated, 317 expanded
[t=0.0559161s, 28536 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0559259s, 28536 KB] g=49, 326 evaluated, 325 expanded
[t=0.0561123s, 28536 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0561214s, 28536 KB] g=50, 330 evaluated, 329 expanded
[t=0.0571482s, 28536 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0572096s, 28536 KB] g=52, 344 evaluated, 343 expanded
[t=0.0576002s, 28536 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0576722s, 28536 KB] g=52, 350 evaluated, 349 expanded
[t=0.0583678s, 28536 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.058385s, 28536 KB] g=54, 365 evaluated, 364 expanded
[t=0.0586265s, 28536 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0586481s, 28536 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0586632s, 28536 KB] g=54, 368 evaluated, 367 expanded
[t=0.0594594s, 28536 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0594817s, 28536 KB] g=56, 379 evaluated, 378 expanded
[t=0.0596285s, 28536 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.059639s, 28536 KB] g=56, 382 evaluated, 381 expanded
[t=0.0604701s, 28536 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0604858s, 28536 KB] g=58, 400 evaluated, 399 expanded
[t=0.0605868s, 28536 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.060597s, 28536 KB] g=56, 402 evaluated, 401 expanded
[t=0.0607815s, 28536 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0607914s, 28536 KB] g=57, 406 evaluated, 405 expanded
[t=0.0611034s, 28536 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0611174s, 28536 KB] g=60, 413 evaluated, 412 expanded
[t=0.0617745s, 28536 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0617969s, 28536 KB] g=62, 428 evaluated, 427 expanded
[t=0.0620675s, 28536 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0620841s, 28536 KB] g=60, 434 evaluated, 433 expanded
[t=0.0631055s, 28536 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0631329s, 28536 KB] g=62, 455 evaluated, 454 expanded
[t=0.0639969s, 28536 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0640129s, 28536 KB] g=64, 474 evaluated, 473 expanded
[t=0.0644674s, 28536 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0644777s, 28536 KB] g=66, 485 evaluated, 484 expanded
[t=0.0647212s, 28536 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0647302s, 28536 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0647458s, 28536 KB] g=66, 491 evaluated, 490 expanded
[t=0.0652139s, 28536 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0652276s, 28536 KB] g=68, 502 evaluated, 501 expanded
[t=0.0655531s, 28536 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0655627s, 28536 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0655704s, 28536 KB] g=68, 510 evaluated, 509 expanded
[t=0.0659898s, 28536 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0659997s, 28536 KB] g=70, 520 evaluated, 519 expanded
[t=0.0662496s, 28536 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.066259s, 28536 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0662673s, 28536 KB] g=70, 526 evaluated, 525 expanded
[t=0.0663539s, 28536 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0663632s, 28536 KB] g=71, 528 evaluated, 527 expanded
[t=0.0664115s, 28536 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0664203s, 28536 KB] g=72, 529 evaluated, 528 expanded
[t=0.0668537s, 28536 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0668637s, 28536 KB] g=74, 540 evaluated, 539 expanded
[t=0.0669128s, 28536 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0669218s, 28536 KB] g=75, 541 evaluated, 540 expanded
[t=0.0670853s, 28536 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0670946s, 28536 KB] g=76, 545 evaluated, 544 expanded
[t=0.0671406s, 28536 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0671494s, 28536 KB] g=77, 546 evaluated, 545 expanded
[t=0.0675127s, 28536 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0675281s, 28536 KB] g=78, 554 evaluated, 553 expanded
[t=0.067612s, 28536 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0676214s, 28536 KB] g=79, 556 evaluated, 555 expanded
[t=0.0679897s, 28536 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0679996s, 28536 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.068011s, 28536 KB] g=82, 566 evaluated, 565 expanded
[t=0.068056s, 28536 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0680653s, 28536 KB] g=83, 567 evaluated, 566 expanded
[t=0.0681114s, 28536 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0681207s, 28536 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0681287s, 28536 KB] g=84, 568 evaluated, 567 expanded
[t=0.0705519s, 28536 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0705694s, 28536 KB] g=96, 635 evaluated, 634 expanded
[t=0.0711362s, 28536 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0711469s, 28536 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0711559s, 28536 KB] g=102, 649 evaluated, 648 expanded
[t=0.0721732s, 28536 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0721859s, 28536 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0721947s, 28536 KB] g=114, 674 evaluated, 673 expanded
[t=0.0725923s, 28536 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0726512s, 28536 KB] g=118, 683 evaluated, 682 expanded
[t=0.0728558s, 28536 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0728673s, 28536 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.072876s, 28536 KB] g=120, 686 evaluated, 685 expanded
[t=0.0765417s, 28536 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0765581s, 28536 KB] g=150, 797 evaluated, 796 expanded
[t=0.0768194s, 28536 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.076829s, 28536 KB] g=154, 806 evaluated, 805 expanded
[t=0.0769205s, 28536 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0769299s, 28536 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0769385s, 28536 KB] g=156, 809 evaluated, 808 expanded
[t=0.0773104s, 28536 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0773281s, 28536 KB] g=168, 825 evaluated, 824 expanded
[t=0.0774115s, 28536 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0774203s, 28536 KB] g=172, 829 evaluated, 828 expanded
[t=0.0774414s, 28536 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0774556s, 28536 KB] g=173, 830 evaluated, 829 expanded
[t=0.0774858s, 28536 KB] Solution found!
[t=0.0775012s, 28536 KB] Actual search time: 0.0366769s
unstack b7 b10 (1)
put-down b7 (1)
unstack b10 b16 (1)
stack b10 b5 (1)
unstack b13 b19 (1)
put-down b13 (1)
pick-up b19 (1)
stack b19 b22 (1)
unstack b16 b25 (1)
put-down b16 (1)
pick-up b20 (1)
stack b20 b25 (1)
unstack b2 b9 (1)
put-down b2 (1)
unstack b9 b3 (1)
put-down b9 (1)
unstack b3 b4 (1)
put-down b3 (1)
pick-up b4 (1)
stack b4 b13 (1)
unstack b20 b25 (1)
put-down b20 (1)
unstack b25 b30 (1)
put-down b25 (1)
pick-up b20 (1)
stack b20 b25 (1)
unstack b30 b23 (1)
stack b30 b4 (1)
unstack b23 b12 (1)
put-down b23 (1)
pick-up b16 (1)
stack b16 b23 (1)
unstack b12 b14 (1)
put-down b12 (1)
unstack b10 b5 (1)
put-down b10 (1)
unstack b14 b17 (1)
stack b14 b7 (1)
pick-up b2 (1)
stack b2 b12 (1)
unstack b17 b15 (1)
put-down b17 (1)
unstack b15 b6 (1)
put-down b15 (1)
unstack b6 b21 (1)
stack b6 b30 (1)
unstack b21 b18 (1)
stack b21 b20 (1)
unstack b18 b24 (1)
put-down b18 (1)
unstack b24 b27 (1)
stack b24 b19 (1)
unstack b27 b29 (1)
stack b27 b3 (1)
unstack b29 b11 (1)
stack b29 b2 (1)
unstack b11 b8 (1)
put-down b11 (1)
pick-up b18 (1)
stack b18 b29 (1)
unstack b8 b1 (1)
stack b8 b21 (1)
unstack b1 b26 (1)
stack b1 b27 (1)
unstack b26 b28 (1)
stack b26 b14 (1)
pick-up b28 (1)
stack b28 b1 (1)
pick-up b5 (1)
stack b5 b28 (1)
pick-up b11 (1)
stack b11 b9 (1)
pick-up b10 (1)
stack b10 b5 (1)
pick-up b15 (1)
stack b15 b10 (1)
pick-up b17 (1)
stack b17 b15 (1)
unstack b11 b9 (1)
put-down b11 (1)
pick-up b9 (1)
stack b9 b24 (1)
pick-up b11 (1)
stack b11 b9 (1)
unstack b18 b29 (1)
put-down b18 (1)
unstack b29 b2 (1)
put-down b29 (1)
pick-up b18 (1)
stack b18 b29 (1)
unstack b2 b12 (1)
put-down b2 (1)
pick-up b12 (1)
stack b12 b8 (1)
pick-up b2 (1)
stack b2 b12 (1)
unstack b18 b29 (1)
put-down b18 (1)
pick-up b29 (1)
stack b29 b2 (1)
pick-up b18 (1)
stack b18 b29 (1)
unstack b6 b30 (1)
put-down b6 (1)
unstack b30 b4 (1)
put-down b30 (1)
pick-up b6 (1)
stack b6 b30 (1)
unstack b4 b13 (1)
put-down b4 (1)
pick-up b13 (1)
stack b13 b26 (1)
pick-up b4 (1)
stack b4 b13 (1)
unstack b6 b30 (1)
put-down b6 (1)
pick-up b30 (1)
stack b30 b4 (1)
pick-up b6 (1)
stack b6 b30 (1)
unstack b18 b29 (1)
put-down b18 (1)
unstack b29 b2 (1)
put-down b29 (1)
pick-up b18 (1)
stack b18 b29 (1)
unstack b2 b12 (1)
put-down b2 (1)
unstack b12 b8 (1)
put-down b12 (1)
pick-up b2 (1)
stack b2 b12 (1)
unstack b18 b29 (1)
put-down b18 (1)
pick-up b29 (1)
stack b29 b2 (1)
pick-up b18 (1)
stack b18 b29 (1)
unstack b8 b21 (1)
put-down b8 (1)
unstack b21 b20 (1)
put-down b21 (1)
pick-up b8 (1)
stack b8 b21 (1)
unstack b20 b25 (1)
put-down b20 (1)
pick-up b25 (1)
stack b25 b17 (1)
pick-up b20 (1)
stack b20 b25 (1)
unstack b8 b21 (1)
put-down b8 (1)
pick-up b21 (1)
stack b21 b20 (1)
pick-up b8 (1)
stack b8 b21 (1)
unstack b18 b29 (1)
put-down b18 (1)
unstack b29 b2 (1)
put-down b29 (1)
pick-up b18 (1)
stack b18 b29 (1)
unstack b2 b12 (1)
put-down b2 (1)
pick-up b12 (1)
stack b12 b8 (1)
pick-up b2 (1)
stack b2 b12 (1)
unstack b18 b29 (1)
put-down b18 (1)
pick-up b29 (1)
stack b29 b2 (1)
pick-up b18 (1)
stack b18 b29 (1)
[t=0.0775117s, 28536 KB] Plan length: 174 step(s).
[t=0.0775117s, 28536 KB] Plan cost: 174
[t=0.0775117s, 28536 KB] Expanded 830 state(s).
[t=0.0775117s, 28536 KB] Reopened 0 state(s).
[t=0.0775117s, 28536 KB] Evaluated 831 state(s).
[t=0.0775117s, 28536 KB] Evaluations: 1662
[t=0.0775117s, 28536 KB] Generated 8723 state(s).
[t=0.0775117s, 28536 KB] Dead ends: 0 state(s).
[t=0.0775117s, 28536 KB] Number of registered states: 831
[t=0.0775117s, 28536 KB] Int hash set load factor: 831/1024 = 0.811523
[t=0.0775117s, 28536 KB] Int hash set resizes: 10
[t=0.0775117s, 28536 KB] Search time: 0.036722s
[t=0.0775117s, 28536 KB] Total time: 0.0775117s
Solution found.
Peak memory: 28536 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.29s
