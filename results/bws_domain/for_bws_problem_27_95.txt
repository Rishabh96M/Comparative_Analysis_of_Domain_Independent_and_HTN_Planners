INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_27/bws_problem_27_95.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.015s wall-clock]
2378 relevant atoms
1593 auxiliary atoms
3971 final queue length
6947 total queue pushes
Completing instantiation... [0.030s CPU, 0.025s wall-clock]
Instantiating: [0.040s CPU, 0.041s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.002s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
28 uncovered facts
Choosing groups: [0.000s CPU, 0.002s wall-clock]
Building translation key... [0.010s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.009s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.001s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.002s wall-clock]
Translating task: [0.040s CPU, 0.048s wall-clock]
2160 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
54 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.019s wall-clock]
Reordering and filtering variables...
55 of 55 variables necessary.
28 of 55 mutex groups necessary.
1458 of 1458 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.009s wall-clock]
Translator variables: 55
Translator derived variables: 0
Translator facts: 812
Translator goal facts: 22
Translator mutex groups: 28
Translator total mutex groups size: 784
Translator operators: 1458
Translator axioms: 0
Translator task size: 12527
Translator peak memory: 39796 KB
Writing output... [0.010s CPU, 0.008s wall-clock]
Done! [0.130s CPU, 0.140s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.6016e-05s, 24488 KB] reading input...
[t=0.00451433s, 25936 KB] done reading input!
[t=0.0056327s, 26332 KB] Initializing landmark count heuristic...
[t=0.00566323s, 26332 KB] Generating landmark graph...
[t=0.00574376s, 26332 KB] Building a landmark graph with reasonable orders.
[t=0.00582754s, 26464 KB] Initializing Exploration...
[t=0.00620992s, 26732 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0233538s, 27392 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0234532s, 27392 KB] Landmarks generation time: 0.0177192s
[t=0.0234761s, 27392 KB] Discovered 115 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0234932s, 27392 KB] 408 edges
[t=0.0235037s, 27392 KB] approx. reasonable orders
[t=0.025078s, 27392 KB] approx. obedient reasonable orders
[t=0.0251057s, 27392 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0251147s, 27392 KB] Landmarks generation time: 0.0194455s
[t=0.0251237s, 27392 KB] Discovered 115 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0251314s, 27392 KB] 433 edges
[t=0.0251456s, 27392 KB] Landmark graph generation time: 0.0194895s
[t=0.0251545s, 27392 KB] Landmark graph contains 115 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0251626s, 27392 KB] Landmark graph contains 433 orderings.
[t=0.0257593s, 27416 KB] Simplifying 5778 unary operators... done! [4374 unary operators]
[t=0.0270682s, 27548 KB] time to simplify: 0.00139827s
[t=0.027241s, 27548 KB] Initializing additive heuristic...
[t=0.0272587s, 27548 KB] Initializing FF heuristic...
[t=0.0273098s, 27548 KB] Building successor generator...done!
[t=0.0275653s, 27548 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0275739s, 27548 KB] time for successor generation creation: 0.000222209s
[t=0.0275874s, 27548 KB] Variables: 55
[t=0.0275957s, 27548 KB] FactPairs: 812
[t=0.0276035s, 27548 KB] Bytes per state: 24
[t=0.0276941s, 27548 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0277255s, 27548 KB] 54 initial landmarks, 22 goal landmarks
[t=0.0277884s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 61
[t=0.0277992s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 46
[t=0.0278074s, 27548 KB] g=0, 1 evaluated, 0 expanded
[t=0.0278212s, 27548 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 61
[t=0.0278296s, 27548 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 46
[t=0.0279528s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 60
[t=0.0279637s, 27548 KB] g=1, 4 evaluated, 3 expanded
[t=0.0284107s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.0284214s, 27548 KB] g=4, 17 evaluated, 16 expanded
[t=0.0287739s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 58
[t=0.0287835s, 27548 KB] g=6, 27 evaluated, 26 expanded
[t=0.0294452s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0294631s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0294718s, 27548 KB] g=8, 44 evaluated, 43 expanded
[t=0.0297839s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0297969s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.029805s, 27548 KB] g=10, 53 evaluated, 52 expanded
[t=0.0301511s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0301647s, 27548 KB] g=12, 63 evaluated, 62 expanded
[t=0.0302477s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0302581s, 27548 KB] g=12, 65 evaluated, 64 expanded
[t=0.0308026s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0308238s, 27548 KB] g=14, 81 evaluated, 80 expanded
[t=0.0309348s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0309444s, 27548 KB] g=14, 84 evaluated, 83 expanded
[t=0.0314854s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0315068s, 27548 KB] g=16, 100 evaluated, 99 expanded
[t=0.0320398s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0320494s, 27548 KB] g=18, 116 evaluated, 115 expanded
[t=0.0323799s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0323898s, 27548 KB] g=20, 126 evaluated, 125 expanded
[t=0.0330653s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0330763s, 27548 KB] g=22, 146 evaluated, 145 expanded
[t=0.0335748s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0335889s, 27548 KB] g=24, 161 evaluated, 160 expanded
[t=0.0341772s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0342s, 27548 KB] g=26, 178 evaluated, 177 expanded
[t=0.034648s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0346614s, 27548 KB] g=28, 191 evaluated, 190 expanded
[t=0.0349784s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0349903s, 27548 KB] g=30, 200 evaluated, 199 expanded
[t=0.0355762s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0355909s, 27548 KB] g=32, 217 evaluated, 216 expanded
[t=0.0362489s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0363173s, 27548 KB] g=30, 224 evaluated, 223 expanded
[t=0.0371716s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0372085s, 27548 KB] g=32, 240 evaluated, 239 expanded
[t=0.0380247s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0380358s, 27548 KB] g=34, 262 evaluated, 261 expanded
[t=0.0383454s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0383552s, 27548 KB] g=36, 271 evaluated, 270 expanded
[t=0.0383999s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0384088s, 27548 KB] g=34, 272 evaluated, 271 expanded
[t=0.0390825s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0391069s, 27548 KB] g=38, 289 evaluated, 288 expanded
[t=0.0391852s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0391945s, 27548 KB] g=36, 291 evaluated, 290 expanded
[t=0.0398128s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0398222s, 27548 KB] g=38, 310 evaluated, 309 expanded
[t=0.0429065s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.042923s, 27548 KB] g=40, 405 evaluated, 404 expanded
[t=0.0434457s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0434552s, 27548 KB] g=42, 420 evaluated, 419 expanded
[t=0.0436857s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0436947s, 27548 KB] g=44, 427 evaluated, 426 expanded
[t=0.0458372s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0458503s, 27548 KB] g=50, 493 evaluated, 492 expanded
[t=0.046208s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0462397s, 27548 KB] g=52, 503 evaluated, 502 expanded
[t=0.0466331s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0466471s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.046655s, 27548 KB] g=54, 513 evaluated, 512 expanded
[t=0.0469787s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0470017s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0470099s, 27548 KB] g=56, 522 evaluated, 521 expanded
[t=0.0473564s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0473658s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0473736s, 27548 KB] g=58, 532 evaluated, 531 expanded
[t=0.0477345s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0477531s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0477611s, 27548 KB] g=60, 542 evaluated, 541 expanded
[t=0.0481321s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0481571s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.048165s, 27548 KB] g=62, 551 evaluated, 550 expanded
[t=0.048449s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.04846s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0484689s, 27548 KB] g=64, 559 evaluated, 558 expanded
[t=0.0486803s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0486895s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.048698s, 27548 KB] g=66, 565 evaluated, 564 expanded
[t=0.0489111s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0489201s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.048928s, 27548 KB] g=68, 571 evaluated, 570 expanded
[t=0.0493533s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0493637s, 27548 KB] g=71, 583 evaluated, 582 expanded
[t=0.0494085s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0494171s, 27548 KB] g=72, 584 evaluated, 583 expanded
[t=0.0495901s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0495991s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0496073s, 27548 KB] g=74, 589 evaluated, 588 expanded
[t=0.0498032s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0498123s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0498203s, 27548 KB] g=76, 595 evaluated, 594 expanded
[t=0.0499789s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0499876s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0499962s, 27548 KB] g=78, 600 evaluated, 599 expanded
[t=0.0502726s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0502814s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0502945s, 27548 KB] g=82, 608 evaluated, 607 expanded
[t=0.0504267s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0504352s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0504428s, 27548 KB] g=84, 612 evaluated, 611 expanded
[t=0.0518214s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0518321s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0518402s, 27548 KB] g=96, 658 evaluated, 657 expanded
[t=0.0520942s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0521028s, 27548 KB] g=100, 667 evaluated, 666 expanded
[t=0.0521929s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0522015s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0522093s, 27548 KB] g=102, 670 evaluated, 669 expanded
[t=0.0530671s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0530766s, 27548 KB] g=118, 707 evaluated, 706 expanded
[t=0.0533083s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0533187s, 27548 KB] g=126, 718 evaluated, 717 expanded
[t=0.0533431s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0533518s, 27548 KB] g=126, 719 evaluated, 718 expanded
[t=0.0533701s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0533785s, 27548 KB] g=127, 720 evaluated, 719 expanded
[t=0.0533941s, 27548 KB] Solution found!
[t=0.0534066s, 27548 KB] Actual search time: 0.0256787s
unstack b15 b2 (1)
put-down b15 (1)
unstack b12 b27 (1)
put-down b12 (1)
unstack b14 b9 (1)
put-down b14 (1)
unstack b2 b22 (1)
stack b2 b5 (1)
unstack b9 b11 (1)
put-down b9 (1)
pick-up b14 (1)
stack b14 b11 (1)
unstack b27 b25 (1)
stack b27 b2 (1)
unstack b14 b11 (1)
put-down b14 (1)
unstack b11 b10 (1)
put-down b11 (1)
unstack b10 b19 (1)
put-down b10 (1)
pick-up b4 (1)
stack b4 b10 (1)
unstack b16 b23 (1)
put-down b16 (1)
unstack b23 b7 (1)
put-down b23 (1)
unstack b7 b8 (1)
put-down b7 (1)
pick-up b22 (1)
stack b22 b7 (1)
unstack b8 b6 (1)
stack b8 b19 (1)
unstack b6 b24 (1)
stack b6 b4 (1)
pick-up b25 (1)
stack b25 b6 (1)
pick-up b14 (1)
stack b14 b11 (1)
pick-up b16 (1)
stack b16 b23 (1)
pick-up b24 (1)
stack b24 b16 (1)
unstack b14 b11 (1)
put-down b14 (1)
unstack b27 b2 (1)
put-down b27 (1)
unstack b2 b5 (1)
put-down b2 (1)
unstack b5 b20 (1)
stack b5 b9 (1)
unstack b20 b17 (1)
put-down b20 (1)
unstack b17 b18 (1)
stack b17 b27 (1)
unstack b18 b1 (1)
put-down b18 (1)
unstack b1 b26 (1)
stack b1 b24 (1)
pick-up b11 (1)
stack b11 b18 (1)
pick-up b15 (1)
stack b15 b1 (1)
pick-up b12 (1)
stack b12 b17 (1)
pick-up b14 (1)
stack b14 b11 (1)
pick-up b2 (1)
stack b2 b5 (1)
unstack b26 b3 (1)
put-down b26 (1)
unstack b3 b21 (1)
stack b3 b12 (1)
unstack b21 b13 (1)
stack b21 b8 (1)
pick-up b13 (1)
stack b13 b14 (1)
pick-up b26 (1)
stack b26 b3 (1)
unstack b22 b7 (1)
put-down b22 (1)
pick-up b7 (1)
stack b7 b21 (1)
pick-up b22 (1)
stack b22 b7 (1)
unstack b25 b6 (1)
put-down b25 (1)
unstack b6 b4 (1)
put-down b6 (1)
pick-up b25 (1)
stack b25 b6 (1)
unstack b4 b10 (1)
put-down b4 (1)
pick-up b10 (1)
stack b10 b13 (1)
pick-up b4 (1)
stack b4 b10 (1)
unstack b25 b6 (1)
put-down b25 (1)
pick-up b6 (1)
stack b6 b4 (1)
pick-up b25 (1)
stack b25 b6 (1)
unstack b26 b3 (1)
put-down b26 (1)
unstack b3 b12 (1)
put-down b3 (1)
unstack b12 b17 (1)
put-down b12 (1)
pick-up b3 (1)
stack b3 b12 (1)
pick-up b26 (1)
stack b26 b3 (1)
unstack b17 b27 (1)
put-down b17 (1)
pick-up b27 (1)
stack b27 b2 (1)
pick-up b17 (1)
stack b17 b27 (1)
unstack b26 b3 (1)
put-down b26 (1)
unstack b3 b12 (1)
put-down b3 (1)
pick-up b12 (1)
stack b12 b17 (1)
pick-up b3 (1)
stack b3 b12 (1)
pick-up b26 (1)
stack b26 b3 (1)
[t=0.053416s, 27548 KB] Plan length: 128 step(s).
[t=0.053416s, 27548 KB] Plan cost: 128
[t=0.053416s, 27548 KB] Expanded 720 state(s).
[t=0.053416s, 27548 KB] Reopened 0 state(s).
[t=0.053416s, 27548 KB] Evaluated 721 state(s).
[t=0.053416s, 27548 KB] Evaluations: 1442
[t=0.053416s, 27548 KB] Generated 7837 state(s).
[t=0.053416s, 27548 KB] Dead ends: 0 state(s).
[t=0.053416s, 27548 KB] Number of registered states: 721
[t=0.053416s, 27548 KB] Int hash set load factor: 721/1024 = 0.704102
[t=0.053416s, 27548 KB] Int hash set resizes: 10
[t=0.053416s, 27548 KB] Search time: 0.0257222s
[t=0.053416s, 27548 KB] Total time: 0.053416s
Solution found.
Peak memory: 27548 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.24s
