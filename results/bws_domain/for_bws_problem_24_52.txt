INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_24/bws_problem_24_52.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.012s wall-clock]
1898 relevant atoms
1272 auxiliary atoms
3170 final queue length
5525 total queue pushes
Completing instantiation... [0.020s CPU, 0.021s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.010s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
25 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.007s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.001s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.002s wall-clock]
Translating task: [0.030s CPU, 0.031s wall-clock]
1704 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
48 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.018s wall-clock]
Reordering and filtering variables...
49 of 49 variables necessary.
25 of 49 mutex groups necessary.
1152 of 1152 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.008s wall-clock]
Translator variables: 49
Translator derived variables: 0
Translator facts: 650
Translator goal facts: 20
Translator mutex groups: 25
Translator total mutex groups size: 625
Translator operators: 1152
Translator axioms: 0
Translator task size: 9912
Translator peak memory: 37880 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.110s CPU, 0.111s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=4.2386e-05s, 24488 KB] reading input...
[t=0.00370907s, 25532 KB] done reading input!
[t=0.00493827s, 25928 KB] Initializing landmark count heuristic...
[t=0.00499086s, 25928 KB] Generating landmark graph...
[t=0.00506865s, 25928 KB] Building a landmark graph with reasonable orders.
[t=0.00513945s, 26060 KB] Initializing Exploration...
[t=0.00547354s, 26388 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0186347s, 27048 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.018694s, 27048 KB] Landmarks generation time: 0.0136251s
[t=0.0187084s, 27048 KB] Discovered 103 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0187246s, 27048 KB] 839 edges
[t=0.0187345s, 27048 KB] approx. reasonable orders
[t=0.0189761s, 27048 KB] approx. obedient reasonable orders
[t=0.0190084s, 27048 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0190179s, 27048 KB] Landmarks generation time: 0.014023s
[t=0.0190277s, 27048 KB] Discovered 103 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0190359s, 27048 KB] 842 edges
[t=0.0190443s, 27048 KB] Landmark graph generation time: 0.0140606s
[t=0.0190531s, 27048 KB] Landmark graph contains 103 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0190614s, 27048 KB] Landmark graph contains 842 orderings.
[t=0.0194289s, 27048 KB] Simplifying 4560 unary operators... done! [3456 unary operators]
[t=0.0206151s, 27048 KB] time to simplify: 0.00120239s
[t=0.0207027s, 27048 KB] Initializing additive heuristic...
[t=0.0207187s, 27048 KB] Initializing FF heuristic...
[t=0.0207696s, 27048 KB] Building successor generator...done!
[t=0.0210003s, 27048 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0210098s, 27048 KB] time for successor generation creation: 0.000194834s
[t=0.0210223s, 27048 KB] Variables: 49
[t=0.0210309s, 27048 KB] FactPairs: 650
[t=0.0210397s, 27048 KB] Bytes per state: 20
[t=0.0211229s, 27048 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0211579s, 27048 KB] 47 initial landmarks, 20 goal landmarks
[t=0.0212171s, 27048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0212273s, 27048 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0212369s, 27048 KB] g=0, 1 evaluated, 0 expanded
[t=0.0212512s, 27048 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0212614s, 27048 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0214655s, 27048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0214759s, 27048 KB] g=2, 7 evaluated, 6 expanded
[t=0.021805s, 27048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0218157s, 27048 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0218256s, 27048 KB] g=4, 17 evaluated, 16 expanded
[t=0.0219951s, 27048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0220051s, 27048 KB] g=6, 22 evaluated, 21 expanded
[t=0.0222383s, 27048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0222487s, 27048 KB] g=8, 29 evaluated, 28 expanded
[t=0.0225487s, 27048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0225592s, 27048 KB] g=10, 38 evaluated, 37 expanded
[t=0.0228921s, 27048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0229021s, 27048 KB] g=12, 48 evaluated, 47 expanded
[t=0.02321s, 27048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.023224s, 27048 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0232344s, 27048 KB] g=14, 57 evaluated, 56 expanded
[t=0.023512s, 27048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0235243s, 27048 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0235349s, 27048 KB] g=16, 65 evaluated, 64 expanded
[t=0.0237774s, 27048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0238078s, 27048 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0238178s, 27048 KB] g=18, 72 evaluated, 71 expanded
[t=0.0240715s, 27048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0240922s, 27048 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0241029s, 27048 KB] g=20, 79 evaluated, 78 expanded
[t=0.0243697s, 27048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0244017s, 27048 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0244115s, 27048 KB] g=22, 86 evaluated, 85 expanded
[t=0.0246625s, 27048 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0246832s, 27048 KB] g=24, 93 evaluated, 92 expanded
[t=0.0247295s, 27048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0247418s, 27048 KB] g=24, 94 evaluated, 93 expanded
[t=0.0249185s, 27048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0249319s, 27048 KB] g=25, 99 evaluated, 98 expanded
[t=0.0262555s, 27048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0262784s, 27048 KB] g=30, 138 evaluated, 137 expanded
[t=0.026871s, 27048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0268958s, 27048 KB] g=32, 156 evaluated, 155 expanded
[t=0.0272112s, 27048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0272285s, 27048 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0272388s, 27048 KB] g=34, 166 evaluated, 165 expanded
[t=0.0275556s, 27048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0275694s, 27048 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0275795s, 27048 KB] g=36, 176 evaluated, 175 expanded
[t=0.0278298s, 27048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0278424s, 27048 KB] g=37, 184 evaluated, 183 expanded
[t=0.0278861s, 27048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0278964s, 27048 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.027905s, 27048 KB] g=38, 185 evaluated, 184 expanded
[t=0.0281871s, 27048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0282024s, 27048 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0282128s, 27048 KB] g=40, 194 evaluated, 193 expanded
[t=0.0284658s, 27048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0284772s, 27048 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0284854s, 27048 KB] g=40, 202 evaluated, 201 expanded
[t=0.0287728s, 27048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0287873s, 27048 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0287957s, 27048 KB] g=42, 212 evaluated, 211 expanded
[t=0.0290835s, 27048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0290985s, 27048 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0291195s, 27048 KB] g=44, 222 evaluated, 221 expanded
[t=0.0293525s, 27048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0293668s, 27048 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0293762s, 27048 KB] g=46, 230 evaluated, 229 expanded
[t=0.0296112s, 27048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.029621s, 27048 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0296295s, 27048 KB] g=48, 238 evaluated, 237 expanded
[t=0.0301109s, 27048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0301219s, 27048 KB] g=52, 255 evaluated, 254 expanded
[t=0.0303161s, 27048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0303274s, 27048 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0303364s, 27048 KB] g=54, 261 evaluated, 260 expanded
[t=0.0308833s, 27048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0308935s, 27048 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0309033s, 27048 KB] g=58, 280 evaluated, 279 expanded
[t=0.0310732s, 27048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.031082s, 27048 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0310903s, 27048 KB] g=60, 286 evaluated, 285 expanded
[t=0.0318197s, 27048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0318289s, 27048 KB] g=65, 314 evaluated, 313 expanded
[t=0.0318657s, 27048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0318744s, 27048 KB] g=66, 315 evaluated, 314 expanded
[t=0.032033s, 27048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.032042s, 27048 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0320507s, 27048 KB] g=68, 321 evaluated, 320 expanded
[t=0.0321596s, 27048 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0321688s, 27048 KB] g=68, 325 evaluated, 324 expanded
[t=0.0322992s, 27048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0323092s, 27048 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0323178s, 27048 KB] g=70, 330 evaluated, 329 expanded
[t=0.033569s, 27048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.033593s, 27048 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0336021s, 27048 KB] g=78, 381 evaluated, 380 expanded
[t=0.0336962s, 27048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0337054s, 27048 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0337136s, 27048 KB] g=80, 385 evaluated, 384 expanded
[t=0.0342881s, 27048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0342987s, 27048 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0343076s, 27048 KB] g=88, 413 evaluated, 412 expanded
[t=0.0343569s, 27048 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0343659s, 27048 KB] g=88, 415 evaluated, 414 expanded
[t=0.0344379s, 27048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0344473s, 27048 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0344555s, 27048 KB] g=90, 418 evaluated, 417 expanded
[t=0.0347613s, 27048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0347711s, 27048 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0347793s, 27048 KB] g=102, 435 evaluated, 434 expanded
[t=0.0348489s, 27048 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.034858s, 27048 KB] g=106, 439 evaluated, 438 expanded
[t=0.0348764s, 27048 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0348852s, 27048 KB] g=107, 440 evaluated, 439 expanded
[t=0.0349005s, 27048 KB] Solution found!
[t=0.0349116s, 27048 KB] Actual search time: 0.0137497s
unstack b5 b8 (1)
put-down b5 (1)
unstack b8 b19 (1)
put-down b8 (1)
unstack b19 b21 (1)
put-down b19 (1)
unstack b21 b11 (1)
put-down b21 (1)
unstack b11 b17 (1)
put-down b11 (1)
unstack b17 b14 (1)
put-down b17 (1)
unstack b14 b22 (1)
stack b14 b5 (1)
unstack b20 b9 (1)
stack b20 b14 (1)
unstack b22 b3 (1)
stack b22 b19 (1)
unstack b3 b7 (1)
stack b3 b6 (1)
unstack b7 b1 (1)
stack b7 b21 (1)
unstack b1 b12 (1)
put-down b1 (1)
unstack b12 b10 (1)
put-down b12 (1)
unstack b10 b15 (1)
put-down b10 (1)
unstack b15 b13 (1)
put-down b15 (1)
unstack b13 b18 (1)
stack b13 b1 (1)
pick-up b10 (1)
stack b10 b15 (1)
unstack b18 b4 (1)
stack b18 b8 (1)
unstack b4 b16 (1)
stack b4 b7 (1)
unstack b16 b2 (1)
stack b16 b10 (1)
unstack b2 b24 (1)
put-down b2 (1)
pick-up b12 (1)
stack b12 b24 (1)
pick-up b11 (1)
stack b11 b16 (1)
pick-up b17 (1)
stack b17 b2 (1)
unstack b12 b24 (1)
put-down b12 (1)
pick-up b24 (1)
stack b24 b22 (1)
pick-up b12 (1)
stack b12 b24 (1)
unstack b13 b1 (1)
put-down b13 (1)
pick-up b1 (1)
stack b1 b11 (1)
pick-up b13 (1)
stack b13 b1 (1)
unstack b3 b6 (1)
put-down b3 (1)
unstack b6 b23 (1)
put-down b6 (1)
pick-up b23 (1)
stack b23 b13 (1)
pick-up b6 (1)
stack b6 b23 (1)
pick-up b3 (1)
stack b3 b6 (1)
unstack b20 b14 (1)
put-down b20 (1)
unstack b14 b5 (1)
put-down b14 (1)
pick-up b5 (1)
stack b5 b3 (1)
pick-up b14 (1)
stack b14 b5 (1)
pick-up b20 (1)
stack b20 b14 (1)
unstack b4 b7 (1)
put-down b4 (1)
unstack b7 b21 (1)
put-down b7 (1)
pick-up b21 (1)
stack b21 b18 (1)
pick-up b7 (1)
stack b7 b21 (1)
pick-up b4 (1)
stack b4 b7 (1)
unstack b12 b24 (1)
put-down b12 (1)
unstack b24 b22 (1)
put-down b24 (1)
pick-up b12 (1)
stack b12 b24 (1)
unstack b22 b19 (1)
put-down b22 (1)
pick-up b19 (1)
stack b19 b17 (1)
pick-up b22 (1)
stack b22 b19 (1)
unstack b12 b24 (1)
put-down b12 (1)
pick-up b24 (1)
stack b24 b22 (1)
pick-up b12 (1)
stack b12 b24 (1)
[t=0.0349212s, 27048 KB] Plan length: 108 step(s).
[t=0.0349212s, 27048 KB] Plan cost: 108
[t=0.0349212s, 27048 KB] Expanded 440 state(s).
[t=0.0349212s, 27048 KB] Reopened 0 state(s).
[t=0.0349212s, 27048 KB] Evaluated 441 state(s).
[t=0.0349212s, 27048 KB] Evaluations: 882
[t=0.0349212s, 27048 KB] Generated 4292 state(s).
[t=0.0349212s, 27048 KB] Dead ends: 0 state(s).
[t=0.0349212s, 27048 KB] Number of registered states: 441
[t=0.0349212s, 27048 KB] Int hash set load factor: 441/512 = 0.861328
[t=0.0349212s, 27048 KB] Int hash set resizes: 9
[t=0.0349212s, 27048 KB] Search time: 0.0137987s
[t=0.0349212s, 27048 KB] Total time: 0.0349212s
Solution found.
Peak memory: 27048 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.21s
