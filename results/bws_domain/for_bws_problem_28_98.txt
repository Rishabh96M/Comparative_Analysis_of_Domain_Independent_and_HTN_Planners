INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_28/bws_problem_28_98.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.017s wall-clock]
2550 relevant atoms
1708 auxiliary atoms
4258 final queue length
7455 total queue pushes
Completing instantiation... [0.030s CPU, 0.029s wall-clock]
Instantiating: [0.040s CPU, 0.047s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.010s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
29 uncovered facts
Choosing groups: [0.000s CPU, 0.002s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.001s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.002s wall-clock]
Translating task: [0.050s CPU, 0.047s wall-clock]
2324 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
56 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.020s wall-clock]
Reordering and filtering variables...
57 of 57 variables necessary.
29 of 57 mutex groups necessary.
1568 of 1568 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.011s wall-clock]
Translator variables: 57
Translator derived variables: 0
Translator facts: 870
Translator goal facts: 23
Translator mutex groups: 29
Translator total mutex groups size: 841
Translator operators: 1568
Translator axioms: 0
Translator task size: 13467
Translator peak memory: 40316 KB
Writing output... [0.010s CPU, 0.008s wall-clock]
Done! [0.140s CPU, 0.149s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=3.1832e-05s, 24488 KB] reading input...
[t=0.00477922s, 26076 KB] done reading input!
[t=0.00636529s, 26472 KB] Initializing landmark count heuristic...
[t=0.00647944s, 26472 KB] Generating landmark graph...
[t=0.00660419s, 26604 KB] Building a landmark graph with reasonable orders.
[t=0.00672408s, 26604 KB] Initializing Exploration...
[t=0.00720568s, 27016 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0279758s, 27676 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0280733s, 27676 KB] Landmarks generation time: 0.0214639s
[t=0.0280978s, 27676 KB] Discovered 123 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0281142s, 27676 KB] 463 edges
[t=0.0281243s, 27676 KB] approx. reasonable orders
[t=0.0302772s, 27676 KB] approx. obedient reasonable orders
[t=0.0303183s, 27676 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.030328s, 27676 KB] Landmarks generation time: 0.0238422s
[t=0.0303375s, 27676 KB] Discovered 123 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0303454s, 27676 KB] 490 edges
[t=0.030354s, 27676 KB] Landmark graph generation time: 0.0238815s
[t=0.0303623s, 27676 KB] Landmark graph contains 123 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0303698s, 27676 KB] Landmark graph contains 490 orderings.
[t=0.030884s, 27700 KB] Simplifying 6216 unary operators... done! [4704 unary operators]
[t=0.0324247s, 27832 KB] time to simplify: 0.00165048s
[t=0.0326283s, 27832 KB] Initializing additive heuristic...
[t=0.0326474s, 27832 KB] Initializing FF heuristic...
[t=0.0327003s, 27832 KB] Building successor generator...done!
[t=0.0330101s, 27832 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0330199s, 27832 KB] time for successor generation creation: 0.000280542s
[t=0.0330337s, 27832 KB] Variables: 57
[t=0.0330427s, 27832 KB] FactPairs: 870
[t=0.0330512s, 27832 KB] Bytes per state: 24
[t=0.0331818s, 27832 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0332179s, 27832 KB] 56 initial landmarks, 23 goal landmarks
[t=0.0332949s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 67
[t=0.0333049s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 49
[t=0.033314s, 27832 KB] g=0, 1 evaluated, 0 expanded
[t=0.0333333s, 27832 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 67
[t=0.0333444s, 27832 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 49
[t=0.0334778s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 66
[t=0.0334876s, 27832 KB] g=1, 4 evaluated, 3 expanded
[t=0.0335357s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 65
[t=0.0335514s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 48
[t=0.0335591s, 27832 KB] g=2, 5 evaluated, 4 expanded
[t=0.0336036s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 64
[t=0.0336134s, 27832 KB] g=3, 6 evaluated, 5 expanded
[t=0.0339877s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 63
[t=0.0339983s, 27832 KB] g=6, 16 evaluated, 15 expanded
[t=0.0344314s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 47
[t=0.0344493s, 27832 KB] g=8, 27 evaluated, 26 expanded
[t=0.0345825s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 62
[t=0.0346001s, 27832 KB] g=8, 29 evaluated, 28 expanded
[t=0.0352365s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 61
[t=0.0352478s, 27832 KB] g=10, 44 evaluated, 43 expanded
[t=0.0358996s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 60
[t=0.0359104s, 27832 KB] g=12, 62 evaluated, 61 expanded
[t=0.0361365s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.0361463s, 27832 KB] g=13, 68 evaluated, 67 expanded
[t=0.0370124s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0370761s, 27832 KB] g=16, 90 evaluated, 89 expanded
[t=0.0371309s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 46
[t=0.0371409s, 27832 KB] g=12, 91 evaluated, 90 expanded
[t=0.0377739s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.037785s, 27832 KB] g=18, 108 evaluated, 107 expanded
[t=0.0381918s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0382019s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0382099s, 27832 KB] g=20, 119 evaluated, 118 expanded
[t=0.0385614s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.038573s, 27832 KB] g=22, 128 evaluated, 127 expanded
[t=0.0386314s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0386412s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.0386494s, 27832 KB] g=22, 129 evaluated, 128 expanded
[t=0.0389434s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0389538s, 27832 KB] g=24, 137 evaluated, 136 expanded
[t=0.039323s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0393364s, 27832 KB] g=26, 147 evaluated, 146 expanded
[t=0.0400166s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0400353s, 27832 KB] g=26, 163 evaluated, 162 expanded
[t=0.0407685s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0407869s, 27832 KB] g=30, 182 evaluated, 181 expanded
[t=0.041022s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0410355s, 27832 KB] g=28, 188 evaluated, 187 expanded
[t=0.0417479s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0417633s, 27832 KB] g=30, 207 evaluated, 206 expanded
[t=0.0426098s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0426305s, 27832 KB] g=32, 228 evaluated, 227 expanded
[t=0.0436034s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0436143s, 27832 KB] g=34, 254 evaluated, 253 expanded
[t=0.0443045s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0443152s, 27832 KB] g=36, 273 evaluated, 272 expanded
[t=0.0448173s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.044832s, 27832 KB] g=36, 282 evaluated, 281 expanded
[t=0.0452954s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0453049s, 27832 KB] g=38, 295 evaluated, 294 expanded
[t=0.0458351s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0458448s, 27832 KB] g=38, 310 evaluated, 309 expanded
[t=0.0466659s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0466756s, 27832 KB] g=40, 333 evaluated, 332 expanded
[t=0.046759s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0467684s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0467761s, 27832 KB] g=40, 335 evaluated, 334 expanded
[t=0.0472536s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.047273s, 27832 KB] g=42, 347 evaluated, 346 expanded
[t=0.0475735s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0475825s, 27832 KB] g=42, 355 evaluated, 354 expanded
[t=0.0478486s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0478577s, 27832 KB] g=44, 362 evaluated, 361 expanded
[t=0.0484388s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0484504s, 27832 KB] g=44, 378 evaluated, 377 expanded
[t=0.0489905s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0490006s, 27832 KB] g=46, 393 evaluated, 392 expanded
[t=0.0496588s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0496724s, 27832 KB] g=47, 410 evaluated, 409 expanded
[t=0.0497223s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0497315s, 27832 KB] g=48, 411 evaluated, 410 expanded
[t=0.0501826s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0501936s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.050205s, 27832 KB] g=50, 423 evaluated, 422 expanded
[t=0.0506144s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0506252s, 27832 KB] g=52, 434 evaluated, 433 expanded
[t=0.0507118s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0507218s, 27832 KB] g=52, 436 evaluated, 435 expanded
[t=0.0512379s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0512485s, 27832 KB] g=54, 450 evaluated, 449 expanded
[t=0.0514428s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.051453s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0514613s, 27832 KB] g=54, 455 evaluated, 454 expanded
[t=0.0518093s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0518197s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0518287s, 27832 KB] g=56, 464 evaluated, 463 expanded
[t=0.0522006s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0522128s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0522211s, 27832 KB] g=58, 472 evaluated, 471 expanded
[t=0.0524589s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0524693s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0524779s, 27832 KB] g=60, 478 evaluated, 477 expanded
[t=0.0557858s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0558104s, 27832 KB] g=68, 564 evaluated, 563 expanded
[t=0.0561805s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0561903s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0561993s, 27832 KB] g=70, 574 evaluated, 573 expanded
[t=0.0687516s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0687994s, 27832 KB] g=88, 914 evaluated, 913 expanded
[t=0.069063s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0690897s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0690993s, 27832 KB] g=90, 921 evaluated, 920 expanded
[t=0.0693222s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.069332s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0693398s, 27832 KB] g=92, 927 evaluated, 926 expanded
[t=0.0696538s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0696689s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0696769s, 27832 KB] g=94, 934 evaluated, 933 expanded
[t=0.0707006s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0707192s, 27832 KB] g=98, 963 evaluated, 962 expanded
[t=0.0709312s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0709407s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0709485s, 27832 KB] g=100, 969 evaluated, 968 expanded
[t=0.0718168s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0718302s, 27832 KB] g=104, 994 evaluated, 993 expanded
[t=0.0720347s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0720497s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0720583s, 27832 KB] g=106, 999 evaluated, 998 expanded
[t=0.0748926s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0749134s, 27832 KB] g=118, 1076 evaluated, 1075 expanded
[t=0.0753999s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.075411s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0754188s, 27832 KB] g=124, 1090 evaluated, 1089 expanded
[t=0.0785312s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0785467s, 27832 KB] g=138, 1178 evaluated, 1177 expanded
[t=0.078691s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0787008s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0787088s, 27832 KB] g=140, 1182 evaluated, 1181 expanded
[t=0.0790192s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0790291s, 27832 KB] g=144, 1191 evaluated, 1190 expanded
[t=0.0791384s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0791472s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0791554s, 27832 KB] g=146, 1194 evaluated, 1193 expanded
[t=0.0835809s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0836055s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0836145s, 27832 KB] g=180, 1332 evaluated, 1331 expanded
[t=0.0838751s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0838863s, 27832 KB] g=184, 1341 evaluated, 1340 expanded
[t=0.0839742s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0839845s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0839927s, 27832 KB] g=186, 1344 evaluated, 1343 expanded
[t=0.0843505s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0843719s, 27832 KB] g=198, 1360 evaluated, 1359 expanded
[t=0.084461s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0844712s, 27832 KB] g=202, 1364 evaluated, 1363 expanded
[t=0.0845238s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0845755s, 27832 KB] g=203, 1365 evaluated, 1364 expanded
[t=0.0846344s, 27832 KB] Solution found!
[t=0.0846651s, 27832 KB] Actual search time: 0.0514458s
unstack b3 b1 (1)
stack b3 b4 (1)
unstack b1 b22 (1)
put-down b1 (1)
unstack b13 b25 (1)
put-down b13 (1)
unstack b17 b2 (1)
put-down b17 (1)
unstack b2 b23 (1)
put-down b2 (1)
unstack b22 b14 (1)
put-down b22 (1)
unstack b14 b10 (1)
put-down b14 (1)
unstack b23 b19 (1)
stack b23 b22 (1)
pick-up b14 (1)
stack b14 b23 (1)
unstack b25 b26 (1)
stack b25 b19 (1)
pick-up b17 (1)
stack b17 b25 (1)
unstack b26 b16 (1)
put-down b26 (1)
unstack b16 b18 (1)
put-down b16 (1)
unstack b8 b27 (1)
put-down b8 (1)
unstack b27 b24 (1)
put-down b27 (1)
unstack b24 b7 (1)
put-down b24 (1)
unstack b7 b9 (1)
stack b7 b8 (1)
unstack b18 b20 (1)
put-down b18 (1)
unstack b20 b11 (1)
stack b20 b9 (1)
pick-up b11 (1)
stack b11 b10 (1)
pick-up b27 (1)
stack b27 b7 (1)
pick-up b13 (1)
stack b13 b27 (1)
unstack b3 b4 (1)
put-down b3 (1)
unstack b4 b15 (1)
stack b4 b17 (1)
unstack b15 b12 (1)
stack b15 b18 (1)
pick-up b12 (1)
stack b12 b20 (1)
pick-up b16 (1)
stack b16 b15 (1)
pick-up b1 (1)
stack b1 b16 (1)
pick-up b2 (1)
stack b2 b12 (1)
pick-up b3 (1)
stack b3 b4 (1)
unstack b14 b23 (1)
put-down b14 (1)
unstack b23 b22 (1)
put-down b23 (1)
pick-up b22 (1)
stack b22 b26 (1)
pick-up b23 (1)
stack b23 b22 (1)
pick-up b14 (1)
stack b14 b23 (1)
unstack b3 b4 (1)
put-down b3 (1)
unstack b4 b17 (1)
put-down b4 (1)
pick-up b3 (1)
stack b3 b4 (1)
unstack b17 b25 (1)
put-down b17 (1)
unstack b25 b19 (1)
put-down b25 (1)
pick-up b17 (1)
stack b17 b25 (1)
unstack b19 b21 (1)
put-down b19 (1)
unstack b21 b5 (1)
put-down b21 (1)
pick-up b19 (1)
stack b19 b21 (1)
unstack b5 b28 (1)
stack b5 b13 (1)
unstack b28 b6 (1)
put-down b28 (1)
pick-up b6 (1)
stack b6 b2 (1)
unstack b17 b25 (1)
put-down b17 (1)
pick-up b25 (1)
stack b25 b19 (1)
pick-up b17 (1)
stack b17 b25 (1)
unstack b3 b4 (1)
put-down b3 (1)
pick-up b4 (1)
stack b4 b17 (1)
pick-up b3 (1)
stack b3 b4 (1)
unstack b14 b23 (1)
put-down b14 (1)
unstack b23 b22 (1)
put-down b23 (1)
pick-up b14 (1)
stack b14 b23 (1)
unstack b22 b26 (1)
put-down b22 (1)
pick-up b26 (1)
stack b26 b6 (1)
pick-up b22 (1)
stack b22 b26 (1)
unstack b14 b23 (1)
put-down b14 (1)
pick-up b23 (1)
stack b23 b22 (1)
pick-up b14 (1)
stack b14 b23 (1)
unstack b5 b13 (1)
put-down b5 (1)
unstack b13 b27 (1)
put-down b13 (1)
pick-up b5 (1)
stack b5 b13 (1)
unstack b27 b7 (1)
put-down b27 (1)
unstack b7 b8 (1)
put-down b7 (1)
pick-up b8 (1)
stack b8 b28 (1)
pick-up b7 (1)
stack b7 b8 (1)
pick-up b27 (1)
stack b27 b7 (1)
unstack b5 b13 (1)
put-down b5 (1)
pick-up b13 (1)
stack b13 b27 (1)
pick-up b5 (1)
stack b5 b13 (1)
unstack b14 b23 (1)
put-down b14 (1)
unstack b23 b22 (1)
put-down b23 (1)
pick-up b14 (1)
stack b14 b23 (1)
unstack b22 b26 (1)
put-down b22 (1)
unstack b26 b6 (1)
put-down b26 (1)
pick-up b22 (1)
stack b22 b26 (1)
unstack b14 b23 (1)
put-down b14 (1)
pick-up b23 (1)
stack b23 b22 (1)
pick-up b14 (1)
stack b14 b23 (1)
unstack b6 b2 (1)
put-down b6 (1)
unstack b2 b12 (1)
put-down b2 (1)
pick-up b6 (1)
stack b6 b2 (1)
unstack b12 b20 (1)
put-down b12 (1)
unstack b20 b9 (1)
put-down b20 (1)
pick-up b9 (1)
stack b9 b5 (1)
pick-up b20 (1)
stack b20 b9 (1)
pick-up b12 (1)
stack b12 b20 (1)
unstack b6 b2 (1)
put-down b6 (1)
pick-up b2 (1)
stack b2 b12 (1)
pick-up b6 (1)
stack b6 b2 (1)
unstack b14 b23 (1)
put-down b14 (1)
unstack b23 b22 (1)
put-down b23 (1)
pick-up b14 (1)
stack b14 b23 (1)
unstack b22 b26 (1)
put-down b22 (1)
pick-up b26 (1)
stack b26 b6 (1)
pick-up b22 (1)
stack b22 b26 (1)
unstack b14 b23 (1)
put-down b14 (1)
pick-up b23 (1)
stack b23 b22 (1)
pick-up b14 (1)
stack b14 b23 (1)
[t=0.0846777s, 27832 KB] Plan length: 204 step(s).
[t=0.0846777s, 27832 KB] Plan cost: 204
[t=0.0846777s, 27832 KB] Expanded 1365 state(s).
[t=0.0846777s, 27832 KB] Reopened 0 state(s).
[t=0.0846777s, 27832 KB] Evaluated 1366 state(s).
[t=0.0846777s, 27832 KB] Evaluations: 2732
[t=0.0846777s, 27832 KB] Generated 14282 state(s).
[t=0.0846777s, 27832 KB] Dead ends: 0 state(s).
[t=0.0846777s, 27832 KB] Number of registered states: 1366
[t=0.0846777s, 27832 KB] Int hash set load factor: 1366/2048 = 0.666992
[t=0.0846777s, 27832 KB] Int hash set resizes: 11
[t=0.0846777s, 27832 KB] Search time: 0.0514965s
[t=0.0846777s, 27832 KB] Total time: 0.0846777s
Solution found.
Peak memory: 27832 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.28s
