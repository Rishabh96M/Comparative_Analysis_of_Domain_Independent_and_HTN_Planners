INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_31/bws_problem_31_32.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.019s wall-clock]
3102 relevant atoms
2077 auxiliary atoms
5179 final queue length
9090 total queue pushes
Completing instantiation... [0.030s CPU, 0.036s wall-clock]
Instantiating: [0.050s CPU, 0.058s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.010s CPU, 0.002s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
32 uncovered facts
Choosing groups: [0.000s CPU, 0.002s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.010s CPU, 0.011s wall-clock]
Building STRIPS to SAS dictionary... [0.010s CPU, 0.004s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.001s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.003s wall-clock]
Translating task: [0.050s CPU, 0.056s wall-clock]
2852 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
62 propositions removed
Detecting unreachable propositions: [0.030s CPU, 0.026s wall-clock]
Reordering and filtering variables...
63 of 63 variables necessary.
32 of 63 mutex groups necessary.
1922 of 1922 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.012s wall-clock]
Translator variables: 63
Translator derived variables: 0
Translator facts: 1056
Translator goal facts: 27
Translator mutex groups: 32
Translator total mutex groups size: 1024
Translator operators: 1922
Translator axioms: 0
Translator task size: 16492
Translator peak memory: 42104 KB
Writing output... [0.010s CPU, 0.010s wall-clock]
Done! [0.170s CPU, 0.184s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.0025e-05s, 24488 KB] reading input...
[t=0.00594401s, 26640 KB] done reading input!
[t=0.00779882s, 26904 KB] Initializing landmark count heuristic...
[t=0.00790326s, 26904 KB] Generating landmark graph...
[t=0.00807091s, 27036 KB] Building a landmark graph with reasonable orders.
[t=0.00820169s, 27172 KB] Initializing Exploration...
[t=0.00885741s, 27620 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0384085s, 28412 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0387439s, 28412 KB] Landmarks generation time: 0.0306963s
[t=0.0388186s, 28412 KB] Discovered 143 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0388643s, 28412 KB] 682 edges
[t=0.0389192s, 28412 KB] approx. reasonable orders
[t=0.0488402s, 28412 KB] approx. obedient reasonable orders
[t=0.0490548s, 28412 KB] Removed 1 reasonable or obedient reasonable orders
[t=0.0490682s, 28412 KB] Landmarks generation time: 0.0411613s
[t=0.0490794s, 28412 KB] Discovered 143 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0490881s, 28412 KB] 786 edges
[t=0.0490965s, 28412 KB] Landmark graph generation time: 0.0412008s
[t=0.0491058s, 28412 KB] Landmark graph contains 143 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0491148s, 28412 KB] Landmark graph contains 786 orderings.
[t=0.0498881s, 28444 KB] Simplifying 7626 unary operators... done! [5766 unary operators]
[t=0.0519187s, 28576 KB] time to simplify: 0.00214952s
[t=0.0521459s, 28576 KB] Initializing additive heuristic...
[t=0.0521657s, 28576 KB] Initializing FF heuristic...
[t=0.0522194s, 28576 KB] Building successor generator...done!
[t=0.0525556s, 28576 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0525651s, 28576 KB] time for successor generation creation: 0.000307807s
[t=0.0525791s, 28576 KB] Variables: 63
[t=0.0525876s, 28576 KB] FactPairs: 1056
[t=0.0525959s, 28576 KB] Bytes per state: 24
[t=0.0526787s, 28576 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0527111s, 28576 KB] 63 initial landmarks, 27 goal landmarks
[t=0.0527829s, 28576 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 80
[t=0.0527925s, 28576 KB] New best heuristic value for ff(transform = adapt_costs(one)): 58
[t=0.0528014s, 28576 KB] g=0, 1 evaluated, 0 expanded
[t=0.0528152s, 28576 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 80
[t=0.0528278s, 28576 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 58
[t=0.0531668s, 28576 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 79
[t=0.0531767s, 28576 KB] g=2, 8 evaluated, 7 expanded
[t=0.0539751s, 28576 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 78
[t=0.0539888s, 28576 KB] g=3, 25 evaluated, 24 expanded
[t=0.0542158s, 28576 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 77
[t=0.0542253s, 28576 KB] g=5, 30 evaluated, 29 expanded
[t=0.0542801s, 28576 KB] New best heuristic value for ff(transform = adapt_costs(one)): 57
[t=0.0542888s, 28576 KB] g=6, 31 evaluated, 30 expanded
[t=0.054864s, 28576 KB] New best heuristic value for ff(transform = adapt_costs(one)): 56
[t=0.054875s, 28576 KB] g=8, 44 evaluated, 43 expanded
[t=0.0551129s, 28576 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 76
[t=0.0551225s, 28576 KB] g=8, 49 evaluated, 48 expanded
[t=0.0557652s, 28576 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 74
[t=0.0557808s, 28576 KB] New best heuristic value for ff(transform = adapt_costs(one)): 54
[t=0.0557898s, 28576 KB] g=10, 63 evaluated, 62 expanded
[t=0.0559326s, 28576 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 73
[t=0.055943s, 28576 KB] g=11, 66 evaluated, 65 expanded
[t=0.0565662s, 28576 KB] New best heuristic value for ff(transform = adapt_costs(one)): 53
[t=0.0565819s, 28576 KB] g=12, 78 evaluated, 77 expanded
[t=0.0568972s, 28576 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 72
[t=0.0569089s, 28576 KB] g=14, 85 evaluated, 84 expanded
[t=0.0576145s, 28576 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 71
[t=0.0576533s, 28576 KB] g=16, 101 evaluated, 100 expanded
[t=0.0584396s, 28576 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 70
[t=0.0584525s, 28576 KB] g=17, 119 evaluated, 118 expanded
[t=0.0597336s, 28576 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 69
[t=0.0597626s, 28576 KB] g=20, 146 evaluated, 145 expanded
[t=0.0603742s, 28576 KB] New best heuristic value for ff(transform = adapt_costs(one)): 52
[t=0.0603852s, 28576 KB] g=16, 159 evaluated, 158 expanded
[t=0.0609624s, 28576 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 68
[t=0.0609737s, 28576 KB] g=22, 172 evaluated, 171 expanded
[t=0.0612543s, 28576 KB] New best heuristic value for ff(transform = adapt_costs(one)): 51
[t=0.0612633s, 28576 KB] g=18, 178 evaluated, 177 expanded
[t=0.0621523s, 28576 KB] New best heuristic value for ff(transform = adapt_costs(one)): 50
[t=0.0621696s, 28576 KB] g=20, 195 evaluated, 194 expanded
[t=0.0624455s, 28576 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 67
[t=0.0624552s, 28576 KB] g=24, 201 evaluated, 200 expanded
[t=0.0629522s, 28576 KB] New best heuristic value for ff(transform = adapt_costs(one)): 49
[t=0.0629626s, 28576 KB] g=22, 212 evaluated, 211 expanded
[t=0.0636302s, 28576 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 66
[t=0.0636423s, 28576 KB] g=26, 227 evaluated, 226 expanded
[t=0.0643865s, 28576 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 65
[t=0.0643999s, 28576 KB] g=27, 242 evaluated, 241 expanded
[t=0.0653975s, 28576 KB] New best heuristic value for ff(transform = adapt_costs(one)): 48
[t=0.0654099s, 28576 KB] g=28, 264 evaluated, 263 expanded
[t=0.0660902s, 28576 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 64
[t=0.0661s, 28576 KB] g=30, 279 evaluated, 278 expanded
[t=0.0663189s, 28576 KB] New best heuristic value for ff(transform = adapt_costs(one)): 47
[t=0.0663318s, 28576 KB] g=30, 282 evaluated, 281 expanded
[t=0.0677014s, 28576 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 63
[t=0.067714s, 28576 KB] g=32, 313 evaluated, 312 expanded
[t=0.0692304s, 28576 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 62
[t=0.0692445s, 28576 KB] g=34, 347 evaluated, 346 expanded
[t=0.0734982s, 28576 KB] New best heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0735169s, 28576 KB] g=36, 441 evaluated, 440 expanded
[t=0.074491s, 28576 KB] New best heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.0745067s, 28576 KB] g=38, 462 evaluated, 461 expanded
[t=0.0754429s, 28576 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0754703s, 28576 KB] g=40, 483 evaluated, 482 expanded
[t=0.0765086s, 28576 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0765338s, 28576 KB] g=42, 505 evaluated, 504 expanded
[t=0.0776401s, 28576 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.077655s, 28576 KB] g=44, 528 evaluated, 527 expanded
[t=0.0786238s, 28576 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0786365s, 28576 KB] g=46, 550 evaluated, 549 expanded
[t=0.0796393s, 28576 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0796554s, 28576 KB] g=48, 571 evaluated, 570 expanded
[t=0.0805242s, 28576 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0805421s, 28576 KB] g=50, 591 evaluated, 590 expanded
[t=0.0884283s, 28576 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0885219s, 28576 KB] g=56, 762 evaluated, 761 expanded
[t=0.0921798s, 28576 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0922083s, 28576 KB] g=60, 839 evaluated, 838 expanded
[t=0.0927888s, 28576 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0928008s, 28576 KB] g=62, 852 evaluated, 851 expanded
[t=0.0932985s, 28576 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0933116s, 28576 KB] g=64, 863 evaluated, 862 expanded
[t=0.0961926s, 28576 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0962119s, 28576 KB] g=68, 927 evaluated, 926 expanded
[t=0.0968373s, 28576 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0968709s, 28576 KB] g=70, 938 evaluated, 937 expanded
[t=0.0975043s, 28576 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0975146s, 28576 KB] g=72, 952 evaluated, 951 expanded
[t=0.0980974s, 28576 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0981074s, 28576 KB] g=74, 965 evaluated, 964 expanded
[t=0.0986461s, 28576 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0986566s, 28576 KB] g=76, 977 evaluated, 976 expanded
[t=0.100012s, 28576 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.100032s, 28576 KB] g=80, 1006 evaluated, 1005 expanded
[t=0.100386s, 28576 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.100397s, 28576 KB] g=82, 1014 evaluated, 1013 expanded
[t=0.102537s, 28576 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.102577s, 28576 KB] g=88, 1058 evaluated, 1057 expanded
[t=0.102887s, 28576 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.1029s, 28576 KB] g=90, 1065 evaluated, 1064 expanded
[t=0.103269s, 28576 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.103283s, 28576 KB] g=92, 1073 evaluated, 1072 expanded
[t=0.125215s, 28576 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.125349s, 28576 KB] g=114, 1580 evaluated, 1579 expanded
[t=0.125544s, 28576 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.125557s, 28576 KB] g=116, 1584 evaluated, 1583 expanded
[t=0.127242s, 28576 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.127269s, 28576 KB] g=124, 1621 evaluated, 1620 expanded
[t=0.127439s, 28576 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.127451s, 28576 KB] g=126, 1625 evaluated, 1624 expanded
[t=0.134198s, 28576 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.134221s, 28576 KB] g=156, 1803 evaluated, 1802 expanded
[t=0.134946s, 28576 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.134956s, 28576 KB] g=160, 1823 evaluated, 1822 expanded
[t=0.135134s, 28576 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.13515s, 28576 KB] g=162, 1828 evaluated, 1827 expanded
[t=0.136553s, 28576 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.13657s, 28576 KB] g=174, 1865 evaluated, 1864 expanded
[t=0.136923s, 28576 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.136943s, 28576 KB] g=178, 1875 evaluated, 1874 expanded
[t=0.136966s, 28576 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.13699s, 28576 KB] g=179, 1876 evaluated, 1875 expanded
[t=0.137052s, 28576 KB] Solution found!
[t=0.137079s, 28576 KB] Actual search time: 0.0843663s
unstack b17 b30 (1)
put-down b17 (1)
unstack b30 b2 (1)
put-down b30 (1)
unstack b2 b8 (1)
stack b2 b17 (1)
unstack b8 b20 (1)
put-down b8 (1)
unstack b20 b7 (1)
stack b20 b8 (1)
unstack b28 b19 (1)
stack b28 b7 (1)
unstack b11 b26 (1)
put-down b11 (1)
unstack b19 b24 (1)
stack b19 b26 (1)
unstack b24 b3 (1)
stack b24 b18 (1)
unstack b3 b14 (1)
stack b3 b28 (1)
pick-up b14 (1)
stack b14 b3 (1)
unstack b6 b12 (1)
put-down b6 (1)
unstack b12 b1 (1)
put-down b12 (1)
unstack b1 b23 (1)
stack b1 b11 (1)
unstack b23 b15 (1)
put-down b23 (1)
pick-up b12 (1)
stack b12 b23 (1)
unstack b15 b4 (1)
put-down b15 (1)
unstack b4 b25 (1)
stack b4 b20 (1)
unstack b25 b21 (1)
put-down b25 (1)
unstack b21 b16 (1)
put-down b21 (1)
unstack b16 b31 (1)
put-down b16 (1)
unstack b31 b5 (1)
stack b31 b1 (1)
unstack b5 b22 (1)
stack b5 b16 (1)
pick-up b15 (1)
stack b15 b22 (1)
pick-up b6 (1)
stack b6 b5 (1)
unstack b12 b23 (1)
put-down b12 (1)
pick-up b23 (1)
stack b23 b31 (1)
pick-up b12 (1)
stack b12 b23 (1)
unstack b15 b22 (1)
put-down b15 (1)
unstack b22 b29 (1)
stack b22 b6 (1)
pick-up b15 (1)
stack b15 b22 (1)
pick-up b29 (1)
stack b29 b12 (1)
unstack b19 b26 (1)
put-down b19 (1)
unstack b26 b27 (1)
stack b26 b15 (1)
pick-up b19 (1)
stack b19 b26 (1)
unstack b27 b13 (1)
stack b27 b14 (1)
pick-up b13 (1)
stack b13 b21 (1)
pick-up b30 (1)
stack b30 b27 (1)
unstack b2 b17 (1)
put-down b2 (1)
pick-up b17 (1)
stack b17 b19 (1)
pick-up b2 (1)
stack b2 b17 (1)
unstack b24 b18 (1)
put-down b24 (1)
unstack b18 b9 (1)
stack b18 b29 (1)
pick-up b24 (1)
stack b24 b18 (1)
unstack b9 b10 (1)
stack b9 b4 (1)
pick-up b10 (1)
stack b10 b25 (1)
unstack b30 b27 (1)
put-down b30 (1)
unstack b27 b14 (1)
put-down b27 (1)
unstack b14 b3 (1)
put-down b14 (1)
pick-up b27 (1)
stack b27 b14 (1)
pick-up b30 (1)
stack b30 b27 (1)
unstack b3 b28 (1)
put-down b3 (1)
unstack b28 b7 (1)
put-down b28 (1)
pick-up b3 (1)
stack b3 b28 (1)
pick-up b7 (1)
stack b7 b10 (1)
unstack b3 b28 (1)
put-down b3 (1)
pick-up b28 (1)
stack b28 b7 (1)
pick-up b3 (1)
stack b3 b28 (1)
unstack b30 b27 (1)
put-down b30 (1)
unstack b27 b14 (1)
put-down b27 (1)
pick-up b14 (1)
stack b14 b3 (1)
pick-up b27 (1)
stack b27 b14 (1)
pick-up b30 (1)
stack b30 b27 (1)
unstack b24 b18 (1)
put-down b24 (1)
unstack b18 b29 (1)
put-down b18 (1)
pick-up b24 (1)
stack b24 b18 (1)
unstack b29 b12 (1)
put-down b29 (1)
unstack b12 b23 (1)
put-down b12 (1)
pick-up b29 (1)
stack b29 b12 (1)
unstack b24 b18 (1)
put-down b24 (1)
pick-up b18 (1)
stack b18 b29 (1)
pick-up b24 (1)
stack b24 b18 (1)
unstack b23 b31 (1)
put-down b23 (1)
unstack b31 b1 (1)
put-down b31 (1)
pick-up b23 (1)
stack b23 b31 (1)
unstack b1 b11 (1)
put-down b1 (1)
pick-up b11 (1)
stack b11 b13 (1)
pick-up b1 (1)
stack b1 b11 (1)
unstack b23 b31 (1)
put-down b23 (1)
pick-up b31 (1)
stack b31 b1 (1)
pick-up b23 (1)
stack b23 b31 (1)
unstack b24 b18 (1)
put-down b24 (1)
unstack b18 b29 (1)
put-down b18 (1)
pick-up b24 (1)
stack b24 b18 (1)
unstack b29 b12 (1)
put-down b29 (1)
pick-up b12 (1)
stack b12 b23 (1)
pick-up b29 (1)
stack b29 b12 (1)
unstack b24 b18 (1)
put-down b24 (1)
pick-up b18 (1)
stack b18 b29 (1)
pick-up b24 (1)
stack b24 b18 (1)
[t=0.13709s, 28576 KB] Plan length: 180 step(s).
[t=0.13709s, 28576 KB] Plan cost: 180
[t=0.13709s, 28576 KB] Expanded 1877 state(s).
[t=0.13709s, 28576 KB] Reopened 0 state(s).
[t=0.13709s, 28576 KB] Evaluated 1878 state(s).
[t=0.13709s, 28576 KB] Evaluations: 3756
[t=0.13709s, 28576 KB] Generated 26248 state(s).
[t=0.13709s, 28576 KB] Dead ends: 0 state(s).
[t=0.13709s, 28576 KB] Number of registered states: 1878
[t=0.13709s, 28576 KB] Int hash set load factor: 1878/2048 = 0.916992
[t=0.13709s, 28576 KB] Int hash set resizes: 11
[t=0.13709s, 28576 KB] Search time: 0.0844113s
[t=0.13709s, 28576 KB] Total time: 0.13709s
Solution found.
Peak memory: 28576 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.36s
