INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_23/bws_problem_23_48.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.011s wall-clock]
1750 relevant atoms
1173 auxiliary atoms
2923 final queue length
5088 total queue pushes
Completing instantiation... [0.020s CPU, 0.017s wall-clock]
Instantiating: [0.030s CPU, 0.029s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
24 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.007s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.026s wall-clock]
1564 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
46 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
47 of 47 variables necessary.
24 of 47 mutex groups necessary.
1058 of 1058 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.007s wall-clock]
Translator variables: 47
Translator derived variables: 0
Translator facts: 600
Translator goal facts: 17
Translator mutex groups: 24
Translator total mutex groups size: 576
Translator operators: 1058
Translator axioms: 0
Translator task size: 9106
Translator peak memory: 37488 KB
Writing output... [0.010s CPU, 0.005s wall-clock]
Done! [0.090s CPU, 0.091s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=1.8519e-05s, 24488 KB] reading input...
[t=0.00308542s, 25428 KB] done reading input!
[t=0.00403068s, 25824 KB] Initializing landmark count heuristic...
[t=0.00406225s, 25824 KB] Generating landmark graph...
[t=0.00412761s, 25824 KB] Building a landmark graph with reasonable orders.
[t=0.0041908s, 25956 KB] Initializing Exploration...
[t=0.00452834s, 26256 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0161189s, 26784 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0162004s, 26784 KB] Landmarks generation time: 0.0120745s
[t=0.0162145s, 26784 KB] Discovered 97 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0162309s, 26784 KB] 670 edges
[t=0.0162409s, 26784 KB] approx. reasonable orders
[t=0.0182183s, 26784 KB] approx. obedient reasonable orders
[t=0.0182502s, 26784 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0182601s, 26784 KB] Landmarks generation time: 0.0141959s
[t=0.01827s, 26784 KB] Discovered 97 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0182785s, 26784 KB] 710 edges
[t=0.0182872s, 26784 KB] Landmark graph generation time: 0.0142323s
[t=0.0182962s, 26784 KB] Landmark graph contains 97 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0183054s, 26784 KB] Landmark graph contains 710 orderings.
[t=0.0186656s, 26784 KB] Simplifying 4186 unary operators... done! [3174 unary operators]
[t=0.0196677s, 26784 KB] time to simplify: 0.00107567s
[t=0.0198119s, 26784 KB] Initializing additive heuristic...
[t=0.0198293s, 26784 KB] Initializing FF heuristic...
[t=0.0199174s, 26784 KB] Building successor generator...done!
[t=0.0202032s, 26784 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0202139s, 26784 KB] time for successor generation creation: 0.000248176s
[t=0.0202308s, 26784 KB] Variables: 47
[t=0.0202394s, 26784 KB] FactPairs: 600
[t=0.020248s, 26784 KB] Bytes per state: 20
[t=0.0204322s, 26784 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.020489s, 26784 KB] 45 initial landmarks, 17 goal landmarks
[t=0.0205594s, 26784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0205699s, 26784 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0205799s, 26784 KB] g=0, 1 evaluated, 0 expanded
[t=0.0206042s, 26784 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0206167s, 26784 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0207551s, 26784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0207673s, 26784 KB] g=2, 5 evaluated, 4 expanded
[t=0.0208584s, 26784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0208678s, 26784 KB] g=4, 8 evaluated, 7 expanded
[t=0.0209825s, 26784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0209938s, 26784 KB] g=6, 12 evaluated, 11 expanded
[t=0.021363s, 26784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0213762s, 26784 KB] g=10, 26 evaluated, 25 expanded
[t=0.0215684s, 26784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0215796s, 26784 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0215891s, 26784 KB] g=12, 33 evaluated, 32 expanded
[t=0.0217827s, 26784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0217952s, 26784 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0218038s, 26784 KB] g=14, 40 evaluated, 39 expanded
[t=0.0218704s, 26784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0218819s, 26784 KB] g=15, 42 evaluated, 41 expanded
[t=0.0221625s, 26784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0221786s, 26784 KB] g=17, 52 evaluated, 51 expanded
[t=0.0224592s, 26784 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0224705s, 26784 KB] g=20, 62 evaluated, 61 expanded
[t=0.0225088s, 26784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0225274s, 26784 KB] g=20, 63 evaluated, 62 expanded
[t=0.0229454s, 26784 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0229595s, 26784 KB] g=22, 78 evaluated, 77 expanded
[t=0.0231493s, 26784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0231593s, 26784 KB] g=22, 85 evaluated, 84 expanded
[t=0.0233485s, 26784 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0233579s, 26784 KB] g=24, 92 evaluated, 91 expanded
[t=0.0236429s, 26784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0236535s, 26784 KB] g=24, 103 evaluated, 102 expanded
[t=0.0240302s, 26784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0240414s, 26784 KB] g=26, 117 evaluated, 116 expanded
[t=0.0246739s, 26784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0246851s, 26784 KB] g=28, 140 evaluated, 139 expanded
[t=0.0251282s, 26784 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0251389s, 26784 KB] g=30, 157 evaluated, 156 expanded
[t=0.025253s, 26784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0252627s, 26784 KB] g=30, 161 evaluated, 160 expanded
[t=0.0256425s, 26784 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0256525s, 26784 KB] g=32, 175 evaluated, 174 expanded
[t=0.0258677s, 26784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0258771s, 26784 KB] g=32, 183 evaluated, 182 expanded
[t=0.0261735s, 26784 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0261857s, 26784 KB] g=34, 194 evaluated, 193 expanded
[t=0.026524s, 26784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0265344s, 26784 KB] g=34, 207 evaluated, 206 expanded
[t=0.026709s, 26784 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0267197s, 26784 KB] g=36, 213 evaluated, 212 expanded
[t=0.0270977s, 26784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0271076s, 26784 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0271166s, 26784 KB] g=36, 227 evaluated, 226 expanded
[t=0.0274258s, 26784 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0274374s, 26784 KB] g=38, 238 evaluated, 237 expanded
[t=0.0275102s, 26784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0275197s, 26784 KB] g=38, 240 evaluated, 239 expanded
[t=0.0281749s, 26784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0281891s, 26784 KB] g=40, 264 evaluated, 263 expanded
[t=0.0284834s, 26784 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0284937s, 26784 KB] g=40, 275 evaluated, 274 expanded
[t=0.0288368s, 26784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0288462s, 26784 KB] g=42, 288 evaluated, 287 expanded
[t=0.0289341s, 26784 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0289431s, 26784 KB] g=42, 291 evaluated, 290 expanded
[t=0.0294092s, 26784 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0294193s, 26784 KB] g=44, 309 evaluated, 308 expanded
[t=0.0295943s, 26784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0296046s, 26784 KB] g=44, 315 evaluated, 314 expanded
[t=0.0298585s, 26784 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0298692s, 26784 KB] g=46, 325 evaluated, 324 expanded
[t=0.0302514s, 26784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.030261s, 26784 KB] g=46, 340 evaluated, 339 expanded
[t=0.0302979s, 26784 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0303069s, 26784 KB] g=48, 341 evaluated, 340 expanded
[t=0.0305185s, 26784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0305283s, 26784 KB] g=47, 349 evaluated, 348 expanded
[t=0.0307388s, 26784 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0307517s, 26784 KB] g=50, 355 evaluated, 354 expanded
[t=0.0310397s, 26784 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0310492s, 26784 KB] g=52, 366 evaluated, 365 expanded
[t=0.0311096s, 26784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0311208s, 26784 KB] g=48, 368 evaluated, 367 expanded
[t=0.0313001s, 26784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0313093s, 26784 KB] g=49, 375 evaluated, 374 expanded
[t=0.032139s, 26784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0321519s, 26784 KB] g=50, 407 evaluated, 406 expanded
[t=0.0322966s, 26784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0323124s, 26784 KB] g=51, 412 evaluated, 411 expanded
[t=0.0326585s, 26784 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.032668s, 26784 KB] g=56, 425 evaluated, 424 expanded
[t=0.0327285s, 26784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0327378s, 26784 KB] g=52, 427 evaluated, 426 expanded
[t=0.0328805s, 26784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0328898s, 26784 KB] g=53, 432 evaluated, 431 expanded
[t=0.0329795s, 26784 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0329888s, 26784 KB] g=58, 435 evaluated, 434 expanded
[t=0.0335001s, 26784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.03351s, 26784 KB] g=54, 454 evaluated, 453 expanded
[t=0.0336279s, 26784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0336372s, 26784 KB] g=55, 458 evaluated, 457 expanded
[t=0.0341955s, 26784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0342048s, 26784 KB] g=56, 479 evaluated, 478 expanded
[t=0.0343184s, 26784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0343283s, 26784 KB] g=57, 483 evaluated, 482 expanded
[t=0.034546s, 26784 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0345554s, 26784 KB] g=62, 491 evaluated, 490 expanded
[t=0.0345919s, 26784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0346009s, 26784 KB] g=58, 492 evaluated, 491 expanded
[t=0.034682s, 26784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0346934s, 26784 KB] g=59, 494 evaluated, 493 expanded
[t=0.0347608s, 26784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0347701s, 26784 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0347784s, 26784 KB] g=60, 496 evaluated, 495 expanded
[t=0.0350743s, 26784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0350851s, 26784 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0350947s, 26784 KB] g=64, 507 evaluated, 506 expanded
[t=0.0352118s, 26784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0352208s, 26784 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0352292s, 26784 KB] g=66, 511 evaluated, 510 expanded
[t=0.0354573s, 26784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0354668s, 26784 KB] g=70, 519 evaluated, 518 expanded
[t=0.0355264s, 26784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0355357s, 26784 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0355441s, 26784 KB] g=72, 521 evaluated, 520 expanded
[t=0.0367728s, 26784 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0367893s, 26784 KB] g=86, 576 evaluated, 575 expanded
[t=0.0369841s, 26784 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0370012s, 26784 KB] g=90, 585 evaluated, 584 expanded
[t=0.0370742s, 26784 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0370856s, 26784 KB] g=92, 588 evaluated, 587 expanded
[t=0.0372738s, 26784 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0372841s, 26784 KB] g=100, 599 evaluated, 598 expanded
[t=0.0373028s, 26784 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.037312s, 26784 KB] g=101, 600 evaluated, 599 expanded
[t=0.0373277s, 26784 KB] Solution found!
[t=0.0373389s, 26784 KB] Actual search time: 0.0168461s
unstack b21 b17 (1)
put-down b21 (1)
unstack b17 b22 (1)
put-down b17 (1)
unstack b22 b8 (1)
put-down b22 (1)
unstack b4 b15 (1)
put-down b4 (1)
unstack b15 b10 (1)
put-down b15 (1)
unstack b10 b12 (1)
put-down b10 (1)
unstack b12 b20 (1)
put-down b12 (1)
unstack b20 b7 (1)
put-down b20 (1)
unstack b7 b1 (1)
put-down b7 (1)
unstack b1 b9 (1)
put-down b1 (1)
unstack b9 b2 (1)
stack b9 b10 (1)
unstack b2 b5 (1)
put-down b2 (1)
unstack b5 b14 (1)
put-down b5 (1)
unstack b14 b11 (1)
put-down b14 (1)
unstack b11 b23 (1)
stack b11 b4 (1)
pick-up b20 (1)
stack b20 b9 (1)
unstack b23 b6 (1)
put-down b23 (1)
unstack b6 b16 (1)
stack b6 b12 (1)
unstack b16 b19 (1)
put-down b16 (1)
unstack b19 b13 (1)
put-down b19 (1)
unstack b13 b18 (1)
stack b13 b23 (1)
pick-up b7 (1)
stack b7 b19 (1)
pick-up b8 (1)
stack b8 b16 (1)
pick-up b17 (1)
stack b17 b13 (1)
pick-up b21 (1)
stack b21 b11 (1)
pick-up b14 (1)
stack b14 b21 (1)
pick-up b2 (1)
stack b2 b14 (1)
pick-up b22 (1)
stack b22 b6 (1)
pick-up b1 (1)
stack b1 b22 (1)
pick-up b18 (1)
stack b18 b1 (1)
unstack b7 b19 (1)
put-down b7 (1)
pick-up b19 (1)
stack b19 b17 (1)
pick-up b7 (1)
stack b7 b19 (1)
unstack b2 b14 (1)
put-down b2 (1)
unstack b8 b16 (1)
put-down b8 (1)
pick-up b16 (1)
stack b16 b2 (1)
pick-up b8 (1)
stack b8 b16 (1)
unstack b14 b21 (1)
put-down b14 (1)
unstack b21 b11 (1)
put-down b21 (1)
pick-up b14 (1)
stack b14 b21 (1)
unstack b11 b4 (1)
put-down b11 (1)
pick-up b4 (1)
stack b4 b15 (1)
pick-up b11 (1)
stack b11 b4 (1)
unstack b14 b21 (1)
put-down b14 (1)
pick-up b21 (1)
stack b21 b11 (1)
pick-up b14 (1)
stack b14 b21 (1)
unstack b8 b16 (1)
put-down b8 (1)
unstack b16 b2 (1)
put-down b16 (1)
pick-up b2 (1)
stack b2 b14 (1)
pick-up b16 (1)
stack b16 b2 (1)
pick-up b8 (1)
stack b8 b16 (1)
[t=0.0373484s, 26784 KB] Plan length: 102 step(s).
[t=0.0373484s, 26784 KB] Plan cost: 102
[t=0.0373484s, 26784 KB] Expanded 600 state(s).
[t=0.0373484s, 26784 KB] Reopened 0 state(s).
[t=0.0373484s, 26784 KB] Evaluated 601 state(s).
[t=0.0373484s, 26784 KB] Evaluations: 1202
[t=0.0373484s, 26784 KB] Generated 7675 state(s).
[t=0.0373484s, 26784 KB] Dead ends: 0 state(s).
[t=0.0373484s, 26784 KB] Number of registered states: 601
[t=0.0373484s, 26784 KB] Int hash set load factor: 601/1024 = 0.586914
[t=0.0373484s, 26784 KB] Int hash set resizes: 10
[t=0.0373484s, 26784 KB] Search time: 0.0169166s
[t=0.0373484s, 26784 KB] Total time: 0.0373484s
Solution found.
Peak memory: 26784 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.18s
