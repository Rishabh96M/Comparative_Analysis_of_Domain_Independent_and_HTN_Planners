INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_20/bws_problem_20_52.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.010s wall-clock]
1342 relevant atoms
900 auxiliary atoms
2242 final queue length
3889 total queue pushes
Completing instantiation... [0.020s CPU, 0.018s wall-clock]
Instantiating: [0.030s CPU, 0.029s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.001s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
21 uncovered facts
Choosing groups: [0.010s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.005s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.027s wall-clock]
1180 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
40 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.015s wall-clock]
Reordering and filtering variables...
41 of 41 variables necessary.
21 of 41 mutex groups necessary.
800 of 800 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.008s wall-clock]
Translator variables: 41
Translator derived variables: 0
Translator facts: 462
Translator goal facts: 14
Translator mutex groups: 21
Translator total mutex groups size: 441
Translator operators: 800
Translator axioms: 0
Translator task size: 6898
Translator peak memory: 35944 KB
Writing output... [0.010s CPU, 0.006s wall-clock]
Done! [0.100s CPU, 0.096s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=1.9642e-05s, 24488 KB] reading input...
[t=0.00230737s, 25180 KB] done reading input!
[t=0.00314206s, 25444 KB] Initializing landmark count heuristic...
[t=0.00317097s, 25444 KB] Generating landmark graph...
[t=0.00322436s, 25576 KB] Building a landmark graph with reasonable orders.
[t=0.0032919s, 25576 KB] Initializing Exploration...
[t=0.00354912s, 25744 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.01066s, 26140 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0109141s, 26140 KB] Landmarks generation time: 0.0076989s
[t=0.0109379s, 26140 KB] Discovered 78 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0110926s, 26140 KB] 242 edges
[t=0.0111162s, 26140 KB] approx. reasonable orders
[t=0.0129831s, 26140 KB] approx. obedient reasonable orders
[t=0.0130303s, 26140 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0130418s, 26140 KB] Landmarks generation time: 0.00986841s
[t=0.0130521s, 26140 KB] Discovered 78 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0130604s, 26140 KB] 282 edges
[t=0.0130697s, 26140 KB] Landmark graph generation time: 0.00990592s
[t=0.0130786s, 26140 KB] Landmark graph contains 78 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0130869s, 26140 KB] Landmark graph contains 282 orderings.
[t=0.0135711s, 26280 KB] Simplifying 3160 unary operators... done! [2400 unary operators]
[t=0.0143442s, 26280 KB] time to simplify: 0.000826379s
[t=0.0144491s, 26280 KB] Initializing additive heuristic...
[t=0.0144623s, 26280 KB] Initializing FF heuristic...
[t=0.0145162s, 26280 KB] Building successor generator...done!
[t=0.0146942s, 26280 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0147029s, 26280 KB] time for successor generation creation: 0.00015109s
[t=0.0147149s, 26280 KB] Variables: 41
[t=0.0147232s, 26280 KB] FactPairs: 462
[t=0.0147315s, 26280 KB] Bytes per state: 16
[t=0.0148273s, 26280 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0148707s, 26280 KB] 37 initial landmarks, 14 goal landmarks
[t=0.0149209s, 26280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0149304s, 26280 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0149486s, 26280 KB] g=0, 1 evaluated, 0 expanded
[t=0.0149628s, 26280 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0149733s, 26280 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0151075s, 26280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0151195s, 26280 KB] g=1, 6 evaluated, 5 expanded
[t=0.0152766s, 26280 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0152869s, 26280 KB] g=2, 12 evaluated, 11 expanded
[t=0.0153665s, 26280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0153755s, 26280 KB] g=3, 15 evaluated, 14 expanded
[t=0.0155461s, 26280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0155609s, 26280 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0155693s, 26280 KB] g=4, 22 evaluated, 21 expanded
[t=0.015599s, 26280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0156077s, 26280 KB] g=5, 23 evaluated, 22 expanded
[t=0.0157588s, 26280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0157678s, 26280 KB] g=7, 30 evaluated, 29 expanded
[t=0.0157983s, 26280 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0158073s, 26280 KB] g=8, 31 evaluated, 30 expanded
[t=0.0159408s, 26280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0159497s, 26280 KB] g=9, 37 evaluated, 36 expanded
[t=0.0159996s, 26280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0160081s, 26280 KB] g=10, 39 evaluated, 38 expanded
[t=0.016038s, 26280 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0160465s, 26280 KB] g=10, 40 evaluated, 39 expanded
[t=0.0162816s, 26280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0162968s, 26280 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0163053s, 26280 KB] g=12, 51 evaluated, 50 expanded
[t=0.0164116s, 26280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0164205s, 26280 KB] g=13, 56 evaluated, 55 expanded
[t=0.0165304s, 26280 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0165395s, 26280 KB] g=14, 61 evaluated, 60 expanded
[t=0.0167846s, 26280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0167968s, 26280 KB] g=15, 72 evaluated, 71 expanded
[t=0.0170831s, 26280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0170928s, 26280 KB] g=18, 86 evaluated, 85 expanded
[t=0.0171234s, 26280 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0171321s, 26280 KB] g=18, 87 evaluated, 86 expanded
[t=0.0174215s, 26280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0174315s, 26280 KB] g=20, 101 evaluated, 100 expanded
[t=0.0178116s, 26280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0178213s, 26280 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0178295s, 26280 KB] g=22, 119 evaluated, 118 expanded
[t=0.0180259s, 26280 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0180351s, 26280 KB] g=24, 128 evaluated, 127 expanded
[t=0.0180946s, 26280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0181035s, 26280 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0181117s, 26280 KB] g=24, 130 evaluated, 129 expanded
[t=0.0183007s, 26280 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0183097s, 26280 KB] g=26, 139 evaluated, 138 expanded
[t=0.0183591s, 26280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0183682s, 26280 KB] g=26, 141 evaluated, 140 expanded
[t=0.01864s, 26280 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0186492s, 26280 KB] g=28, 154 evaluated, 153 expanded
[t=0.0186987s, 26280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0187076s, 26280 KB] g=29, 156 evaluated, 155 expanded
[t=0.0189839s, 26280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0189949s, 26280 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0190106s, 26280 KB] g=30, 169 evaluated, 168 expanded
[t=0.0190402s, 26280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0190491s, 26280 KB] g=31, 170 evaluated, 169 expanded
[t=0.0192595s, 26280 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0192685s, 26280 KB] g=32, 181 evaluated, 180 expanded
[t=0.0193321s, 26280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.019341s, 26280 KB] g=34, 184 evaluated, 183 expanded
[t=0.0196002s, 26280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0196097s, 26280 KB] g=36, 198 evaluated, 197 expanded
[t=0.0196369s, 26280 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0196509s, 26280 KB] g=36, 199 evaluated, 198 expanded
[t=0.0198712s, 26280 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0198801s, 26280 KB] g=38, 211 evaluated, 210 expanded
[t=0.0199066s, 26280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0199157s, 26280 KB] g=39, 212 evaluated, 211 expanded
[t=0.0200546s, 26280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0200695s, 26280 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.020079s, 26280 KB] g=40, 219 evaluated, 218 expanded
[t=0.0201146s, 26280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0201428s, 26280 KB] g=41, 220 evaluated, 219 expanded
[t=0.0202384s, 26280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0202476s, 26280 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0202561s, 26280 KB] g=42, 224 evaluated, 223 expanded
[t=0.0202819s, 26280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0202909s, 26280 KB] g=43, 225 evaluated, 224 expanded
[t=0.0203844s, 26280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0203955s, 26280 KB] g=45, 230 evaluated, 229 expanded
[t=0.0204823s, 26280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0204915s, 26280 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0204998s, 26280 KB] g=46, 235 evaluated, 234 expanded
[t=0.0205249s, 26280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0205341s, 26280 KB] g=47, 236 evaluated, 235 expanded
[t=0.02056s, 26280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0205688s, 26280 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0205771s, 26280 KB] g=48, 237 evaluated, 236 expanded
[t=0.0206027s, 26280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0206159s, 26280 KB] g=49, 238 evaluated, 237 expanded
[t=0.0206726s, 26280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0206837s, 26280 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0206945s, 26280 KB] g=52, 241 evaluated, 240 expanded
[t=0.0207191s, 26280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.020732s, 26280 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0207436s, 26280 KB] g=53, 242 evaluated, 241 expanded
[t=0.0207655s, 26280 KB] Solution found!
[t=0.0207815s, 26280 KB] Actual search time: 0.00591069s
unstack b20 b19 (1)
put-down b20 (1)
pick-up b1 (1)
stack b1 b20 (1)
unstack b18 b7 (1)
put-down b18 (1)
unstack b8 b10 (1)
stack b8 b9 (1)
unstack b7 b12 (1)
put-down b7 (1)
unstack b10 b3 (1)
stack b10 b7 (1)
unstack b19 b14 (1)
put-down b19 (1)
unstack b8 b9 (1)
put-down b8 (1)
unstack b9 b2 (1)
put-down b9 (1)
unstack b2 b17 (1)
stack b2 b1 (1)
unstack b17 b15 (1)
stack b17 b4 (1)
unstack b15 b16 (1)
stack b15 b17 (1)
pick-up b12 (1)
stack b12 b14 (1)
pick-up b19 (1)
stack b19 b2 (1)
pick-up b3 (1)
stack b3 b19 (1)
pick-up b8 (1)
stack b8 b9 (1)
unstack b16 b5 (1)
put-down b16 (1)
unstack b5 b6 (1)
put-down b5 (1)
pick-up b18 (1)
stack b18 b5 (1)
unstack b6 b13 (1)
stack b6 b3 (1)
pick-up b16 (1)
stack b16 b13 (1)
unstack b12 b14 (1)
put-down b12 (1)
pick-up b14 (1)
stack b14 b15 (1)
pick-up b12 (1)
stack b12 b14 (1)
unstack b8 b9 (1)
put-down b8 (1)
pick-up b9 (1)
stack b9 b16 (1)
pick-up b8 (1)
stack b8 b9 (1)
[t=0.0207963s, 26280 KB] Plan length: 54 step(s).
[t=0.0207963s, 26280 KB] Plan cost: 54
[t=0.0207963s, 26280 KB] Expanded 242 state(s).
[t=0.0207963s, 26280 KB] Reopened 0 state(s).
[t=0.0207963s, 26280 KB] Evaluated 243 state(s).
[t=0.0207963s, 26280 KB] Evaluations: 486
[t=0.0207963s, 26280 KB] Generated 2430 state(s).
[t=0.0207963s, 26280 KB] Dead ends: 0 state(s).
[t=0.0207963s, 26280 KB] Number of registered states: 243
[t=0.0207963s, 26280 KB] Int hash set load factor: 243/256 = 0.949219
[t=0.0207963s, 26280 KB] Int hash set resizes: 8
[t=0.0207963s, 26280 KB] Search time: 0.00596958s
[t=0.0207963s, 26280 KB] Total time: 0.0207963s
Solution found.
Peak memory: 26280 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.17s
