INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_30/bws_problem_30_48.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.017s wall-clock]
2912 relevant atoms
1950 auxiliary atoms
4862 final queue length
8527 total queue pushes
Completing instantiation... [0.030s CPU, 0.030s wall-clock]
Instantiating: [0.050s CPU, 0.049s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
31 uncovered facts
Choosing groups: [0.000s CPU, 0.002s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.001s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.002s wall-clock]
Translating task: [0.050s CPU, 0.050s wall-clock]
2670 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
60 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.022s wall-clock]
Reordering and filtering variables...
61 of 61 variables necessary.
31 of 61 mutex groups necessary.
1800 of 1800 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.012s wall-clock]
Translator variables: 61
Translator derived variables: 0
Translator facts: 992
Translator goal facts: 26
Translator mutex groups: 31
Translator total mutex groups size: 961
Translator operators: 1800
Translator axioms: 0
Translator task size: 15450
Translator peak memory: 41336 KB
Writing output... [0.010s CPU, 0.010s wall-clock]
Done! [0.160s CPU, 0.161s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.0025e-05s, 24488 KB] reading input...
[t=0.00548884s, 26364 KB] done reading input!
[t=0.00671161s, 26760 KB] Initializing landmark count heuristic...
[t=0.0068092s, 26760 KB] Generating landmark graph...
[t=0.00692308s, 26892 KB] Building a landmark graph with reasonable orders.
[t=0.00704762s, 27024 KB] Initializing Exploration...
[t=0.00776991s, 27316 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0351275s, 28240 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0352635s, 28240 KB] Landmarks generation time: 0.0283516s
[t=0.0352896s, 28240 KB] Discovered 135 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0353224s, 28240 KB] 651 edges
[t=0.0353396s, 28240 KB] approx. reasonable orders
[t=0.0373848s, 28240 KB] approx. obedient reasonable orders
[t=0.0375282s, 28240 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0375437s, 28240 KB] Landmarks generation time: 0.0307305s
[t=0.0375587s, 28240 KB] Discovered 135 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.03757s, 28240 KB] 670 edges
[t=0.0375817s, 28240 KB] Landmark graph generation time: 0.030782s
[t=0.0375936s, 28240 KB] Landmark graph contains 135 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0376041s, 28240 KB] Landmark graph contains 670 orderings.
[t=0.0384449s, 28260 KB] Simplifying 7140 unary operators... done! [5400 unary operators]
[t=0.040365s, 28260 KB] time to simplify: 0.00212501s
[t=0.0407s, 28260 KB] Initializing additive heuristic...
[t=0.040721s, 28260 KB] Initializing FF heuristic...
[t=0.0408086s, 28260 KB] Building successor generator...done!
[t=0.0411615s, 28260 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0411697s, 28260 KB] time for successor generation creation: 0.000306365s
[t=0.0412045s, 28260 KB] Variables: 61
[t=0.0412122s, 28260 KB] FactPairs: 992
[t=0.0412204s, 28260 KB] Bytes per state: 24
[t=0.0413466s, 28260 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0413976s, 28260 KB] 60 initial landmarks, 26 goal landmarks
[t=0.0414922s, 28260 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 75
[t=0.0415035s, 28260 KB] New best heuristic value for ff(transform = adapt_costs(one)): 54
[t=0.0415121s, 28260 KB] g=0, 1 evaluated, 0 expanded
[t=0.04153s, 28260 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 75
[t=0.0415396s, 28260 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 54
[t=0.0418341s, 28260 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 74
[t=0.0418509s, 28260 KB] New best heuristic value for ff(transform = adapt_costs(one)): 53
[t=0.0418653s, 28260 KB] g=2, 7 evaluated, 6 expanded
[t=0.0421851s, 28260 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 73
[t=0.0422074s, 28260 KB] New best heuristic value for ff(transform = adapt_costs(one)): 52
[t=0.0422193s, 28260 KB] g=4, 13 evaluated, 12 expanded
[t=0.0424952s, 28260 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 72
[t=0.042506s, 28260 KB] g=6, 19 evaluated, 18 expanded
[t=0.0426086s, 28260 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 71
[t=0.0426188s, 28260 KB] g=7, 21 evaluated, 20 expanded
[t=0.0426886s, 28260 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 70
[t=0.0427097s, 28260 KB] New best heuristic value for ff(transform = adapt_costs(one)): 51
[t=0.0427203s, 28260 KB] g=8, 22 evaluated, 21 expanded
[t=0.0429875s, 28260 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 69
[t=0.0429973s, 28260 KB] New best heuristic value for ff(transform = adapt_costs(one)): 50
[t=0.0430075s, 28260 KB] g=10, 28 evaluated, 27 expanded
[t=0.0432989s, 28260 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 68
[t=0.0433086s, 28260 KB] g=12, 35 evaluated, 34 expanded
[t=0.0434837s, 28260 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 67
[t=0.0434933s, 28260 KB] New best heuristic value for ff(transform = adapt_costs(one)): 48
[t=0.0435149s, 28260 KB] g=12, 39 evaluated, 38 expanded
[t=0.0437632s, 28260 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 66
[t=0.0437727s, 28260 KB] g=14, 45 evaluated, 44 expanded
[t=0.0440765s, 28260 KB] New best heuristic value for ff(transform = adapt_costs(one)): 47
[t=0.0440877s, 28260 KB] g=16, 52 evaluated, 51 expanded
[t=0.044143s, 28260 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 65
[t=0.0441527s, 28260 KB] g=16, 53 evaluated, 52 expanded
[t=0.0446547s, 28260 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 63
[t=0.0446651s, 28260 KB] New best heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0446756s, 28260 KB] g=18, 65 evaluated, 64 expanded
[t=0.0449688s, 28260 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 60
[t=0.0449792s, 28260 KB] New best heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.0449901s, 28260 KB] g=20, 72 evaluated, 71 expanded
[t=0.0452556s, 28260 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 58
[t=0.0452655s, 28260 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0452765s, 28260 KB] g=22, 78 evaluated, 77 expanded
[t=0.0455526s, 28260 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 57
[t=0.0455632s, 28260 KB] g=24, 84 evaluated, 83 expanded
[t=0.0458658s, 28260 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.045879s, 28260 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0458899s, 28260 KB] g=26, 91 evaluated, 90 expanded
[t=0.0462279s, 28260 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0462382s, 28260 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0462486s, 28260 KB] g=28, 99 evaluated, 98 expanded
[t=0.046548s, 28260 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.046558s, 28260 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0465683s, 28260 KB] g=30, 106 evaluated, 105 expanded
[t=0.0468531s, 28260 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0468648s, 28260 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0468751s, 28260 KB] g=32, 112 evaluated, 111 expanded
[t=0.0470937s, 28260 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0471053s, 28260 KB] g=33, 117 evaluated, 116 expanded
[t=0.0474727s, 28260 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0474825s, 28260 KB] g=36, 125 evaluated, 124 expanded
[t=0.0475777s, 28260 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0475872s, 28260 KB] g=37, 127 evaluated, 126 expanded
[t=0.0476457s, 28260 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0476551s, 28260 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0476651s, 28260 KB] g=38, 128 evaluated, 127 expanded
[t=0.0480532s, 28260 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0480667s, 28260 KB] g=40, 137 evaluated, 136 expanded
[t=0.0483985s, 28260 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0484084s, 28260 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0484187s, 28260 KB] g=42, 145 evaluated, 144 expanded
[t=0.0491464s, 28260 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0491569s, 28260 KB] g=45, 163 evaluated, 162 expanded
[t=0.0492137s, 28260 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0492235s, 28260 KB] g=46, 164 evaluated, 163 expanded
[t=0.049572s, 28260 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0495826s, 28260 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0495931s, 28260 KB] g=48, 172 evaluated, 171 expanded
[t=0.0499772s, 28260 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.049988s, 28260 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0499985s, 28260 KB] g=50, 181 evaluated, 180 expanded
[t=0.0503283s, 28260 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0503391s, 28260 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0503498s, 28260 KB] g=52, 189 evaluated, 188 expanded
[t=0.0509664s, 28260 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0509793s, 28260 KB] g=55, 204 evaluated, 203 expanded
[t=0.0515725s, 28260 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0515834s, 28260 KB] g=56, 219 evaluated, 218 expanded
[t=0.0518738s, 28260 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0518844s, 28260 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0518951s, 28260 KB] g=58, 226 evaluated, 225 expanded
[t=0.0522231s, 28260 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0522341s, 28260 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0522449s, 28260 KB] g=60, 234 evaluated, 233 expanded
[t=0.0525755s, 28260 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0525963s, 28260 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0526085s, 28260 KB] g=62, 242 evaluated, 241 expanded
[t=0.0528732s, 28260 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0528841s, 28260 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0528945s, 28260 KB] g=64, 248 evaluated, 247 expanded
[t=0.0533549s, 28260 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0533676s, 28260 KB] g=67, 258 evaluated, 257 expanded
[t=0.0534608s, 28260 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0534718s, 28260 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0534831s, 28260 KB] g=68, 260 evaluated, 259 expanded
[t=0.053769s, 28260 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0537849s, 28260 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0537953s, 28260 KB] g=70, 267 evaluated, 266 expanded
[t=0.0540451s, 28260 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0540554s, 28260 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0540663s, 28260 KB] g=72, 273 evaluated, 272 expanded
[t=0.0545513s, 28260 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0545671s, 28260 KB] g=76, 285 evaluated, 284 expanded
[t=0.0547484s, 28260 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0547611s, 28260 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0547716s, 28260 KB] g=78, 289 evaluated, 288 expanded
[t=0.0551835s, 28260 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0551964s, 28260 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0552073s, 28260 KB] g=82, 299 evaluated, 298 expanded
[t=0.0553762s, 28260 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.055386s, 28260 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.055396s, 28260 KB] g=84, 303 evaluated, 302 expanded
[t=0.0562176s, 28260 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.056234s, 28260 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0562449s, 28260 KB] g=92, 324 evaluated, 323 expanded
[t=0.0563335s, 28260 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0563434s, 28260 KB] g=92, 326 evaluated, 325 expanded
[t=0.0564832s, 28260 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0564967s, 28260 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0565072s, 28260 KB] g=94, 329 evaluated, 328 expanded
[t=0.0602212s, 28260 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0602399s, 28260 KB] g=125, 434 evaluated, 433 expanded
[t=0.0603083s, 28260 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0603189s, 28260 KB] g=126, 435 evaluated, 434 expanded
[t=0.0604655s, 28260 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0604758s, 28260 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0604864s, 28260 KB] g=128, 439 evaluated, 438 expanded
[t=0.06077s, 28260 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.060782s, 28260 KB] g=132, 448 evaluated, 447 expanded
[t=0.060878s, 28260 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0608877s, 28260 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0608979s, 28260 KB] g=134, 451 evaluated, 450 expanded
[t=0.0613327s, 28260 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0613434s, 28260 KB] g=146, 469 evaluated, 468 expanded
[t=0.0614269s, 28260 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0614362s, 28260 KB] g=150, 473 evaluated, 472 expanded
[t=0.0614599s, 28260 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0614691s, 28260 KB] g=151, 474 evaluated, 473 expanded
[t=0.0614892s, 28260 KB] Solution found!
[t=0.0615018s, 28260 KB] Actual search time: 0.0201012s
unstack b19 b9 (1)
put-down b19 (1)
unstack b8 b21 (1)
put-down b8 (1)
unstack b13 b2 (1)
put-down b13 (1)
unstack b2 b29 (1)
stack b2 b9 (1)
unstack b29 b24 (1)
put-down b29 (1)
pick-up b24 (1)
stack b24 b29 (1)
unstack b21 b11 (1)
put-down b21 (1)
unstack b11 b25 (1)
stack b11 b13 (1)
unstack b25 b17 (1)
stack b25 b19 (1)
unstack b17 b5 (1)
stack b17 b11 (1)
unstack b26 b27 (1)
stack b26 b5 (1)
unstack b27 b14 (1)
put-down b27 (1)
unstack b14 b3 (1)
stack b14 b24 (1)
pick-up b21 (1)
stack b21 b14 (1)
unstack b3 b30 (1)
stack b3 b17 (1)
unstack b30 b6 (1)
stack b30 b27 (1)
unstack b6 b18 (1)
put-down b6 (1)
unstack b18 b22 (1)
put-down b18 (1)
unstack b22 b16 (1)
stack b22 b21 (1)
unstack b16 b28 (1)
put-down b16 (1)
pick-up b23 (1)
stack b23 b28 (1)
unstack b2 b9 (1)
put-down b2 (1)
unstack b9 b1 (1)
stack b9 b16 (1)
unstack b1 b15 (1)
stack b1 b25 (1)
pick-up b6 (1)
stack b6 b1 (1)
pick-up b2 (1)
stack b2 b9 (1)
unstack b26 b5 (1)
put-down b26 (1)
unstack b5 b10 (1)
stack b5 b3 (1)
unstack b10 b12 (1)
stack b10 b8 (1)
unstack b12 b7 (1)
stack b12 b23 (1)
pick-up b7 (1)
stack b7 b18 (1)
pick-up b26 (1)
stack b26 b5 (1)
unstack b15 b4 (1)
put-down b15 (1)
unstack b4 b20 (1)
stack b4 b12 (1)
pick-up b15 (1)
stack b15 b4 (1)
pick-up b20 (1)
stack b20 b26 (1)
unstack b7 b18 (1)
put-down b7 (1)
pick-up b18 (1)
stack b18 b20 (1)
pick-up b7 (1)
stack b7 b18 (1)
unstack b30 b27 (1)
put-down b30 (1)
pick-up b27 (1)
stack b27 b15 (1)
pick-up b30 (1)
stack b30 b27 (1)
unstack b2 b9 (1)
put-down b2 (1)
unstack b9 b16 (1)
put-down b9 (1)
pick-up b16 (1)
stack b16 b10 (1)
pick-up b9 (1)
stack b9 b16 (1)
pick-up b2 (1)
stack b2 b9 (1)
unstack b7 b18 (1)
put-down b7 (1)
unstack b18 b20 (1)
put-down b18 (1)
pick-up b7 (1)
stack b7 b18 (1)
unstack b20 b26 (1)
put-down b20 (1)
unstack b26 b5 (1)
put-down b26 (1)
pick-up b20 (1)
stack b20 b26 (1)
unstack b7 b18 (1)
put-down b7 (1)
pick-up b18 (1)
stack b18 b20 (1)
pick-up b7 (1)
stack b7 b18 (1)
unstack b5 b3 (1)
put-down b5 (1)
unstack b3 b17 (1)
put-down b3 (1)
pick-up b5 (1)
stack b5 b3 (1)
unstack b17 b11 (1)
put-down b17 (1)
unstack b11 b13 (1)
put-down b11 (1)
pick-up b13 (1)
stack b13 b30 (1)
pick-up b11 (1)
stack b11 b13 (1)
pick-up b17 (1)
stack b17 b11 (1)
unstack b5 b3 (1)
put-down b5 (1)
pick-up b3 (1)
stack b3 b17 (1)
pick-up b5 (1)
stack b5 b3 (1)
unstack b7 b18 (1)
put-down b7 (1)
unstack b18 b20 (1)
put-down b18 (1)
pick-up b7 (1)
stack b7 b18 (1)
unstack b20 b26 (1)
put-down b20 (1)
pick-up b26 (1)
stack b26 b5 (1)
pick-up b20 (1)
stack b20 b26 (1)
unstack b7 b18 (1)
put-down b7 (1)
pick-up b18 (1)
stack b18 b20 (1)
pick-up b7 (1)
stack b7 b18 (1)
[t=0.0615121s, 28260 KB] Plan length: 152 step(s).
[t=0.0615121s, 28260 KB] Plan cost: 152
[t=0.0615121s, 28260 KB] Expanded 474 state(s).
[t=0.0615121s, 28260 KB] Reopened 0 state(s).
[t=0.0615121s, 28260 KB] Evaluated 475 state(s).
[t=0.0615121s, 28260 KB] Evaluations: 950
[t=0.0615121s, 28260 KB] Generated 4430 state(s).
[t=0.0615121s, 28260 KB] Dead ends: 0 state(s).
[t=0.0615121s, 28260 KB] Number of registered states: 475
[t=0.0615121s, 28260 KB] Int hash set load factor: 475/512 = 0.927734
[t=0.0615121s, 28260 KB] Int hash set resizes: 9
[t=0.0615121s, 28260 KB] Search time: 0.0201661s
[t=0.0615121s, 28260 KB] Total time: 0.0615121s
Solution found.
Peak memory: 28260 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.28s
