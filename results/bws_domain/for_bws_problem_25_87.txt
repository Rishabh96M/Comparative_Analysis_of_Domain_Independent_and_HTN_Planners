INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_25/bws_problem_25_87.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.000s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.014s wall-clock]
2052 relevant atoms
1375 auxiliary atoms
3427 final queue length
5983 total queue pushes
Completing instantiation... [0.020s CPU, 0.022s wall-clock]
Instantiating: [0.040s CPU, 0.038s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
26 uncovered facts
Choosing groups: [0.000s CPU, 0.002s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.010s CPU, 0.008s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.032s wall-clock]
1850 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
50 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.022s wall-clock]
Reordering and filtering variables...
51 of 51 variables necessary.
26 of 51 mutex groups necessary.
1250 of 1250 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.008s wall-clock]
Translator variables: 51
Translator derived variables: 0
Translator facts: 702
Translator goal facts: 20
Translator mutex groups: 26
Translator total mutex groups size: 676
Translator operators: 1250
Translator axioms: 0
Translator task size: 10749
Translator peak memory: 38388 KB
Writing output... [0.010s CPU, 0.006s wall-clock]
Done! [0.120s CPU, 0.120s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=1.9757e-05s, 24488 KB] reading input...
[t=0.00365132s, 25632 KB] done reading input!
[t=0.00502982s, 26028 KB] Initializing landmark count heuristic...
[t=0.00506312s, 26028 KB] Generating landmark graph...
[t=0.00513902s, 26160 KB] Building a landmark graph with reasonable orders.
[t=0.0052097s, 26160 KB] Initializing Exploration...
[t=0.0055833s, 26532 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0208207s, 27060 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0209086s, 27060 KB] Landmarks generation time: 0.0157692s
[t=0.020923s, 27060 KB] Discovered 110 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0209399s, 27060 KB] 512 edges
[t=0.02095s, 27060 KB] approx. reasonable orders
[t=0.0251103s, 27060 KB] approx. obedient reasonable orders
[t=0.0251824s, 27060 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0251933s, 27060 KB] Landmarks generation time: 0.0201271s
[t=0.0252033s, 27060 KB] Discovered 110 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0252121s, 27060 KB] 583 edges
[t=0.0252207s, 27060 KB] Landmark graph generation time: 0.020165s
[t=0.0252298s, 27060 KB] Landmark graph contains 110 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.025238s, 27060 KB] Landmark graph contains 583 orderings.
[t=0.0256463s, 27060 KB] Simplifying 4950 unary operators... done! [3750 unary operators]
[t=0.0268509s, 27192 KB] time to simplify: 0.0012833s
[t=0.027008s, 27192 KB] Initializing additive heuristic...
[t=0.0270244s, 27192 KB] Initializing FF heuristic...
[t=0.0270758s, 27192 KB] Building successor generator...done!
[t=0.0273315s, 27192 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0273407s, 27192 KB] time for successor generation creation: 0.000220471s
[t=0.0273537s, 27192 KB] Variables: 51
[t=0.0273621s, 27192 KB] FactPairs: 702
[t=0.0273704s, 27192 KB] Bytes per state: 20
[t=0.02746s, 27192 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0274931s, 27192 KB] 51 initial landmarks, 20 goal landmarks
[t=0.0275535s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.0275631s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0275723s, 27192 KB] g=0, 1 evaluated, 0 expanded
[t=0.0275869s, 27192 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.0275958s, 27192 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.02786s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.0278695s, 27192 KB] g=2, 9 evaluated, 8 expanded
[t=0.0279093s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 58
[t=0.0279182s, 27192 KB] g=2, 10 evaluated, 9 expanded
[t=0.0283446s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0283569s, 27192 KB] g=4, 22 evaluated, 21 expanded
[t=0.0284605s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 57
[t=0.0284698s, 27192 KB] g=4, 25 evaluated, 24 expanded
[t=0.0287361s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.028745s, 27192 KB] g=6, 33 evaluated, 32 expanded
[t=0.0289582s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0289673s, 27192 KB] g=6, 40 evaluated, 39 expanded
[t=0.0291254s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.029135s, 27192 KB] g=8, 45 evaluated, 44 expanded
[t=0.0295236s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0295333s, 27192 KB] g=8, 58 evaluated, 57 expanded
[t=0.0301367s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0301486s, 27192 KB] g=10, 78 evaluated, 77 expanded
[t=0.0303412s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0303511s, 27192 KB] g=12, 84 evaluated, 83 expanded
[t=0.0308164s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0308282s, 27192 KB] g=14, 99 evaluated, 98 expanded
[t=0.0308679s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0308866s, 27192 KB] g=12, 100 evaluated, 99 expanded
[t=0.031253s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0312642s, 27192 KB] g=16, 112 evaluated, 111 expanded
[t=0.0316609s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0316719s, 27192 KB] g=14, 125 evaluated, 124 expanded
[t=0.0317153s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0317242s, 27192 KB] g=18, 126 evaluated, 125 expanded
[t=0.0322494s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0322632s, 27192 KB] g=20, 143 evaluated, 142 expanded
[t=0.0324591s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0324695s, 27192 KB] g=16, 149 evaluated, 148 expanded
[t=0.0331529s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0331956s, 27192 KB] g=24, 170 evaluated, 169 expanded
[t=0.0339766s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0339945s, 27192 KB] g=28, 194 evaluated, 193 expanded
[t=0.0372941s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0373292s, 27192 KB] g=34, 304 evaluated, 303 expanded
[t=0.0377715s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0377818s, 27192 KB] g=36, 318 evaluated, 317 expanded
[t=0.038176s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0381882s, 27192 KB] g=38, 331 evaluated, 330 expanded
[t=0.0406663s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0407105s, 27192 KB] g=42, 412 evaluated, 411 expanded
[t=0.0413141s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0413296s, 27192 KB] g=44, 431 evaluated, 430 expanded
[t=0.0418397s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0418517s, 27192 KB] g=46, 447 evaluated, 446 expanded
[t=0.0423819s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0423927s, 27192 KB] g=48, 464 evaluated, 463 expanded
[t=0.0428576s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0428695s, 27192 KB] g=50, 479 evaluated, 478 expanded
[t=0.043428s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0434425s, 27192 KB] g=52, 495 evaluated, 494 expanded
[t=0.0437029s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0437144s, 27192 KB] g=54, 503 evaluated, 502 expanded
[t=0.0454537s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0454669s, 27192 KB] g=60, 559 evaluated, 558 expanded
[t=0.0496367s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0496517s, 27192 KB] g=66, 698 evaluated, 697 expanded
[t=0.0542067s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.054224s, 27192 KB] g=74, 852 evaluated, 851 expanded
[t=0.0551781s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0551899s, 27192 KB] g=78, 883 evaluated, 882 expanded
[t=0.0553875s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.055398s, 27192 KB] g=80, 889 evaluated, 888 expanded
[t=0.0561238s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0561335s, 27192 KB] g=86, 913 evaluated, 912 expanded
[t=0.0564341s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0564434s, 27192 KB] g=88, 923 evaluated, 922 expanded
[t=0.0565156s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0565317s, 27192 KB] g=89, 925 evaluated, 924 expanded
[t=0.0565825s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0565913s, 27192 KB] g=90, 926 evaluated, 925 expanded
[t=0.0570499s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0570623s, 27192 KB] g=92, 941 evaluated, 940 expanded
[t=0.0576102s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.05762s, 27192 KB] g=94, 959 evaluated, 958 expanded
[t=0.0580119s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.058022s, 27192 KB] g=95, 972 evaluated, 971 expanded
[t=0.058119s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0581281s, 27192 KB] g=96, 975 evaluated, 974 expanded
[t=0.0587922s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0588068s, 27192 KB] g=92, 993 evaluated, 992 expanded
[t=0.0588473s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0588574s, 27192 KB] g=98, 994 evaluated, 993 expanded
[t=0.0592467s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.059257s, 27192 KB] g=99, 1007 evaluated, 1006 expanded
[t=0.0593254s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0593349s, 27192 KB] g=100, 1009 evaluated, 1008 expanded
[t=0.0599121s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0599221s, 27192 KB] g=96, 1029 evaluated, 1028 expanded
[t=0.0601121s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0601211s, 27192 KB] g=98, 1035 evaluated, 1034 expanded
[t=0.0601955s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0602049s, 27192 KB] g=102, 1037 evaluated, 1036 expanded
[t=0.0607527s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0607632s, 27192 KB] g=104, 1057 evaluated, 1056 expanded
[t=0.061568s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0615788s, 27192 KB] g=106, 1087 evaluated, 1086 expanded
[t=0.0624664s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0624794s, 27192 KB] g=108, 1121 evaluated, 1120 expanded
[t=0.0629583s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0629739s, 27192 KB] g=110, 1139 evaluated, 1138 expanded
[t=0.0632821s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0633195s, 27192 KB] g=110, 1150 evaluated, 1149 expanded
[t=0.0635715s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0635857s, 27192 KB] g=114, 1158 evaluated, 1157 expanded
[t=0.0636157s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0636255s, 27192 KB] g=111, 1159 evaluated, 1158 expanded
[t=0.0637506s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0637629s, 27192 KB] g=116, 1163 evaluated, 1162 expanded
[t=0.0641321s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0641563s, 27192 KB] g=112, 1178 evaluated, 1177 expanded
[t=0.0643012s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0643117s, 27192 KB] g=113, 1184 evaluated, 1183 expanded
[t=0.0646442s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0646555s, 27192 KB] g=114, 1198 evaluated, 1197 expanded
[t=0.0647771s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0647875s, 27192 KB] g=115, 1203 evaluated, 1202 expanded
[t=0.0648446s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0648546s, 27192 KB] g=116, 1205 evaluated, 1204 expanded
[t=0.0649269s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0649371s, 27192 KB] g=117, 1208 evaluated, 1207 expanded
[t=0.0653455s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0653579s, 27192 KB] g=118, 1226 evaluated, 1225 expanded
[t=0.0654292s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0654393s, 27192 KB] g=119, 1229 evaluated, 1228 expanded
[t=0.0656506s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0656613s, 27192 KB] g=120, 1239 evaluated, 1238 expanded
[t=0.065711s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0657207s, 27192 KB] g=121, 1241 evaluated, 1240 expanded
[t=0.0660036s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0660217s, 27192 KB] g=126, 1255 evaluated, 1254 expanded
[t=0.0660965s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0661062s, 27192 KB] g=122, 1258 evaluated, 1257 expanded
[t=0.0661329s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.066143s, 27192 KB] g=123, 1259 evaluated, 1258 expanded
[t=0.0662832s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0662929s, 27192 KB] g=126, 1266 evaluated, 1265 expanded
[t=0.0663181s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0663275s, 27192 KB] g=127, 1267 evaluated, 1266 expanded
[t=0.0663916s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0664011s, 27192 KB] g=128, 1270 evaluated, 1269 expanded
[t=0.0664261s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0664354s, 27192 KB] g=129, 1271 evaluated, 1270 expanded
[t=0.0664927s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.066502s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0665107s, 27192 KB] g=132, 1274 evaluated, 1273 expanded
[t=0.0665371s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.066548s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0665565s, 27192 KB] g=133, 1275 evaluated, 1274 expanded
[t=0.0665735s, 27192 KB] Solution found!
[t=0.0665911s, 27192 KB] Actual search time: 0.0391127s
pick-up b12 (1)
stack b12 b6 (1)
unstack b20 b1 (1)
stack b20 b17 (1)
unstack b1 b19 (1)
stack b1 b3 (1)
unstack b19 b24 (1)
stack b19 b1 (1)
unstack b24 b23 (1)
put-down b24 (1)
unstack b23 b18 (1)
put-down b23 (1)
unstack b18 b16 (1)
stack b18 b20 (1)
unstack b16 b8 (1)
put-down b16 (1)
unstack b8 b5 (1)
put-down b8 (1)
unstack b5 b7 (1)
stack b5 b15 (1)
unstack b7 b10 (1)
put-down b7 (1)
unstack b10 b25 (1)
put-down b10 (1)
unstack b25 b22 (1)
put-down b25 (1)
pick-up b22 (1)
stack b22 b18 (1)
unstack b12 b6 (1)
put-down b12 (1)
unstack b6 b11 (1)
put-down b6 (1)
unstack b11 b2 (1)
stack b11 b16 (1)
pick-up b12 (1)
stack b12 b6 (1)
pick-up b2 (1)
stack b2 b7 (1)
unstack b5 b15 (1)
put-down b5 (1)
unstack b15 b4 (1)
stack b15 b11 (1)
unstack b4 b21 (1)
stack b4 b25 (1)
unstack b21 b14 (1)
stack b21 b8 (1)
unstack b14 b13 (1)
stack b14 b5 (1)
unstack b13 b9 (1)
put-down b13 (1)
pick-up b24 (1)
stack b24 b14 (1)
pick-up b9 (1)
stack b9 b12 (1)
unstack b4 b25 (1)
put-down b4 (1)
pick-up b25 (1)
stack b25 b9 (1)
pick-up b4 (1)
stack b4 b25 (1)
unstack b2 b7 (1)
put-down b2 (1)
pick-up b7 (1)
stack b7 b4 (1)
pick-up b2 (1)
stack b2 b7 (1)
unstack b19 b1 (1)
put-down b19 (1)
unstack b1 b3 (1)
put-down b1 (1)
pick-up b19 (1)
stack b19 b1 (1)
pick-up b3 (1)
stack b3 b23 (1)
unstack b19 b1 (1)
put-down b19 (1)
pick-up b1 (1)
stack b1 b3 (1)
pick-up b19 (1)
stack b19 b1 (1)
unstack b24 b14 (1)
put-down b24 (1)
unstack b2 b7 (1)
put-down b2 (1)
unstack b14 b5 (1)
put-down b14 (1)
unstack b22 b18 (1)
put-down b22 (1)
unstack b18 b20 (1)
put-down b18 (1)
unstack b20 b17 (1)
put-down b20 (1)
pick-up b5 (1)
stack b5 b15 (1)
unstack b7 b4 (1)
put-down b7 (1)
unstack b4 b25 (1)
put-down b4 (1)
unstack b25 b9 (1)
put-down b25 (1)
unstack b9 b12 (1)
put-down b9 (1)
unstack b12 b6 (1)
put-down b12 (1)
pick-up b14 (1)
stack b14 b5 (1)
pick-up b24 (1)
stack b24 b14 (1)
pick-up b17 (1)
stack b17 b24 (1)
pick-up b20 (1)
stack b20 b17 (1)
pick-up b18 (1)
stack b18 b20 (1)
pick-up b22 (1)
stack b22 b18 (1)
pick-up b6 (1)
stack b6 b21 (1)
pick-up b12 (1)
stack b12 b6 (1)
pick-up b9 (1)
stack b9 b12 (1)
pick-up b2 (1)
stack b2 b7 (1)
pick-up b25 (1)
stack b25 b9 (1)
pick-up b4 (1)
stack b4 b25 (1)
unstack b2 b7 (1)
put-down b2 (1)
pick-up b7 (1)
stack b7 b4 (1)
pick-up b2 (1)
stack b2 b7 (1)
[t=0.0666181s, 27192 KB] Plan length: 134 step(s).
[t=0.0666181s, 27192 KB] Plan cost: 134
[t=0.0666181s, 27192 KB] Expanded 1275 state(s).
[t=0.0666181s, 27192 KB] Reopened 0 state(s).
[t=0.0666181s, 27192 KB] Evaluated 1276 state(s).
[t=0.0666181s, 27192 KB] Evaluations: 2552
[t=0.0666181s, 27192 KB] Generated 15388 state(s).
[t=0.0666181s, 27192 KB] Dead ends: 0 state(s).
[t=0.0666181s, 27192 KB] Number of registered states: 1276
[t=0.0666181s, 27192 KB] Int hash set load factor: 1276/2048 = 0.623047
[t=0.0666181s, 27192 KB] Int hash set resizes: 11
[t=0.0666181s, 27192 KB] Search time: 0.0391585s
[t=0.0666181s, 27192 KB] Total time: 0.0666181s
Solution found.
Peak memory: 27192 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.24s
