INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_29/bws_problem_29_31.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.000s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.017s wall-clock]
2728 relevant atoms
1827 auxiliary atoms
4555 final queue length
7985 total queue pushes
Completing instantiation... [0.020s CPU, 0.029s wall-clock]
Instantiating: [0.040s CPU, 0.047s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.002s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
30 uncovered facts
Choosing groups: [0.000s CPU, 0.002s wall-clock]
Building translation key... [0.010s CPU, 0.001s wall-clock]
Computing fact groups: [0.020s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.001s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.002s wall-clock]
Translating task: [0.050s CPU, 0.051s wall-clock]
2494 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
58 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.021s wall-clock]
Reordering and filtering variables...
59 of 59 variables necessary.
30 of 59 mutex groups necessary.
1682 of 1682 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.011s wall-clock]
Translator variables: 59
Translator derived variables: 0
Translator facts: 930
Translator goal facts: 25
Translator mutex groups: 30
Translator total mutex groups size: 900
Translator operators: 1682
Translator axioms: 0
Translator task size: 14442
Translator peak memory: 40820 KB
Writing output... [0.000s CPU, 0.009s wall-clock]
Done! [0.150s CPU, 0.158s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.0023e-05s, 24488 KB] reading input...
[t=0.0048646s, 26220 KB] done reading input!
[t=0.00594632s, 26616 KB] Initializing landmark count heuristic...
[t=0.00598488s, 26616 KB] Generating landmark graph...
[t=0.00609401s, 26748 KB] Building a landmark graph with reasonable orders.
[t=0.00623241s, 26748 KB] Initializing Exploration...
[t=0.00675518s, 27200 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0307463s, 27860 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0308541s, 27860 KB] Landmarks generation time: 0.0247631s
[t=0.0308779s, 27860 KB] Discovered 128 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0308949s, 27860 KB] 455 edges
[t=0.0309046s, 27860 KB] approx. reasonable orders
[t=0.0312584s, 27860 KB] approx. obedient reasonable orders
[t=0.0312925s, 27860 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0313017s, 27860 KB] Landmarks generation time: 0.0253137s
[t=0.0313112s, 27860 KB] Discovered 128 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0313196s, 27860 KB] 459 edges
[t=0.0313279s, 27860 KB] Landmark graph generation time: 0.0253502s
[t=0.0313366s, 27860 KB] Landmark graph contains 128 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0313445s, 27860 KB] Landmark graph contains 459 orderings.
[t=0.0319358s, 27884 KB] Simplifying 6670 unary operators... done! [5046 unary operators]
[t=0.03348s, 28016 KB] time to simplify: 0.00165861s
[t=0.0337012s, 28016 KB] Initializing additive heuristic...
[t=0.0337207s, 28016 KB] Initializing FF heuristic...
[t=0.0337754s, 28016 KB] Building successor generator...done!
[t=0.0340734s, 28016 KB] peak memory difference for successor generator creation: 0 KB
[t=0.034082s, 28016 KB] time for successor generation creation: 0.000269554s
[t=0.0340951s, 28016 KB] Variables: 59
[t=0.0341033s, 28016 KB] FactPairs: 930
[t=0.0341118s, 28016 KB] Bytes per state: 24
[t=0.0342187s, 28016 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0342528s, 28016 KB] 59 initial landmarks, 25 goal landmarks
[t=0.0343208s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 69
[t=0.0343302s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 53
[t=0.0343389s, 28016 KB] g=0, 1 evaluated, 0 expanded
[t=0.0343547s, 28016 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 69
[t=0.0343634s, 28016 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 53
[t=0.0347458s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 68
[t=0.0347552s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 52
[t=0.0347634s, 28016 KB] g=2, 10 evaluated, 9 expanded
[t=0.0351372s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 67
[t=0.0351468s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 51
[t=0.0351555s, 28016 KB] g=4, 19 evaluated, 18 expanded
[t=0.0355119s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 66
[t=0.0355209s, 28016 KB] g=6, 28 evaluated, 27 expanded
[t=0.0355696s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 50
[t=0.0355784s, 28016 KB] g=6, 29 evaluated, 28 expanded
[t=0.0362425s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 65
[t=0.0362534s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 49
[t=0.0362615s, 28016 KB] g=8, 46 evaluated, 45 expanded
[t=0.0363868s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 64
[t=0.0363956s, 28016 KB] g=9, 49 evaluated, 48 expanded
[t=0.0370364s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 62
[t=0.037046s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 48
[t=0.0370543s, 28016 KB] g=12, 65 evaluated, 64 expanded
[t=0.0374335s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.0374453s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 46
[t=0.0374538s, 28016 KB] g=14, 74 evaluated, 73 expanded
[t=0.0378862s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 58
[t=0.0378985s, 28016 KB] g=16, 84 evaluated, 83 expanded
[t=0.0380281s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0380373s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0380455s, 28016 KB] g=16, 87 evaluated, 86 expanded
[t=0.0384062s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.038419s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.0384272s, 28016 KB] g=18, 96 evaluated, 95 expanded
[t=0.0387899s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0388099s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.03882s, 28016 KB] g=20, 105 evaluated, 104 expanded
[t=0.0391859s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0392021s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0392103s, 28016 KB] g=22, 114 evaluated, 113 expanded
[t=0.0395908s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0396071s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0396179s, 28016 KB] g=24, 123 evaluated, 122 expanded
[t=0.039968s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0399785s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0399871s, 28016 KB] g=26, 131 evaluated, 130 expanded
[t=0.040225s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0402336s, 28016 KB] g=27, 137 evaluated, 136 expanded
[t=0.0402909s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0403012s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.040309s, 28016 KB] g=28, 138 evaluated, 137 expanded
[t=0.0406286s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0406379s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0406458s, 28016 KB] g=30, 146 evaluated, 145 expanded
[t=0.0417344s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0417474s, 28016 KB] g=34, 173 evaluated, 172 expanded
[t=0.042037s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0420468s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.042058s, 28016 KB] g=36, 180 evaluated, 179 expanded
[t=0.0426487s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0426585s, 28016 KB] g=40, 195 evaluated, 194 expanded
[t=0.042897s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0429064s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0429154s, 28016 KB] g=42, 201 evaluated, 200 expanded
[t=0.0478957s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0480005s, 28016 KB] g=52, 307 evaluated, 306 expanded
[t=0.0482122s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0482226s, 28016 KB] g=53, 312 evaluated, 311 expanded
[t=0.0482741s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0482828s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0482906s, 28016 KB] g=54, 313 evaluated, 312 expanded
[t=0.0485756s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0485846s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0485926s, 28016 KB] g=56, 320 evaluated, 319 expanded
[t=0.0488768s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0488861s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0488941s, 28016 KB] g=58, 327 evaluated, 326 expanded
[t=0.0495608s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0495725s, 28016 KB] g=62, 344 evaluated, 343 expanded
[t=0.0498176s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0498267s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0498348s, 28016 KB] g=64, 350 evaluated, 349 expanded
[t=0.0566352s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0568129s, 28016 KB] g=72, 503 evaluated, 502 expanded
[t=0.0580947s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0581242s, 28016 KB] g=76, 529 evaluated, 528 expanded
[t=0.0583647s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0583743s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0583826s, 28016 KB] g=78, 535 evaluated, 534 expanded
[t=0.0829095s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0829595s, 28016 KB] g=100, 1157 evaluated, 1156 expanded
[t=0.0832666s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0832772s, 28016 KB] g=102, 1166 evaluated, 1165 expanded
[t=0.0835615s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0835712s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0835794s, 28016 KB] g=104, 1174 evaluated, 1173 expanded
[t=0.083889s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0838986s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0839069s, 28016 KB] g=106, 1183 evaluated, 1182 expanded
[t=0.0841689s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0841785s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0841865s, 28016 KB] g=108, 1191 evaluated, 1190 expanded
[t=0.0843883s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0843975s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0844113s, 28016 KB] g=110, 1197 evaluated, 1196 expanded
[t=0.0855477s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0855758s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0855852s, 28016 KB] g=116, 1231 evaluated, 1230 expanded
[t=0.0864729s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0864845s, 28016 KB] g=122, 1258 evaluated, 1257 expanded
[t=0.0866573s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0866682s, 28016 KB] g=124, 1263 evaluated, 1262 expanded
[t=0.0869468s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0869558s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0869638s, 28016 KB] g=126, 1271 evaluated, 1270 expanded
[t=0.0876301s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.087648s, 28016 KB] g=132, 1290 evaluated, 1289 expanded
[t=0.0878311s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0878464s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0878548s, 28016 KB] g=134, 1295 evaluated, 1294 expanded
[t=0.0879996s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0880103s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0880184s, 28016 KB] g=136, 1299 evaluated, 1298 expanded
[t=0.0905247s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0905443s, 28016 KB] g=150, 1372 evaluated, 1371 expanded
[t=0.0906538s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.090663s, 28016 KB] g=150, 1375 evaluated, 1374 expanded
[t=0.0908066s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0908158s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0908238s, 28016 KB] g=152, 1379 evaluated, 1378 expanded
[t=0.0911281s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0911375s, 28016 KB] g=156, 1388 evaluated, 1387 expanded
[t=0.0912445s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0912536s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0912616s, 28016 KB] g=158, 1391 evaluated, 1390 expanded
[t=0.094157s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.094323s, 28016 KB] g=180, 1493 evaluated, 1492 expanded
[t=0.094814s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0948876s, 28016 KB] g=184, 1502 evaluated, 1501 expanded
[t=0.0950384s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0950588s, 28016 KB] g=186, 1505 evaluated, 1504 expanded
[t=0.0953694s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0953974s, 28016 KB] g=194, 1516 evaluated, 1515 expanded
[t=0.0954439s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0954613s, 28016 KB] g=194, 1517 evaluated, 1516 expanded
[t=0.0954908s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0955056s, 28016 KB] g=195, 1518 evaluated, 1517 expanded
[t=0.09554s, 28016 KB] Solution found!
[t=0.0955751s, 28016 KB] Actual search time: 0.0613278s
unstack b12 b2 (1)
put-down b12 (1)
unstack b19 b29 (1)
put-down b19 (1)
unstack b24 b25 (1)
put-down b24 (1)
unstack b29 b16 (1)
put-down b29 (1)
unstack b16 b9 (1)
put-down b16 (1)
unstack b14 b27 (1)
stack b14 b9 (1)
unstack b2 b18 (1)
stack b2 b24 (1)
unstack b25 b17 (1)
stack b25 b14 (1)
unstack b18 b7 (1)
stack b18 b17 (1)
unstack b27 b6 (1)
stack b27 b25 (1)
unstack b28 b23 (1)
stack b28 b22 (1)
pick-up b23 (1)
stack b23 b6 (1)
unstack b7 b5 (1)
stack b7 b23 (1)
unstack b5 b11 (1)
stack b5 b28 (1)
pick-up b11 (1)
stack b11 b29 (1)
unstack b10 b3 (1)
put-down b10 (1)
pick-up b3 (1)
stack b3 b7 (1)
pick-up b10 (1)
stack b10 b3 (1)
unstack b18 b17 (1)
put-down b18 (1)
pick-up b17 (1)
stack b17 b10 (1)
pick-up b18 (1)
stack b18 b17 (1)
unstack b27 b25 (1)
put-down b27 (1)
unstack b25 b14 (1)
put-down b25 (1)
pick-up b27 (1)
stack b27 b25 (1)
unstack b14 b9 (1)
put-down b14 (1)
unstack b9 b4 (1)
stack b9 b19 (1)
unstack b4 b1 (1)
stack b4 b8 (1)
unstack b1 b15 (1)
stack b1 b27 (1)
pick-up b14 (1)
stack b14 b9 (1)
unstack b4 b8 (1)
put-down b4 (1)
pick-up b8 (1)
stack b8 b15 (1)
pick-up b4 (1)
stack b4 b8 (1)
unstack b1 b27 (1)
put-down b1 (1)
unstack b27 b25 (1)
put-down b27 (1)
pick-up b1 (1)
stack b1 b27 (1)
pick-up b25 (1)
stack b25 b14 (1)
unstack b1 b27 (1)
put-down b1 (1)
pick-up b27 (1)
stack b27 b25 (1)
pick-up b1 (1)
stack b1 b27 (1)
unstack b18 b17 (1)
put-down b18 (1)
unstack b17 b10 (1)
put-down b17 (1)
unstack b10 b3 (1)
put-down b10 (1)
pick-up b17 (1)
stack b17 b10 (1)
pick-up b18 (1)
stack b18 b17 (1)
unstack b3 b7 (1)
put-down b3 (1)
unstack b7 b23 (1)
put-down b7 (1)
pick-up b3 (1)
stack b3 b7 (1)
unstack b23 b6 (1)
put-down b23 (1)
unstack b6 b26 (1)
put-down b6 (1)
unstack b26 b20 (1)
stack b26 b2 (1)
unstack b20 b13 (1)
stack b20 b18 (1)
unstack b13 b21 (1)
stack b13 b1 (1)
pick-up b16 (1)
stack b16 b13 (1)
pick-up b6 (1)
stack b6 b21 (1)
pick-up b23 (1)
stack b23 b6 (1)
unstack b3 b7 (1)
put-down b3 (1)
pick-up b7 (1)
stack b7 b23 (1)
pick-up b3 (1)
stack b3 b7 (1)
unstack b4 b8 (1)
put-down b4 (1)
unstack b8 b15 (1)
put-down b8 (1)
pick-up b15 (1)
stack b15 b20 (1)
pick-up b8 (1)
stack b8 b15 (1)
pick-up b4 (1)
stack b4 b8 (1)
unstack b5 b28 (1)
put-down b5 (1)
unstack b28 b22 (1)
put-down b28 (1)
pick-up b22 (1)
stack b22 b26 (1)
pick-up b28 (1)
stack b28 b22 (1)
pick-up b5 (1)
stack b5 b28 (1)
unstack b3 b7 (1)
put-down b3 (1)
unstack b7 b23 (1)
put-down b7 (1)
pick-up b3 (1)
stack b3 b7 (1)
unstack b23 b6 (1)
put-down b23 (1)
unstack b6 b21 (1)
put-down b6 (1)
pick-up b21 (1)
stack b21 b12 (1)
pick-up b6 (1)
stack b6 b21 (1)
pick-up b23 (1)
stack b23 b6 (1)
unstack b3 b7 (1)
put-down b3 (1)
pick-up b7 (1)
stack b7 b23 (1)
pick-up b3 (1)
stack b3 b7 (1)
unstack b4 b8 (1)
put-down b4 (1)
unstack b8 b15 (1)
put-down b8 (1)
unstack b15 b20 (1)
put-down b15 (1)
pick-up b8 (1)
stack b8 b15 (1)
pick-up b4 (1)
stack b4 b8 (1)
unstack b20 b18 (1)
put-down b20 (1)
unstack b18 b17 (1)
put-down b18 (1)
pick-up b20 (1)
stack b20 b18 (1)
unstack b17 b10 (1)
put-down b17 (1)
pick-up b10 (1)
stack b10 b3 (1)
pick-up b17 (1)
stack b17 b10 (1)
unstack b20 b18 (1)
put-down b20 (1)
pick-up b18 (1)
stack b18 b17 (1)
pick-up b20 (1)
stack b20 b18 (1)
unstack b4 b8 (1)
put-down b4 (1)
unstack b8 b15 (1)
put-down b8 (1)
pick-up b15 (1)
stack b15 b20 (1)
pick-up b8 (1)
stack b8 b15 (1)
pick-up b4 (1)
stack b4 b8 (1)
[t=0.0955958s, 28016 KB] Plan length: 196 step(s).
[t=0.0955958s, 28016 KB] Plan cost: 196
[t=0.0955958s, 28016 KB] Expanded 1518 state(s).
[t=0.0955958s, 28016 KB] Reopened 0 state(s).
[t=0.0955958s, 28016 KB] Evaluated 1519 state(s).
[t=0.0955958s, 28016 KB] Evaluations: 3038
[t=0.0955958s, 28016 KB] Generated 16284 state(s).
[t=0.0955958s, 28016 KB] Dead ends: 0 state(s).
[t=0.0955958s, 28016 KB] Number of registered states: 1519
[t=0.0955958s, 28016 KB] Int hash set load factor: 1519/2048 = 0.741699
[t=0.0955958s, 28016 KB] Int hash set resizes: 11
[t=0.0955958s, 28016 KB] Search time: 0.0613775s
[t=0.0955958s, 28016 KB] Total time: 0.0955958s
Solution found.
Peak memory: 28016 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.30s
