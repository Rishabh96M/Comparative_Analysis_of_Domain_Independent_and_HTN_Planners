INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_26/bws_problem_26_38.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.014s wall-clock]
2212 relevant atoms
1482 auxiliary atoms
3694 final queue length
6455 total queue pushes
Completing instantiation... [0.020s CPU, 0.022s wall-clock]
Instantiating: [0.040s CPU, 0.038s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
27 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.008s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.033s wall-clock]
2002 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
52 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.020s wall-clock]
Reordering and filtering variables...
53 of 53 variables necessary.
27 of 53 mutex groups necessary.
1352 of 1352 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.008s wall-clock]
Translator variables: 53
Translator derived variables: 0
Translator facts: 756
Translator goal facts: 21
Translator mutex groups: 27
Translator total mutex groups size: 729
Translator operators: 1352
Translator axioms: 0
Translator task size: 11621
Translator peak memory: 38900 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.130s CPU, 0.122s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.3866e-05s, 24488 KB] reading input...
[t=0.00392641s, 25744 KB] done reading input!
[t=0.00497657s, 26140 KB] Initializing landmark count heuristic...
[t=0.00502444s, 26140 KB] Generating landmark graph...
[t=0.00514742s, 26272 KB] Building a landmark graph with reasonable orders.
[t=0.00522181s, 26272 KB] Initializing Exploration...
[t=0.00559706s, 26680 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0226562s, 27208 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0227456s, 27208 KB] Landmarks generation time: 0.0175995s
[t=0.0227604s, 27208 KB] Discovered 113 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0227769s, 27208 KB] 542 edges
[t=0.0227867s, 27208 KB] approx. reasonable orders
[t=0.0230789s, 27208 KB] approx. obedient reasonable orders
[t=0.0231285s, 27208 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0231389s, 27208 KB] Landmarks generation time: 0.0181121s
[t=0.0231481s, 27208 KB] Discovered 113 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0231559s, 27208 KB] 546 edges
[t=0.0231642s, 27208 KB] Landmark graph generation time: 0.0181469s
[t=0.0231727s, 27208 KB] Landmark graph contains 113 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0231806s, 27208 KB] Landmark graph contains 546 orderings.
[t=0.023609s, 27208 KB] Simplifying 5356 unary operators... done! [4056 unary operators]
[t=0.0248522s, 27340 KB] time to simplify: 0.00132488s
[t=0.0250146s, 27340 KB] Initializing additive heuristic...
[t=0.02503s, 27340 KB] Initializing FF heuristic...
[t=0.0250817s, 27340 KB] Building successor generator...done!
[t=0.0253402s, 27340 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0253494s, 27340 KB] time for successor generation creation: 0.000229125s
[t=0.0253636s, 27340 KB] Variables: 53
[t=0.0253717s, 27340 KB] FactPairs: 756
[t=0.0253802s, 27340 KB] Bytes per state: 20
[t=0.0254705s, 27340 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0255028s, 27340 KB] 52 initial landmarks, 21 goal landmarks
[t=0.0255747s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 61
[t=0.0255924s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0256015s, 27340 KB] g=0, 1 evaluated, 0 expanded
[t=0.0256203s, 27340 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 61
[t=0.025629s, 27340 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0258476s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 60
[t=0.0258569s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.0258652s, 27340 KB] g=2, 7 evaluated, 6 expanded
[t=0.0260718s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.0260815s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0260899s, 27340 KB] g=4, 13 evaluated, 12 expanded
[t=0.0262653s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 58
[t=0.0262747s, 27340 KB] g=6, 18 evaluated, 17 expanded
[t=0.0264493s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 57
[t=0.0264582s, 27340 KB] g=7, 23 evaluated, 22 expanded
[t=0.0265034s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0265119s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0265199s, 27340 KB] g=8, 24 evaluated, 23 expanded
[t=0.0266986s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0267074s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0267154s, 27340 KB] g=10, 29 evaluated, 28 expanded
[t=0.0268946s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0269037s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0269122s, 27340 KB] g=12, 34 evaluated, 33 expanded
[t=0.0270531s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0270664s, 27340 KB] g=13, 38 evaluated, 37 expanded
[t=0.0273058s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.027315s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0273232s, 27340 KB] g=16, 45 evaluated, 44 expanded
[t=0.0275328s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0275434s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0275517s, 27340 KB] g=18, 51 evaluated, 50 expanded
[t=0.0277534s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0277622s, 27340 KB] g=20, 57 evaluated, 56 expanded
[t=0.0280083s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0280235s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0280323s, 27340 KB] g=22, 64 evaluated, 63 expanded
[t=0.0283331s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0283482s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0283604s, 27340 KB] g=24, 72 evaluated, 71 expanded
[t=0.0297669s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0297815s, 27340 KB] g=30, 115 evaluated, 114 expanded
[t=0.0300773s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0300876s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0300988s, 27340 KB] g=32, 124 evaluated, 123 expanded
[t=0.0303718s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0303868s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.030395s, 27340 KB] g=34, 132 evaluated, 131 expanded
[t=0.031445s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.031462s, 27340 KB] g=40, 166 evaluated, 165 expanded
[t=0.0328006s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0328187s, 27340 KB] g=42, 206 evaluated, 205 expanded
[t=0.0331687s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.033193s, 27340 KB] g=44, 216 evaluated, 215 expanded
[t=0.0334269s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0334364s, 27340 KB] g=46, 223 evaluated, 222 expanded
[t=0.0339251s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0339352s, 27340 KB] g=50, 238 evaluated, 237 expanded
[t=0.0341402s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0341494s, 27340 KB] g=51, 244 evaluated, 243 expanded
[t=0.0341933s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0342019s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0342101s, 27340 KB] g=52, 245 evaluated, 244 expanded
[t=0.0344494s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0344586s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0344704s, 27340 KB] g=54, 252 evaluated, 251 expanded
[t=0.0346968s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0347067s, 27340 KB] g=54, 258 evaluated, 257 expanded
[t=0.0347521s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0347612s, 27340 KB] g=56, 259 evaluated, 258 expanded
[t=0.0349772s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0349929s, 27340 KB] g=55, 265 evaluated, 264 expanded
[t=0.0350717s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0350805s, 27340 KB] g=56, 267 evaluated, 266 expanded
[t=0.0353848s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0353944s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0354029s, 27340 KB] g=58, 276 evaluated, 275 expanded
[t=0.0356708s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0356806s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0356898s, 27340 KB] g=60, 284 evaluated, 283 expanded
[t=0.0359487s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0359579s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0359662s, 27340 KB] g=62, 292 evaluated, 291 expanded
[t=0.0362268s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0362362s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0362443s, 27340 KB] g=64, 300 evaluated, 299 expanded
[t=0.0364445s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0364544s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.036463s, 27340 KB] g=66, 306 evaluated, 305 expanded
[t=0.0366313s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0366402s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0366485s, 27340 KB] g=68, 311 evaluated, 310 expanded
[t=0.0373229s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0373346s, 27340 KB] g=72, 332 evaluated, 331 expanded
[t=0.0374874s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0375085s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0375251s, 27340 KB] g=74, 336 evaluated, 335 expanded
[t=0.0378848s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0378998s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0379089s, 27340 KB] g=78, 347 evaluated, 346 expanded
[t=0.0380463s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0380555s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0380639s, 27340 KB] g=80, 351 evaluated, 350 expanded
[t=0.0384737s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.038484s, 27340 KB] g=86, 364 evaluated, 363 expanded
[t=0.0386258s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0386371s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0386458s, 27340 KB] g=88, 368 evaluated, 367 expanded
[t=0.0387169s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0387259s, 27340 KB] g=88, 370 evaluated, 369 expanded
[t=0.0388252s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.038834s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0388422s, 27340 KB] g=90, 373 evaluated, 372 expanded
[t=0.0410391s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0410601s, 27340 KB] g=112, 455 evaluated, 454 expanded
[t=0.0412721s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0412817s, 27340 KB] g=116, 464 evaluated, 463 expanded
[t=0.0413593s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0413686s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.041377s, 27340 KB] g=118, 467 evaluated, 466 expanded
[t=0.0415759s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0415851s, 27340 KB] g=126, 478 evaluated, 477 expanded
[t=0.0416043s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0416126s, 27340 KB] g=127, 479 evaluated, 478 expanded
[t=0.0416279s, 27340 KB] Solution found!
[t=0.0416384s, 27340 KB] Actual search time: 0.0161328s
unstack b12 b16 (1)
put-down b12 (1)
unstack b19 b4 (1)
put-down b19 (1)
unstack b1 b2 (1)
put-down b1 (1)
unstack b2 b23 (1)
stack b2 b1 (1)
unstack b13 b10 (1)
stack b13 b23 (1)
unstack b9 b5 (1)
stack b9 b10 (1)
unstack b5 b15 (1)
put-down b5 (1)
unstack b15 b3 (1)
stack b15 b13 (1)
unstack b3 b8 (1)
stack b3 b16 (1)
unstack b8 b20 (1)
put-down b8 (1)
unstack b20 b7 (1)
stack b20 b12 (1)
pick-up b7 (1)
stack b7 b20 (1)
unstack b9 b10 (1)
put-down b9 (1)
unstack b10 b18 (1)
put-down b10 (1)
unstack b18 b17 (1)
put-down b18 (1)
pick-up b10 (1)
stack b10 b18 (1)
pick-up b9 (1)
stack b9 b10 (1)
unstack b15 b13 (1)
put-down b15 (1)
unstack b13 b23 (1)
put-down b13 (1)
unstack b23 b24 (1)
put-down b23 (1)
pick-up b5 (1)
stack b5 b24 (1)
pick-up b13 (1)
stack b13 b23 (1)
pick-up b15 (1)
stack b15 b13 (1)
unstack b5 b24 (1)
put-down b5 (1)
unstack b24 b6 (1)
put-down b24 (1)
unstack b6 b21 (1)
stack b6 b8 (1)
unstack b21 b25 (1)
stack b21 b15 (1)
unstack b25 b22 (1)
stack b25 b4 (1)
unstack b22 b11 (1)
stack b22 b9 (1)
unstack b11 b14 (1)
stack b11 b19 (1)
unstack b14 b26 (1)
stack b14 b7 (1)
pick-up b17 (1)
stack b17 b21 (1)
pick-up b26 (1)
stack b26 b3 (1)
pick-up b5 (1)
stack b5 b24 (1)
unstack b2 b1 (1)
put-down b2 (1)
pick-up b1 (1)
stack b1 b17 (1)
pick-up b2 (1)
stack b2 b1 (1)
unstack b6 b8 (1)
put-down b6 (1)
pick-up b8 (1)
stack b8 b22 (1)
pick-up b6 (1)
stack b6 b8 (1)
unstack b26 b3 (1)
put-down b26 (1)
unstack b3 b16 (1)
put-down b3 (1)
pick-up b16 (1)
stack b16 b11 (1)
pick-up b3 (1)
stack b3 b16 (1)
pick-up b26 (1)
stack b26 b3 (1)
unstack b2 b1 (1)
put-down b2 (1)
unstack b1 b17 (1)
put-down b1 (1)
unstack b17 b21 (1)
put-down b17 (1)
pick-up b1 (1)
stack b1 b17 (1)
pick-up b2 (1)
stack b2 b1 (1)
unstack b21 b15 (1)
put-down b21 (1)
unstack b15 b13 (1)
put-down b15 (1)
pick-up b21 (1)
stack b21 b15 (1)
unstack b13 b23 (1)
put-down b13 (1)
pick-up b23 (1)
stack b23 b14 (1)
pick-up b13 (1)
stack b13 b23 (1)
unstack b21 b15 (1)
put-down b21 (1)
pick-up b15 (1)
stack b15 b13 (1)
pick-up b21 (1)
stack b21 b15 (1)
unstack b2 b1 (1)
put-down b2 (1)
unstack b1 b17 (1)
put-down b1 (1)
pick-up b17 (1)
stack b17 b21 (1)
pick-up b1 (1)
stack b1 b17 (1)
pick-up b2 (1)
stack b2 b1 (1)
[t=0.0416478s, 27340 KB] Plan length: 128 step(s).
[t=0.0416478s, 27340 KB] Plan cost: 128
[t=0.0416478s, 27340 KB] Expanded 479 state(s).
[t=0.0416478s, 27340 KB] Reopened 0 state(s).
[t=0.0416478s, 27340 KB] Evaluated 480 state(s).
[t=0.0416478s, 27340 KB] Evaluations: 960
[t=0.0416478s, 27340 KB] Generated 4853 state(s).
[t=0.0416478s, 27340 KB] Dead ends: 0 state(s).
[t=0.0416478s, 27340 KB] Number of registered states: 480
[t=0.0416478s, 27340 KB] Int hash set load factor: 480/512 = 0.9375
[t=0.0416478s, 27340 KB] Int hash set resizes: 9
[t=0.0416478s, 27340 KB] Search time: 0.0161777s
[t=0.0416478s, 27340 KB] Total time: 0.0416478s
Solution found.
Peak memory: 27340 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.22s
