INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_29/bws_problem_29_39.pddl --sas-file output.sas
Parsing...
Parsing: [0.010s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.017s wall-clock]
2728 relevant atoms
1827 auxiliary atoms
4555 final queue length
7982 total queue pushes
Completing instantiation... [0.030s CPU, 0.030s wall-clock]
Instantiating: [0.040s CPU, 0.049s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.001s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.010s CPU, 0.000s wall-clock]
Choosing groups...
30 uncovered facts
Choosing groups: [0.000s CPU, 0.002s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.010s CPU, 0.009s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.001s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.001s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.002s wall-clock]
Translating task: [0.050s CPU, 0.048s wall-clock]
2494 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
58 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.023s wall-clock]
Reordering and filtering variables...
59 of 59 variables necessary.
30 of 59 mutex groups necessary.
1682 of 1682 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.011s wall-clock]
Translator variables: 59
Translator derived variables: 0
Translator facts: 930
Translator goal facts: 25
Translator mutex groups: 30
Translator total mutex groups size: 900
Translator operators: 1682
Translator axioms: 0
Translator task size: 14442
Translator peak memory: 40824 KB
Writing output... [0.000s CPU, 0.009s wall-clock]
Done! [0.150s CPU, 0.157s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.3985e-05s, 24488 KB] reading input...
[t=0.00517169s, 26220 KB] done reading input!
[t=0.00619062s, 26616 KB] Initializing landmark count heuristic...
[t=0.00622681s, 26616 KB] Generating landmark graph...
[t=0.00631546s, 26748 KB] Building a landmark graph with reasonable orders.
[t=0.00640221s, 26748 KB] Initializing Exploration...
[t=0.00687116s, 27200 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0314787s, 28000 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0316528s, 28000 KB] Landmarks generation time: 0.0253476s
[t=0.0316772s, 28000 KB] Discovered 131 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0317004s, 28000 KB] 729 edges
[t=0.0317105s, 28000 KB] approx. reasonable orders
[t=0.0354724s, 28000 KB] approx. obedient reasonable orders
[t=0.0355955s, 28000 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0356083s, 28000 KB] Landmarks generation time: 0.0293823s
[t=0.0356239s, 28000 KB] Discovered 131 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.035637s, 28000 KB] 771 edges
[t=0.0356756s, 28000 KB] Landmark graph generation time: 0.0294563s
[t=0.0356851s, 28000 KB] Landmark graph contains 131 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0356934s, 28000 KB] Landmark graph contains 771 orderings.
[t=0.0369199s, 28024 KB] Simplifying 6670 unary operators... done! [5046 unary operators]
[t=0.0387209s, 28024 KB] time to simplify: 0.00192949s
[t=0.0389471s, 28024 KB] Initializing additive heuristic...
[t=0.0389673s, 28024 KB] Initializing FF heuristic...
[t=0.0390256s, 28024 KB] Building successor generator...done!
[t=0.0393266s, 28024 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0393363s, 28024 KB] time for successor generation creation: 0.00026664s
[t=0.0393504s, 28024 KB] Variables: 59
[t=0.0393586s, 28024 KB] FactPairs: 930
[t=0.0393664s, 28024 KB] Bytes per state: 24
[t=0.0394612s, 28024 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0394951s, 28024 KB] 59 initial landmarks, 25 goal landmarks
[t=0.0396163s, 28024 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 72
[t=0.0396274s, 28024 KB] New best heuristic value for ff(transform = adapt_costs(one)): 53
[t=0.0396358s, 28024 KB] g=0, 1 evaluated, 0 expanded
[t=0.0396501s, 28024 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 72
[t=0.0396587s, 28024 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 53
[t=0.0397538s, 28024 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 71
[t=0.0397633s, 28024 KB] g=1, 3 evaluated, 2 expanded
[t=0.0398128s, 28024 KB] New best heuristic value for ff(transform = adapt_costs(one)): 52
[t=0.0398218s, 28024 KB] g=2, 4 evaluated, 3 expanded
[t=0.040294s, 28024 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 70
[t=0.0403048s, 28024 KB] New best heuristic value for ff(transform = adapt_costs(one)): 51
[t=0.0403162s, 28024 KB] g=4, 16 evaluated, 15 expanded
[t=0.0404426s, 28024 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 69
[t=0.0404524s, 28024 KB] g=5, 19 evaluated, 18 expanded
[t=0.0406384s, 28024 KB] New best heuristic value for ff(transform = adapt_costs(one)): 50
[t=0.0406505s, 28024 KB] g=6, 23 evaluated, 22 expanded
[t=0.0407743s, 28024 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 68
[t=0.0407937s, 28024 KB] g=7, 26 evaluated, 25 expanded
[t=0.0411938s, 28024 KB] New best heuristic value for ff(transform = adapt_costs(one)): 49
[t=0.0412036s, 28024 KB] g=8, 36 evaluated, 35 expanded
[t=0.0412947s, 28024 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 67
[t=0.0413038s, 28024 KB] g=9, 38 evaluated, 37 expanded
[t=0.0415796s, 28024 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 66
[t=0.0415892s, 28024 KB] g=11, 45 evaluated, 44 expanded
[t=0.0419062s, 28024 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 65
[t=0.0419157s, 28024 KB] g=13, 53 evaluated, 52 expanded
[t=0.0422739s, 28024 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 63
[t=0.0422898s, 28024 KB] New best heuristic value for ff(transform = adapt_costs(one)): 48
[t=0.0422994s, 28024 KB] g=14, 62 evaluated, 61 expanded
[t=0.0423491s, 28024 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 62
[t=0.0423584s, 28024 KB] g=15, 63 evaluated, 62 expanded
[t=0.0427953s, 28024 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 61
[t=0.0428052s, 28024 KB] g=17, 74 evaluated, 73 expanded
[t=0.0433869s, 28024 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 60
[t=0.0433989s, 28024 KB] g=20, 89 evaluated, 88 expanded
[t=0.0439921s, 28024 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.044004s, 28024 KB] g=22, 103 evaluated, 102 expanded
[t=0.0443546s, 28024 KB] New best heuristic value for ff(transform = adapt_costs(one)): 47
[t=0.0443644s, 28024 KB] g=24, 112 evaluated, 111 expanded
[t=0.0448376s, 28024 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 58
[t=0.0448491s, 28024 KB] g=24, 124 evaluated, 123 expanded
[t=0.0449793s, 28024 KB] New best heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0449888s, 28024 KB] g=26, 127 evaluated, 126 expanded
[t=0.0450849s, 28024 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 57
[t=0.0450943s, 28024 KB] g=27, 129 evaluated, 128 expanded
[t=0.0457034s, 28024 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0457138s, 28024 KB] g=29, 145 evaluated, 144 expanded
[t=0.047584s, 28024 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0475958s, 28024 KB] g=34, 193 evaluated, 192 expanded
[t=0.0479805s, 28024 KB] New best heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.0479914s, 28024 KB] g=36, 203 evaluated, 202 expanded
[t=0.048305s, 28024 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0483152s, 28024 KB] g=38, 211 evaluated, 210 expanded
[t=0.0483664s, 28024 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0483757s, 28024 KB] g=39, 212 evaluated, 211 expanded
[t=0.0490824s, 28024 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0490945s, 28024 KB] g=42, 230 evaluated, 229 expanded
[t=0.0491456s, 28024 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0491556s, 28024 KB] g=43, 231 evaluated, 230 expanded
[t=0.0496187s, 28024 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.049629s, 28024 KB] g=44, 243 evaluated, 242 expanded
[t=0.0499729s, 28024 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0499818s, 28024 KB] g=46, 252 evaluated, 251 expanded
[t=0.0502688s, 28024 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0502783s, 28024 KB] g=46, 259 evaluated, 258 expanded
[t=0.0507304s, 28024 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0507581s, 28024 KB] g=48, 270 evaluated, 269 expanded
[t=0.0514815s, 28024 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0515011s, 28024 KB] g=50, 288 evaluated, 287 expanded
[t=0.0523905s, 28024 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0524081s, 28024 KB] g=52, 309 evaluated, 308 expanded
[t=0.0529482s, 28024 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.052964s, 28024 KB] g=54, 322 evaluated, 321 expanded
[t=0.0534914s, 28024 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0535023s, 28024 KB] g=54, 335 evaluated, 334 expanded
[t=0.0536372s, 28024 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0536465s, 28024 KB] g=56, 338 evaluated, 337 expanded
[t=0.0543856s, 28024 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0543971s, 28024 KB] g=56, 357 evaluated, 356 expanded
[t=0.0549587s, 28024 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0549705s, 28024 KB] g=60, 371 evaluated, 370 expanded
[t=0.0552614s, 28024 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0552717s, 28024 KB] g=58, 378 evaluated, 377 expanded
[t=0.0556387s, 28024 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0556488s, 28024 KB] g=62, 387 evaluated, 386 expanded
[t=0.0562935s, 28024 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0563036s, 28024 KB] g=60, 403 evaluated, 402 expanded
[t=0.0563558s, 28024 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0563651s, 28024 KB] g=64, 404 evaluated, 403 expanded
[t=0.0570266s, 28024 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0570405s, 28024 KB] g=66, 420 evaluated, 419 expanded
[t=0.057255s, 28024 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0572647s, 28024 KB] g=62, 425 evaluated, 424 expanded
[t=0.057633s, 28024 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0576432s, 28024 KB] g=68, 434 evaluated, 433 expanded
[t=0.0581165s, 28024 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0581265s, 28024 KB] g=64, 446 evaluated, 445 expanded
[t=0.058217s, 28024 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0582268s, 28024 KB] g=70, 448 evaluated, 447 expanded
[t=0.0594705s, 28024 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0594806s, 28024 KB] g=73, 480 evaluated, 479 expanded
[t=0.0602226s, 28024 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0602373s, 28024 KB] g=76, 499 evaluated, 498 expanded
[t=0.0608952s, 28024 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.060925s, 28024 KB] g=78, 514 evaluated, 513 expanded
[t=0.061088s, 28024 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0610982s, 28024 KB] g=76, 518 evaluated, 517 expanded
[t=0.0615255s, 28024 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0615387s, 28024 KB] g=81, 529 evaluated, 528 expanded
[t=0.0622589s, 28024 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0622911s, 28024 KB] g=84, 547 evaluated, 546 expanded
[t=0.0630732s, 28024 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0631106s, 28024 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0631212s, 28024 KB] g=86, 567 evaluated, 566 expanded
[t=0.0635093s, 28024 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0635294s, 28024 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0635388s, 28024 KB] g=88, 577 evaluated, 576 expanded
[t=0.0638532s, 28024 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0638641s, 28024 KB] g=90, 585 evaluated, 584 expanded
[t=0.0640665s, 28024 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0640764s, 28024 KB] g=90, 590 evaluated, 589 expanded
[t=0.0646561s, 28024 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0646705s, 28024 KB] g=92, 604 evaluated, 603 expanded
[t=0.0647684s, 28024 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0647814s, 28024 KB] g=92, 606 evaluated, 605 expanded
[t=0.0651249s, 28024 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0651355s, 28024 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0651454s, 28024 KB] g=94, 615 evaluated, 614 expanded
[t=0.0653412s, 28024 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.065351s, 28024 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0653595s, 28024 KB] g=96, 620 evaluated, 619 expanded
[t=0.0687068s, 28024 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0687234s, 28024 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0687332s, 28024 KB] g=104, 707 evaluated, 706 expanded
[t=0.0688914s, 28024 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0689016s, 28024 KB] g=104, 711 evaluated, 710 expanded
[t=0.069093s, 28024 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0691043s, 28024 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0691138s, 28024 KB] g=106, 716 evaluated, 715 expanded
[t=0.0731963s, 28024 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0732123s, 28024 KB] g=118, 828 evaluated, 827 expanded
[t=0.0737264s, 28024 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0737371s, 28024 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0737468s, 28024 KB] g=124, 842 evaluated, 841 expanded
[t=0.0803275s, 28024 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0803815s, 28024 KB] g=142, 1016 evaluated, 1015 expanded
[t=0.0805529s, 28024 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0805657s, 28024 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0805748s, 28024 KB] g=144, 1020 evaluated, 1019 expanded
[t=0.08191s, 28024 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0819312s, 28024 KB] g=152, 1053 evaluated, 1052 expanded
[t=0.082309s, 28024 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0823199s, 28024 KB] g=156, 1063 evaluated, 1062 expanded
[t=0.0824377s, 28024 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0824555s, 28024 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0824644s, 28024 KB] g=158, 1066 evaluated, 1065 expanded
[t=0.0960867s, 28024 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0961362s, 28024 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0961472s, 28024 KB] g=200, 1487 evaluated, 1486 expanded
[t=0.0969844s, 28024 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0969985s, 28024 KB] g=208, 1514 evaluated, 1513 expanded
[t=0.097273s, 28024 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0972836s, 28024 KB] g=212, 1523 evaluated, 1522 expanded
[t=0.0973784s, 28024 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.097388s, 28024 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0973966s, 28024 KB] g=214, 1526 evaluated, 1525 expanded
[t=0.0983562s, 28024 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0983708s, 28024 KB] g=230, 1564 evaluated, 1563 expanded
[t=0.0985785s, 28024 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0985904s, 28024 KB] g=238, 1574 evaluated, 1573 expanded
[t=0.0986698s, 28024 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.098679s, 28024 KB] g=242, 1578 evaluated, 1577 expanded
[t=0.0986996s, 28024 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.098709s, 28024 KB] g=243, 1579 evaluated, 1578 expanded
[t=0.0987262s, 28024 KB] Solution found!
[t=0.0987429s, 28024 KB] Actual search time: 0.0592456s
unstack b17 b12 (1)
stack b17 b2 (1)
unstack b3 b18 (1)
stack b3 b12 (1)
unstack b18 b19 (1)
put-down b18 (1)
pick-up b7 (1)
stack b7 b13 (1)
unstack b19 b21 (1)
put-down b19 (1)
unstack b21 b27 (1)
put-down b21 (1)
unstack b27 b9 (1)
stack b27 b21 (1)
unstack b9 b26 (1)
put-down b9 (1)
unstack b17 b2 (1)
put-down b17 (1)
unstack b2 b28 (1)
put-down b2 (1)
pick-up b17 (1)
stack b17 b2 (1)
unstack b28 b22 (1)
put-down b28 (1)
pick-up b19 (1)
stack b19 b28 (1)
unstack b22 b23 (1)
put-down b22 (1)
unstack b3 b12 (1)
put-down b3 (1)
unstack b17 b2 (1)
put-down b17 (1)
pick-up b12 (1)
stack b12 b19 (1)
pick-up b17 (1)
stack b17 b2 (1)
pick-up b3 (1)
stack b3 b12 (1)
unstack b7 b13 (1)
put-down b7 (1)
unstack b13 b4 (1)
stack b13 b27 (1)
unstack b17 b2 (1)
put-down b17 (1)
unstack b4 b11 (1)
put-down b4 (1)
unstack b11 b5 (1)
put-down b11 (1)
unstack b5 b8 (1)
stack b5 b9 (1)
pick-up b17 (1)
stack b17 b2 (1)
pick-up b22 (1)
stack b22 b4 (1)
pick-up b7 (1)
stack b7 b13 (1)
unstack b8 b29 (1)
put-down b8 (1)
unstack b29 b15 (1)
stack b29 b23 (1)
unstack b15 b14 (1)
put-down b15 (1)
unstack b14 b6 (1)
stack b14 b7 (1)
pick-up b26 (1)
stack b26 b14 (1)
unstack b6 b1 (1)
stack b6 b8 (1)
unstack b1 b24 (1)
stack b1 b3 (1)
unstack b22 b4 (1)
put-down b22 (1)
unstack b17 b2 (1)
put-down b17 (1)
pick-up b2 (1)
stack b2 b6 (1)
pick-up b17 (1)
stack b17 b2 (1)
unstack b24 b16 (1)
put-down b24 (1)
unstack b16 b25 (1)
put-down b16 (1)
unstack b25 b20 (1)
stack b25 b29 (1)
unstack b20 b10 (1)
stack b20 b18 (1)
pick-up b10 (1)
stack b10 b5 (1)
pick-up b4 (1)
stack b4 b25 (1)
pick-up b22 (1)
stack b22 b4 (1)
pick-up b16 (1)
stack b16 b22 (1)
pick-up b24 (1)
stack b24 b16 (1)
unstack b10 b5 (1)
put-down b10 (1)
unstack b5 b9 (1)
put-down b5 (1)
pick-up b9 (1)
stack b9 b1 (1)
pick-up b5 (1)
stack b5 b9 (1)
pick-up b10 (1)
stack b10 b5 (1)
unstack b17 b2 (1)
put-down b17 (1)
unstack b2 b6 (1)
put-down b2 (1)
pick-up b17 (1)
stack b17 b2 (1)
unstack b6 b8 (1)
put-down b6 (1)
pick-up b8 (1)
stack b8 b24 (1)
pick-up b6 (1)
stack b6 b8 (1)
unstack b17 b2 (1)
put-down b17 (1)
pick-up b2 (1)
stack b2 b6 (1)
pick-up b17 (1)
stack b17 b2 (1)
unstack b26 b14 (1)
put-down b26 (1)
unstack b14 b7 (1)
put-down b14 (1)
unstack b7 b13 (1)
put-down b7 (1)
pick-up b14 (1)
stack b14 b7 (1)
pick-up b26 (1)
stack b26 b14 (1)
unstack b13 b27 (1)
put-down b13 (1)
unstack b27 b21 (1)
put-down b27 (1)
pick-up b21 (1)
stack b21 b15 (1)
pick-up b27 (1)
stack b27 b21 (1)
pick-up b13 (1)
stack b13 b27 (1)
unstack b26 b14 (1)
put-down b26 (1)
unstack b14 b7 (1)
put-down b14 (1)
pick-up b26 (1)
stack b26 b14 (1)
pick-up b7 (1)
stack b7 b13 (1)
unstack b26 b14 (1)
put-down b26 (1)
pick-up b14 (1)
stack b14 b7 (1)
pick-up b26 (1)
stack b26 b14 (1)
unstack b17 b2 (1)
put-down b17 (1)
unstack b2 b6 (1)
put-down b2 (1)
pick-up b17 (1)
stack b17 b2 (1)
unstack b6 b8 (1)
put-down b6 (1)
unstack b8 b24 (1)
put-down b8 (1)
unstack b24 b16 (1)
put-down b24 (1)
pick-up b8 (1)
stack b8 b24 (1)
pick-up b6 (1)
stack b6 b8 (1)
unstack b17 b2 (1)
put-down b17 (1)
pick-up b2 (1)
stack b2 b6 (1)
pick-up b17 (1)
stack b17 b2 (1)
unstack b16 b22 (1)
put-down b16 (1)
unstack b22 b4 (1)
put-down b22 (1)
unstack b4 b25 (1)
put-down b4 (1)
pick-up b22 (1)
stack b22 b4 (1)
pick-up b16 (1)
stack b16 b22 (1)
unstack b25 b29 (1)
put-down b25 (1)
unstack b29 b23 (1)
put-down b29 (1)
pick-up b23 (1)
stack b23 b20 (1)
pick-up b29 (1)
stack b29 b23 (1)
pick-up b25 (1)
stack b25 b29 (1)
unstack b16 b22 (1)
put-down b16 (1)
unstack b22 b4 (1)
put-down b22 (1)
pick-up b16 (1)
stack b16 b22 (1)
pick-up b4 (1)
stack b4 b25 (1)
unstack b16 b22 (1)
put-down b16 (1)
pick-up b22 (1)
stack b22 b4 (1)
pick-up b16 (1)
stack b16 b22 (1)
unstack b17 b2 (1)
put-down b17 (1)
unstack b2 b6 (1)
put-down b2 (1)
unstack b6 b8 (1)
put-down b6 (1)
pick-up b2 (1)
stack b2 b6 (1)
pick-up b17 (1)
stack b17 b2 (1)
unstack b8 b24 (1)
put-down b8 (1)
pick-up b24 (1)
stack b24 b16 (1)
pick-up b8 (1)
stack b8 b24 (1)
unstack b17 b2 (1)
put-down b17 (1)
unstack b2 b6 (1)
put-down b2 (1)
pick-up b17 (1)
stack b17 b2 (1)
pick-up b6 (1)
stack b6 b8 (1)
unstack b17 b2 (1)
put-down b17 (1)
pick-up b2 (1)
stack b2 b6 (1)
pick-up b17 (1)
stack b17 b2 (1)
[t=0.0987537s, 28024 KB] Plan length: 244 step(s).
[t=0.0987537s, 28024 KB] Plan cost: 244
[t=0.0987537s, 28024 KB] Expanded 1579 state(s).
[t=0.0987537s, 28024 KB] Reopened 0 state(s).
[t=0.0987537s, 28024 KB] Evaluated 1580 state(s).
[t=0.0987537s, 28024 KB] Evaluations: 3160
[t=0.0987537s, 28024 KB] Generated 15502 state(s).
[t=0.0987537s, 28024 KB] Dead ends: 0 state(s).
[t=0.0987537s, 28024 KB] Number of registered states: 1580
[t=0.0987537s, 28024 KB] Int hash set load factor: 1580/2048 = 0.771484
[t=0.0987537s, 28024 KB] Int hash set resizes: 11
[t=0.0987537s, 28024 KB] Search time: 0.0592929s
[t=0.0987537s, 28024 KB] Total time: 0.0987537s
Solution found.
Peak memory: 28024 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.30s
