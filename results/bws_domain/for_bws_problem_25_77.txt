INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_25/bws_problem_25_77.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.012s wall-clock]
2052 relevant atoms
1375 auxiliary atoms
3427 final queue length
5985 total queue pushes
Completing instantiation... [0.030s CPU, 0.021s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
26 uncovered facts
Choosing groups: [0.010s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.008s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.031s wall-clock]
1850 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
50 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.020s wall-clock]
Reordering and filtering variables...
51 of 51 variables necessary.
26 of 51 mutex groups necessary.
1250 of 1250 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.008s wall-clock]
Translator variables: 51
Translator derived variables: 0
Translator facts: 702
Translator goal facts: 19
Translator mutex groups: 26
Translator total mutex groups size: 676
Translator operators: 1250
Translator axioms: 0
Translator task size: 10748
Translator peak memory: 38384 KB
Writing output... [0.010s CPU, 0.006s wall-clock]
Done! [0.120s CPU, 0.115s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=1.8285e-05s, 24488 KB] reading input...
[t=0.00433681s, 25632 KB] done reading input!
[t=0.00536526s, 26028 KB] Initializing landmark count heuristic...
[t=0.00541892s, 26028 KB] Generating landmark graph...
[t=0.00553184s, 26160 KB] Building a landmark graph with reasonable orders.
[t=0.00562224s, 26160 KB] Initializing Exploration...
[t=0.00611512s, 26532 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0193518s, 26928 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0195322s, 26928 KB] Landmarks generation time: 0.0140102s
[t=0.019566s, 26928 KB] Discovered 101 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0196174s, 26928 KB] 324 edges
[t=0.019631s, 26928 KB] approx. reasonable orders
[t=0.0223543s, 26928 KB] approx. obedient reasonable orders
[t=0.0223873s, 26928 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0223971s, 26928 KB] Landmarks generation time: 0.0169723s
[t=0.0224066s, 26928 KB] Discovered 101 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0224148s, 26928 KB] 358 edges
[t=0.0224235s, 26928 KB] Landmark graph generation time: 0.0170119s
[t=0.0224321s, 26928 KB] Landmark graph contains 101 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0224406s, 26928 KB] Landmark graph contains 358 orderings.
[t=0.0230057s, 26928 KB] Simplifying 4950 unary operators... done! [3750 unary operators]
[t=0.0242398s, 27060 KB] time to simplify: 0.00131534s
[t=0.0243985s, 27060 KB] Initializing additive heuristic...
[t=0.0244157s, 27060 KB] Initializing FF heuristic...
[t=0.0244685s, 27060 KB] Building successor generator...done!
[t=0.0247073s, 27060 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0247163s, 27060 KB] time for successor generation creation: 0.000204872s
[t=0.0247297s, 27060 KB] Variables: 51
[t=0.0247379s, 27060 KB] FactPairs: 702
[t=0.0247468s, 27060 KB] Bytes per state: 20
[t=0.024839s, 27060 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0248726s, 27060 KB] 49 initial landmarks, 19 goal landmarks
[t=0.0249363s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0249458s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0249538s, 27060 KB] g=0, 1 evaluated, 0 expanded
[t=0.0249683s, 27060 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.024977s, 27060 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0251718s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.025181s, 27060 KB] g=1, 7 evaluated, 6 expanded
[t=0.0253702s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0253789s, 27060 KB] g=2, 13 evaluated, 12 expanded
[t=0.0256472s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0256561s, 27060 KB] g=3, 22 evaluated, 21 expanded
[t=0.0258959s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0259053s, 27060 KB] g=4, 30 evaluated, 29 expanded
[t=0.0262468s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.026257s, 27060 KB] g=6, 41 evaluated, 40 expanded
[t=0.0264692s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0264821s, 27060 KB] g=6, 47 evaluated, 46 expanded
[t=0.026807s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.026817s, 27060 KB] g=7, 56 evaluated, 55 expanded
[t=0.0272119s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0272221s, 27060 KB] g=10, 69 evaluated, 68 expanded
[t=0.027377s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.027386s, 27060 KB] g=10, 74 evaluated, 73 expanded
[t=0.0276777s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0276891s, 27060 KB] g=12, 83 evaluated, 82 expanded
[t=0.0279214s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0279302s, 27060 KB] g=12, 91 evaluated, 90 expanded
[t=0.0283662s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.028381s, 27060 KB] g=14, 106 evaluated, 105 expanded
[t=0.0284823s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0284915s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0284996s, 27060 KB] g=14, 109 evaluated, 108 expanded
[t=0.0286532s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0286623s, 27060 KB] g=15, 114 evaluated, 113 expanded
[t=0.0290743s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0290833s, 27060 KB] g=18, 128 evaluated, 127 expanded
[t=0.0292654s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0292738s, 27060 KB] g=18, 134 evaluated, 133 expanded
[t=0.0295513s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0295609s, 27060 KB] g=20, 143 evaluated, 142 expanded
[t=0.0299984s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0300077s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0300188s, 27060 KB] g=20, 158 evaluated, 157 expanded
[t=0.0302856s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0302945s, 27060 KB] g=22, 167 evaluated, 166 expanded
[t=0.0305831s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.030592s, 27060 KB] g=24, 177 evaluated, 176 expanded
[t=0.0307432s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0307521s, 27060 KB] g=24, 182 evaluated, 181 expanded
[t=0.0310824s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0310916s, 27060 KB] g=26, 193 evaluated, 192 expanded
[t=0.0313895s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.031399s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0314102s, 27060 KB] g=26, 203 evaluated, 202 expanded
[t=0.0317358s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0317594s, 27060 KB] g=28, 213 evaluated, 212 expanded
[t=0.0318012s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0318115s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0318332s, 27060 KB] g=28, 214 evaluated, 213 expanded
[t=0.0321369s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0321466s, 27060 KB] g=30, 224 evaluated, 223 expanded
[t=0.0321867s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0321956s, 27060 KB] g=30, 225 evaluated, 224 expanded
[t=0.0326945s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0327037s, 27060 KB] g=32, 242 evaluated, 241 expanded
[t=0.0327438s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0327529s, 27060 KB] g=32, 243 evaluated, 242 expanded
[t=0.0332522s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0332618s, 27060 KB] g=34, 260 evaluated, 259 expanded
[t=0.0333018s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0333143s, 27060 KB] g=34, 261 evaluated, 260 expanded
[t=0.033779s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0337895s, 27060 KB] g=36, 277 evaluated, 276 expanded
[t=0.0342544s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0342641s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0342719s, 27060 KB] g=38, 293 evaluated, 292 expanded
[t=0.0344953s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0345051s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0345133s, 27060 KB] g=40, 301 evaluated, 300 expanded
[t=0.0346808s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0346901s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.034698s, 27060 KB] g=42, 307 evaluated, 306 expanded
[t=0.0348702s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0348947s, 27060 KB] g=44, 313 evaluated, 312 expanded
[t=0.0349618s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0349705s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0349784s, 27060 KB] g=44, 315 evaluated, 314 expanded
[t=0.0351422s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0351518s, 27060 KB] g=46, 321 evaluated, 320 expanded
[t=0.0352138s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0352228s, 27060 KB] g=46, 323 evaluated, 322 expanded
[t=0.0354039s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.035413s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0354209s, 27060 KB] g=48, 330 evaluated, 329 expanded
[t=0.0355473s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0355584s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0355669s, 27060 KB] g=50, 334 evaluated, 333 expanded
[t=0.0356642s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0356737s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0356821s, 27060 KB] g=52, 337 evaluated, 336 expanded
[t=0.0359173s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.035927s, 27060 KB] g=54, 345 evaluated, 344 expanded
[t=0.0360186s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0360299s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0360382s, 27060 KB] g=56, 348 evaluated, 347 expanded
[t=0.036288s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0363029s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0363112s, 27060 KB] g=60, 357 evaluated, 356 expanded
[t=0.0363981s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0364117s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0364247s, 27060 KB] g=62, 360 evaluated, 359 expanded
[t=0.036977s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0369982s, 27060 KB] g=76, 385 evaluated, 384 expanded
[t=0.0370475s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0370573s, 27060 KB] g=76, 387 evaluated, 386 expanded
[t=0.0371218s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0371342s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0371436s, 27060 KB] g=78, 390 evaluated, 389 expanded
[t=0.0372162s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0372264s, 27060 KB] g=82, 394 evaluated, 393 expanded
[t=0.037245s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0372538s, 27060 KB] g=83, 395 evaluated, 394 expanded
[t=0.037269s, 27060 KB] Solution found!
[t=0.0372794s, 27060 KB] Actual search time: 0.0123969s
unstack b1 b5 (1)
put-down b1 (1)
pick-up b11 (1)
stack b11 b3 (1)
unstack b2 b22 (1)
stack b2 b1 (1)
unstack b25 b20 (1)
put-down b25 (1)
unstack b20 b14 (1)
put-down b20 (1)
unstack b14 b19 (1)
put-down b14 (1)
unstack b22 b23 (1)
stack b22 b20 (1)
unstack b23 b7 (1)
put-down b23 (1)
unstack b7 b13 (1)
put-down b7 (1)
pick-up b19 (1)
stack b19 b7 (1)
unstack b13 b21 (1)
put-down b13 (1)
unstack b21 b18 (1)
put-down b21 (1)
unstack b17 b4 (1)
stack b17 b21 (1)
unstack b18 b15 (1)
stack b18 b22 (1)
unstack b11 b3 (1)
put-down b11 (1)
unstack b15 b24 (1)
stack b15 b17 (1)
unstack b3 b8 (1)
stack b3 b9 (1)
pick-up b4 (1)
stack b4 b2 (1)
pick-up b5 (1)
stack b5 b18 (1)
pick-up b11 (1)
stack b11 b3 (1)
pick-up b13 (1)
stack b13 b15 (1)
unstack b8 b12 (1)
stack b8 b13 (1)
unstack b12 b10 (1)
stack b12 b16 (1)
pick-up b10 (1)
stack b10 b11 (1)
pick-up b23 (1)
stack b23 b10 (1)
unstack b12 b16 (1)
put-down b12 (1)
pick-up b25 (1)
stack b25 b12 (1)
pick-up b16 (1)
stack b16 b8 (1)
unstack b25 b12 (1)
put-down b25 (1)
pick-up b12 (1)
stack b12 b16 (1)
pick-up b25 (1)
stack b25 b12 (1)
unstack b23 b10 (1)
put-down b23 (1)
unstack b10 b11 (1)
put-down b10 (1)
pick-up b23 (1)
stack b23 b10 (1)
unstack b11 b3 (1)
put-down b11 (1)
unstack b3 b9 (1)
put-down b3 (1)
pick-up b9 (1)
stack b9 b24 (1)
pick-up b3 (1)
stack b3 b9 (1)
pick-up b11 (1)
stack b11 b3 (1)
unstack b23 b10 (1)
put-down b23 (1)
pick-up b10 (1)
stack b10 b11 (1)
pick-up b23 (1)
stack b23 b10 (1)
[t=0.0372887s, 27060 KB] Plan length: 84 step(s).
[t=0.0372887s, 27060 KB] Plan cost: 84
[t=0.0372887s, 27060 KB] Expanded 395 state(s).
[t=0.0372887s, 27060 KB] Reopened 0 state(s).
[t=0.0372887s, 27060 KB] Evaluated 396 state(s).
[t=0.0372887s, 27060 KB] Evaluations: 792
[t=0.0372887s, 27060 KB] Generated 4619 state(s).
[t=0.0372887s, 27060 KB] Dead ends: 0 state(s).
[t=0.0372887s, 27060 KB] Number of registered states: 396
[t=0.0372887s, 27060 KB] Int hash set load factor: 396/512 = 0.773438
[t=0.0372887s, 27060 KB] Int hash set resizes: 9
[t=0.0372887s, 27060 KB] Search time: 0.0124512s
[t=0.0372887s, 27060 KB] Total time: 0.0372887s
Solution found.
Peak memory: 27060 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.20s
