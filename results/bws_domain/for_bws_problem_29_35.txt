INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_29/bws_problem_29_35.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.017s wall-clock]
2728 relevant atoms
1827 auxiliary atoms
4555 final queue length
7981 total queue pushes
Completing instantiation... [0.020s CPU, 0.030s wall-clock]
Instantiating: [0.040s CPU, 0.049s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
30 uncovered facts
Choosing groups: [0.000s CPU, 0.002s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.001s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.010s CPU, 0.001s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.002s wall-clock]
Translating task: [0.040s CPU, 0.048s wall-clock]
2494 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
58 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.020s wall-clock]
Reordering and filtering variables...
59 of 59 variables necessary.
30 of 59 mutex groups necessary.
1682 of 1682 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.011s wall-clock]
Translator variables: 59
Translator derived variables: 0
Translator facts: 930
Translator goal facts: 26
Translator mutex groups: 30
Translator total mutex groups size: 900
Translator operators: 1682
Translator axioms: 0
Translator task size: 14443
Translator peak memory: 40824 KB
Writing output... [0.010s CPU, 0.009s wall-clock]
Done! [0.150s CPU, 0.155s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=3.0855e-05s, 24488 KB] reading input...
[t=0.00587909s, 26220 KB] done reading input!
[t=0.00710712s, 26616 KB] Initializing landmark count heuristic...
[t=0.00715711s, 26616 KB] Generating landmark graph...
[t=0.00730469s, 26748 KB] Building a landmark graph with reasonable orders.
[t=0.00745331s, 26748 KB] Initializing Exploration...
[t=0.00848462s, 27200 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0331137s, 28132 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0332467s, 28132 KB] Landmarks generation time: 0.0259399s
[t=0.0332718s, 28132 KB] Discovered 132 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0333057s, 28132 KB] 987 edges
[t=0.0333157s, 28132 KB] approx. reasonable orders
[t=0.0336462s, 28132 KB] approx. obedient reasonable orders
[t=0.0337067s, 28132 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.033716s, 28132 KB] Landmarks generation time: 0.0265502s
[t=0.0337257s, 28132 KB] Discovered 132 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0337337s, 28132 KB] 990 edges
[t=0.0337419s, 28132 KB] Landmark graph generation time: 0.0265923s
[t=0.0337509s, 28132 KB] Landmark graph contains 132 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0337587s, 28132 KB] Landmark graph contains 990 orderings.
[t=0.0343206s, 28156 KB] Simplifying 6670 unary operators... done! [5046 unary operators]
[t=0.0359677s, 28156 KB] time to simplify: 0.00175824s
[t=0.0361759s, 28156 KB] Initializing additive heuristic...
[t=0.036197s, 28156 KB] Initializing FF heuristic...
[t=0.0362724s, 28156 KB] Building successor generator...done!
[t=0.0366077s, 28328 KB] peak memory difference for successor generator creation: 172 KB
[t=0.0366171s, 28328 KB] time for successor generation creation: 0.000302997s
[t=0.036634s, 28328 KB] Variables: 59
[t=0.0366427s, 28328 KB] FactPairs: 930
[t=0.0366512s, 28328 KB] Bytes per state: 24
[t=0.0368154s, 28328 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0368574s, 28328 KB] 59 initial landmarks, 26 goal landmarks
[t=0.0369605s, 28328 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 73
[t=0.0369714s, 28328 KB] New best heuristic value for ff(transform = adapt_costs(one)): 53
[t=0.0369812s, 28328 KB] g=0, 1 evaluated, 0 expanded
[t=0.0369987s, 28328 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 73
[t=0.037008s, 28328 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 53
[t=0.0372044s, 28328 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 72
[t=0.0372181s, 28328 KB] g=1, 5 evaluated, 4 expanded
[t=0.0376546s, 28328 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 71
[t=0.0376658s, 28328 KB] g=3, 16 evaluated, 15 expanded
[t=0.0379901s, 28328 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 70
[t=0.0380049s, 28328 KB] g=6, 24 evaluated, 23 expanded
[t=0.0382881s, 28328 KB] New best heuristic value for ff(transform = adapt_costs(one)): 52
[t=0.0383009s, 28328 KB] g=4, 31 evaluated, 30 expanded
[t=0.0386232s, 28328 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 69
[t=0.0386394s, 28328 KB] New best heuristic value for ff(transform = adapt_costs(one)): 51
[t=0.0386512s, 28328 KB] g=6, 39 evaluated, 38 expanded
[t=0.0388901s, 28328 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 68
[t=0.0388995s, 28328 KB] g=8, 45 evaluated, 44 expanded
[t=0.0393741s, 28328 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 67
[t=0.0393842s, 28328 KB] g=10, 57 evaluated, 56 expanded
[t=0.0399079s, 28328 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 66
[t=0.0399179s, 28328 KB] g=12, 70 evaluated, 69 expanded
[t=0.0402387s, 28328 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 65
[t=0.0402503s, 28328 KB] New best heuristic value for ff(transform = adapt_costs(one)): 50
[t=0.0402603s, 28328 KB] g=14, 78 evaluated, 77 expanded
[t=0.0406208s, 28328 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 64
[t=0.0406385s, 28328 KB] g=16, 87 evaluated, 86 expanded
[t=0.0410562s, 28328 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 62
[t=0.0410661s, 28328 KB] New best heuristic value for ff(transform = adapt_costs(one)): 49
[t=0.0410746s, 28328 KB] g=18, 97 evaluated, 96 expanded
[t=0.0413897s, 28328 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 61
[t=0.0414036s, 28328 KB] g=19, 103 evaluated, 102 expanded
[t=0.0414566s, 28328 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.0414658s, 28328 KB] New best heuristic value for ff(transform = adapt_costs(one)): 48
[t=0.0414741s, 28328 KB] g=20, 104 evaluated, 103 expanded
[t=0.0418377s, 28328 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0418478s, 28328 KB] New best heuristic value for ff(transform = adapt_costs(one)): 47
[t=0.041856s, 28328 KB] g=22, 113 evaluated, 112 expanded
[t=0.0422338s, 28328 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0422438s, 28328 KB] New best heuristic value for ff(transform = adapt_costs(one)): 46
[t=0.042255s, 28328 KB] g=24, 122 evaluated, 121 expanded
[t=0.0426242s, 28328 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0426337s, 28328 KB] New best heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0426418s, 28328 KB] g=26, 131 evaluated, 130 expanded
[t=0.0430473s, 28328 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0430606s, 28328 KB] New best heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.0430694s, 28328 KB] g=28, 141 evaluated, 140 expanded
[t=0.0434451s, 28328 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.043455s, 28328 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0434658s, 28328 KB] g=30, 150 evaluated, 149 expanded
[t=0.043844s, 28328 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0438538s, 28328 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0438643s, 28328 KB] g=32, 159 evaluated, 158 expanded
[t=0.0442433s, 28328 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0442527s, 28328 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0442609s, 28328 KB] g=34, 168 evaluated, 167 expanded
[t=0.0446841s, 28328 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0446945s, 28328 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0447039s, 28328 KB] g=36, 178 evaluated, 177 expanded
[t=0.0450961s, 28328 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0451078s, 28328 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0451167s, 28328 KB] g=38, 187 evaluated, 186 expanded
[t=0.0454991s, 28328 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0455082s, 28328 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0455164s, 28328 KB] g=40, 196 evaluated, 195 expanded
[t=0.0462458s, 28328 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0462681s, 28328 KB] g=43, 213 evaluated, 212 expanded
[t=0.0478096s, 28328 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.04782s, 28328 KB] g=49, 252 evaluated, 251 expanded
[t=0.0479139s, 28328 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0479232s, 28328 KB] g=50, 254 evaluated, 253 expanded
[t=0.0488322s, 28328 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0488428s, 28328 KB] g=52, 276 evaluated, 275 expanded
[t=0.0493135s, 28328 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0493255s, 28328 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0493337s, 28328 KB] g=54, 287 evaluated, 286 expanded
[t=0.0497711s, 28328 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0497813s, 28328 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0497904s, 28328 KB] g=56, 298 evaluated, 297 expanded
[t=0.050159s, 28328 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0501681s, 28328 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0501764s, 28328 KB] g=58, 307 evaluated, 306 expanded
[t=0.0504971s, 28328 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0505062s, 28328 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0505143s, 28328 KB] g=60, 315 evaluated, 314 expanded
[t=0.051657s, 28328 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0516691s, 28328 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0516793s, 28328 KB] g=64, 343 evaluated, 342 expanded
[t=0.0520022s, 28328 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.052013s, 28328 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0520226s, 28328 KB] g=66, 351 evaluated, 350 expanded
[t=0.0536518s, 28328 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0536716s, 28328 KB] g=70, 393 evaluated, 392 expanded
[t=0.0539154s, 28328 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.053929s, 28328 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0539375s, 28328 KB] g=72, 399 evaluated, 398 expanded
[t=0.0550135s, 28328 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0550315s, 28328 KB] g=78, 426 evaluated, 425 expanded
[t=0.0553373s, 28328 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0553484s, 28328 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0553575s, 28328 KB] g=80, 433 evaluated, 432 expanded
[t=0.0556771s, 28328 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0556883s, 28328 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0556973s, 28328 KB] g=82, 441 evaluated, 440 expanded
[t=0.0559729s, 28328 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0559911s, 28328 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0560009s, 28328 KB] g=84, 448 evaluated, 447 expanded
[t=0.0561972s, 28328 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0562078s, 28328 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0562165s, 28328 KB] g=86, 453 evaluated, 452 expanded
[t=0.0565331s, 28328 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.056549s, 28328 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0565587s, 28328 KB] g=88, 461 evaluated, 460 expanded
[t=0.0588425s, 28328 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0588659s, 28328 KB] g=98, 518 evaluated, 517 expanded
[t=0.0590274s, 28328 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0590371s, 28328 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0590457s, 28328 KB] g=100, 522 evaluated, 521 expanded
[t=0.0596477s, 28328 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0596584s, 28328 KB] g=104, 538 evaluated, 537 expanded
[t=0.059818s, 28328 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0598279s, 28328 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0598364s, 28328 KB] g=106, 542 evaluated, 541 expanded
[t=0.0640413s, 28328 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0640541s, 28328 KB] g=120, 662 evaluated, 661 expanded
[t=0.0641989s, 28328 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0642087s, 28328 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0642171s, 28328 KB] g=122, 666 evaluated, 665 expanded
[t=0.0645127s, 28328 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0645229s, 28328 KB] g=126, 675 evaluated, 674 expanded
[t=0.0646262s, 28328 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0646353s, 28328 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0646436s, 28328 KB] g=128, 678 evaluated, 677 expanded
[t=0.0673926s, 28328 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.067408s, 28328 KB] g=158, 781 evaluated, 780 expanded
[t=0.0676203s, 28328 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0676296s, 28328 KB] g=162, 790 evaluated, 789 expanded
[t=0.0677042s, 28328 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0677133s, 28328 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0677215s, 28328 KB] g=164, 793 evaluated, 792 expanded
[t=0.0680382s, 28328 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0680477s, 28328 KB] g=176, 809 evaluated, 808 expanded
[t=0.0681238s, 28328 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.068133s, 28328 KB] g=180, 813 evaluated, 812 expanded
[t=0.0681537s, 28328 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0681626s, 28328 KB] g=181, 814 evaluated, 813 expanded
[t=0.0681792s, 28328 KB] Solution found!
[t=0.0681919s, 28328 KB] Actual search time: 0.0313307s
unstack b26 b4 (1)
put-down b26 (1)
unstack b4 b3 (1)
stack b4 b18 (1)
unstack b3 b9 (1)
put-down b3 (1)
unstack b25 b27 (1)
put-down b25 (1)
unstack b27 b7 (1)
put-down b27 (1)
unstack b7 b10 (1)
put-down b7 (1)
unstack b10 b17 (1)
put-down b10 (1)
unstack b17 b2 (1)
put-down b17 (1)
unstack b2 b28 (1)
stack b2 b9 (1)
unstack b28 b8 (1)
stack b28 b4 (1)
unstack b8 b23 (1)
stack b8 b27 (1)
unstack b23 b14 (1)
stack b23 b7 (1)
unstack b14 b22 (1)
put-down b14 (1)
unstack b22 b13 (1)
stack b22 b24 (1)
unstack b13 b20 (1)
stack b13 b22 (1)
unstack b20 b19 (1)
stack b20 b17 (1)
unstack b19 b1 (1)
stack b19 b3 (1)
unstack b1 b11 (1)
stack b1 b13 (1)
pick-up b25 (1)
stack b25 b19 (1)
pick-up b26 (1)
stack b26 b11 (1)
unstack b2 b9 (1)
put-down b2 (1)
unstack b9 b5 (1)
put-down b9 (1)
unstack b26 b11 (1)
put-down b26 (1)
unstack b11 b12 (1)
put-down b11 (1)
unstack b12 b6 (1)
stack b12 b25 (1)
unstack b6 b16 (1)
stack b6 b20 (1)
pick-up b11 (1)
stack b11 b12 (1)
pick-up b9 (1)
stack b9 b6 (1)
pick-up b2 (1)
stack b2 b9 (1)
pick-up b26 (1)
stack b26 b11 (1)
unstack b5 b29 (1)
put-down b5 (1)
pick-up b29 (1)
stack b29 b14 (1)
pick-up b5 (1)
stack b5 b29 (1)
unstack b23 b7 (1)
put-down b23 (1)
pick-up b7 (1)
stack b7 b8 (1)
pick-up b23 (1)
stack b23 b7 (1)
unstack b28 b4 (1)
put-down b28 (1)
unstack b4 b18 (1)
put-down b4 (1)
unstack b18 b15 (1)
stack b18 b2 (1)
unstack b15 b21 (1)
stack b15 b5 (1)
pick-up b16 (1)
stack b16 b15 (1)
pick-up b21 (1)
stack b21 b23 (1)
pick-up b4 (1)
stack b4 b18 (1)
pick-up b28 (1)
stack b28 b4 (1)
unstack b1 b13 (1)
put-down b1 (1)
unstack b13 b22 (1)
put-down b13 (1)
unstack b22 b24 (1)
put-down b22 (1)
pick-up b24 (1)
stack b24 b16 (1)
pick-up b1 (1)
stack b1 b13 (1)
pick-up b22 (1)
stack b22 b24 (1)
unstack b1 b13 (1)
put-down b1 (1)
pick-up b13 (1)
stack b13 b22 (1)
pick-up b1 (1)
stack b1 b13 (1)
unstack b21 b23 (1)
put-down b21 (1)
unstack b23 b7 (1)
put-down b23 (1)
pick-up b21 (1)
stack b21 b23 (1)
unstack b7 b8 (1)
put-down b7 (1)
unstack b8 b27 (1)
put-down b8 (1)
pick-up b27 (1)
stack b27 b1 (1)
pick-up b8 (1)
stack b8 b27 (1)
pick-up b7 (1)
stack b7 b8 (1)
unstack b21 b23 (1)
put-down b21 (1)
pick-up b23 (1)
stack b23 b7 (1)
pick-up b21 (1)
stack b21 b23 (1)
unstack b28 b4 (1)
put-down b28 (1)
unstack b4 b18 (1)
put-down b4 (1)
pick-up b28 (1)
stack b28 b4 (1)
unstack b18 b2 (1)
put-down b18 (1)
unstack b2 b9 (1)
put-down b2 (1)
pick-up b18 (1)
stack b18 b2 (1)
unstack b28 b4 (1)
put-down b28 (1)
pick-up b4 (1)
stack b4 b18 (1)
pick-up b28 (1)
stack b28 b4 (1)
unstack b9 b6 (1)
put-down b9 (1)
unstack b6 b20 (1)
put-down b6 (1)
pick-up b9 (1)
stack b9 b6 (1)
unstack b20 b17 (1)
put-down b20 (1)
pick-up b17 (1)
stack b17 b21 (1)
pick-up b20 (1)
stack b20 b17 (1)
unstack b9 b6 (1)
put-down b9 (1)
pick-up b6 (1)
stack b6 b20 (1)
pick-up b9 (1)
stack b9 b6 (1)
unstack b28 b4 (1)
put-down b28 (1)
unstack b4 b18 (1)
put-down b4 (1)
pick-up b28 (1)
stack b28 b4 (1)
unstack b18 b2 (1)
put-down b18 (1)
pick-up b2 (1)
stack b2 b9 (1)
pick-up b18 (1)
stack b18 b2 (1)
unstack b28 b4 (1)
put-down b28 (1)
pick-up b4 (1)
stack b4 b18 (1)
pick-up b28 (1)
stack b28 b4 (1)
[t=0.0682013s, 28328 KB] Plan length: 182 step(s).
[t=0.0682013s, 28328 KB] Plan cost: 182
[t=0.0682013s, 28328 KB] Expanded 814 state(s).
[t=0.0682013s, 28328 KB] Reopened 0 state(s).
[t=0.0682013s, 28328 KB] Evaluated 815 state(s).
[t=0.0682013s, 28328 KB] Evaluations: 1630
[t=0.0682013s, 28328 KB] Generated 7546 state(s).
[t=0.0682013s, 28328 KB] Dead ends: 0 state(s).
[t=0.0682013s, 28328 KB] Number of registered states: 815
[t=0.0682013s, 28328 KB] Int hash set load factor: 815/1024 = 0.795898
[t=0.0682013s, 28328 KB] Int hash set resizes: 10
[t=0.0682013s, 28328 KB] Search time: 0.0313868s
[t=0.0682013s, 28328 KB] Total time: 0.0682013s
Solution found.
Peak memory: 28328 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.27s
