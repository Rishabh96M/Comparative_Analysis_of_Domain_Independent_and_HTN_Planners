INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_29/bws_problem_29_95.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.016s wall-clock]
2728 relevant atoms
1827 auxiliary atoms
4555 final queue length
7984 total queue pushes
Completing instantiation... [0.030s CPU, 0.029s wall-clock]
Instantiating: [0.050s CPU, 0.048s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.002s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
30 uncovered facts
Choosing groups: [0.000s CPU, 0.002s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.001s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.002s wall-clock]
Translating task: [0.050s CPU, 0.049s wall-clock]
2494 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
58 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.021s wall-clock]
Reordering and filtering variables...
59 of 59 variables necessary.
30 of 59 mutex groups necessary.
1682 of 1682 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.011s wall-clock]
Translator variables: 59
Translator derived variables: 0
Translator facts: 930
Translator goal facts: 24
Translator mutex groups: 30
Translator total mutex groups size: 900
Translator operators: 1682
Translator axioms: 0
Translator task size: 14441
Translator peak memory: 40824 KB
Writing output... [0.010s CPU, 0.009s wall-clock]
Done! [0.150s CPU, 0.154s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=4.6686e-05s, 24488 KB] reading input...
[t=0.00700113s, 26220 KB] done reading input!
[t=0.00862331s, 26616 KB] Initializing landmark count heuristic...
[t=0.00869122s, 26616 KB] Generating landmark graph...
[t=0.00881376s, 26748 KB] Building a landmark graph with reasonable orders.
[t=0.0089198s, 26748 KB] Initializing Exploration...
[t=0.00944227s, 27200 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0327169s, 27860 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0328133s, 27860 KB] Landmarks generation time: 0.0240072s
[t=0.0328376s, 27860 KB] Discovered 127 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0328538s, 27860 KB] 603 edges
[t=0.0328637s, 27860 KB] approx. reasonable orders
[t=0.0342613s, 27860 KB] approx. obedient reasonable orders
[t=0.0343003s, 27860 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0343104s, 27860 KB] Landmarks generation time: 0.025615s
[t=0.0343205s, 27860 KB] Discovered 127 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0343289s, 27860 KB] 619 edges
[t=0.0343373s, 27860 KB] Landmark graph generation time: 0.0256532s
[t=0.034346s, 27860 KB] Landmark graph contains 127 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0343541s, 27860 KB] Landmark graph contains 619 orderings.
[t=0.0350238s, 27884 KB] Simplifying 6670 unary operators... done! [5046 unary operators]
[t=0.0368541s, 28016 KB] time to simplify: 0.00197171s
[t=0.0371147s, 28016 KB] Initializing additive heuristic...
[t=0.0371385s, 28016 KB] Initializing FF heuristic...
[t=0.0372666s, 28016 KB] Building successor generator...done!
[t=0.0377051s, 28016 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0377151s, 28016 KB] time for successor generation creation: 0.000408921s
[t=0.0377381s, 28016 KB] Variables: 59
[t=0.0377463s, 28016 KB] FactPairs: 930
[t=0.0377548s, 28016 KB] Bytes per state: 24
[t=0.038086s, 28016 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0381466s, 28016 KB] 59 initial landmarks, 24 goal landmarks
[t=0.0382826s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 68
[t=0.0382952s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 52
[t=0.0383062s, 28016 KB] g=0, 1 evaluated, 0 expanded
[t=0.0383283s, 28016 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 68
[t=0.0383375s, 28016 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 52
[t=0.0386923s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 67
[t=0.0387039s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 51
[t=0.0387136s, 28016 KB] g=2, 9 evaluated, 8 expanded
[t=0.0390704s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 66
[t=0.0390859s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 50
[t=0.0390971s, 28016 KB] g=4, 17 evaluated, 16 expanded
[t=0.0392314s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 65
[t=0.0392436s, 28016 KB] g=5, 20 evaluated, 19 expanded
[t=0.0398305s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 64
[t=0.0398533s, 28016 KB] g=8, 34 evaluated, 33 expanded
[t=0.0402706s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 49
[t=0.040284s, 28016 KB] g=6, 44 evaluated, 43 expanded
[t=0.0403768s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 63
[t=0.0403916s, 28016 KB] g=7, 46 evaluated, 45 expanded
[t=0.0408726s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 62
[t=0.040889s, 28016 KB] g=10, 58 evaluated, 57 expanded
[t=0.0414195s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 61
[t=0.0414321s, 28016 KB] g=12, 71 evaluated, 70 expanded
[t=0.0418786s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.0418903s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 48
[t=0.0419077s, 28016 KB] g=14, 82 evaluated, 81 expanded
[t=0.0423027s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 58
[t=0.0423129s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 47
[t=0.0423218s, 28016 KB] g=16, 92 evaluated, 91 expanded
[t=0.0427555s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0427664s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0427747s, 28016 KB] g=18, 103 evaluated, 102 expanded
[t=0.0431988s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0432121s, 28016 KB] g=20, 113 evaluated, 112 expanded
[t=0.04342s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0434295s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0434374s, 28016 KB] g=20, 118 evaluated, 117 expanded
[t=0.0438322s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0438422s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0438503s, 28016 KB] g=22, 128 evaluated, 127 expanded
[t=0.0441377s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0441472s, 28016 KB] g=23, 135 evaluated, 134 expanded
[t=0.0441984s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0442074s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0442154s, 28016 KB] g=24, 136 evaluated, 135 expanded
[t=0.044617s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0446265s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0446345s, 28016 KB] g=26, 146 evaluated, 145 expanded
[t=0.0450002s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0450094s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0450174s, 28016 KB] g=28, 155 evaluated, 154 expanded
[t=0.0453809s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0453906s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0453988s, 28016 KB] g=30, 164 evaluated, 163 expanded
[t=0.0458001s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0458096s, 28016 KB] g=32, 174 evaluated, 173 expanded
[t=0.0458807s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0458947s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0459066s, 28016 KB] g=32, 175 evaluated, 174 expanded
[t=0.0463663s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0463802s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0463888s, 28016 KB] g=34, 185 evaluated, 184 expanded
[t=0.0467438s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0467549s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0467631s, 28016 KB] g=36, 194 evaluated, 193 expanded
[t=0.0471257s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0471419s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0471503s, 28016 KB] g=38, 203 evaluated, 202 expanded
[t=0.0475181s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0475273s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0475353s, 28016 KB] g=40, 212 evaluated, 211 expanded
[t=0.0478525s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0478613s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0478693s, 28016 KB] g=42, 220 evaluated, 219 expanded
[t=0.0482943s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0483038s, 28016 KB] g=45, 231 evaluated, 230 expanded
[t=0.0483542s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0483627s, 28016 KB] g=46, 232 evaluated, 231 expanded
[t=0.0486434s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0486534s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0486612s, 28016 KB] g=48, 239 evaluated, 238 expanded
[t=0.0489883s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0489979s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0490057s, 28016 KB] g=50, 247 evaluated, 246 expanded
[t=0.0492444s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0492538s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0492619s, 28016 KB] g=52, 253 evaluated, 252 expanded
[t=0.0494762s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0494864s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0494944s, 28016 KB] g=54, 258 evaluated, 257 expanded
[t=0.0499762s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0499882s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0499964s, 28016 KB] g=58, 270 evaluated, 269 expanded
[t=0.0502007s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0502112s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0502193s, 28016 KB] g=60, 275 evaluated, 274 expanded
[t=0.0526099s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0526436s, 28016 KB] g=70, 338 evaluated, 337 expanded
[t=0.0528767s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0528992s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0529075s, 28016 KB] g=72, 344 evaluated, 343 expanded
[t=0.0531431s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0531529s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0531614s, 28016 KB] g=74, 350 evaluated, 349 expanded
[t=0.0533147s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0533314s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0533402s, 28016 KB] g=76, 354 evaluated, 353 expanded
[t=0.0539063s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0539163s, 28016 KB] g=80, 370 evaluated, 369 expanded
[t=0.0540619s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0540711s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0540793s, 28016 KB] g=82, 374 evaluated, 373 expanded
[t=0.0545691s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.05458s, 28016 KB] g=88, 389 evaluated, 388 expanded
[t=0.0547207s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.05473s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0547382s, 28016 KB] g=90, 393 evaluated, 392 expanded
[t=0.0548378s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0548467s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0548548s, 28016 KB] g=92, 396 evaluated, 395 expanded
[t=0.0554619s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0554727s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0554809s, 28016 KB] g=106, 420 evaluated, 419 expanded
[t=0.0555516s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0555603s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0555683s, 28016 KB] g=108, 423 evaluated, 422 expanded
[t=0.055652s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0556611s, 28016 KB] g=112, 427 evaluated, 426 expanded
[t=0.0556817s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0556901s, 28016 KB] g=113, 428 evaluated, 427 expanded
[t=0.055707s, 28016 KB] Solution found!
[t=0.0557188s, 28016 KB] Actual search time: 0.0175657s
unstack b18 b4 (1)
put-down b18 (1)
unstack b23 b19 (1)
put-down b23 (1)
unstack b4 b21 (1)
stack b4 b12 (1)
unstack b19 b7 (1)
put-down b19 (1)
unstack b21 b27 (1)
put-down b21 (1)
unstack b22 b14 (1)
put-down b22 (1)
unstack b27 b24 (1)
stack b27 b7 (1)
unstack b24 b9 (1)
put-down b24 (1)
pick-up b10 (1)
stack b10 b24 (1)
unstack b9 b8 (1)
stack b9 b18 (1)
unstack b8 b28 (1)
put-down b8 (1)
unstack b28 b17 (1)
stack b28 b9 (1)
unstack b17 b5 (1)
stack b17 b26 (1)
unstack b5 b11 (1)
stack b5 b27 (1)
unstack b11 b2 (1)
put-down b11 (1)
unstack b2 b25 (1)
stack b2 b23 (1)
pick-up b14 (1)
stack b14 b2 (1)
unstack b25 b29 (1)
stack b25 b11 (1)
unstack b6 b15 (1)
stack b6 b25 (1)
pick-up b22 (1)
stack b22 b17 (1)
pick-up b29 (1)
stack b29 b22 (1)
unstack b15 b3 (1)
put-down b15 (1)
unstack b3 b1 (1)
stack b3 b4 (1)
unstack b1 b16 (1)
stack b1 b6 (1)
pick-up b19 (1)
stack b19 b16 (1)
pick-up b15 (1)
stack b15 b3 (1)
pick-up b21 (1)
stack b21 b1 (1)
unstack b19 b16 (1)
put-down b19 (1)
pick-up b16 (1)
stack b16 b8 (1)
pick-up b19 (1)
stack b19 b16 (1)
unstack b15 b3 (1)
put-down b15 (1)
unstack b3 b4 (1)
put-down b3 (1)
pick-up b15 (1)
stack b15 b3 (1)
unstack b4 b12 (1)
put-down b4 (1)
unstack b12 b20 (1)
stack b12 b14 (1)
unstack b20 b13 (1)
stack b20 b21 (1)
pick-up b13 (1)
stack b13 b29 (1)
pick-up b4 (1)
stack b4 b12 (1)
unstack b15 b3 (1)
put-down b15 (1)
pick-up b3 (1)
stack b3 b4 (1)
pick-up b15 (1)
stack b15 b3 (1)
unstack b5 b27 (1)
put-down b5 (1)
unstack b27 b7 (1)
put-down b27 (1)
pick-up b7 (1)
stack b7 b20 (1)
pick-up b27 (1)
stack b27 b7 (1)
pick-up b5 (1)
stack b5 b27 (1)
unstack b13 b29 (1)
put-down b13 (1)
unstack b29 b22 (1)
put-down b29 (1)
pick-up b13 (1)
stack b13 b29 (1)
unstack b22 b17 (1)
put-down b22 (1)
unstack b17 b26 (1)
put-down b17 (1)
pick-up b26 (1)
stack b26 b5 (1)
pick-up b17 (1)
stack b17 b26 (1)
pick-up b22 (1)
stack b22 b17 (1)
unstack b13 b29 (1)
put-down b13 (1)
pick-up b29 (1)
stack b29 b22 (1)
pick-up b13 (1)
stack b13 b29 (1)
[t=0.0557278s, 28016 KB] Plan length: 114 step(s).
[t=0.0557278s, 28016 KB] Plan cost: 114
[t=0.0557278s, 28016 KB] Expanded 428 state(s).
[t=0.0557278s, 28016 KB] Reopened 0 state(s).
[t=0.0557278s, 28016 KB] Evaluated 429 state(s).
[t=0.0557278s, 28016 KB] Evaluations: 858
[t=0.0557278s, 28016 KB] Generated 4723 state(s).
[t=0.0557278s, 28016 KB] Dead ends: 0 state(s).
[t=0.0557278s, 28016 KB] Number of registered states: 429
[t=0.0557278s, 28016 KB] Int hash set load factor: 429/512 = 0.837891
[t=0.0557278s, 28016 KB] Int hash set resizes: 9
[t=0.0557278s, 28016 KB] Search time: 0.0176433s
[t=0.0557278s, 28016 KB] Total time: 0.0557278s
Solution found.
Peak memory: 28016 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.25s
