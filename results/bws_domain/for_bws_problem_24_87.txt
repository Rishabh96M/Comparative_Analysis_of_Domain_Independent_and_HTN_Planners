INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_24/bws_problem_24_87.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.010s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.011s wall-clock]
1898 relevant atoms
1272 auxiliary atoms
3170 final queue length
5526 total queue pushes
Completing instantiation... [0.020s CPU, 0.019s wall-clock]
Instantiating: [0.040s CPU, 0.032s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
25 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.007s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.028s wall-clock]
1704 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
48 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.022s wall-clock]
Reordering and filtering variables...
49 of 49 variables necessary.
25 of 49 mutex groups necessary.
1152 of 1152 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.007s wall-clock]
Translator variables: 49
Translator derived variables: 0
Translator facts: 650
Translator goal facts: 18
Translator mutex groups: 25
Translator total mutex groups size: 625
Translator operators: 1152
Translator axioms: 0
Translator task size: 9910
Translator peak memory: 37880 KB
Writing output... [0.010s CPU, 0.006s wall-clock]
Done! [0.110s CPU, 0.107s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=1.848e-05s, 24488 KB] reading input...
[t=0.00314793s, 25532 KB] done reading input!
[t=0.00413496s, 25928 KB] Initializing landmark count heuristic...
[t=0.00417445s, 25928 KB] Generating landmark graph...
[t=0.00424494s, 25928 KB] Building a landmark graph with reasonable orders.
[t=0.00430948s, 26060 KB] Initializing Exploration...
[t=0.00462099s, 26388 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0172544s, 26916 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0173605s, 26916 KB] Landmarks generation time: 0.0131187s
[t=0.0173759s, 26916 KB] Discovered 99 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0173943s, 26916 KB] 505 edges
[t=0.0174045s, 26916 KB] approx. reasonable orders
[t=0.0174141s, 26916 KB] approx. obedient reasonable orders
[t=0.0174547s, 26916 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0174642s, 26916 KB] Landmarks generation time: 0.0132861s
[t=0.0174743s, 26916 KB] Discovered 99 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0174826s, 26916 KB] 505 edges
[t=0.0174917s, 26916 KB] Landmark graph generation time: 0.0133244s
[t=0.0175006s, 26916 KB] Landmark graph contains 99 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0175089s, 26916 KB] Landmark graph contains 505 orderings.
[t=0.0179703s, 26916 KB] Simplifying 4560 unary operators... done! [3456 unary operators]
[t=0.0190169s, 26916 KB] time to simplify: 0.00111636s
[t=0.0191621s, 26916 KB] Initializing additive heuristic...
[t=0.0191779s, 26916 KB] Initializing FF heuristic...
[t=0.0192305s, 26916 KB] Building successor generator...done!
[t=0.0194528s, 26916 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0194622s, 26916 KB] time for successor generation creation: 0.000188002s
[t=0.0194751s, 26916 KB] Variables: 49
[t=0.019484s, 26916 KB] FactPairs: 650
[t=0.0194921s, 26916 KB] Bytes per state: 20
[t=0.0195823s, 26916 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0196147s, 26916 KB] 49 initial landmarks, 18 goal landmarks
[t=0.019671s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0196798s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0196876s, 26916 KB] g=0, 1 evaluated, 0 expanded
[t=0.0197003s, 26916 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.019709s, 26916 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0198643s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0198741s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0198822s, 26916 KB] g=2, 6 evaluated, 5 expanded
[t=0.0200254s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.020034s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0200418s, 26916 KB] g=4, 11 evaluated, 10 expanded
[t=0.0201816s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0201906s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0201983s, 26916 KB] g=6, 16 evaluated, 15 expanded
[t=0.0203138s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.020323s, 26916 KB] g=8, 20 evaluated, 19 expanded
[t=0.0203853s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0203943s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0204022s, 26916 KB] g=8, 22 evaluated, 21 expanded
[t=0.020575s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.020588s, 26916 KB] g=10, 27 evaluated, 26 expanded
[t=0.0206246s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0206335s, 26916 KB] g=10, 28 evaluated, 27 expanded
[t=0.0208824s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0208917s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0209005s, 26916 KB] g=12, 37 evaluated, 36 expanded
[t=0.0210565s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0210658s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0210747s, 26916 KB] g=14, 42 evaluated, 41 expanded
[t=0.0211837s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0211932s, 26916 KB] g=15, 45 evaluated, 44 expanded
[t=0.0212327s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0212419s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0212501s, 26916 KB] g=16, 46 evaluated, 45 expanded
[t=0.0213935s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0214178s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0214336s, 26916 KB] g=18, 50 evaluated, 49 expanded
[t=0.0216175s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0216437s, 26916 KB] g=20, 54 evaluated, 53 expanded
[t=0.0218661s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0219015s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0219115s, 26916 KB] g=22, 58 evaluated, 57 expanded
[t=0.022206s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0222153s, 26916 KB] g=26, 67 evaluated, 66 expanded
[t=0.0223599s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0223692s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0223784s, 26916 KB] g=28, 72 evaluated, 71 expanded
[t=0.0226449s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0226539s, 26916 KB] g=32, 81 evaluated, 80 expanded
[t=0.0227186s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0227277s, 26916 KB] g=33, 83 evaluated, 82 expanded
[t=0.0229216s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0229389s, 26916 KB] g=34, 89 evaluated, 88 expanded
[t=0.0230215s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0230312s, 26916 KB] g=35, 90 evaluated, 89 expanded
[t=0.0232866s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0232964s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0233097s, 26916 KB] g=38, 99 evaluated, 98 expanded
[t=0.0234768s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0234862s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0234945s, 26916 KB] g=40, 104 evaluated, 103 expanded
[t=0.023592s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0236009s, 26916 KB] g=41, 107 evaluated, 106 expanded
[t=0.023637s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0236458s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.023654s, 26916 KB] g=42, 108 evaluated, 107 expanded
[t=0.0237963s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0238058s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0238141s, 26916 KB] g=44, 113 evaluated, 112 expanded
[t=0.0239456s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0239549s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0239632s, 26916 KB] g=46, 118 evaluated, 117 expanded
[t=0.0242515s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0242611s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0242695s, 26916 KB] g=50, 129 evaluated, 128 expanded
[t=0.0243756s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0243845s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0243926s, 26916 KB] g=52, 133 evaluated, 132 expanded
[t=0.0246838s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.024701s, 26916 KB] g=57, 145 evaluated, 144 expanded
[t=0.0247628s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0247775s, 26916 KB] g=58, 147 evaluated, 146 expanded
[t=0.0249127s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0249218s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.02493s, 26916 KB] g=60, 152 evaluated, 151 expanded
[t=0.025007s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0250161s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0250245s, 26916 KB] g=62, 155 evaluated, 154 expanded
[t=0.0252228s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0252328s, 26916 KB] g=66, 164 evaluated, 163 expanded
[t=0.0253045s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0253136s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0253219s, 26916 KB] g=68, 167 evaluated, 166 expanded
[t=0.0254507s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0254598s, 26916 KB] g=74, 174 evaluated, 173 expanded
[t=0.0256226s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0256348s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0256457s, 26916 KB] g=76, 177 evaluated, 176 expanded
[t=0.0256678s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0256774s, 26916 KB] g=77, 178 evaluated, 177 expanded
[t=0.0256958s, 26916 KB] Solution found!
[t=0.0257311s, 26916 KB] Actual search time: 0.00611383s
unstack b5 b24 (1)
put-down b5 (1)
unstack b19 b15 (1)
stack b19 b5 (1)
unstack b15 b11 (1)
stack b15 b9 (1)
unstack b24 b13 (1)
stack b24 b19 (1)
unstack b13 b17 (1)
put-down b13 (1)
unstack b17 b18 (1)
put-down b17 (1)
unstack b18 b20 (1)
stack b18 b13 (1)
unstack b20 b12 (1)
stack b20 b15 (1)
pick-up b11 (1)
stack b11 b18 (1)
unstack b21 b22 (1)
put-down b21 (1)
pick-up b22 (1)
stack b22 b11 (1)
unstack b12 b23 (1)
put-down b12 (1)
unstack b23 b1 (1)
put-down b23 (1)
pick-up b12 (1)
stack b12 b23 (1)
unstack b1 b16 (1)
put-down b1 (1)
unstack b16 b10 (1)
put-down b16 (1)
pick-up b1 (1)
stack b1 b16 (1)
unstack b10 b2 (1)
put-down b10 (1)
unstack b2 b14 (1)
put-down b2 (1)
unstack b14 b6 (1)
stack b14 b21 (1)
unstack b6 b3 (1)
stack b6 b17 (1)
unstack b3 b8 (1)
stack b3 b22 (1)
pick-up b10 (1)
stack b10 b8 (1)
unstack b14 b21 (1)
put-down b14 (1)
pick-up b21 (1)
stack b21 b2 (1)
pick-up b14 (1)
stack b14 b21 (1)
unstack b10 b8 (1)
put-down b10 (1)
unstack b8 b4 (1)
put-down b8 (1)
unstack b4 b7 (1)
stack b4 b3 (1)
pick-up b10 (1)
stack b10 b8 (1)
pick-up b7 (1)
stack b7 b24 (1)
unstack b10 b8 (1)
put-down b10 (1)
pick-up b8 (1)
stack b8 b4 (1)
pick-up b10 (1)
stack b10 b8 (1)
unstack b20 b15 (1)
put-down b20 (1)
unstack b15 b9 (1)
put-down b15 (1)
pick-up b9 (1)
stack b9 b14 (1)
pick-up b15 (1)
stack b15 b9 (1)
pick-up b20 (1)
stack b20 b15 (1)
[t=0.0257411s, 26916 KB] Plan length: 78 step(s).
[t=0.0257411s, 26916 KB] Plan cost: 78
[t=0.0257411s, 26916 KB] Expanded 178 state(s).
[t=0.0257411s, 26916 KB] Reopened 0 state(s).
[t=0.0257411s, 26916 KB] Evaluated 179 state(s).
[t=0.0257411s, 26916 KB] Evaluations: 358
[t=0.0257411s, 26916 KB] Generated 1481 state(s).
[t=0.0257411s, 26916 KB] Dead ends: 0 state(s).
[t=0.0257411s, 26916 KB] Number of registered states: 179
[t=0.0257411s, 26916 KB] Int hash set load factor: 179/256 = 0.699219
[t=0.0257411s, 26916 KB] Int hash set resizes: 8
[t=0.0257411s, 26916 KB] Search time: 0.00615927s
[t=0.0257411s, 26916 KB] Total time: 0.0257411s
Solution found.
Peak memory: 26916 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.18s
