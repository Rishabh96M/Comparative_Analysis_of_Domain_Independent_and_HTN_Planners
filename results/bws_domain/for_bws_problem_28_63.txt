INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_28/bws_problem_28_63.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.000s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.015s wall-clock]
2550 relevant atoms
1708 auxiliary atoms
4258 final queue length
7456 total queue pushes
Completing instantiation... [0.020s CPU, 0.027s wall-clock]
Instantiating: [0.040s CPU, 0.044s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.010s CPU, 0.002s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
29 uncovered facts
Choosing groups: [0.000s CPU, 0.002s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.009s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.002s wall-clock]
Translating task: [0.050s CPU, 0.049s wall-clock]
2324 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
56 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.019s wall-clock]
Reordering and filtering variables...
57 of 57 variables necessary.
29 of 57 mutex groups necessary.
1568 of 1568 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.010s wall-clock]
Translator variables: 57
Translator derived variables: 0
Translator facts: 870
Translator goal facts: 25
Translator mutex groups: 29
Translator total mutex groups size: 841
Translator operators: 1568
Translator axioms: 0
Translator task size: 13469
Translator peak memory: 40316 KB
Writing output... [0.010s CPU, 0.009s wall-clock]
Done! [0.140s CPU, 0.147s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=1.8895e-05s, 24488 KB] reading input...
[t=0.00481931s, 26076 KB] done reading input!
[t=0.00621827s, 26472 KB] Initializing landmark count heuristic...
[t=0.00626967s, 26472 KB] Generating landmark graph...
[t=0.00638997s, 26604 KB] Building a landmark graph with reasonable orders.
[t=0.00651031s, 26604 KB] Initializing Exploration...
[t=0.00709423s, 27016 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0294501s, 27680 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0295486s, 27680 KB] Landmarks generation time: 0.0231328s
[t=0.0295693s, 27680 KB] Discovered 129 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0295857s, 27680 KB] 776 edges
[t=0.0295962s, 27680 KB] approx. reasonable orders
[t=0.0364214s, 27680 KB] approx. obedient reasonable orders
[t=0.0367639s, 27680 KB] Removed 1 reasonable or obedient reasonable orders
[t=0.036787s, 27680 KB] Landmarks generation time: 0.0305149s
[t=0.0367979s, 27680 KB] Discovered 129 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0368163s, 27680 KB] 893 edges
[t=0.0368268s, 27680 KB] Landmark graph generation time: 0.0305652s
[t=0.0368367s, 27680 KB] Landmark graph contains 129 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0368462s, 27680 KB] Landmark graph contains 893 orderings.
[t=0.0375223s, 27704 KB] Simplifying 6216 unary operators... done! [4704 unary operators]
[t=0.0390973s, 27836 KB] time to simplify: 0.00172399s
[t=0.0393497s, 27836 KB] Initializing additive heuristic...
[t=0.0393725s, 27836 KB] Initializing FF heuristic...
[t=0.0394554s, 27836 KB] Building successor generator...done!
[t=0.0397441s, 27836 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0397533s, 27836 KB] time for successor generation creation: 0.000253226s
[t=0.0397679s, 27836 KB] Variables: 57
[t=0.0397764s, 27836 KB] FactPairs: 870
[t=0.0397844s, 27836 KB] Bytes per state: 24
[t=0.0398798s, 27836 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0399133s, 27836 KB] 57 initial landmarks, 25 goal landmarks
[t=0.0399809s, 27836 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 72
[t=0.0399905s, 27836 KB] New best heuristic value for ff(transform = adapt_costs(one)): 53
[t=0.0399992s, 27836 KB] g=0, 1 evaluated, 0 expanded
[t=0.0400135s, 27836 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 72
[t=0.0400219s, 27836 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 53
[t=0.0402605s, 27836 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 71
[t=0.0402699s, 27836 KB] g=1, 7 evaluated, 6 expanded
[t=0.0403162s, 27836 KB] New best heuristic value for ff(transform = adapt_costs(one)): 52
[t=0.0403247s, 27836 KB] g=2, 8 evaluated, 7 expanded
[t=0.0408588s, 27836 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 70
[t=0.0408694s, 27836 KB] g=4, 23 evaluated, 22 expanded
[t=0.0409903s, 27836 KB] New best heuristic value for ff(transform = adapt_costs(one)): 51
[t=0.0410017s, 27836 KB] g=4, 26 evaluated, 25 expanded
[t=0.0414422s, 27836 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 69
[t=0.0414537s, 27836 KB] g=6, 38 evaluated, 37 expanded
[t=0.0421373s, 27836 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 68
[t=0.0421564s, 27836 KB] g=8, 55 evaluated, 54 expanded
[t=0.042901s, 27836 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 67
[t=0.0429143s, 27836 KB] g=10, 75 evaluated, 74 expanded
[t=0.0436418s, 27836 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 66
[t=0.0436553s, 27836 KB] g=12, 95 evaluated, 94 expanded
[t=0.0441086s, 27836 KB] New best heuristic value for ff(transform = adapt_costs(one)): 50
[t=0.0441258s, 27836 KB] g=10, 107 evaluated, 106 expanded
[t=0.0442095s, 27836 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 65
[t=0.0442186s, 27836 KB] g=13, 109 evaluated, 108 expanded
[t=0.0446942s, 27836 KB] New best heuristic value for ff(transform = adapt_costs(one)): 49
[t=0.0447043s, 27836 KB] g=12, 122 evaluated, 121 expanded
[t=0.0453421s, 27836 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 64
[t=0.0453527s, 27836 KB] g=16, 139 evaluated, 138 expanded
[t=0.0454415s, 27836 KB] New best heuristic value for ff(transform = adapt_costs(one)): 47
[t=0.0454505s, 27836 KB] g=14, 141 evaluated, 140 expanded
[t=0.0464257s, 27836 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 63
[t=0.0464521s, 27836 KB] g=18, 167 evaluated, 166 expanded
[t=0.047252s, 27836 KB] New best heuristic value for ff(transform = adapt_costs(one)): 46
[t=0.0472653s, 27836 KB] g=18, 189 evaluated, 188 expanded
[t=0.0477132s, 27836 KB] New best heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0477261s, 27836 KB] g=20, 201 evaluated, 200 expanded
[t=0.0477724s, 27836 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 62
[t=0.0477812s, 27836 KB] g=20, 202 evaluated, 201 expanded
[t=0.0490625s, 27836 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 61
[t=0.0490927s, 27836 KB] g=22, 235 evaluated, 234 expanded
[t=0.0498311s, 27836 KB] New best heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.0498472s, 27836 KB] g=26, 255 evaluated, 254 expanded
[t=0.0502035s, 27836 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 60
[t=0.0502153s, 27836 KB] g=24, 264 evaluated, 263 expanded
[t=0.0506027s, 27836 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0506163s, 27836 KB] g=28, 273 evaluated, 272 expanded
[t=0.0513734s, 27836 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0513951s, 27836 KB] g=30, 293 evaluated, 292 expanded
[t=0.0515625s, 27836 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.0515731s, 27836 KB] g=26, 297 evaluated, 296 expanded
[t=0.0542069s, 27836 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 57
[t=0.0542306s, 27836 KB] g=28, 366 evaluated, 365 expanded
[t=0.0557254s, 27836 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0557374s, 27836 KB] g=30, 407 evaluated, 406 expanded
[t=0.0569632s, 27836 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0569817s, 27836 KB] g=34, 440 evaluated, 439 expanded
[t=0.0575477s, 27836 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0575584s, 27836 KB] g=32, 455 evaluated, 454 expanded
[t=0.0582325s, 27836 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0582563s, 27836 KB] g=38, 472 evaluated, 471 expanded
[t=0.0589055s, 27836 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0589184s, 27836 KB] g=40, 489 evaluated, 488 expanded
[t=0.059261s, 27836 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0592715s, 27836 KB] g=34, 498 evaluated, 497 expanded
[t=0.0660513s, 27836 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0661393s, 27836 KB] g=46, 658 evaluated, 657 expanded
[t=0.0700039s, 27836 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0700628s, 27836 KB] g=50, 763 evaluated, 762 expanded
[t=0.0707722s, 27836 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0708056s, 27836 KB] g=52, 781 evaluated, 780 expanded
[t=0.0714428s, 27836 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0714543s, 27836 KB] g=54, 798 evaluated, 797 expanded
[t=0.0751231s, 27836 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0751505s, 27836 KB] g=60, 895 evaluated, 894 expanded
[t=0.0754625s, 27836 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0754733s, 27836 KB] g=62, 903 evaluated, 902 expanded
[t=0.0761937s, 27836 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0762044s, 27836 KB] g=64, 922 evaluated, 921 expanded
[t=0.0785557s, 27836 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0785766s, 27836 KB] g=68, 984 evaluated, 983 expanded
[t=0.079103s, 27836 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0791132s, 27836 KB] g=70, 998 evaluated, 997 expanded
[t=0.0801075s, 27836 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0801392s, 27836 KB] g=74, 1022 evaluated, 1021 expanded
[t=0.0822859s, 27836 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0823117s, 27836 KB] g=80, 1077 evaluated, 1076 expanded
[t=0.0905373s, 27836 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0905628s, 27836 KB] g=98, 1294 evaluated, 1293 expanded
[t=0.126008s, 27968 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.126081s, 27968 KB] g=44, 2220 evaluated, 2219 expanded
[t=0.367645s, 30440 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.367713s, 30440 KB] g=112, 8740 evaluated, 8739 expanded
[t=0.368103s, 30440 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.368123s, 30440 KB] g=114, 8751 evaluated, 8750 expanded
[t=0.368823s, 30440 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.368841s, 30440 KB] g=116, 8769 evaluated, 8768 expanded
[t=0.369122s, 30440 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.369132s, 30440 KB] g=118, 8777 evaluated, 8776 expanded
[t=0.370345s, 30440 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.37036s, 30440 KB] g=122, 8811 evaluated, 8810 expanded
[t=0.370665s, 30440 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.370676s, 30440 KB] g=124, 8819 evaluated, 8818 expanded
[t=0.37419s, 30440 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.37421s, 30440 KB] g=136, 8921 evaluated, 8920 expanded
[t=0.374907s, 30440 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.37492s, 30440 KB] g=140, 8941 evaluated, 8940 expanded
[t=0.375149s, 30440 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.375163s, 30440 KB] g=142, 8947 evaluated, 8946 expanded
[t=0.401854s, 30836 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.401914s, 30836 KB] g=180, 9768 evaluated, 9767 expanded
[t=0.403667s, 30836 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.403684s, 30836 KB] g=188, 9825 evaluated, 9824 expanded
[t=0.404291s, 30836 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.404305s, 30836 KB] g=192, 9845 evaluated, 9844 expanded
[t=0.404498s, 30836 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.40451s, 30836 KB] g=194, 9851 evaluated, 9850 expanded
[t=0.407104s, 30836 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.407125s, 30836 KB] g=210, 9934 evaluated, 9933 expanded
[t=0.407781s, 30836 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.407801s, 30836 KB] g=218, 9958 evaluated, 9957 expanded
[t=0.407926s, 30836 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.407936s, 30836 KB] g=218, 9962 evaluated, 9961 expanded
[t=0.407989s, 30836 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.407998s, 30836 KB] g=219, 9964 evaluated, 9963 expanded
[t=0.408047s, 30836 KB] Solution found!
[t=0.408066s, 30836 KB] Actual search time: 0.368149s
unstack b9 b12 (1)
stack b9 b23 (1)
pick-up b4 (1)
stack b4 b17 (1)
unstack b14 b15 (1)
put-down b14 (1)
unstack b15 b22 (1)
put-down b15 (1)
unstack b22 b11 (1)
put-down b22 (1)
unstack b11 b13 (1)
put-down b11 (1)
pick-up b15 (1)
stack b15 b11 (1)
unstack b13 b2 (1)
put-down b13 (1)
unstack b2 b10 (1)
stack b2 b16 (1)
unstack b10 b7 (1)
stack b10 b14 (1)
unstack b7 b19 (1)
put-down b7 (1)
unstack b19 b28 (1)
put-down b19 (1)
unstack b28 b1 (1)
stack b28 b12 (1)
unstack b1 b20 (1)
put-down b1 (1)
unstack b20 b25 (1)
put-down b20 (1)
pick-up b13 (1)
stack b13 b20 (1)
unstack b25 b18 (1)
stack b25 b7 (1)
unstack b18 b5 (1)
put-down b18 (1)
unstack b5 b24 (1)
stack b5 b2 (1)
pick-up b24 (1)
stack b24 b22 (1)
unstack b10 b14 (1)
put-down b10 (1)
pick-up b14 (1)
stack b14 b28 (1)
pick-up b10 (1)
stack b10 b14 (1)
unstack b4 b17 (1)
put-down b4 (1)
unstack b17 b8 (1)
stack b17 b15 (1)
pick-up b18 (1)
stack b18 b8 (1)
pick-up b4 (1)
stack b4 b17 (1)
unstack b18 b8 (1)
put-down b18 (1)
unstack b8 b27 (1)
stack b8 b5 (1)
pick-up b18 (1)
stack b18 b8 (1)
pick-up b27 (1)
stack b27 b13 (1)
pick-up b19 (1)
stack b19 b27 (1)
unstack b9 b23 (1)
put-down b9 (1)
unstack b23 b26 (1)
stack b23 b1 (1)
pick-up b9 (1)
stack b9 b23 (1)
unstack b26 b21 (1)
put-down b26 (1)
unstack b18 b8 (1)
put-down b18 (1)
pick-up b21 (1)
stack b21 b18 (1)
unstack b25 b7 (1)
put-down b25 (1)
pick-up b7 (1)
stack b7 b21 (1)
pick-up b25 (1)
stack b25 b7 (1)
unstack b10 b14 (1)
put-down b10 (1)
unstack b14 b28 (1)
put-down b14 (1)
pick-up b10 (1)
stack b10 b14 (1)
unstack b28 b12 (1)
put-down b28 (1)
pick-up b12 (1)
stack b12 b25 (1)
pick-up b28 (1)
stack b28 b12 (1)
unstack b10 b14 (1)
put-down b10 (1)
pick-up b14 (1)
stack b14 b28 (1)
pick-up b10 (1)
stack b10 b14 (1)
unstack b8 b5 (1)
put-down b8 (1)
unstack b5 b2 (1)
put-down b5 (1)
pick-up b8 (1)
stack b8 b5 (1)
unstack b2 b16 (1)
put-down b2 (1)
unstack b16 b6 (1)
stack b16 b24 (1)
pick-up b2 (1)
stack b2 b16 (1)
unstack b6 b3 (1)
stack b6 b10 (1)
pick-up b26 (1)
stack b26 b6 (1)
pick-up b3 (1)
stack b3 b4 (1)
unstack b8 b5 (1)
put-down b8 (1)
pick-up b5 (1)
stack b5 b2 (1)
pick-up b8 (1)
stack b8 b5 (1)
unstack b19 b27 (1)
put-down b19 (1)
unstack b27 b13 (1)
put-down b27 (1)
pick-up b19 (1)
stack b19 b27 (1)
unstack b13 b20 (1)
put-down b13 (1)
pick-up b20 (1)
stack b20 b3 (1)
pick-up b13 (1)
stack b13 b20 (1)
unstack b19 b27 (1)
put-down b19 (1)
pick-up b27 (1)
stack b27 b13 (1)
pick-up b19 (1)
stack b19 b27 (1)
unstack b26 b6 (1)
put-down b26 (1)
unstack b6 b10 (1)
put-down b6 (1)
pick-up b26 (1)
stack b26 b6 (1)
unstack b10 b14 (1)
put-down b10 (1)
unstack b14 b28 (1)
put-down b14 (1)
unstack b28 b12 (1)
put-down b28 (1)
pick-up b14 (1)
stack b14 b28 (1)
pick-up b10 (1)
stack b10 b14 (1)
unstack b26 b6 (1)
put-down b26 (1)
pick-up b6 (1)
stack b6 b10 (1)
pick-up b26 (1)
stack b26 b6 (1)
unstack b12 b25 (1)
put-down b12 (1)
unstack b25 b7 (1)
put-down b25 (1)
unstack b7 b21 (1)
put-down b7 (1)
pick-up b25 (1)
stack b25 b7 (1)
pick-up b12 (1)
stack b12 b25 (1)
unstack b21 b18 (1)
put-down b21 (1)
pick-up b18 (1)
stack b18 b8 (1)
pick-up b21 (1)
stack b21 b18 (1)
unstack b12 b25 (1)
put-down b12 (1)
unstack b25 b7 (1)
put-down b25 (1)
pick-up b12 (1)
stack b12 b25 (1)
pick-up b7 (1)
stack b7 b21 (1)
unstack b12 b25 (1)
put-down b12 (1)
pick-up b25 (1)
stack b25 b7 (1)
pick-up b12 (1)
stack b12 b25 (1)
unstack b26 b6 (1)
put-down b26 (1)
unstack b6 b10 (1)
put-down b6 (1)
unstack b10 b14 (1)
put-down b10 (1)
pick-up b6 (1)
stack b6 b10 (1)
pick-up b26 (1)
stack b26 b6 (1)
unstack b14 b28 (1)
put-down b14 (1)
pick-up b28 (1)
stack b28 b12 (1)
pick-up b14 (1)
stack b14 b28 (1)
unstack b26 b6 (1)
put-down b26 (1)
unstack b6 b10 (1)
put-down b6 (1)
pick-up b10 (1)
stack b10 b14 (1)
pick-up b6 (1)
stack b6 b10 (1)
pick-up b26 (1)
stack b26 b6 (1)
[t=0.408081s, 30836 KB] Plan length: 220 step(s).
[t=0.408081s, 30836 KB] Plan cost: 220
[t=0.408081s, 30836 KB] Expanded 9965 state(s).
[t=0.408081s, 30836 KB] Reopened 0 state(s).
[t=0.408081s, 30836 KB] Evaluated 9966 state(s).
[t=0.408081s, 30836 KB] Evaluations: 19932
[t=0.408081s, 30836 KB] Generated 147624 state(s).
[t=0.408081s, 30836 KB] Dead ends: 0 state(s).
[t=0.408081s, 30836 KB] Number of registered states: 9966
[t=0.408081s, 30836 KB] Int hash set load factor: 9966/16384 = 0.608276
[t=0.408081s, 30836 KB] Int hash set resizes: 14
[t=0.408081s, 30836 KB] Search time: 0.368201s
[t=0.408081s, 30836 KB] Total time: 0.408081s
Solution found.
Peak memory: 30836 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.61s
