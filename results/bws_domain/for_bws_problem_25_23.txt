INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_25/bws_problem_25_23.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.012s wall-clock]
2052 relevant atoms
1375 auxiliary atoms
3427 final queue length
5982 total queue pushes
Completing instantiation... [0.020s CPU, 0.022s wall-clock]
Instantiating: [0.040s CPU, 0.036s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
26 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.010s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.008s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.030s wall-clock]
1850 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
50 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.024s wall-clock]
Reordering and filtering variables...
51 of 51 variables necessary.
26 of 51 mutex groups necessary.
1250 of 1250 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.008s wall-clock]
Translator variables: 51
Translator derived variables: 0
Translator facts: 702
Translator goal facts: 22
Translator mutex groups: 26
Translator total mutex groups size: 676
Translator operators: 1250
Translator axioms: 0
Translator task size: 10751
Translator peak memory: 38388 KB
Writing output... [0.010s CPU, 0.006s wall-clock]
Done! [0.120s CPU, 0.117s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.4237e-05s, 24488 KB] reading input...
[t=0.00370855s, 25632 KB] done reading input!
[t=0.0045024s, 26028 KB] Initializing landmark count heuristic...
[t=0.00453419s, 26028 KB] Generating landmark graph...
[t=0.00460782s, 26160 KB] Building a landmark graph with reasonable orders.
[t=0.00467501s, 26160 KB] Initializing Exploration...
[t=0.00508362s, 26532 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0200368s, 27060 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0201234s, 27060 KB] Landmarks generation time: 0.0155159s
[t=0.0201376s, 27060 KB] Discovered 112 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0201538s, 27060 KB] 469 edges
[t=0.0201631s, 27060 KB] approx. reasonable orders
[t=0.020172s, 27060 KB] approx. obedient reasonable orders
[t=0.0201961s, 27060 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0202049s, 27060 KB] Landmarks generation time: 0.0156676s
[t=0.020214s, 27060 KB] Discovered 112 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.020222s, 27060 KB] 469 edges
[t=0.0202301s, 27060 KB] Landmark graph generation time: 0.0157026s
[t=0.0202382s, 27060 KB] Landmark graph contains 112 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0202458s, 27060 KB] Landmark graph contains 469 orderings.
[t=0.0206481s, 27060 KB] Simplifying 4950 unary operators... done! [3750 unary operators]
[t=0.0218232s, 27192 KB] time to simplify: 0.00125545s
[t=0.0219779s, 27192 KB] Initializing additive heuristic...
[t=0.0219937s, 27192 KB] Initializing FF heuristic...
[t=0.0220435s, 27192 KB] Building successor generator...done!
[t=0.022426s, 27192 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0224358s, 27192 KB] time for successor generation creation: 0.000306188s
[t=0.0224496s, 27192 KB] Variables: 51
[t=0.0224577s, 27192 KB] FactPairs: 702
[t=0.0224655s, 27192 KB] Bytes per state: 20
[t=0.0225549s, 27192 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.022586s, 27192 KB] 50 initial landmarks, 22 goal landmarks
[t=0.0226436s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 62
[t=0.0226527s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.022661s, 27192 KB] g=0, 1 evaluated, 0 expanded
[t=0.0226743s, 27192 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 62
[t=0.0226829s, 27192 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.022887s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 61
[t=0.0228959s, 27192 KB] g=2, 7 evaluated, 6 expanded
[t=0.0229386s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 60
[t=0.0229476s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.0229554s, 27192 KB] g=2, 8 evaluated, 7 expanded
[t=0.0231165s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.0231247s, 27192 KB] g=4, 13 evaluated, 12 expanded
[t=0.0231635s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0231718s, 27192 KB] g=4, 14 evaluated, 13 expanded
[t=0.0233006s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 58
[t=0.0233088s, 27192 KB] g=5, 18 evaluated, 17 expanded
[t=0.0235583s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 57
[t=0.0235685s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0235806s, 27192 KB] g=6, 26 evaluated, 25 expanded
[t=0.0237154s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0237255s, 27192 KB] g=8, 30 evaluated, 29 expanded
[t=0.0237713s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0237808s, 27192 KB] g=9, 31 evaluated, 30 expanded
[t=0.0241582s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0241689s, 27192 KB] g=12, 43 evaluated, 42 expanded
[t=0.0244813s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0244968s, 27192 KB] g=14, 53 evaluated, 52 expanded
[t=0.0249109s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0249255s, 27192 KB] g=16, 64 evaluated, 63 expanded
[t=0.0252077s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0252185s, 27192 KB] g=18, 73 evaluated, 72 expanded
[t=0.0255256s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0255373s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0255482s, 27192 KB] g=20, 83 evaluated, 82 expanded
[t=0.025909s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.025924s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.025936s, 27192 KB] g=22, 93 evaluated, 92 expanded
[t=0.0262454s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0262586s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0262696s, 27192 KB] g=24, 103 evaluated, 102 expanded
[t=0.0266444s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0266615s, 27192 KB] g=24, 115 evaluated, 114 expanded
[t=0.0271118s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0271234s, 27192 KB] g=26, 129 evaluated, 128 expanded
[t=0.027518s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0275337s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0275449s, 27192 KB] g=28, 140 evaluated, 139 expanded
[t=0.0279023s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0279122s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0279222s, 27192 KB] g=30, 151 evaluated, 150 expanded
[t=0.0282017s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0282134s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0282234s, 27192 KB] g=32, 160 evaluated, 159 expanded
[t=0.0285107s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0285217s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0285324s, 27192 KB] g=34, 169 evaluated, 168 expanded
[t=0.0287615s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0287713s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0287811s, 27192 KB] g=36, 176 evaluated, 175 expanded
[t=0.0292176s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0292279s, 27192 KB] g=39, 190 evaluated, 189 expanded
[t=0.0293079s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0293184s, 27192 KB] g=40, 192 evaluated, 191 expanded
[t=0.0295475s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0295755s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0296009s, 27192 KB] g=42, 199 evaluated, 198 expanded
[t=0.0299301s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0299468s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0299611s, 27192 KB] g=44, 205 evaluated, 204 expanded
[t=0.033168s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0331847s, 27192 KB] g=54, 304 evaluated, 303 expanded
[t=0.0333243s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0333349s, 27192 KB] g=55, 308 evaluated, 307 expanded
[t=0.033719s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0337309s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0337414s, 27192 KB] g=58, 320 evaluated, 319 expanded
[t=0.0340063s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0340164s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0340265s, 27192 KB] g=60, 328 evaluated, 327 expanded
[t=0.0342765s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0342862s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0342961s, 27192 KB] g=62, 336 evaluated, 335 expanded
[t=0.0345409s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0345508s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0345613s, 27192 KB] g=64, 344 evaluated, 343 expanded
[t=0.0346922s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0347019s, 27192 KB] g=65, 348 evaluated, 347 expanded
[t=0.034744s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0347532s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0347632s, 27192 KB] g=66, 349 evaluated, 348 expanded
[t=0.0349551s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0349671s, 27192 KB] g=67, 353 evaluated, 352 expanded
[t=0.0350098s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0350194s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0350305s, 27192 KB] g=68, 354 evaluated, 353 expanded
[t=0.0351851s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0351946s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0352049s, 27192 KB] g=70, 359 evaluated, 358 expanded
[t=0.0359269s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0359407s, 27192 KB] g=74, 384 evaluated, 383 expanded
[t=0.0360933s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0361037s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.036114s, 27192 KB] g=76, 389 evaluated, 388 expanded
[t=0.0370619s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0370739s, 27192 KB] g=84, 423 evaluated, 422 expanded
[t=0.0371935s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0372046s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.037215s, 27192 KB] g=86, 426 evaluated, 425 expanded
[t=0.0400077s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0400317s, 27192 KB] g=102, 514 evaluated, 513 expanded
[t=0.0402459s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0402571s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0402651s, 27192 KB] g=108, 521 evaluated, 520 expanded
[t=0.0719269s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0719827s, 27192 KB] g=152, 1620 evaluated, 1619 expanded
[t=0.0721025s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0721115s, 27192 KB] g=154, 1624 evaluated, 1623 expanded
[t=0.0735166s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0735403s, 27192 KB] g=166, 1678 evaluated, 1677 expanded
[t=0.0737968s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0738087s, 27192 KB] g=170, 1687 evaluated, 1686 expanded
[t=0.0739027s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0739134s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0739239s, 27192 KB] g=172, 1690 evaluated, 1689 expanded
[t=0.0752084s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0752401s, 27192 KB] g=190, 1749 evaluated, 1748 expanded
[t=0.075307s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0753198s, 27192 KB] g=192, 1752 evaluated, 1751 expanded
[t=0.0755029s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0755142s, 27192 KB] g=200, 1763 evaluated, 1762 expanded
[t=0.0755805s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.075591s, 27192 KB] g=204, 1767 evaluated, 1766 expanded
[t=0.0756295s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0756395s, 27192 KB] g=205, 1768 evaluated, 1767 expanded
[t=0.0756599s, 27192 KB] Solution found!
[t=0.075683s, 27192 KB] Actual search time: 0.0530964s
unstack b21 b4 (1)
stack b21 b22 (1)
unstack b4 b23 (1)
put-down b4 (1)
pick-up b23 (1)
stack b23 b21 (1)
unstack b19 b20 (1)
put-down b19 (1)
unstack b20 b3 (1)
put-down b20 (1)
unstack b3 b1 (1)
put-down b3 (1)
unstack b7 b11 (1)
put-down b7 (1)
unstack b11 b25 (1)
put-down b11 (1)
unstack b25 b15 (1)
put-down b25 (1)
unstack b15 b6 (1)
stack b15 b7 (1)
unstack b6 b16 (1)
put-down b6 (1)
unstack b16 b18 (1)
stack b16 b23 (1)
unstack b18 b14 (1)
stack b18 b25 (1)
unstack b14 b9 (1)
put-down b14 (1)
pick-up b11 (1)
stack b11 b6 (1)
pick-up b19 (1)
stack b19 b14 (1)
pick-up b24 (1)
stack b24 b15 (1)
pick-up b3 (1)
stack b3 b18 (1)
unstack b1 b5 (1)
put-down b1 (1)
unstack b5 b12 (1)
stack b5 b24 (1)
pick-up b1 (1)
stack b1 b5 (1)
pick-up b12 (1)
stack b12 b4 (1)
unstack b16 b23 (1)
put-down b16 (1)
unstack b23 b21 (1)
put-down b23 (1)
pick-up b16 (1)
stack b16 b23 (1)
unstack b21 b22 (1)
put-down b21 (1)
unstack b22 b2 (1)
stack b22 b19 (1)
unstack b2 b8 (1)
put-down b2 (1)
unstack b8 b13 (1)
stack b8 b1 (1)
unstack b13 b17 (1)
stack b13 b3 (1)
unstack b17 b10 (1)
stack b17 b11 (1)
pick-up b10 (1)
stack b10 b9 (1)
pick-up b2 (1)
stack b2 b10 (1)
pick-up b20 (1)
stack b20 b13 (1)
pick-up b21 (1)
stack b21 b22 (1)
unstack b16 b23 (1)
put-down b16 (1)
pick-up b23 (1)
stack b23 b21 (1)
pick-up b16 (1)
stack b16 b23 (1)
unstack b17 b11 (1)
put-down b17 (1)
unstack b11 b6 (1)
put-down b11 (1)
pick-up b6 (1)
stack b6 b8 (1)
pick-up b11 (1)
stack b11 b6 (1)
pick-up b17 (1)
stack b17 b11 (1)
unstack b20 b13 (1)
put-down b20 (1)
unstack b13 b3 (1)
put-down b13 (1)
pick-up b20 (1)
stack b20 b13 (1)
unstack b3 b18 (1)
put-down b3 (1)
unstack b18 b25 (1)
put-down b18 (1)
pick-up b25 (1)
stack b25 b17 (1)
pick-up b3 (1)
stack b3 b18 (1)
unstack b25 b17 (1)
put-down b25 (1)
unstack b17 b11 (1)
put-down b17 (1)
pick-up b25 (1)
stack b25 b17 (1)
unstack b3 b18 (1)
put-down b3 (1)
pick-up b18 (1)
stack b18 b25 (1)
pick-up b3 (1)
stack b3 b18 (1)
unstack b20 b13 (1)
put-down b20 (1)
pick-up b13 (1)
stack b13 b3 (1)
pick-up b20 (1)
stack b20 b13 (1)
unstack b11 b6 (1)
put-down b11 (1)
unstack b6 b8 (1)
put-down b6 (1)
pick-up b11 (1)
stack b11 b6 (1)
unstack b8 b1 (1)
put-down b8 (1)
unstack b1 b5 (1)
put-down b1 (1)
pick-up b8 (1)
stack b8 b1 (1)
unstack b11 b6 (1)
put-down b11 (1)
pick-up b6 (1)
stack b6 b8 (1)
pick-up b11 (1)
stack b11 b6 (1)
unstack b5 b24 (1)
put-down b5 (1)
unstack b24 b15 (1)
put-down b24 (1)
pick-up b5 (1)
stack b5 b24 (1)
unstack b15 b7 (1)
put-down b15 (1)
pick-up b7 (1)
stack b7 b12 (1)
pick-up b15 (1)
stack b15 b7 (1)
unstack b5 b24 (1)
put-down b5 (1)
pick-up b24 (1)
stack b24 b15 (1)
pick-up b5 (1)
stack b5 b24 (1)
unstack b11 b6 (1)
put-down b11 (1)
unstack b6 b8 (1)
put-down b6 (1)
pick-up b11 (1)
stack b11 b6 (1)
unstack b8 b1 (1)
put-down b8 (1)
pick-up b1 (1)
stack b1 b5 (1)
pick-up b8 (1)
stack b8 b1 (1)
unstack b11 b6 (1)
put-down b11 (1)
pick-up b6 (1)
stack b6 b8 (1)
pick-up b11 (1)
stack b11 b6 (1)
unstack b20 b13 (1)
put-down b20 (1)
unstack b13 b3 (1)
put-down b13 (1)
unstack b3 b18 (1)
put-down b3 (1)
pick-up b13 (1)
stack b13 b3 (1)
pick-up b20 (1)
stack b20 b13 (1)
unstack b18 b25 (1)
put-down b18 (1)
unstack b25 b17 (1)
put-down b25 (1)
pick-up b17 (1)
stack b17 b11 (1)
pick-up b25 (1)
stack b25 b17 (1)
pick-up b18 (1)
stack b18 b25 (1)
unstack b20 b13 (1)
put-down b20 (1)
unstack b13 b3 (1)
put-down b13 (1)
pick-up b20 (1)
stack b20 b13 (1)
pick-up b3 (1)
stack b3 b18 (1)
unstack b20 b13 (1)
put-down b20 (1)
pick-up b13 (1)
stack b13 b3 (1)
pick-up b20 (1)
stack b20 b13 (1)
[t=0.0756952s, 27192 KB] Plan length: 206 step(s).
[t=0.0756952s, 27192 KB] Plan cost: 206
[t=0.0756952s, 27192 KB] Expanded 1768 state(s).
[t=0.0756952s, 27192 KB] Reopened 0 state(s).
[t=0.0756952s, 27192 KB] Evaluated 1769 state(s).
[t=0.0756952s, 27192 KB] Evaluations: 3538
[t=0.0756952s, 27192 KB] Generated 14834 state(s).
[t=0.0756952s, 27192 KB] Dead ends: 0 state(s).
[t=0.0756952s, 27192 KB] Number of registered states: 1769
[t=0.0756952s, 27192 KB] Int hash set load factor: 1769/2048 = 0.86377
[t=0.0756952s, 27192 KB] Int hash set resizes: 11
[t=0.0756952s, 27192 KB] Search time: 0.0531408s
[t=0.0756952s, 27192 KB] Total time: 0.0756952s
Solution found.
Peak memory: 27192 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.24s
