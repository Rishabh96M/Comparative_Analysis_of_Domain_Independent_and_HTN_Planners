INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_22/bws_problem_22_34.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.012s wall-clock]
1608 relevant atoms
1078 auxiliary atoms
2686 final queue length
4671 total queue pushes
Completing instantiation... [0.030s CPU, 0.019s wall-clock]
Instantiating: [0.040s CPU, 0.032s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
23 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.007s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
1430 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
44 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.011s wall-clock]
Reordering and filtering variables...
45 of 45 variables necessary.
23 of 45 mutex groups necessary.
968 of 968 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 45
Translator derived variables: 0
Translator facts: 552
Translator goal facts: 20
Translator mutex groups: 23
Translator total mutex groups size: 529
Translator operators: 968
Translator axioms: 0
Translator task size: 8340
Translator peak memory: 36976 KB
Writing output... [0.000s CPU, 0.005s wall-clock]
Done! [0.090s CPU, 0.089s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=1.797e-05s, 24488 KB] reading input...
[t=0.0026361s, 25340 KB] done reading input!
[t=0.00357642s, 25736 KB] Initializing landmark count heuristic...
[t=0.00362572s, 25736 KB] Generating landmark graph...
[t=0.00369682s, 25736 KB] Building a landmark graph with reasonable orders.
[t=0.00376874s, 25736 KB] Initializing Exploration...
[t=0.00410633s, 26000 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0152703s, 26528 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0153465s, 26528 KB] Landmarks generation time: 0.01165s
[t=0.0153603s, 26528 KB] Discovered 100 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0153766s, 26528 KB] 468 edges
[t=0.0153865s, 26528 KB] approx. reasonable orders
[t=0.0165725s, 26528 KB] approx. obedient reasonable orders
[t=0.0166049s, 26528 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0166143s, 26528 KB] Landmarks generation time: 0.0129861s
[t=0.0166239s, 26528 KB] Discovered 100 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0166326s, 26528 KB] 488 edges
[t=0.0166415s, 26528 KB] Landmark graph generation time: 0.013024s
[t=0.0166512s, 26528 KB] Landmark graph contains 100 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0166598s, 26528 KB] Landmark graph contains 488 orderings.
[t=0.0169959s, 26528 KB] Simplifying 3828 unary operators... done! [2904 unary operators]
[t=0.0179435s, 26528 KB] time to simplify: 0.00102302s
[t=0.0181164s, 26528 KB] Initializing additive heuristic...
[t=0.0181319s, 26528 KB] Initializing FF heuristic...
[t=0.0182085s, 26528 KB] Building successor generator...done!
[t=0.0183967s, 26528 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0184057s, 26528 KB] time for successor generation creation: 0.000154692s
[t=0.0184194s, 26528 KB] Variables: 45
[t=0.0184284s, 26528 KB] FactPairs: 552
[t=0.0184375s, 26528 KB] Bytes per state: 20
[t=0.0185243s, 26528 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0185567s, 26528 KB] 45 initial landmarks, 20 goal landmarks
[t=0.0186084s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0186181s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0186268s, 26528 KB] g=0, 1 evaluated, 0 expanded
[t=0.0186406s, 26528 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0186491s, 26528 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0186877s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0186969s, 26528 KB] g=1, 2 evaluated, 1 expanded
[t=0.0189844s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0189947s, 26528 KB] g=4, 13 evaluated, 12 expanded
[t=0.0192288s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0192391s, 26528 KB] g=6, 22 evaluated, 21 expanded
[t=0.0193225s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0193319s, 26528 KB] g=4, 25 evaluated, 24 expanded
[t=0.0196505s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0196633s, 26528 KB] g=6, 37 evaluated, 36 expanded
[t=0.0199157s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0199252s, 26528 KB] g=8, 47 evaluated, 46 expanded
[t=0.0201633s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0201758s, 26528 KB] g=8, 56 evaluated, 55 expanded
[t=0.0202838s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0202933s, 26528 KB] g=10, 60 evaluated, 59 expanded
[t=0.0205291s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0205389s, 26528 KB] g=12, 69 evaluated, 68 expanded
[t=0.0206903s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0207001s, 26528 KB] g=14, 75 evaluated, 74 expanded
[t=0.0208762s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0208852s, 26528 KB] g=16, 82 evaluated, 81 expanded
[t=0.0209479s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0209577s, 26528 KB] g=16, 84 evaluated, 83 expanded
[t=0.0213157s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.021327s, 26528 KB] g=18, 98 evaluated, 97 expanded
[t=0.0217775s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0217885s, 26528 KB] g=20, 115 evaluated, 114 expanded
[t=0.0222924s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.022307s, 26528 KB] g=22, 134 evaluated, 133 expanded
[t=0.0224966s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0225065s, 26528 KB] g=24, 141 evaluated, 140 expanded
[t=0.0229506s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0229619s, 26528 KB] g=24, 158 evaluated, 157 expanded
[t=0.0234411s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0234519s, 26528 KB] g=26, 177 evaluated, 176 expanded
[t=0.0241487s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0241601s, 26528 KB] g=28, 205 evaluated, 204 expanded
[t=0.0248647s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0248771s, 26528 KB] g=30, 233 evaluated, 232 expanded
[t=0.025397s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0254124s, 26528 KB] g=32, 254 evaluated, 253 expanded
[t=0.025635s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0256454s, 26528 KB] g=32, 262 evaluated, 261 expanded
[t=0.0260143s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0260309s, 26528 KB] g=34, 276 evaluated, 275 expanded
[t=0.0265672s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0265802s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0265897s, 26528 KB] g=36, 297 evaluated, 296 expanded
[t=0.026625s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0266343s, 26528 KB] g=37, 298 evaluated, 297 expanded
[t=0.0270733s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0270837s, 26528 KB] g=38, 316 evaluated, 315 expanded
[t=0.0274123s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.027423s, 26528 KB] g=40, 329 evaluated, 328 expanded
[t=0.0274596s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0274695s, 26528 KB] g=41, 330 evaluated, 329 expanded
[t=0.0278492s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0278604s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0278697s, 26528 KB] g=42, 345 evaluated, 344 expanded
[t=0.0279105s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0279201s, 26528 KB] g=43, 346 evaluated, 345 expanded
[t=0.0282308s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0282585s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0282829s, 26528 KB] g=44, 358 evaluated, 357 expanded
[t=0.0283247s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0283341s, 26528 KB] g=45, 359 evaluated, 358 expanded
[t=0.0286107s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0286207s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0286302s, 26528 KB] g=46, 370 evaluated, 369 expanded
[t=0.0286656s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0286748s, 26528 KB] g=47, 371 evaluated, 370 expanded
[t=0.0290148s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0290249s, 26528 KB] g=50, 385 evaluated, 384 expanded
[t=0.0292726s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0292821s, 26528 KB] g=52, 395 evaluated, 394 expanded
[t=0.0296028s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0296133s, 26528 KB] g=54, 408 evaluated, 407 expanded
[t=0.029723s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0297359s, 26528 KB] g=52, 412 evaluated, 411 expanded
[t=0.0299706s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0299809s, 26528 KB] g=56, 421 evaluated, 420 expanded
[t=0.0312063s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.031218s, 26528 KB] g=62, 471 evaluated, 470 expanded
[t=0.0313986s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0314095s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0314188s, 26528 KB] g=64, 478 evaluated, 477 expanded
[t=0.0315769s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0315874s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0315958s, 26528 KB] g=66, 484 evaluated, 483 expanded
[t=0.0324906s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0325019s, 26528 KB] g=74, 520 evaluated, 519 expanded
[t=0.0327683s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0327786s, 26528 KB] g=76, 530 evaluated, 529 expanded
[t=0.0329586s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0329848s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.032994s, 26528 KB] g=78, 537 evaluated, 536 expanded
[t=0.0331253s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0331388s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0331491s, 26528 KB] g=80, 542 evaluated, 541 expanded
[t=0.0338194s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0338308s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0338393s, 26528 KB] g=82, 570 evaluated, 569 expanded
[t=0.0347858s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0348115s, 26528 KB] g=90, 607 evaluated, 606 expanded
[t=0.0349708s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0349821s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0349906s, 26528 KB] g=92, 613 evaluated, 612 expanded
[t=0.0355656s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.035581s, 26528 KB] g=100, 636 evaluated, 635 expanded
[t=0.035794s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0358049s, 26528 KB] g=102, 644 evaluated, 643 expanded
[t=0.0359122s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0359237s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0359337s, 26528 KB] g=104, 648 evaluated, 647 expanded
[t=0.0360161s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0360261s, 26528 KB] g=104, 651 evaluated, 650 expanded
[t=0.0361326s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0361455s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0361574s, 26528 KB] g=106, 655 evaluated, 654 expanded
[t=0.0363824s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0363979s, 26528 KB] g=110, 664 evaluated, 663 expanded
[t=0.0365026s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0365165s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0365256s, 26528 KB] g=112, 667 evaluated, 666 expanded
[t=0.0415686s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0415992s, 26528 KB] g=146, 905 evaluated, 904 expanded
[t=0.0417664s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.041776s, 26528 KB] g=150, 914 evaluated, 913 expanded
[t=0.0418327s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0418422s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0418504s, 26528 KB] g=152, 917 evaluated, 916 expanded
[t=0.0420831s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0420947s, 26528 KB] g=164, 933 evaluated, 932 expanded
[t=0.0421499s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0421591s, 26528 KB] g=168, 937 evaluated, 936 expanded
[t=0.0421758s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0421857s, 26528 KB] g=169, 938 evaluated, 937 expanded
[t=0.042201s, 26528 KB] Solution found!
[t=0.0422143s, 26528 KB] Actual search time: 0.0236553s
unstack b10 b8 (1)
put-down b10 (1)
unstack b8 b16 (1)
stack b8 b19 (1)
unstack b16 b1 (1)
put-down b16 (1)
pick-up b1 (1)
stack b1 b16 (1)
pick-up b3 (1)
stack b3 b1 (1)
unstack b5 b6 (1)
put-down b5 (1)
unstack b6 b18 (1)
put-down b6 (1)
unstack b18 b22 (1)
put-down b18 (1)
unstack b22 b11 (1)
put-down b22 (1)
unstack b11 b9 (1)
put-down b11 (1)
unstack b9 b15 (1)
put-down b9 (1)
unstack b15 b4 (1)
put-down b15 (1)
unstack b4 b2 (1)
put-down b4 (1)
unstack b2 b12 (1)
put-down b2 (1)
pick-up b10 (1)
stack b10 b18 (1)
unstack b12 b14 (1)
put-down b12 (1)
pick-up b11 (1)
stack b11 b2 (1)
unstack b14 b20 (1)
stack b14 b17 (1)
pick-up b15 (1)
stack b15 b5 (1)
pick-up b20 (1)
stack b20 b8 (1)
pick-up b22 (1)
stack b22 b9 (1)
pick-up b4 (1)
stack b4 b20 (1)
pick-up b6 (1)
stack b6 b12 (1)
unstack b10 b18 (1)
put-down b10 (1)
unstack b15 b5 (1)
put-down b15 (1)
pick-up b18 (1)
stack b18 b15 (1)
pick-up b10 (1)
stack b10 b18 (1)
pick-up b5 (1)
stack b5 b14 (1)
unstack b3 b1 (1)
put-down b3 (1)
unstack b1 b16 (1)
put-down b1 (1)
pick-up b16 (1)
stack b16 b6 (1)
pick-up b1 (1)
stack b1 b16 (1)
pick-up b3 (1)
stack b3 b1 (1)
unstack b5 b14 (1)
put-down b5 (1)
unstack b14 b17 (1)
put-down b14 (1)
unstack b17 b13 (1)
put-down b17 (1)
unstack b13 b7 (1)
stack b13 b22 (1)
pick-up b7 (1)
stack b7 b3 (1)
pick-up b17 (1)
stack b17 b13 (1)
pick-up b14 (1)
stack b14 b17 (1)
pick-up b5 (1)
stack b5 b14 (1)
unstack b10 b18 (1)
put-down b10 (1)
unstack b18 b15 (1)
put-down b18 (1)
pick-up b15 (1)
stack b15 b5 (1)
pick-up b18 (1)
stack b18 b15 (1)
pick-up b10 (1)
stack b10 b18 (1)
unstack b4 b20 (1)
put-down b4 (1)
unstack b20 b8 (1)
put-down b20 (1)
unstack b8 b19 (1)
put-down b8 (1)
unstack b19 b21 (1)
stack b19 b11 (1)
pick-up b21 (1)
stack b21 b4 (1)
pick-up b8 (1)
stack b8 b19 (1)
pick-up b20 (1)
stack b20 b8 (1)
unstack b21 b4 (1)
put-down b21 (1)
pick-up b4 (1)
stack b4 b20 (1)
pick-up b21 (1)
stack b21 b4 (1)
unstack b10 b18 (1)
put-down b10 (1)
unstack b18 b15 (1)
put-down b18 (1)
pick-up b10 (1)
stack b10 b18 (1)
unstack b15 b5 (1)
put-down b15 (1)
unstack b5 b14 (1)
put-down b5 (1)
pick-up b15 (1)
stack b15 b5 (1)
unstack b10 b18 (1)
put-down b10 (1)
pick-up b18 (1)
stack b18 b15 (1)
pick-up b10 (1)
stack b10 b18 (1)
unstack b14 b17 (1)
put-down b14 (1)
unstack b17 b13 (1)
put-down b17 (1)
pick-up b14 (1)
stack b14 b17 (1)
unstack b13 b22 (1)
put-down b13 (1)
unstack b22 b9 (1)
put-down b22 (1)
pick-up b9 (1)
stack b9 b21 (1)
pick-up b22 (1)
stack b22 b9 (1)
pick-up b13 (1)
stack b13 b22 (1)
unstack b14 b17 (1)
put-down b14 (1)
pick-up b17 (1)
stack b17 b13 (1)
pick-up b14 (1)
stack b14 b17 (1)
unstack b10 b18 (1)
put-down b10 (1)
unstack b18 b15 (1)
put-down b18 (1)
pick-up b10 (1)
stack b10 b18 (1)
unstack b15 b5 (1)
put-down b15 (1)
pick-up b5 (1)
stack b5 b14 (1)
pick-up b15 (1)
stack b15 b5 (1)
unstack b10 b18 (1)
put-down b10 (1)
pick-up b18 (1)
stack b18 b15 (1)
pick-up b10 (1)
stack b10 b18 (1)
[t=0.0422247s, 26528 KB] Plan length: 170 step(s).
[t=0.0422247s, 26528 KB] Plan cost: 170
[t=0.0422247s, 26528 KB] Expanded 938 state(s).
[t=0.0422247s, 26528 KB] Reopened 0 state(s).
[t=0.0422247s, 26528 KB] Evaluated 939 state(s).
[t=0.0422247s, 26528 KB] Evaluations: 1878
[t=0.0422247s, 26528 KB] Generated 7968 state(s).
[t=0.0422247s, 26528 KB] Dead ends: 0 state(s).
[t=0.0422247s, 26528 KB] Number of registered states: 939
[t=0.0422247s, 26528 KB] Int hash set load factor: 939/1024 = 0.916992
[t=0.0422247s, 26528 KB] Int hash set resizes: 10
[t=0.0422247s, 26528 KB] Search time: 0.0237007s
[t=0.0422247s, 26528 KB] Total time: 0.0422247s
Solution found.
Peak memory: 26528 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.18s
