INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_28/bws_problem_28_48.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.018s wall-clock]
2550 relevant atoms
1708 auxiliary atoms
4258 final queue length
7453 total queue pushes
Completing instantiation... [0.030s CPU, 0.031s wall-clock]
Instantiating: [0.050s CPU, 0.051s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.003s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.010s CPU, 0.002s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
29 uncovered facts
Choosing groups: [0.000s CPU, 0.003s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.011s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.002s wall-clock]
Translating task: [0.060s CPU, 0.053s wall-clock]
2324 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
56 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.025s wall-clock]
Reordering and filtering variables...
57 of 57 variables necessary.
29 of 57 mutex groups necessary.
1568 of 1568 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.011s wall-clock]
Translator variables: 57
Translator derived variables: 0
Translator facts: 870
Translator goal facts: 25
Translator mutex groups: 29
Translator total mutex groups size: 841
Translator operators: 1568
Translator axioms: 0
Translator task size: 13469
Translator peak memory: 40312 KB
Writing output... [0.010s CPU, 0.008s wall-clock]
Done! [0.160s CPU, 0.164s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=1.519e-05s, 24488 KB] reading input...
[t=0.0044548s, 26076 KB] done reading input!
[t=0.00567586s, 26472 KB] Initializing landmark count heuristic...
[t=0.00571409s, 26472 KB] Generating landmark graph...
[t=0.00580063s, 26604 KB] Building a landmark graph with reasonable orders.
[t=0.0058976s, 26604 KB] Initializing Exploration...
[t=0.00636356s, 27016 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0299997s, 28080 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0301679s, 28080 KB] Landmarks generation time: 0.0243637s
[t=0.030193s, 28080 KB] Discovered 128 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0302132s, 28080 KB] 1131 edges
[t=0.0302239s, 28080 KB] approx. reasonable orders
[t=0.0319412s, 28080 KB] approx. obedient reasonable orders
[t=0.0320402s, 28080 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0320523s, 28080 KB] Landmarks generation time: 0.0263365s
[t=0.0320635s, 28080 KB] Discovered 128 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0320718s, 28080 KB] 1151 edges
[t=0.0320806s, 28080 KB] Landmark graph generation time: 0.0263736s
[t=0.0320893s, 28080 KB] Landmark graph contains 128 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0320972s, 28080 KB] Landmark graph contains 1151 orderings.
[t=0.032886s, 28104 KB] Simplifying 6216 unary operators... done! [4704 unary operators]
[t=0.0345206s, 28104 KB] time to simplify: 0.00165703s
[t=0.0346348s, 28104 KB] Initializing additive heuristic...
[t=0.034655s, 28104 KB] Initializing FF heuristic...
[t=0.0347113s, 28104 KB] Building successor generator...done!
[t=0.0350067s, 28104 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0350172s, 28104 KB] time for successor generation creation: 0.000253427s
[t=0.0350314s, 28104 KB] Variables: 57
[t=0.0350407s, 28104 KB] FactPairs: 870
[t=0.0350493s, 28104 KB] Bytes per state: 24
[t=0.0351477s, 28104 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0351829s, 28104 KB] 57 initial landmarks, 25 goal landmarks
[t=0.0352839s, 28104 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 71
[t=0.0352946s, 28104 KB] New best heuristic value for ff(transform = adapt_costs(one)): 51
[t=0.0353032s, 28104 KB] g=0, 1 evaluated, 0 expanded
[t=0.035317s, 28104 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 71
[t=0.0353259s, 28104 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 51
[t=0.035496s, 28104 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 70
[t=0.0355064s, 28104 KB] g=2, 5 evaluated, 4 expanded
[t=0.0356274s, 28104 KB] New best heuristic value for ff(transform = adapt_costs(one)): 50
[t=0.0356372s, 28104 KB] g=2, 8 evaluated, 7 expanded
[t=0.0357878s, 28104 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 69
[t=0.0357967s, 28104 KB] g=4, 12 evaluated, 11 expanded
[t=0.0360201s, 28104 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 68
[t=0.036029s, 28104 KB] g=6, 18 evaluated, 17 expanded
[t=0.0361835s, 28104 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 67
[t=0.0361924s, 28104 KB] New best heuristic value for ff(transform = adapt_costs(one)): 49
[t=0.0362005s, 28104 KB] g=8, 22 evaluated, 21 expanded
[t=0.0363888s, 28104 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 64
[t=0.036398s, 28104 KB] New best heuristic value for ff(transform = adapt_costs(one)): 48
[t=0.0364064s, 28104 KB] g=10, 27 evaluated, 26 expanded
[t=0.0365611s, 28104 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 63
[t=0.0365701s, 28104 KB] New best heuristic value for ff(transform = adapt_costs(one)): 47
[t=0.0365781s, 28104 KB] g=12, 31 evaluated, 30 expanded
[t=0.0367679s, 28104 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 62
[t=0.0367769s, 28104 KB] g=14, 36 evaluated, 35 expanded
[t=0.0368225s, 28104 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 61
[t=0.0368389s, 28104 KB] New best heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0368505s, 28104 KB] g=14, 37 evaluated, 36 expanded
[t=0.0370022s, 28104 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 60
[t=0.0370111s, 28104 KB] g=16, 41 evaluated, 40 expanded
[t=0.0371658s, 28104 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.0371747s, 28104 KB] g=18, 45 evaluated, 44 expanded
[t=0.0373665s, 28104 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0373756s, 28104 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0373836s, 28104 KB] g=20, 50 evaluated, 49 expanded
[t=0.0376235s, 28104 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0376328s, 28104 KB] g=22, 56 evaluated, 55 expanded
[t=0.0377186s, 28104 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0377275s, 28104 KB] g=22, 58 evaluated, 57 expanded
[t=0.0380289s, 28104 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.038038s, 28104 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0380462s, 28104 KB] g=24, 66 evaluated, 65 expanded
[t=0.0383162s, 28104 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0383251s, 28104 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.038334s, 28104 KB] g=26, 73 evaluated, 72 expanded
[t=0.0385809s, 28104 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0385911s, 28104 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0385998s, 28104 KB] g=28, 79 evaluated, 78 expanded
[t=0.0388302s, 28104 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0388429s, 28104 KB] g=30, 84 evaluated, 83 expanded
[t=0.0389346s, 28104 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0389445s, 28104 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0389531s, 28104 KB] g=30, 86 evaluated, 85 expanded
[t=0.0391151s, 28104 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0391245s, 28104 KB] g=32, 90 evaluated, 89 expanded
[t=0.0393292s, 28104 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0393443s, 28104 KB] g=34, 95 evaluated, 94 expanded
[t=0.0395758s, 28104 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.039585s, 28104 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0395929s, 28104 KB] g=36, 101 evaluated, 100 expanded
[t=0.0396789s, 28104 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0396879s, 28104 KB] g=37, 103 evaluated, 102 expanded
[t=0.0397365s, 28104 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0397453s, 28104 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0397531s, 28104 KB] g=38, 104 evaluated, 103 expanded
[t=0.0398835s, 28104 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0398972s, 28104 KB] g=39, 107 evaluated, 106 expanded
[t=0.0402823s, 28104 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0402924s, 28104 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0403038s, 28104 KB] g=42, 117 evaluated, 116 expanded
[t=0.0405396s, 28104 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0405487s, 28104 KB] g=43, 123 evaluated, 122 expanded
[t=0.0409099s, 28104 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.040919s, 28104 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0409272s, 28104 KB] g=46, 132 evaluated, 131 expanded
[t=0.0412478s, 28104 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0412584s, 28104 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0412668s, 28104 KB] g=48, 140 evaluated, 139 expanded
[t=0.0416138s, 28104 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0416239s, 28104 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0416323s, 28104 KB] g=50, 149 evaluated, 148 expanded
[t=0.0419286s, 28104 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0419382s, 28104 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0419458s, 28104 KB] g=52, 157 evaluated, 156 expanded
[t=0.042453s, 28104 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0424678s, 28104 KB] g=55, 170 evaluated, 169 expanded
[t=0.0425218s, 28104 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0425309s, 28104 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0425389s, 28104 KB] g=56, 171 evaluated, 170 expanded
[t=0.0428598s, 28104 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0428725s, 28104 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0428826s, 28104 KB] g=58, 179 evaluated, 178 expanded
[t=0.0431205s, 28104 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0431356s, 28104 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0431456s, 28104 KB] g=60, 185 evaluated, 184 expanded
[t=0.0447835s, 28104 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0448437s, 28104 KB] g=66, 220 evaluated, 219 expanded
[t=0.0451453s, 28104 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0451617s, 28104 KB] g=68, 227 evaluated, 226 expanded
[t=0.0454396s, 28104 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0454623s, 28104 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0454777s, 28104 KB] g=70, 233 evaluated, 232 expanded
[t=0.0467834s, 28104 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0468063s, 28104 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0468151s, 28104 KB] g=72, 266 evaluated, 265 expanded
[t=0.047737s, 28104 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0477759s, 28104 KB] g=77, 290 evaluated, 289 expanded
[t=0.0478284s, 28104 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0478392s, 28104 KB] g=78, 291 evaluated, 290 expanded
[t=0.0481078s, 28104 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0481211s, 28104 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0481298s, 28104 KB] g=80, 298 evaluated, 297 expanded
[t=0.0483384s, 28104 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0483496s, 28104 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0483578s, 28104 KB] g=82, 303 evaluated, 302 expanded
[t=0.0485505s, 28104 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0485622s, 28104 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0485704s, 28104 KB] g=84, 308 evaluated, 307 expanded
[t=0.0499081s, 28104 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0499238s, 28104 KB] g=92, 344 evaluated, 343 expanded
[t=0.0501509s, 28104 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0501615s, 28104 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0501704s, 28104 KB] g=94, 350 evaluated, 349 expanded
[t=0.0509498s, 28104 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0509638s, 28104 KB] g=102, 371 evaluated, 370 expanded
[t=0.0511198s, 28104 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0511293s, 28104 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0511382s, 28104 KB] g=104, 375 evaluated, 374 expanded
[t=0.0950859s, 28104 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0951692s, 28104 KB] g=176, 1627 evaluated, 1626 expanded
[t=0.0953375s, 28104 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0953486s, 28104 KB] g=178, 1631 evaluated, 1630 expanded
[t=0.0970573s, 28104 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0970685s, 28104 KB] g=190, 1685 evaluated, 1684 expanded
[t=0.0973491s, 28104 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0973605s, 28104 KB] g=194, 1694 evaluated, 1693 expanded
[t=0.0974559s, 28104 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0974651s, 28104 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0974735s, 28104 KB] g=196, 1697 evaluated, 1696 expanded
[t=0.0996359s, 28104 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0996649s, 28104 KB] g=218, 1783 evaluated, 1782 expanded
[t=0.09986s, 28104 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0998699s, 28104 KB] g=222, 1792 evaluated, 1791 expanded
[t=0.0999394s, 28104 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0999485s, 28104 KB] g=224, 1795 evaluated, 1794 expanded
[t=0.100155s, 28104 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.100164s, 28104 KB] g=232, 1806 evaluated, 1805 expanded
[t=0.10019s, 28104 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.100199s, 28104 KB] g=232, 1807 evaluated, 1806 expanded
[t=0.10022s, 28104 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.100229s, 28104 KB] g=233, 1808 evaluated, 1807 expanded
[t=0.100253s, 28104 KB] Solution found!
[t=0.100269s, 28104 KB] Actual search time: 0.0650759s
pick-up b5 (1)
stack b5 b24 (1)
unstack b2 b12 (1)
put-down b2 (1)
unstack b12 b22 (1)
put-down b12 (1)
unstack b22 b9 (1)
put-down b22 (1)
unstack b9 b16 (1)
stack b9 b12 (1)
unstack b16 b11 (1)
put-down b16 (1)
pick-up b2 (1)
stack b2 b16 (1)
unstack b11 b7 (1)
put-down b11 (1)
unstack b7 b14 (1)
put-down b7 (1)
unstack b14 b18 (1)
stack b14 b22 (1)
unstack b18 b13 (1)
put-down b18 (1)
unstack b13 b25 (1)
stack b13 b14 (1)
pick-up b11 (1)
stack b11 b13 (1)
unstack b25 b27 (1)
stack b25 b5 (1)
pick-up b7 (1)
stack b7 b18 (1)
unstack b27 b1 (1)
put-down b27 (1)
unstack b1 b17 (1)
put-down b1 (1)
unstack b17 b20 (1)
stack b17 b27 (1)
unstack b20 b23 (1)
stack b20 b7 (1)
unstack b23 b19 (1)
put-down b23 (1)
unstack b19 b4 (1)
stack b19 b9 (1)
unstack b4 b8 (1)
put-down b4 (1)
unstack b8 b21 (1)
stack b8 b19 (1)
unstack b21 b15 (1)
put-down b21 (1)
pick-up b23 (1)
stack b23 b21 (1)
pick-up b1 (1)
stack b1 b8 (1)
unstack b15 b28 (1)
put-down b15 (1)
unstack b28 b10 (1)
stack b28 b2 (1)
pick-up b10 (1)
stack b10 b17 (1)
pick-up b15 (1)
stack b15 b28 (1)
unstack b25 b5 (1)
put-down b25 (1)
unstack b5 b24 (1)
put-down b5 (1)
unstack b24 b3 (1)
stack b24 b1 (1)
pick-up b4 (1)
stack b4 b3 (1)
pick-up b5 (1)
stack b5 b24 (1)
pick-up b25 (1)
stack b25 b5 (1)
unstack b4 b3 (1)
put-down b4 (1)
unstack b3 b6 (1)
put-down b3 (1)
unstack b6 b26 (1)
stack b6 b15 (1)
pick-up b26 (1)
stack b26 b25 (1)
pick-up b3 (1)
stack b3 b6 (1)
pick-up b4 (1)
stack b4 b3 (1)
unstack b10 b17 (1)
put-down b10 (1)
unstack b17 b27 (1)
put-down b17 (1)
pick-up b27 (1)
stack b27 b26 (1)
pick-up b17 (1)
stack b17 b27 (1)
pick-up b10 (1)
stack b10 b17 (1)
unstack b20 b7 (1)
put-down b20 (1)
unstack b7 b18 (1)
put-down b7 (1)
pick-up b18 (1)
stack b18 b10 (1)
pick-up b20 (1)
stack b20 b7 (1)
unstack b18 b10 (1)
put-down b18 (1)
unstack b10 b17 (1)
put-down b10 (1)
pick-up b18 (1)
stack b18 b10 (1)
unstack b20 b7 (1)
put-down b20 (1)
pick-up b7 (1)
stack b7 b18 (1)
pick-up b20 (1)
stack b20 b7 (1)
unstack b17 b27 (1)
put-down b17 (1)
unstack b27 b26 (1)
put-down b27 (1)
unstack b26 b25 (1)
put-down b26 (1)
pick-up b27 (1)
stack b27 b26 (1)
pick-up b17 (1)
stack b17 b27 (1)
unstack b20 b7 (1)
put-down b20 (1)
unstack b7 b18 (1)
put-down b7 (1)
pick-up b20 (1)
stack b20 b7 (1)
unstack b18 b10 (1)
put-down b18 (1)
pick-up b10 (1)
stack b10 b17 (1)
pick-up b18 (1)
stack b18 b10 (1)
unstack b20 b7 (1)
put-down b20 (1)
pick-up b7 (1)
stack b7 b18 (1)
pick-up b20 (1)
stack b20 b7 (1)
unstack b25 b5 (1)
put-down b25 (1)
unstack b5 b24 (1)
put-down b5 (1)
pick-up b25 (1)
stack b25 b5 (1)
unstack b24 b1 (1)
put-down b24 (1)
unstack b1 b8 (1)
put-down b1 (1)
pick-up b24 (1)
stack b24 b1 (1)
unstack b25 b5 (1)
put-down b25 (1)
pick-up b5 (1)
stack b5 b24 (1)
pick-up b25 (1)
stack b25 b5 (1)
unstack b8 b19 (1)
put-down b8 (1)
unstack b19 b9 (1)
put-down b19 (1)
pick-up b8 (1)
stack b8 b19 (1)
unstack b9 b12 (1)
put-down b9 (1)
pick-up b12 (1)
stack b12 b11 (1)
pick-up b9 (1)
stack b9 b12 (1)
unstack b8 b19 (1)
put-down b8 (1)
pick-up b19 (1)
stack b19 b9 (1)
pick-up b8 (1)
stack b8 b19 (1)
unstack b25 b5 (1)
put-down b25 (1)
unstack b5 b24 (1)
put-down b5 (1)
pick-up b25 (1)
stack b25 b5 (1)
unstack b24 b1 (1)
put-down b24 (1)
pick-up b1 (1)
stack b1 b8 (1)
pick-up b24 (1)
stack b24 b1 (1)
unstack b25 b5 (1)
put-down b25 (1)
pick-up b5 (1)
stack b5 b24 (1)
pick-up b25 (1)
stack b25 b5 (1)
unstack b20 b7 (1)
put-down b20 (1)
unstack b7 b18 (1)
put-down b7 (1)
unstack b18 b10 (1)
put-down b18 (1)
pick-up b7 (1)
stack b7 b18 (1)
pick-up b20 (1)
stack b20 b7 (1)
unstack b10 b17 (1)
put-down b10 (1)
unstack b17 b27 (1)
put-down b17 (1)
pick-up b10 (1)
stack b10 b17 (1)
unstack b27 b26 (1)
put-down b27 (1)
pick-up b26 (1)
stack b26 b25 (1)
pick-up b27 (1)
stack b27 b26 (1)
unstack b10 b17 (1)
put-down b10 (1)
pick-up b17 (1)
stack b17 b27 (1)
pick-up b10 (1)
stack b10 b17 (1)
unstack b20 b7 (1)
put-down b20 (1)
unstack b7 b18 (1)
put-down b7 (1)
pick-up b18 (1)
stack b18 b10 (1)
pick-up b7 (1)
stack b7 b18 (1)
pick-up b20 (1)
stack b20 b7 (1)
[t=0.100279s, 28104 KB] Plan length: 234 step(s).
[t=0.100279s, 28104 KB] Plan cost: 234
[t=0.100279s, 28104 KB] Expanded 1808 state(s).
[t=0.100279s, 28104 KB] Reopened 0 state(s).
[t=0.100279s, 28104 KB] Evaluated 1809 state(s).
[t=0.100279s, 28104 KB] Evaluations: 3618
[t=0.100279s, 28104 KB] Generated 14606 state(s).
[t=0.100279s, 28104 KB] Dead ends: 0 state(s).
[t=0.100279s, 28104 KB] Number of registered states: 1809
[t=0.100279s, 28104 KB] Int hash set load factor: 1809/2048 = 0.883301
[t=0.100279s, 28104 KB] Int hash set resizes: 11
[t=0.100279s, 28104 KB] Search time: 0.0651319s
[t=0.100279s, 28104 KB] Total time: 0.100279s
Solution found.
Peak memory: 28104 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.32s
