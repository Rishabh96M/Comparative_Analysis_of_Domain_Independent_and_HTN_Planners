INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_20/bws_problem_20_64.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.008s wall-clock]
1342 relevant atoms
900 auxiliary atoms
2242 final queue length
3888 total queue pushes
Completing instantiation... [0.010s CPU, 0.013s wall-clock]
Instantiating: [0.020s CPU, 0.023s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
21 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.005s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.021s wall-clock]
1180 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
40 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.009s wall-clock]
Reordering and filtering variables...
41 of 41 variables necessary.
21 of 41 mutex groups necessary.
800 of 800 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.005s wall-clock]
Translator variables: 41
Translator derived variables: 0
Translator facts: 462
Translator goal facts: 15
Translator mutex groups: 21
Translator total mutex groups size: 441
Translator operators: 800
Translator axioms: 0
Translator task size: 6899
Translator peak memory: 35948 KB
Writing output... [0.000s CPU, 0.004s wall-clock]
Done! [0.070s CPU, 0.073s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=9.2121e-05s, 24488 KB] reading input...
[t=0.00231119s, 25180 KB] done reading input!
[t=0.00322371s, 25444 KB] Initializing landmark count heuristic...
[t=0.00326172s, 25444 KB] Generating landmark graph...
[t=0.00333447s, 25576 KB] Building a landmark graph with reasonable orders.
[t=0.00340147s, 25576 KB] Initializing Exploration...
[t=0.00365194s, 25744 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0107411s, 26140 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0108223s, 26140 KB] Landmarks generation time: 0.00748634s
[t=0.0108355s, 26140 KB] Discovered 80 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0108525s, 26140 KB] 220 edges
[t=0.0108622s, 26140 KB] approx. reasonable orders
[t=0.0119877s, 26140 KB] approx. obedient reasonable orders
[t=0.0120139s, 26140 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0120238s, 26140 KB] Landmarks generation time: 0.00876013s
[t=0.0120346s, 26140 KB] Discovered 80 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0120434s, 26140 KB] 246 edges
[t=0.0120556s, 26140 KB] Landmark graph generation time: 0.00880136s
[t=0.0120647s, 26140 KB] Landmark graph contains 80 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0120747s, 26140 KB] Landmark graph contains 246 orderings.
[t=0.0124903s, 26280 KB] Simplifying 3160 unary operators... done! [2400 unary operators]
[t=0.0132969s, 26280 KB] time to simplify: 0.000861333s
[t=0.0134038s, 26280 KB] Initializing additive heuristic...
[t=0.0134165s, 26280 KB] Initializing FF heuristic...
[t=0.0134658s, 26280 KB] Building successor generator...done!
[t=0.0136334s, 26280 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0136421s, 26280 KB] time for successor generation creation: 0.000137085s
[t=0.0136541s, 26280 KB] Variables: 41
[t=0.0136627s, 26280 KB] FactPairs: 462
[t=0.0136709s, 26280 KB] Bytes per state: 16
[t=0.0137569s, 26280 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0137892s, 26280 KB] 40 initial landmarks, 15 goal landmarks
[t=0.0138343s, 26280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0138442s, 26280 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.013853s, 26280 KB] g=0, 1 evaluated, 0 expanded
[t=0.0138674s, 26280 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0138766s, 26280 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0139788s, 26280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.013989s, 26280 KB] g=1, 5 evaluated, 4 expanded
[t=0.014129s, 26280 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0141386s, 26280 KB] g=2, 11 evaluated, 10 expanded
[t=0.0142728s, 26280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0142822s, 26280 KB] g=3, 17 evaluated, 16 expanded
[t=0.0144377s, 26280 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0144473s, 26280 KB] g=4, 24 evaluated, 23 expanded
[t=0.014582s, 26280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0145914s, 26280 KB] g=5, 30 evaluated, 29 expanded
[t=0.0147712s, 26280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0147808s, 26280 KB] g=7, 38 evaluated, 37 expanded
[t=0.0150013s, 26280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0150112s, 26280 KB] g=10, 48 evaluated, 47 expanded
[t=0.0151937s, 26280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0152028s, 26280 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0152115s, 26280 KB] g=12, 56 evaluated, 55 expanded
[t=0.0156608s, 26280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0156776s, 26280 KB] g=15, 75 evaluated, 74 expanded
[t=0.0157124s, 26280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0157216s, 26280 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0157348s, 26280 KB] g=16, 76 evaluated, 75 expanded
[t=0.0159355s, 26280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0159455s, 26280 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0159535s, 26280 KB] g=18, 85 evaluated, 84 expanded
[t=0.0161528s, 26280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0161621s, 26280 KB] g=20, 94 evaluated, 93 expanded
[t=0.0162374s, 26280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0162503s, 26280 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.016259s, 26280 KB] g=20, 97 evaluated, 96 expanded
[t=0.0164308s, 26280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0164402s, 26280 KB] g=22, 105 evaluated, 104 expanded
[t=0.0165123s, 26280 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0165211s, 26280 KB] g=22, 108 evaluated, 107 expanded
[t=0.0167751s, 26280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0167849s, 26280 KB] g=24, 120 evaluated, 119 expanded
[t=0.0168172s, 26280 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.016827s, 26280 KB] g=24, 121 evaluated, 120 expanded
[t=0.017154s, 26280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0171637s, 26280 KB] g=26, 136 evaluated, 135 expanded
[t=0.0176108s, 26280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0176312s, 26280 KB] g=28, 156 evaluated, 155 expanded
[t=0.0179657s, 26280 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0179951s, 26280 KB] g=30, 166 evaluated, 165 expanded
[t=0.0181488s, 26280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0181615s, 26280 KB] g=31, 170 evaluated, 169 expanded
[t=0.0185966s, 26280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0186242s, 26280 KB] g=34, 183 evaluated, 182 expanded
[t=0.0187217s, 26280 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0187389s, 26280 KB] g=32, 185 evaluated, 184 expanded
[t=0.0189587s, 26280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0189759s, 26280 KB] g=33, 191 evaluated, 190 expanded
[t=0.0191419s, 26280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0191577s, 26280 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0191673s, 26280 KB] g=34, 197 evaluated, 196 expanded
[t=0.0192406s, 26280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0192496s, 26280 KB] g=35, 200 evaluated, 199 expanded
[t=0.0194631s, 26280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.019475s, 26280 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.019483s, 26280 KB] g=38, 209 evaluated, 208 expanded
[t=0.0196019s, 26280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0196131s, 26280 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0196246s, 26280 KB] g=40, 214 evaluated, 213 expanded
[t=0.0199201s, 26280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0199291s, 26280 KB] g=45, 227 evaluated, 226 expanded
[t=0.0199593s, 26280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0199681s, 26280 KB] g=46, 228 evaluated, 227 expanded
[t=0.020094s, 26280 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0201028s, 26280 KB] g=48, 234 evaluated, 233 expanded
[t=0.020133s, 26280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0201422s, 26280 KB] g=48, 235 evaluated, 234 expanded
[t=0.0203065s, 26280 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0203153s, 26280 KB] g=50, 243 evaluated, 242 expanded
[t=0.0203658s, 26280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0203746s, 26280 KB] g=50, 245 evaluated, 244 expanded
[t=0.0204237s, 26280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0204324s, 26280 KB] g=51, 247 evaluated, 246 expanded
[t=0.0205449s, 26280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0205591s, 26280 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0205712s, 26280 KB] g=52, 249 evaluated, 248 expanded
[t=0.0206889s, 26280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0207052s, 26280 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0207145s, 26280 KB] g=54, 252 evaluated, 251 expanded
[t=0.0207666s, 26280 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0207758s, 26280 KB] g=54, 254 evaluated, 253 expanded
[t=0.0208595s, 26280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0208683s, 26280 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0208771s, 26280 KB] g=56, 257 evaluated, 256 expanded
[t=0.0220848s, 26280 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0220992s, 26280 KB] g=78, 324 evaluated, 323 expanded
[t=0.0221596s, 26280 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0221692s, 26280 KB] g=80, 327 evaluated, 326 expanded
[t=0.022317s, 26280 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0223259s, 26280 KB] g=88, 337 evaluated, 336 expanded
[t=0.0223843s, 26280 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0223941s, 26280 KB] g=92, 341 evaluated, 340 expanded
[t=0.0224105s, 26280 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0224198s, 26280 KB] g=93, 342 evaluated, 341 expanded
[t=0.0224342s, 26280 KB] Solution found!
[t=0.0224456s, 26280 KB] Actual search time: 0.00865373s
unstack b8 b13 (1)
put-down b8 (1)
unstack b9 b3 (1)
put-down b9 (1)
unstack b15 b4 (1)
put-down b15 (1)
unstack b20 b10 (1)
put-down b20 (1)
unstack b10 b17 (1)
put-down b10 (1)
pick-up b17 (1)
stack b17 b3 (1)
unstack b19 b7 (1)
put-down b19 (1)
unstack b7 b16 (1)
stack b7 b4 (1)
unstack b16 b11 (1)
put-down b16 (1)
pick-up b14 (1)
stack b14 b16 (1)
unstack b11 b6 (1)
put-down b11 (1)
unstack b6 b5 (1)
stack b6 b19 (1)
unstack b5 b18 (1)
put-down b5 (1)
pick-up b15 (1)
stack b15 b11 (1)
pick-up b10 (1)
stack b10 b6 (1)
pick-up b18 (1)
stack b18 b14 (1)
pick-up b20 (1)
stack b20 b18 (1)
unstack b15 b11 (1)
put-down b15 (1)
pick-up b11 (1)
stack b11 b5 (1)
pick-up b15 (1)
stack b15 b11 (1)
unstack b17 b3 (1)
put-down b17 (1)
unstack b3 b1 (1)
put-down b3 (1)
unstack b1 b2 (1)
stack b1 b9 (1)
unstack b2 b12 (1)
stack b2 b10 (1)
pick-up b13 (1)
stack b13 b2 (1)
pick-up b12 (1)
stack b12 b13 (1)
pick-up b3 (1)
stack b3 b1 (1)
pick-up b17 (1)
stack b17 b3 (1)
unstack b12 b13 (1)
put-down b12 (1)
unstack b13 b2 (1)
put-down b13 (1)
unstack b2 b10 (1)
put-down b2 (1)
pick-up b13 (1)
stack b13 b2 (1)
pick-up b12 (1)
stack b12 b13 (1)
unstack b10 b6 (1)
put-down b10 (1)
unstack b6 b19 (1)
put-down b6 (1)
pick-up b10 (1)
stack b10 b6 (1)
pick-up b19 (1)
stack b19 b7 (1)
unstack b10 b6 (1)
put-down b10 (1)
pick-up b6 (1)
stack b6 b19 (1)
pick-up b10 (1)
stack b10 b6 (1)
unstack b12 b13 (1)
put-down b12 (1)
unstack b13 b2 (1)
put-down b13 (1)
pick-up b12 (1)
stack b12 b13 (1)
pick-up b2 (1)
stack b2 b10 (1)
unstack b12 b13 (1)
put-down b12 (1)
pick-up b13 (1)
stack b13 b2 (1)
pick-up b12 (1)
stack b12 b13 (1)
[t=0.022456s, 26280 KB] Plan length: 94 step(s).
[t=0.022456s, 26280 KB] Plan cost: 94
[t=0.022456s, 26280 KB] Expanded 342 state(s).
[t=0.022456s, 26280 KB] Reopened 0 state(s).
[t=0.022456s, 26280 KB] Evaluated 343 state(s).
[t=0.022456s, 26280 KB] Evaluations: 686
[t=0.022456s, 26280 KB] Generated 3378 state(s).
[t=0.022456s, 26280 KB] Dead ends: 0 state(s).
[t=0.022456s, 26280 KB] Number of registered states: 343
[t=0.022456s, 26280 KB] Int hash set load factor: 343/512 = 0.669922
[t=0.022456s, 26280 KB] Int hash set resizes: 9
[t=0.022456s, 26280 KB] Search time: 0.00869959s
[t=0.022456s, 26280 KB] Total time: 0.022456s
Solution found.
Peak memory: 26280 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.15s
