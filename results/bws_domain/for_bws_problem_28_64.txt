INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_28/bws_problem_28_64.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.015s wall-clock]
2550 relevant atoms
1708 auxiliary atoms
4258 final queue length
7454 total queue pushes
Completing instantiation... [0.030s CPU, 0.029s wall-clock]
Instantiating: [0.050s CPU, 0.048s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
29 uncovered facts
Choosing groups: [0.010s CPU, 0.002s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.010s CPU, 0.009s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.001s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.002s wall-clock]
Translating task: [0.050s CPU, 0.046s wall-clock]
2324 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
56 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.019s wall-clock]
Reordering and filtering variables...
57 of 57 variables necessary.
29 of 57 mutex groups necessary.
1568 of 1568 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.010s wall-clock]
Translator variables: 57
Translator derived variables: 0
Translator facts: 870
Translator goal facts: 23
Translator mutex groups: 29
Translator total mutex groups size: 841
Translator operators: 1568
Translator axioms: 0
Translator task size: 13467
Translator peak memory: 40316 KB
Writing output... [0.020s CPU, 0.013s wall-clock]
Done! [0.150s CPU, 0.152s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=4.8586e-05s, 24488 KB] reading input...
[t=0.00478529s, 26076 KB] done reading input!
[t=0.00578513s, 26472 KB] Initializing landmark count heuristic...
[t=0.00583652s, 26472 KB] Generating landmark graph...
[t=0.00592896s, 26604 KB] Building a landmark graph with reasonable orders.
[t=0.00604169s, 26604 KB] Initializing Exploration...
[t=0.00652655s, 27016 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0280627s, 27812 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0281646s, 27812 KB] Landmarks generation time: 0.0222338s
[t=0.0281897s, 27812 KB] Discovered 125 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0282076s, 27812 KB] 805 edges
[t=0.0282175s, 27812 KB] approx. reasonable orders
[t=0.0318399s, 27812 KB] approx. obedient reasonable orders
[t=0.0318828s, 27812 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.031894s, 27812 KB] Landmarks generation time: 0.0260556s
[t=0.031904s, 27812 KB] Discovered 125 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.031912s, 27812 KB] 851 edges
[t=0.0319205s, 27812 KB] Landmark graph generation time: 0.0261072s
[t=0.0319517s, 27812 KB] Landmark graph contains 125 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0319677s, 27812 KB] Landmark graph contains 851 orderings.
[t=0.0325551s, 27836 KB] Simplifying 6216 unary operators... done! [4704 unary operators]
[t=0.0339739s, 27836 KB] time to simplify: 0.00151436s
[t=0.0341908s, 28008 KB] Initializing additive heuristic...
[t=0.0342118s, 28008 KB] Initializing FF heuristic...
[t=0.034288s, 28008 KB] Building successor generator...done!
[t=0.0345908s, 28008 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0346004s, 28008 KB] time for successor generation creation: 0.000265415s
[t=0.034614s, 28008 KB] Variables: 57
[t=0.034622s, 28008 KB] FactPairs: 870
[t=0.03463s, 28008 KB] Bytes per state: 24
[t=0.03472s, 28008 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0347546s, 28008 KB] 57 initial landmarks, 23 goal landmarks
[t=0.0348286s, 28008 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 68
[t=0.034838s, 28008 KB] New best heuristic value for ff(transform = adapt_costs(one)): 50
[t=0.0348462s, 28008 KB] g=0, 1 evaluated, 0 expanded
[t=0.0348592s, 28008 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 68
[t=0.0348677s, 28008 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 50
[t=0.0349565s, 28008 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 67
[t=0.0349656s, 28008 KB] g=1, 3 evaluated, 2 expanded
[t=0.0352317s, 28008 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 66
[t=0.0352459s, 28008 KB] g=3, 10 evaluated, 9 expanded
[t=0.0356408s, 28008 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 65
[t=0.0356504s, 28008 KB] g=6, 21 evaluated, 20 expanded
[t=0.036093s, 28008 KB] New best heuristic value for ff(transform = adapt_costs(one)): 49
[t=0.0361041s, 28008 KB] g=8, 33 evaluated, 32 expanded
[t=0.036186s, 28008 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 64
[t=0.0361956s, 28008 KB] g=8, 35 evaluated, 34 expanded
[t=0.0366577s, 28008 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 63
[t=0.0366671s, 28008 KB] g=10, 48 evaluated, 47 expanded
[t=0.0373037s, 28008 KB] New best heuristic value for ff(transform = adapt_costs(one)): 48
[t=0.0373144s, 28008 KB] g=12, 66 evaluated, 65 expanded
[t=0.0373588s, 28008 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 62
[t=0.037368s, 28008 KB] g=12, 67 evaluated, 66 expanded
[t=0.0379142s, 28008 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 61
[t=0.0379247s, 28008 KB] g=14, 83 evaluated, 82 expanded
[t=0.0385717s, 28008 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 60
[t=0.0385843s, 28008 KB] g=16, 102 evaluated, 101 expanded
[t=0.0393139s, 28008 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.0393611s, 28008 KB] g=18, 123 evaluated, 122 expanded
[t=0.0407687s, 28008 KB] New best heuristic value for ff(transform = adapt_costs(one)): 47
[t=0.0407984s, 28008 KB] g=22, 164 evaluated, 163 expanded
[t=0.045259s, 28008 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 58
[t=0.04528s, 28008 KB] g=22, 292 evaluated, 291 expanded
[t=0.0458478s, 28008 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0458584s, 28008 KB] g=24, 308 evaluated, 307 expanded
[t=0.0466372s, 28008 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0466473s, 28008 KB] g=26, 330 evaluated, 329 expanded
[t=0.0471365s, 28008 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0471471s, 28008 KB] g=28, 343 evaluated, 342 expanded
[t=0.0481278s, 28008 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0481412s, 28008 KB] g=30, 370 evaluated, 369 expanded
[t=0.0483009s, 28008 KB] New best heuristic value for ff(transform = adapt_costs(one)): 46
[t=0.0483122s, 28008 KB] g=30, 374 evaluated, 373 expanded
[t=0.0491464s, 28008 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0491564s, 28008 KB] g=32, 398 evaluated, 397 expanded
[t=0.0493114s, 28008 KB] New best heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0493203s, 28008 KB] g=32, 402 evaluated, 401 expanded
[t=0.0501641s, 28008 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0501747s, 28008 KB] g=34, 426 evaluated, 425 expanded
[t=0.0510522s, 28008 KB] New best heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.0510646s, 28008 KB] g=36, 450 evaluated, 449 expanded
[t=0.0517922s, 28008 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0518036s, 28008 KB] g=38, 470 evaluated, 469 expanded
[t=0.0525223s, 28008 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0525344s, 28008 KB] g=36, 490 evaluated, 489 expanded
[t=0.0536034s, 28008 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0536161s, 28008 KB] g=38, 519 evaluated, 518 expanded
[t=0.0547713s, 28008 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0547867s, 28008 KB] g=40, 551 evaluated, 550 expanded
[t=0.0549804s, 28008 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0549921s, 28008 KB] g=42, 556 evaluated, 555 expanded
[t=0.0553483s, 28008 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0553645s, 28008 KB] g=41, 565 evaluated, 564 expanded
[t=0.0558974s, 28008 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0559127s, 28008 KB] g=44, 579 evaluated, 578 expanded
[t=0.0567711s, 28008 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0567826s, 28008 KB] g=46, 602 evaluated, 601 expanded
[t=0.0570978s, 28008 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0571082s, 28008 KB] g=44, 610 evaluated, 609 expanded
[t=0.0577007s, 28008 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0577123s, 28008 KB] g=48, 625 evaluated, 624 expanded
[t=0.058614s, 28008 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0586393s, 28008 KB] g=50, 647 evaluated, 646 expanded
[t=0.0589235s, 28008 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0589355s, 28008 KB] g=44, 654 evaluated, 653 expanded
[t=0.0594887s, 28008 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0594993s, 28008 KB] g=52, 668 evaluated, 667 expanded
[t=0.0603434s, 28008 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0603646s, 28008 KB] g=54, 689 evaluated, 688 expanded
[t=0.060539s, 28008 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.06055s, 28008 KB] g=46, 693 evaluated, 692 expanded
[t=0.0619289s, 28008 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0619408s, 28008 KB] g=48, 729 evaluated, 728 expanded
[t=0.0619945s, 28008 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0620041s, 28008 KB] g=56, 730 evaluated, 729 expanded
[t=0.0628159s, 28008 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0628264s, 28008 KB] g=58, 751 evaluated, 750 expanded
[t=0.0631821s, 28008 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0631921s, 28008 KB] g=59, 760 evaluated, 759 expanded
[t=0.0634878s, 28008 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0634973s, 28008 KB] g=60, 768 evaluated, 767 expanded
[t=0.0638278s, 28008 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0638371s, 28008 KB] g=61, 777 evaluated, 776 expanded
[t=0.0642052s, 28008 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0642191s, 28008 KB] g=62, 786 evaluated, 785 expanded
[t=0.0644767s, 28008 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0644862s, 28008 KB] g=63, 793 evaluated, 792 expanded
[t=0.0648948s, 28008 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.064905s, 28008 KB] g=64, 804 evaluated, 803 expanded
[t=0.0651605s, 28008 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0651699s, 28008 KB] g=65, 811 evaluated, 810 expanded
[t=0.0656976s, 28008 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0657082s, 28008 KB] g=65, 825 evaluated, 824 expanded
[t=0.0660431s, 28008 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0660534s, 28008 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.066066s, 28008 KB] g=66, 834 evaluated, 833 expanded
[t=0.0661928s, 28008 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0662072s, 28008 KB] g=67, 837 evaluated, 836 expanded
[t=0.0667392s, 28008 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.066753s, 28008 KB] g=70, 851 evaluated, 850 expanded
[t=0.0671693s, 28008 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0671826s, 28008 KB] g=72, 861 evaluated, 860 expanded
[t=0.0680374s, 28008 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0680526s, 28008 KB] g=74, 883 evaluated, 882 expanded
[t=0.0690211s, 28008 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0690775s, 28008 KB] g=76, 909 evaluated, 908 expanded
[t=0.0704168s, 28008 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.070431s, 28008 KB] g=78, 943 evaluated, 942 expanded
[t=0.0705567s, 28008 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0705662s, 28008 KB] g=72, 946 evaluated, 945 expanded
[t=0.0714146s, 28008 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0714243s, 28008 KB] g=80, 968 evaluated, 967 expanded
[t=0.0722707s, 28008 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0722826s, 28008 KB] g=82, 990 evaluated, 989 expanded
[t=0.0730102s, 28008 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0730204s, 28008 KB] g=84, 1008 evaluated, 1007 expanded
[t=0.0738151s, 28008 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0738277s, 28008 KB] g=86, 1029 evaluated, 1028 expanded
[t=0.0741276s, 28008 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0741372s, 28008 KB] g=88, 1037 evaluated, 1036 expanded
[t=0.074222s, 28008 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.074231s, 28008 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0742401s, 28008 KB] g=88, 1039 evaluated, 1038 expanded
[t=0.0745146s, 28008 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0745238s, 28008 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0745316s, 28008 KB] g=90, 1046 evaluated, 1045 expanded
[t=0.075749s, 28008 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0757584s, 28008 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0757664s, 28008 KB] g=96, 1080 evaluated, 1079 expanded
[t=0.0786892s, 28008 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0787027s, 28008 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0787116s, 28008 KB] g=104, 1160 evaluated, 1159 expanded
[t=0.0788734s, 28008 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0788849s, 28008 KB] g=104, 1164 evaluated, 1163 expanded
[t=0.0790709s, 28008 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0790823s, 28008 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0790916s, 28008 KB] g=106, 1169 evaluated, 1168 expanded
[t=0.0894268s, 28008 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0894634s, 28008 KB] g=122, 1455 evaluated, 1454 expanded
[t=0.0896927s, 28008 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0897036s, 28008 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0897121s, 28008 KB] g=124, 1461 evaluated, 1460 expanded
[t=0.0898676s, 28008 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0898779s, 28008 KB] g=124, 1465 evaluated, 1464 expanded
[t=0.0900671s, 28008 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0900874s, 28008 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.090096s, 28008 KB] g=126, 1470 evaluated, 1469 expanded
[t=0.0906691s, 28008 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0906802s, 28008 KB] g=130, 1486 evaluated, 1485 expanded
[t=0.0908304s, 28008 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0908401s, 28008 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0908484s, 28008 KB] g=132, 1490 evaluated, 1489 expanded
[t=0.0944261s, 28008 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0944481s, 28008 KB] g=146, 1594 evaluated, 1593 expanded
[t=0.0945958s, 28008 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0946054s, 28008 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0946134s, 28008 KB] g=148, 1598 evaluated, 1597 expanded
[t=0.0949147s, 28008 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0949239s, 28008 KB] g=152, 1607 evaluated, 1606 expanded
[t=0.0950294s, 28008 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0950391s, 28008 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0950471s, 28008 KB] g=154, 1610 evaluated, 1609 expanded
[t=0.0960367s, 28008 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0960467s, 28008 KB] g=172, 1647 evaluated, 1646 expanded
[t=0.0961086s, 28008 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.096118s, 28008 KB] g=172, 1649 evaluated, 1648 expanded
[t=0.0962013s, 28008 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0962108s, 28008 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0962191s, 28008 KB] g=174, 1652 evaluated, 1651 expanded
[t=0.096472s, 28008 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0964824s, 28008 KB] g=182, 1663 evaluated, 1662 expanded
[t=0.0965664s, 28008 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0965762s, 28008 KB] g=186, 1667 evaluated, 1666 expanded
[t=0.096597s, 28008 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0966059s, 28008 KB] g=187, 1668 evaluated, 1667 expanded
[t=0.0966226s, 28008 KB] Solution found!
[t=0.0966417s, 28008 KB] Actual search time: 0.0618846s
unstack b16 b22 (1)
put-down b16 (1)
unstack b24 b18 (1)
put-down b24 (1)
unstack b14 b19 (1)
put-down b14 (1)
unstack b19 b28 (1)
put-down b19 (1)
unstack b22 b20 (1)
put-down b22 (1)
unstack b20 b13 (1)
put-down b20 (1)
unstack b13 b26 (1)
put-down b13 (1)
unstack b7 b25 (1)
put-down b7 (1)
unstack b25 b4 (1)
put-down b25 (1)
unstack b4 b27 (1)
put-down b4 (1)
unstack b27 b3 (1)
put-down b27 (1)
pick-up b16 (1)
stack b16 b25 (1)
unstack b3 b12 (1)
stack b3 b13 (1)
pick-up b19 (1)
stack b19 b22 (1)
pick-up b20 (1)
stack b20 b7 (1)
pick-up b28 (1)
stack b28 b3 (1)
unstack b12 b10 (1)
put-down b12 (1)
unstack b10 b1 (1)
stack b10 b19 (1)
unstack b1 b15 (1)
put-down b1 (1)
pick-up b14 (1)
stack b14 b1 (1)
unstack b15 b2 (1)
stack b15 b20 (1)
unstack b2 b23 (1)
put-down b2 (1)
unstack b23 b11 (1)
put-down b23 (1)
unstack b11 b17 (1)
stack b11 b28 (1)
unstack b17 b5 (1)
stack b17 b10 (1)
pick-up b24 (1)
stack b24 b11 (1)
unstack b5 b6 (1)
stack b5 b12 (1)
pick-up b26 (1)
stack b26 b5 (1)
unstack b6 b9 (1)
stack b6 b18 (1)
unstack b9 b21 (1)
put-down b9 (1)
unstack b21 b8 (1)
put-down b21 (1)
pick-up b8 (1)
stack b8 b14 (1)
pick-up b4 (1)
stack b4 b8 (1)
unstack b17 b10 (1)
put-down b17 (1)
unstack b10 b19 (1)
put-down b10 (1)
unstack b15 b20 (1)
put-down b15 (1)
unstack b19 b22 (1)
put-down b19 (1)
unstack b20 b7 (1)
put-down b20 (1)
pick-up b22 (1)
stack b22 b6 (1)
pick-up b19 (1)
stack b19 b22 (1)
pick-up b10 (1)
stack b10 b19 (1)
pick-up b17 (1)
stack b17 b10 (1)
pick-up b7 (1)
stack b7 b2 (1)
pick-up b20 (1)
stack b20 b7 (1)
pick-up b15 (1)
stack b15 b20 (1)
unstack b16 b25 (1)
put-down b16 (1)
pick-up b25 (1)
stack b25 b4 (1)
pick-up b16 (1)
stack b16 b25 (1)
unstack b26 b5 (1)
put-down b26 (1)
unstack b5 b12 (1)
put-down b5 (1)
pick-up b12 (1)
stack b12 b21 (1)
pick-up b5 (1)
stack b5 b12 (1)
pick-up b26 (1)
stack b26 b5 (1)
unstack b16 b25 (1)
put-down b16 (1)
unstack b25 b4 (1)
put-down b25 (1)
pick-up b16 (1)
stack b16 b25 (1)
unstack b4 b8 (1)
put-down b4 (1)
unstack b8 b14 (1)
put-down b8 (1)
unstack b14 b1 (1)
put-down b14 (1)
pick-up b1 (1)
stack b1 b23 (1)
pick-up b14 (1)
stack b14 b1 (1)
pick-up b8 (1)
stack b8 b14 (1)
pick-up b4 (1)
stack b4 b8 (1)
unstack b16 b25 (1)
put-down b16 (1)
pick-up b25 (1)
stack b25 b4 (1)
pick-up b16 (1)
stack b16 b25 (1)
unstack b24 b11 (1)
put-down b24 (1)
unstack b11 b28 (1)
put-down b11 (1)
pick-up b24 (1)
stack b24 b11 (1)
unstack b28 b3 (1)
put-down b28 (1)
unstack b3 b13 (1)
put-down b3 (1)
pick-up b13 (1)
stack b13 b15 (1)
pick-up b3 (1)
stack b3 b13 (1)
pick-up b28 (1)
stack b28 b3 (1)
unstack b24 b11 (1)
put-down b24 (1)
pick-up b11 (1)
stack b11 b28 (1)
pick-up b24 (1)
stack b24 b11 (1)
unstack b17 b10 (1)
put-down b17 (1)
unstack b10 b19 (1)
put-down b10 (1)
unstack b19 b22 (1)
put-down b19 (1)
pick-up b10 (1)
stack b10 b19 (1)
pick-up b17 (1)
stack b17 b10 (1)
unstack b22 b6 (1)
put-down b22 (1)
unstack b6 b18 (1)
put-down b6 (1)
pick-up b18 (1)
stack b18 b9 (1)
pick-up b6 (1)
stack b6 b18 (1)
pick-up b22 (1)
stack b22 b6 (1)
unstack b17 b10 (1)
put-down b17 (1)
unstack b10 b19 (1)
put-down b10 (1)
pick-up b17 (1)
stack b17 b10 (1)
pick-up b19 (1)
stack b19 b22 (1)
unstack b17 b10 (1)
put-down b17 (1)
pick-up b10 (1)
stack b10 b19 (1)
pick-up b17 (1)
stack b17 b10 (1)
[t=0.0966514s, 28008 KB] Plan length: 188 step(s).
[t=0.0966514s, 28008 KB] Plan cost: 188
[t=0.0966514s, 28008 KB] Expanded 1668 state(s).
[t=0.0966514s, 28008 KB] Reopened 0 state(s).
[t=0.0966514s, 28008 KB] Evaluated 1669 state(s).
[t=0.0966514s, 28008 KB] Evaluations: 3338
[t=0.0966514s, 28008 KB] Generated 20969 state(s).
[t=0.0966514s, 28008 KB] Dead ends: 0 state(s).
[t=0.0966514s, 28008 KB] Number of registered states: 1669
[t=0.0966514s, 28008 KB] Int hash set load factor: 1669/2048 = 0.814941
[t=0.0966514s, 28008 KB] Int hash set resizes: 11
[t=0.0966514s, 28008 KB] Search time: 0.0619318s
[t=0.0966514s, 28008 KB] Total time: 0.0966514s
Solution found.
Peak memory: 28008 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.30s
