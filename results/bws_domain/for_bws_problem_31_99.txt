INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_31/bws_problem_31_99.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.019s wall-clock]
3102 relevant atoms
2077 auxiliary atoms
5179 final queue length
9091 total queue pushes
Completing instantiation... [0.030s CPU, 0.033s wall-clock]
Instantiating: [0.050s CPU, 0.054s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.010s CPU, 0.002s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
32 uncovered facts
Choosing groups: [0.000s CPU, 0.003s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.010s CPU, 0.011s wall-clock]
Building STRIPS to SAS dictionary... [0.010s CPU, 0.008s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.001s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.002s wall-clock]
Translating task: [0.050s CPU, 0.051s wall-clock]
2852 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
62 propositions removed
Detecting unreachable propositions: [0.030s CPU, 0.024s wall-clock]
Reordering and filtering variables...
63 of 63 variables necessary.
32 of 63 mutex groups necessary.
1922 of 1922 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.012s wall-clock]
Translator variables: 63
Translator derived variables: 0
Translator facts: 1056
Translator goal facts: 26
Translator mutex groups: 32
Translator total mutex groups size: 1024
Translator operators: 1922
Translator axioms: 0
Translator task size: 16491
Translator peak memory: 42104 KB
Writing output... [0.010s CPU, 0.009s wall-clock]
Done! [0.170s CPU, 0.176s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=1.8436e-05s, 24488 KB] reading input...
[t=0.00592226s, 26640 KB] done reading input!
[t=0.006809s, 26904 KB] Initializing landmark count heuristic...
[t=0.00684545s, 26904 KB] Generating landmark graph...
[t=0.00695694s, 27036 KB] Building a landmark graph with reasonable orders.
[t=0.00705402s, 27172 KB] Initializing Exploration...
[t=0.00774818s, 27620 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0351608s, 28404 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0353118s, 28404 KB] Landmarks generation time: 0.0283656s
[t=0.0353395s, 28404 KB] Discovered 139 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0353602s, 28404 KB] 600 edges
[t=0.0353729s, 28404 KB] approx. reasonable orders
[t=0.0440029s, 28404 KB] approx. obedient reasonable orders
[t=0.044644s, 28404 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0446675s, 28404 KB] Landmarks generation time: 0.0378183s
[t=0.0446812s, 28404 KB] Discovered 139 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0446928s, 28404 KB] 720 edges
[t=0.0447041s, 28404 KB] Landmark graph generation time: 0.0378681s
[t=0.0447152s, 28404 KB] Landmark graph contains 139 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0447269s, 28404 KB] Landmark graph contains 720 orderings.
[t=0.0457132s, 28432 KB] Simplifying 7626 unary operators... done! [5766 unary operators]
[t=0.0475969s, 28564 KB] time to simplify: 0.00202096s
[t=0.0478398s, 28564 KB] Initializing additive heuristic...
[t=0.0478618s, 28564 KB] Initializing FF heuristic...
[t=0.0479453s, 28564 KB] Building successor generator...done!
[t=0.0483205s, 28564 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0483304s, 28564 KB] time for successor generation creation: 0.000324896s
[t=0.0483511s, 28564 KB] Variables: 63
[t=0.0483599s, 28564 KB] FactPairs: 1056
[t=0.0483702s, 28564 KB] Bytes per state: 24
[t=0.0484767s, 28564 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0485087s, 28564 KB] 62 initial landmarks, 26 goal landmarks
[t=0.0485939s, 28564 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 77
[t=0.0486071s, 28564 KB] New best heuristic value for ff(transform = adapt_costs(one)): 56
[t=0.0486278s, 28564 KB] g=0, 1 evaluated, 0 expanded
[t=0.048646s, 28564 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 77
[t=0.0486555s, 28564 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 56
[t=0.048908s, 28564 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 76
[t=0.0489185s, 28564 KB] g=1, 6 evaluated, 5 expanded
[t=0.0489767s, 28564 KB] New best heuristic value for ff(transform = adapt_costs(one)): 55
[t=0.0489865s, 28564 KB] g=2, 7 evaluated, 6 expanded
[t=0.0494361s, 28564 KB] New best heuristic value for ff(transform = adapt_costs(one)): 54
[t=0.0494467s, 28564 KB] g=4, 17 evaluated, 16 expanded
[t=0.0496383s, 28564 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 73
[t=0.0496483s, 28564 KB] g=4, 21 evaluated, 20 expanded
[t=0.0499976s, 28564 KB] New best heuristic value for ff(transform = adapt_costs(one)): 52
[t=0.0500179s, 28564 KB] g=6, 28 evaluated, 27 expanded
[t=0.0502658s, 28564 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 72
[t=0.0502808s, 28564 KB] g=5, 33 evaluated, 32 expanded
[t=0.0510976s, 28564 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 71
[t=0.0511114s, 28564 KB] g=9, 51 evaluated, 50 expanded
[t=0.0517396s, 28564 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 70
[t=0.0517513s, 28564 KB] g=11, 65 evaluated, 64 expanded
[t=0.0525887s, 28564 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 69
[t=0.0526066s, 28564 KB] g=14, 83 evaluated, 82 expanded
[t=0.0534608s, 28564 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 68
[t=0.0534864s, 28564 KB] g=16, 100 evaluated, 99 expanded
[t=0.0535503s, 28564 KB] New best heuristic value for ff(transform = adapt_costs(one)): 51
[t=0.0535609s, 28564 KB] g=10, 101 evaluated, 100 expanded
[t=0.0544187s, 28564 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 67
[t=0.0544339s, 28564 KB] g=18, 119 evaluated, 118 expanded
[t=0.0555896s, 28564 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 64
[t=0.055606s, 28564 KB] g=20, 143 evaluated, 142 expanded
[t=0.055909s, 28564 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 63
[t=0.0559241s, 28564 KB] g=21, 149 evaluated, 148 expanded
[t=0.0560385s, 28564 KB] New best heuristic value for ff(transform = adapt_costs(one)): 50
[t=0.0560487s, 28564 KB] g=22, 151 evaluated, 150 expanded
[t=0.0569973s, 28564 KB] New best heuristic value for ff(transform = adapt_costs(one)): 49
[t=0.0570076s, 28564 KB] g=24, 172 evaluated, 171 expanded
[t=0.0572879s, 28564 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 62
[t=0.0572986s, 28564 KB] g=25, 178 evaluated, 177 expanded
[t=0.0580136s, 28564 KB] New best heuristic value for ff(transform = adapt_costs(one)): 48
[t=0.0580279s, 28564 KB] g=26, 194 evaluated, 193 expanded
[t=0.0582947s, 28564 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 61
[t=0.0583046s, 28564 KB] g=27, 200 evaluated, 199 expanded
[t=0.059039s, 28564 KB] New best heuristic value for ff(transform = adapt_costs(one)): 47
[t=0.0590506s, 28564 KB] g=28, 216 evaluated, 215 expanded
[t=0.0592347s, 28564 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 60
[t=0.0592447s, 28564 KB] g=29, 220 evaluated, 219 expanded
[t=0.0596416s, 28564 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.0596516s, 28564 KB] g=31, 229 evaluated, 228 expanded
[t=0.0602419s, 28564 KB] New best heuristic value for ff(transform = adapt_costs(one)): 46
[t=0.060263s, 28564 KB] g=30, 242 evaluated, 241 expanded
[t=0.0608172s, 28564 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0608292s, 28564 KB] g=34, 254 evaluated, 253 expanded
[t=0.0615027s, 28564 KB] New best heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0615145s, 28564 KB] g=32, 269 evaluated, 268 expanded
[t=0.0622179s, 28564 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0622328s, 28564 KB] g=36, 285 evaluated, 284 expanded
[t=0.0634684s, 28564 KB] New best heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.0634871s, 28564 KB] g=34, 313 evaluated, 312 expanded
[t=0.0637434s, 28564 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0637617s, 28564 KB] g=38, 318 evaluated, 317 expanded
[t=0.0647469s, 28564 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0647746s, 28564 KB] g=40, 339 evaluated, 338 expanded
[t=0.0651681s, 28564 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0651806s, 28564 KB] g=40, 347 evaluated, 346 expanded
[t=0.066031s, 28564 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0660583s, 28564 KB] g=42, 364 evaluated, 363 expanded
[t=0.0670586s, 28564 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0670697s, 28564 KB] g=42, 387 evaluated, 386 expanded
[t=0.0671309s, 28564 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.067142s, 28564 KB] g=44, 388 evaluated, 387 expanded
[t=0.0683767s, 28564 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0683918s, 28564 KB] g=46, 415 evaluated, 414 expanded
[t=0.0688893s, 28564 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.068903s, 28564 KB] g=44, 425 evaluated, 424 expanded
[t=0.069382s, 28564 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0693923s, 28564 KB] g=48, 436 evaluated, 435 expanded
[t=0.0703433s, 28564 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0703565s, 28564 KB] g=50, 457 evaluated, 456 expanded
[t=0.07073s, 28564 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0707414s, 28564 KB] g=46, 465 evaluated, 464 expanded
[t=0.0711344s, 28564 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0711447s, 28564 KB] g=52, 474 evaluated, 473 expanded
[t=0.071913s, 28564 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0719251s, 28564 KB] g=54, 492 evaluated, 491 expanded
[t=0.0723202s, 28564 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0723313s, 28564 KB] g=48, 500 evaluated, 499 expanded
[t=0.0740668s, 28564 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0740835s, 28564 KB] g=50, 538 evaluated, 537 expanded
[t=0.0759628s, 28564 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0759944s, 28564 KB] g=52, 578 evaluated, 577 expanded
[t=0.077176s, 28564 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0771878s, 28564 KB] g=60, 605 evaluated, 604 expanded
[t=0.0779611s, 28564 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0779738s, 28564 KB] g=54, 623 evaluated, 622 expanded
[t=0.0796643s, 28564 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0796861s, 28564 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0796998s, 28564 KB] g=56, 664 evaluated, 663 expanded
[t=0.0803705s, 28564 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0803911s, 28564 KB] g=58, 681 evaluated, 680 expanded
[t=0.0817839s, 28564 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0818445s, 28564 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0818762s, 28564 KB] g=58, 717 evaluated, 716 expanded
[t=0.0825557s, 28564 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0825781s, 28564 KB] g=60, 733 evaluated, 732 expanded
[t=0.0830717s, 28564 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0830858s, 28564 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0830976s, 28564 KB] g=60, 745 evaluated, 744 expanded
[t=0.0836451s, 28564 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.083657s, 28564 KB] g=62, 760 evaluated, 759 expanded
[t=0.0839269s, 28564 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0839427s, 28564 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0839547s, 28564 KB] g=62, 766 evaluated, 765 expanded
[t=0.0844603s, 28564 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0844764s, 28564 KB] g=64, 780 evaluated, 779 expanded
[t=0.0856639s, 28564 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0856946s, 28564 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0857074s, 28564 KB] g=64, 810 evaluated, 809 expanded
[t=0.0861471s, 28564 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0861578s, 28564 KB] g=66, 823 evaluated, 822 expanded
[t=0.0868378s, 28564 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0868513s, 28564 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0868629s, 28564 KB] g=66, 842 evaluated, 841 expanded
[t=0.0872518s, 28564 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0872619s, 28564 KB] g=68, 854 evaluated, 853 expanded
[t=0.0873819s, 28564 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0873921s, 28564 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0874024s, 28564 KB] g=68, 857 evaluated, 856 expanded
[t=0.0877491s, 28564 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0877592s, 28564 KB] g=70, 868 evaluated, 867 expanded
[t=0.0885983s, 28564 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0886112s, 28564 KB] g=72, 894 evaluated, 893 expanded
[t=0.0889122s, 28564 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0889225s, 28564 KB] g=74, 904 evaluated, 903 expanded
[t=0.0892422s, 28564 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0892528s, 28564 KB] g=76, 914 evaluated, 913 expanded
[t=0.0896831s, 28564 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0896931s, 28564 KB] g=78, 928 evaluated, 927 expanded
[t=0.0900687s, 28564 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0900788s, 28564 KB] g=80, 940 evaluated, 939 expanded
[t=0.0904369s, 28564 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0904472s, 28564 KB] g=82, 951 evaluated, 950 expanded
[t=0.0920846s, 28564 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0920978s, 28564 KB] g=88, 1001 evaluated, 1000 expanded
[t=0.0931373s, 28564 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0931498s, 28564 KB] g=94, 1029 evaluated, 1028 expanded
[t=0.100468s, 28564 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.100529s, 28564 KB] g=116, 1243 evaluated, 1242 expanded
[t=0.104051s, 28564 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.104067s, 28564 KB] g=110, 1344 evaluated, 1343 expanded
[t=0.10579s, 28564 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.105819s, 28564 KB] g=118, 1395 evaluated, 1394 expanded
[t=0.1062s, 28564 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.106213s, 28564 KB] g=122, 1405 evaluated, 1404 expanded
[t=0.106365s, 28564 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.106375s, 28564 KB] g=124, 1409 evaluated, 1408 expanded
[t=0.10799s, 28564 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.108003s, 28564 KB] g=140, 1463 evaluated, 1462 expanded
[t=0.10833s, 28564 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.10834s, 28564 KB] g=148, 1475 evaluated, 1474 expanded
[t=0.10843s, 28564 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.108439s, 28564 KB] g=152, 1479 evaluated, 1478 expanded
[t=0.108462s, 28564 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.108484s, 28564 KB] g=153, 1480 evaluated, 1479 expanded
[t=0.108502s, 28564 KB] Solution found!
[t=0.108517s, 28564 KB] Actual search time: 0.0600042s
unstack b27 b26 (1)
stack b27 b18 (1)
unstack b24 b21 (1)
put-down b24 (1)
unstack b10 b4 (1)
stack b10 b26 (1)
unstack b21 b15 (1)
put-down b21 (1)
unstack b27 b18 (1)
put-down b27 (1)
unstack b4 b29 (1)
put-down b4 (1)
unstack b15 b6 (1)
put-down b15 (1)
unstack b18 b14 (1)
put-down b18 (1)
unstack b22 b3 (1)
put-down b22 (1)
unstack b29 b16 (1)
stack b29 b24 (1)
unstack b16 b23 (1)
stack b16 b22 (1)
unstack b14 b11 (1)
put-down b14 (1)
unstack b11 b17 (1)
put-down b11 (1)
unstack b17 b19 (1)
put-down b17 (1)
unstack b16 b22 (1)
put-down b16 (1)
unstack b19 b12 (1)
put-down b19 (1)
unstack b12 b1 (1)
stack b12 b10 (1)
unstack b23 b2 (1)
put-down b23 (1)
unstack b3 b5 (1)
stack b3 b14 (1)
unstack b31 b7 (1)
put-down b31 (1)
unstack b5 b9 (1)
put-down b5 (1)
unstack b6 b8 (1)
stack b6 b17 (1)
unstack b8 b20 (1)
put-down b8 (1)
unstack b20 b30 (1)
stack b20 b3 (1)
unstack b30 b25 (1)
put-down b30 (1)
unstack b25 b28 (1)
stack b25 b29 (1)
pick-up b2 (1)
stack b2 b6 (1)
pick-up b4 (1)
stack b4 b2 (1)
pick-up b8 (1)
stack b8 b25 (1)
pick-up b18 (1)
stack b18 b8 (1)
pick-up b27 (1)
stack b27 b18 (1)
pick-up b9 (1)
stack b9 b12 (1)
pick-up b30 (1)
stack b30 b9 (1)
pick-up b19 (1)
stack b19 b30 (1)
unstack b1 b13 (1)
stack b1 b28 (1)
pick-up b13 (1)
stack b13 b20 (1)
pick-up b15 (1)
stack b15 b5 (1)
pick-up b16 (1)
stack b16 b22 (1)
pick-up b21 (1)
stack b21 b7 (1)
pick-up b23 (1)
stack b23 b21 (1)
pick-up b31 (1)
stack b31 b1 (1)
unstack b15 b5 (1)
put-down b15 (1)
pick-up b5 (1)
stack b5 b31 (1)
pick-up b15 (1)
stack b15 b5 (1)
unstack b16 b22 (1)
put-down b16 (1)
pick-up b22 (1)
stack b22 b23 (1)
pick-up b16 (1)
stack b16 b22 (1)
unstack b15 b5 (1)
put-down b15 (1)
unstack b5 b31 (1)
put-down b5 (1)
unstack b31 b1 (1)
put-down b31 (1)
pick-up b5 (1)
stack b5 b31 (1)
pick-up b15 (1)
stack b15 b5 (1)
unstack b1 b28 (1)
put-down b1 (1)
pick-up b28 (1)
stack b28 b13 (1)
pick-up b1 (1)
stack b1 b28 (1)
unstack b15 b5 (1)
put-down b15 (1)
unstack b5 b31 (1)
put-down b5 (1)
pick-up b15 (1)
stack b15 b5 (1)
pick-up b31 (1)
stack b31 b1 (1)
unstack b15 b5 (1)
put-down b15 (1)
pick-up b5 (1)
stack b5 b31 (1)
pick-up b15 (1)
stack b15 b5 (1)
unstack b16 b22 (1)
put-down b16 (1)
unstack b22 b23 (1)
put-down b22 (1)
unstack b23 b21 (1)
put-down b23 (1)
pick-up b22 (1)
stack b22 b23 (1)
pick-up b16 (1)
stack b16 b22 (1)
unstack b21 b7 (1)
put-down b21 (1)
pick-up b7 (1)
stack b7 b15 (1)
pick-up b21 (1)
stack b21 b7 (1)
unstack b16 b22 (1)
put-down b16 (1)
unstack b22 b23 (1)
put-down b22 (1)
pick-up b16 (1)
stack b16 b22 (1)
pick-up b23 (1)
stack b23 b21 (1)
unstack b16 b22 (1)
put-down b16 (1)
pick-up b22 (1)
stack b22 b23 (1)
pick-up b16 (1)
stack b16 b22 (1)
[t=0.108527s, 28564 KB] Plan length: 154 step(s).
[t=0.108527s, 28564 KB] Plan cost: 154
[t=0.108527s, 28564 KB] Expanded 1480 state(s).
[t=0.108527s, 28564 KB] Reopened 0 state(s).
[t=0.108527s, 28564 KB] Evaluated 1481 state(s).
[t=0.108527s, 28564 KB] Evaluations: 2962
[t=0.108527s, 28564 KB] Generated 21532 state(s).
[t=0.108527s, 28564 KB] Dead ends: 0 state(s).
[t=0.108527s, 28564 KB] Number of registered states: 1481
[t=0.108527s, 28564 KB] Int hash set load factor: 1481/2048 = 0.723145
[t=0.108527s, 28564 KB] Int hash set resizes: 11
[t=0.108527s, 28564 KB] Search time: 0.0600505s
[t=0.108527s, 28564 KB] Total time: 0.108527s
Solution found.
Peak memory: 28564 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.34s
