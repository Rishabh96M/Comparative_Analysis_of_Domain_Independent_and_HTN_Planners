INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_23/bws_problem_23_46.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.011s wall-clock]
1750 relevant atoms
1173 auxiliary atoms
2923 final queue length
5090 total queue pushes
Completing instantiation... [0.010s CPU, 0.019s wall-clock]
Instantiating: [0.030s CPU, 0.031s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.010s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
24 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.007s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.027s wall-clock]
1564 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
46 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.014s wall-clock]
Reordering and filtering variables...
47 of 47 variables necessary.
24 of 47 mutex groups necessary.
1058 of 1058 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.007s wall-clock]
Translator variables: 47
Translator derived variables: 0
Translator facts: 600
Translator goal facts: 17
Translator mutex groups: 24
Translator total mutex groups size: 576
Translator operators: 1058
Translator axioms: 0
Translator task size: 9106
Translator peak memory: 37488 KB
Writing output... [0.000s CPU, 0.005s wall-clock]
Done! [0.090s CPU, 0.097s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.3374e-05s, 24488 KB] reading input...
[t=0.00302982s, 25428 KB] done reading input!
[t=0.00390018s, 25824 KB] Initializing landmark count heuristic...
[t=0.00395296s, 25824 KB] Generating landmark graph...
[t=0.00403033s, 25824 KB] Building a landmark graph with reasonable orders.
[t=0.00410401s, 25956 KB] Initializing Exploration...
[t=0.00446838s, 26256 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0166757s, 26652 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0169342s, 26652 KB] Landmarks generation time: 0.0129221s
[t=0.0169683s, 26652 KB] Discovered 96 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0169998s, 26652 KB] 308 edges
[t=0.017017s, 26652 KB] approx. reasonable orders
[t=0.0179467s, 26652 KB] approx. obedient reasonable orders
[t=0.0179912s, 26652 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0180014s, 26652 KB] Landmarks generation time: 0.0140464s
[t=0.0180122s, 26652 KB] Discovered 96 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0180209s, 26652 KB] 320 edges
[t=0.0180298s, 26652 KB] Landmark graph generation time: 0.014099s
[t=0.0180388s, 26652 KB] Landmark graph contains 96 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0180473s, 26652 KB] Landmark graph contains 320 orderings.
[t=0.0185994s, 26652 KB] Simplifying 4186 unary operators... done! [3174 unary operators]
[t=0.0197882s, 26652 KB] time to simplify: 0.00126729s
[t=0.0199354s, 26652 KB] Initializing additive heuristic...
[t=0.0199511s, 26652 KB] Initializing FF heuristic...
[t=0.0200198s, 26652 KB] Building successor generator...done!
[t=0.0202997s, 26652 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0203092s, 26652 KB] time for successor generation creation: 0.000244897s
[t=0.0203277s, 26652 KB] Variables: 47
[t=0.0203364s, 26652 KB] FactPairs: 600
[t=0.0203447s, 26652 KB] Bytes per state: 20
[t=0.0205273s, 26652 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0205854s, 26652 KB] 46 initial landmarks, 17 goal landmarks
[t=0.0207199s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0207306s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0207405s, 26652 KB] g=0, 1 evaluated, 0 expanded
[t=0.0207585s, 26652 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0207674s, 26652 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0209267s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0209383s, 26652 KB] g=1, 6 evaluated, 5 expanded
[t=0.0210061s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0210159s, 26652 KB] g=2, 8 evaluated, 7 expanded
[t=0.0213004s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0213109s, 26652 KB] g=3, 18 evaluated, 17 expanded
[t=0.0213744s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0213835s, 26652 KB] g=4, 20 evaluated, 19 expanded
[t=0.021651s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0216615s, 26652 KB] g=5, 30 evaluated, 29 expanded
[t=0.0220691s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0220859s, 26652 KB] g=7, 44 evaluated, 43 expanded
[t=0.022206s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0222171s, 26652 KB] g=8, 48 evaluated, 47 expanded
[t=0.0224933s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0225082s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0225165s, 26652 KB] g=10, 58 evaluated, 57 expanded
[t=0.0227124s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.022725s, 26652 KB] g=12, 65 evaluated, 64 expanded
[t=0.0227902s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0228002s, 26652 KB] g=12, 67 evaluated, 66 expanded
[t=0.0228933s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.022916s, 26652 KB] g=13, 70 evaluated, 69 expanded
[t=0.0230393s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0230489s, 26652 KB] g=15, 74 evaluated, 73 expanded
[t=0.0232112s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0232221s, 26652 KB] g=14, 79 evaluated, 78 expanded
[t=0.023518s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0235335s, 26652 KB] g=16, 88 evaluated, 87 expanded
[t=0.0237221s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0237339s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0237434s, 26652 KB] g=18, 94 evaluated, 93 expanded
[t=0.02392s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0239315s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0239403s, 26652 KB] g=20, 100 evaluated, 99 expanded
[t=0.0240058s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0240145s, 26652 KB] g=21, 102 evaluated, 101 expanded
[t=0.0241935s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0242054s, 26652 KB] g=23, 108 evaluated, 107 expanded
[t=0.0242441s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0242533s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0242621s, 26652 KB] g=24, 109 evaluated, 108 expanded
[t=0.0244325s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0244423s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0244507s, 26652 KB] g=26, 115 evaluated, 114 expanded
[t=0.0246468s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.024656s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0246642s, 26652 KB] g=28, 122 evaluated, 121 expanded
[t=0.024806s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0248149s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0248229s, 26652 KB] g=30, 127 evaluated, 126 expanded
[t=0.0249997s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0250101s, 26652 KB] g=33, 133 evaluated, 132 expanded
[t=0.0254029s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0254141s, 26652 KB] g=36, 148 evaluated, 147 expanded
[t=0.025879s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0258885s, 26652 KB] g=41, 166 evaluated, 165 expanded
[t=0.0259255s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0259345s, 26652 KB] g=42, 167 evaluated, 166 expanded
[t=0.0261293s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0261386s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0261468s, 26652 KB] g=44, 174 evaluated, 173 expanded
[t=0.0263163s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0263255s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0263338s, 26652 KB] g=46, 180 evaluated, 179 expanded
[t=0.026448s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0264574s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0264683s, 26652 KB] g=48, 184 evaluated, 183 expanded
[t=0.0266632s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0266727s, 26652 KB] g=51, 191 evaluated, 190 expanded
[t=0.0267107s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0267196s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0267279s, 26652 KB] g=52, 192 evaluated, 191 expanded
[t=0.0268485s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0268597s, 26652 KB] g=53, 196 evaluated, 195 expanded
[t=0.0268971s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0269064s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.026915s, 26652 KB] g=54, 197 evaluated, 196 expanded
[t=0.0269511s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0269607s, 26652 KB] g=55, 198 evaluated, 197 expanded
[t=0.0269969s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0270062s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0270146s, 26652 KB] g=56, 199 evaluated, 198 expanded
[t=0.027128s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0271373s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0271457s, 26652 KB] g=58, 203 evaluated, 202 expanded
[t=0.0272375s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.027251s, 26652 KB] g=59, 206 evaluated, 205 expanded
[t=0.0272853s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0272942s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0273022s, 26652 KB] g=60, 207 evaluated, 206 expanded
[t=0.0276251s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0276348s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0276427s, 26652 KB] g=64, 219 evaluated, 218 expanded
[t=0.0277475s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0277562s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0277644s, 26652 KB] g=66, 223 evaluated, 222 expanded
[t=0.0279778s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0279867s, 26652 KB] g=70, 232 evaluated, 231 expanded
[t=0.0280637s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0280733s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0280826s, 26652 KB] g=72, 235 evaluated, 234 expanded
[t=0.02841s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0284201s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0284282s, 26652 KB] g=84, 251 evaluated, 250 expanded
[t=0.0284999s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0285087s, 26652 KB] g=88, 255 evaluated, 254 expanded
[t=0.0285267s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0285354s, 26652 KB] g=89, 256 evaluated, 255 expanded
[t=0.0285646s, 26652 KB] Solution found!
[t=0.0285752s, 26652 KB] Actual search time: 0.00796576s
unstack b14 b10 (1)
put-down b14 (1)
unstack b9 b13 (1)
put-down b9 (1)
unstack b8 b5 (1)
put-down b8 (1)
unstack b5 b6 (1)
put-down b5 (1)
unstack b10 b21 (1)
stack b10 b5 (1)
pick-up b21 (1)
stack b21 b2 (1)
pick-up b6 (1)
stack b6 b14 (1)
unstack b23 b3 (1)
put-down b23 (1)
unstack b3 b17 (1)
put-down b3 (1)
unstack b17 b16 (1)
stack b17 b10 (1)
unstack b16 b20 (1)
put-down b16 (1)
unstack b20 b1 (1)
stack b20 b13 (1)
unstack b1 b18 (1)
stack b1 b3 (1)
pick-up b16 (1)
stack b16 b18 (1)
pick-up b8 (1)
stack b8 b1 (1)
unstack b16 b18 (1)
put-down b16 (1)
unstack b18 b4 (1)
put-down b18 (1)
pick-up b16 (1)
stack b16 b18 (1)
unstack b20 b13 (1)
put-down b20 (1)
unstack b13 b7 (1)
put-down b13 (1)
unstack b7 b12 (1)
stack b7 b23 (1)
pick-up b12 (1)
stack b12 b6 (1)
pick-up b13 (1)
stack b13 b7 (1)
pick-up b20 (1)
stack b20 b13 (1)
unstack b21 b2 (1)
put-down b21 (1)
unstack b2 b22 (1)
stack b2 b4 (1)
unstack b22 b11 (1)
stack b22 b17 (1)
unstack b11 b15 (1)
stack b11 b21 (1)
unstack b15 b19 (1)
put-down b15 (1)
pick-up b19 (1)
stack b19 b9 (1)
unstack b16 b18 (1)
put-down b16 (1)
pick-up b18 (1)
stack b18 b12 (1)
pick-up b16 (1)
stack b16 b18 (1)
unstack b11 b21 (1)
put-down b11 (1)
pick-up b21 (1)
stack b21 b2 (1)
pick-up b11 (1)
stack b11 b21 (1)
unstack b20 b13 (1)
put-down b20 (1)
unstack b13 b7 (1)
put-down b13 (1)
pick-up b20 (1)
stack b20 b13 (1)
unstack b7 b23 (1)
put-down b7 (1)
pick-up b23 (1)
stack b23 b15 (1)
pick-up b7 (1)
stack b7 b23 (1)
unstack b20 b13 (1)
put-down b20 (1)
pick-up b13 (1)
stack b13 b7 (1)
pick-up b20 (1)
stack b20 b13 (1)
[t=0.0285847s, 26652 KB] Plan length: 90 step(s).
[t=0.0285847s, 26652 KB] Plan cost: 90
[t=0.0285847s, 26652 KB] Expanded 256 state(s).
[t=0.0285847s, 26652 KB] Reopened 0 state(s).
[t=0.0285847s, 26652 KB] Evaluated 257 state(s).
[t=0.0285847s, 26652 KB] Evaluations: 514
[t=0.0285847s, 26652 KB] Generated 2384 state(s).
[t=0.0285847s, 26652 KB] Dead ends: 0 state(s).
[t=0.0285847s, 26652 KB] Number of registered states: 257
[t=0.0285847s, 26652 KB] Int hash set load factor: 257/512 = 0.501953
[t=0.0285847s, 26652 KB] Int hash set resizes: 9
[t=0.0285847s, 26652 KB] Search time: 0.00805801s
[t=0.0285847s, 26652 KB] Total time: 0.0285847s
Solution found.
Peak memory: 26652 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.18s
