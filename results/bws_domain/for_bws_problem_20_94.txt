INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_20/bws_problem_20_94.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.008s wall-clock]
1342 relevant atoms
900 auxiliary atoms
2242 final queue length
3886 total queue pushes
Completing instantiation... [0.010s CPU, 0.013s wall-clock]
Instantiating: [0.020s CPU, 0.023s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
21 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.005s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.020s wall-clock]
1180 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
40 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.009s wall-clock]
Reordering and filtering variables...
41 of 41 variables necessary.
21 of 41 mutex groups necessary.
800 of 800 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.005s wall-clock]
Translator variables: 41
Translator derived variables: 0
Translator facts: 462
Translator goal facts: 17
Translator mutex groups: 21
Translator total mutex groups size: 441
Translator operators: 800
Translator axioms: 0
Translator task size: 6901
Translator peak memory: 35944 KB
Writing output... [0.000s CPU, 0.004s wall-clock]
Done! [0.070s CPU, 0.072s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.5092e-05s, 24488 KB] reading input...
[t=0.0024608s, 25180 KB] done reading input!
[t=0.00350826s, 25444 KB] Initializing landmark count heuristic...
[t=0.00355533s, 25444 KB] Generating landmark graph...
[t=0.00361673s, 25576 KB] Building a landmark graph with reasonable orders.
[t=0.00367111s, 25576 KB] Initializing Exploration...
[t=0.00392909s, 25744 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0111803s, 26140 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0112236s, 26140 KB] Landmarks generation time: 0.00760762s
[t=0.0112374s, 26140 KB] Discovered 84 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0112532s, 26140 KB] 276 edges
[t=0.0112624s, 26140 KB] approx. reasonable orders
[t=0.0121396s, 26140 KB] approx. obedient reasonable orders
[t=0.012163s, 26140 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0121728s, 26140 KB] Landmarks generation time: 0.00861347s
[t=0.0121819s, 26140 KB] Discovered 84 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0121899s, 26140 KB] 298 edges
[t=0.0121979s, 26140 KB] Landmark graph generation time: 0.00864959s
[t=0.0122063s, 26140 KB] Landmark graph contains 84 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0122144s, 26140 KB] Landmark graph contains 298 orderings.
[t=0.012492s, 26296 KB] Simplifying 3160 unary operators... done! [2400 unary operators]
[t=0.0132154s, 26296 KB] time to simplify: 0.000775259s
[t=0.0133186s, 26296 KB] Initializing additive heuristic...
[t=0.0133325s, 26296 KB] Initializing FF heuristic...
[t=0.0133813s, 26296 KB] Building successor generator...done!
[t=0.013554s, 26296 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0135627s, 26296 KB] time for successor generation creation: 0.000140801s
[t=0.0135742s, 26296 KB] Variables: 41
[t=0.0135825s, 26296 KB] FactPairs: 462
[t=0.0135906s, 26296 KB] Bytes per state: 16
[t=0.0136713s, 26296 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0137043s, 26296 KB] 39 initial landmarks, 17 goal landmarks
[t=0.0137483s, 26296 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0137577s, 26296 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0137669s, 26296 KB] g=0, 1 evaluated, 0 expanded
[t=0.0137808s, 26296 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0137897s, 26296 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0138698s, 26296 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0138792s, 26296 KB] g=1, 4 evaluated, 3 expanded
[t=0.0141288s, 26296 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0141414s, 26296 KB] g=3, 15 evaluated, 14 expanded
[t=0.0142179s, 26296 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0142274s, 26296 KB] g=4, 18 evaluated, 17 expanded
[t=0.0144462s, 26296 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0144556s, 26296 KB] g=6, 28 evaluated, 27 expanded
[t=0.0145661s, 26296 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.014576s, 26296 KB] g=6, 33 evaluated, 32 expanded
[t=0.0148428s, 26296 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0148524s, 26296 KB] g=8, 46 evaluated, 45 expanded
[t=0.0150423s, 26296 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0150511s, 26296 KB] g=9, 55 evaluated, 54 expanded
[t=0.015101s, 26296 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0151095s, 26296 KB] g=10, 57 evaluated, 56 expanded
[t=0.0153673s, 26296 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0153764s, 26296 KB] g=12, 69 evaluated, 68 expanded
[t=0.0154472s, 26296 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0154603s, 26296 KB] g=12, 72 evaluated, 71 expanded
[t=0.0156679s, 26296 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0156817s, 26296 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0156907s, 26296 KB] g=14, 82 evaluated, 81 expanded
[t=0.0158194s, 26296 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0158281s, 26296 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0158359s, 26296 KB] g=16, 88 evaluated, 87 expanded
[t=0.0159699s, 26296 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0159877s, 26296 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0159966s, 26296 KB] g=18, 94 evaluated, 93 expanded
[t=0.0161551s, 26296 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0161647s, 26296 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0161726s, 26296 KB] g=20, 101 evaluated, 100 expanded
[t=0.016372s, 26296 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0163823s, 26296 KB] g=23, 110 evaluated, 109 expanded
[t=0.0164345s, 26296 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0164434s, 26296 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.016452s, 26296 KB] g=24, 112 evaluated, 111 expanded
[t=0.0166074s, 26296 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0166164s, 26296 KB] g=26, 119 evaluated, 118 expanded
[t=0.0166669s, 26296 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0166756s, 26296 KB] g=26, 121 evaluated, 120 expanded
[t=0.016921s, 26296 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0169304s, 26296 KB] g=28, 132 evaluated, 131 expanded
[t=0.0174081s, 26296 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0174175s, 26296 KB] g=32, 154 evaluated, 153 expanded
[t=0.0176089s, 26296 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0176191s, 26296 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0176275s, 26296 KB] g=34, 162 evaluated, 161 expanded
[t=0.0177817s, 26296 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0177917s, 26296 KB] g=34, 169 evaluated, 168 expanded
[t=0.0180613s, 26296 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0180712s, 26296 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0180794s, 26296 KB] g=36, 182 evaluated, 181 expanded
[t=0.018276s, 26296 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0182876s, 26296 KB] g=39, 191 evaluated, 190 expanded
[t=0.0185637s, 26296 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0185734s, 26296 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0185816s, 26296 KB] g=42, 203 evaluated, 202 expanded
[t=0.0186125s, 26296 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0186215s, 26296 KB] g=43, 204 evaluated, 203 expanded
[t=0.0189766s, 26296 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0189874s, 26296 KB] g=44, 221 evaluated, 220 expanded
[t=0.0191277s, 26296 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0191416s, 26296 KB] g=46, 227 evaluated, 226 expanded
[t=0.0193411s, 26296 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0193512s, 26296 KB] g=48, 236 evaluated, 235 expanded
[t=0.0199509s, 26296 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0199612s, 26296 KB] g=54, 265 evaluated, 264 expanded
[t=0.0201724s, 26296 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0201812s, 26296 KB] g=56, 275 evaluated, 274 expanded
[t=0.0204271s, 26296 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.020436s, 26296 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.020444s, 26296 KB] g=58, 287 evaluated, 286 expanded
[t=0.0209083s, 26296 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.020918s, 26296 KB] g=62, 310 evaluated, 309 expanded
[t=0.0209486s, 26296 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0209576s, 26296 KB] g=64, 311 evaluated, 310 expanded
[t=0.0211892s, 26296 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0211981s, 26296 KB] g=64, 322 evaluated, 321 expanded
[t=0.0215772s, 26296 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0215875s, 26296 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.021596s, 26296 KB] g=70, 340 evaluated, 339 expanded
[t=0.022411s, 26296 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0224236s, 26296 KB] g=74, 379 evaluated, 378 expanded
[t=0.0225369s, 26296 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0225462s, 26296 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0225545s, 26296 KB] g=76, 384 evaluated, 383 expanded
[t=0.0228821s, 26296 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.022892s, 26296 KB] g=80, 400 evaluated, 399 expanded
[t=0.0229789s, 26296 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.022988s, 26296 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0229963s, 26296 KB] g=82, 404 evaluated, 403 expanded
[t=0.0239135s, 26296 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0239241s, 26296 KB] g=94, 454 evaluated, 453 expanded
[t=0.0240821s, 26296 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0240916s, 26296 KB] g=98, 463 evaluated, 462 expanded
[t=0.0241484s, 26296 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0241587s, 26296 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0241675s, 26296 KB] g=100, 466 evaluated, 465 expanded
[t=0.0245768s, 26296 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0245896s, 26296 KB] g=114, 494 evaluated, 493 expanded
[t=0.0246345s, 26296 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0246435s, 26296 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0246519s, 26296 KB] g=116, 497 evaluated, 496 expanded
[t=0.0247047s, 26296 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0247163s, 26296 KB] g=120, 501 evaluated, 500 expanded
[t=0.024733s, 26296 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0247419s, 26296 KB] g=121, 502 evaluated, 501 expanded
[t=0.0247569s, 26296 KB] Solution found!
[t=0.0247677s, 26296 KB] Actual search time: 0.0110609s
unstack b12 b1 (1)
put-down b12 (1)
unstack b15 b18 (1)
put-down b15 (1)
unstack b1 b8 (1)
put-down b1 (1)
unstack b13 b7 (1)
stack b13 b18 (1)
unstack b7 b2 (1)
stack b7 b4 (1)
unstack b8 b6 (1)
stack b8 b2 (1)
pick-up b15 (1)
stack b15 b8 (1)
unstack b6 b20 (1)
stack b6 b1 (1)
unstack b20 b9 (1)
put-down b20 (1)
pick-up b9 (1)
stack b9 b12 (1)
unstack b7 b4 (1)
put-down b7 (1)
unstack b4 b3 (1)
stack b4 b20 (1)
pick-up b7 (1)
stack b7 b4 (1)
unstack b3 b16 (1)
put-down b3 (1)
unstack b13 b18 (1)
put-down b13 (1)
unstack b18 b10 (1)
put-down b18 (1)
pick-up b13 (1)
stack b13 b18 (1)
pick-up b10 (1)
stack b10 b13 (1)
unstack b16 b14 (1)
put-down b16 (1)
unstack b14 b11 (1)
stack b14 b3 (1)
unstack b11 b17 (1)
stack b11 b16 (1)
unstack b14 b3 (1)
put-down b14 (1)
pick-up b3 (1)
stack b3 b17 (1)
pick-up b14 (1)
stack b14 b3 (1)
unstack b15 b8 (1)
put-down b15 (1)
unstack b8 b2 (1)
put-down b8 (1)
pick-up b2 (1)
stack b2 b6 (1)
pick-up b8 (1)
stack b8 b2 (1)
pick-up b15 (1)
stack b15 b8 (1)
unstack b9 b12 (1)
put-down b9 (1)
pick-up b12 (1)
stack b12 b11 (1)
pick-up b9 (1)
stack b9 b12 (1)
unstack b14 b3 (1)
put-down b14 (1)
unstack b3 b17 (1)
put-down b3 (1)
pick-up b14 (1)
stack b14 b3 (1)
unstack b17 b19 (1)
put-down b17 (1)
unstack b19 b5 (1)
stack b19 b10 (1)
pick-up b17 (1)
stack b17 b19 (1)
unstack b14 b3 (1)
put-down b14 (1)
pick-up b3 (1)
stack b3 b17 (1)
pick-up b14 (1)
stack b14 b3 (1)
unstack b9 b12 (1)
put-down b9 (1)
unstack b12 b11 (1)
put-down b12 (1)
pick-up b9 (1)
stack b9 b12 (1)
unstack b11 b16 (1)
put-down b11 (1)
pick-up b16 (1)
stack b16 b14 (1)
pick-up b11 (1)
stack b11 b16 (1)
unstack b9 b12 (1)
put-down b9 (1)
pick-up b12 (1)
stack b12 b11 (1)
pick-up b9 (1)
stack b9 b12 (1)
unstack b15 b8 (1)
put-down b15 (1)
unstack b8 b2 (1)
put-down b8 (1)
pick-up b15 (1)
stack b15 b8 (1)
unstack b2 b6 (1)
put-down b2 (1)
unstack b6 b1 (1)
put-down b6 (1)
pick-up b1 (1)
stack b1 b9 (1)
pick-up b6 (1)
stack b6 b1 (1)
pick-up b2 (1)
stack b2 b6 (1)
unstack b15 b8 (1)
put-down b15 (1)
pick-up b8 (1)
stack b8 b2 (1)
pick-up b15 (1)
stack b15 b8 (1)
[t=0.024777s, 26296 KB] Plan length: 122 step(s).
[t=0.024777s, 26296 KB] Plan cost: 122
[t=0.024777s, 26296 KB] Expanded 502 state(s).
[t=0.024777s, 26296 KB] Reopened 0 state(s).
[t=0.024777s, 26296 KB] Evaluated 503 state(s).
[t=0.024777s, 26296 KB] Evaluations: 1006
[t=0.024777s, 26296 KB] Generated 3687 state(s).
[t=0.024777s, 26296 KB] Dead ends: 0 state(s).
[t=0.024777s, 26296 KB] Number of registered states: 503
[t=0.024777s, 26296 KB] Int hash set load factor: 503/512 = 0.982422
[t=0.024777s, 26296 KB] Int hash set resizes: 9
[t=0.024777s, 26296 KB] Search time: 0.0111061s
[t=0.024777s, 26296 KB] Total time: 0.024777s
Solution found.
Peak memory: 26296 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.14s
