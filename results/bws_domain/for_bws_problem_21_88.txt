INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_21/bws_problem_21_88.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.009s wall-clock]
1472 relevant atoms
987 auxiliary atoms
2459 final queue length
4270 total queue pushes
Completing instantiation... [0.010s CPU, 0.016s wall-clock]
Instantiating: [0.020s CPU, 0.026s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.001s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
22 uncovered facts
Choosing groups: [0.010s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.006s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.023s wall-clock]
1302 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
42 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.011s wall-clock]
Reordering and filtering variables...
43 of 43 variables necessary.
22 of 43 mutex groups necessary.
882 of 882 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.005s wall-clock]
Translator variables: 43
Translator derived variables: 0
Translator facts: 506
Translator goal facts: 16
Translator mutex groups: 22
Translator total mutex groups size: 484
Translator operators: 882
Translator axioms: 0
Translator task size: 7601
Translator peak memory: 36456 KB
Writing output... [0.010s CPU, 0.005s wall-clock]
Done! [0.080s CPU, 0.080s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.0554e-05s, 24488 KB] reading input...
[t=0.00261371s, 25268 KB] done reading input!
[t=0.00380251s, 25664 KB] Initializing landmark count heuristic...
[t=0.00389071s, 25664 KB] Generating landmark graph...
[t=0.00394786s, 25664 KB] Building a landmark graph with reasonable orders.
[t=0.00400708s, 25664 KB] Initializing Exploration...
[t=0.00426212s, 25852 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.012775s, 26248 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0128627s, 26248 KB] Landmarks generation time: 0.00892592s
[t=0.0128875s, 26248 KB] Discovered 85 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0129056s, 26248 KB] 331 edges
[t=0.0129161s, 26248 KB] approx. reasonable orders
[t=0.013245s, 26248 KB] approx. obedient reasonable orders
[t=0.0132964s, 26248 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0133126s, 26248 KB] Landmarks generation time: 0.00946185s
[t=0.0133666s, 26248 KB] Discovered 85 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0133756s, 26248 KB] 337 edges
[t=0.0133845s, 26248 KB] Landmark graph generation time: 0.00950073s
[t=0.0134083s, 26248 KB] Landmark graph contains 85 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0134194s, 26248 KB] Landmark graph contains 337 orderings.
[t=0.0138612s, 26248 KB] Simplifying 3486 unary operators... done! [2646 unary operators]
[t=0.0147001s, 26380 KB] time to simplify: 0.000895606s
[t=0.0148111s, 26380 KB] Initializing additive heuristic...
[t=0.0148243s, 26380 KB] Initializing FF heuristic...
[t=0.0148759s, 26380 KB] Building successor generator...done!
[t=0.0150582s, 26380 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0150673s, 26380 KB] time for successor generation creation: 0.000150605s
[t=0.0150795s, 26380 KB] Variables: 43
[t=0.015088s, 26380 KB] FactPairs: 506
[t=0.0150965s, 26380 KB] Bytes per state: 16
[t=0.0151979s, 26380 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0152352s, 26380 KB] 40 initial landmarks, 16 goal landmarks
[t=0.0152953s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0153052s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0153135s, 26380 KB] g=0, 1 evaluated, 0 expanded
[t=0.0153294s, 26380 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0153383s, 26380 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0154963s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0155059s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0155137s, 26380 KB] g=2, 7 evaluated, 6 expanded
[t=0.0156437s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0156529s, 26380 KB] g=4, 12 evaluated, 11 expanded
[t=0.0156848s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0156957s, 26380 KB] g=4, 13 evaluated, 12 expanded
[t=0.0159306s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0159432s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0159515s, 26380 KB] g=6, 21 evaluated, 20 expanded
[t=0.0160704s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.016082s, 26380 KB] g=8, 26 evaluated, 25 expanded
[t=0.0161806s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0161901s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0161982s, 26380 KB] g=8, 30 evaluated, 29 expanded
[t=0.016276s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0162851s, 26380 KB] g=10, 33 evaluated, 32 expanded
[t=0.0164492s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0164592s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0164677s, 26380 KB] g=12, 40 evaluated, 39 expanded
[t=0.0165861s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.016606s, 26380 KB] g=14, 45 evaluated, 44 expanded
[t=0.0166375s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0166464s, 26380 KB] g=14, 46 evaluated, 45 expanded
[t=0.016869s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0168805s, 26380 KB] g=16, 56 evaluated, 55 expanded
[t=0.01706s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0170713s, 26380 KB] g=18, 64 evaluated, 63 expanded
[t=0.0179679s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0179844s, 26380 KB] g=26, 102 evaluated, 101 expanded
[t=0.0182064s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0182189s, 26380 KB] g=27, 109 evaluated, 108 expanded
[t=0.0182944s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0183048s, 26380 KB] g=28, 110 evaluated, 109 expanded
[t=0.0185055s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0185163s, 26380 KB] g=30, 117 evaluated, 116 expanded
[t=0.0185488s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0185578s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0185658s, 26380 KB] g=30, 118 evaluated, 117 expanded
[t=0.0187257s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0187347s, 26380 KB] g=32, 125 evaluated, 124 expanded
[t=0.0187674s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.018776s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.018784s, 26380 KB] g=32, 126 evaluated, 125 expanded
[t=0.0189542s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0189629s, 26380 KB] g=34, 133 evaluated, 132 expanded
[t=0.0189946s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0190032s, 26380 KB] g=34, 134 evaluated, 133 expanded
[t=0.0192345s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.019244s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0192528s, 26380 KB] g=36, 144 evaluated, 143 expanded
[t=0.0193688s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0193775s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0193857s, 26380 KB] g=38, 149 evaluated, 148 expanded
[t=0.0197388s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.019749s, 26380 KB] g=42, 165 evaluated, 164 expanded
[t=0.0198488s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0198579s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0198662s, 26380 KB] g=44, 169 evaluated, 168 expanded
[t=0.0200981s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0201075s, 26380 KB] g=49, 179 evaluated, 178 expanded
[t=0.0201591s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0201709s, 26380 KB] g=50, 181 evaluated, 180 expanded
[t=0.0202634s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0202734s, 26380 KB] g=51, 185 evaluated, 184 expanded
[t=0.0203049s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0203132s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.020321s, 26380 KB] g=52, 186 evaluated, 185 expanded
[t=0.0204059s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0204145s, 26380 KB] g=53, 189 evaluated, 188 expanded
[t=0.0204454s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0204539s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0204616s, 26380 KB] g=54, 190 evaluated, 189 expanded
[t=0.0206369s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0206501s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0206636s, 26380 KB] g=56, 196 evaluated, 195 expanded
[t=0.0207741s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0207831s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.020791s, 26380 KB] g=58, 201 evaluated, 200 expanded
[t=0.0208767s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0208853s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0208934s, 26380 KB] g=60, 205 evaluated, 204 expanded
[t=0.0210655s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0210749s, 26380 KB] g=64, 214 evaluated, 213 expanded
[t=0.0211362s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.021145s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.021153s, 26380 KB] g=66, 217 evaluated, 216 expanded
[t=0.0214105s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0214208s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0214292s, 26380 KB] g=78, 233 evaluated, 232 expanded
[t=0.0214928s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0215094s, 26380 KB] g=82, 237 evaluated, 236 expanded
[t=0.0215268s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0215356s, 26380 KB] g=83, 238 evaluated, 237 expanded
[t=0.0215501s, 26380 KB] Solution found!
[t=0.0215685s, 26380 KB] Actual search time: 0.00632902s
unstack b5 b20 (1)
put-down b5 (1)
unstack b11 b19 (1)
stack b11 b6 (1)
unstack b20 b14 (1)
stack b20 b2 (1)
pick-up b4 (1)
stack b4 b11 (1)
unstack b14 b15 (1)
put-down b14 (1)
unstack b15 b17 (1)
put-down b15 (1)
unstack b17 b18 (1)
put-down b17 (1)
unstack b19 b10 (1)
put-down b19 (1)
pick-up b10 (1)
stack b10 b19 (1)
unstack b4 b11 (1)
put-down b4 (1)
unstack b11 b6 (1)
put-down b11 (1)
unstack b10 b19 (1)
put-down b10 (1)
unstack b6 b9 (1)
stack b6 b15 (1)
unstack b9 b13 (1)
stack b9 b18 (1)
pick-up b11 (1)
stack b11 b6 (1)
unstack b13 b16 (1)
stack b13 b20 (1)
unstack b16 b12 (1)
stack b16 b10 (1)
pick-up b14 (1)
stack b14 b12 (1)
pick-up b4 (1)
stack b4 b11 (1)
unstack b9 b18 (1)
put-down b9 (1)
unstack b18 b1 (1)
stack b18 b16 (1)
pick-up b9 (1)
stack b9 b18 (1)
unstack b14 b12 (1)
put-down b14 (1)
unstack b12 b7 (1)
put-down b12 (1)
unstack b7 b3 (1)
stack b7 b4 (1)
unstack b3 b8 (1)
stack b3 b14 (1)
unstack b8 b21 (1)
stack b8 b13 (1)
pick-up b12 (1)
stack b12 b7 (1)
pick-up b21 (1)
stack b21 b17 (1)
pick-up b19 (1)
stack b19 b21 (1)
unstack b3 b14 (1)
put-down b3 (1)
pick-up b14 (1)
stack b14 b12 (1)
pick-up b3 (1)
stack b3 b14 (1)
unstack b9 b18 (1)
put-down b9 (1)
unstack b18 b16 (1)
put-down b18 (1)
pick-up b9 (1)
stack b9 b18 (1)
unstack b16 b10 (1)
put-down b16 (1)
pick-up b10 (1)
stack b10 b19 (1)
pick-up b16 (1)
stack b16 b10 (1)
unstack b9 b18 (1)
put-down b9 (1)
pick-up b18 (1)
stack b18 b16 (1)
pick-up b9 (1)
stack b9 b18 (1)
[t=0.0215777s, 26380 KB] Plan length: 84 step(s).
[t=0.0215777s, 26380 KB] Plan cost: 84
[t=0.0215777s, 26380 KB] Expanded 238 state(s).
[t=0.0215777s, 26380 KB] Reopened 0 state(s).
[t=0.0215777s, 26380 KB] Evaluated 239 state(s).
[t=0.0215777s, 26380 KB] Evaluations: 478
[t=0.0215777s, 26380 KB] Generated 2116 state(s).
[t=0.0215777s, 26380 KB] Dead ends: 0 state(s).
[t=0.0215777s, 26380 KB] Number of registered states: 239
[t=0.0215777s, 26380 KB] Int hash set load factor: 239/256 = 0.933594
[t=0.0215777s, 26380 KB] Int hash set resizes: 8
[t=0.0215777s, 26380 KB] Search time: 0.00638052s
[t=0.0215777s, 26380 KB] Total time: 0.0215777s
Solution found.
Peak memory: 26380 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.14s
