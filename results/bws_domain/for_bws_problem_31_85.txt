INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_31/bws_problem_31_85.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.020s wall-clock]
3102 relevant atoms
2077 auxiliary atoms
5179 final queue length
9092 total queue pushes
Completing instantiation... [0.040s CPU, 0.033s wall-clock]
Instantiating: [0.060s CPU, 0.055s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.002s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
32 uncovered facts
Choosing groups: [0.010s CPU, 0.002s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.010s CPU, 0.011s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.005s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.001s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.002s wall-clock]
Translating task: [0.050s CPU, 0.050s wall-clock]
2852 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
62 propositions removed
Detecting unreachable propositions: [0.030s CPU, 0.024s wall-clock]
Reordering and filtering variables...
63 of 63 variables necessary.
32 of 63 mutex groups necessary.
1922 of 1922 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.012s wall-clock]
Translator variables: 63
Translator derived variables: 0
Translator facts: 1056
Translator goal facts: 27
Translator mutex groups: 32
Translator total mutex groups size: 1024
Translator operators: 1922
Translator axioms: 0
Translator task size: 16492
Translator peak memory: 42104 KB
Writing output... [0.010s CPU, 0.009s wall-clock]
Done! [0.170s CPU, 0.172s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=4.5358e-05s, 24488 KB] reading input...
[t=0.00600748s, 26640 KB] done reading input!
[t=0.00690836s, 26904 KB] Initializing landmark count heuristic...
[t=0.00694376s, 26904 KB] Generating landmark graph...
[t=0.00704718s, 27036 KB] Building a landmark graph with reasonable orders.
[t=0.00714139s, 27172 KB] Initializing Exploration...
[t=0.00770212s, 27620 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0364229s, 28536 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0365299s, 28536 KB] Landmarks generation time: 0.0294923s
[t=0.0365542s, 28536 KB] Discovered 135 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0365716s, 28536 KB] 744 edges
[t=0.0365815s, 28536 KB] approx. reasonable orders
[t=0.037918s, 28536 KB] approx. obedient reasonable orders
[t=0.0379834s, 28536 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0379943s, 28536 KB] Landmarks generation time: 0.0310475s
[t=0.0380041s, 28536 KB] Discovered 135 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0380124s, 28536 KB] 759 edges
[t=0.0380208s, 28536 KB] Landmark graph generation time: 0.0310838s
[t=0.0380291s, 28536 KB] Landmark graph contains 135 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0380373s, 28536 KB] Landmark graph contains 759 orderings.
[t=0.0387102s, 28568 KB] Simplifying 7626 unary operators... done! [5766 unary operators]
[t=0.040579s, 28568 KB] time to simplify: 0.00199869s
[t=0.0408198s, 28568 KB] Initializing additive heuristic...
[t=0.0408443s, 28568 KB] Initializing FF heuristic...
[t=0.0409153s, 28568 KB] Building successor generator...done!
[t=0.0412818s, 28568 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0412919s, 28568 KB] time for successor generation creation: 0.000335046s
[t=0.0413093s, 28568 KB] Variables: 63
[t=0.0413175s, 28568 KB] FactPairs: 1056
[t=0.0413256s, 28568 KB] Bytes per state: 24
[t=0.0414152s, 28568 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0414494s, 28568 KB] 60 initial landmarks, 27 goal landmarks
[t=0.04153s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 75
[t=0.0415399s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 54
[t=0.0415481s, 28568 KB] g=0, 1 evaluated, 0 expanded
[t=0.0415644s, 28568 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 75
[t=0.0415734s, 28568 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 54
[t=0.0419516s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 74
[t=0.0419616s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 53
[t=0.0419698s, 28568 KB] g=2, 9 evaluated, 8 expanded
[t=0.0423402s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 73
[t=0.04235s, 28568 KB] g=4, 17 evaluated, 16 expanded
[t=0.0426286s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 72
[t=0.042638s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 52
[t=0.0426466s, 28568 KB] g=4, 23 evaluated, 22 expanded
[t=0.0429188s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 71
[t=0.042928s, 28568 KB] g=5, 29 evaluated, 28 expanded
[t=0.043711s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 70
[t=0.0437258s, 28568 KB] g=7, 46 evaluated, 45 expanded
[t=0.0441375s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 51
[t=0.0441489s, 28568 KB] g=8, 55 evaluated, 54 expanded
[t=0.0443886s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 69
[t=0.0443986s, 28568 KB] g=10, 60 evaluated, 59 expanded
[t=0.0448529s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 50
[t=0.0448629s, 28568 KB] g=10, 70 evaluated, 69 expanded
[t=0.0453713s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 68
[t=0.0453828s, 28568 KB] g=12, 81 evaluated, 80 expanded
[t=0.0459244s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 67
[t=0.045947s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 48
[t=0.045957s, 28568 KB] g=12, 92 evaluated, 91 expanded
[t=0.0463602s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 66
[t=0.0463696s, 28568 KB] g=14, 101 evaluated, 100 expanded
[t=0.0469144s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 65
[t=0.046924s, 28568 KB] g=16, 113 evaluated, 112 expanded
[t=0.0476598s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 64
[t=0.0476783s, 28568 KB] g=18, 129 evaluated, 128 expanded
[t=0.048549s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 63
[t=0.0485686s, 28568 KB] g=20, 148 evaluated, 147 expanded
[t=0.0494867s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 62
[t=0.049499s, 28568 KB] g=22, 169 evaluated, 168 expanded
[t=0.0496427s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 47
[t=0.0496547s, 28568 KB] g=16, 172 evaluated, 171 expanded
[t=0.0504355s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.0504533s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 46
[t=0.0504623s, 28568 KB] g=24, 189 evaluated, 188 expanded
[t=0.0509604s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 58
[t=0.0509739s, 28568 KB] g=26, 200 evaluated, 199 expanded
[t=0.0510327s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0510418s, 28568 KB] g=26, 201 evaluated, 200 expanded
[t=0.0518965s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0519183s, 28568 KB] g=28, 220 evaluated, 219 expanded
[t=0.0519759s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.0519861s, 28568 KB] g=28, 221 evaluated, 220 expanded
[t=0.0527745s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0527879s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0527959s, 28568 KB] g=30, 239 evaluated, 238 expanded
[t=0.0533279s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0533386s, 28568 KB] g=32, 251 evaluated, 250 expanded
[t=0.053397s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0534067s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0534148s, 28568 KB] g=32, 252 evaluated, 251 expanded
[t=0.0538903s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0539036s, 28568 KB] g=33, 262 evaluated, 261 expanded
[t=0.0541188s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0541292s, 28568 KB] g=34, 266 evaluated, 265 expanded
[t=0.0550738s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0550839s, 28568 KB] g=36, 286 evaluated, 285 expanded
[t=0.0551412s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0551513s, 28568 KB] g=36, 287 evaluated, 286 expanded
[t=0.055475s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.055491s, 28568 KB] g=37, 294 evaluated, 293 expanded
[t=0.0559906s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0560004s, 28568 KB] g=38, 305 evaluated, 304 expanded
[t=0.0567599s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.056771s, 28568 KB] g=40, 322 evaluated, 321 expanded
[t=0.0568723s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0568815s, 28568 KB] g=40, 324 evaluated, 323 expanded
[t=0.0578797s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0578899s, 28568 KB] g=40, 347 evaluated, 346 expanded
[t=0.058164s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0581731s, 28568 KB] g=44, 353 evaluated, 352 expanded
[t=0.0590582s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0590677s, 28568 KB] g=42, 373 evaluated, 372 expanded
[t=0.0598291s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0598398s, 28568 KB] g=48, 389 evaluated, 388 expanded
[t=0.0605081s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0605172s, 28568 KB] g=48, 404 evaluated, 403 expanded
[t=0.0605713s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0605803s, 28568 KB] g=44, 405 evaluated, 404 expanded
[t=0.0614785s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0614885s, 28568 KB] g=50, 425 evaluated, 424 expanded
[t=0.0621118s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0621284s, 28568 KB] g=46, 438 evaluated, 437 expanded
[t=0.0622296s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.062239s, 28568 KB] g=52, 440 evaluated, 439 expanded
[t=0.0629073s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0629167s, 28568 KB] g=54, 455 evaluated, 454 expanded
[t=0.0640941s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0641079s, 28568 KB] g=56, 481 evaluated, 480 expanded
[t=0.0644356s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0644454s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0644541s, 28568 KB] g=58, 488 evaluated, 487 expanded
[t=0.0654711s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0654808s, 28568 KB] g=62, 510 evaluated, 509 expanded
[t=0.065792s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0658022s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0658126s, 28568 KB] g=64, 516 evaluated, 515 expanded
[t=0.0665361s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.066546s, 28568 KB] g=68, 532 evaluated, 531 expanded
[t=0.0667741s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0667835s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0667917s, 28568 KB] g=70, 537 evaluated, 536 expanded
[t=0.0719586s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0719995s, 28568 KB] g=84, 652 evaluated, 651 expanded
[t=0.0722785s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0722894s, 28568 KB] g=85, 658 evaluated, 657 expanded
[t=0.0723466s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0723566s, 28568 KB] g=86, 659 evaluated, 658 expanded
[t=0.0727173s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0727281s, 28568 KB] g=88, 667 evaluated, 666 expanded
[t=0.0730491s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0730645s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0730739s, 28568 KB] g=90, 674 evaluated, 673 expanded
[t=0.0731354s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.073148s, 28568 KB] g=91, 675 evaluated, 674 expanded
[t=0.0732038s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0732155s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0732236s, 28568 KB] g=92, 676 evaluated, 675 expanded
[t=0.0733254s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0733369s, 28568 KB] g=93, 678 evaluated, 677 expanded
[t=0.0733934s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0734033s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0734118s, 28568 KB] g=94, 679 evaluated, 678 expanded
[t=0.0736402s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0736545s, 28568 KB] g=95, 684 evaluated, 683 expanded
[t=0.0737107s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0737203s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0737286s, 28568 KB] g=96, 685 evaluated, 684 expanded
[t=0.0748141s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0748252s, 28568 KB] g=100, 710 evaluated, 709 expanded
[t=0.0750434s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0750529s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0750614s, 28568 KB] g=102, 715 evaluated, 714 expanded
[t=0.0775748s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.077591s, 28568 KB] g=110, 777 evaluated, 776 expanded
[t=0.0777606s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0777711s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0777798s, 28568 KB] g=112, 781 evaluated, 780 expanded
[t=0.0794159s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0794269s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0794353s, 28568 KB] g=124, 824 evaluated, 823 expanded
[t=0.0797821s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.079793s, 28568 KB] g=128, 833 evaluated, 832 expanded
[t=0.079908s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0799233s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.079932s, 28568 KB] g=130, 836 evaluated, 835 expanded
[t=0.08133s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0813406s, 28568 KB] g=146, 885 evaluated, 884 expanded
[t=0.0814018s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0814107s, 28568 KB] g=147, 887 evaluated, 886 expanded
[t=0.0814451s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0814539s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0814617s, 28568 KB] g=148, 888 evaluated, 887 expanded
[t=0.0816764s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0816861s, 28568 KB] g=152, 897 evaluated, 896 expanded
[t=0.0817641s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0817732s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0817814s, 28568 KB] g=154, 900 evaluated, 899 expanded
[t=0.0818686s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0818775s, 28568 KB] g=158, 904 evaluated, 903 expanded
[t=0.0818986s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0819069s, 28568 KB] g=159, 905 evaluated, 904 expanded
[t=0.0819243s, 28568 KB] Solution found!
[t=0.0819362s, 28568 KB] Actual search time: 0.0404844s
unstack b6 b21 (1)
put-down b6 (1)
unstack b21 b25 (1)
stack b21 b8 (1)
unstack b25 b10 (1)
put-down b25 (1)
unstack b10 b4 (1)
stack b10 b24 (1)
unstack b4 b18 (1)
put-down b4 (1)
unstack b18 b28 (1)
stack b18 b4 (1)
unstack b1 b29 (1)
put-down b1 (1)
unstack b10 b24 (1)
put-down b10 (1)
unstack b12 b20 (1)
put-down b12 (1)
unstack b2 b3 (1)
put-down b2 (1)
pick-up b25 (1)
stack b25 b3 (1)
unstack b28 b26 (1)
stack b28 b20 (1)
unstack b26 b5 (1)
put-down b26 (1)
unstack b29 b23 (1)
stack b29 b1 (1)
unstack b5 b14 (1)
stack b5 b6 (1)
unstack b14 b27 (1)
stack b14 b28 (1)
pick-up b10 (1)
stack b10 b24 (1)
pick-up b12 (1)
stack b12 b26 (1)
pick-up b2 (1)
stack b2 b14 (1)
pick-up b23 (1)
stack b23 b11 (1)
unstack b27 b17 (1)
put-down b27 (1)
unstack b17 b19 (1)
stack b17 b21 (1)
unstack b19 b31 (1)
put-down b19 (1)
unstack b31 b9 (1)
stack b31 b18 (1)
pick-up b27 (1)
stack b27 b31 (1)
pick-up b9 (1)
stack b9 b12 (1)
unstack b10 b24 (1)
put-down b10 (1)
pick-up b24 (1)
stack b24 b17 (1)
pick-up b10 (1)
stack b10 b24 (1)
unstack b25 b3 (1)
put-down b25 (1)
pick-up b3 (1)
stack b3 b29 (1)
pick-up b25 (1)
stack b25 b3 (1)
unstack b23 b11 (1)
put-down b23 (1)
pick-up b11 (1)
stack b11 b9 (1)
pick-up b23 (1)
stack b23 b11 (1)
unstack b10 b24 (1)
put-down b10 (1)
unstack b24 b17 (1)
put-down b24 (1)
pick-up b10 (1)
stack b10 b24 (1)
unstack b17 b21 (1)
put-down b17 (1)
unstack b21 b8 (1)
put-down b21 (1)
unstack b8 b30 (1)
put-down b8 (1)
unstack b30 b7 (1)
stack b30 b10 (1)
unstack b7 b22 (1)
stack b7 b23 (1)
pick-up b17 (1)
stack b17 b21 (1)
unstack b22 b16 (1)
stack b22 b5 (1)
unstack b16 b13 (1)
stack b16 b2 (1)
pick-up b19 (1)
stack b19 b16 (1)
pick-up b8 (1)
stack b8 b13 (1)
unstack b17 b21 (1)
put-down b17 (1)
pick-up b21 (1)
stack b21 b8 (1)
pick-up b17 (1)
stack b17 b21 (1)
unstack b30 b10 (1)
put-down b30 (1)
unstack b10 b24 (1)
put-down b10 (1)
pick-up b24 (1)
stack b24 b17 (1)
pick-up b10 (1)
stack b10 b24 (1)
pick-up b30 (1)
stack b30 b10 (1)
unstack b25 b3 (1)
put-down b25 (1)
unstack b3 b29 (1)
put-down b3 (1)
pick-up b25 (1)
stack b25 b3 (1)
unstack b29 b1 (1)
put-down b29 (1)
pick-up b1 (1)
stack b1 b30 (1)
pick-up b29 (1)
stack b29 b1 (1)
unstack b25 b3 (1)
put-down b25 (1)
pick-up b3 (1)
stack b3 b29 (1)
pick-up b25 (1)
stack b25 b3 (1)
unstack b7 b23 (1)
put-down b7 (1)
unstack b23 b11 (1)
put-down b23 (1)
pick-up b7 (1)
stack b7 b23 (1)
unstack b11 b9 (1)
put-down b11 (1)
unstack b9 b12 (1)
put-down b9 (1)
unstack b12 b26 (1)
put-down b12 (1)
pick-up b11 (1)
stack b11 b9 (1)
pick-up b26 (1)
stack b26 b22 (1)
pick-up b12 (1)
stack b12 b26 (1)
unstack b11 b9 (1)
put-down b11 (1)
pick-up b9 (1)
stack b9 b12 (1)
pick-up b11 (1)
stack b11 b9 (1)
unstack b7 b23 (1)
put-down b7 (1)
pick-up b23 (1)
stack b23 b11 (1)
pick-up b7 (1)
stack b7 b23 (1)
[t=0.0819461s, 28568 KB] Plan length: 160 step(s).
[t=0.0819461s, 28568 KB] Plan cost: 160
[t=0.0819461s, 28568 KB] Expanded 905 state(s).
[t=0.0819461s, 28568 KB] Reopened 0 state(s).
[t=0.0819461s, 28568 KB] Evaluated 906 state(s).
[t=0.0819461s, 28568 KB] Evaluations: 1812
[t=0.0819461s, 28568 KB] Generated 9844 state(s).
[t=0.0819461s, 28568 KB] Dead ends: 0 state(s).
[t=0.0819461s, 28568 KB] Number of registered states: 906
[t=0.0819461s, 28568 KB] Int hash set load factor: 906/1024 = 0.884766
[t=0.0819461s, 28568 KB] Int hash set resizes: 10
[t=0.0819461s, 28568 KB] Search time: 0.0405312s
[t=0.0819461s, 28568 KB] Total time: 0.0819461s
Solution found.
Peak memory: 28568 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.30s
