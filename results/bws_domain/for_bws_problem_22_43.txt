INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_22/bws_problem_22_43.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.010s wall-clock]
1608 relevant atoms
1078 auxiliary atoms
2686 final queue length
4671 total queue pushes
Completing instantiation... [0.010s CPU, 0.016s wall-clock]
Instantiating: [0.030s CPU, 0.028s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.003s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
23 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.007s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
1430 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
44 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.011s wall-clock]
Reordering and filtering variables...
45 of 45 variables necessary.
23 of 45 mutex groups necessary.
968 of 968 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 45
Translator derived variables: 0
Translator facts: 552
Translator goal facts: 19
Translator mutex groups: 23
Translator total mutex groups size: 529
Translator operators: 968
Translator axioms: 0
Translator task size: 8339
Translator peak memory: 36976 KB
Writing output... [0.010s CPU, 0.005s wall-clock]
Done! [0.090s CPU, 0.087s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=1.7329e-05s, 24488 KB] reading input...
[t=0.00367143s, 25340 KB] done reading input!
[t=0.00518338s, 25736 KB] Initializing landmark count heuristic...
[t=0.00524298s, 25736 KB] Generating landmark graph...
[t=0.00530561s, 25736 KB] Building a landmark graph with reasonable orders.
[t=0.005382s, 25736 KB] Initializing Exploration...
[t=0.00577015s, 26000 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0162257s, 26528 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0163171s, 26528 KB] Landmarks generation time: 0.0110133s
[t=0.0163316s, 26528 KB] Discovered 100 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0163681s, 26528 KB] 379 edges
[t=0.0163793s, 26528 KB] approx. reasonable orders
[t=0.0197847s, 26528 KB] approx. obedient reasonable orders
[t=0.0201638s, 26528 KB] Removed 3 reasonable or obedient reasonable orders
[t=0.020179s, 26528 KB] Landmarks generation time: 0.0149343s
[t=0.0201899s, 26528 KB] Discovered 100 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0201983s, 26528 KB] 478 edges
[t=0.020207s, 26528 KB] Landmark graph generation time: 0.0149713s
[t=0.0202158s, 26528 KB] Landmark graph contains 100 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0202307s, 26528 KB] Landmark graph contains 478 orderings.
[t=0.0207617s, 26528 KB] Simplifying 3828 unary operators... done! [2904 unary operators]
[t=0.0217342s, 26528 KB] time to simplify: 0.00103916s
[t=0.0218794s, 26528 KB] Initializing additive heuristic...
[t=0.0218961s, 26528 KB] Initializing FF heuristic...
[t=0.0219712s, 26528 KB] Building successor generator...done!
[t=0.022209s, 26528 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0222386s, 26528 KB] time for successor generation creation: 0.000203511s
[t=0.0222584s, 26528 KB] Variables: 45
[t=0.0222676s, 26528 KB] FactPairs: 552
[t=0.0222753s, 26528 KB] Bytes per state: 20
[t=0.022479s, 26528 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0225195s, 26528 KB] 45 initial landmarks, 19 goal landmarks
[t=0.0225933s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0226029s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0226112s, 26528 KB] g=0, 1 evaluated, 0 expanded
[t=0.0226251s, 26528 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0226336s, 26528 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0228018s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0228117s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0228199s, 26528 KB] g=2, 7 evaluated, 6 expanded
[t=0.0229032s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0229121s, 26528 KB] g=3, 10 evaluated, 9 expanded
[t=0.0232858s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0233067s, 26528 KB] g=6, 21 evaluated, 20 expanded
[t=0.023548s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0235592s, 26528 KB] g=8, 30 evaluated, 29 expanded
[t=0.0239387s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.023948s, 26528 KB] g=10, 45 evaluated, 44 expanded
[t=0.024293s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0243029s, 26528 KB] g=12, 59 evaluated, 58 expanded
[t=0.0247206s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0247306s, 26528 KB] g=14, 76 evaluated, 75 expanded
[t=0.0247918s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0248009s, 26528 KB] g=14, 78 evaluated, 77 expanded
[t=0.0252321s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0252417s, 26528 KB] g=16, 96 evaluated, 95 expanded
[t=0.025374s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0253832s, 26528 KB] g=16, 101 evaluated, 100 expanded
[t=0.0256858s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0256957s, 26528 KB] g=18, 113 evaluated, 112 expanded
[t=0.0261554s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0261678s, 26528 KB] g=18, 128 evaluated, 127 expanded
[t=0.0262121s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0262208s, 26528 KB] g=20, 129 evaluated, 128 expanded
[t=0.0265643s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0265741s, 26528 KB] g=22, 143 evaluated, 142 expanded
[t=0.026821s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0268298s, 26528 KB] g=20, 153 evaluated, 152 expanded
[t=0.0269881s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.026997s, 26528 KB] g=24, 159 evaluated, 158 expanded
[t=0.0274029s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0274146s, 26528 KB] g=26, 174 evaluated, 173 expanded
[t=0.027601s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0276109s, 26528 KB] g=22, 181 evaluated, 180 expanded
[t=0.0278197s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0278294s, 26528 KB] g=28, 189 evaluated, 188 expanded
[t=0.0283785s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0283944s, 26528 KB] g=24, 207 evaluated, 206 expanded
[t=0.0290727s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0290831s, 26528 KB] g=26, 233 evaluated, 232 expanded
[t=0.0298808s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0298921s, 26528 KB] g=28, 265 evaluated, 264 expanded
[t=0.03076s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0307738s, 26528 KB] g=30, 298 evaluated, 297 expanded
[t=0.0315407s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0315529s, 26528 KB] g=32, 329 evaluated, 328 expanded
[t=0.0328518s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0328652s, 26528 KB] g=34, 380 evaluated, 379 expanded
[t=0.0330438s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0330529s, 26528 KB] g=34, 387 evaluated, 386 expanded
[t=0.0414547s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0415467s, 26528 KB] g=42, 724 evaluated, 723 expanded
[t=0.0422223s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0422337s, 26528 KB] g=44, 751 evaluated, 750 expanded
[t=0.0427984s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0428094s, 26528 KB] g=46, 774 evaluated, 773 expanded
[t=0.0433355s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0433513s, 26528 KB] g=48, 794 evaluated, 793 expanded
[t=0.0437543s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0437639s, 26528 KB] g=50, 810 evaluated, 809 expanded
[t=0.0441196s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0441306s, 26528 KB] g=52, 824 evaluated, 823 expanded
[t=0.0444673s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0444772s, 26528 KB] g=54, 838 evaluated, 837 expanded
[t=0.0448131s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0448314s, 26528 KB] g=56, 852 evaluated, 851 expanded
[t=0.04723s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0472448s, 26528 KB] g=62, 952 evaluated, 951 expanded
[t=0.0491613s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0491781s, 26528 KB] g=68, 1026 evaluated, 1025 expanded
[t=0.0504065s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0504188s, 26528 KB] g=74, 1077 evaluated, 1076 expanded
[t=0.0530137s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0530352s, 26528 KB] g=82, 1181 evaluated, 1180 expanded
[t=0.0531841s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0531941s, 26528 KB] g=84, 1187 evaluated, 1186 expanded
[t=0.0624439s, 26660 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0624771s, 26660 KB] g=106, 1563 evaluated, 1562 expanded
[t=0.0626696s, 26660 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0626804s, 26660 KB] g=108, 1571 evaluated, 1570 expanded
[t=0.0642378s, 26660 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0642611s, 26660 KB] g=116, 1635 evaluated, 1634 expanded
[t=0.0643623s, 26660 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0643772s, 26660 KB] g=116, 1639 evaluated, 1638 expanded
[t=0.0645347s, 26660 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0645467s, 26660 KB] g=118, 1645 evaluated, 1644 expanded
[t=0.0686741s, 26660 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0687045s, 26660 KB] g=148, 1835 evaluated, 1834 expanded
[t=0.0690309s, 26660 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0690427s, 26660 KB] g=152, 1850 evaluated, 1849 expanded
[t=0.0691636s, 26660 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0691749s, 26660 KB] g=154, 1855 evaluated, 1854 expanded
[t=0.0697035s, 26792 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0697341s, 26792 KB] g=166, 1882 evaluated, 1881 expanded
[t=0.0698698s, 26792 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0698814s, 26792 KB] g=170, 1889 evaluated, 1888 expanded
[t=0.0698996s, 26792 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0699085s, 26792 KB] g=171, 1890 evaluated, 1889 expanded
[t=0.0699492s, 26792 KB] Solution found!
[t=0.0699684s, 26792 KB] Actual search time: 0.0474466s
unstack b6 b2 (1)
put-down b6 (1)
unstack b2 b16 (1)
put-down b2 (1)
unstack b11 b21 (1)
put-down b11 (1)
unstack b18 b8 (1)
put-down b18 (1)
unstack b21 b15 (1)
put-down b21 (1)
unstack b22 b7 (1)
put-down b22 (1)
unstack b8 b17 (1)
put-down b8 (1)
unstack b17 b20 (1)
put-down b17 (1)
unstack b20 b3 (1)
put-down b20 (1)
unstack b3 b10 (1)
put-down b3 (1)
unstack b10 b12 (1)
put-down b10 (1)
unstack b12 b13 (1)
put-down b12 (1)
unstack b9 b5 (1)
put-down b9 (1)
unstack b5 b19 (1)
put-down b5 (1)
unstack b19 b4 (1)
stack b19 b6 (1)
unstack b4 b1 (1)
put-down b4 (1)
pick-up b21 (1)
stack b21 b19 (1)
pick-up b10 (1)
stack b10 b11 (1)
pick-up b2 (1)
stack b2 b5 (1)
unstack b1 b14 (1)
stack b1 b10 (1)
pick-up b12 (1)
stack b12 b1 (1)
pick-up b13 (1)
stack b13 b14 (1)
pick-up b15 (1)
stack b15 b9 (1)
pick-up b16 (1)
stack b16 b8 (1)
pick-up b17 (1)
stack b17 b15 (1)
pick-up b18 (1)
stack b18 b17 (1)
pick-up b20 (1)
stack b20 b22 (1)
pick-up b7 (1)
stack b7 b13 (1)
unstack b16 b8 (1)
put-down b16 (1)
pick-up b8 (1)
stack b8 b18 (1)
pick-up b16 (1)
stack b16 b8 (1)
unstack b2 b5 (1)
put-down b2 (1)
pick-up b5 (1)
stack b5 b16 (1)
pick-up b2 (1)
stack b2 b5 (1)
unstack b20 b22 (1)
put-down b20 (1)
pick-up b22 (1)
stack b22 b12 (1)
pick-up b20 (1)
stack b20 b22 (1)
unstack b7 b13 (1)
put-down b7 (1)
unstack b13 b14 (1)
put-down b13 (1)
pick-up b14 (1)
stack b14 b21 (1)
pick-up b13 (1)
stack b13 b14 (1)
pick-up b7 (1)
stack b7 b13 (1)
unstack b20 b22 (1)
put-down b20 (1)
unstack b22 b12 (1)
put-down b22 (1)
unstack b12 b1 (1)
put-down b12 (1)
pick-up b22 (1)
stack b22 b12 (1)
pick-up b20 (1)
stack b20 b22 (1)
unstack b1 b10 (1)
put-down b1 (1)
unstack b10 b11 (1)
put-down b10 (1)
pick-up b1 (1)
stack b1 b10 (1)
pick-up b11 (1)
stack b11 b7 (1)
unstack b1 b10 (1)
put-down b1 (1)
pick-up b10 (1)
stack b10 b11 (1)
pick-up b1 (1)
stack b1 b10 (1)
unstack b20 b22 (1)
put-down b20 (1)
unstack b22 b12 (1)
put-down b22 (1)
pick-up b12 (1)
stack b12 b1 (1)
pick-up b22 (1)
stack b22 b12 (1)
pick-up b20 (1)
stack b20 b22 (1)
unstack b2 b5 (1)
put-down b2 (1)
unstack b5 b16 (1)
put-down b5 (1)
pick-up b2 (1)
stack b2 b5 (1)
unstack b16 b8 (1)
put-down b16 (1)
unstack b8 b18 (1)
put-down b8 (1)
pick-up b16 (1)
stack b16 b8 (1)
unstack b2 b5 (1)
put-down b2 (1)
pick-up b5 (1)
stack b5 b16 (1)
pick-up b2 (1)
stack b2 b5 (1)
unstack b18 b17 (1)
put-down b18 (1)
unstack b17 b15 (1)
put-down b17 (1)
pick-up b18 (1)
stack b18 b17 (1)
unstack b15 b9 (1)
put-down b15 (1)
pick-up b9 (1)
stack b9 b20 (1)
pick-up b15 (1)
stack b15 b9 (1)
unstack b18 b17 (1)
put-down b18 (1)
pick-up b17 (1)
stack b17 b15 (1)
pick-up b18 (1)
stack b18 b17 (1)
unstack b2 b5 (1)
put-down b2 (1)
unstack b5 b16 (1)
put-down b5 (1)
pick-up b2 (1)
stack b2 b5 (1)
unstack b16 b8 (1)
put-down b16 (1)
pick-up b8 (1)
stack b8 b18 (1)
pick-up b16 (1)
stack b16 b8 (1)
unstack b2 b5 (1)
put-down b2 (1)
pick-up b5 (1)
stack b5 b16 (1)
pick-up b2 (1)
stack b2 b5 (1)
[t=0.0699787s, 26792 KB] Plan length: 172 step(s).
[t=0.0699787s, 26792 KB] Plan cost: 172
[t=0.0699787s, 26792 KB] Expanded 1891 state(s).
[t=0.0699787s, 26792 KB] Reopened 0 state(s).
[t=0.0699787s, 26792 KB] Evaluated 1892 state(s).
[t=0.0699787s, 26792 KB] Evaluations: 3784
[t=0.0699787s, 26792 KB] Generated 25659 state(s).
[t=0.0699787s, 26792 KB] Dead ends: 0 state(s).
[t=0.0699787s, 26792 KB] Number of registered states: 1892
[t=0.0699787s, 26792 KB] Int hash set load factor: 1892/2048 = 0.923828
[t=0.0699787s, 26792 KB] Int hash set resizes: 11
[t=0.0699787s, 26792 KB] Search time: 0.0475006s
[t=0.0699787s, 26792 KB] Total time: 0.0699787s
Solution found.
Peak memory: 26792 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.21s
