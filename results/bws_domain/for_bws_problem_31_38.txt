INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_31/bws_problem_31_38.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.010s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.020s wall-clock]
3102 relevant atoms
2077 auxiliary atoms
5179 final queue length
9091 total queue pushes
Completing instantiation... [0.030s CPU, 0.034s wall-clock]
Instantiating: [0.060s CPU, 0.056s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.002s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
32 uncovered facts
Choosing groups: [0.010s CPU, 0.002s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.010s CPU, 0.012s wall-clock]
Building STRIPS to SAS dictionary... [0.010s CPU, 0.008s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.001s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.002s wall-clock]
Translating task: [0.050s CPU, 0.051s wall-clock]
2852 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
62 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.024s wall-clock]
Reordering and filtering variables...
63 of 63 variables necessary.
32 of 63 mutex groups necessary.
1922 of 1922 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.013s wall-clock]
Translator variables: 63
Translator derived variables: 0
Translator facts: 1056
Translator goal facts: 24
Translator mutex groups: 32
Translator total mutex groups size: 1024
Translator operators: 1922
Translator axioms: 0
Translator task size: 16489
Translator peak memory: 42104 KB
Writing output... [0.010s CPU, 0.010s wall-clock]
Done! [0.180s CPU, 0.181s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=1.9364e-05s, 24488 KB] reading input...
[t=0.00557688s, 26640 KB] done reading input!
[t=0.00650399s, 26904 KB] Initializing landmark count heuristic...
[t=0.00654283s, 26904 KB] Generating landmark graph...
[t=0.00664956s, 27036 KB] Building a landmark graph with reasonable orders.
[t=0.00674286s, 27168 KB] Initializing Exploration...
[t=0.00726413s, 27612 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0316953s, 28404 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0318792s, 28404 KB] Landmarks generation time: 0.0252449s
[t=0.0319091s, 28404 KB] Discovered 129 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0319336s, 28404 KB] 430 edges
[t=0.031946s, 28404 KB] approx. reasonable orders
[t=0.0340841s, 28404 KB] approx. obedient reasonable orders
[t=0.0341428s, 28404 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0341543s, 28404 KB] Landmarks generation time: 0.0275987s
[t=0.0341643s, 28404 KB] Discovered 129 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0341726s, 28404 KB] 452 edges
[t=0.0341823s, 28404 KB] Landmark graph generation time: 0.0276466s
[t=0.034191s, 28404 KB] Landmark graph contains 129 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0341989s, 28404 KB] Landmark graph contains 452 orderings.
[t=0.0349579s, 28436 KB] Simplifying 7626 unary operators... done! [5766 unary operators]
[t=0.0368618s, 28568 KB] time to simplify: 0.00203055s
[t=0.0371036s, 28568 KB] Initializing additive heuristic...
[t=0.0371371s, 28568 KB] Initializing FF heuristic...
[t=0.0372065s, 28568 KB] Building successor generator...done!
[t=0.0375786s, 28568 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0375885s, 28568 KB] time for successor generation creation: 0.000338172s
[t=0.0376215s, 28568 KB] Variables: 63
[t=0.0376298s, 28568 KB] FactPairs: 1056
[t=0.0376381s, 28568 KB] Bytes per state: 24
[t=0.0377689s, 28568 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0378013s, 28568 KB] 62 initial landmarks, 24 goal landmarks
[t=0.037885s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 67
[t=0.0378957s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 51
[t=0.0379047s, 28568 KB] g=0, 1 evaluated, 0 expanded
[t=0.0379199s, 28568 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 67
[t=0.0379289s, 28568 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 51
[t=0.0380922s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 66
[t=0.0381032s, 28568 KB] g=1, 4 evaluated, 3 expanded
[t=0.0385683s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 65
[t=0.0385803s, 28568 KB] g=3, 14 evaluated, 13 expanded
[t=0.0391622s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 64
[t=0.0391792s, 28568 KB] g=6, 27 evaluated, 26 expanded
[t=0.0400227s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 63
[t=0.0400443s, 28568 KB] g=8, 45 evaluated, 44 expanded
[t=0.040104s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 50
[t=0.0401136s, 28568 KB] g=4, 46 evaluated, 45 expanded
[t=0.0407856s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 49
[t=0.0407974s, 28568 KB] g=6, 60 evaluated, 59 expanded
[t=0.041035s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 62
[t=0.0410458s, 28568 KB] g=10, 65 evaluated, 64 expanded
[t=0.0414889s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 48
[t=0.0414991s, 28568 KB] g=8, 75 evaluated, 74 expanded
[t=0.0420386s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 61
[t=0.0420555s, 28568 KB] g=9, 87 evaluated, 86 expanded
[t=0.0426092s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 60
[t=0.0426194s, 28568 KB] g=12, 100 evaluated, 99 expanded
[t=0.0431328s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.0431562s, 28568 KB] g=14, 112 evaluated, 111 expanded
[t=0.0439985s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 58
[t=0.0440085s, 28568 KB] g=16, 131 evaluated, 130 expanded
[t=0.0449741s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 57
[t=0.0449914s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 47
[t=0.0450005s, 28568 KB] g=18, 153 evaluated, 152 expanded
[t=0.0455313s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0455417s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 46
[t=0.0455511s, 28568 KB] g=20, 165 evaluated, 164 expanded
[t=0.046002s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0460115s, 28568 KB] g=22, 176 evaluated, 175 expanded
[t=0.0461046s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0461135s, 28568 KB] g=22, 178 evaluated, 177 expanded
[t=0.0469174s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.0469323s, 28568 KB] g=24, 197 evaluated, 196 expanded
[t=0.0470703s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0470796s, 28568 KB] g=24, 200 evaluated, 199 expanded
[t=0.0479536s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0479639s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0479724s, 28568 KB] g=26, 220 evaluated, 219 expanded
[t=0.0484879s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0484971s, 28568 KB] g=28, 232 evaluated, 231 expanded
[t=0.0486781s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0486873s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0486956s, 28568 KB] g=28, 236 evaluated, 235 expanded
[t=0.0491914s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0492127s, 28568 KB] g=30, 247 evaluated, 246 expanded
[t=0.0494329s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0494429s, 28568 KB] g=30, 252 evaluated, 251 expanded
[t=0.0498851s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0498961s, 28568 KB] g=32, 262 evaluated, 261 expanded
[t=0.0503217s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0503326s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0503407s, 28568 KB] g=34, 272 evaluated, 271 expanded
[t=0.0506897s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0506994s, 28568 KB] g=36, 280 evaluated, 279 expanded
[t=0.0513101s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0513272s, 28568 KB] g=38, 294 evaluated, 293 expanded
[t=0.051686s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0516968s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0517074s, 28568 KB] g=40, 302 evaluated, 301 expanded
[t=0.0520277s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0520477s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0520561s, 28568 KB] g=42, 309 evaluated, 308 expanded
[t=0.0523157s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.052325s, 28568 KB] g=44, 315 evaluated, 314 expanded
[t=0.0542578s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0542867s, 28568 KB] g=49, 360 evaluated, 359 expanded
[t=0.0543447s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0543538s, 28568 KB] g=50, 361 evaluated, 360 expanded
[t=0.0544105s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0544206s, 28568 KB] g=51, 362 evaluated, 361 expanded
[t=0.0545233s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.054534s, 28568 KB] g=52, 364 evaluated, 363 expanded
[t=0.0549379s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0549511s, 28568 KB] g=54, 373 evaluated, 372 expanded
[t=0.0553787s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0553902s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0553981s, 28568 KB] g=56, 383 evaluated, 382 expanded
[t=0.0558006s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0558108s, 28568 KB] g=58, 392 evaluated, 391 expanded
[t=0.0559114s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0559206s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0559289s, 28568 KB] g=58, 394 evaluated, 393 expanded
[t=0.0562967s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0563133s, 28568 KB] g=60, 402 evaluated, 401 expanded
[t=0.0567091s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0567188s, 28568 KB] g=62, 411 evaluated, 410 expanded
[t=0.0574216s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0574388s, 28568 KB] g=64, 426 evaluated, 425 expanded
[t=0.0575383s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0575479s, 28568 KB] g=64, 428 evaluated, 427 expanded
[t=0.0579048s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0579144s, 28568 KB] g=66, 436 evaluated, 435 expanded
[t=0.0608885s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0609109s, 28568 KB] g=72, 503 evaluated, 502 expanded
[t=0.0616503s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.061662s, 28568 KB] g=74, 519 evaluated, 518 expanded
[t=0.0621509s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0621612s, 28568 KB] g=76, 530 evaluated, 529 expanded
[t=0.0625398s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0625504s, 28568 KB] g=78, 539 evaluated, 538 expanded
[t=0.0630271s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0630372s, 28568 KB] g=78, 550 evaluated, 549 expanded
[t=0.0631742s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0631939s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0632026s, 28568 KB] g=78, 553 evaluated, 552 expanded
[t=0.0634946s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0635111s, 28568 KB] g=80, 559 evaluated, 558 expanded
[t=0.0643951s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0644074s, 28568 KB] g=84, 580 evaluated, 579 expanded
[t=0.0646267s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0646362s, 28568 KB] g=86, 585 evaluated, 584 expanded
[t=0.0648133s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0648244s, 28568 KB] g=88, 589 evaluated, 588 expanded
[t=0.0707879s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0708228s, 28568 KB] g=106, 728 evaluated, 727 expanded
[t=0.0711337s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0711437s, 28568 KB] g=107, 736 evaluated, 735 expanded
[t=0.0711889s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0711978s, 28568 KB] g=108, 737 evaluated, 736 expanded
[t=0.071509s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0715184s, 28568 KB] g=110, 746 evaluated, 745 expanded
[t=0.0716324s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0716416s, 28568 KB] g=110, 749 evaluated, 748 expanded
[t=0.072203s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0722127s, 28568 KB] g=112, 766 evaluated, 765 expanded
[t=0.0725079s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0725173s, 28568 KB] g=112, 775 evaluated, 774 expanded
[t=0.072868s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0728833s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.072892s, 28568 KB] g=114, 785 evaluated, 784 expanded
[t=0.0731971s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0732069s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.073215s, 28568 KB] g=116, 794 evaluated, 793 expanded
[t=0.073474s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0734831s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0734911s, 28568 KB] g=118, 802 evaluated, 801 expanded
[t=0.0736813s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0736907s, 28568 KB] g=119, 808 evaluated, 807 expanded
[t=0.0737351s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0737436s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0737513s, 28568 KB] g=120, 809 evaluated, 808 expanded
[t=0.0739116s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0739202s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.073928s, 28568 KB] g=122, 814 evaluated, 813 expanded
[t=0.0740845s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0740975s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0741058s, 28568 KB] g=124, 819 evaluated, 818 expanded
[t=0.0742951s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0743037s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0743118s, 28568 KB] g=126, 825 evaluated, 824 expanded
[t=0.0748709s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0748815s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0748903s, 28568 KB] g=130, 843 evaluated, 842 expanded
[t=0.0751477s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0751572s, 28568 KB] g=134, 852 evaluated, 851 expanded
[t=0.0752485s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0752574s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0752657s, 28568 KB] g=136, 855 evaluated, 854 expanded
[t=0.0755139s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0755298s, 28568 KB] g=144, 865 evaluated, 864 expanded
[t=0.0756242s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0756336s, 28568 KB] g=148, 869 evaluated, 868 expanded
[t=0.0756546s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0756633s, 28568 KB] g=149, 870 evaluated, 869 expanded
[t=0.0756809s, 28568 KB] Solution found!
[t=0.0756922s, 28568 KB] Actual search time: 0.0378872s
unstack b20 b22 (1)
put-down b20 (1)
unstack b22 b15 (1)
stack b22 b7 (1)
unstack b15 b28 (1)
put-down b15 (1)
unstack b28 b19 (1)
put-down b28 (1)
unstack b26 b13 (1)
put-down b26 (1)
unstack b12 b30 (1)
put-down b12 (1)
unstack b13 b2 (1)
put-down b13 (1)
unstack b18 b24 (1)
put-down b18 (1)
unstack b24 b21 (1)
put-down b24 (1)
unstack b19 b4 (1)
stack b19 b2 (1)
unstack b31 b1 (1)
put-down b31 (1)
unstack b1 b25 (1)
stack b1 b28 (1)
unstack b25 b6 (1)
put-down b25 (1)
pick-up b13 (1)
stack b13 b6 (1)
pick-up b12 (1)
stack b12 b4 (1)
pick-up b21 (1)
stack b21 b22 (1)
pick-up b31 (1)
stack b31 b25 (1)
unstack b19 b2 (1)
put-down b19 (1)
unstack b2 b3 (1)
stack b2 b21 (1)
pick-up b18 (1)
stack b18 b3 (1)
pick-up b19 (1)
stack b19 b2 (1)
unstack b18 b3 (1)
put-down b18 (1)
unstack b12 b4 (1)
put-down b12 (1)
unstack b3 b27 (1)
put-down b3 (1)
unstack b27 b10 (1)
stack b27 b30 (1)
unstack b10 b5 (1)
stack b10 b19 (1)
unstack b5 b8 (1)
put-down b5 (1)
pick-up b20 (1)
stack b20 b5 (1)
pick-up b8 (1)
stack b8 b15 (1)
pick-up b12 (1)
stack b12 b4 (1)
pick-up b18 (1)
stack b18 b3 (1)
unstack b12 b4 (1)
put-down b12 (1)
unstack b27 b30 (1)
put-down b27 (1)
unstack b30 b17 (1)
put-down b30 (1)
unstack b17 b16 (1)
put-down b17 (1)
pick-up b16 (1)
stack b16 b1 (1)
pick-up b17 (1)
stack b17 b16 (1)
pick-up b30 (1)
stack b30 b17 (1)
pick-up b27 (1)
stack b27 b30 (1)
pick-up b12 (1)
stack b12 b4 (1)
unstack b18 b3 (1)
put-down b18 (1)
pick-up b3 (1)
stack b3 b27 (1)
pick-up b18 (1)
stack b18 b3 (1)
unstack b10 b19 (1)
put-down b10 (1)
unstack b19 b2 (1)
put-down b19 (1)
unstack b2 b21 (1)
put-down b2 (1)
pick-up b19 (1)
stack b19 b2 (1)
pick-up b10 (1)
stack b10 b19 (1)
unstack b12 b4 (1)
put-down b12 (1)
unstack b21 b22 (1)
put-down b21 (1)
unstack b22 b7 (1)
put-down b22 (1)
unstack b7 b23 (1)
put-down b7 (1)
unstack b23 b9 (1)
stack b23 b31 (1)
unstack b9 b14 (1)
stack b9 b18 (1)
unstack b14 b29 (1)
put-down b14 (1)
unstack b29 b11 (1)
put-down b29 (1)
pick-up b26 (1)
stack b26 b23 (1)
pick-up b11 (1)
stack b11 b13 (1)
pick-up b4 (1)
stack b4 b11 (1)
pick-up b7 (1)
stack b7 b14 (1)
pick-up b12 (1)
stack b12 b4 (1)
pick-up b21 (1)
stack b21 b22 (1)
unstack b7 b14 (1)
put-down b7 (1)
pick-up b14 (1)
stack b14 b12 (1)
pick-up b7 (1)
stack b7 b14 (1)
unstack b21 b22 (1)
put-down b21 (1)
pick-up b22 (1)
stack b22 b7 (1)
pick-up b21 (1)
stack b21 b22 (1)
unstack b10 b19 (1)
put-down b10 (1)
unstack b19 b2 (1)
put-down b19 (1)
pick-up b10 (1)
stack b10 b19 (1)
pick-up b2 (1)
stack b2 b21 (1)
unstack b10 b19 (1)
put-down b10 (1)
pick-up b19 (1)
stack b19 b2 (1)
pick-up b10 (1)
stack b10 b19 (1)
[t=0.0757012s, 28568 KB] Plan length: 150 step(s).
[t=0.0757012s, 28568 KB] Plan cost: 150
[t=0.0757012s, 28568 KB] Expanded 870 state(s).
[t=0.0757012s, 28568 KB] Reopened 0 state(s).
[t=0.0757012s, 28568 KB] Evaluated 871 state(s).
[t=0.0757012s, 28568 KB] Evaluations: 1742
[t=0.0757012s, 28568 KB] Generated 10806 state(s).
[t=0.0757012s, 28568 KB] Dead ends: 0 state(s).
[t=0.0757012s, 28568 KB] Number of registered states: 871
[t=0.0757012s, 28568 KB] Int hash set load factor: 871/1024 = 0.850586
[t=0.0757012s, 28568 KB] Int hash set resizes: 10
[t=0.0757012s, 28568 KB] Search time: 0.0379334s
[t=0.0757012s, 28568 KB] Total time: 0.0757012s
Solution found.
Peak memory: 28568 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.30s
