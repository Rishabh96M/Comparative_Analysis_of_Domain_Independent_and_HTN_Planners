INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_20/bws_problem_20_54.pddl --sas-file output.sas
Parsing...
Parsing: [0.010s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.009s wall-clock]
1342 relevant atoms
900 auxiliary atoms
2242 final queue length
3886 total queue pushes
Completing instantiation... [0.010s CPU, 0.016s wall-clock]
Instantiating: [0.020s CPU, 0.027s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.010s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
21 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.006s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.021s wall-clock]
1180 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
40 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.011s wall-clock]
Reordering and filtering variables...
41 of 41 variables necessary.
21 of 41 mutex groups necessary.
800 of 800 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.008s wall-clock]
Translator variables: 41
Translator derived variables: 0
Translator facts: 462
Translator goal facts: 16
Translator mutex groups: 21
Translator total mutex groups size: 441
Translator operators: 800
Translator axioms: 0
Translator task size: 6900
Translator peak memory: 35948 KB
Writing output... [0.010s CPU, 0.008s wall-clock]
Done! [0.090s CPU, 0.085s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=3.6136e-05s, 24488 KB] reading input...
[t=0.00389362s, 25180 KB] done reading input!
[t=0.00521515s, 25444 KB] Initializing landmark count heuristic...
[t=0.00532202s, 25444 KB] Generating landmark graph...
[t=0.00547762s, 25576 KB] Building a landmark graph with reasonable orders.
[t=0.00557785s, 25576 KB] Initializing Exploration...
[t=0.00605809s, 25744 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0163477s, 26140 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0164392s, 26140 KB] Landmarks generation time: 0.0109614s
[t=0.0164737s, 26140 KB] Discovered 84 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0165024s, 26140 KB] 301 edges
[t=0.0165207s, 26140 KB] approx. reasonable orders
[t=0.018365s, 26140 KB] approx. obedient reasonable orders
[t=0.0184569s, 26140 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0184788s, 26140 KB] Landmarks generation time: 0.0131477s
[t=0.0184941s, 26140 KB] Discovered 84 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0185056s, 26140 KB] 327 edges
[t=0.018517s, 26140 KB] Landmark graph generation time: 0.0132043s
[t=0.0185284s, 26140 KB] Landmark graph contains 84 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0185409s, 26140 KB] Landmark graph contains 327 orderings.
[t=0.0189921s, 26300 KB] Simplifying 3160 unary operators... done! [2400 unary operators]
[t=0.0201071s, 26300 KB] time to simplify: 0.00119511s
[t=0.020269s, 26300 KB] Initializing additive heuristic...
[t=0.0202919s, 26300 KB] Initializing FF heuristic...
[t=0.0203663s, 26300 KB] Building successor generator...done!
[t=0.0205857s, 26300 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0205962s, 26300 KB] time for successor generation creation: 0.000172562s
[t=0.0206117s, 26300 KB] Variables: 41
[t=0.020621s, 26300 KB] FactPairs: 462
[t=0.0206314s, 26300 KB] Bytes per state: 16
[t=0.0207273s, 26300 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0207624s, 26300 KB] 39 initial landmarks, 16 goal landmarks
[t=0.0208105s, 26300 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0208215s, 26300 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0208327s, 26300 KB] g=0, 1 evaluated, 0 expanded
[t=0.0208498s, 26300 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0208596s, 26300 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0209913s, 26300 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0210027s, 26300 KB] g=2, 6 evaluated, 5 expanded
[t=0.021085s, 26300 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0210959s, 26300 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0211069s, 26300 KB] g=2, 9 evaluated, 8 expanded
[t=0.0212065s, 26300 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0212168s, 26300 KB] g=4, 13 evaluated, 12 expanded
[t=0.0214685s, 26300 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.021479s, 26300 KB] g=6, 24 evaluated, 23 expanded
[t=0.0216855s, 26300 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0216959s, 26300 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0217067s, 26300 KB] g=8, 33 evaluated, 32 expanded
[t=0.0218994s, 26300 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.021918s, 26300 KB] g=10, 40 evaluated, 39 expanded
[t=0.0219677s, 26300 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0219831s, 26300 KB] g=10, 41 evaluated, 40 expanded
[t=0.0224187s, 26300 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0224358s, 26300 KB] g=12, 54 evaluated, 53 expanded
[t=0.0229495s, 26300 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0229655s, 26300 KB] g=14, 69 evaluated, 68 expanded
[t=0.0231778s, 26300 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0232017s, 26300 KB] g=14, 75 evaluated, 74 expanded
[t=0.0236112s, 26300 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0236269s, 26300 KB] g=16, 87 evaluated, 86 expanded
[t=0.0237807s, 26300 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0237965s, 26300 KB] g=16, 91 evaluated, 90 expanded
[t=0.0241918s, 26300 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0242107s, 26300 KB] g=18, 103 evaluated, 102 expanded
[t=0.0247442s, 26300 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0247635s, 26300 KB] g=20, 119 evaluated, 118 expanded
[t=0.0253018s, 26300 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0253223s, 26300 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0253364s, 26300 KB] g=22, 135 evaluated, 134 expanded
[t=0.0256664s, 26300 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.025682s, 26300 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0256947s, 26300 KB] g=24, 145 evaluated, 144 expanded
[t=0.0259659s, 26300 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0259817s, 26300 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0259945s, 26300 KB] g=26, 153 evaluated, 152 expanded
[t=0.0262602s, 26300 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0262743s, 26300 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0262872s, 26300 KB] g=28, 161 evaluated, 160 expanded
[t=0.0265192s, 26300 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0265329s, 26300 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0265455s, 26300 KB] g=30, 168 evaluated, 167 expanded
[t=0.0267482s, 26300 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.026763s, 26300 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0267753s, 26300 KB] g=32, 174 evaluated, 173 expanded
[t=0.0276825s, 26300 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0277035s, 26300 KB] g=36, 202 evaluated, 201 expanded
[t=0.0278744s, 26300 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0278891s, 26300 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0279019s, 26300 KB] g=38, 207 evaluated, 206 expanded
[t=0.0289358s, 26300 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0289721s, 26300 KB] g=46, 241 evaluated, 240 expanded
[t=0.0293654s, 26300 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0293979s, 26300 KB] g=48, 250 evaluated, 249 expanded
[t=0.0296242s, 26300 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0296496s, 26300 KB] g=50, 255 evaluated, 254 expanded
[t=0.0300197s, 26300 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0300444s, 26300 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0300616s, 26300 KB] g=52, 263 evaluated, 262 expanded
[t=0.0325801s, 26300 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0326163s, 26300 KB] g=60, 314 evaluated, 313 expanded
[t=0.0327962s, 26300 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0328192s, 26300 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0328381s, 26300 KB] g=62, 320 evaluated, 319 expanded
[t=0.0334787s, 26300 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0335107s, 26300 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0335243s, 26300 KB] g=70, 343 evaluated, 342 expanded
[t=0.0335771s, 26300 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0335875s, 26300 KB] g=70, 345 evaluated, 344 expanded
[t=0.0336584s, 26300 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0336685s, 26300 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0336793s, 26300 KB] g=72, 348 evaluated, 347 expanded
[t=0.0577804s, 26300 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0578612s, 26300 KB] g=116, 1052 evaluated, 1051 expanded
[t=0.0580088s, 26300 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0580231s, 26300 KB] g=117, 1056 evaluated, 1055 expanded
[t=0.0580711s, 26300 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0580844s, 26300 KB] g=118, 1057 evaluated, 1056 expanded
[t=0.0582574s, 26300 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0582714s, 26300 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0582841s, 26300 KB] g=120, 1062 evaluated, 1061 expanded
[t=0.05878s, 26300 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0588009s, 26300 KB] g=124, 1078 evaluated, 1077 expanded
[t=0.0589962s, 26300 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0590576s, 26300 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0590766s, 26300 KB] g=126, 1082 evaluated, 1081 expanded
[t=0.0603587s, 26300 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0603968s, 26300 KB] g=134, 1107 evaluated, 1106 expanded
[t=0.0608758s, 26300 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0609097s, 26300 KB] g=138, 1116 evaluated, 1115 expanded
[t=0.0610769s, 26300 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0611095s, 26300 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0611256s, 26300 KB] g=140, 1119 evaluated, 1118 expanded
[t=0.0628806s, 26300 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0629048s, 26300 KB] g=162, 1192 evaluated, 1191 expanded
[t=0.0629653s, 26300 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0629761s, 26300 KB] g=164, 1195 evaluated, 1194 expanded
[t=0.0631181s, 26300 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0631285s, 26300 KB] g=172, 1205 evaluated, 1204 expanded
[t=0.0631878s, 26300 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0631981s, 26300 KB] g=176, 1209 evaluated, 1208 expanded
[t=0.0632191s, 26300 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0632358s, 26300 KB] g=177, 1210 evaluated, 1209 expanded
[t=0.0632556s, 26300 KB] Solution found!
[t=0.0632709s, 26300 KB] Actual search time: 0.0425057s
unstack b4 b17 (1)
stack b4 b19 (1)
unstack b1 b11 (1)
put-down b1 (1)
unstack b11 b9 (1)
put-down b11 (1)
unstack b9 b6 (1)
put-down b9 (1)
unstack b14 b10 (1)
put-down b14 (1)
unstack b17 b18 (1)
put-down b17 (1)
unstack b18 b13 (1)
put-down b18 (1)
unstack b13 b7 (1)
stack b13 b10 (1)
unstack b6 b3 (1)
stack b6 b11 (1)
unstack b7 b16 (1)
stack b7 b14 (1)
unstack b3 b20 (1)
put-down b3 (1)
pick-up b1 (1)
stack b1 b6 (1)
unstack b20 b8 (1)
stack b20 b17 (1)
pick-up b16 (1)
stack b16 b4 (1)
pick-up b18 (1)
stack b18 b7 (1)
pick-up b8 (1)
stack b8 b13 (1)
unstack b20 b17 (1)
put-down b20 (1)
pick-up b17 (1)
stack b17 b8 (1)
pick-up b20 (1)
stack b20 b17 (1)
unstack b16 b4 (1)
put-down b16 (1)
unstack b4 b19 (1)
put-down b4 (1)
unstack b19 b12 (1)
put-down b19 (1)
pick-up b12 (1)
stack b12 b20 (1)
pick-up b19 (1)
stack b19 b12 (1)
pick-up b4 (1)
stack b4 b19 (1)
pick-up b16 (1)
stack b16 b4 (1)
unstack b1 b6 (1)
put-down b1 (1)
unstack b6 b11 (1)
put-down b6 (1)
pick-up b11 (1)
stack b11 b16 (1)
pick-up b6 (1)
stack b6 b11 (1)
pick-up b1 (1)
stack b1 b6 (1)
unstack b18 b7 (1)
put-down b18 (1)
unstack b7 b14 (1)
put-down b7 (1)
pick-up b14 (1)
stack b14 b3 (1)
pick-up b7 (1)
stack b7 b14 (1)
pick-up b18 (1)
stack b18 b7 (1)
unstack b1 b6 (1)
put-down b1 (1)
unstack b6 b11 (1)
put-down b6 (1)
pick-up b1 (1)
stack b1 b6 (1)
unstack b11 b16 (1)
put-down b11 (1)
unstack b16 b4 (1)
put-down b16 (1)
unstack b4 b19 (1)
put-down b4 (1)
pick-up b16 (1)
stack b16 b4 (1)
pick-up b11 (1)
stack b11 b16 (1)
unstack b1 b6 (1)
put-down b1 (1)
pick-up b6 (1)
stack b6 b11 (1)
pick-up b1 (1)
stack b1 b6 (1)
unstack b19 b12 (1)
put-down b19 (1)
unstack b12 b20 (1)
put-down b12 (1)
unstack b20 b17 (1)
put-down b20 (1)
pick-up b12 (1)
stack b12 b20 (1)
pick-up b19 (1)
stack b19 b12 (1)
unstack b17 b8 (1)
put-down b17 (1)
unstack b8 b13 (1)
put-down b8 (1)
pick-up b17 (1)
stack b17 b8 (1)
unstack b13 b10 (1)
put-down b13 (1)
unstack b10 b2 (1)
put-down b10 (1)
unstack b2 b5 (1)
stack b2 b1 (1)
unstack b5 b15 (1)
stack b5 b18 (1)
pick-up b13 (1)
stack b13 b10 (1)
unstack b17 b8 (1)
put-down b17 (1)
pick-up b8 (1)
stack b8 b13 (1)
pick-up b17 (1)
stack b17 b8 (1)
unstack b19 b12 (1)
put-down b19 (1)
unstack b12 b20 (1)
put-down b12 (1)
pick-up b19 (1)
stack b19 b12 (1)
pick-up b20 (1)
stack b20 b17 (1)
unstack b19 b12 (1)
put-down b19 (1)
pick-up b12 (1)
stack b12 b20 (1)
pick-up b19 (1)
stack b19 b12 (1)
unstack b2 b1 (1)
put-down b2 (1)
unstack b1 b6 (1)
put-down b1 (1)
unstack b6 b11 (1)
put-down b6 (1)
pick-up b1 (1)
stack b1 b6 (1)
pick-up b2 (1)
stack b2 b1 (1)
unstack b11 b16 (1)
put-down b11 (1)
unstack b16 b4 (1)
put-down b16 (1)
pick-up b11 (1)
stack b11 b16 (1)
pick-up b4 (1)
stack b4 b19 (1)
unstack b11 b16 (1)
put-down b11 (1)
pick-up b16 (1)
stack b16 b4 (1)
pick-up b11 (1)
stack b11 b16 (1)
unstack b2 b1 (1)
put-down b2 (1)
unstack b1 b6 (1)
put-down b1 (1)
pick-up b2 (1)
stack b2 b1 (1)
pick-up b6 (1)
stack b6 b11 (1)
unstack b2 b1 (1)
put-down b2 (1)
pick-up b1 (1)
stack b1 b6 (1)
pick-up b2 (1)
stack b2 b1 (1)
[t=0.0632821s, 26300 KB] Plan length: 178 step(s).
[t=0.0632821s, 26300 KB] Plan cost: 178
[t=0.0632821s, 26300 KB] Expanded 1210 state(s).
[t=0.0632821s, 26300 KB] Reopened 0 state(s).
[t=0.0632821s, 26300 KB] Evaluated 1211 state(s).
[t=0.0632821s, 26300 KB] Evaluations: 2422
[t=0.0632821s, 26300 KB] Generated 8954 state(s).
[t=0.0632821s, 26300 KB] Dead ends: 0 state(s).
[t=0.0632821s, 26300 KB] Number of registered states: 1211
[t=0.0632821s, 26300 KB] Int hash set load factor: 1211/2048 = 0.591309
[t=0.0632821s, 26300 KB] Int hash set resizes: 11
[t=0.0632821s, 26300 KB] Search time: 0.0425553s
[t=0.0632821s, 26300 KB] Total time: 0.0632821s
Solution found.
Peak memory: 26300 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.20s
