INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_22/bws_problem_22_65.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.010s wall-clock]
1608 relevant atoms
1078 auxiliary atoms
2686 final queue length
4672 total queue pushes
Completing instantiation... [0.020s CPU, 0.017s wall-clock]
Instantiating: [0.030s CPU, 0.028s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
23 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.006s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.026s wall-clock]
1430 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
44 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.012s wall-clock]
Reordering and filtering variables...
45 of 45 variables necessary.
23 of 45 mutex groups necessary.
968 of 968 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 45
Translator derived variables: 0
Translator facts: 552
Translator goal facts: 18
Translator mutex groups: 23
Translator total mutex groups size: 529
Translator operators: 968
Translator axioms: 0
Translator task size: 8338
Translator peak memory: 36976 KB
Writing output... [0.010s CPU, 0.006s wall-clock]
Done! [0.090s CPU, 0.089s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=1.9688e-05s, 24488 KB] reading input...
[t=0.00271611s, 25340 KB] done reading input!
[t=0.00364783s, 25736 KB] Initializing landmark count heuristic...
[t=0.00367936s, 25736 KB] Generating landmark graph...
[t=0.0037418s, 25736 KB] Building a landmark graph with reasonable orders.
[t=0.00380058s, 25736 KB] Initializing Exploration...
[t=0.00408482s, 26000 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0133648s, 26396 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0134417s, 26396 KB] Landmarks generation time: 0.00970072s
[t=0.0134554s, 26396 KB] Discovered 91 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0134724s, 26396 KB] 261 edges
[t=0.0134825s, 26396 KB] approx. reasonable orders
[t=0.0139846s, 26396 KB] approx. obedient reasonable orders
[t=0.0140083s, 26396 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0140177s, 26396 KB] Landmarks generation time: 0.0103361s
[t=0.0140274s, 26396 KB] Discovered 91 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0140359s, 26396 KB] 269 edges
[t=0.0140445s, 26396 KB] Landmark graph generation time: 0.0103726s
[t=0.0140535s, 26396 KB] Landmark graph contains 91 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0140618s, 26396 KB] Landmark graph contains 269 orderings.
[t=0.0143718s, 26396 KB] Simplifying 3828 unary operators... done! [2904 unary operators]
[t=0.0153527s, 26528 KB] time to simplify: 0.00104227s
[t=0.0154772s, 26528 KB] Initializing additive heuristic...
[t=0.0154914s, 26528 KB] Initializing FF heuristic...
[t=0.0155413s, 26528 KB] Building successor generator...done!
[t=0.0157348s, 26528 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0157446s, 26528 KB] time for successor generation creation: 0.000165364s
[t=0.0157574s, 26528 KB] Variables: 45
[t=0.0157669s, 26528 KB] FactPairs: 552
[t=0.0157753s, 26528 KB] Bytes per state: 20
[t=0.0158681s, 26528 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0159023s, 26528 KB] 45 initial landmarks, 18 goal landmarks
[t=0.0159533s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0159628s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0159714s, 26528 KB] g=0, 1 evaluated, 0 expanded
[t=0.0159848s, 26528 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0159935s, 26528 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0161886s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0161985s, 26528 KB] g=2, 8 evaluated, 7 expanded
[t=0.0162612s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0162702s, 26528 KB] g=2, 10 evaluated, 9 expanded
[t=0.0165245s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0165336s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0165419s, 26528 KB] g=4, 20 evaluated, 19 expanded
[t=0.0166722s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0166813s, 26528 KB] g=6, 25 evaluated, 24 expanded
[t=0.0167403s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0167497s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0167579s, 26528 KB] g=6, 27 evaluated, 26 expanded
[t=0.0173605s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0173792s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0173884s, 26528 KB] g=10, 50 evaluated, 49 expanded
[t=0.0177989s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0178172s, 26528 KB] g=13, 66 evaluated, 65 expanded
[t=0.0186194s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0186645s, 26528 KB] g=14, 95 evaluated, 94 expanded
[t=0.0188921s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0189199s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0189284s, 26528 KB] g=16, 102 evaluated, 101 expanded
[t=0.0190824s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0190929s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0191011s, 26528 KB] g=18, 108 evaluated, 107 expanded
[t=0.0194218s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0194317s, 26528 KB] g=21, 121 evaluated, 120 expanded
[t=0.0198979s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0199081s, 26528 KB] g=24, 139 evaluated, 138 expanded
[t=0.0201274s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.02014s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0201503s, 26528 KB] g=26, 147 evaluated, 146 expanded
[t=0.0203102s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0203218s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0203303s, 26528 KB] g=28, 153 evaluated, 152 expanded
[t=0.0204968s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0205067s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0205152s, 26528 KB] g=30, 159 evaluated, 158 expanded
[t=0.0206993s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0207085s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0207165s, 26528 KB] g=32, 166 evaluated, 165 expanded
[t=0.0214342s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0214458s, 26528 KB] g=37, 195 evaluated, 194 expanded
[t=0.0215106s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0215203s, 26528 KB] g=36, 197 evaluated, 196 expanded
[t=0.0218088s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0218187s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0218269s, 26528 KB] g=38, 208 evaluated, 207 expanded
[t=0.0225621s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0225874s, 26528 KB] g=41, 235 evaluated, 234 expanded
[t=0.0226482s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0226576s, 26528 KB] g=42, 237 evaluated, 236 expanded
[t=0.0230052s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0230152s, 26528 KB] g=44, 251 evaluated, 250 expanded
[t=0.0233529s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0233628s, 26528 KB] g=46, 264 evaluated, 263 expanded
[t=0.0235389s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.023548s, 26528 KB] g=48, 271 evaluated, 270 expanded
[t=0.0239801s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0239895s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0240005s, 26528 KB] g=50, 289 evaluated, 288 expanded
[t=0.0241752s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0241843s, 26528 KB] g=52, 296 evaluated, 295 expanded
[t=0.0244491s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0244583s, 26528 KB] g=54, 307 evaluated, 306 expanded
[t=0.0255159s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0255256s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0255368s, 26528 KB] g=60, 352 evaluated, 351 expanded
[t=0.0263038s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0263155s, 26528 KB] g=56, 383 evaluated, 382 expanded
[t=0.0263588s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0263703s, 26528 KB] g=66, 384 evaluated, 383 expanded
[t=0.0266347s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0266442s, 26528 KB] g=68, 394 evaluated, 393 expanded
[t=0.0267869s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0267955s, 26528 KB] g=70, 400 evaluated, 399 expanded
[t=0.0315098s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0315237s, 26528 KB] g=70, 603 evaluated, 602 expanded
[t=0.0329665s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0329771s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0329853s, 26528 KB] g=82, 666 evaluated, 665 expanded
[t=0.0333436s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0333543s, 26528 KB] g=86, 682 evaluated, 681 expanded
[t=0.0334478s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0334572s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0334653s, 26528 KB] g=88, 686 evaluated, 685 expanded
[t=0.0356063s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0356425s, 26528 KB] g=102, 786 evaluated, 785 expanded
[t=0.0357347s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0357447s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0357527s, 26528 KB] g=104, 790 evaluated, 789 expanded
[t=0.0359418s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0359536s, 26528 KB] g=108, 799 evaluated, 798 expanded
[t=0.0360223s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0360311s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0360388s, 26528 KB] g=110, 802 evaluated, 801 expanded
[t=0.0367019s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0367196s, 26528 KB] g=128, 841 evaluated, 840 expanded
[t=0.0367646s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0367741s, 26528 KB] g=128, 843 evaluated, 842 expanded
[t=0.0368308s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0368399s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.036848s, 26528 KB] g=130, 846 evaluated, 845 expanded
[t=0.0370201s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0370319s, 26528 KB] g=138, 857 evaluated, 856 expanded
[t=0.0370869s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0370956s, 26528 KB] g=142, 861 evaluated, 860 expanded
[t=0.037112s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0371207s, 26528 KB] g=143, 862 evaluated, 861 expanded
[t=0.0371356s, 26528 KB] Solution found!
[t=0.037148s, 26528 KB] Actual search time: 0.0212424s
pick-up b15 (1)
stack b15 b1 (1)
unstack b16 b12 (1)
stack b16 b5 (1)
unstack b12 b3 (1)
put-down b12 (1)
unstack b3 b6 (1)
put-down b3 (1)
unstack b19 b13 (1)
stack b19 b12 (1)
unstack b21 b14 (1)
put-down b21 (1)
unstack b14 b9 (1)
stack b14 b19 (1)
pick-up b21 (1)
stack b21 b14 (1)
pick-up b6 (1)
stack b6 b9 (1)
unstack b15 b1 (1)
put-down b15 (1)
unstack b1 b10 (1)
put-down b1 (1)
unstack b10 b2 (1)
put-down b10 (1)
pick-up b15 (1)
stack b15 b1 (1)
unstack b2 b11 (1)
stack b2 b6 (1)
unstack b11 b17 (1)
stack b11 b3 (1)
pick-up b17 (1)
stack b17 b16 (1)
unstack b13 b7 (1)
put-down b13 (1)
unstack b7 b20 (1)
put-down b7 (1)
unstack b20 b4 (1)
put-down b20 (1)
unstack b4 b22 (1)
put-down b4 (1)
unstack b22 b18 (1)
stack b22 b21 (1)
unstack b18 b8 (1)
put-down b18 (1)
pick-up b20 (1)
stack b20 b8 (1)
pick-up b7 (1)
stack b7 b20 (1)
pick-up b13 (1)
stack b13 b7 (1)
unstack b15 b1 (1)
put-down b15 (1)
pick-up b1 (1)
stack b1 b11 (1)
pick-up b15 (1)
stack b15 b1 (1)
unstack b17 b16 (1)
put-down b17 (1)
unstack b16 b5 (1)
put-down b16 (1)
pick-up b17 (1)
stack b17 b16 (1)
pick-up b5 (1)
stack b5 b2 (1)
unstack b17 b16 (1)
put-down b17 (1)
pick-up b16 (1)
stack b16 b5 (1)
pick-up b17 (1)
stack b17 b16 (1)
unstack b13 b7 (1)
put-down b13 (1)
unstack b7 b20 (1)
put-down b7 (1)
pick-up b13 (1)
stack b13 b7 (1)
unstack b20 b8 (1)
put-down b20 (1)
pick-up b8 (1)
stack b8 b15 (1)
pick-up b20 (1)
stack b20 b8 (1)
unstack b13 b7 (1)
put-down b13 (1)
pick-up b7 (1)
stack b7 b20 (1)
pick-up b13 (1)
stack b13 b7 (1)
unstack b22 b21 (1)
put-down b22 (1)
unstack b21 b14 (1)
put-down b21 (1)
pick-up b22 (1)
stack b22 b21 (1)
unstack b14 b19 (1)
put-down b14 (1)
unstack b19 b12 (1)
put-down b19 (1)
pick-up b12 (1)
stack b12 b18 (1)
pick-up b19 (1)
stack b19 b12 (1)
pick-up b14 (1)
stack b14 b19 (1)
unstack b22 b21 (1)
put-down b22 (1)
pick-up b21 (1)
stack b21 b14 (1)
pick-up b22 (1)
stack b22 b21 (1)
unstack b17 b16 (1)
put-down b17 (1)
unstack b16 b5 (1)
put-down b16 (1)
unstack b5 b2 (1)
put-down b5 (1)
pick-up b16 (1)
stack b16 b5 (1)
pick-up b17 (1)
stack b17 b16 (1)
unstack b2 b6 (1)
put-down b2 (1)
unstack b6 b9 (1)
put-down b6 (1)
pick-up b9 (1)
stack b9 b10 (1)
pick-up b6 (1)
stack b6 b9 (1)
pick-up b2 (1)
stack b2 b6 (1)
unstack b17 b16 (1)
put-down b17 (1)
unstack b16 b5 (1)
put-down b16 (1)
pick-up b17 (1)
stack b17 b16 (1)
pick-up b5 (1)
stack b5 b2 (1)
unstack b17 b16 (1)
put-down b17 (1)
pick-up b16 (1)
stack b16 b5 (1)
pick-up b17 (1)
stack b17 b16 (1)
[t=0.0371572s, 26528 KB] Plan length: 144 step(s).
[t=0.0371572s, 26528 KB] Plan cost: 144
[t=0.0371572s, 26528 KB] Expanded 862 state(s).
[t=0.0371572s, 26528 KB] Reopened 0 state(s).
[t=0.0371572s, 26528 KB] Evaluated 863 state(s).
[t=0.0371572s, 26528 KB] Evaluations: 1726
[t=0.0371572s, 26528 KB] Generated 7805 state(s).
[t=0.0371572s, 26528 KB] Dead ends: 0 state(s).
[t=0.0371572s, 26528 KB] Number of registered states: 863
[t=0.0371572s, 26528 KB] Int hash set load factor: 863/1024 = 0.842773
[t=0.0371572s, 26528 KB] Int hash set resizes: 10
[t=0.0371572s, 26528 KB] Search time: 0.0212901s
[t=0.0371572s, 26528 KB] Total time: 0.0371572s
Solution found.
Peak memory: 26528 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.17s
