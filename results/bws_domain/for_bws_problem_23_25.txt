INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_23/bws_problem_23_25.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.010s wall-clock]
1750 relevant atoms
1173 auxiliary atoms
2923 final queue length
5090 total queue pushes
Completing instantiation... [0.020s CPU, 0.018s wall-clock]
Instantiating: [0.030s CPU, 0.031s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.010s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
24 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.007s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.027s wall-clock]
1564 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
46 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.014s wall-clock]
Reordering and filtering variables...
47 of 47 variables necessary.
24 of 47 mutex groups necessary.
1058 of 1058 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.007s wall-clock]
Translator variables: 47
Translator derived variables: 0
Translator facts: 600
Translator goal facts: 19
Translator mutex groups: 24
Translator total mutex groups size: 576
Translator operators: 1058
Translator axioms: 0
Translator task size: 9108
Translator peak memory: 37488 KB
Writing output... [0.010s CPU, 0.006s wall-clock]
Done! [0.100s CPU, 0.097s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=1.8729e-05s, 24488 KB] reading input...
[t=0.00309507s, 25428 KB] done reading input!
[t=0.00442967s, 25824 KB] Initializing landmark count heuristic...
[t=0.00451442s, 25824 KB] Generating landmark graph...
[t=0.00465486s, 25824 KB] Building a landmark graph with reasonable orders.
[t=0.00474058s, 25956 KB] Initializing Exploration...
[t=0.00511726s, 26256 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0168223s, 26652 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0169035s, 26652 KB] Landmarks generation time: 0.0122463s
[t=0.0169175s, 26652 KB] Discovered 98 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0169334s, 26652 KB] 401 edges
[t=0.0169436s, 26652 KB] approx. reasonable orders
[t=0.0187094s, 26652 KB] approx. obedient reasonable orders
[t=0.0187473s, 26652 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0187569s, 26652 KB] Landmarks generation time: 0.0142324s
[t=0.0187682s, 26652 KB] Discovered 98 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0187768s, 26652 KB] 429 edges
[t=0.0187873s, 26652 KB] Landmark graph generation time: 0.0142819s
[t=0.0187972s, 26652 KB] Landmark graph contains 98 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0188067s, 26652 KB] Landmark graph contains 429 orderings.
[t=0.0194787s, 26652 KB] Simplifying 4186 unary operators... done! [3174 unary operators]
[t=0.0205849s, 26652 KB] time to simplify: 0.00117918s
[t=0.0207288s, 26652 KB] Initializing additive heuristic...
[t=0.0207451s, 26652 KB] Initializing FF heuristic...
[t=0.0208077s, 26652 KB] Building successor generator...done!
[t=0.0211041s, 26652 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0211158s, 26652 KB] time for successor generation creation: 0.000251895s
[t=0.0211472s, 26652 KB] Variables: 47
[t=0.0211569s, 26652 KB] FactPairs: 600
[t=0.0211732s, 26652 KB] Bytes per state: 20
[t=0.0215386s, 26652 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.021603s, 26652 KB] 46 initial landmarks, 19 goal landmarks
[t=0.0217441s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0217574s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0217692s, 26652 KB] g=0, 1 evaluated, 0 expanded
[t=0.0217959s, 26652 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0218052s, 26652 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0219096s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0219196s, 26652 KB] g=1, 4 evaluated, 3 expanded
[t=0.0221902s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0222005s, 26652 KB] g=4, 14 evaluated, 13 expanded
[t=0.0223672s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0223769s, 26652 KB] g=4, 20 evaluated, 19 expanded
[t=0.0225166s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0225261s, 26652 KB] g=6, 25 evaluated, 24 expanded
[t=0.0228137s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0228236s, 26652 KB] g=8, 36 evaluated, 35 expanded
[t=0.0229866s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.022996s, 26652 KB] g=8, 42 evaluated, 41 expanded
[t=0.0230837s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.023093s, 26652 KB] g=10, 45 evaluated, 44 expanded
[t=0.0233965s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0234068s, 26652 KB] g=10, 57 evaluated, 56 expanded
[t=0.023494s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0235034s, 26652 KB] g=12, 60 evaluated, 59 expanded
[t=0.0239472s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0239595s, 26652 KB] g=14, 74 evaluated, 73 expanded
[t=0.0244816s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0244967s, 26652 KB] g=16, 94 evaluated, 93 expanded
[t=0.0246723s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0246838s, 26652 KB] g=14, 100 evaluated, 99 expanded
[t=0.0250622s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.025086s, 26652 KB] g=18, 114 evaluated, 113 expanded
[t=0.0255984s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0256092s, 26652 KB] g=20, 133 evaluated, 132 expanded
[t=0.0257031s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0257134s, 26652 KB] g=18, 136 evaluated, 135 expanded
[t=0.0261678s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0261781s, 26652 KB] g=20, 153 evaluated, 152 expanded
[t=0.0262185s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0262292s, 26652 KB] g=22, 154 evaluated, 153 expanded
[t=0.0267311s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0267444s, 26652 KB] g=22, 170 evaluated, 169 expanded
[t=0.026835s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0268451s, 26652 KB] g=23, 173 evaluated, 172 expanded
[t=0.0269132s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0269233s, 26652 KB] g=24, 175 evaluated, 174 expanded
[t=0.0273213s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.027331s, 26652 KB] g=24, 190 evaluated, 189 expanded
[t=0.0275485s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0275583s, 26652 KB] g=26, 198 evaluated, 197 expanded
[t=0.0277755s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0277853s, 26652 KB] g=26, 206 evaluated, 205 expanded
[t=0.028175s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0281852s, 26652 KB] g=28, 221 evaluated, 220 expanded
[t=0.0282544s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0282664s, 26652 KB] g=28, 223 evaluated, 222 expanded
[t=0.0286908s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0287012s, 26652 KB] g=30, 239 evaluated, 238 expanded
[t=0.0289052s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0289168s, 26652 KB] g=30, 244 evaluated, 243 expanded
[t=0.0292296s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0292409s, 26652 KB] g=32, 255 evaluated, 254 expanded
[t=0.0295875s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0296054s, 26652 KB] g=32, 265 evaluated, 264 expanded
[t=0.0297114s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0297217s, 26652 KB] g=34, 268 evaluated, 267 expanded
[t=0.030041s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0300527s, 26652 KB] g=36, 280 evaluated, 279 expanded
[t=0.0302672s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0302761s, 26652 KB] g=38, 288 evaluated, 287 expanded
[t=0.0305155s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0305248s, 26652 KB] g=40, 297 evaluated, 296 expanded
[t=0.0307918s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0308014s, 26652 KB] g=42, 307 evaluated, 306 expanded
[t=0.0314494s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0314633s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0314716s, 26652 KB] g=46, 328 evaluated, 327 expanded
[t=0.0316607s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.031671s, 26652 KB] g=48, 333 evaluated, 332 expanded
[t=0.0321974s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0322066s, 26652 KB] g=50, 353 evaluated, 352 expanded
[t=0.0323492s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0323581s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0323668s, 26652 KB] g=52, 358 evaluated, 357 expanded
[t=0.0330256s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.033043s, 26652 KB] g=58, 382 evaluated, 381 expanded
[t=0.0332371s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0332563s, 26652 KB] g=60, 388 evaluated, 387 expanded
[t=0.0334844s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0334936s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.033502s, 26652 KB] g=62, 396 evaluated, 395 expanded
[t=0.0352587s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0352848s, 26652 KB] g=72, 456 evaluated, 455 expanded
[t=0.0355858s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0355968s, 26652 KB] g=74, 467 evaluated, 466 expanded
[t=0.0417697s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0418071s, 26652 KB] g=88, 690 evaluated, 689 expanded
[t=0.0421127s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0421238s, 26652 KB] g=90, 701 evaluated, 700 expanded
[t=0.0423931s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0424034s, 26652 KB] g=92, 711 evaluated, 710 expanded
[t=0.0425903s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0425995s, 26652 KB] g=94, 718 evaluated, 717 expanded
[t=0.0427408s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0427499s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.042758s, 26652 KB] g=96, 723 evaluated, 722 expanded
[t=0.0434996s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0435094s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0435173s, 26652 KB] g=102, 752 evaluated, 751 expanded
[t=0.0439605s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.043973s, 26652 KB] g=102, 768 evaluated, 767 expanded
[t=0.0443862s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0444288s, 26652 KB] g=106, 784 evaluated, 783 expanded
[t=0.0445597s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0445703s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0445817s, 26652 KB] g=108, 788 evaluated, 787 expanded
[t=0.0454016s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0454438s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.045459s, 26652 KB] g=116, 813 evaluated, 812 expanded
[t=0.0455494s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0455601s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0455708s, 26652 KB] g=118, 816 evaluated, 815 expanded
[t=0.0468226s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.046838s, 26652 KB] g=136, 872 evaluated, 871 expanded
[t=0.0469038s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.046914s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0469241s, 26652 KB] g=138, 875 evaluated, 874 expanded
[t=0.047101s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0471108s, 26652 KB] g=146, 886 evaluated, 885 expanded
[t=0.0471758s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0471855s, 26652 KB] g=150, 890 evaluated, 889 expanded
[t=0.0472062s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0472154s, 26652 KB] g=151, 891 evaluated, 890 expanded
[t=0.0472337s, 26652 KB] Solution found!
[t=0.0472477s, 26652 KB] Actual search time: 0.0256212s
unstack b14 b21 (1)
put-down b14 (1)
unstack b12 b9 (1)
put-down b12 (1)
pick-up b14 (1)
stack b14 b9 (1)
unstack b21 b7 (1)
put-down b21 (1)
unstack b18 b3 (1)
stack b18 b7 (1)
unstack b20 b1 (1)
put-down b20 (1)
unstack b1 b6 (1)
stack b1 b21 (1)
unstack b3 b19 (1)
put-down b3 (1)
unstack b19 b17 (1)
stack b19 b3 (1)
unstack b17 b10 (1)
put-down b17 (1)
unstack b10 b2 (1)
put-down b10 (1)
unstack b2 b4 (1)
stack b2 b11 (1)
pick-up b20 (1)
stack b20 b10 (1)
unstack b4 b15 (1)
stack b4 b20 (1)
unstack b15 b23 (1)
stack b15 b19 (1)
unstack b23 b22 (1)
stack b23 b15 (1)
pick-up b12 (1)
stack b12 b22 (1)
pick-up b6 (1)
stack b6 b23 (1)
unstack b18 b7 (1)
put-down b18 (1)
unstack b2 b11 (1)
put-down b2 (1)
unstack b7 b5 (1)
stack b7 b2 (1)
pick-up b11 (1)
stack b11 b5 (1)
pick-up b18 (1)
stack b18 b7 (1)
unstack b11 b5 (1)
put-down b11 (1)
pick-up b5 (1)
stack b5 b12 (1)
pick-up b11 (1)
stack b11 b5 (1)
unstack b14 b9 (1)
put-down b14 (1)
unstack b9 b16 (1)
put-down b9 (1)
pick-up b16 (1)
stack b16 b18 (1)
pick-up b9 (1)
stack b9 b16 (1)
pick-up b14 (1)
stack b14 b9 (1)
unstack b6 b23 (1)
put-down b6 (1)
unstack b23 b15 (1)
put-down b23 (1)
unstack b15 b19 (1)
put-down b15 (1)
unstack b19 b3 (1)
put-down b19 (1)
pick-up b23 (1)
stack b23 b15 (1)
pick-up b6 (1)
stack b6 b23 (1)
pick-up b19 (1)
stack b19 b3 (1)
unstack b11 b5 (1)
put-down b11 (1)
unstack b19 b3 (1)
put-down b19 (1)
unstack b5 b12 (1)
put-down b5 (1)
unstack b12 b22 (1)
put-down b12 (1)
unstack b22 b8 (1)
put-down b22 (1)
unstack b8 b13 (1)
stack b8 b1 (1)
pick-up b12 (1)
stack b12 b22 (1)
pick-up b3 (1)
stack b3 b13 (1)
pick-up b11 (1)
stack b11 b5 (1)
pick-up b19 (1)
stack b19 b3 (1)
unstack b12 b22 (1)
put-down b12 (1)
pick-up b22 (1)
stack b22 b8 (1)
pick-up b12 (1)
stack b12 b22 (1)
unstack b11 b5 (1)
put-down b11 (1)
pick-up b5 (1)
stack b5 b12 (1)
pick-up b11 (1)
stack b11 b5 (1)
unstack b6 b23 (1)
put-down b6 (1)
unstack b23 b15 (1)
put-down b23 (1)
pick-up b15 (1)
stack b15 b19 (1)
pick-up b23 (1)
stack b23 b15 (1)
pick-up b6 (1)
stack b6 b23 (1)
unstack b14 b9 (1)
put-down b14 (1)
unstack b9 b16 (1)
put-down b9 (1)
unstack b16 b18 (1)
put-down b16 (1)
pick-up b9 (1)
stack b9 b16 (1)
pick-up b14 (1)
stack b14 b9 (1)
unstack b18 b7 (1)
put-down b18 (1)
unstack b7 b2 (1)
put-down b7 (1)
pick-up b2 (1)
stack b2 b11 (1)
pick-up b7 (1)
stack b7 b2 (1)
pick-up b18 (1)
stack b18 b7 (1)
unstack b14 b9 (1)
put-down b14 (1)
unstack b9 b16 (1)
put-down b9 (1)
pick-up b14 (1)
stack b14 b9 (1)
pick-up b16 (1)
stack b16 b18 (1)
unstack b14 b9 (1)
put-down b14 (1)
pick-up b9 (1)
stack b9 b16 (1)
pick-up b14 (1)
stack b14 b9 (1)
[t=0.0472587s, 26652 KB] Plan length: 152 step(s).
[t=0.0472587s, 26652 KB] Plan cost: 152
[t=0.0472587s, 26652 KB] Expanded 891 state(s).
[t=0.0472587s, 26652 KB] Reopened 0 state(s).
[t=0.0472587s, 26652 KB] Evaluated 892 state(s).
[t=0.0472587s, 26652 KB] Evaluations: 1784
[t=0.0472587s, 26652 KB] Generated 8432 state(s).
[t=0.0472587s, 26652 KB] Dead ends: 0 state(s).
[t=0.0472587s, 26652 KB] Number of registered states: 892
[t=0.0472587s, 26652 KB] Int hash set load factor: 892/1024 = 0.871094
[t=0.0472587s, 26652 KB] Int hash set resizes: 10
[t=0.0472587s, 26652 KB] Search time: 0.0257235s
[t=0.0472587s, 26652 KB] Total time: 0.0472587s
Solution found.
Peak memory: 26652 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.20s
