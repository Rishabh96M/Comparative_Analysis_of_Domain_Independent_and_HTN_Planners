INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_28/bws_problem_28_60.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.000s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.016s wall-clock]
2550 relevant atoms
1708 auxiliary atoms
4258 final queue length
7454 total queue pushes
Completing instantiation... [0.020s CPU, 0.027s wall-clock]
Instantiating: [0.040s CPU, 0.044s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
29 uncovered facts
Choosing groups: [0.000s CPU, 0.002s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.009s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.002s wall-clock]
Translating task: [0.050s CPU, 0.044s wall-clock]
2324 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
56 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.019s wall-clock]
Reordering and filtering variables...
57 of 57 variables necessary.
29 of 57 mutex groups necessary.
1568 of 1568 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.020s CPU, 0.011s wall-clock]
Translator variables: 57
Translator derived variables: 0
Translator facts: 870
Translator goal facts: 23
Translator mutex groups: 29
Translator total mutex groups size: 841
Translator operators: 1568
Translator axioms: 0
Translator task size: 13467
Translator peak memory: 40312 KB
Writing output... [0.010s CPU, 0.008s wall-clock]
Done! [0.140s CPU, 0.140s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.2608e-05s, 24488 KB] reading input...
[t=0.00460685s, 26076 KB] done reading input!
[t=0.00549327s, 26472 KB] Initializing landmark count heuristic...
[t=0.00552604s, 26472 KB] Generating landmark graph...
[t=0.00561614s, 26604 KB] Building a landmark graph with reasonable orders.
[t=0.00570289s, 26604 KB] Initializing Exploration...
[t=0.0061428s, 27016 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0268503s, 27676 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0269803s, 27676 KB] Landmarks generation time: 0.0213717s
[t=0.0270078s, 27676 KB] Discovered 118 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0270268s, 27676 KB] 616 edges
[t=0.0270374s, 27676 KB] approx. reasonable orders
[t=0.0281032s, 27676 KB] approx. obedient reasonable orders
[t=0.0281407s, 27676 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0281508s, 27676 KB] Landmarks generation time: 0.0226216s
[t=0.0281609s, 27676 KB] Discovered 118 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.028169s, 27676 KB] 622 edges
[t=0.0281775s, 27676 KB] Landmark graph generation time: 0.0226589s
[t=0.0281867s, 27676 KB] Landmark graph contains 118 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0281954s, 27676 KB] Landmark graph contains 622 orderings.
[t=0.0287315s, 27700 KB] Simplifying 6216 unary operators... done! [4704 unary operators]
[t=0.0302469s, 27832 KB] time to simplify: 0.00162125s
[t=0.0304502s, 27832 KB] Initializing additive heuristic...
[t=0.0304684s, 27832 KB] Initializing FF heuristic...
[t=0.0305219s, 27832 KB] Building successor generator...done!
[t=0.0308083s, 27832 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0308176s, 27832 KB] time for successor generation creation: 0.000249209s
[t=0.0308309s, 27832 KB] Variables: 57
[t=0.0308392s, 27832 KB] FactPairs: 870
[t=0.0308475s, 27832 KB] Bytes per state: 24
[t=0.0309376s, 27832 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0309716s, 27832 KB] 56 initial landmarks, 23 goal landmarks
[t=0.0310391s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 62
[t=0.0310491s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 46
[t=0.0310578s, 27832 KB] g=0, 1 evaluated, 0 expanded
[t=0.0310714s, 27832 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 62
[t=0.0310801s, 27832 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 46
[t=0.0312122s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 61
[t=0.0312224s, 27832 KB] g=1, 4 evaluated, 3 expanded
[t=0.0313903s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0314013s, 27832 KB] g=2, 8 evaluated, 7 expanded
[t=0.0315225s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 60
[t=0.0315315s, 27832 KB] g=3, 11 evaluated, 10 expanded
[t=0.0318033s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.0318131s, 27832 KB] g=6, 18 evaluated, 17 expanded
[t=0.0319377s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 58
[t=0.0319468s, 27832 KB] g=7, 21 evaluated, 20 expanded
[t=0.03241s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 57
[t=0.0324206s, 27832 KB] g=10, 33 evaluated, 32 expanded
[t=0.0329082s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0329187s, 27832 KB] g=12, 46 evaluated, 45 expanded
[t=0.0331921s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.0332023s, 27832 KB] g=6, 53 evaluated, 52 expanded
[t=0.0334369s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0334467s, 27832 KB] g=14, 59 evaluated, 58 expanded
[t=0.0341664s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0341793s, 27832 KB] g=16, 78 evaluated, 77 expanded
[t=0.0346713s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0346967s, 27832 KB] g=10, 91 evaluated, 90 expanded
[t=0.0349331s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0349441s, 27832 KB] g=18, 97 evaluated, 96 expanded
[t=0.0351447s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0351548s, 27832 KB] g=12, 102 evaluated, 101 expanded
[t=0.0356138s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0356242s, 27832 KB] g=14, 114 evaluated, 113 expanded
[t=0.0358202s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.035831s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0358401s, 27832 KB] g=16, 119 evaluated, 118 expanded
[t=0.0359637s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0359732s, 27832 KB] g=17, 122 evaluated, 121 expanded
[t=0.0362899s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0363s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0363096s, 27832 KB] g=20, 130 evaluated, 129 expanded
[t=0.037358s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0373722s, 27832 KB] g=26, 158 evaluated, 157 expanded
[t=0.0378884s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0378995s, 27832 KB] g=28, 172 evaluated, 171 expanded
[t=0.0381302s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0381396s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0381479s, 27832 KB] g=30, 178 evaluated, 177 expanded
[t=0.0387621s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0387718s, 27832 KB] g=36, 194 evaluated, 193 expanded
[t=0.039043s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0390536s, 27832 KB] g=38, 201 evaluated, 200 expanded
[t=0.0392871s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0392964s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0393049s, 27832 KB] g=40, 207 evaluated, 206 expanded
[t=0.0397951s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.039806s, 27832 KB] g=45, 220 evaluated, 219 expanded
[t=0.0398564s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0398658s, 27832 KB] g=46, 221 evaluated, 220 expanded
[t=0.0401749s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0401844s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0401932s, 27832 KB] g=48, 229 evaluated, 228 expanded
[t=0.0404244s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0404334s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0404421s, 27832 KB] g=50, 235 evaluated, 234 expanded
[t=0.040492s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0405038s, 27832 KB] g=51, 236 evaluated, 235 expanded
[t=0.0405533s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0405621s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0405699s, 27832 KB] g=52, 237 evaluated, 236 expanded
[t=0.040841s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.04085s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0408585s, 27832 KB] g=54, 244 evaluated, 243 expanded
[t=0.0414924s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0415038s, 27832 KB] g=58, 260 evaluated, 259 expanded
[t=0.0418103s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0418193s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0418274s, 27832 KB] g=60, 268 evaluated, 267 expanded
[t=0.0421376s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0421514s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0421604s, 27832 KB] g=62, 275 evaluated, 274 expanded
[t=0.0423626s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0423722s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0423807s, 27832 KB] g=62, 280 evaluated, 279 expanded
[t=0.0426612s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0426705s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.042679s, 27832 KB] g=64, 287 evaluated, 286 expanded
[t=0.0427296s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0427389s, 27832 KB] g=65, 288 evaluated, 287 expanded
[t=0.042788s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0427968s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0428053s, 27832 KB] g=66, 289 evaluated, 288 expanded
[t=0.0430401s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0430494s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0430579s, 27832 KB] g=68, 295 evaluated, 294 expanded
[t=0.0433228s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0433323s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0433403s, 27832 KB] g=70, 302 evaluated, 301 expanded
[t=0.0435703s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0435795s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.043588s, 27832 KB] g=72, 308 evaluated, 307 expanded
[t=0.0444962s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.044506s, 27832 KB] g=76, 333 evaluated, 332 expanded
[t=0.044696s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0447057s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.044714s, 27832 KB] g=78, 338 evaluated, 337 expanded
[t=0.0467521s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0467696s, 27832 KB] g=86, 394 evaluated, 393 expanded
[t=0.0470008s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0470102s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0470188s, 27832 KB] g=88, 400 evaluated, 399 expanded
[t=0.0497869s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0498001s, 27832 KB] g=102, 476 evaluated, 475 expanded
[t=0.0499543s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0499647s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0499736s, 27832 KB] g=104, 480 evaluated, 479 expanded
[t=0.0503081s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0503194s, 27832 KB] g=108, 489 evaluated, 488 expanded
[t=0.0504383s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0504482s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0504566s, 27832 KB] g=110, 492 evaluated, 491 expanded
[t=0.0557779s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0558671s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0558776s, 27832 KB] g=144, 646 evaluated, 645 expanded
[t=0.056156s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0561667s, 27832 KB] g=148, 655 evaluated, 654 expanded
[t=0.0562624s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0562718s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.05628s, 27832 KB] g=150, 658 evaluated, 657 expanded
[t=0.0567749s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0568145s, 27832 KB] g=162, 675 evaluated, 674 expanded
[t=0.0569005s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0569094s, 27832 KB] g=166, 679 evaluated, 678 expanded
[t=0.0569299s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.056939s, 27832 KB] g=167, 680 evaluated, 679 expanded
[t=0.0569571s, 27832 KB] Solution found!
[t=0.0569727s, 27832 KB] Actual search time: 0.0259978s
unstack b26 b22 (1)
put-down b26 (1)
unstack b22 b27 (1)
put-down b22 (1)
unstack b27 b28 (1)
put-down b27 (1)
unstack b28 b18 (1)
put-down b28 (1)
unstack b18 b21 (1)
put-down b18 (1)
unstack b21 b24 (1)
stack b21 b4 (1)
unstack b3 b14 (1)
stack b3 b24 (1)
unstack b14 b25 (1)
stack b14 b28 (1)
unstack b25 b9 (1)
put-down b25 (1)
unstack b9 b5 (1)
stack b9 b21 (1)
unstack b3 b24 (1)
put-down b3 (1)
unstack b24 b15 (1)
put-down b24 (1)
pick-up b15 (1)
stack b15 b14 (1)
pick-up b24 (1)
stack b24 b15 (1)
pick-up b3 (1)
stack b3 b24 (1)
unstack b9 b21 (1)
put-down b9 (1)
unstack b21 b4 (1)
put-down b21 (1)
unstack b4 b19 (1)
stack b4 b5 (1)
pick-up b21 (1)
stack b21 b4 (1)
pick-up b9 (1)
stack b9 b21 (1)
unstack b19 b20 (1)
put-down b19 (1)
unstack b20 b1 (1)
put-down b20 (1)
unstack b1 b8 (1)
stack b1 b26 (1)
pick-up b19 (1)
stack b19 b20 (1)
unstack b8 b10 (1)
stack b8 b22 (1)
unstack b10 b16 (1)
stack b10 b2 (1)
unstack b16 b13 (1)
stack b16 b9 (1)
unstack b13 b23 (1)
put-down b13 (1)
unstack b23 b6 (1)
put-down b23 (1)
pick-up b13 (1)
stack b13 b23 (1)
unstack b6 b11 (1)
stack b6 b27 (1)
unstack b11 b17 (1)
stack b11 b16 (1)
unstack b17 b12 (1)
stack b17 b8 (1)
unstack b12 b7 (1)
stack b12 b18 (1)
pick-up b25 (1)
stack b25 b6 (1)
pick-up b7 (1)
stack b7 b13 (1)
unstack b19 b20 (1)
put-down b19 (1)
pick-up b20 (1)
stack b20 b1 (1)
pick-up b19 (1)
stack b19 b20 (1)
unstack b17 b8 (1)
put-down b17 (1)
unstack b8 b22 (1)
put-down b8 (1)
pick-up b22 (1)
stack b22 b11 (1)
pick-up b8 (1)
stack b8 b22 (1)
pick-up b17 (1)
stack b17 b8 (1)
unstack b3 b24 (1)
put-down b3 (1)
unstack b24 b15 (1)
put-down b24 (1)
pick-up b3 (1)
stack b3 b24 (1)
unstack b15 b14 (1)
put-down b15 (1)
unstack b14 b28 (1)
put-down b14 (1)
pick-up b28 (1)
stack b28 b12 (1)
pick-up b14 (1)
stack b14 b28 (1)
pick-up b15 (1)
stack b15 b14 (1)
unstack b3 b24 (1)
put-down b3 (1)
pick-up b24 (1)
stack b24 b15 (1)
pick-up b3 (1)
stack b3 b24 (1)
unstack b17 b8 (1)
put-down b17 (1)
unstack b8 b22 (1)
put-down b8 (1)
pick-up b17 (1)
stack b17 b8 (1)
unstack b22 b11 (1)
put-down b22 (1)
unstack b11 b16 (1)
put-down b11 (1)
pick-up b22 (1)
stack b22 b11 (1)
unstack b17 b8 (1)
put-down b17 (1)
pick-up b8 (1)
stack b8 b22 (1)
pick-up b17 (1)
stack b17 b8 (1)
unstack b16 b9 (1)
put-down b16 (1)
unstack b9 b21 (1)
put-down b9 (1)
pick-up b16 (1)
stack b16 b9 (1)
unstack b21 b4 (1)
put-down b21 (1)
unstack b4 b5 (1)
put-down b4 (1)
pick-up b5 (1)
stack b5 b7 (1)
pick-up b4 (1)
stack b4 b5 (1)
pick-up b21 (1)
stack b21 b4 (1)
unstack b16 b9 (1)
put-down b16 (1)
pick-up b9 (1)
stack b9 b21 (1)
pick-up b16 (1)
stack b16 b9 (1)
unstack b17 b8 (1)
put-down b17 (1)
unstack b8 b22 (1)
put-down b8 (1)
pick-up b17 (1)
stack b17 b8 (1)
unstack b22 b11 (1)
put-down b22 (1)
pick-up b11 (1)
stack b11 b16 (1)
pick-up b22 (1)
stack b22 b11 (1)
unstack b17 b8 (1)
put-down b17 (1)
pick-up b8 (1)
stack b8 b22 (1)
pick-up b17 (1)
stack b17 b8 (1)
[t=0.0569826s, 27832 KB] Plan length: 168 step(s).
[t=0.0569826s, 27832 KB] Plan cost: 168
[t=0.0569826s, 27832 KB] Expanded 680 state(s).
[t=0.0569826s, 27832 KB] Reopened 0 state(s).
[t=0.0569826s, 27832 KB] Evaluated 681 state(s).
[t=0.0569826s, 27832 KB] Evaluations: 1362
[t=0.0569826s, 27832 KB] Generated 6651 state(s).
[t=0.0569826s, 27832 KB] Dead ends: 0 state(s).
[t=0.0569826s, 27832 KB] Number of registered states: 681
[t=0.0569826s, 27832 KB] Int hash set load factor: 681/1024 = 0.665039
[t=0.0569826s, 27832 KB] Int hash set resizes: 10
[t=0.0569826s, 27832 KB] Search time: 0.0260454s
[t=0.0569826s, 27832 KB] Total time: 0.0569826s
Solution found.
Peak memory: 27832 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.24s
