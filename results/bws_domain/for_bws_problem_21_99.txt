INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_21/bws_problem_21_99.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.009s wall-clock]
1472 relevant atoms
987 auxiliary atoms
2459 final queue length
4269 total queue pushes
Completing instantiation... [0.020s CPU, 0.016s wall-clock]
Instantiating: [0.030s CPU, 0.026s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
22 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.006s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.010s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
1302 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
42 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.011s wall-clock]
Reordering and filtering variables...
43 of 43 variables necessary.
22 of 43 mutex groups necessary.
882 of 882 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 43
Translator derived variables: 0
Translator facts: 506
Translator goal facts: 18
Translator mutex groups: 22
Translator total mutex groups size: 484
Translator operators: 882
Translator axioms: 0
Translator task size: 7603
Translator peak memory: 36456 KB
Writing output... [0.010s CPU, 0.005s wall-clock]
Done! [0.080s CPU, 0.082s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.7084e-05s, 24488 KB] reading input...
[t=0.00357556s, 25268 KB] done reading input!
[t=0.00442048s, 25664 KB] Initializing landmark count heuristic...
[t=0.00445679s, 25664 KB] Generating landmark graph...
[t=0.00451247s, 25664 KB] Building a landmark graph with reasonable orders.
[t=0.00456633s, 25664 KB] Initializing Exploration...
[t=0.0048792s, 25852 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0142471s, 26380 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.01433s, 26380 KB] Landmarks generation time: 0.00981647s
[t=0.014343s, 26380 KB] Discovered 94 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.014359s, 26380 KB] 385 edges
[t=0.014369s, 26380 KB] approx. reasonable orders
[t=0.0154246s, 26380 KB] approx. obedient reasonable orders
[t=0.0154543s, 26380 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0154636s, 26380 KB] Landmarks generation time: 0.0110038s
[t=0.0154729s, 26380 KB] Discovered 94 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0154809s, 26380 KB] 407 edges
[t=0.0154892s, 26380 KB] Landmark graph generation time: 0.0110401s
[t=0.0154984s, 26380 KB] Landmark graph contains 94 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0155064s, 26380 KB] Landmark graph contains 407 orderings.
[t=0.0159784s, 26380 KB] Simplifying 3486 unary operators... done! [2646 unary operators]
[t=0.016812s, 26380 KB] time to simplify: 0.000890519s
[t=0.0169237s, 26380 KB] Initializing additive heuristic...
[t=0.0169375s, 26380 KB] Initializing FF heuristic...
[t=0.0169879s, 26380 KB] Building successor generator...done!
[t=0.0171657s, 26380 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0171743s, 26380 KB] time for successor generation creation: 0.000145968s
[t=0.0171855s, 26380 KB] Variables: 43
[t=0.0171939s, 26380 KB] FactPairs: 506
[t=0.017202s, 26380 KB] Bytes per state: 16
[t=0.0172945s, 26380 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0173302s, 26380 KB] 43 initial landmarks, 18 goal landmarks
[t=0.0173789s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0173887s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0173971s, 26380 KB] g=0, 1 evaluated, 0 expanded
[t=0.0174103s, 26380 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0174193s, 26380 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0174553s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0174642s, 26380 KB] g=1, 2 evaluated, 1 expanded
[t=0.0176948s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0177049s, 26380 KB] g=4, 11 evaluated, 10 expanded
[t=0.0178123s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.017822s, 26380 KB] g=4, 15 evaluated, 14 expanded
[t=0.0180345s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0180439s, 26380 KB] g=6, 24 evaluated, 23 expanded
[t=0.0182978s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0183071s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0183153s, 26380 KB] g=8, 35 evaluated, 34 expanded
[t=0.0184348s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0184438s, 26380 KB] g=10, 40 evaluated, 39 expanded
[t=0.0185176s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0185262s, 26380 KB] g=10, 43 evaluated, 42 expanded
[t=0.0186856s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0186942s, 26380 KB] g=12, 50 evaluated, 49 expanded
[t=0.0191011s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0191107s, 26380 KB] g=15, 68 evaluated, 67 expanded
[t=0.0191428s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0191514s, 26380 KB] g=16, 69 evaluated, 68 expanded
[t=0.0192991s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.019309s, 26380 KB] g=18, 75 evaluated, 74 expanded
[t=0.0193635s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0193721s, 26380 KB] g=18, 77 evaluated, 76 expanded
[t=0.0195797s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0195889s, 26380 KB] g=20, 86 evaluated, 85 expanded
[t=0.0196904s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0196993s, 26380 KB] g=20, 90 evaluated, 89 expanded
[t=0.0198714s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.019882s, 26380 KB] g=22, 97 evaluated, 96 expanded
[t=0.0200462s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0200554s, 26380 KB] g=22, 104 evaluated, 103 expanded
[t=0.0200886s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0200974s, 26380 KB] g=24, 105 evaluated, 104 expanded
[t=0.0204445s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0204542s, 26380 KB] g=24, 120 evaluated, 119 expanded
[t=0.0212689s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0212792s, 26380 KB] g=32, 156 evaluated, 155 expanded
[t=0.0240273s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0240949s, 26380 KB] g=40, 272 evaluated, 271 expanded
[t=0.0245122s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0245619s, 26380 KB] g=42, 282 evaluated, 281 expanded
[t=0.0249236s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0249454s, 26380 KB] g=44, 293 evaluated, 292 expanded
[t=0.025406s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0254367s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.025454s, 26380 KB] g=46, 304 evaluated, 303 expanded
[t=0.0258491s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0258715s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0258896s, 26380 KB] g=48, 314 evaluated, 313 expanded
[t=0.0262186s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0262346s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.026243s, 26380 KB] g=50, 323 evaluated, 322 expanded
[t=0.0264596s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0264693s, 26380 KB] g=52, 332 evaluated, 331 expanded
[t=0.0265042s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0265134s, 26380 KB] g=52, 333 evaluated, 332 expanded
[t=0.0268606s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0268696s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.026878s, 26380 KB] g=54, 348 evaluated, 347 expanded
[t=0.0269884s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0270009s, 26380 KB] g=55, 352 evaluated, 351 expanded
[t=0.0270445s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0270539s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0270618s, 26380 KB] g=56, 353 evaluated, 352 expanded
[t=0.0272535s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0272629s, 26380 KB] g=58, 361 evaluated, 360 expanded
[t=0.0273198s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0273289s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0273371s, 26380 KB] g=58, 363 evaluated, 362 expanded
[t=0.0275049s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0275139s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0275221s, 26380 KB] g=60, 370 evaluated, 369 expanded
[t=0.0276669s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0276759s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0276842s, 26380 KB] g=62, 376 evaluated, 375 expanded
[t=0.0281838s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0282087s, 26380 KB] g=66, 395 evaluated, 394 expanded
[t=0.02834s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0283534s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0283637s, 26380 KB] g=68, 400 evaluated, 399 expanded
[t=0.0295443s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0295569s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0295656s, 26380 KB] g=76, 451 evaluated, 450 expanded
[t=0.0296662s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0296761s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0296844s, 26380 KB] g=78, 455 evaluated, 454 expanded
[t=0.0305898s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0305997s, 26380 KB] g=90, 498 evaluated, 497 expanded
[t=0.0307586s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0307677s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0307759s, 26380 KB] g=96, 505 evaluated, 504 expanded
[t=0.0353789s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.035395s, 26380 KB] g=130, 737 evaluated, 736 expanded
[t=0.0355612s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0355703s, 26380 KB] g=134, 746 evaluated, 745 expanded
[t=0.0356281s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0356369s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0356448s, 26380 KB] g=136, 749 evaluated, 748 expanded
[t=0.0362638s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.036276s, 26380 KB] g=152, 787 evaluated, 786 expanded
[t=0.0364123s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0364218s, 26380 KB] g=160, 797 evaluated, 796 expanded
[t=0.0364747s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0364836s, 26380 KB] g=164, 801 evaluated, 800 expanded
[t=0.0365003s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0365128s, 26380 KB] g=165, 802 evaluated, 801 expanded
[t=0.0365279s, 26380 KB] Solution found!
[t=0.0365392s, 26380 KB] Actual search time: 0.0192058s
unstack b1 b15 (1)
put-down b1 (1)
unstack b20 b11 (1)
put-down b20 (1)
unstack b11 b2 (1)
stack b11 b15 (1)
pick-up b1 (1)
stack b1 b11 (1)
unstack b2 b14 (1)
put-down b2 (1)
pick-up b4 (1)
stack b4 b2 (1)
unstack b17 b7 (1)
put-down b17 (1)
unstack b7 b10 (1)
stack b7 b4 (1)
unstack b10 b18 (1)
stack b10 b20 (1)
pick-up b14 (1)
stack b14 b10 (1)
pick-up b17 (1)
stack b17 b7 (1)
unstack b18 b8 (1)
stack b18 b17 (1)
unstack b8 b3 (1)
put-down b8 (1)
unstack b3 b19 (1)
put-down b3 (1)
unstack b14 b10 (1)
put-down b14 (1)
unstack b10 b20 (1)
put-down b10 (1)
unstack b1 b11 (1)
put-down b1 (1)
unstack b11 b15 (1)
put-down b11 (1)
unstack b15 b9 (1)
put-down b15 (1)
unstack b9 b5 (1)
stack b9 b3 (1)
unstack b5 b21 (1)
put-down b5 (1)
unstack b21 b12 (1)
put-down b21 (1)
unstack b12 b13 (1)
stack b12 b9 (1)
pick-up b1 (1)
stack b1 b11 (1)
unstack b13 b6 (1)
stack b13 b18 (1)
pick-up b19 (1)
stack b19 b12 (1)
unstack b6 b16 (1)
stack b6 b14 (1)
pick-up b16 (1)
stack b16 b5 (1)
pick-up b20 (1)
stack b20 b21 (1)
pick-up b10 (1)
stack b10 b20 (1)
pick-up b8 (1)
stack b8 b6 (1)
unstack b1 b11 (1)
put-down b1 (1)
pick-up b11 (1)
stack b11 b15 (1)
pick-up b1 (1)
stack b1 b11 (1)
unstack b8 b6 (1)
put-down b8 (1)
unstack b6 b14 (1)
put-down b6 (1)
pick-up b14 (1)
stack b14 b10 (1)
pick-up b6 (1)
stack b6 b14 (1)
pick-up b8 (1)
stack b8 b6 (1)
unstack b19 b12 (1)
put-down b19 (1)
unstack b12 b9 (1)
put-down b12 (1)
pick-up b19 (1)
stack b19 b12 (1)
unstack b9 b3 (1)
put-down b9 (1)
pick-up b3 (1)
stack b3 b13 (1)
unstack b19 b12 (1)
put-down b19 (1)
pick-up b12 (1)
stack b12 b9 (1)
pick-up b19 (1)
stack b19 b12 (1)
unstack b3 b13 (1)
put-down b3 (1)
unstack b13 b18 (1)
put-down b13 (1)
pick-up b3 (1)
stack b3 b13 (1)
unstack b19 b12 (1)
put-down b19 (1)
unstack b12 b9 (1)
put-down b12 (1)
pick-up b19 (1)
stack b19 b12 (1)
pick-up b9 (1)
stack b9 b3 (1)
unstack b19 b12 (1)
put-down b19 (1)
pick-up b12 (1)
stack b12 b9 (1)
pick-up b19 (1)
stack b19 b12 (1)
unstack b18 b17 (1)
put-down b18 (1)
unstack b17 b7 (1)
put-down b17 (1)
pick-up b18 (1)
stack b18 b17 (1)
unstack b7 b4 (1)
put-down b7 (1)
unstack b4 b2 (1)
put-down b4 (1)
pick-up b2 (1)
stack b2 b8 (1)
pick-up b4 (1)
stack b4 b2 (1)
pick-up b7 (1)
stack b7 b4 (1)
unstack b18 b17 (1)
put-down b18 (1)
pick-up b17 (1)
stack b17 b7 (1)
pick-up b18 (1)
stack b18 b17 (1)
unstack b19 b12 (1)
put-down b19 (1)
unstack b12 b9 (1)
put-down b12 (1)
unstack b9 b3 (1)
put-down b9 (1)
pick-up b12 (1)
stack b12 b9 (1)
pick-up b19 (1)
stack b19 b12 (1)
unstack b3 b13 (1)
put-down b3 (1)
pick-up b13 (1)
stack b13 b18 (1)
pick-up b3 (1)
stack b3 b13 (1)
unstack b19 b12 (1)
put-down b19 (1)
unstack b12 b9 (1)
put-down b12 (1)
pick-up b19 (1)
stack b19 b12 (1)
pick-up b9 (1)
stack b9 b3 (1)
unstack b19 b12 (1)
put-down b19 (1)
pick-up b12 (1)
stack b12 b9 (1)
pick-up b19 (1)
stack b19 b12 (1)
[t=0.0365487s, 26380 KB] Plan length: 166 step(s).
[t=0.0365487s, 26380 KB] Plan cost: 166
[t=0.0365487s, 26380 KB] Expanded 802 state(s).
[t=0.0365487s, 26380 KB] Reopened 0 state(s).
[t=0.0365487s, 26380 KB] Evaluated 803 state(s).
[t=0.0365487s, 26380 KB] Evaluations: 1606
[t=0.0365487s, 26380 KB] Generated 6372 state(s).
[t=0.0365487s, 26380 KB] Dead ends: 0 state(s).
[t=0.0365487s, 26380 KB] Number of registered states: 803
[t=0.0365487s, 26380 KB] Int hash set load factor: 803/1024 = 0.78418
[t=0.0365487s, 26380 KB] Int hash set resizes: 10
[t=0.0365487s, 26380 KB] Search time: 0.0192546s
[t=0.0365487s, 26380 KB] Total time: 0.0365487s
Solution found.
Peak memory: 26380 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.17s
