INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_23/bws_problem_23_82.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.011s wall-clock]
1750 relevant atoms
1173 auxiliary atoms
2923 final queue length
5089 total queue pushes
Completing instantiation... [0.020s CPU, 0.019s wall-clock]
Instantiating: [0.030s CPU, 0.031s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
24 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.007s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.028s wall-clock]
1564 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
46 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
47 of 47 variables necessary.
24 of 47 mutex groups necessary.
1058 of 1058 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.008s wall-clock]
Translator variables: 47
Translator derived variables: 0
Translator facts: 600
Translator goal facts: 17
Translator mutex groups: 24
Translator total mutex groups size: 576
Translator operators: 1058
Translator axioms: 0
Translator task size: 9106
Translator peak memory: 37488 KB
Writing output... [0.010s CPU, 0.005s wall-clock]
Done! [0.100s CPU, 0.097s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=1.977e-05s, 24488 KB] reading input...
[t=0.00297449s, 25428 KB] done reading input!
[t=0.00397934s, 25824 KB] Initializing landmark count heuristic...
[t=0.00403922s, 25824 KB] Generating landmark graph...
[t=0.00411817s, 25824 KB] Building a landmark graph with reasonable orders.
[t=0.00420917s, 25956 KB] Initializing Exploration...
[t=0.00459986s, 26256 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0155774s, 26652 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0156428s, 26652 KB] Landmarks generation time: 0.0115242s
[t=0.0156568s, 26652 KB] Discovered 98 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0156731s, 26652 KB] 389 edges
[t=0.0156838s, 26652 KB] approx. reasonable orders
[t=0.0174029s, 26652 KB] approx. obedient reasonable orders
[t=0.0174386s, 26652 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.017464s, 26652 KB] Landmarks generation time: 0.0134254s
[t=0.0174769s, 26652 KB] Discovered 98 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0174857s, 26652 KB] 420 edges
[t=0.0174969s, 26652 KB] Landmark graph generation time: 0.0134652s
[t=0.017506s, 26652 KB] Landmark graph contains 98 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0175151s, 26652 KB] Landmark graph contains 420 orderings.
[t=0.0180494s, 26652 KB] Simplifying 4186 unary operators... done! [3174 unary operators]
[t=0.0190511s, 26652 KB] time to simplify: 0.00107045s
[t=0.0191868s, 26652 KB] Initializing additive heuristic...
[t=0.0192015s, 26652 KB] Initializing FF heuristic...
[t=0.0192523s, 26652 KB] Building successor generator...done!
[t=0.0194692s, 26652 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0194782s, 26652 KB] time for successor generation creation: 0.000183878s
[t=0.0194909s, 26652 KB] Variables: 47
[t=0.0194995s, 26652 KB] FactPairs: 600
[t=0.0195073s, 26652 KB] Bytes per state: 20
[t=0.0195891s, 26652 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0196204s, 26652 KB] 47 initial landmarks, 17 goal landmarks
[t=0.0196746s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.019684s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0196923s, 26652 KB] g=0, 1 evaluated, 0 expanded
[t=0.0197059s, 26652 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0197147s, 26652 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0198663s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0198759s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0198841s, 26652 KB] g=2, 6 evaluated, 5 expanded
[t=0.0200263s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0200351s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.020043s, 26652 KB] g=4, 11 evaluated, 10 expanded
[t=0.0201839s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.020193s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0202015s, 26652 KB] g=6, 16 evaluated, 15 expanded
[t=0.0203436s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0203532s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0203609s, 26652 KB] g=8, 21 evaluated, 20 expanded
[t=0.0204973s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0205073s, 26652 KB] g=10, 26 evaluated, 25 expanded
[t=0.0205693s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0205784s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0205868s, 26652 KB] g=10, 28 evaluated, 27 expanded
[t=0.0207294s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0207392s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0207474s, 26652 KB] g=12, 33 evaluated, 32 expanded
[t=0.0208614s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0208804s, 26652 KB] g=14, 37 evaluated, 36 expanded
[t=0.0211708s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0211925s, 26652 KB] g=17, 47 evaluated, 46 expanded
[t=0.0215655s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0215802s, 26652 KB] g=20, 61 evaluated, 60 expanded
[t=0.0216689s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0216779s, 26652 KB] g=20, 64 evaluated, 63 expanded
[t=0.0219784s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0220004s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0220093s, 26652 KB] g=22, 74 evaluated, 73 expanded
[t=0.022223s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0222326s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0222413s, 26652 KB] g=24, 82 evaluated, 81 expanded
[t=0.0224535s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0224622s, 26652 KB] g=26, 90 evaluated, 89 expanded
[t=0.0226746s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0226905s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0227013s, 26652 KB] g=26, 97 evaluated, 96 expanded
[t=0.0229318s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0229539s, 26652 KB] g=28, 104 evaluated, 103 expanded
[t=0.0230918s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0231009s, 26652 KB] g=30, 109 evaluated, 108 expanded
[t=0.0233235s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.023333s, 26652 KB] g=33, 117 evaluated, 116 expanded
[t=0.023371s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0233821s, 26652 KB] g=34, 118 evaluated, 117 expanded
[t=0.0235403s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0235509s, 26652 KB] g=36, 123 evaluated, 122 expanded
[t=0.0236218s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0236341s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0236429s, 26652 KB] g=36, 125 evaluated, 124 expanded
[t=0.0238396s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0238503s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0238583s, 26652 KB] g=38, 131 evaluated, 130 expanded
[t=0.0240098s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0240194s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0240272s, 26652 KB] g=40, 136 evaluated, 135 expanded
[t=0.0240819s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0240908s, 26652 KB] g=41, 137 evaluated, 136 expanded
[t=0.0241286s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0241375s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0241514s, 26652 KB] g=42, 138 evaluated, 137 expanded
[t=0.02427s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0242796s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0242877s, 26652 KB] g=44, 142 evaluated, 141 expanded
[t=0.0244275s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0244372s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0244457s, 26652 KB] g=46, 147 evaluated, 146 expanded
[t=0.0246558s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0246664s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0246765s, 26652 KB] g=48, 155 evaluated, 154 expanded
[t=0.0248031s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0248124s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0248205s, 26652 KB] g=50, 160 evaluated, 159 expanded
[t=0.0248977s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0249065s, 26652 KB] g=51, 163 evaluated, 162 expanded
[t=0.024944s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0249549s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0249631s, 26652 KB] g=52, 164 evaluated, 163 expanded
[t=0.0252147s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0252238s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0252316s, 26652 KB] g=58, 175 evaluated, 174 expanded
[t=0.0257509s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0257656s, 26652 KB] g=61, 198 evaluated, 197 expanded
[t=0.0257949s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0258046s, 26652 KB] g=62, 199 evaluated, 198 expanded
[t=0.0258881s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.025897s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0259049s, 26652 KB] g=64, 203 evaluated, 202 expanded
[t=0.0259644s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0259733s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0259812s, 26652 KB] g=66, 206 evaluated, 205 expanded
[t=0.0260502s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.026059s, 26652 KB] g=70, 210 evaluated, 209 expanded
[t=0.0260771s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0260859s, 26652 KB] g=71, 211 evaluated, 210 expanded
[t=0.026101s, 26652 KB] Solution found!
[t=0.0261112s, 26652 KB] Actual search time: 0.00648797s
unstack b21 b6 (1)
put-down b21 (1)
unstack b5 b17 (1)
put-down b5 (1)
unstack b7 b13 (1)
put-down b7 (1)
unstack b13 b11 (1)
stack b13 b7 (1)
unstack b6 b4 (1)
stack b6 b21 (1)
unstack b23 b14 (1)
stack b23 b4 (1)
unstack b14 b20 (1)
put-down b14 (1)
unstack b20 b16 (1)
put-down b20 (1)
unstack b16 b3 (1)
put-down b16 (1)
unstack b3 b12 (1)
stack b3 b6 (1)
unstack b12 b2 (1)
put-down b12 (1)
unstack b2 b19 (1)
put-down b2 (1)
pick-up b19 (1)
stack b19 b3 (1)
pick-up b16 (1)
stack b16 b14 (1)
pick-up b20 (1)
stack b20 b16 (1)
unstack b23 b4 (1)
put-down b23 (1)
unstack b4 b18 (1)
stack b4 b20 (1)
unstack b18 b9 (1)
stack b18 b13 (1)
pick-up b17 (1)
stack b17 b18 (1)
unstack b9 b1 (1)
stack b9 b2 (1)
unstack b1 b15 (1)
stack b1 b23 (1)
unstack b15 b22 (1)
stack b15 b19 (1)
unstack b22 b10 (1)
put-down b22 (1)
unstack b10 b8 (1)
stack b10 b15 (1)
pick-up b11 (1)
stack b11 b22 (1)
pick-up b8 (1)
stack b8 b10 (1)
unstack b4 b20 (1)
put-down b4 (1)
unstack b20 b16 (1)
put-down b20 (1)
unstack b16 b14 (1)
put-down b16 (1)
pick-up b14 (1)
stack b14 b9 (1)
pick-up b16 (1)
stack b16 b14 (1)
pick-up b20 (1)
stack b20 b16 (1)
pick-up b4 (1)
stack b4 b20 (1)
unstack b1 b23 (1)
put-down b1 (1)
pick-up b23 (1)
stack b23 b4 (1)
pick-up b1 (1)
stack b1 b23 (1)
[t=0.0261204s, 26652 KB] Plan length: 72 step(s).
[t=0.0261204s, 26652 KB] Plan cost: 72
[t=0.0261204s, 26652 KB] Expanded 211 state(s).
[t=0.0261204s, 26652 KB] Reopened 0 state(s).
[t=0.0261204s, 26652 KB] Evaluated 212 state(s).
[t=0.0261204s, 26652 KB] Evaluations: 424
[t=0.0261204s, 26652 KB] Generated 1971 state(s).
[t=0.0261204s, 26652 KB] Dead ends: 0 state(s).
[t=0.0261204s, 26652 KB] Number of registered states: 212
[t=0.0261204s, 26652 KB] Int hash set load factor: 212/256 = 0.828125
[t=0.0261204s, 26652 KB] Int hash set resizes: 8
[t=0.0261204s, 26652 KB] Search time: 0.00653172s
[t=0.0261204s, 26652 KB] Total time: 0.0261204s
Solution found.
Peak memory: 26652 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.18s
