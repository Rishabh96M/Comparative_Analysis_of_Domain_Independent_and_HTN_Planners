INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_21/bws_problem_21_37.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.011s wall-clock]
1472 relevant atoms
987 auxiliary atoms
2459 final queue length
4269 total queue pushes
Completing instantiation... [0.020s CPU, 0.017s wall-clock]
Instantiating: [0.030s CPU, 0.030s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
22 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.006s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
1302 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
42 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.012s wall-clock]
Reordering and filtering variables...
43 of 43 variables necessary.
22 of 43 mutex groups necessary.
882 of 882 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 43
Translator derived variables: 0
Translator facts: 506
Translator goal facts: 18
Translator mutex groups: 22
Translator total mutex groups size: 484
Translator operators: 882
Translator axioms: 0
Translator task size: 7603
Translator peak memory: 36456 KB
Writing output... [0.000s CPU, 0.005s wall-clock]
Done! [0.080s CPU, 0.088s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.0089e-05s, 24488 KB] reading input...
[t=0.00275709s, 25268 KB] done reading input!
[t=0.00374243s, 25664 KB] Initializing landmark count heuristic...
[t=0.00379012s, 25664 KB] Generating landmark graph...
[t=0.00385746s, 25664 KB] Building a landmark graph with reasonable orders.
[t=0.00392442s, 25664 KB] Initializing Exploration...
[t=0.00420734s, 25852 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.01423s, 26380 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0143147s, 26380 KB] Landmarks generation time: 0.0104561s
[t=0.0143295s, 26380 KB] Discovered 93 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0143566s, 26380 KB] 427 edges
[t=0.0143667s, 26380 KB] approx. reasonable orders
[t=0.0156165s, 26380 KB] approx. obedient reasonable orders
[t=0.0156407s, 26380 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0156509s, 26380 KB] Landmarks generation time: 0.0118719s
[t=0.0156749s, 26380 KB] Discovered 93 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0156827s, 26380 KB] 448 edges
[t=0.0156908s, 26380 KB] Landmark graph generation time: 0.011908s
[t=0.0156996s, 26380 KB] Landmark graph contains 93 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0157076s, 26380 KB] Landmark graph contains 448 orderings.
[t=0.0159908s, 26380 KB] Simplifying 3486 unary operators... done! [2646 unary operators]
[t=0.0168687s, 26380 KB] time to simplify: 0.000938362s
[t=0.0169843s, 26380 KB] Initializing additive heuristic...
[t=0.0169983s, 26380 KB] Initializing FF heuristic...
[t=0.0170631s, 26380 KB] Building successor generator...done!
[t=0.0172434s, 26380 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0172522s, 26380 KB] time for successor generation creation: 0.000147468s
[t=0.0172636s, 26380 KB] Variables: 43
[t=0.0172727s, 26380 KB] FactPairs: 506
[t=0.0172811s, 26380 KB] Bytes per state: 16
[t=0.0173651s, 26380 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0173985s, 26380 KB] 42 initial landmarks, 18 goal landmarks
[t=0.0174686s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0174845s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.017498s, 26380 KB] g=0, 1 evaluated, 0 expanded
[t=0.0175179s, 26380 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0175316s, 26380 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0177122s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0177712s, 26380 KB] g=1, 5 evaluated, 4 expanded
[t=0.0178856s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0179076s, 26380 KB] g=2, 7 evaluated, 6 expanded
[t=0.0181039s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0181135s, 26380 KB] g=3, 15 evaluated, 14 expanded
[t=0.0181467s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.018156s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0181645s, 26380 KB] g=4, 16 evaluated, 15 expanded
[t=0.0182686s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.018278s, 26380 KB] g=6, 20 evaluated, 19 expanded
[t=0.0185171s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0185266s, 26380 KB] g=8, 30 evaluated, 29 expanded
[t=0.0186799s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0186893s, 26380 KB] g=8, 36 evaluated, 35 expanded
[t=0.01888s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0188945s, 26380 KB] g=10, 44 evaluated, 43 expanded
[t=0.0189925s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0190018s, 26380 KB] g=12, 48 evaluated, 47 expanded
[t=0.0191446s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0191538s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0191708s, 26380 KB] g=14, 54 evaluated, 53 expanded
[t=0.0193385s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0193486s, 26380 KB] g=17, 61 evaluated, 60 expanded
[t=0.0193823s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0193919s, 26380 KB] g=18, 62 evaluated, 61 expanded
[t=0.0195464s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0195568s, 26380 KB] g=20, 68 evaluated, 67 expanded
[t=0.0195908s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0196001s, 26380 KB] g=20, 69 evaluated, 68 expanded
[t=0.0198404s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0198516s, 26380 KB] g=22, 79 evaluated, 78 expanded
[t=0.0199519s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0199617s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0199702s, 26380 KB] g=22, 83 evaluated, 82 expanded
[t=0.0200924s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0201064s, 26380 KB] g=24, 88 evaluated, 87 expanded
[t=0.0201396s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0201496s, 26380 KB] g=24, 89 evaluated, 88 expanded
[t=0.0203252s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0203393s, 26380 KB] g=26, 96 evaluated, 95 expanded
[t=0.0226475s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0226868s, 26380 KB] g=36, 191 evaluated, 190 expanded
[t=0.0229389s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0229504s, 26380 KB] g=37, 201 evaluated, 200 expanded
[t=0.0233372s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0233478s, 26380 KB] g=40, 217 evaluated, 216 expanded
[t=0.0234081s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0234172s, 26380 KB] g=41, 219 evaluated, 218 expanded
[t=0.0234529s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0234619s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.02347s, 26380 KB] g=42, 220 evaluated, 219 expanded
[t=0.0237126s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0237223s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0237301s, 26380 KB] g=44, 230 evaluated, 229 expanded
[t=0.0239261s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0239348s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0239439s, 26380 KB] g=46, 238 evaluated, 237 expanded
[t=0.0241421s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0241513s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.024159s, 26380 KB] g=48, 246 evaluated, 245 expanded
[t=0.0243846s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0244001s, 26380 KB] g=50, 255 evaluated, 254 expanded
[t=0.0244338s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0244429s, 26380 KB] g=50, 256 evaluated, 255 expanded
[t=0.0247779s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0247868s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0247945s, 26380 KB] g=52, 270 evaluated, 269 expanded
[t=0.024974s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0249845s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.024993s, 26380 KB] g=54, 277 evaluated, 276 expanded
[t=0.0251541s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0251638s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0251723s, 26380 KB] g=56, 283 evaluated, 282 expanded
[t=0.025298s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0253072s, 26380 KB] g=58, 288 evaluated, 287 expanded
[t=0.0255038s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.025514s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0255229s, 26380 KB] g=60, 296 evaluated, 295 expanded
[t=0.0256722s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0256814s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0256899s, 26380 KB] g=62, 302 evaluated, 301 expanded
[t=0.0262407s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0262537s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0262659s, 26380 KB] g=68, 326 evaluated, 325 expanded
[t=0.0266274s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0266374s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0266466s, 26380 KB] g=74, 342 evaluated, 341 expanded
[t=0.0307615s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0307747s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0307845s, 26380 KB] g=80, 524 evaluated, 523 expanded
[t=0.031135s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0311451s, 26380 KB] g=84, 540 evaluated, 539 expanded
[t=0.0312378s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0312465s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0312544s, 26380 KB] g=86, 544 evaluated, 543 expanded
[t=0.0324225s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0324328s, 26380 KB] g=98, 598 evaluated, 597 expanded
[t=0.0326215s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0326314s, 26380 KB] g=102, 607 evaluated, 606 expanded
[t=0.0326991s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0327085s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0327166s, 26380 KB] g=104, 610 evaluated, 609 expanded
[t=0.0335963s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0336114s, 26380 KB] g=122, 661 evaluated, 660 expanded
[t=0.033666s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0336761s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0336854s, 26380 KB] g=124, 664 evaluated, 663 expanded
[t=0.033843s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0338527s, 26380 KB] g=132, 676 evaluated, 675 expanded
[t=0.0338699s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0338785s, 26380 KB] g=133, 677 evaluated, 676 expanded
[t=0.0338928s, 26380 KB] Solution found!
[t=0.0339068s, 26380 KB] Actual search time: 0.0165047s
unstack b17 b10 (1)
put-down b17 (1)
unstack b5 b1 (1)
stack b5 b10 (1)
unstack b19 b18 (1)
put-down b19 (1)
pick-up b15 (1)
stack b15 b18 (1)
unstack b1 b20 (1)
put-down b1 (1)
unstack b20 b8 (1)
put-down b20 (1)
pick-up b19 (1)
stack b19 b8 (1)
unstack b5 b10 (1)
put-down b5 (1)
unstack b10 b6 (1)
stack b10 b15 (1)
unstack b6 b16 (1)
stack b6 b20 (1)
pick-up b1 (1)
stack b1 b6 (1)
unstack b16 b3 (1)
put-down b16 (1)
unstack b10 b15 (1)
put-down b10 (1)
pick-up b5 (1)
stack b5 b10 (1)
unstack b15 b18 (1)
put-down b15 (1)
unstack b18 b7 (1)
put-down b18 (1)
unstack b7 b4 (1)
put-down b7 (1)
unstack b4 b9 (1)
put-down b4 (1)
unstack b9 b14 (1)
put-down b9 (1)
unstack b14 b13 (1)
stack b14 b19 (1)
unstack b13 b2 (1)
stack b13 b3 (1)
pick-up b15 (1)
stack b15 b18 (1)
unstack b2 b12 (1)
stack b2 b1 (1)
unstack b12 b11 (1)
stack b12 b17 (1)
unstack b11 b21 (1)
stack b11 b16 (1)
pick-up b21 (1)
stack b21 b2 (1)
pick-up b7 (1)
stack b7 b14 (1)
pick-up b9 (1)
stack b9 b21 (1)
unstack b11 b16 (1)
put-down b11 (1)
pick-up b16 (1)
stack b16 b12 (1)
pick-up b11 (1)
stack b11 b16 (1)
unstack b5 b10 (1)
put-down b5 (1)
pick-up b10 (1)
stack b10 b15 (1)
pick-up b5 (1)
stack b5 b10 (1)
unstack b7 b14 (1)
put-down b7 (1)
unstack b14 b19 (1)
put-down b14 (1)
pick-up b7 (1)
stack b7 b14 (1)
unstack b19 b8 (1)
put-down b19 (1)
pick-up b8 (1)
stack b8 b4 (1)
pick-up b19 (1)
stack b19 b8 (1)
unstack b7 b14 (1)
put-down b7 (1)
pick-up b14 (1)
stack b14 b19 (1)
pick-up b7 (1)
stack b7 b14 (1)
unstack b5 b10 (1)
put-down b5 (1)
unstack b10 b15 (1)
put-down b10 (1)
pick-up b5 (1)
stack b5 b10 (1)
unstack b15 b18 (1)
put-down b15 (1)
pick-up b18 (1)
stack b18 b7 (1)
pick-up b15 (1)
stack b15 b18 (1)
unstack b5 b10 (1)
put-down b5 (1)
pick-up b10 (1)
stack b10 b15 (1)
pick-up b5 (1)
stack b5 b10 (1)
unstack b9 b21 (1)
put-down b9 (1)
unstack b21 b2 (1)
put-down b21 (1)
unstack b2 b1 (1)
put-down b2 (1)
pick-up b21 (1)
stack b21 b2 (1)
pick-up b9 (1)
stack b9 b21 (1)
unstack b1 b6 (1)
put-down b1 (1)
unstack b6 b20 (1)
put-down b6 (1)
pick-up b20 (1)
stack b20 b11 (1)
pick-up b6 (1)
stack b6 b20 (1)
pick-up b1 (1)
stack b1 b6 (1)
unstack b9 b21 (1)
put-down b9 (1)
unstack b21 b2 (1)
put-down b21 (1)
pick-up b2 (1)
stack b2 b1 (1)
pick-up b21 (1)
stack b21 b2 (1)
pick-up b9 (1)
stack b9 b21 (1)
[t=0.0339166s, 26380 KB] Plan length: 134 step(s).
[t=0.0339166s, 26380 KB] Plan cost: 134
[t=0.0339166s, 26380 KB] Expanded 677 state(s).
[t=0.0339166s, 26380 KB] Reopened 0 state(s).
[t=0.0339166s, 26380 KB] Evaluated 678 state(s).
[t=0.0339166s, 26380 KB] Evaluations: 1356
[t=0.0339166s, 26380 KB] Generated 5418 state(s).
[t=0.0339166s, 26380 KB] Dead ends: 0 state(s).
[t=0.0339166s, 26380 KB] Number of registered states: 678
[t=0.0339166s, 26380 KB] Int hash set load factor: 678/1024 = 0.662109
[t=0.0339166s, 26380 KB] Int hash set resizes: 10
[t=0.0339166s, 26380 KB] Search time: 0.0165518s
[t=0.0339166s, 26380 KB] Total time: 0.0339166s
Solution found.
Peak memory: 26380 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.16s
