INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_24/bws_problem_24_58.pddl --sas-file output.sas
Parsing...
Parsing: [0.010s CPU, 0.003s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
1898 relevant atoms
1272 auxiliary atoms
3170 final queue length
5529 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.036s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
25 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.010s CPU, 0.007s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.001s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.040s CPU, 0.033s wall-clock]
1704 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
48 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.023s wall-clock]
Reordering and filtering variables...
49 of 49 variables necessary.
25 of 49 mutex groups necessary.
1152 of 1152 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.007s wall-clock]
Translator variables: 49
Translator derived variables: 0
Translator facts: 650
Translator goal facts: 18
Translator mutex groups: 25
Translator total mutex groups size: 625
Translator operators: 1152
Translator axioms: 0
Translator task size: 9910
Translator peak memory: 37872 KB
Writing output... [0.010s CPU, 0.008s wall-clock]
Done! [0.130s CPU, 0.121s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=1.9925e-05s, 24488 KB] reading input...
[t=0.00367042s, 25532 KB] done reading input!
[t=0.00461886s, 25928 KB] Initializing landmark count heuristic...
[t=0.00465975s, 25928 KB] Generating landmark graph...
[t=0.00473127s, 25928 KB] Building a landmark graph with reasonable orders.
[t=0.00480011s, 26060 KB] Initializing Exploration...
[t=0.00513359s, 26388 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0167617s, 26784 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0169008s, 26784 KB] Landmarks generation time: 0.0121725s
[t=0.0169168s, 26784 KB] Discovered 98 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0169426s, 26784 KB] 284 edges
[t=0.0169546s, 26784 KB] approx. reasonable orders
[t=0.0177577s, 26784 KB] approx. obedient reasonable orders
[t=0.0177959s, 26784 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.017807s, 26784 KB] Landmarks generation time: 0.0131447s
[t=0.0178167s, 26784 KB] Discovered 98 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0178248s, 26784 KB] 296 edges
[t=0.0178334s, 26784 KB] Landmark graph generation time: 0.0131807s
[t=0.017842s, 26784 KB] Landmark graph contains 98 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0178499s, 26784 KB] Landmark graph contains 296 orderings.
[t=0.0183242s, 26784 KB] Simplifying 4560 unary operators... done! [3456 unary operators]
[t=0.0196696s, 26916 KB] time to simplify: 0.00142403s
[t=0.0198215s, 26916 KB] Initializing additive heuristic...
[t=0.0198382s, 26916 KB] Initializing FF heuristic...
[t=0.0198955s, 26916 KB] Building successor generator...done!
[t=0.0201262s, 26916 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0201363s, 26916 KB] time for successor generation creation: 0.000196022s
[t=0.0201541s, 26916 KB] Variables: 49
[t=0.0201637s, 26916 KB] FactPairs: 650
[t=0.0201727s, 26916 KB] Bytes per state: 20
[t=0.0203072s, 26916 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0203448s, 26916 KB] 47 initial landmarks, 18 goal landmarks
[t=0.0204132s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0204234s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0204325s, 26916 KB] g=0, 1 evaluated, 0 expanded
[t=0.0204486s, 26916 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0204575s, 26916 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0205962s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0206058s, 26916 KB] g=1, 5 evaluated, 4 expanded
[t=0.0208336s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0208444s, 26916 KB] g=2, 12 evaluated, 11 expanded
[t=0.0209452s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0209548s, 26916 KB] g=3, 15 evaluated, 14 expanded
[t=0.0213442s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0213578s, 26916 KB] g=4, 26 evaluated, 25 expanded
[t=0.0214857s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0214958s, 26916 KB] g=5, 30 evaluated, 29 expanded
[t=0.0218017s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0218114s, 26916 KB] g=7, 40 evaluated, 39 expanded
[t=0.0221439s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0221544s, 26916 KB] g=9, 51 evaluated, 50 expanded
[t=0.0222683s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0222791s, 26916 KB] g=6, 54 evaluated, 53 expanded
[t=0.0224569s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0224655s, 26916 KB] g=7, 60 evaluated, 59 expanded
[t=0.0226746s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0226837s, 26916 KB] g=8, 67 evaluated, 66 expanded
[t=0.0228055s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0228142s, 26916 KB] g=9, 71 evaluated, 70 expanded
[t=0.0231014s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0231109s, 26916 KB] g=11, 81 evaluated, 80 expanded
[t=0.0233691s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0233778s, 26916 KB] g=13, 90 evaluated, 89 expanded
[t=0.0234461s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0234546s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0234625s, 26916 KB] g=14, 92 evaluated, 91 expanded
[t=0.0236926s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0237013s, 26916 KB] g=15, 100 evaluated, 99 expanded
[t=0.0238066s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0238199s, 26916 KB] g=16, 102 evaluated, 101 expanded
[t=0.0242137s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0242247s, 26916 KB] g=17, 116 evaluated, 115 expanded
[t=0.0242956s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0243056s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0243141s, 26916 KB] g=18, 118 evaluated, 117 expanded
[t=0.0245356s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0245448s, 26916 KB] g=19, 125 evaluated, 124 expanded
[t=0.0246404s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0246501s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0246583s, 26916 KB] g=20, 128 evaluated, 127 expanded
[t=0.0248989s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0249122s, 26916 KB] g=21, 135 evaluated, 134 expanded
[t=0.0249795s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0249888s, 26916 KB] g=22, 137 evaluated, 136 expanded
[t=0.0253799s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0253908s, 26916 KB] g=24, 150 evaluated, 149 expanded
[t=0.0254311s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0254403s, 26916 KB] g=25, 151 evaluated, 150 expanded
[t=0.0256754s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0256846s, 26916 KB] g=27, 159 evaluated, 158 expanded
[t=0.0257241s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0257335s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0257421s, 26916 KB] g=28, 160 evaluated, 159 expanded
[t=0.0259464s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.025956s, 26916 KB] g=29, 167 evaluated, 166 expanded
[t=0.026024s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0260329s, 26916 KB] g=30, 169 evaluated, 168 expanded
[t=0.026492s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0265072s, 26916 KB] g=32, 182 evaluated, 181 expanded
[t=0.0266249s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0266338s, 26916 KB] g=32, 186 evaluated, 185 expanded
[t=0.0270114s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0270213s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0270293s, 26916 KB] g=34, 200 evaluated, 199 expanded
[t=0.0272475s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0272561s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.027264s, 26916 KB] g=36, 208 evaluated, 207 expanded
[t=0.0274686s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0274774s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.027485s, 26916 KB] g=38, 215 evaluated, 214 expanded
[t=0.027647s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0276556s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0276635s, 26916 KB] g=40, 221 evaluated, 220 expanded
[t=0.0278017s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0278101s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0278177s, 26916 KB] g=42, 226 evaluated, 225 expanded
[t=0.0279313s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0279398s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0279474s, 26916 KB] g=44, 230 evaluated, 229 expanded
[t=0.0282109s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0282194s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0282276s, 26916 KB] g=48, 240 evaluated, 239 expanded
[t=0.0283427s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0283516s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0283594s, 26916 KB] g=50, 244 evaluated, 243 expanded
[t=0.0288337s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0288431s, 26916 KB] g=56, 262 evaluated, 261 expanded
[t=0.0290046s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0290165s, 26916 KB] g=58, 265 evaluated, 264 expanded
[t=0.0291291s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0291465s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0291601s, 26916 KB] g=60, 267 evaluated, 266 expanded
[t=0.0297233s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0297336s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0297426s, 26916 KB] g=62, 288 evaluated, 287 expanded
[t=0.0298451s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0298538s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0298616s, 26916 KB] g=64, 292 evaluated, 291 expanded
[t=0.0300658s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.030075s, 26916 KB] g=68, 301 evaluated, 300 expanded
[t=0.0301482s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0301596s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0301727s, 26916 KB] g=70, 304 evaluated, 303 expanded
[t=0.0302894s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.030299s, 26916 KB] g=76, 310 evaluated, 309 expanded
[t=0.0303587s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0303671s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0303767s, 26916 KB] g=78, 313 evaluated, 312 expanded
[t=0.0303985s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.030407s, 26916 KB] g=79, 314 evaluated, 313 expanded
[t=0.0304231s, 26916 KB] Solution found!
[t=0.0304351s, 26916 KB] Actual search time: 0.0100863s
unstack b14 b18 (1)
put-down b14 (1)
unstack b8 b1 (1)
put-down b8 (1)
unstack b24 b13 (1)
stack b24 b16 (1)
unstack b13 b22 (1)
put-down b13 (1)
unstack b15 b19 (1)
put-down b15 (1)
unstack b20 b12 (1)
put-down b20 (1)
unstack b22 b3 (1)
stack b22 b13 (1)
unstack b12 b11 (1)
put-down b12 (1)
unstack b1 b17 (1)
stack b1 b11 (1)
unstack b17 b7 (1)
stack b17 b1 (1)
pick-up b15 (1)
stack b15 b7 (1)
unstack b19 b4 (1)
stack b19 b18 (1)
unstack b15 b7 (1)
put-down b15 (1)
unstack b4 b6 (1)
stack b4 b8 (1)
unstack b9 b23 (1)
put-down b9 (1)
pick-up b20 (1)
stack b20 b6 (1)
unstack b7 b5 (1)
stack b7 b12 (1)
pick-up b15 (1)
stack b15 b7 (1)
unstack b5 b21 (1)
stack b5 b3 (1)
pick-up b21 (1)
stack b21 b19 (1)
pick-up b9 (1)
stack b9 b5 (1)
pick-up b23 (1)
stack b23 b14 (1)
unstack b20 b6 (1)
put-down b20 (1)
pick-up b6 (1)
stack b6 b23 (1)
pick-up b20 (1)
stack b20 b6 (1)
unstack b21 b19 (1)
put-down b21 (1)
unstack b19 b18 (1)
put-down b19 (1)
pick-up b21 (1)
stack b21 b19 (1)
unstack b18 b2 (1)
put-down b18 (1)
unstack b2 b10 (1)
stack b2 b24 (1)
pick-up b10 (1)
stack b10 b17 (1)
pick-up b18 (1)
stack b18 b2 (1)
unstack b21 b19 (1)
put-down b21 (1)
pick-up b19 (1)
stack b19 b18 (1)
pick-up b21 (1)
stack b21 b19 (1)
unstack b9 b5 (1)
put-down b9 (1)
unstack b5 b3 (1)
put-down b5 (1)
pick-up b3 (1)
stack b3 b21 (1)
pick-up b5 (1)
stack b5 b3 (1)
pick-up b9 (1)
stack b9 b5 (1)
[t=0.0304445s, 26916 KB] Plan length: 80 step(s).
[t=0.0304445s, 26916 KB] Plan cost: 80
[t=0.0304445s, 26916 KB] Expanded 314 state(s).
[t=0.0304445s, 26916 KB] Reopened 0 state(s).
[t=0.0304445s, 26916 KB] Evaluated 315 state(s).
[t=0.0304445s, 26916 KB] Evaluations: 630
[t=0.0304445s, 26916 KB] Generated 3544 state(s).
[t=0.0304445s, 26916 KB] Dead ends: 0 state(s).
[t=0.0304445s, 26916 KB] Number of registered states: 315
[t=0.0304445s, 26916 KB] Int hash set load factor: 315/512 = 0.615234
[t=0.0304445s, 26916 KB] Int hash set resizes: 9
[t=0.0304445s, 26916 KB] Search time: 0.0101377s
[t=0.0304445s, 26916 KB] Total time: 0.0304445s
Solution found.
Peak memory: 26916 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.20s
