INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_26/bws_problem_26_21.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
2212 relevant atoms
1482 auxiliary atoms
3694 final queue length
6453 total queue pushes
Completing instantiation... [0.030s CPU, 0.023s wall-clock]
Instantiating: [0.040s CPU, 0.038s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
27 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.009s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.010s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.035s wall-clock]
2002 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
52 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.023s wall-clock]
Reordering and filtering variables...
53 of 53 variables necessary.
27 of 53 mutex groups necessary.
1352 of 1352 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.009s wall-clock]
Translator variables: 53
Translator derived variables: 0
Translator facts: 756
Translator goal facts: 20
Translator mutex groups: 27
Translator total mutex groups size: 729
Translator operators: 1352
Translator axioms: 0
Translator task size: 11620
Translator peak memory: 38900 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.120s CPU, 0.125s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=1.8227e-05s, 24488 KB] reading input...
[t=0.00425275s, 25744 KB] done reading input!
[t=0.005159s, 26140 KB] Initializing landmark count heuristic...
[t=0.00518804s, 26140 KB] Generating landmark graph...
[t=0.00526646s, 26272 KB] Building a landmark graph with reasonable orders.
[t=0.00534539s, 26272 KB] Initializing Exploration...
[t=0.00572585s, 26680 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0227631s, 27472 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0228748s, 27472 KB] Landmarks generation time: 0.0176131s
[t=0.0228939s, 27472 KB] Discovered 113 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0229187s, 27472 KB] 810 edges
[t=0.0229332s, 27472 KB] approx. reasonable orders
[t=0.0251262s, 27472 KB] approx. obedient reasonable orders
[t=0.0252779s, 27472 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0252898s, 27472 KB] Landmarks generation time: 0.0200995s
[t=0.0253003s, 27472 KB] Discovered 113 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0253091s, 27472 KB] 828 edges
[t=0.0253191s, 27472 KB] Landmark graph generation time: 0.0201406s
[t=0.0253302s, 27472 KB] Landmark graph contains 113 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0253389s, 27472 KB] Landmark graph contains 828 orderings.
[t=0.0261183s, 27472 KB] Simplifying 5356 unary operators... done! [4056 unary operators]
[t=0.0274591s, 27472 KB] time to simplify: 0.00144113s
[t=0.027667s, 27472 KB] Initializing additive heuristic...
[t=0.0276847s, 27472 KB] Initializing FF heuristic...
[t=0.0277361s, 27472 KB] Building successor generator...done!
[t=0.0280002s, 27472 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0280088s, 27472 KB] time for successor generation creation: 0.000228599s
[t=0.0280212s, 27472 KB] Variables: 53
[t=0.028029s, 27472 KB] FactPairs: 756
[t=0.0280368s, 27472 KB] Bytes per state: 20
[t=0.0281218s, 27472 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0281679s, 27472 KB] 52 initial landmarks, 20 goal landmarks
[t=0.0282315s, 27472 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 61
[t=0.0282412s, 27472 KB] New best heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.0282498s, 27472 KB] g=0, 1 evaluated, 0 expanded
[t=0.0282633s, 27472 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 61
[t=0.0282723s, 27472 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.028422s, 27472 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 60
[t=0.0284318s, 27472 KB] g=2, 5 evaluated, 4 expanded
[t=0.0284769s, 27472 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.0284873s, 27472 KB] g=3, 6 evaluated, 5 expanded
[t=0.0287573s, 27472 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 58
[t=0.0287667s, 27472 KB] g=6, 14 evaluated, 13 expanded
[t=0.0289378s, 27472 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 57
[t=0.0289481s, 27472 KB] g=7, 19 evaluated, 18 expanded
[t=0.0292778s, 27472 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0292876s, 27472 KB] g=10, 29 evaluated, 28 expanded
[t=0.0295499s, 27472 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0295605s, 27472 KB] g=12, 37 evaluated, 36 expanded
[t=0.0298897s, 27472 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0299s, 27472 KB] g=14, 47 evaluated, 46 expanded
[t=0.0299807s, 27472 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0299935s, 27472 KB] g=14, 49 evaluated, 48 expanded
[t=0.0304622s, 27472 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.030472s, 27472 KB] g=16, 64 evaluated, 63 expanded
[t=0.0310346s, 27472 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0310435s, 27472 KB] g=18, 82 evaluated, 81 expanded
[t=0.0313643s, 27472 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0313867s, 27472 KB] g=20, 92 evaluated, 91 expanded
[t=0.031432s, 27472 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0314419s, 27472 KB] g=20, 93 evaluated, 92 expanded
[t=0.031942s, 27472 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0319522s, 27472 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0319622s, 27472 KB] g=22, 109 evaluated, 108 expanded
[t=0.0322565s, 27472 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0322671s, 27472 KB] g=24, 118 evaluated, 117 expanded
[t=0.0323465s, 27472 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.032356s, 27472 KB] g=24, 120 evaluated, 119 expanded
[t=0.032812s, 27472 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0328223s, 27472 KB] g=26, 134 evaluated, 133 expanded
[t=0.0331868s, 27472 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0332097s, 27472 KB] g=28, 144 evaluated, 143 expanded
[t=0.0339555s, 27472 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0339739s, 27472 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0339829s, 27472 KB] g=28, 166 evaluated, 165 expanded
[t=0.0342851s, 27472 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0342968s, 27472 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0343058s, 27472 KB] g=30, 175 evaluated, 174 expanded
[t=0.0346076s, 27472 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0346176s, 27472 KB] g=32, 184 evaluated, 183 expanded
[t=0.0346959s, 27472 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0347048s, 27472 KB] g=32, 186 evaluated, 185 expanded
[t=0.0347481s, 27472 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0347569s, 27472 KB] g=33, 187 evaluated, 186 expanded
[t=0.035533s, 27472 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0355447s, 27472 KB] g=36, 211 evaluated, 210 expanded
[t=0.0356903s, 27472 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0357s, 27472 KB] g=34, 215 evaluated, 214 expanded
[t=0.0362143s, 27472 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0362345s, 27472 KB] g=36, 231 evaluated, 230 expanded
[t=0.0365871s, 27472 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0365981s, 27472 KB] g=38, 242 evaluated, 241 expanded
[t=0.037645s, 27472 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0376556s, 27472 KB] g=41, 274 evaluated, 273 expanded
[t=0.0384535s, 27472 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0384658s, 27472 KB] g=44, 298 evaluated, 297 expanded
[t=0.0394375s, 27472 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0394482s, 27472 KB] g=47, 328 evaluated, 327 expanded
[t=0.0396517s, 27472 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.039674s, 27472 KB] g=49, 334 evaluated, 333 expanded
[t=0.039719s, 27472 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0397283s, 27472 KB] g=42, 335 evaluated, 334 expanded
[t=0.0416391s, 27472 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0416505s, 27472 KB] g=52, 394 evaluated, 393 expanded
[t=0.04256s, 27472 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0425724s, 27472 KB] g=54, 422 evaluated, 421 expanded
[t=0.0428814s, 27472 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.042892s, 27472 KB] g=46, 431 evaluated, 430 expanded
[t=0.0433005s, 27472 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0433114s, 27472 KB] g=48, 443 evaluated, 442 expanded
[t=0.0433544s, 27472 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0433634s, 27472 KB] g=56, 444 evaluated, 443 expanded
[t=0.0439631s, 27472 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.043974s, 27472 KB] g=57, 462 evaluated, 461 expanded
[t=0.0440534s, 27472 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0440639s, 27472 KB] g=58, 464 evaluated, 463 expanded
[t=0.0448087s, 27472 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0448207s, 27472 KB] g=60, 487 evaluated, 486 expanded
[t=0.0456763s, 27472 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0456977s, 27472 KB] g=62, 513 evaluated, 512 expanded
[t=0.046302s, 27472 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0463252s, 27472 KB] g=64, 531 evaluated, 530 expanded
[t=0.046676s, 27472 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0466871s, 27472 KB] g=64, 542 evaluated, 541 expanded
[t=0.0470303s, 27472 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0470405s, 27472 KB] g=66, 553 evaluated, 552 expanded
[t=0.0475873s, 27472 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0476051s, 27472 KB] g=68, 571 evaluated, 570 expanded
[t=0.047672s, 27472 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0476814s, 27472 KB] g=69, 573 evaluated, 572 expanded
[t=0.0481477s, 27472 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0481586s, 27472 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.048168s, 27472 KB] g=70, 589 evaluated, 588 expanded
[t=0.0482073s, 27472 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.048217s, 27472 KB] g=71, 590 evaluated, 589 expanded
[t=0.0486337s, 27472 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0486451s, 27472 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0486543s, 27472 KB] g=72, 604 evaluated, 603 expanded
[t=0.0486959s, 27472 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0487053s, 27472 KB] g=73, 605 evaluated, 604 expanded
[t=0.0490219s, 27472 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0490419s, 27472 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0490507s, 27472 KB] g=74, 615 evaluated, 614 expanded
[t=0.0490919s, 27472 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0491013s, 27472 KB] g=75, 616 evaluated, 615 expanded
[t=0.0494148s, 27472 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0494249s, 27472 KB] g=76, 626 evaluated, 625 expanded
[t=0.0494659s, 27472 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0494753s, 27472 KB] g=77, 627 evaluated, 626 expanded
[t=0.0497353s, 27472 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0497472s, 27472 KB] g=78, 635 evaluated, 634 expanded
[t=0.0497872s, 27472 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0497968s, 27472 KB] g=79, 636 evaluated, 635 expanded
[t=0.0500499s, 27472 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0500604s, 27472 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0500691s, 27472 KB] g=82, 644 evaluated, 643 expanded
[t=0.0501067s, 27472 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.050116s, 27472 KB] g=83, 645 evaluated, 644 expanded
[t=0.0501528s, 27472 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0501618s, 27472 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0501702s, 27472 KB] g=84, 646 evaluated, 645 expanded
[t=0.0504252s, 27472 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0504347s, 27472 KB] g=88, 655 evaluated, 654 expanded
[t=0.0505332s, 27472 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0505425s, 27472 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0505516s, 27472 KB] g=90, 658 evaluated, 657 expanded
[t=0.0511454s, 27472 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0511547s, 27472 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.051163s, 27472 KB] g=98, 679 evaluated, 678 expanded
[t=0.051257s, 27472 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0512693s, 27472 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0512786s, 27472 KB] g=100, 682 evaluated, 681 expanded
[t=0.0520141s, 27472 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0520247s, 27472 KB] g=114, 711 evaluated, 710 expanded
[t=0.0520943s, 27472 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0521033s, 27472 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0521115s, 27472 KB] g=116, 714 evaluated, 713 expanded
[t=0.0521901s, 27472 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0521987s, 27472 KB] g=120, 718 evaluated, 717 expanded
[t=0.0522182s, 27472 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0522265s, 27472 KB] g=121, 719 evaluated, 718 expanded
[t=0.052242s, 27472 KB] Solution found!
[t=0.0522539s, 27472 KB] Actual search time: 0.0240835s
unstack b22 b2 (1)
put-down b22 (1)
unstack b2 b23 (1)
put-down b2 (1)
unstack b23 b7 (1)
put-down b23 (1)
unstack b7 b3 (1)
put-down b7 (1)
unstack b24 b12 (1)
put-down b24 (1)
unstack b12 b16 (1)
put-down b12 (1)
unstack b16 b18 (1)
stack b16 b22 (1)
unstack b3 b6 (1)
put-down b3 (1)
unstack b6 b10 (1)
put-down b6 (1)
unstack b10 b14 (1)
stack b10 b3 (1)
pick-up b12 (1)
stack b12 b6 (1)
unstack b14 b9 (1)
put-down b14 (1)
pick-up b23 (1)
stack b23 b14 (1)
unstack b9 b11 (1)
stack b9 b15 (1)
unstack b11 b17 (1)
put-down b11 (1)
pick-up b2 (1)
stack b2 b17 (1)
pick-up b24 (1)
stack b24 b11 (1)
unstack b10 b3 (1)
put-down b10 (1)
unstack b16 b22 (1)
put-down b16 (1)
unstack b18 b5 (1)
put-down b18 (1)
unstack b5 b26 (1)
put-down b5 (1)
pick-up b18 (1)
stack b18 b5 (1)
unstack b2 b17 (1)
put-down b2 (1)
unstack b17 b13 (1)
put-down b17 (1)
unstack b13 b8 (1)
put-down b13 (1)
unstack b8 b20 (1)
put-down b8 (1)
unstack b20 b19 (1)
stack b20 b10 (1)
unstack b19 b4 (1)
stack b19 b24 (1)
unstack b4 b1 (1)
stack b4 b9 (1)
unstack b1 b21 (1)
put-down b1 (1)
pick-up b13 (1)
stack b13 b16 (1)
unstack b21 b25 (1)
put-down b21 (1)
pick-up b17 (1)
stack b17 b21 (1)
pick-up b2 (1)
stack b2 b17 (1)
pick-up b22 (1)
stack b22 b19 (1)
pick-up b25 (1)
stack b25 b23 (1)
pick-up b26 (1)
stack b26 b12 (1)
pick-up b3 (1)
stack b3 b8 (1)
pick-up b7 (1)
stack b7 b20 (1)
unstack b13 b16 (1)
put-down b13 (1)
pick-up b16 (1)
stack b16 b22 (1)
pick-up b13 (1)
stack b13 b16 (1)
unstack b18 b5 (1)
put-down b18 (1)
pick-up b5 (1)
stack b5 b25 (1)
pick-up b18 (1)
stack b18 b5 (1)
unstack b7 b20 (1)
put-down b7 (1)
unstack b20 b10 (1)
put-down b20 (1)
pick-up b10 (1)
stack b10 b3 (1)
pick-up b20 (1)
stack b20 b10 (1)
pick-up b7 (1)
stack b7 b20 (1)
unstack b18 b5 (1)
put-down b18 (1)
unstack b5 b25 (1)
put-down b5 (1)
pick-up b18 (1)
stack b18 b5 (1)
unstack b25 b23 (1)
put-down b25 (1)
unstack b23 b14 (1)
put-down b23 (1)
pick-up b14 (1)
stack b14 b26 (1)
pick-up b23 (1)
stack b23 b14 (1)
pick-up b25 (1)
stack b25 b23 (1)
unstack b18 b5 (1)
put-down b18 (1)
pick-up b5 (1)
stack b5 b25 (1)
pick-up b18 (1)
stack b18 b5 (1)
[t=0.0522633s, 27472 KB] Plan length: 122 step(s).
[t=0.0522633s, 27472 KB] Plan cost: 122
[t=0.0522633s, 27472 KB] Expanded 719 state(s).
[t=0.0522633s, 27472 KB] Reopened 0 state(s).
[t=0.0522633s, 27472 KB] Evaluated 720 state(s).
[t=0.0522633s, 27472 KB] Evaluations: 1440
[t=0.0522633s, 27472 KB] Generated 8643 state(s).
[t=0.0522633s, 27472 KB] Dead ends: 0 state(s).
[t=0.0522633s, 27472 KB] Number of registered states: 720
[t=0.0522633s, 27472 KB] Int hash set load factor: 720/1024 = 0.703125
[t=0.0522633s, 27472 KB] Int hash set resizes: 10
[t=0.0522633s, 27472 KB] Search time: 0.024142s
[t=0.0522633s, 27472 KB] Total time: 0.0522633s
Solution found.
Peak memory: 27472 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.23s
