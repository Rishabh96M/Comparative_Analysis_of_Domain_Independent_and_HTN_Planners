INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_24/bws_problem_24_100.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.012s wall-clock]
1898 relevant atoms
1272 auxiliary atoms
3170 final queue length
5527 total queue pushes
Completing instantiation... [0.020s CPU, 0.019s wall-clock]
Instantiating: [0.030s CPU, 0.033s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
25 uncovered facts
Choosing groups: [0.010s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.007s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.029s wall-clock]
1704 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
48 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.019s wall-clock]
Reordering and filtering variables...
49 of 49 variables necessary.
25 of 49 mutex groups necessary.
1152 of 1152 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.008s wall-clock]
Translator variables: 49
Translator derived variables: 0
Translator facts: 650
Translator goal facts: 17
Translator mutex groups: 25
Translator total mutex groups size: 625
Translator operators: 1152
Translator axioms: 0
Translator task size: 9909
Translator peak memory: 37880 KB
Writing output... [0.000s CPU, 0.006s wall-clock]
Done! [0.100s CPU, 0.107s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=1.739e-05s, 24488 KB] reading input...
[t=0.00329777s, 25532 KB] done reading input!
[t=0.00413829s, 25928 KB] Initializing landmark count heuristic...
[t=0.00416611s, 25928 KB] Generating landmark graph...
[t=0.00423769s, 25928 KB] Building a landmark graph with reasonable orders.
[t=0.0043058s, 26060 KB] Initializing Exploration...
[t=0.00465976s, 26388 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0179791s, 26784 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0180556s, 26784 KB] Landmarks generation time: 0.0138179s
[t=0.0180696s, 26784 KB] Discovered 101 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0180853s, 26784 KB] 331 edges
[t=0.0180952s, 26784 KB] approx. reasonable orders
[t=0.0215403s, 26784 KB] approx. obedient reasonable orders
[t=0.021781s, 26784 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0217954s, 26784 KB] Landmarks generation time: 0.0176271s
[t=0.0218058s, 26784 KB] Discovered 101 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0218157s, 26784 KB] 397 edges
[t=0.0218256s, 26784 KB] Landmark graph generation time: 0.0176659s
[t=0.0218341s, 26784 KB] Landmark graph contains 101 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0218417s, 26784 KB] Landmark graph contains 397 orderings.
[t=0.0224145s, 26784 KB] Simplifying 4560 unary operators... done! [3456 unary operators]
[t=0.0235399s, 26916 KB] time to simplify: 0.00120053s
[t=0.0236886s, 26916 KB] Initializing additive heuristic...
[t=0.0237037s, 26916 KB] Initializing FF heuristic...
[t=0.0237713s, 26916 KB] Building successor generator...done!
[t=0.0239997s, 26916 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0240085s, 26916 KB] time for successor generation creation: 0.000195715s
[t=0.0240211s, 26916 KB] Variables: 49
[t=0.0240299s, 26916 KB] FactPairs: 650
[t=0.0240378s, 26916 KB] Bytes per state: 20
[t=0.0241682s, 26916 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0242195s, 26916 KB] 48 initial landmarks, 17 goal landmarks
[t=0.0242877s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0242981s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0243073s, 26916 KB] g=0, 1 evaluated, 0 expanded
[t=0.0243238s, 26916 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0243326s, 26916 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0245465s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0245574s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0245654s, 26916 KB] g=2, 7 evaluated, 6 expanded
[t=0.0247422s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0247512s, 26916 KB] g=4, 13 evaluated, 12 expanded
[t=0.0247898s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0247985s, 26916 KB] g=4, 14 evaluated, 13 expanded
[t=0.0251419s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.025153s, 26916 KB] g=6, 26 evaluated, 25 expanded
[t=0.0255136s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0255245s, 26916 KB] g=8, 38 evaluated, 37 expanded
[t=0.0260436s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0260542s, 26916 KB] g=10, 56 evaluated, 55 expanded
[t=0.0265418s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0265517s, 26916 KB] g=12, 73 evaluated, 72 expanded
[t=0.0268073s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0268162s, 26916 KB] g=8, 82 evaluated, 81 expanded
[t=0.0270468s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0270564s, 26916 KB] g=14, 90 evaluated, 89 expanded
[t=0.0275825s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.027592s, 26916 KB] g=16, 109 evaluated, 108 expanded
[t=0.0280084s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0280181s, 26916 KB] g=12, 124 evaluated, 123 expanded
[t=0.0282253s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0282347s, 26916 KB] g=18, 131 evaluated, 130 expanded
[t=0.0284113s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0284287s, 26916 KB] g=14, 137 evaluated, 136 expanded
[t=0.0289317s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0289426s, 26916 KB] g=20, 154 evaluated, 153 expanded
[t=0.0294673s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0294822s, 26916 KB] g=21, 172 evaluated, 171 expanded
[t=0.0297193s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0297283s, 26916 KB] g=18, 180 evaluated, 179 expanded
[t=0.0301775s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0301872s, 26916 KB] g=20, 196 evaluated, 195 expanded
[t=0.030471s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0304801s, 26916 KB] g=24, 206 evaluated, 205 expanded
[t=0.0306879s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0306975s, 26916 KB] g=22, 213 evaluated, 212 expanded
[t=0.0312442s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0312542s, 26916 KB] g=26, 233 evaluated, 232 expanded
[t=0.0319612s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0319715s, 26916 KB] g=28, 258 evaluated, 257 expanded
[t=0.0322648s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0322744s, 26916 KB] g=28, 268 evaluated, 267 expanded
[t=0.0335728s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0335847s, 26916 KB] g=34, 314 evaluated, 313 expanded
[t=0.0336528s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.033662s, 26916 KB] g=30, 316 evaluated, 315 expanded
[t=0.0339781s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0339887s, 26916 KB] g=36, 327 evaluated, 326 expanded
[t=0.0343128s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0343224s, 26916 KB] g=32, 339 evaluated, 338 expanded
[t=0.0348799s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0348894s, 26916 KB] g=33, 360 evaluated, 359 expanded
[t=0.0349512s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0349596s, 26916 KB] g=34, 362 evaluated, 361 expanded
[t=0.0355609s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0355704s, 26916 KB] g=36, 384 evaluated, 383 expanded
[t=0.035952s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0359616s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.03597s, 26916 KB] g=38, 398 evaluated, 397 expanded
[t=0.0363377s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0363471s, 26916 KB] g=40, 412 evaluated, 411 expanded
[t=0.0366924s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0367049s, 26916 KB] g=40, 425 evaluated, 424 expanded
[t=0.0368633s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0368729s, 26916 KB] g=42, 431 evaluated, 430 expanded
[t=0.0374439s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0374538s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0374614s, 26916 KB] g=44, 454 evaluated, 453 expanded
[t=0.0376792s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.037689s, 26916 KB] g=45, 463 evaluated, 462 expanded
[t=0.0378157s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0378248s, 26916 KB] g=46, 468 evaluated, 467 expanded
[t=0.0383011s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.038313s, 26916 KB] g=48, 488 evaluated, 487 expanded
[t=0.0383462s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0383551s, 26916 KB] g=48, 489 evaluated, 488 expanded
[t=0.0387941s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0388047s, 26916 KB] g=50, 508 evaluated, 507 expanded
[t=0.0391631s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0391752s, 26916 KB] g=50, 521 evaluated, 520 expanded
[t=0.0392111s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0392203s, 26916 KB] g=52, 522 evaluated, 521 expanded
[t=0.0396124s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.039625s, 26916 KB] g=54, 538 evaluated, 537 expanded
[t=0.0398911s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0399071s, 26916 KB] g=56, 549 evaluated, 548 expanded
[t=0.0401461s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0401609s, 26916 KB] g=58, 559 evaluated, 558 expanded
[t=0.0403104s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.04032s, 26916 KB] g=58, 565 evaluated, 564 expanded
[t=0.0406296s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0406428s, 26916 KB] g=60, 577 evaluated, 576 expanded
[t=0.0411305s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0411457s, 26916 KB] g=62, 598 evaluated, 597 expanded
[t=0.0413406s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0413523s, 26916 KB] g=64, 606 evaluated, 605 expanded
[t=0.0414077s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0414169s, 26916 KB] g=65, 608 evaluated, 607 expanded
[t=0.0415572s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0415674s, 26916 KB] g=67, 614 evaluated, 613 expanded
[t=0.0417828s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0417937s, 26916 KB] g=70, 624 evaluated, 623 expanded
[t=0.0419295s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.04194s, 26916 KB] g=68, 630 evaluated, 629 expanded
[t=0.0420503s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0420613s, 26916 KB] g=69, 635 evaluated, 634 expanded
[t=0.042092s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0421077s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0421157s, 26916 KB] g=70, 636 evaluated, 635 expanded
[t=0.0421662s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.042175s, 26916 KB] g=71, 638 evaluated, 637 expanded
[t=0.0422825s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0422915s, 26916 KB] g=73, 643 evaluated, 642 expanded
[t=0.0423791s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0423881s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0423959s, 26916 KB] g=74, 647 evaluated, 646 expanded
[t=0.0424439s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0424526s, 26916 KB] g=75, 649 evaluated, 648 expanded
[t=0.0424815s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.04249s, 26916 KB] g=76, 650 evaluated, 649 expanded
[t=0.0425345s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.042543s, 26916 KB] g=77, 652 evaluated, 651 expanded
[t=0.0426333s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0426424s, 26916 KB] g=81, 657 evaluated, 656 expanded
[t=0.0427049s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0427143s, 26916 KB] g=82, 660 evaluated, 659 expanded
[t=0.0427528s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0427611s, 26916 KB] g=83, 662 evaluated, 661 expanded
[t=0.0427869s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0427951s, 26916 KB] g=84, 663 evaluated, 662 expanded
[t=0.0428181s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0428269s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0428344s, 26916 KB] g=84, 664 evaluated, 663 expanded
[t=0.042852s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0428602s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0428679s, 26916 KB] g=85, 665 evaluated, 664 expanded
[t=0.0428828s, 26916 KB] Solution found!
[t=0.042893s, 26916 KB] Actual search time: 0.0186702s
unstack b4 b9 (1)
put-down b4 (1)
unstack b13 b2 (1)
put-down b13 (1)
unstack b20 b11 (1)
put-down b20 (1)
unstack b11 b7 (1)
put-down b11 (1)
unstack b21 b3 (1)
put-down b21 (1)
unstack b3 b1 (1)
put-down b3 (1)
unstack b6 b16 (1)
put-down b6 (1)
unstack b16 b24 (1)
put-down b16 (1)
unstack b9 b17 (1)
put-down b9 (1)
unstack b17 b5 (1)
put-down b17 (1)
unstack b5 b18 (1)
put-down b5 (1)
unstack b18 b10 (1)
put-down b18 (1)
unstack b10 b12 (1)
put-down b10 (1)
unstack b12 b22 (1)
put-down b12 (1)
pick-up b9 (1)
stack b9 b12 (1)
unstack b1 b8 (1)
stack b1 b9 (1)
unstack b8 b14 (1)
stack b8 b22 (1)
unstack b14 b15 (1)
stack b14 b4 (1)
unstack b15 b23 (1)
put-down b15 (1)
pick-up b24 (1)
stack b24 b6 (1)
unstack b23 b19 (1)
put-down b23 (1)
pick-up b11 (1)
stack b11 b1 (1)
pick-up b13 (1)
stack b13 b18 (1)
pick-up b16 (1)
stack b16 b14 (1)
pick-up b17 (1)
stack b17 b20 (1)
pick-up b19 (1)
stack b19 b11 (1)
pick-up b2 (1)
stack b2 b16 (1)
pick-up b21 (1)
stack b21 b7 (1)
pick-up b5 (1)
stack b5 b17 (1)
unstack b13 b18 (1)
put-down b13 (1)
pick-up b18 (1)
stack b18 b2 (1)
pick-up b13 (1)
stack b13 b18 (1)
unstack b24 b6 (1)
put-down b24 (1)
pick-up b6 (1)
stack b6 b23 (1)
pick-up b24 (1)
stack b24 b6 (1)
unstack b21 b7 (1)
put-down b21 (1)
pick-up b7 (1)
stack b7 b13 (1)
pick-up b21 (1)
stack b21 b7 (1)
unstack b5 b17 (1)
put-down b5 (1)
unstack b17 b20 (1)
put-down b17 (1)
pick-up b20 (1)
stack b20 b21 (1)
pick-up b17 (1)
stack b17 b20 (1)
pick-up b5 (1)
stack b5 b17 (1)
[t=0.0429022s, 26916 KB] Plan length: 86 step(s).
[t=0.0429022s, 26916 KB] Plan cost: 86
[t=0.0429022s, 26916 KB] Expanded 665 state(s).
[t=0.0429022s, 26916 KB] Reopened 0 state(s).
[t=0.0429022s, 26916 KB] Evaluated 666 state(s).
[t=0.0429022s, 26916 KB] Evaluations: 1332
[t=0.0429022s, 26916 KB] Generated 9062 state(s).
[t=0.0429022s, 26916 KB] Dead ends: 0 state(s).
[t=0.0429022s, 26916 KB] Number of registered states: 666
[t=0.0429022s, 26916 KB] Int hash set load factor: 666/1024 = 0.650391
[t=0.0429022s, 26916 KB] Int hash set resizes: 10
[t=0.0429022s, 26916 KB] Search time: 0.0187348s
[t=0.0429022s, 26916 KB] Total time: 0.0429022s
Solution found.
Peak memory: 26916 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.20s
