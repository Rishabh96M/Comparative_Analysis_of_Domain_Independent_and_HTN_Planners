INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_22/bws_problem_22_1.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.011s wall-clock]
1608 relevant atoms
1078 auxiliary atoms
2686 final queue length
4669 total queue pushes
Completing instantiation... [0.020s CPU, 0.017s wall-clock]
Instantiating: [0.030s CPU, 0.030s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
23 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.007s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
1430 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
44 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.012s wall-clock]
Reordering and filtering variables...
45 of 45 variables necessary.
23 of 45 mutex groups necessary.
968 of 968 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.008s wall-clock]
Translator variables: 45
Translator derived variables: 0
Translator facts: 552
Translator goal facts: 18
Translator mutex groups: 23
Translator total mutex groups size: 529
Translator operators: 968
Translator axioms: 0
Translator task size: 8338
Translator peak memory: 36976 KB
Writing output... [0.010s CPU, 0.005s wall-clock]
Done! [0.090s CPU, 0.090s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=3.2344e-05s, 24488 KB] reading input...
[t=0.00309499s, 25340 KB] done reading input!
[t=0.00407038s, 25736 KB] Initializing landmark count heuristic...
[t=0.00413577s, 25736 KB] Generating landmark graph...
[t=0.00420645s, 25736 KB] Building a landmark graph with reasonable orders.
[t=0.00428386s, 25736 KB] Initializing Exploration...
[t=0.00463033s, 26000 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0164375s, 26528 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0166845s, 26528 KB] Landmarks generation time: 0.0124792s
[t=0.0167024s, 26528 KB] Discovered 98 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0167234s, 26528 KB] 422 edges
[t=0.0167337s, 26528 KB] approx. reasonable orders
[t=0.0194439s, 26528 KB] approx. obedient reasonable orders
[t=0.0194748s, 26528 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.019485s, 26528 KB] Landmarks generation time: 0.0153457s
[t=0.0194949s, 26528 KB] Discovered 98 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0195034s, 26528 KB] 474 edges
[t=0.019512s, 26528 KB] Landmark graph generation time: 0.0153832s
[t=0.0195206s, 26528 KB] Landmark graph contains 98 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0195287s, 26528 KB] Landmark graph contains 474 orderings.
[t=0.0198807s, 26528 KB] Simplifying 3828 unary operators... done! [2904 unary operators]
[t=0.0208183s, 26528 KB] time to simplify: 0.000998749s
[t=0.020948s, 26528 KB] Initializing additive heuristic...
[t=0.0209662s, 26528 KB] Initializing FF heuristic...
[t=0.0210179s, 26528 KB] Building successor generator...done!
[t=0.0212166s, 26528 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0212329s, 26528 KB] time for successor generation creation: 0.000164667s
[t=0.0212495s, 26528 KB] Variables: 45
[t=0.0212579s, 26528 KB] FactPairs: 552
[t=0.0212662s, 26528 KB] Bytes per state: 20
[t=0.0213557s, 26528 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0213927s, 26528 KB] 45 initial landmarks, 18 goal landmarks
[t=0.0214463s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0214559s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0214645s, 26528 KB] g=0, 1 evaluated, 0 expanded
[t=0.0214777s, 26528 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0214865s, 26528 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0216086s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0216188s, 26528 KB] g=2, 5 evaluated, 4 expanded
[t=0.0217823s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0217917s, 26528 KB] g=4, 11 evaluated, 10 expanded
[t=0.021979s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0219882s, 26528 KB] g=6, 18 evaluated, 17 expanded
[t=0.022295s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0223048s, 26528 KB] g=8, 30 evaluated, 29 expanded
[t=0.0224965s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0225058s, 26528 KB] g=4, 37 evaluated, 36 expanded
[t=0.0225936s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0226028s, 26528 KB] g=10, 40 evaluated, 39 expanded
[t=0.0230024s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0230119s, 26528 KB] g=12, 56 evaluated, 55 expanded
[t=0.0231001s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.023109s, 26528 KB] g=6, 59 evaluated, 58 expanded
[t=0.0235068s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0235207s, 26528 KB] g=14, 74 evaluated, 73 expanded
[t=0.0239454s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0239556s, 26528 KB] g=16, 91 evaluated, 90 expanded
[t=0.0241136s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0241279s, 26528 KB] g=17, 97 evaluated, 96 expanded
[t=0.0243154s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0243254s, 26528 KB] g=10, 104 evaluated, 103 expanded
[t=0.024589s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0245991s, 26528 KB] g=12, 114 evaluated, 113 expanded
[t=0.0247322s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0247441s, 26528 KB] g=20, 119 evaluated, 118 expanded
[t=0.0249317s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0249435s, 26528 KB] g=14, 126 evaluated, 125 expanded
[t=0.0253472s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0253741s, 26528 KB] g=22, 141 evaluated, 140 expanded
[t=0.0258872s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0259005s, 26528 KB] g=20, 160 evaluated, 159 expanded
[t=0.0260382s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.026048s, 26528 KB] g=24, 165 evaluated, 164 expanded
[t=0.0261091s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.026118s, 26528 KB] g=25, 167 evaluated, 166 expanded
[t=0.0262571s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0262661s, 26528 KB] g=22, 172 evaluated, 171 expanded
[t=0.0265979s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0266083s, 26528 KB] g=24, 185 evaluated, 184 expanded
[t=0.0269358s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0269464s, 26528 KB] g=28, 198 evaluated, 197 expanded
[t=0.0269847s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0269939s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0270019s, 26528 KB] g=26, 199 evaluated, 198 expanded
[t=0.0270374s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0270461s, 26528 KB] g=27, 200 evaluated, 199 expanded
[t=0.0270817s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0270905s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0270984s, 26528 KB] g=28, 201 evaluated, 200 expanded
[t=0.0272571s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0272666s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0272746s, 26528 KB] g=30, 207 evaluated, 206 expanded
[t=0.0274577s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.027467s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0274751s, 26528 KB] g=32, 214 evaluated, 213 expanded
[t=0.0276608s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0276707s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0276811s, 26528 KB] g=34, 221 evaluated, 220 expanded
[t=0.0278452s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0278547s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0278664s, 26528 KB] g=36, 227 evaluated, 226 expanded
[t=0.0280008s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.02801s, 26528 KB] g=38, 232 evaluated, 231 expanded
[t=0.0280439s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0280528s, 26528 KB] g=38, 233 evaluated, 232 expanded
[t=0.028189s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0281982s, 26528 KB] g=40, 238 evaluated, 237 expanded
[t=0.0283034s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0283123s, 26528 KB] g=40, 242 evaluated, 241 expanded
[t=0.0285662s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0285763s, 26528 KB] g=42, 252 evaluated, 251 expanded
[t=0.0286837s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0286932s, 26528 KB] g=43, 256 evaluated, 255 expanded
[t=0.0287417s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0287507s, 26528 KB] g=44, 257 evaluated, 256 expanded
[t=0.0289893s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.029s, 26528 KB] g=46, 267 evaluated, 266 expanded
[t=0.0292073s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0292208s, 26528 KB] g=48, 276 evaluated, 275 expanded
[t=0.029473s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0294838s, 26528 KB] g=50, 287 evaluated, 286 expanded
[t=0.0296578s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0296674s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.029676s, 26528 KB] g=50, 294 evaluated, 293 expanded
[t=0.0298169s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0298265s, 26528 KB] g=52, 300 evaluated, 299 expanded
[t=0.0298787s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.029888s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0298962s, 26528 KB] g=52, 302 evaluated, 301 expanded
[t=0.0300132s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0300228s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0300314s, 26528 KB] g=54, 307 evaluated, 306 expanded
[t=0.0301236s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0301328s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0301411s, 26528 KB] g=56, 311 evaluated, 310 expanded
[t=0.0303231s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0303324s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0303406s, 26528 KB] g=60, 320 evaluated, 319 expanded
[t=0.0304066s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0304154s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0304235s, 26528 KB] g=62, 323 evaluated, 322 expanded
[t=0.0306137s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0306258s, 26528 KB] g=71, 334 evaluated, 333 expanded
[t=0.0306513s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0306598s, 26528 KB] g=72, 335 evaluated, 334 expanded
[t=0.0307136s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0307222s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0307301s, 26528 KB] g=74, 338 evaluated, 337 expanded
[t=0.0307914s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0308s, 26528 KB] g=78, 342 evaluated, 341 expanded
[t=0.0308171s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0308255s, 26528 KB] g=79, 343 evaluated, 342 expanded
[t=0.0308407s, 26528 KB] Solution found!
[t=0.0308529s, 26528 KB] Actual search time: 0.00945772s
unstack b5 b12 (1)
put-down b5 (1)
unstack b12 b18 (1)
put-down b12 (1)
unstack b18 b2 (1)
put-down b18 (1)
unstack b2 b8 (1)
put-down b2 (1)
unstack b7 b19 (1)
stack b7 b8 (1)
unstack b19 b20 (1)
stack b19 b12 (1)
pick-up b2 (1)
stack b2 b20 (1)
unstack b4 b22 (1)
put-down b4 (1)
unstack b22 b3 (1)
put-down b22 (1)
unstack b3 b15 (1)
stack b3 b2 (1)
unstack b15 b10 (1)
stack b15 b19 (1)
unstack b10 b17 (1)
put-down b10 (1)
unstack b17 b11 (1)
stack b17 b15 (1)
unstack b11 b1 (1)
stack b11 b7 (1)
unstack b1 b21 (1)
stack b1 b18 (1)
unstack b21 b9 (1)
stack b21 b17 (1)
pick-up b22 (1)
stack b22 b1 (1)
pick-up b4 (1)
stack b4 b10 (1)
unstack b3 b2 (1)
put-down b3 (1)
unstack b2 b20 (1)
put-down b2 (1)
unstack b20 b16 (1)
put-down b20 (1)
unstack b16 b14 (1)
stack b16 b21 (1)
unstack b14 b6 (1)
put-down b14 (1)
pick-up b9 (1)
stack b9 b5 (1)
pick-up b6 (1)
stack b6 b4 (1)
pick-up b20 (1)
stack b20 b6 (1)
pick-up b2 (1)
stack b2 b20 (1)
pick-up b3 (1)
stack b3 b2 (1)
unstack b9 b5 (1)
put-down b9 (1)
pick-up b5 (1)
stack b5 b3 (1)
pick-up b9 (1)
stack b9 b5 (1)
unstack b11 b7 (1)
put-down b11 (1)
unstack b7 b8 (1)
put-down b7 (1)
pick-up b11 (1)
stack b11 b7 (1)
unstack b8 b13 (1)
put-down b8 (1)
pick-up b13 (1)
stack b13 b22 (1)
pick-up b8 (1)
stack b8 b13 (1)
unstack b11 b7 (1)
put-down b11 (1)
pick-up b7 (1)
stack b7 b8 (1)
pick-up b11 (1)
stack b11 b7 (1)
[t=0.0308628s, 26528 KB] Plan length: 80 step(s).
[t=0.0308628s, 26528 KB] Plan cost: 80
[t=0.0308628s, 26528 KB] Expanded 343 state(s).
[t=0.0308628s, 26528 KB] Reopened 0 state(s).
[t=0.0308628s, 26528 KB] Evaluated 344 state(s).
[t=0.0308628s, 26528 KB] Evaluations: 688
[t=0.0308628s, 26528 KB] Generated 3008 state(s).
[t=0.0308628s, 26528 KB] Dead ends: 0 state(s).
[t=0.0308628s, 26528 KB] Number of registered states: 344
[t=0.0308628s, 26528 KB] Int hash set load factor: 344/512 = 0.671875
[t=0.0308628s, 26528 KB] Int hash set resizes: 9
[t=0.0308628s, 26528 KB] Search time: 0.00950771s
[t=0.0308628s, 26528 KB] Total time: 0.0308628s
Solution found.
Peak memory: 26528 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.16s
