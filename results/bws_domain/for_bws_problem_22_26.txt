INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_22/bws_problem_22_26.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.010s wall-clock]
1608 relevant atoms
1078 auxiliary atoms
2686 final queue length
4671 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.032s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
23 uncovered facts
Choosing groups: [0.010s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.006s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.026s wall-clock]
1430 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
44 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.012s wall-clock]
Reordering and filtering variables...
45 of 45 variables necessary.
23 of 45 mutex groups necessary.
968 of 968 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 45
Translator derived variables: 0
Translator facts: 552
Translator goal facts: 18
Translator mutex groups: 23
Translator total mutex groups size: 529
Translator operators: 968
Translator axioms: 0
Translator task size: 8338
Translator peak memory: 36976 KB
Writing output... [0.010s CPU, 0.005s wall-clock]
Done! [0.090s CPU, 0.092s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=1.5886e-05s, 24488 KB] reading input...
[t=0.00306692s, 25340 KB] done reading input!
[t=0.00393295s, 25736 KB] Initializing landmark count heuristic...
[t=0.00396711s, 25736 KB] Generating landmark graph...
[t=0.00402911s, 25736 KB] Building a landmark graph with reasonable orders.
[t=0.00409477s, 25736 KB] Initializing Exploration...
[t=0.00439783s, 26000 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0140246s, 26528 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0142386s, 26528 KB] Landmarks generation time: 0.0102126s
[t=0.014256s, 26528 KB] Discovered 94 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0142893s, 26528 KB] 359 edges
[t=0.0143006s, 26528 KB] approx. reasonable orders
[t=0.0156623s, 26528 KB] approx. obedient reasonable orders
[t=0.0156935s, 26528 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0157142s, 26528 KB] Landmarks generation time: 0.0117441s
[t=0.0157247s, 26528 KB] Discovered 94 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0157331s, 26528 KB] 381 edges
[t=0.0157419s, 26528 KB] Landmark graph generation time: 0.0117818s
[t=0.0157503s, 26528 KB] Landmark graph contains 94 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0157585s, 26528 KB] Landmark graph contains 381 orderings.
[t=0.016097s, 26528 KB] Simplifying 3828 unary operators... done! [2904 unary operators]
[t=0.0169968s, 26528 KB] time to simplify: 0.000960146s
[t=0.0171209s, 26528 KB] Initializing additive heuristic...
[t=0.0171357s, 26528 KB] Initializing FF heuristic...
[t=0.0171875s, 26528 KB] Building successor generator...done!
[t=0.0173925s, 26528 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0174012s, 26528 KB] time for successor generation creation: 0.000172191s
[t=0.0174139s, 26528 KB] Variables: 45
[t=0.017422s, 26528 KB] FactPairs: 552
[t=0.0174301s, 26528 KB] Bytes per state: 20
[t=0.0175564s, 26528 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0175898s, 26528 KB] 45 initial landmarks, 18 goal landmarks
[t=0.0176645s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0176738s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0176855s, 26528 KB] g=0, 1 evaluated, 0 expanded
[t=0.0176987s, 26528 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0177074s, 26528 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0177976s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0178077s, 26528 KB] g=1, 4 evaluated, 3 expanded
[t=0.0180581s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0180681s, 26528 KB] g=4, 14 evaluated, 13 expanded
[t=0.0183458s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0183554s, 26528 KB] g=6, 25 evaluated, 24 expanded
[t=0.01867s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0186881s, 26528 KB] g=8, 37 evaluated, 36 expanded
[t=0.0187478s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0187565s, 26528 KB] g=8, 39 evaluated, 38 expanded
[t=0.0191541s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0191638s, 26528 KB] g=10, 55 evaluated, 54 expanded
[t=0.0192223s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0192309s, 26528 KB] g=10, 57 evaluated, 56 expanded
[t=0.0196245s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0196337s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0196416s, 26528 KB] g=12, 73 evaluated, 72 expanded
[t=0.019814s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0198226s, 26528 KB] g=14, 80 evaluated, 79 expanded
[t=0.0200421s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0200508s, 26528 KB] g=16, 89 evaluated, 88 expanded
[t=0.0202549s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.020264s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0202717s, 26528 KB] g=18, 97 evaluated, 96 expanded
[t=0.0204471s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0204559s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0204645s, 26528 KB] g=20, 104 evaluated, 103 expanded
[t=0.0209722s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0209815s, 26528 KB] g=24, 125 evaluated, 124 expanded
[t=0.0211856s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0211951s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.021203s, 26528 KB] g=26, 133 evaluated, 132 expanded
[t=0.0213759s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0213849s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0213929s, 26528 KB] g=28, 140 evaluated, 139 expanded
[t=0.0220509s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0220599s, 26528 KB] g=34, 167 evaluated, 166 expanded
[t=0.0223407s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0223503s, 26528 KB] g=36, 178 evaluated, 177 expanded
[t=0.0225559s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0225654s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0225743s, 26528 KB] g=38, 186 evaluated, 185 expanded
[t=0.0227591s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0227721s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0227803s, 26528 KB] g=40, 193 evaluated, 192 expanded
[t=0.0229267s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0229365s, 26528 KB] g=40, 198 evaluated, 197 expanded
[t=0.0230866s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.023096s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0231042s, 26528 KB] g=42, 204 evaluated, 203 expanded
[t=0.0236331s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0236439s, 26528 KB] g=48, 226 evaluated, 225 expanded
[t=0.0238184s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0238276s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0238356s, 26528 KB] g=50, 233 evaluated, 232 expanded
[t=0.0239618s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0239703s, 26528 KB] g=52, 238 evaluated, 237 expanded
[t=0.024121s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0241304s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0241387s, 26528 KB] g=54, 244 evaluated, 243 expanded
[t=0.0244252s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0244372s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0244468s, 26528 KB] g=56, 256 evaluated, 255 expanded
[t=0.0245059s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.024515s, 26528 KB] g=57, 257 evaluated, 256 expanded
[t=0.0245506s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0245594s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0245712s, 26528 KB] g=58, 258 evaluated, 257 expanded
[t=0.0247238s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0247326s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0247412s, 26528 KB] g=60, 264 evaluated, 263 expanded
[t=0.024868s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0248773s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.024886s, 26528 KB] g=62, 269 evaluated, 268 expanded
[t=0.0250248s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0250351s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0250432s, 26528 KB] g=64, 274 evaluated, 273 expanded
[t=0.0251373s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0251462s, 26528 KB] g=65, 277 evaluated, 276 expanded
[t=0.0251793s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0251885s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0252035s, 26528 KB] g=66, 278 evaluated, 277 expanded
[t=0.0264448s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0264568s, 26528 KB] g=74, 330 evaluated, 329 expanded
[t=0.0265601s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0265694s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0265775s, 26528 KB] g=76, 334 evaluated, 333 expanded
[t=0.0275074s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0275179s, 26528 KB] g=88, 377 evaluated, 376 expanded
[t=0.027683s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0276918s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0277s, 26528 KB] g=94, 384 evaluated, 383 expanded
[t=0.0280036s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0280128s, 26528 KB] g=88, 398 evaluated, 397 expanded
[t=0.028192s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0282007s, 26528 KB] g=92, 407 evaluated, 406 expanded
[t=0.0282662s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0282752s, 26528 KB] g=94, 410 evaluated, 409 expanded
[t=0.0285681s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0285772s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0285854s, 26528 KB] g=106, 428 evaluated, 427 expanded
[t=0.0286459s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0286543s, 26528 KB] g=110, 432 evaluated, 431 expanded
[t=0.0286707s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0286842s, 26528 KB] g=111, 433 evaluated, 432 expanded
[t=0.0286989s, 26528 KB] Solution found!
[t=0.0287096s, 26528 KB] Actual search time: 0.0111122s
unstack b22 b12 (1)
put-down b22 (1)
unstack b16 b21 (1)
put-down b16 (1)
unstack b21 b17 (1)
put-down b21 (1)
unstack b17 b1 (1)
stack b17 b4 (1)
unstack b5 b7 (1)
stack b5 b1 (1)
pick-up b12 (1)
stack b12 b7 (1)
unstack b17 b4 (1)
put-down b17 (1)
unstack b4 b15 (1)
stack b4 b21 (1)
pick-up b15 (1)
stack b15 b5 (1)
pick-up b17 (1)
stack b17 b4 (1)
unstack b18 b14 (1)
put-down b18 (1)
unstack b14 b2 (1)
put-down b14 (1)
pick-up b18 (1)
stack b18 b14 (1)
pick-up b2 (1)
stack b2 b16 (1)
unstack b12 b7 (1)
put-down b12 (1)
unstack b7 b8 (1)
put-down b7 (1)
unstack b8 b19 (1)
put-down b8 (1)
unstack b19 b11 (1)
put-down b19 (1)
pick-up b11 (1)
stack b11 b18 (1)
pick-up b7 (1)
stack b7 b8 (1)
pick-up b12 (1)
stack b12 b7 (1)
unstack b15 b5 (1)
put-down b15 (1)
unstack b5 b1 (1)
put-down b5 (1)
unstack b1 b20 (1)
stack b1 b19 (1)
pick-up b15 (1)
stack b15 b5 (1)
unstack b20 b3 (1)
put-down b20 (1)
unstack b3 b10 (1)
put-down b3 (1)
unstack b10 b13 (1)
stack b10 b2 (1)
unstack b13 b6 (1)
stack b13 b17 (1)
pick-up b20 (1)
stack b20 b10 (1)
pick-up b22 (1)
stack b22 b3 (1)
unstack b6 b9 (1)
stack b6 b15 (1)
pick-up b9 (1)
stack b9 b11 (1)
unstack b6 b15 (1)
put-down b6 (1)
unstack b15 b5 (1)
put-down b15 (1)
pick-up b5 (1)
stack b5 b1 (1)
pick-up b15 (1)
stack b15 b5 (1)
pick-up b6 (1)
stack b6 b15 (1)
unstack b20 b10 (1)
put-down b20 (1)
unstack b10 b2 (1)
put-down b10 (1)
pick-up b20 (1)
stack b20 b10 (1)
unstack b2 b16 (1)
put-down b2 (1)
pick-up b16 (1)
stack b16 b6 (1)
pick-up b2 (1)
stack b2 b16 (1)
unstack b20 b10 (1)
put-down b20 (1)
pick-up b10 (1)
stack b10 b2 (1)
pick-up b20 (1)
stack b20 b10 (1)
unstack b13 b17 (1)
put-down b13 (1)
unstack b17 b4 (1)
put-down b17 (1)
pick-up b13 (1)
stack b13 b17 (1)
unstack b4 b21 (1)
put-down b4 (1)
pick-up b21 (1)
stack b21 b20 (1)
pick-up b4 (1)
stack b4 b21 (1)
unstack b13 b17 (1)
put-down b13 (1)
pick-up b17 (1)
stack b17 b4 (1)
pick-up b13 (1)
stack b13 b17 (1)
[t=0.028719s, 26528 KB] Plan length: 112 step(s).
[t=0.028719s, 26528 KB] Plan cost: 112
[t=0.028719s, 26528 KB] Expanded 433 state(s).
[t=0.028719s, 26528 KB] Reopened 0 state(s).
[t=0.028719s, 26528 KB] Evaluated 434 state(s).
[t=0.028719s, 26528 KB] Evaluations: 868
[t=0.028719s, 26528 KB] Generated 3584 state(s).
[t=0.028719s, 26528 KB] Dead ends: 0 state(s).
[t=0.028719s, 26528 KB] Number of registered states: 434
[t=0.028719s, 26528 KB] Int hash set load factor: 434/512 = 0.847656
[t=0.028719s, 26528 KB] Int hash set resizes: 9
[t=0.028719s, 26528 KB] Search time: 0.0111631s
[t=0.028719s, 26528 KB] Total time: 0.028719s
Solution found.
Peak memory: 26528 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.17s
