INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_20/bws_problem_20_76.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.009s wall-clock]
1342 relevant atoms
900 auxiliary atoms
2242 final queue length
3887 total queue pushes
Completing instantiation... [0.010s CPU, 0.014s wall-clock]
Instantiating: [0.020s CPU, 0.024s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
21 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.005s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.020s wall-clock]
1180 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
40 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.009s wall-clock]
Reordering and filtering variables...
41 of 41 variables necessary.
21 of 41 mutex groups necessary.
800 of 800 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.005s wall-clock]
Translator variables: 41
Translator derived variables: 0
Translator facts: 462
Translator goal facts: 14
Translator mutex groups: 21
Translator total mutex groups size: 441
Translator operators: 800
Translator axioms: 0
Translator task size: 6898
Translator peak memory: 35944 KB
Writing output... [0.010s CPU, 0.004s wall-clock]
Done! [0.070s CPU, 0.072s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.5832e-05s, 24488 KB] reading input...
[t=0.00285444s, 25180 KB] done reading input!
[t=0.00390409s, 25444 KB] Initializing landmark count heuristic...
[t=0.0039523s, 25444 KB] Generating landmark graph...
[t=0.00401015s, 25576 KB] Building a landmark graph with reasonable orders.
[t=0.00407419s, 25576 KB] Initializing Exploration...
[t=0.00437463s, 25744 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0119712s, 26140 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0120341s, 26140 KB] Landmarks generation time: 0.00802996s
[t=0.0120548s, 26140 KB] Discovered 83 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0120853s, 26140 KB] 296 edges
[t=0.0121036s, 26140 KB] approx. reasonable orders
[t=0.0141445s, 26140 KB] approx. obedient reasonable orders
[t=0.0143309s, 26140 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0143426s, 26140 KB] Landmarks generation time: 0.0103876s
[t=0.0143529s, 26140 KB] Discovered 83 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.014363s, 26140 KB] 352 edges
[t=0.0143718s, 26140 KB] Landmark graph generation time: 0.010432s
[t=0.0143859s, 26140 KB] Landmark graph contains 83 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0144188s, 26140 KB] Landmark graph contains 352 orderings.
[t=0.0147887s, 26300 KB] Simplifying 3160 unary operators... done! [2400 unary operators]
[t=0.0155612s, 26300 KB] time to simplify: 0.00082884s
[t=0.015671s, 26300 KB] Initializing additive heuristic...
[t=0.0156859s, 26300 KB] Initializing FF heuristic...
[t=0.0157498s, 26300 KB] Building successor generator...done!
[t=0.0159375s, 26300 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0159475s, 26300 KB] time for successor generation creation: 0.00015198s
[t=0.0159622s, 26300 KB] Variables: 41
[t=0.0159716s, 26300 KB] FactPairs: 462
[t=0.0159816s, 26300 KB] Bytes per state: 16
[t=0.0161367s, 26300 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0161786s, 26300 KB] 40 initial landmarks, 14 goal landmarks
[t=0.0162349s, 26300 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0162456s, 26300 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0162544s, 26300 KB] g=0, 1 evaluated, 0 expanded
[t=0.0162705s, 26300 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.01628s, 26300 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0163615s, 26300 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0163745s, 26300 KB] g=1, 4 evaluated, 3 expanded
[t=0.0164088s, 26300 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0164187s, 26300 KB] g=2, 5 evaluated, 4 expanded
[t=0.0166323s, 26300 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0166452s, 26300 KB] g=4, 14 evaluated, 13 expanded
[t=0.0166772s, 26300 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0166865s, 26300 KB] g=3, 15 evaluated, 14 expanded
[t=0.0169367s, 26300 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0169533s, 26300 KB] g=6, 26 evaluated, 25 expanded
[t=0.0170065s, 26300 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0170243s, 26300 KB] g=7, 28 evaluated, 27 expanded
[t=0.0171761s, 26300 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0171854s, 26300 KB] g=9, 35 evaluated, 34 expanded
[t=0.0173977s, 26300 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0174068s, 26300 KB] g=10, 45 evaluated, 44 expanded
[t=0.0174796s, 26300 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0174884s, 26300 KB] g=12, 48 evaluated, 47 expanded
[t=0.0177199s, 26300 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0177292s, 26300 KB] g=14, 59 evaluated, 58 expanded
[t=0.0179679s, 26300 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0179785s, 26300 KB] g=14, 70 evaluated, 69 expanded
[t=0.0181108s, 26300 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0181286s, 26300 KB] g=16, 76 evaluated, 75 expanded
[t=0.0184572s, 26300 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0184704s, 26300 KB] g=18, 91 evaluated, 90 expanded
[t=0.0186694s, 26300 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0186786s, 26300 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.018687s, 26300 KB] g=20, 100 evaluated, 99 expanded
[t=0.0188784s, 26300 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0188874s, 26300 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0188957s, 26300 KB] g=22, 109 evaluated, 108 expanded
[t=0.0190796s, 26300 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0190993s, 26300 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0191099s, 26300 KB] g=24, 117 evaluated, 116 expanded
[t=0.0192733s, 26300 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0192827s, 26300 KB] g=26, 124 evaluated, 123 expanded
[t=0.0193537s, 26300 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0193627s, 26300 KB] g=26, 127 evaluated, 126 expanded
[t=0.0196472s, 26300 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0196566s, 26300 KB] g=28, 140 evaluated, 139 expanded
[t=0.0199712s, 26300 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0199812s, 26300 KB] g=30, 155 evaluated, 154 expanded
[t=0.0200974s, 26300 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0201065s, 26300 KB] g=30, 160 evaluated, 159 expanded
[t=0.0203371s, 26300 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0203463s, 26300 KB] g=32, 171 evaluated, 170 expanded
[t=0.020378s, 26300 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0203869s, 26300 KB] g=32, 172 evaluated, 171 expanded
[t=0.0208825s, 26300 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0208929s, 26300 KB] g=34, 196 evaluated, 195 expanded
[t=0.0209243s, 26300 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0209338s, 26300 KB] g=36, 197 evaluated, 196 expanded
[t=0.021278s, 26300 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0212892s, 26300 KB] g=38, 213 evaluated, 212 expanded
[t=0.0214947s, 26300 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0215114s, 26300 KB] g=36, 221 evaluated, 220 expanded
[t=0.02169s, 26300 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0217109s, 26300 KB] g=40, 226 evaluated, 225 expanded
[t=0.0219969s, 26300 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0220098s, 26300 KB] g=42, 239 evaluated, 238 expanded
[t=0.0220392s, 26300 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0220486s, 26300 KB] g=38, 240 evaluated, 239 expanded
[t=0.0222676s, 26300 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0222769s, 26300 KB] g=44, 251 evaluated, 250 expanded
[t=0.0225881s, 26300 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0226028s, 26300 KB] g=40, 266 evaluated, 265 expanded
[t=0.0230565s, 26300 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.02307s, 26300 KB] g=42, 289 evaluated, 288 expanded
[t=0.023346s, 26300 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0233593s, 26300 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0233681s, 26300 KB] g=44, 304 evaluated, 303 expanded
[t=0.0234866s, 26300 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0234965s, 26300 KB] g=46, 311 evaluated, 310 expanded
[t=0.0236804s, 26300 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0236917s, 26300 KB] g=48, 321 evaluated, 320 expanded
[t=0.023789s, 26300 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0237994s, 26300 KB] g=46, 326 evaluated, 325 expanded
[t=0.0238279s, 26300 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0238371s, 26300 KB] g=50, 327 evaluated, 326 expanded
[t=0.023961s, 26300 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0239715s, 26300 KB] g=52, 334 evaluated, 333 expanded
[t=0.0241073s, 26300 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0241277s, 26300 KB] g=48, 341 evaluated, 340 expanded
[t=0.0242947s, 26300 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0243356s, 26300 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0243502s, 26300 KB] g=50, 349 evaluated, 348 expanded
[t=0.0243971s, 26300 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0244138s, 26300 KB] g=51, 351 evaluated, 350 expanded
[t=0.0244407s, 26300 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0244503s, 26300 KB] g=52, 352 evaluated, 351 expanded
[t=0.0244997s, 26300 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0245095s, 26300 KB] g=54, 354 evaluated, 353 expanded
[t=0.0245308s, 26300 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.02454s, 26300 KB] g=55, 355 evaluated, 354 expanded
[t=0.0245876s, 26300 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0245973s, 26300 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0246059s, 26300 KB] g=58, 358 evaluated, 357 expanded
[t=0.0246231s, 26300 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0246318s, 26300 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0246402s, 26300 KB] g=59, 359 evaluated, 358 expanded
[t=0.0246546s, 26300 KB] Solution found!
[t=0.024667s, 26300 KB] Actual search time: 0.00848517s
unstack b15 b20 (1)
stack b15 b8 (1)
unstack b11 b19 (1)
put-down b11 (1)
unstack b2 b3 (1)
put-down b2 (1)
unstack b15 b8 (1)
put-down b15 (1)
unstack b4 b12 (1)
put-down b4 (1)
unstack b12 b10 (1)
put-down b12 (1)
unstack b10 b6 (1)
put-down b10 (1)
unstack b6 b5 (1)
put-down b6 (1)
unstack b8 b9 (1)
stack b8 b11 (1)
unstack b5 b17 (1)
put-down b5 (1)
pick-up b15 (1)
stack b15 b8 (1)
pick-up b17 (1)
stack b17 b3 (1)
unstack b9 b13 (1)
put-down b9 (1)
unstack b13 b18 (1)
put-down b13 (1)
unstack b18 b14 (1)
put-down b18 (1)
unstack b14 b7 (1)
put-down b14 (1)
unstack b7 b1 (1)
put-down b7 (1)
pick-up b10 (1)
stack b10 b7 (1)
unstack b1 b16 (1)
stack b1 b10 (1)
pick-up b14 (1)
stack b14 b1 (1)
pick-up b16 (1)
stack b16 b5 (1)
pick-up b20 (1)
stack b20 b16 (1)
pick-up b9 (1)
stack b9 b14 (1)
pick-up b13 (1)
stack b13 b9 (1)
pick-up b19 (1)
stack b19 b13 (1)
pick-up b4 (1)
stack b4 b6 (1)
pick-up b18 (1)
stack b18 b19 (1)
unstack b4 b6 (1)
put-down b4 (1)
pick-up b6 (1)
stack b6 b18 (1)
pick-up b4 (1)
stack b4 b6 (1)
[t=0.0246773s, 26300 KB] Plan length: 60 step(s).
[t=0.0246773s, 26300 KB] Plan cost: 60
[t=0.0246773s, 26300 KB] Expanded 359 state(s).
[t=0.0246773s, 26300 KB] Reopened 0 state(s).
[t=0.0246773s, 26300 KB] Evaluated 360 state(s).
[t=0.0246773s, 26300 KB] Evaluations: 720
[t=0.0246773s, 26300 KB] Generated 4130 state(s).
[t=0.0246773s, 26300 KB] Dead ends: 0 state(s).
[t=0.0246773s, 26300 KB] Number of registered states: 360
[t=0.0246773s, 26300 KB] Int hash set load factor: 360/512 = 0.703125
[t=0.0246773s, 26300 KB] Int hash set resizes: 9
[t=0.0246773s, 26300 KB] Search time: 0.00854144s
[t=0.0246773s, 26300 KB] Total time: 0.0246773s
Solution found.
Peak memory: 26300 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.15s
