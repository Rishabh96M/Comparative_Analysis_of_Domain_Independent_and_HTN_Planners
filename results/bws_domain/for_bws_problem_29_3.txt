INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_29/bws_problem_29_3.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.019s wall-clock]
2728 relevant atoms
1827 auxiliary atoms
4555 final queue length
7982 total queue pushes
Completing instantiation... [0.020s CPU, 0.028s wall-clock]
Instantiating: [0.040s CPU, 0.048s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.002s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
30 uncovered facts
Choosing groups: [0.000s CPU, 0.002s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.010s CPU, 0.001s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.002s wall-clock]
Translating task: [0.050s CPU, 0.049s wall-clock]
2494 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
58 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.020s wall-clock]
Reordering and filtering variables...
59 of 59 variables necessary.
30 of 59 mutex groups necessary.
1682 of 1682 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.011s wall-clock]
Translator variables: 59
Translator derived variables: 0
Translator facts: 930
Translator goal facts: 24
Translator mutex groups: 30
Translator total mutex groups size: 900
Translator operators: 1682
Translator axioms: 0
Translator task size: 14441
Translator peak memory: 40824 KB
Writing output... [0.010s CPU, 0.014s wall-clock]
Done! [0.150s CPU, 0.160s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.0154e-05s, 24488 KB] reading input...
[t=0.00515941s, 26220 KB] done reading input!
[t=0.00614576s, 26616 KB] Initializing landmark count heuristic...
[t=0.00617857s, 26616 KB] Generating landmark graph...
[t=0.00626708s, 26748 KB] Building a landmark graph with reasonable orders.
[t=0.0063521s, 26748 KB] Initializing Exploration...
[t=0.00681081s, 27200 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0309005s, 28128 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.031024s, 28128 KB] Landmarks generation time: 0.0247698s
[t=0.0310502s, 28128 KB] Discovered 128 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0310675s, 28128 KB] 903 edges
[t=0.0310781s, 28128 KB] approx. reasonable orders
[t=0.033413s, 28128 KB] approx. obedient reasonable orders
[t=0.0334978s, 28128 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0335083s, 28128 KB] Landmarks generation time: 0.027327s
[t=0.0335177s, 28128 KB] Discovered 128 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0335257s, 28128 KB] 931 edges
[t=0.0335339s, 28128 KB] Landmark graph generation time: 0.0273625s
[t=0.0335426s, 28128 KB] Landmark graph contains 128 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0335607s, 28128 KB] Landmark graph contains 931 orderings.
[t=0.0341319s, 28152 KB] Simplifying 6670 unary operators... done! [5046 unary operators]
[t=0.0358855s, 28152 KB] time to simplify: 0.00177422s
[t=0.0359985s, 28152 KB] Initializing additive heuristic...
[t=0.0360173s, 28152 KB] Initializing FF heuristic...
[t=0.0360697s, 28152 KB] Building successor generator...done!
[t=0.0363728s, 28320 KB] peak memory difference for successor generator creation: 168 KB
[t=0.036382s, 28320 KB] time for successor generation creation: 0.000273927s
[t=0.0363949s, 28320 KB] Variables: 59
[t=0.036403s, 28320 KB] FactPairs: 930
[t=0.036411s, 28320 KB] Bytes per state: 24
[t=0.0365157s, 28320 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0365479s, 28320 KB] 58 initial landmarks, 24 goal landmarks
[t=0.0366186s, 28320 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 70
[t=0.0366278s, 28320 KB] New best heuristic value for ff(transform = adapt_costs(one)): 51
[t=0.0366357s, 28320 KB] g=0, 1 evaluated, 0 expanded
[t=0.0366488s, 28320 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 70
[t=0.0366571s, 28320 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 51
[t=0.0367889s, 28320 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 69
[t=0.0367982s, 28320 KB] g=1, 4 evaluated, 3 expanded
[t=0.0371522s, 28320 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 68
[t=0.0371626s, 28320 KB] g=4, 13 evaluated, 12 expanded
[t=0.0373241s, 28320 KB] New best heuristic value for ff(transform = adapt_costs(one)): 50
[t=0.0373332s, 28320 KB] g=4, 17 evaluated, 16 expanded
[t=0.0376451s, 28320 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 67
[t=0.0376548s, 28320 KB] New best heuristic value for ff(transform = adapt_costs(one)): 49
[t=0.037663s, 28320 KB] g=6, 25 evaluated, 24 expanded
[t=0.0378956s, 28320 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 66
[t=0.0379047s, 28320 KB] g=8, 31 evaluated, 30 expanded
[t=0.0383837s, 28320 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 65
[t=0.038393s, 28320 KB] New best heuristic value for ff(transform = adapt_costs(one)): 48
[t=0.0384012s, 28320 KB] g=10, 43 evaluated, 42 expanded
[t=0.0386707s, 28320 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 64
[t=0.0386796s, 28320 KB] g=12, 50 evaluated, 49 expanded
[t=0.0388766s, 28320 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 63
[t=0.0388859s, 28320 KB] New best heuristic value for ff(transform = adapt_costs(one)): 47
[t=0.0388945s, 28320 KB] g=12, 55 evaluated, 54 expanded
[t=0.0391278s, 28320 KB] New best heuristic value for ff(transform = adapt_costs(one)): 46
[t=0.0391374s, 28320 KB] g=14, 61 evaluated, 60 expanded
[t=0.039226s, 28320 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 62
[t=0.0392354s, 28320 KB] g=14, 63 evaluated, 62 expanded
[t=0.0397508s, 28320 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.0397625s, 28320 KB] g=16, 76 evaluated, 75 expanded
[t=0.0401188s, 28320 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 57
[t=0.0401289s, 28320 KB] New best heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0401383s, 28320 KB] g=18, 85 evaluated, 84 expanded
[t=0.0403852s, 28320 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.040396s, 28320 KB] New best heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.0404043s, 28320 KB] g=20, 91 evaluated, 90 expanded
[t=0.0406488s, 28320 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0406577s, 28320 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0406659s, 28320 KB] g=22, 97 evaluated, 96 expanded
[t=0.0410218s, 28320 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0410383s, 28320 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0410504s, 28320 KB] g=24, 104 evaluated, 103 expanded
[t=0.0413897s, 28320 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0414026s, 28320 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0414142s, 28320 KB] g=26, 111 evaluated, 110 expanded
[t=0.0417119s, 28320 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0417273s, 28320 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0417369s, 28320 KB] g=28, 118 evaluated, 117 expanded
[t=0.0420179s, 28320 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0420271s, 28320 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0420365s, 28320 KB] g=30, 124 evaluated, 123 expanded
[t=0.0423285s, 28320 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0423372s, 28320 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0423451s, 28320 KB] g=32, 131 evaluated, 130 expanded
[t=0.0426478s, 28320 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0426571s, 28320 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0426656s, 28320 KB] g=34, 138 evaluated, 137 expanded
[t=0.0429114s, 28320 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0429201s, 28320 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.042928s, 28320 KB] g=36, 144 evaluated, 143 expanded
[t=0.0430979s, 28320 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0431074s, 28320 KB] g=37, 148 evaluated, 147 expanded
[t=0.0431566s, 28320 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0431654s, 28320 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0431735s, 28320 KB] g=38, 149 evaluated, 148 expanded
[t=0.0434132s, 28320 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0434259s, 28320 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0434343s, 28320 KB] g=40, 155 evaluated, 154 expanded
[t=0.0436403s, 28320 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0436512s, 28320 KB] g=42, 160 evaluated, 159 expanded
[t=0.0437808s, 28320 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0437912s, 28320 KB] g=43, 163 evaluated, 162 expanded
[t=0.0438569s, 28320 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0438658s, 28320 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0438737s, 28320 KB] g=44, 164 evaluated, 163 expanded
[t=0.0441542s, 28320 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0441636s, 28320 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0441714s, 28320 KB] g=46, 171 evaluated, 170 expanded
[t=0.044484s, 28320 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.044494s, 28320 KB] g=49, 179 evaluated, 178 expanded
[t=0.0450478s, 28320 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0450592s, 28320 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0450678s, 28320 KB] g=52, 193 evaluated, 192 expanded
[t=0.0451187s, 28320 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0451295s, 28320 KB] g=53, 194 evaluated, 193 expanded
[t=0.0454388s, 28320 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0454488s, 28320 KB] g=54, 202 evaluated, 201 expanded
[t=0.0459478s, 28320 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0459684s, 28320 KB] g=56, 213 evaluated, 212 expanded
[t=0.0472587s, 28320 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0472709s, 28320 KB] g=60, 246 evaluated, 245 expanded
[t=0.0475151s, 28320 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0475314s, 28320 KB] g=62, 252 evaluated, 251 expanded
[t=0.0481506s, 28320 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0481614s, 28320 KB] g=60, 267 evaluated, 266 expanded
[t=0.0496239s, 28320 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0496359s, 28320 KB] g=68, 305 evaluated, 304 expanded
[t=0.0499113s, 28320 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0499209s, 28320 KB] g=70, 312 evaluated, 311 expanded
[t=0.0501224s, 28320 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0501316s, 28320 KB] g=70, 317 evaluated, 316 expanded
[t=0.0503665s, 28320 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0503759s, 28320 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0503851s, 28320 KB] g=72, 323 evaluated, 322 expanded
[t=0.0515055s, 28320 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0515332s, 28320 KB] g=78, 347 evaluated, 346 expanded
[t=0.0550802s, 28320 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0551165s, 28320 KB] g=88, 438 evaluated, 437 expanded
[t=0.0553653s, 28320 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0553776s, 28320 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0553856s, 28320 KB] g=90, 444 evaluated, 443 expanded
[t=0.0556985s, 28320 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0557162s, 28320 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0557259s, 28320 KB] g=92, 449 evaluated, 448 expanded
[t=0.0561136s, 28320 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0561292s, 28320 KB] g=95, 459 evaluated, 458 expanded
[t=0.0565853s, 28320 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0566025s, 28320 KB] g=96, 471 evaluated, 470 expanded
[t=0.0568732s, 28320 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0568916s, 28320 KB] g=98, 478 evaluated, 477 expanded
[t=0.0569411s, 28320 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0569505s, 28320 KB] g=100, 479 evaluated, 478 expanded
[t=0.057723s, 28320 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0577366s, 28320 KB] g=104, 499 evaluated, 498 expanded
[t=0.0578975s, 28320 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0579077s, 28320 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0579161s, 28320 KB] g=106, 503 evaluated, 502 expanded
[t=0.0582673s, 28320 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0582777s, 28320 KB] g=110, 512 evaluated, 511 expanded
[t=0.0584287s, 28320 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0584382s, 28320 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.058447s, 28320 KB] g=112, 515 evaluated, 514 expanded
[t=0.0620619s, 28320 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0620891s, 28320 KB] g=142, 618 evaluated, 617 expanded
[t=0.0623585s, 28320 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0623682s, 28320 KB] g=146, 627 evaluated, 626 expanded
[t=0.0624646s, 28320 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0624735s, 28320 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0624812s, 28320 KB] g=148, 630 evaluated, 629 expanded
[t=0.06292s, 28320 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0629297s, 28320 KB] g=160, 648 evaluated, 647 expanded
[t=0.0630143s, 28320 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.063023s, 28320 KB] g=164, 652 evaluated, 651 expanded
[t=0.0630435s, 28320 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0630524s, 28320 KB] g=165, 653 evaluated, 652 expanded
[t=0.0630691s, 28320 KB] Solution found!
[t=0.0630808s, 28320 KB] Actual search time: 0.0265294s
unstack b17 b16 (1)
put-down b17 (1)
unstack b16 b15 (1)
put-down b16 (1)
unstack b15 b18 (1)
put-down b15 (1)
unstack b1 b6 (1)
put-down b1 (1)
unstack b6 b26 (1)
put-down b6 (1)
unstack b5 b21 (1)
stack b5 b26 (1)
unstack b18 b8 (1)
put-down b18 (1)
unstack b21 b10 (1)
stack b21 b5 (1)
pick-up b17 (1)
stack b17 b21 (1)
unstack b8 b22 (1)
stack b8 b25 (1)
unstack b22 b27 (1)
stack b22 b16 (1)
unstack b27 b11 (1)
stack b27 b6 (1)
unstack b11 b2 (1)
stack b11 b27 (1)
unstack b2 b24 (1)
stack b2 b1 (1)
unstack b24 b9 (1)
stack b24 b15 (1)
unstack b9 b3 (1)
put-down b9 (1)
unstack b3 b13 (1)
stack b3 b2 (1)
unstack b13 b4 (1)
stack b13 b3 (1)
unstack b4 b7 (1)
stack b4 b10 (1)
pick-up b18 (1)
stack b18 b13 (1)
unstack b7 b29 (1)
put-down b7 (1)
unstack b29 b20 (1)
stack b29 b28 (1)
unstack b20 b19 (1)
stack b20 b18 (1)
unstack b19 b12 (1)
put-down b19 (1)
unstack b12 b14 (1)
stack b12 b7 (1)
pick-up b14 (1)
stack b14 b8 (1)
unstack b12 b7 (1)
put-down b12 (1)
pick-up b19 (1)
stack b19 b12 (1)
unstack b4 b10 (1)
put-down b4 (1)
pick-up b10 (1)
stack b10 b20 (1)
pick-up b4 (1)
stack b4 b10 (1)
unstack b14 b8 (1)
put-down b14 (1)
unstack b8 b25 (1)
put-down b8 (1)
pick-up b25 (1)
stack b25 b22 (1)
pick-up b8 (1)
stack b8 b25 (1)
pick-up b14 (1)
stack b14 b8 (1)
unstack b19 b12 (1)
put-down b19 (1)
pick-up b12 (1)
stack b12 b7 (1)
pick-up b19 (1)
stack b19 b12 (1)
unstack b17 b21 (1)
put-down b17 (1)
unstack b21 b5 (1)
put-down b21 (1)
pick-up b17 (1)
stack b17 b21 (1)
unstack b5 b26 (1)
put-down b5 (1)
unstack b26 b23 (1)
stack b26 b11 (1)
pick-up b23 (1)
stack b23 b9 (1)
pick-up b5 (1)
stack b5 b26 (1)
unstack b19 b12 (1)
put-down b19 (1)
unstack b12 b7 (1)
put-down b12 (1)
pick-up b19 (1)
stack b19 b12 (1)
pick-up b7 (1)
stack b7 b23 (1)
unstack b19 b12 (1)
put-down b19 (1)
pick-up b12 (1)
stack b12 b7 (1)
pick-up b19 (1)
stack b19 b12 (1)
unstack b17 b21 (1)
put-down b17 (1)
pick-up b21 (1)
stack b21 b5 (1)
pick-up b17 (1)
stack b17 b21 (1)
unstack b4 b10 (1)
put-down b4 (1)
unstack b10 b20 (1)
put-down b10 (1)
pick-up b4 (1)
stack b4 b10 (1)
unstack b20 b18 (1)
put-down b20 (1)
unstack b18 b13 (1)
put-down b18 (1)
pick-up b20 (1)
stack b20 b18 (1)
unstack b4 b10 (1)
put-down b4 (1)
pick-up b10 (1)
stack b10 b20 (1)
pick-up b4 (1)
stack b4 b10 (1)
unstack b13 b3 (1)
put-down b13 (1)
unstack b3 b2 (1)
put-down b3 (1)
pick-up b13 (1)
stack b13 b3 (1)
unstack b2 b1 (1)
put-down b2 (1)
pick-up b1 (1)
stack b1 b24 (1)
pick-up b2 (1)
stack b2 b1 (1)
unstack b13 b3 (1)
put-down b13 (1)
pick-up b3 (1)
stack b3 b2 (1)
pick-up b13 (1)
stack b13 b3 (1)
unstack b4 b10 (1)
put-down b4 (1)
unstack b10 b20 (1)
put-down b10 (1)
pick-up b4 (1)
stack b4 b10 (1)
unstack b20 b18 (1)
put-down b20 (1)
pick-up b18 (1)
stack b18 b13 (1)
pick-up b20 (1)
stack b20 b18 (1)
unstack b4 b10 (1)
put-down b4 (1)
pick-up b10 (1)
stack b10 b20 (1)
pick-up b4 (1)
stack b4 b10 (1)
[t=0.0630898s, 28320 KB] Plan length: 166 step(s).
[t=0.0630898s, 28320 KB] Plan cost: 166
[t=0.0630898s, 28320 KB] Expanded 653 state(s).
[t=0.0630898s, 28320 KB] Reopened 0 state(s).
[t=0.0630898s, 28320 KB] Evaluated 654 state(s).
[t=0.0630898s, 28320 KB] Evaluations: 1308
[t=0.0630898s, 28320 KB] Generated 6595 state(s).
[t=0.0630898s, 28320 KB] Dead ends: 0 state(s).
[t=0.0630898s, 28320 KB] Number of registered states: 654
[t=0.0630898s, 28320 KB] Int hash set load factor: 654/1024 = 0.638672
[t=0.0630898s, 28320 KB] Int hash set resizes: 10
[t=0.0630898s, 28320 KB] Search time: 0.0265743s
[t=0.0630898s, 28320 KB] Total time: 0.0630898s
Solution found.
Peak memory: 28320 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.27s
