INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_24/bws_problem_24_26.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.000s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.012s wall-clock]
1898 relevant atoms
1272 auxiliary atoms
3170 final queue length
5524 total queue pushes
Completing instantiation... [0.010s CPU, 0.019s wall-clock]
Instantiating: [0.030s CPU, 0.033s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
25 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.007s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.029s wall-clock]
1704 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
48 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.018s wall-clock]
Reordering and filtering variables...
49 of 49 variables necessary.
25 of 49 mutex groups necessary.
1152 of 1152 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.008s wall-clock]
Translator variables: 49
Translator derived variables: 0
Translator facts: 650
Translator goal facts: 20
Translator mutex groups: 25
Translator total mutex groups size: 625
Translator operators: 1152
Translator axioms: 0
Translator task size: 9912
Translator peak memory: 37872 KB
Writing output... [0.010s CPU, 0.006s wall-clock]
Done! [0.110s CPU, 0.105s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=3.963e-05s, 24488 KB] reading input...
[t=0.0034111s, 25532 KB] done reading input!
[t=0.00424367s, 25928 KB] Initializing landmark count heuristic...
[t=0.00427184s, 25928 KB] Generating landmark graph...
[t=0.0043997s, 25928 KB] Building a landmark graph with reasonable orders.
[t=0.00448686s, 26060 KB] Initializing Exploration...
[t=0.00483006s, 26388 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0195888s, 27048 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0198253s, 27048 KB] Landmarks generation time: 0.0154226s
[t=0.019841s, 27048 KB] Discovered 104 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0198805s, 27048 KB] 835 edges
[t=0.0198907s, 27048 KB] approx. reasonable orders
[t=0.0205299s, 27048 KB] approx. obedient reasonable orders
[t=0.0205655s, 27048 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0205754s, 27048 KB] Landmarks generation time: 0.0163009s
[t=0.020585s, 27048 KB] Discovered 104 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0205931s, 27048 KB] 847 edges
[t=0.0206013s, 27048 KB] Landmark graph generation time: 0.0163362s
[t=0.0206096s, 27048 KB] Landmark graph contains 104 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0206238s, 27048 KB] Landmark graph contains 847 orderings.
[t=0.02101s, 27048 KB] Simplifying 4560 unary operators... done! [3456 unary operators]
[t=0.0221371s, 27048 KB] time to simplify: 0.00114819s
[t=0.0222261s, 27048 KB] Initializing additive heuristic...
[t=0.022242s, 27048 KB] Initializing FF heuristic...
[t=0.0222908s, 27048 KB] Building successor generator...done!
[t=0.0225326s, 27048 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0225412s, 27048 KB] time for successor generation creation: 0.000206725s
[t=0.0225546s, 27048 KB] Variables: 49
[t=0.0225636s, 27048 KB] FactPairs: 650
[t=0.0225713s, 27048 KB] Bytes per state: 20
[t=0.0226545s, 27048 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0226865s, 27048 KB] 47 initial landmarks, 20 goal landmarks
[t=0.0227449s, 27048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 57
[t=0.0227544s, 27048 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0227628s, 27048 KB] g=0, 1 evaluated, 0 expanded
[t=0.022775s, 27048 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 57
[t=0.0227838s, 27048 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0228255s, 27048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0228344s, 27048 KB] g=1, 2 evaluated, 1 expanded
[t=0.0229295s, 27048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0229387s, 27048 KB] g=3, 5 evaluated, 4 expanded
[t=0.0231395s, 27048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0231485s, 27048 KB] g=6, 12 evaluated, 11 expanded
[t=0.0233341s, 27048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0233457s, 27048 KB] g=8, 18 evaluated, 17 expanded
[t=0.0235203s, 27048 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0235297s, 27048 KB] g=6, 24 evaluated, 23 expanded
[t=0.0236708s, 27048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0236802s, 27048 KB] g=10, 29 evaluated, 28 expanded
[t=0.0237697s, 27048 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0237786s, 27048 KB] g=8, 32 evaluated, 31 expanded
[t=0.0240833s, 27048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.024093s, 27048 KB] g=12, 43 evaluated, 42 expanded
[t=0.0244875s, 27048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.024503s, 27048 KB] g=14, 57 evaluated, 56 expanded
[t=0.0247576s, 27048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.024767s, 27048 KB] g=16, 66 evaluated, 65 expanded
[t=0.0250126s, 27048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0250301s, 27048 KB] g=18, 74 evaluated, 73 expanded
[t=0.0254613s, 27048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0254711s, 27048 KB] g=21, 89 evaluated, 88 expanded
[t=0.0258828s, 27048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0258931s, 27048 KB] g=24, 104 evaluated, 103 expanded
[t=0.0270246s, 27048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0270392s, 27048 KB] g=27, 145 evaluated, 144 expanded
[t=0.0270811s, 27048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0270906s, 27048 KB] g=28, 146 evaluated, 145 expanded
[t=0.0273933s, 27048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0274066s, 27048 KB] g=30, 156 evaluated, 155 expanded
[t=0.0274729s, 27048 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0274827s, 27048 KB] g=30, 158 evaluated, 157 expanded
[t=0.0279867s, 27048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0280034s, 27048 KB] g=32, 176 evaluated, 175 expanded
[t=0.0282994s, 27048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0283168s, 27048 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0283271s, 27048 KB] g=34, 186 evaluated, 185 expanded
[t=0.028646s, 27048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0286628s, 27048 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0286743s, 27048 KB] g=36, 196 evaluated, 195 expanded
[t=0.0289616s, 27048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0289777s, 27048 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0289896s, 27048 KB] g=38, 205 evaluated, 204 expanded
[t=0.0292935s, 27048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0293128s, 27048 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0293217s, 27048 KB] g=40, 214 evaluated, 213 expanded
[t=0.0295821s, 27048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0295949s, 27048 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0296042s, 27048 KB] g=42, 222 evaluated, 221 expanded
[t=0.0297116s, 27048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0297238s, 27048 KB] g=43, 225 evaluated, 224 expanded
[t=0.0297677s, 27048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0297788s, 27048 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0297877s, 27048 KB] g=44, 226 evaluated, 225 expanded
[t=0.0300472s, 27048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0300595s, 27048 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0300687s, 27048 KB] g=46, 234 evaluated, 233 expanded
[t=0.0303679s, 27048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0303991s, 27048 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0304094s, 27048 KB] g=48, 243 evaluated, 242 expanded
[t=0.0306937s, 27048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0307051s, 27048 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0307135s, 27048 KB] g=50, 252 evaluated, 251 expanded
[t=0.0320677s, 27048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0320838s, 27048 KB] g=54, 299 evaluated, 298 expanded
[t=0.0322865s, 27048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0322984s, 27048 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0323064s, 27048 KB] g=56, 306 evaluated, 305 expanded
[t=0.033292s, 27048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0333082s, 27048 KB] g=62, 341 evaluated, 340 expanded
[t=0.0335878s, 27048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0336037s, 27048 KB] g=64, 350 evaluated, 349 expanded
[t=0.0338427s, 27048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0338583s, 27048 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0338669s, 27048 KB] g=66, 358 evaluated, 357 expanded
[t=0.0339887s, 27048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0339997s, 27048 KB] g=67, 362 evaluated, 361 expanded
[t=0.0340397s, 27048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0340492s, 27048 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0340569s, 27048 KB] g=68, 363 evaluated, 362 expanded
[t=0.0342503s, 27048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0342664s, 27048 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.034275s, 27048 KB] g=70, 369 evaluated, 368 expanded
[t=0.0353088s, 27048 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0353199s, 27048 KB] g=74, 405 evaluated, 404 expanded
[t=0.035491s, 27048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0355002s, 27048 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0355081s, 27048 KB] g=76, 411 evaluated, 410 expanded
[t=0.0380556s, 27048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0380667s, 27048 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0380772s, 27048 KB] g=84, 505 evaluated, 504 expanded
[t=0.0382443s, 27048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.038254s, 27048 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0382623s, 27048 KB] g=86, 510 evaluated, 509 expanded
[t=0.0408263s, 27048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0408437s, 27048 KB] g=98, 608 evaluated, 607 expanded
[t=0.0412243s, 27048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0412344s, 27048 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0412424s, 27048 KB] g=104, 622 evaluated, 621 expanded
[t=0.0436691s, 27048 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0436839s, 27048 KB] g=118, 713 evaluated, 712 expanded
[t=0.0437999s, 27048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0438092s, 27048 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0438171s, 27048 KB] g=120, 717 evaluated, 716 expanded
[t=0.0440776s, 27048 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0440932s, 27048 KB] g=124, 726 evaluated, 725 expanded
[t=0.0441839s, 27048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0441934s, 27048 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0442013s, 27048 KB] g=126, 729 evaluated, 728 expanded
[t=0.0501013s, 27048 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0501546s, 27048 KB] g=160, 966 evaluated, 965 expanded
[t=0.0503682s, 27048 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0503779s, 27048 KB] g=164, 975 evaluated, 974 expanded
[t=0.0504549s, 27048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0504641s, 27048 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0504729s, 27048 KB] g=166, 978 evaluated, 977 expanded
[t=0.0508218s, 27048 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0508379s, 27048 KB] g=178, 995 evaluated, 994 expanded
[t=0.0509064s, 27048 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.050915s, 27048 KB] g=182, 999 evaluated, 998 expanded
[t=0.0509336s, 27048 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0509421s, 27048 KB] g=183, 1000 evaluated, 999 expanded
[t=0.0509588s, 27048 KB] Solution found!
[t=0.0509735s, 27048 KB] Actual search time: 0.0282854s
unstack b21 b17 (1)
put-down b21 (1)
unstack b17 b20 (1)
put-down b17 (1)
unstack b20 b15 (1)
put-down b20 (1)
unstack b15 b1 (1)
put-down b15 (1)
unstack b1 b9 (1)
put-down b1 (1)
unstack b4 b2 (1)
stack b4 b20 (1)
pick-up b17 (1)
stack b17 b2 (1)
unstack b9 b7 (1)
put-down b9 (1)
unstack b7 b14 (1)
put-down b7 (1)
unstack b17 b2 (1)
put-down b17 (1)
unstack b2 b24 (1)
put-down b2 (1)
pick-up b17 (1)
stack b17 b2 (1)
unstack b14 b22 (1)
put-down b14 (1)
unstack b22 b11 (1)
stack b22 b7 (1)
pick-up b14 (1)
stack b14 b22 (1)
unstack b11 b5 (1)
put-down b11 (1)
unstack b5 b19 (1)
stack b5 b4 (1)
pick-up b1 (1)
stack b1 b5 (1)
unstack b19 b8 (1)
stack b19 b15 (1)
pick-up b11 (1)
stack b11 b19 (1)
unstack b8 b16 (1)
stack b8 b1 (1)
unstack b16 b10 (1)
stack b16 b14 (1)
unstack b10 b13 (1)
put-down b10 (1)
unstack b13 b3 (1)
put-down b13 (1)
unstack b24 b23 (1)
stack b24 b3 (1)
unstack b17 b2 (1)
put-down b17 (1)
pick-up b2 (1)
stack b2 b11 (1)
pick-up b17 (1)
stack b17 b2 (1)
unstack b24 b3 (1)
put-down b24 (1)
unstack b3 b6 (1)
put-down b3 (1)
unstack b6 b12 (1)
put-down b6 (1)
unstack b12 b18 (1)
stack b12 b24 (1)
pick-up b18 (1)
stack b18 b9 (1)
pick-up b21 (1)
stack b21 b18 (1)
pick-up b3 (1)
stack b3 b6 (1)
unstack b12 b24 (1)
put-down b12 (1)
pick-up b24 (1)
stack b24 b3 (1)
pick-up b12 (1)
stack b12 b24 (1)
unstack b21 b18 (1)
put-down b21 (1)
unstack b18 b9 (1)
put-down b18 (1)
pick-up b9 (1)
stack b9 b12 (1)
pick-up b18 (1)
stack b18 b9 (1)
pick-up b21 (1)
stack b21 b18 (1)
unstack b16 b14 (1)
put-down b16 (1)
unstack b14 b22 (1)
put-down b14 (1)
pick-up b16 (1)
stack b16 b14 (1)
unstack b22 b7 (1)
put-down b22 (1)
pick-up b7 (1)
stack b7 b8 (1)
pick-up b22 (1)
stack b22 b7 (1)
unstack b16 b14 (1)
put-down b16 (1)
pick-up b14 (1)
stack b14 b22 (1)
pick-up b16 (1)
stack b16 b14 (1)
unstack b17 b2 (1)
put-down b17 (1)
unstack b2 b11 (1)
put-down b2 (1)
pick-up b17 (1)
stack b17 b2 (1)
unstack b11 b19 (1)
put-down b11 (1)
unstack b19 b15 (1)
put-down b19 (1)
pick-up b15 (1)
stack b15 b10 (1)
pick-up b19 (1)
stack b19 b15 (1)
pick-up b11 (1)
stack b11 b19 (1)
unstack b17 b2 (1)
put-down b17 (1)
pick-up b2 (1)
stack b2 b11 (1)
pick-up b17 (1)
stack b17 b2 (1)
unstack b16 b14 (1)
put-down b16 (1)
unstack b14 b22 (1)
put-down b14 (1)
pick-up b16 (1)
stack b16 b14 (1)
unstack b22 b7 (1)
put-down b22 (1)
unstack b7 b8 (1)
put-down b7 (1)
pick-up b22 (1)
stack b22 b7 (1)
unstack b16 b14 (1)
put-down b16 (1)
pick-up b14 (1)
stack b14 b22 (1)
pick-up b16 (1)
stack b16 b14 (1)
unstack b8 b1 (1)
put-down b8 (1)
unstack b1 b5 (1)
put-down b1 (1)
pick-up b8 (1)
stack b8 b1 (1)
unstack b5 b4 (1)
put-down b5 (1)
unstack b4 b20 (1)
put-down b4 (1)
pick-up b20 (1)
stack b20 b13 (1)
pick-up b4 (1)
stack b4 b20 (1)
pick-up b5 (1)
stack b5 b4 (1)
unstack b8 b1 (1)
put-down b8 (1)
pick-up b1 (1)
stack b1 b5 (1)
pick-up b8 (1)
stack b8 b1 (1)
unstack b16 b14 (1)
put-down b16 (1)
unstack b14 b22 (1)
put-down b14 (1)
pick-up b16 (1)
stack b16 b14 (1)
unstack b22 b7 (1)
put-down b22 (1)
pick-up b7 (1)
stack b7 b8 (1)
pick-up b22 (1)
stack b22 b7 (1)
unstack b16 b14 (1)
put-down b16 (1)
pick-up b14 (1)
stack b14 b22 (1)
pick-up b16 (1)
stack b16 b14 (1)
[t=0.0509845s, 27048 KB] Plan length: 184 step(s).
[t=0.0509845s, 27048 KB] Plan cost: 184
[t=0.0509845s, 27048 KB] Expanded 1000 state(s).
[t=0.0509845s, 27048 KB] Reopened 0 state(s).
[t=0.0509845s, 27048 KB] Evaluated 1001 state(s).
[t=0.0509845s, 27048 KB] Evaluations: 2002
[t=0.0509845s, 27048 KB] Generated 9095 state(s).
[t=0.0509845s, 27048 KB] Dead ends: 0 state(s).
[t=0.0509845s, 27048 KB] Number of registered states: 1001
[t=0.0509845s, 27048 KB] Int hash set load factor: 1001/1024 = 0.977539
[t=0.0509845s, 27048 KB] Int hash set resizes: 10
[t=0.0509845s, 27048 KB] Search time: 0.0283304s
[t=0.0509845s, 27048 KB] Total time: 0.0509845s
Solution found.
Peak memory: 27048 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.20s
