INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_28/bws_problem_28_14.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.018s wall-clock]
2550 relevant atoms
1708 auxiliary atoms
4258 final queue length
7454 total queue pushes
Completing instantiation... [0.040s CPU, 0.034s wall-clock]
Instantiating: [0.060s CPU, 0.054s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
29 uncovered facts
Choosing groups: [0.000s CPU, 0.002s wall-clock]
Building translation key... [0.010s CPU, 0.001s wall-clock]
Computing fact groups: [0.010s CPU, 0.009s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.040s CPU, 0.044s wall-clock]
2324 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
56 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.020s wall-clock]
Reordering and filtering variables...
57 of 57 variables necessary.
29 of 57 mutex groups necessary.
1568 of 1568 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.010s wall-clock]
Translator variables: 57
Translator derived variables: 0
Translator facts: 870
Translator goal facts: 21
Translator mutex groups: 29
Translator total mutex groups size: 841
Translator operators: 1568
Translator axioms: 0
Translator task size: 13465
Translator peak memory: 40312 KB
Writing output... [0.010s CPU, 0.008s wall-clock]
Done! [0.150s CPU, 0.150s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=3.2825e-05s, 24488 KB] reading input...
[t=0.00479712s, 26076 KB] done reading input!
[t=0.00573765s, 26472 KB] Initializing landmark count heuristic...
[t=0.00577513s, 26472 KB] Generating landmark graph...
[t=0.00586375s, 26604 KB] Building a landmark graph with reasonable orders.
[t=0.00595535s, 26604 KB] Initializing Exploration...
[t=0.00640562s, 27016 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0263004s, 27808 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0263997s, 27808 KB] Landmarks generation time: 0.0205412s
[t=0.0264244s, 27808 KB] Discovered 120 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0264427s, 27808 KB] 632 edges
[t=0.0264528s, 27808 KB] approx. reasonable orders
[t=0.0264634s, 27808 KB] approx. obedient reasonable orders
[t=0.026497s, 27808 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0265077s, 27808 KB] Landmarks generation time: 0.020725s
[t=0.0265177s, 27808 KB] Discovered 120 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0265254s, 27808 KB] 632 edges
[t=0.0265333s, 27808 KB] Landmark graph generation time: 0.0207668s
[t=0.0265433s, 27808 KB] Landmark graph contains 120 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0265594s, 27808 KB] Landmark graph contains 632 orderings.
[t=0.0274337s, 27808 KB] Simplifying 6216 unary operators... done! [4704 unary operators]
[t=0.0291663s, 27808 KB] time to simplify: 0.00188568s
[t=0.0294419s, 27808 KB] Initializing additive heuristic...
[t=0.0294639s, 27808 KB] Initializing FF heuristic...
[t=0.0295962s, 27808 KB] Building successor generator...done!
[t=0.0299375s, 27808 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0299501s, 27808 KB] time for successor generation creation: 0.000311438s
[t=0.0299876s, 27808 KB] Variables: 57
[t=0.0299963s, 27808 KB] FactPairs: 870
[t=0.0300044s, 27808 KB] Bytes per state: 24
[t=0.0301967s, 27808 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0302387s, 27808 KB] 56 initial landmarks, 21 goal landmarks
[t=0.0303612s, 27808 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 64
[t=0.0303722s, 27808 KB] New best heuristic value for ff(transform = adapt_costs(one)): 47
[t=0.0303812s, 27808 KB] g=0, 1 evaluated, 0 expanded
[t=0.030398s, 27808 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 64
[t=0.0304167s, 27808 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 47
[t=0.030634s, 27808 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 63
[t=0.0306434s, 27808 KB] g=2, 6 evaluated, 5 expanded
[t=0.0307739s, 27808 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 62
[t=0.030783s, 27808 KB] New best heuristic value for ff(transform = adapt_costs(one)): 46
[t=0.0307911s, 27808 KB] g=2, 9 evaluated, 8 expanded
[t=0.0309506s, 27808 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 60
[t=0.0309607s, 27808 KB] New best heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.030969s, 27808 KB] g=4, 13 evaluated, 12 expanded
[t=0.0310908s, 27808 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.0311002s, 27808 KB] g=6, 16 evaluated, 15 expanded
[t=0.0312243s, 27808 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 58
[t=0.0312357s, 27808 KB] g=7, 19 evaluated, 18 expanded
[t=0.0312845s, 27808 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0312957s, 27808 KB] New best heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.0313049s, 27808 KB] g=8, 20 evaluated, 19 expanded
[t=0.0314668s, 27808 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0314786s, 27808 KB] g=10, 24 evaluated, 23 expanded
[t=0.0315659s, 27808 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0315798s, 27808 KB] g=11, 26 evaluated, 25 expanded
[t=0.0316329s, 27808 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0316554s, 27808 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0316647s, 27808 KB] g=12, 27 evaluated, 26 expanded
[t=0.0318642s, 27808 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0318749s, 27808 KB] g=14, 32 evaluated, 31 expanded
[t=0.0321166s, 27808 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0321265s, 27808 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0321348s, 27808 KB] g=16, 38 evaluated, 37 expanded
[t=0.0324027s, 27808 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0324128s, 27808 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0324211s, 27808 KB] g=18, 45 evaluated, 44 expanded
[t=0.0326897s, 27808 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0327s, 27808 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0327088s, 27808 KB] g=20, 52 evaluated, 51 expanded
[t=0.0329548s, 27808 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0329657s, 27808 KB] g=21, 58 evaluated, 57 expanded
[t=0.0332971s, 27808 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0333075s, 27808 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0333157s, 27808 KB] g=24, 66 evaluated, 65 expanded
[t=0.0339939s, 27808 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0340055s, 27808 KB] g=27, 84 evaluated, 83 expanded
[t=0.034055s, 27808 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0340642s, 27808 KB] g=28, 85 evaluated, 84 expanded
[t=0.0343781s, 27808 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0343886s, 27808 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0343972s, 27808 KB] g=30, 93 evaluated, 92 expanded
[t=0.0346645s, 27808 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0346744s, 27808 KB] g=32, 100 evaluated, 99 expanded
[t=0.0348007s, 27808 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0348125s, 27808 KB] g=32, 103 evaluated, 102 expanded
[t=0.0352503s, 27808 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0352645s, 27808 KB] g=34, 114 evaluated, 113 expanded
[t=0.0355441s, 27808 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0355549s, 27808 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0355638s, 27808 KB] g=36, 121 evaluated, 120 expanded
[t=0.0360991s, 27808 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0361093s, 27808 KB] g=39, 135 evaluated, 134 expanded
[t=0.0361976s, 27808 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.036207s, 27808 KB] g=40, 137 evaluated, 136 expanded
[t=0.0363441s, 27808 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0363588s, 27808 KB] g=41, 140 evaluated, 139 expanded
[t=0.0364289s, 27808 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0364391s, 27808 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0364473s, 27808 KB] g=42, 141 evaluated, 140 expanded
[t=0.0367706s, 27808 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0367815s, 27808 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0367903s, 27808 KB] g=44, 149 evaluated, 148 expanded
[t=0.0370687s, 27808 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0370788s, 27808 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0370877s, 27808 KB] g=46, 156 evaluated, 155 expanded
[t=0.0374036s, 27808 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0374141s, 27808 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0374229s, 27808 KB] g=48, 164 evaluated, 163 expanded
[t=0.0377437s, 27808 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0377539s, 27808 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0377633s, 27808 KB] g=50, 172 evaluated, 171 expanded
[t=0.0380821s, 27808 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0380926s, 27808 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0381022s, 27808 KB] g=52, 180 evaluated, 179 expanded
[t=0.0384183s, 27808 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0384283s, 27808 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0384369s, 27808 KB] g=54, 188 evaluated, 187 expanded
[t=0.0387178s, 27808 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0387279s, 27808 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0387372s, 27808 KB] g=56, 195 evaluated, 194 expanded
[t=0.0395293s, 27808 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0395438s, 27808 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0395524s, 27808 KB] g=60, 216 evaluated, 215 expanded
[t=0.0397902s, 27808 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0397994s, 27808 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0398078s, 27808 KB] g=62, 222 evaluated, 221 expanded
[t=0.0407394s, 27808 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0407856s, 27808 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0407945s, 27808 KB] g=66, 247 evaluated, 246 expanded
[t=0.0409903s, 27808 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0410021s, 27808 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0410109s, 27808 KB] g=68, 252 evaluated, 251 expanded
[t=0.0416508s, 27808 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0416624s, 27808 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0416718s, 27808 KB] g=72, 268 evaluated, 267 expanded
[t=0.0418355s, 27808 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0418489s, 27808 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0418581s, 27808 KB] g=74, 272 evaluated, 271 expanded
[t=0.042358s, 27808 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0423682s, 27808 KB] g=80, 285 evaluated, 284 expanded
[t=0.0425569s, 27808 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0425663s, 27808 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0425751s, 27808 KB] g=82, 290 evaluated, 289 expanded
[t=0.0427247s, 27808 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0427345s, 27808 KB] g=83, 294 evaluated, 293 expanded
[t=0.0427821s, 27808 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0427926s, 27808 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0428019s, 27808 KB] g=84, 295 evaluated, 294 expanded
[t=0.0429224s, 27808 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0429318s, 27808 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0429407s, 27808 KB] g=86, 298 evaluated, 297 expanded
[t=0.0430575s, 27808 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0430749s, 27808 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0430835s, 27808 KB] g=88, 301 evaluated, 300 expanded
[t=0.0446765s, 27808 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0446873s, 27808 KB] g=106, 354 evaluated, 353 expanded
[t=0.0447793s, 27808 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.044789s, 27808 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0447972s, 27808 KB] g=108, 357 evaluated, 356 expanded
[t=0.0450791s, 27808 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0450887s, 27808 KB] g=116, 369 evaluated, 368 expanded
[t=0.0451184s, 27808 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0451334s, 27808 KB] g=117, 370 evaluated, 369 expanded
[t=0.0451588s, 27808 KB] Solution found!
[t=0.0451755s, 27808 KB] Actual search time: 0.0149356s
unstack b17 b20 (1)
stack b17 b16 (1)
unstack b12 b2 (1)
stack b12 b20 (1)
unstack b22 b3 (1)
put-down b22 (1)
unstack b3 b25 (1)
stack b3 b17 (1)
unstack b25 b14 (1)
put-down b25 (1)
unstack b14 b24 (1)
stack b14 b22 (1)
unstack b24 b10 (1)
put-down b24 (1)
unstack b10 b5 (1)
put-down b10 (1)
unstack b5 b1 (1)
put-down b5 (1)
unstack b1 b4 (1)
put-down b1 (1)
unstack b4 b28 (1)
put-down b4 (1)
unstack b28 b11 (1)
put-down b28 (1)
unstack b11 b8 (1)
put-down b11 (1)
unstack b8 b23 (1)
stack b8 b24 (1)
pick-up b11 (1)
stack b11 b8 (1)
unstack b23 b27 (1)
put-down b23 (1)
pick-up b4 (1)
stack b4 b23 (1)
unstack b27 b6 (1)
put-down b27 (1)
unstack b12 b20 (1)
put-down b12 (1)
unstack b20 b18 (1)
stack b20 b11 (1)
unstack b18 b9 (1)
stack b18 b25 (1)
pick-up b12 (1)
stack b12 b20 (1)
unstack b9 b21 (1)
stack b9 b2 (1)
unstack b21 b26 (1)
stack b21 b27 (1)
unstack b26 b15 (1)
stack b26 b21 (1)
unstack b15 b19 (1)
put-down b15 (1)
pick-up b19 (1)
stack b19 b28 (1)
pick-up b6 (1)
stack b6 b15 (1)
unstack b14 b22 (1)
put-down b14 (1)
pick-up b22 (1)
stack b22 b5 (1)
pick-up b14 (1)
stack b14 b22 (1)
unstack b18 b25 (1)
put-down b18 (1)
pick-up b25 (1)
stack b25 b19 (1)
pick-up b18 (1)
stack b18 b25 (1)
unstack b4 b23 (1)
put-down b4 (1)
pick-up b23 (1)
stack b23 b9 (1)
pick-up b4 (1)
stack b4 b23 (1)
unstack b3 b17 (1)
put-down b3 (1)
unstack b17 b16 (1)
put-down b17 (1)
unstack b16 b13 (1)
stack b16 b26 (1)
unstack b13 b7 (1)
stack b13 b6 (1)
pick-up b7 (1)
stack b7 b12 (1)
pick-up b17 (1)
stack b17 b16 (1)
pick-up b3 (1)
stack b3 b17 (1)
unstack b7 b12 (1)
put-down b7 (1)
unstack b12 b20 (1)
put-down b12 (1)
unstack b20 b11 (1)
put-down b20 (1)
pick-up b12 (1)
stack b12 b20 (1)
pick-up b7 (1)
stack b7 b12 (1)
unstack b11 b8 (1)
put-down b11 (1)
unstack b8 b24 (1)
put-down b8 (1)
pick-up b24 (1)
stack b24 b13 (1)
pick-up b8 (1)
stack b8 b24 (1)
pick-up b11 (1)
stack b11 b8 (1)
unstack b7 b12 (1)
put-down b7 (1)
unstack b12 b20 (1)
put-down b12 (1)
pick-up b20 (1)
stack b20 b11 (1)
pick-up b12 (1)
stack b12 b20 (1)
pick-up b7 (1)
stack b7 b12 (1)
[t=0.0451895s, 27808 KB] Plan length: 118 step(s).
[t=0.0451895s, 27808 KB] Plan cost: 118
[t=0.0451895s, 27808 KB] Expanded 370 state(s).
[t=0.0451895s, 27808 KB] Reopened 0 state(s).
[t=0.0451895s, 27808 KB] Evaluated 371 state(s).
[t=0.0451895s, 27808 KB] Evaluations: 742
[t=0.0451895s, 27808 KB] Generated 4224 state(s).
[t=0.0451895s, 27808 KB] Dead ends: 0 state(s).
[t=0.0451895s, 27808 KB] Number of registered states: 371
[t=0.0451895s, 27808 KB] Int hash set load factor: 371/512 = 0.724609
[t=0.0451895s, 27808 KB] Int hash set resizes: 9
[t=0.0451895s, 27808 KB] Search time: 0.0149937s
[t=0.0451895s, 27808 KB] Total time: 0.0451895s
Solution found.
Peak memory: 27808 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.25s
