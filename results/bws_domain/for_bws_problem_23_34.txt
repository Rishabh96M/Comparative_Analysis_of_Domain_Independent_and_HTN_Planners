INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_23/bws_problem_23_34.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.011s wall-clock]
1750 relevant atoms
1173 auxiliary atoms
2923 final queue length
5090 total queue pushes
Completing instantiation... [0.020s CPU, 0.019s wall-clock]
Instantiating: [0.030s CPU, 0.032s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
24 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.008s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.028s wall-clock]
1564 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
46 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.013s wall-clock]
Reordering and filtering variables...
47 of 47 variables necessary.
24 of 47 mutex groups necessary.
1058 of 1058 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.007s wall-clock]
Translator variables: 47
Translator derived variables: 0
Translator facts: 600
Translator goal facts: 15
Translator mutex groups: 24
Translator total mutex groups size: 576
Translator operators: 1058
Translator axioms: 0
Translator task size: 9104
Translator peak memory: 37488 KB
Writing output... [0.000s CPU, 0.005s wall-clock]
Done! [0.090s CPU, 0.097s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.024e-05s, 24488 KB] reading input...
[t=0.00321992s, 25428 KB] done reading input!
[t=0.00407277s, 25824 KB] Initializing landmark count heuristic...
[t=0.00411143s, 25824 KB] Generating landmark graph...
[t=0.0042472s, 25824 KB] Building a landmark graph with reasonable orders.
[t=0.00433242s, 25956 KB] Initializing Exploration...
[t=0.00468099s, 26256 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.01564s, 26652 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0158033s, 26652 KB] Landmarks generation time: 0.0115494s
[t=0.0158194s, 26652 KB] Discovered 87 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0158424s, 26652 KB] 313 edges
[t=0.0158544s, 26652 KB] approx. reasonable orders
[t=0.018475s, 26652 KB] approx. obedient reasonable orders
[t=0.0186126s, 26652 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0186287s, 26652 KB] Landmarks generation time: 0.0145215s
[t=0.0186507s, 26652 KB] Discovered 87 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.018659s, 26652 KB] 363 edges
[t=0.0186682s, 26652 KB] Landmark graph generation time: 0.0145649s
[t=0.0186769s, 26652 KB] Landmark graph contains 87 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0186851s, 26652 KB] Landmark graph contains 363 orderings.
[t=0.0190598s, 26652 KB] Simplifying 4186 unary operators... done! [3174 unary operators]
[t=0.0200209s, 26652 KB] time to simplify: 0.00102276s
[t=0.0201486s, 26652 KB] Initializing additive heuristic...
[t=0.0201619s, 26652 KB] Initializing FF heuristic...
[t=0.020212s, 26652 KB] Building successor generator...done!
[t=0.0204222s, 26652 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0204306s, 26652 KB] time for successor generation creation: 0.000185045s
[t=0.0204428s, 26652 KB] Variables: 47
[t=0.0204507s, 26652 KB] FactPairs: 600
[t=0.0204589s, 26652 KB] Bytes per state: 20
[t=0.0205404s, 26652 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0205715s, 26652 KB] 41 initial landmarks, 15 goal landmarks
[t=0.020684s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0207073s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0207177s, 26652 KB] g=0, 1 evaluated, 0 expanded
[t=0.0207329s, 26652 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0207481s, 26652 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0209338s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0209443s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0209525s, 26652 KB] g=2, 7 evaluated, 6 expanded
[t=0.0210712s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0210803s, 26652 KB] g=3, 11 evaluated, 10 expanded
[t=0.0212177s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0212323s, 26652 KB] g=4, 15 evaluated, 14 expanded
[t=0.0214276s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0214371s, 26652 KB] g=5, 22 evaluated, 21 expanded
[t=0.021746s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0217572s, 26652 KB] g=8, 33 evaluated, 32 expanded
[t=0.0218749s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0218841s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0218919s, 26652 KB] g=6, 37 evaluated, 36 expanded
[t=0.0220295s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0220386s, 26652 KB] g=7, 42 evaluated, 41 expanded
[t=0.0221998s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0222087s, 26652 KB] g=8, 48 evaluated, 47 expanded
[t=0.0226582s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0226782s, 26652 KB] g=9, 63 evaluated, 62 expanded
[t=0.0230766s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0231024s, 26652 KB] g=12, 77 evaluated, 76 expanded
[t=0.0233032s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0233131s, 26652 KB] g=12, 84 evaluated, 83 expanded
[t=0.0234556s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0234655s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0234736s, 26652 KB] g=14, 89 evaluated, 88 expanded
[t=0.0236701s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0236801s, 26652 KB] g=16, 96 evaluated, 95 expanded
[t=0.0237442s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0237538s, 26652 KB] g=16, 98 evaluated, 97 expanded
[t=0.0239947s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0240056s, 26652 KB] g=18, 107 evaluated, 106 expanded
[t=0.024258s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.02427s, 26652 KB] g=20, 116 evaluated, 115 expanded
[t=0.0243336s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0243444s, 26652 KB] g=20, 118 evaluated, 117 expanded
[t=0.0246427s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0246547s, 26652 KB] g=22, 129 evaluated, 128 expanded
[t=0.024693s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0247024s, 26652 KB] g=22, 130 evaluated, 129 expanded
[t=0.0251533s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.025164s, 26652 KB] g=24, 147 evaluated, 146 expanded
[t=0.0252011s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0252104s, 26652 KB] g=25, 148 evaluated, 147 expanded
[t=0.0252505s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0252595s, 26652 KB] g=26, 149 evaluated, 148 expanded
[t=0.0252968s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0253059s, 26652 KB] g=26, 150 evaluated, 149 expanded
[t=0.0256495s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0256658s, 26652 KB] g=28, 162 evaluated, 161 expanded
[t=0.0257009s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0257189s, 26652 KB] g=27, 163 evaluated, 162 expanded
[t=0.0257813s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0257901s, 26652 KB] g=28, 165 evaluated, 164 expanded
[t=0.0260493s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.02606s, 26652 KB] g=30, 175 evaluated, 174 expanded
[t=0.0261997s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0262096s, 26652 KB] g=29, 180 evaluated, 179 expanded
[t=0.0264288s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0264398s, 26652 KB] g=32, 188 evaluated, 187 expanded
[t=0.0267079s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0267187s, 26652 KB] g=34, 198 evaluated, 197 expanded
[t=0.0267539s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.026769s, 26652 KB] g=31, 199 evaluated, 198 expanded
[t=0.0270078s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0270206s, 26652 KB] g=36, 208 evaluated, 207 expanded
[t=0.0274189s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0274316s, 26652 KB] g=39, 224 evaluated, 223 expanded
[t=0.0277453s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0277681s, 26652 KB] g=41, 236 evaluated, 235 expanded
[t=0.0278216s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0278332s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0278422s, 26652 KB] g=40, 237 evaluated, 236 expanded
[t=0.0279292s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0279592s, 26652 KB] g=41, 240 evaluated, 239 expanded
[t=0.028052s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0280674s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0280768s, 26652 KB] g=42, 243 evaluated, 242 expanded
[t=0.0281395s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0281504s, 26652 KB] g=43, 245 evaluated, 244 expanded
[t=0.0282402s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0282575s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0282689s, 26652 KB] g=44, 248 evaluated, 247 expanded
[t=0.0283032s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0283159s, 26652 KB] g=45, 249 evaluated, 248 expanded
[t=0.0284503s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0284696s, 26652 KB] g=47, 254 evaluated, 253 expanded
[t=0.0286453s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0286607s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.02867s, 26652 KB] g=48, 260 evaluated, 259 expanded
[t=0.0287049s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.028715s, 26652 KB] g=49, 261 evaluated, 260 expanded
[t=0.0287958s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0288059s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0288139s, 26652 KB] g=50, 264 evaluated, 263 expanded
[t=0.0288459s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0288574s, 26652 KB] g=51, 265 evaluated, 264 expanded
[t=0.0289347s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0289505s, 26652 KB] g=54, 268 evaluated, 267 expanded
[t=0.0290211s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0290356s, 26652 KB] g=56, 271 evaluated, 270 expanded
[t=0.0291653s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0291798s, 26652 KB] g=58, 277 evaluated, 276 expanded
[t=0.0292384s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0292611s, 26652 KB] g=59, 280 evaluated, 279 expanded
[t=0.0293326s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0293427s, 26652 KB] g=62, 283 evaluated, 282 expanded
[t=0.0293674s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0293766s, 26652 KB] g=63, 284 evaluated, 283 expanded
[t=0.0294342s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0294439s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0294526s, 26652 KB] g=66, 287 evaluated, 286 expanded
[t=0.0295219s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0295331s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0295419s, 26652 KB] g=67, 288 evaluated, 287 expanded
[t=0.0295588s, 26652 KB] Solution found!
[t=0.0295717s, 26652 KB] Actual search time: 0.00899845s
unstack b18 b3 (1)
put-down b18 (1)
unstack b4 b13 (1)
put-down b4 (1)
unstack b5 b22 (1)
stack b5 b18 (1)
unstack b12 b15 (1)
put-down b12 (1)
unstack b3 b2 (1)
put-down b3 (1)
unstack b15 b20 (1)
put-down b15 (1)
unstack b13 b8 (1)
stack b13 b20 (1)
unstack b22 b10 (1)
stack b22 b2 (1)
unstack b10 b16 (1)
put-down b10 (1)
unstack b19 b14 (1)
stack b19 b22 (1)
pick-up b3 (1)
stack b3 b16 (1)
unstack b8 b1 (1)
put-down b8 (1)
unstack b1 b23 (1)
stack b1 b10 (1)
unstack b23 b6 (1)
stack b23 b13 (1)
unstack b6 b9 (1)
stack b6 b19 (1)
unstack b9 b7 (1)
stack b9 b12 (1)
unstack b7 b17 (1)
stack b7 b4 (1)
pick-up b8 (1)
stack b8 b7 (1)
unstack b3 b16 (1)
put-down b3 (1)
unstack b16 b11 (1)
stack b16 b17 (1)
pick-up b11 (1)
stack b11 b8 (1)
pick-up b3 (1)
stack b3 b16 (1)
unstack b9 b12 (1)
put-down b9 (1)
pick-up b12 (1)
stack b12 b11 (1)
pick-up b9 (1)
stack b9 b12 (1)
unstack b6 b19 (1)
put-down b6 (1)
unstack b19 b22 (1)
put-down b19 (1)
unstack b22 b2 (1)
put-down b22 (1)
pick-up b2 (1)
stack b2 b5 (1)
pick-up b6 (1)
stack b6 b19 (1)
pick-up b22 (1)
stack b22 b2 (1)
unstack b6 b19 (1)
put-down b6 (1)
pick-up b19 (1)
stack b19 b22 (1)
pick-up b6 (1)
stack b6 b19 (1)
[t=0.029582s, 26652 KB] Plan length: 68 step(s).
[t=0.029582s, 26652 KB] Plan cost: 68
[t=0.029582s, 26652 KB] Expanded 288 state(s).
[t=0.029582s, 26652 KB] Reopened 0 state(s).
[t=0.029582s, 26652 KB] Evaluated 289 state(s).
[t=0.029582s, 26652 KB] Evaluations: 578
[t=0.029582s, 26652 KB] Generated 3122 state(s).
[t=0.029582s, 26652 KB] Dead ends: 0 state(s).
[t=0.029582s, 26652 KB] Number of registered states: 289
[t=0.029582s, 26652 KB] Int hash set load factor: 289/512 = 0.564453
[t=0.029582s, 26652 KB] Int hash set resizes: 9
[t=0.029582s, 26652 KB] Search time: 0.009042s
[t=0.029582s, 26652 KB] Total time: 0.029582s
Solution found.
Peak memory: 26652 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.18s
