INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_22/bws_problem_22_15.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.010s wall-clock]
1608 relevant atoms
1078 auxiliary atoms
2686 final queue length
4673 total queue pushes
Completing instantiation... [0.020s CPU, 0.017s wall-clock]
Instantiating: [0.030s CPU, 0.028s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
23 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.007s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
1430 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
44 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.012s wall-clock]
Reordering and filtering variables...
45 of 45 variables necessary.
23 of 45 mutex groups necessary.
968 of 968 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 45
Translator derived variables: 0
Translator facts: 552
Translator goal facts: 17
Translator mutex groups: 23
Translator total mutex groups size: 529
Translator operators: 968
Translator axioms: 0
Translator task size: 8337
Translator peak memory: 36972 KB
Writing output... [0.010s CPU, 0.005s wall-clock]
Done! [0.090s CPU, 0.086s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.4662e-05s, 24488 KB] reading input...
[t=0.00281305s, 25340 KB] done reading input!
[t=0.00368543s, 25736 KB] Initializing landmark count heuristic...
[t=0.00371763s, 25736 KB] Generating landmark graph...
[t=0.00377849s, 25736 KB] Building a landmark graph with reasonable orders.
[t=0.00383852s, 25736 KB] Initializing Exploration...
[t=0.00418368s, 26000 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0137139s, 26396 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0138442s, 26396 KB] Landmarks generation time: 0.0100692s
[t=0.0138604s, 26396 KB] Discovered 89 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0138896s, 26396 KB] 353 edges
[t=0.013901s, 26396 KB] approx. reasonable orders
[t=0.0147533s, 26396 KB] approx. obedient reasonable orders
[t=0.0147896s, 26396 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0147993s, 26396 KB] Landmarks generation time: 0.0110793s
[t=0.0148089s, 26396 KB] Discovered 89 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0148172s, 26396 KB] 365 edges
[t=0.0148259s, 26396 KB] Landmark graph generation time: 0.0111155s
[t=0.0148348s, 26396 KB] Landmark graph contains 89 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0148433s, 26396 KB] Landmark graph contains 365 orderings.
[t=0.0152459s, 26396 KB] Simplifying 3828 unary operators... done! [2904 unary operators]
[t=0.0161891s, 26528 KB] time to simplify: 0.00102735s
[t=0.01634s, 26528 KB] Initializing additive heuristic...
[t=0.0163719s, 26528 KB] Initializing FF heuristic...
[t=0.0164444s, 26528 KB] Building successor generator...done!
[t=0.0166622s, 26528 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0166716s, 26528 KB] time for successor generation creation: 0.000183098s
[t=0.016686s, 26528 KB] Variables: 45
[t=0.0166939s, 26528 KB] FactPairs: 552
[t=0.0167015s, 26528 KB] Bytes per state: 20
[t=0.0168139s, 26528 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0168484s, 26528 KB] 42 initial landmarks, 17 goal landmarks
[t=0.0169043s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0169142s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0169227s, 26528 KB] g=0, 1 evaluated, 0 expanded
[t=0.016937s, 26528 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0169461s, 26528 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0170615s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0170709s, 26528 KB] g=1, 5 evaluated, 4 expanded
[t=0.0173218s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.017331s, 26528 KB] g=3, 15 evaluated, 14 expanded
[t=0.0176538s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0176635s, 26528 KB] g=6, 27 evaluated, 26 expanded
[t=0.0181643s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0181758s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0181867s, 26528 KB] g=8, 47 evaluated, 46 expanded
[t=0.0184384s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0184501s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0184584s, 26528 KB] g=10, 57 evaluated, 56 expanded
[t=0.018694s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0187091s, 26528 KB] g=12, 66 evaluated, 65 expanded
[t=0.018822s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0188329s, 26528 KB] g=12, 70 evaluated, 69 expanded
[t=0.0191814s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0191923s, 26528 KB] g=14, 84 evaluated, 83 expanded
[t=0.0195286s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0195464s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0195655s, 26528 KB] g=16, 97 evaluated, 96 expanded
[t=0.0198754s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0198851s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0198932s, 26528 KB] g=18, 109 evaluated, 108 expanded
[t=0.0201427s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0201537s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0201656s, 26528 KB] g=20, 119 evaluated, 118 expanded
[t=0.0204282s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0204392s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.020448s, 26528 KB] g=22, 129 evaluated, 128 expanded
[t=0.0207191s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0207282s, 26528 KB] g=24, 140 evaluated, 139 expanded
[t=0.0207627s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0207715s, 26528 KB] g=24, 141 evaluated, 140 expanded
[t=0.0212132s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0212231s, 26528 KB] g=26, 159 evaluated, 158 expanded
[t=0.0215043s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0215139s, 26528 KB] g=28, 170 evaluated, 169 expanded
[t=0.0217211s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0217303s, 26528 KB] g=30, 178 evaluated, 177 expanded
[t=0.0217658s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0217745s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0217823s, 26528 KB] g=30, 179 evaluated, 178 expanded
[t=0.0219642s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0219729s, 26528 KB] g=32, 186 evaluated, 185 expanded
[t=0.0220255s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0220344s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0220432s, 26528 KB] g=32, 187 evaluated, 186 expanded
[t=0.022229s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.022238s, 26528 KB] g=34, 194 evaluated, 193 expanded
[t=0.0227491s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0227588s, 26528 KB] g=38, 214 evaluated, 213 expanded
[t=0.0227936s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0228027s, 26528 KB] g=39, 215 evaluated, 214 expanded
[t=0.0228616s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0228703s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0228785s, 26528 KB] g=40, 217 evaluated, 216 expanded
[t=0.0231067s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0231154s, 26528 KB] g=42, 226 evaluated, 225 expanded
[t=0.0231509s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0231595s, 26528 KB] g=42, 227 evaluated, 226 expanded
[t=0.0234859s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0235055s, 26528 KB] g=42, 240 evaluated, 239 expanded
[t=0.0236605s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0236694s, 26528 KB] g=44, 246 evaluated, 245 expanded
[t=0.0237497s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0237584s, 26528 KB] g=44, 249 evaluated, 248 expanded
[t=0.023932s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0239406s, 26528 KB] g=46, 256 evaluated, 255 expanded
[t=0.0241509s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0241594s, 26528 KB] g=46, 264 evaluated, 263 expanded
[t=0.0243311s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0243404s, 26528 KB] g=48, 271 evaluated, 270 expanded
[t=0.024396s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0244047s, 26528 KB] g=48, 273 evaluated, 272 expanded
[t=0.0245526s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0245629s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0245707s, 26528 KB] g=50, 279 evaluated, 278 expanded
[t=0.0248313s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0248407s, 26528 KB] g=54, 290 evaluated, 289 expanded
[t=0.0249396s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0249499s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0249581s, 26528 KB] g=56, 293 evaluated, 292 expanded
[t=0.0255683s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0255779s, 26528 KB] g=68, 319 evaluated, 318 expanded
[t=0.0256993s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0257081s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0257159s, 26528 KB] g=70, 324 evaluated, 323 expanded
[t=0.0258157s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0258241s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0258318s, 26528 KB] g=72, 328 evaluated, 327 expanded
[t=0.0260425s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0260509s, 26528 KB] g=76, 337 evaluated, 336 expanded
[t=0.0261276s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.026136s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0261441s, 26528 KB] g=78, 340 evaluated, 339 expanded
[t=0.0284385s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0284507s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0284593s, 26528 KB] g=108, 447 evaluated, 446 expanded
[t=0.0286447s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0286535s, 26528 KB] g=112, 456 evaluated, 455 expanded
[t=0.0287207s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0287292s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0287369s, 26528 KB] g=114, 459 evaluated, 458 expanded
[t=0.0290438s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0290541s, 26528 KB] g=126, 477 evaluated, 476 expanded
[t=0.0291259s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.02914s, 26528 KB] g=130, 481 evaluated, 480 expanded
[t=0.0291599s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0291688s, 26528 KB] g=131, 482 evaluated, 481 expanded
[t=0.0291908s, 26528 KB] Solution found!
[t=0.0292036s, 26528 KB] Actual search time: 0.0123517s
unstack b17 b19 (1)
put-down b17 (1)
unstack b21 b22 (1)
put-down b21 (1)
unstack b1 b8 (1)
put-down b1 (1)
unstack b8 b6 (1)
put-down b8 (1)
unstack b6 b2 (1)
stack b6 b4 (1)
unstack b2 b20 (1)
put-down b2 (1)
unstack b20 b12 (1)
put-down b20 (1)
unstack b12 b9 (1)
stack b12 b8 (1)
pick-up b21 (1)
stack b21 b2 (1)
unstack b9 b14 (1)
stack b9 b6 (1)
unstack b14 b11 (1)
put-down b14 (1)
unstack b11 b13 (1)
stack b11 b1 (1)
pick-up b13 (1)
stack b13 b18 (1)
pick-up b19 (1)
stack b19 b11 (1)
pick-up b20 (1)
stack b20 b9 (1)
pick-up b22 (1)
stack b22 b14 (1)
unstack b13 b18 (1)
put-down b13 (1)
unstack b15 b3 (1)
put-down b15 (1)
unstack b3 b10 (1)
put-down b3 (1)
unstack b10 b5 (1)
stack b10 b22 (1)
unstack b5 b7 (1)
stack b5 b19 (1)
pick-up b17 (1)
stack b17 b5 (1)
pick-up b15 (1)
stack b15 b3 (1)
pick-up b18 (1)
stack b18 b20 (1)
pick-up b13 (1)
stack b13 b18 (1)
unstack b21 b2 (1)
put-down b21 (1)
pick-up b2 (1)
stack b2 b13 (1)
pick-up b21 (1)
stack b21 b2 (1)
unstack b17 b5 (1)
put-down b17 (1)
unstack b5 b19 (1)
put-down b5 (1)
pick-up b17 (1)
stack b17 b5 (1)
unstack b19 b11 (1)
put-down b19 (1)
unstack b11 b1 (1)
put-down b11 (1)
pick-up b1 (1)
stack b1 b7 (1)
pick-up b11 (1)
stack b11 b1 (1)
pick-up b19 (1)
stack b19 b11 (1)
unstack b17 b5 (1)
put-down b17 (1)
pick-up b5 (1)
stack b5 b19 (1)
pick-up b17 (1)
stack b17 b5 (1)
unstack b21 b2 (1)
put-down b21 (1)
unstack b2 b13 (1)
put-down b2 (1)
pick-up b21 (1)
stack b21 b2 (1)
unstack b13 b18 (1)
put-down b13 (1)
unstack b18 b20 (1)
put-down b18 (1)
pick-up b13 (1)
stack b13 b18 (1)
unstack b21 b2 (1)
put-down b21 (1)
pick-up b2 (1)
stack b2 b13 (1)
pick-up b21 (1)
stack b21 b2 (1)
unstack b20 b9 (1)
put-down b20 (1)
unstack b9 b6 (1)
put-down b9 (1)
pick-up b20 (1)
stack b20 b9 (1)
unstack b6 b4 (1)
put-down b6 (1)
pick-up b4 (1)
stack b4 b12 (1)
pick-up b6 (1)
stack b6 b4 (1)
unstack b20 b9 (1)
put-down b20 (1)
pick-up b9 (1)
stack b9 b6 (1)
pick-up b20 (1)
stack b20 b9 (1)
unstack b21 b2 (1)
put-down b21 (1)
unstack b2 b13 (1)
put-down b2 (1)
pick-up b21 (1)
stack b21 b2 (1)
unstack b13 b18 (1)
put-down b13 (1)
pick-up b18 (1)
stack b18 b20 (1)
pick-up b13 (1)
stack b13 b18 (1)
unstack b21 b2 (1)
put-down b21 (1)
pick-up b2 (1)
stack b2 b13 (1)
pick-up b21 (1)
stack b21 b2 (1)
[t=0.0292127s, 26528 KB] Plan length: 132 step(s).
[t=0.0292127s, 26528 KB] Plan cost: 132
[t=0.0292127s, 26528 KB] Expanded 482 state(s).
[t=0.0292127s, 26528 KB] Reopened 0 state(s).
[t=0.0292127s, 26528 KB] Evaluated 483 state(s).
[t=0.0292127s, 26528 KB] Evaluations: 966
[t=0.0292127s, 26528 KB] Generated 4934 state(s).
[t=0.0292127s, 26528 KB] Dead ends: 0 state(s).
[t=0.0292127s, 26528 KB] Number of registered states: 483
[t=0.0292127s, 26528 KB] Int hash set load factor: 483/512 = 0.943359
[t=0.0292127s, 26528 KB] Int hash set resizes: 9
[t=0.0292127s, 26528 KB] Search time: 0.0123992s
[t=0.0292127s, 26528 KB] Total time: 0.0292127s
Solution found.
Peak memory: 26528 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.17s
