INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_21/bws_problem_21_6.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.010s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.000s CPU, 0.009s wall-clock]
1472 relevant atoms
987 auxiliary atoms
2459 final queue length
4268 total queue pushes
Completing instantiation... [0.020s CPU, 0.015s wall-clock]
Instantiating: [0.030s CPU, 0.026s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
22 uncovered facts
Choosing groups: [0.010s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.006s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.022s wall-clock]
1302 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
42 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.011s wall-clock]
Reordering and filtering variables...
43 of 43 variables necessary.
22 of 43 mutex groups necessary.
882 of 882 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 43
Translator derived variables: 0
Translator facts: 506
Translator goal facts: 17
Translator mutex groups: 22
Translator total mutex groups size: 484
Translator operators: 882
Translator axioms: 0
Translator task size: 7602
Translator peak memory: 36452 KB
Writing output... [0.000s CPU, 0.005s wall-clock]
Done! [0.080s CPU, 0.080s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=3.0112e-05s, 24488 KB] reading input...
[t=0.00264902s, 25268 KB] done reading input!
[t=0.0035522s, 25664 KB] Initializing landmark count heuristic...
[t=0.00358972s, 25664 KB] Generating landmark graph...
[t=0.00365747s, 25664 KB] Building a landmark graph with reasonable orders.
[t=0.00373145s, 25664 KB] Initializing Exploration...
[t=0.00399285s, 25852 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0138555s, 26380 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0140452s, 26380 KB] Landmarks generation time: 0.0103869s
[t=0.0140603s, 26380 KB] Discovered 95 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0140964s, 26380 KB] 602 edges
[t=0.014109s, 26380 KB] approx. reasonable orders
[t=0.0170053s, 26380 KB] approx. obedient reasonable orders
[t=0.0173849s, 26380 KB] Removed 4 reasonable or obedient reasonable orders
[t=0.0173987s, 26380 KB] Landmarks generation time: 0.0138068s
[t=0.017412s, 26380 KB] Discovered 95 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0174213s, 26380 KB] 679 edges
[t=0.0174297s, 26380 KB] Landmark graph generation time: 0.0138469s
[t=0.0174382s, 26380 KB] Landmark graph contains 95 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0174464s, 26380 KB] Landmark graph contains 679 orderings.
[t=0.0177399s, 26380 KB] Simplifying 3486 unary operators... done! [2646 unary operators]
[t=0.0185756s, 26380 KB] time to simplify: 0.000898452s
[t=0.0186906s, 26380 KB] Initializing additive heuristic...
[t=0.0187042s, 26380 KB] Initializing FF heuristic...
[t=0.0187534s, 26380 KB] Building successor generator...done!
[t=0.0189346s, 26380 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0189429s, 26380 KB] time for successor generation creation: 0.000150059s
[t=0.0189546s, 26380 KB] Variables: 43
[t=0.0189627s, 26380 KB] FactPairs: 506
[t=0.0189705s, 26380 KB] Bytes per state: 16
[t=0.019051s, 26380 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0190817s, 26380 KB] 43 initial landmarks, 17 goal landmarks
[t=0.0191293s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0191386s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0191466s, 26380 KB] g=0, 1 evaluated, 0 expanded
[t=0.0191592s, 26380 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0191676s, 26380 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0193194s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0193287s, 26380 KB] g=2, 7 evaluated, 6 expanded
[t=0.019544s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0195539s, 26380 KB] g=3, 16 evaluated, 15 expanded
[t=0.0196636s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0196753s, 26380 KB] g=5, 20 evaluated, 19 expanded
[t=0.0197143s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0197236s, 26380 KB] g=6, 21 evaluated, 20 expanded
[t=0.0200315s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0200405s, 26380 KB] g=8, 34 evaluated, 33 expanded
[t=0.0203519s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0203621s, 26380 KB] g=10, 48 evaluated, 47 expanded
[t=0.0206123s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0206262s, 26380 KB] g=10, 59 evaluated, 58 expanded
[t=0.0207429s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0207531s, 26380 KB] g=12, 63 evaluated, 62 expanded
[t=0.0209595s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0209686s, 26380 KB] g=12, 72 evaluated, 71 expanded
[t=0.0212388s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0212482s, 26380 KB] g=14, 84 evaluated, 83 expanded
[t=0.0213712s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0213816s, 26380 KB] g=15, 89 evaluated, 88 expanded
[t=0.0215121s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0215245s, 26380 KB] g=16, 94 evaluated, 93 expanded
[t=0.0217004s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0217177s, 26380 KB] g=17, 101 evaluated, 100 expanded
[t=0.0218464s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0218582s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0218669s, 26380 KB] g=18, 106 evaluated, 105 expanded
[t=0.021945s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0219561s, 26380 KB] g=19, 109 evaluated, 108 expanded
[t=0.0221232s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0221447s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0221528s, 26380 KB] g=20, 114 evaluated, 113 expanded
[t=0.0222514s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0222621s, 26380 KB] g=21, 117 evaluated, 116 expanded
[t=0.0226572s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0226903s, 26380 KB] g=24, 129 evaluated, 128 expanded
[t=0.0233154s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0233385s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0233565s, 26380 KB] g=26, 144 evaluated, 143 expanded
[t=0.0236105s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0236341s, 26380 KB] g=28, 152 evaluated, 151 expanded
[t=0.0237126s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0237231s, 26380 KB] g=28, 153 evaluated, 152 expanded
[t=0.0240279s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0240376s, 26380 KB] g=30, 166 evaluated, 165 expanded
[t=0.0242275s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0242367s, 26380 KB] g=30, 174 evaluated, 173 expanded
[t=0.0243501s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0243608s, 26380 KB] g=32, 178 evaluated, 177 expanded
[t=0.0247149s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0247307s, 26380 KB] g=32, 192 evaluated, 191 expanded
[t=0.0249716s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0249862s, 26380 KB] g=36, 200 evaluated, 199 expanded
[t=0.0253155s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0253311s, 26380 KB] g=38, 210 evaluated, 209 expanded
[t=0.0253666s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0253757s, 26380 KB] g=34, 211 evaluated, 210 expanded
[t=0.0265783s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0265967s, 26380 KB] g=42, 233 evaluated, 232 expanded
[t=0.0268267s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0268361s, 26380 KB] g=44, 242 evaluated, 241 expanded
[t=0.0270755s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.027088s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0271057s, 26380 KB] g=44, 251 evaluated, 250 expanded
[t=0.0271412s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0271503s, 26380 KB] g=45, 252 evaluated, 251 expanded
[t=0.0273867s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.027397s, 26380 KB] g=47, 261 evaluated, 260 expanded
[t=0.0274306s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0274396s, 26380 KB] g=46, 262 evaluated, 261 expanded
[t=0.0274722s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.027481s, 26380 KB] g=47, 263 evaluated, 262 expanded
[t=0.0276619s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0276736s, 26380 KB] g=48, 270 evaluated, 269 expanded
[t=0.0277698s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0277795s, 26380 KB] g=49, 273 evaluated, 272 expanded
[t=0.0279279s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.027937s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0279451s, 26380 KB] g=48, 279 evaluated, 278 expanded
[t=0.027976s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0279847s, 26380 KB] g=49, 280 evaluated, 279 expanded
[t=0.0281547s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0281655s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0281737s, 26380 KB] g=50, 287 evaluated, 286 expanded
[t=0.0282079s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0282264s, 26380 KB] g=51, 288 evaluated, 287 expanded
[t=0.0283689s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0283782s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0283862s, 26380 KB] g=52, 294 evaluated, 293 expanded
[t=0.028415s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0284236s, 26380 KB] g=53, 295 evaluated, 294 expanded
[t=0.0285755s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0285843s, 26380 KB] g=57, 302 evaluated, 301 expanded
[t=0.0288305s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0288393s, 26380 KB] g=59, 314 evaluated, 313 expanded
[t=0.0290165s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0290255s, 26380 KB] g=59, 323 evaluated, 322 expanded
[t=0.0290563s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0290648s, 26380 KB] g=56, 324 evaluated, 323 expanded
[t=0.0291987s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.029208s, 26380 KB] g=58, 330 evaluated, 329 expanded
[t=0.0292356s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0292448s, 26380 KB] g=59, 331 evaluated, 330 expanded
[t=0.0294029s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0294145s, 26380 KB] g=63, 338 evaluated, 337 expanded
[t=0.0295761s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0295861s, 26380 KB] g=62, 346 evaluated, 345 expanded
[t=0.0296303s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0296389s, 26380 KB] g=63, 348 evaluated, 347 expanded
[t=0.0297077s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0297167s, 26380 KB] g=64, 351 evaluated, 350 expanded
[t=0.029742s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0297506s, 26380 KB] g=65, 352 evaluated, 351 expanded
[t=0.0298246s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0298334s, 26380 KB] g=69, 356 evaluated, 355 expanded
[t=0.0299165s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0299257s, 26380 KB] g=71, 361 evaluated, 360 expanded
[t=0.0299933s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.030002s, 26380 KB] g=72, 365 evaluated, 364 expanded
[t=0.0300244s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0300327s, 26380 KB] g=73, 366 evaluated, 365 expanded
[t=0.0300863s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.030095s, 26380 KB] g=76, 369 evaluated, 368 expanded
[t=0.0301155s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0301252s, 26380 KB] g=77, 370 evaluated, 369 expanded
[t=0.0301742s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0301829s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0301908s, 26380 KB] g=80, 373 evaluated, 372 expanded
[t=0.0302078s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0302165s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0302243s, 26380 KB] g=81, 374 evaluated, 373 expanded
[t=0.0302388s, 26380 KB] Solution found!
[t=0.0302496s, 26380 KB] Actual search time: 0.0111658s
unstack b4 b3 (1)
put-down b4 (1)
unstack b3 b20 (1)
put-down b3 (1)
unstack b20 b9 (1)
stack b20 b4 (1)
unstack b9 b10 (1)
put-down b9 (1)
unstack b10 b15 (1)
put-down b10 (1)
unstack b15 b21 (1)
put-down b15 (1)
unstack b21 b13 (1)
put-down b21 (1)
unstack b13 b18 (1)
put-down b13 (1)
pick-up b12 (1)
stack b12 b13 (1)
unstack b14 b16 (1)
stack b14 b10 (1)
unstack b20 b4 (1)
put-down b20 (1)
unstack b16 b17 (1)
put-down b16 (1)
unstack b17 b11 (1)
stack b17 b21 (1)
pick-up b11 (1)
stack b11 b16 (1)
pick-up b20 (1)
stack b20 b4 (1)
pick-up b9 (1)
stack b9 b17 (1)
unstack b18 b6 (1)
put-down b18 (1)
unstack b6 b2 (1)
stack b6 b18 (1)
unstack b2 b19 (1)
stack b2 b11 (1)
unstack b19 b1 (1)
put-down b19 (1)
unstack b1 b8 (1)
stack b1 b2 (1)
unstack b8 b5 (1)
stack b8 b15 (1)
pick-up b19 (1)
stack b19 b8 (1)
unstack b5 b7 (1)
stack b5 b9 (1)
pick-up b3 (1)
stack b3 b5 (1)
pick-up b7 (1)
stack b7 b14 (1)
unstack b20 b4 (1)
put-down b20 (1)
pick-up b4 (1)
stack b4 b19 (1)
pick-up b20 (1)
stack b20 b4 (1)
unstack b6 b18 (1)
put-down b6 (1)
pick-up b18 (1)
stack b18 b7 (1)
pick-up b6 (1)
stack b6 b18 (1)
unstack b1 b2 (1)
put-down b1 (1)
unstack b2 b11 (1)
put-down b2 (1)
unstack b11 b16 (1)
put-down b11 (1)
pick-up b16 (1)
stack b16 b6 (1)
pick-up b1 (1)
stack b1 b2 (1)
pick-up b11 (1)
stack b11 b16 (1)
unstack b1 b2 (1)
put-down b1 (1)
pick-up b2 (1)
stack b2 b11 (1)
pick-up b1 (1)
stack b1 b2 (1)
[t=0.030259s, 26380 KB] Plan length: 82 step(s).
[t=0.030259s, 26380 KB] Plan cost: 82
[t=0.030259s, 26380 KB] Expanded 374 state(s).
[t=0.030259s, 26380 KB] Reopened 0 state(s).
[t=0.030259s, 26380 KB] Evaluated 375 state(s).
[t=0.030259s, 26380 KB] Evaluations: 750
[t=0.030259s, 26380 KB] Generated 3464 state(s).
[t=0.030259s, 26380 KB] Dead ends: 0 state(s).
[t=0.030259s, 26380 KB] Number of registered states: 375
[t=0.030259s, 26380 KB] Int hash set load factor: 375/512 = 0.732422
[t=0.030259s, 26380 KB] Int hash set resizes: 9
[t=0.030259s, 26380 KB] Search time: 0.0112083s
[t=0.030259s, 26380 KB] Total time: 0.030259s
Solution found.
Peak memory: 26380 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.16s
