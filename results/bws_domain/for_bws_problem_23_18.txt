INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_23/bws_problem_23_18.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.010s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.014s wall-clock]
1750 relevant atoms
1173 auxiliary atoms
2923 final queue length
5091 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.036s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
24 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.007s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.028s wall-clock]
1564 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
46 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.015s wall-clock]
Reordering and filtering variables...
47 of 47 variables necessary.
24 of 47 mutex groups necessary.
1058 of 1058 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.007s wall-clock]
Translator variables: 47
Translator derived variables: 0
Translator facts: 600
Translator goal facts: 21
Translator mutex groups: 24
Translator total mutex groups size: 576
Translator operators: 1058
Translator axioms: 0
Translator task size: 9110
Translator peak memory: 37484 KB
Writing output... [0.010s CPU, 0.009s wall-clock]
Done! [0.110s CPU, 0.106s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=5.8657e-05s, 24488 KB] reading input...
[t=0.00361237s, 25428 KB] done reading input!
[t=0.00499182s, 25824 KB] Initializing landmark count heuristic...
[t=0.00509842s, 25824 KB] Generating landmark graph...
[t=0.00519564s, 25824 KB] Building a landmark graph with reasonable orders.
[t=0.00528601s, 25956 KB] Initializing Exploration...
[t=0.00569879s, 26256 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.018201s, 26652 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0183534s, 26652 KB] Landmarks generation time: 0.0131647s
[t=0.0183754s, 26652 KB] Discovered 102 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0183963s, 26652 KB] 312 edges
[t=0.0184118s, 26652 KB] approx. reasonable orders
[t=0.0200419s, 26652 KB] approx. obedient reasonable orders
[t=0.0200862s, 26652 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0200975s, 26652 KB] Landmarks generation time: 0.0149949s
[t=0.0201076s, 26652 KB] Discovered 102 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0201162s, 26652 KB] 338 edges
[t=0.0201247s, 26652 KB] Landmark graph generation time: 0.0150334s
[t=0.0201336s, 26652 KB] Landmark graph contains 102 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0201417s, 26652 KB] Landmark graph contains 338 orderings.
[t=0.0205306s, 26652 KB] Simplifying 4186 unary operators... done! [3174 unary operators]
[t=0.0215865s, 26652 KB] time to simplify: 0.00114605s
[t=0.0217472s, 26652 KB] Initializing additive heuristic...
[t=0.0217631s, 26652 KB] Initializing FF heuristic...
[t=0.0218174s, 26652 KB] Building successor generator...done!
[t=0.0220232s, 26652 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0220331s, 26652 KB] time for successor generation creation: 0.000176529s
[t=0.0220453s, 26652 KB] Variables: 47
[t=0.0220536s, 26652 KB] FactPairs: 600
[t=0.0220619s, 26652 KB] Bytes per state: 20
[t=0.0221666s, 26652 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0222052s, 26652 KB] 47 initial landmarks, 21 goal landmarks
[t=0.0222728s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.022291s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0223044s, 26652 KB] g=0, 1 evaluated, 0 expanded
[t=0.0223271s, 26652 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0223418s, 26652 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0226524s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0226721s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.022682s, 26652 KB] g=2, 8 evaluated, 7 expanded
[t=0.0228883s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0228985s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0229067s, 26652 KB] g=4, 15 evaluated, 14 expanded
[t=0.0231177s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0231405s, 26652 KB] g=6, 22 evaluated, 21 expanded
[t=0.0232322s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0232457s, 26652 KB] g=6, 24 evaluated, 23 expanded
[t=0.0236681s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0236833s, 26652 KB] g=8, 38 evaluated, 37 expanded
[t=0.0237368s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0237493s, 26652 KB] g=8, 39 evaluated, 38 expanded
[t=0.0241523s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0241686s, 26652 KB] g=10, 51 evaluated, 50 expanded
[t=0.0243281s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0243464s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0243664s, 26652 KB] g=10, 54 evaluated, 53 expanded
[t=0.0245169s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0245264s, 26652 KB] g=12, 59 evaluated, 58 expanded
[t=0.0248761s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0248876s, 26652 KB] g=14, 71 evaluated, 70 expanded
[t=0.024929s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0249384s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0249467s, 26652 KB] g=14, 72 evaluated, 71 expanded
[t=0.0251505s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0251601s, 26652 KB] g=16, 79 evaluated, 78 expanded
[t=0.0252234s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0252326s, 26652 KB] g=16, 81 evaluated, 80 expanded
[t=0.025579s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0256053s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0256194s, 26652 KB] g=18, 91 evaluated, 90 expanded
[t=0.0258435s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.025879s, 26652 KB] g=20, 97 evaluated, 96 expanded
[t=0.0259195s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0259296s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0259406s, 26652 KB] g=20, 98 evaluated, 97 expanded
[t=0.0261165s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0261272s, 26652 KB] g=22, 104 evaluated, 103 expanded
[t=0.0266341s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0266446s, 26652 KB] g=25, 122 evaluated, 121 expanded
[t=0.0267113s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0267206s, 26652 KB] g=26, 124 evaluated, 123 expanded
[t=0.0267586s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0267677s, 26652 KB] g=26, 125 evaluated, 124 expanded
[t=0.0271634s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0271836s, 26652 KB] g=28, 137 evaluated, 136 expanded
[t=0.0275039s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0275152s, 26652 KB] g=30, 148 evaluated, 147 expanded
[t=0.0280343s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0280451s, 26652 KB] g=30, 167 evaluated, 166 expanded
[t=0.0291064s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.029126s, 26652 KB] g=36, 204 evaluated, 203 expanded
[t=0.0316715s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.031706s, 26652 KB] g=42, 280 evaluated, 279 expanded
[t=0.0337468s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0338121s, 26652 KB] g=36, 347 evaluated, 346 expanded
[t=0.0361236s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0361777s, 26652 KB] g=42, 425 evaluated, 424 expanded
[t=0.0369504s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0369817s, 26652 KB] g=44, 448 evaluated, 447 expanded
[t=0.0377423s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.037804s, 26652 KB] g=48, 471 evaluated, 470 expanded
[t=0.0380886s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0381077s, 26652 KB] g=50, 478 evaluated, 477 expanded
[t=0.0387043s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0387661s, 26652 KB] g=54, 494 evaluated, 493 expanded
[t=0.0411825s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0412174s, 26652 KB] g=56, 571 evaluated, 570 expanded
[t=0.0416092s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.04162s, 26652 KB] g=58, 585 evaluated, 584 expanded
[t=0.04194s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0419577s, 26652 KB] g=60, 596 evaluated, 595 expanded
[t=0.0422429s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0422553s, 26652 KB] g=62, 606 evaluated, 605 expanded
[t=0.0425016s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.042512s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0425229s, 26652 KB] g=64, 615 evaluated, 614 expanded
[t=0.0426796s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.042694s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.042704s, 26652 KB] g=66, 620 evaluated, 619 expanded
[t=0.044429s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0444581s, 26652 KB] g=76, 677 evaluated, 676 expanded
[t=0.0508482s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0508817s, 26652 KB] g=76, 918 evaluated, 917 expanded
[t=0.0512385s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0512527s, 26652 KB] g=78, 931 evaluated, 930 expanded
[t=0.0514772s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0514945s, 26652 KB] g=80, 939 evaluated, 938 expanded
[t=0.0516774s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0516902s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0516991s, 26652 KB] g=80, 945 evaluated, 944 expanded
[t=0.0519174s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0519302s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0519399s, 26652 KB] g=82, 953 evaluated, 952 expanded
[t=0.0521082s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0521181s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0521264s, 26652 KB] g=84, 959 evaluated, 958 expanded
[t=0.0522877s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0522984s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0523066s, 26652 KB] g=86, 965 evaluated, 964 expanded
[t=0.0524151s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0524254s, 26652 KB] g=86, 969 evaluated, 968 expanded
[t=0.0526284s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0526385s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0526469s, 26652 KB] g=88, 974 evaluated, 973 expanded
[t=0.0530373s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0530499s, 26652 KB] g=92, 990 evaluated, 989 expanded
[t=0.0531698s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0531896s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0532041s, 26652 KB] g=94, 994 evaluated, 993 expanded
[t=0.0537232s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0537519s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0537619s, 26652 KB] g=102, 1013 evaluated, 1012 expanded
[t=0.0538154s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0538248s, 26652 KB] g=102, 1015 evaluated, 1014 expanded
[t=0.0538953s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0539055s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0539142s, 26652 KB] g=104, 1018 evaluated, 1017 expanded
[t=0.0551995s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0552401s, 26652 KB] g=126, 1086 evaluated, 1085 expanded
[t=0.0553213s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0553399s, 26652 KB] g=128, 1089 evaluated, 1088 expanded
[t=0.055541s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.055567s, 26652 KB] g=136, 1100 evaluated, 1099 expanded
[t=0.0555966s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.055613s, 26652 KB] g=137, 1101 evaluated, 1100 expanded
[t=0.0556399s, 26652 KB] Solution found!
[t=0.0556689s, 26652 KB] Actual search time: 0.0334613s
unstack b18 b21 (1)
put-down b18 (1)
unstack b9 b12 (1)
put-down b9 (1)
unstack b12 b11 (1)
stack b12 b21 (1)
unstack b23 b17 (1)
stack b23 b13 (1)
pick-up b4 (1)
stack b4 b12 (1)
unstack b11 b15 (1)
put-down b11 (1)
unstack b15 b16 (1)
stack b15 b18 (1)
unstack b14 b3 (1)
stack b14 b16 (1)
unstack b3 b6 (1)
stack b3 b4 (1)
unstack b6 b19 (1)
stack b6 b23 (1)
unstack b17 b1 (1)
put-down b17 (1)
unstack b1 b10 (1)
put-down b1 (1)
unstack b10 b7 (1)
stack b10 b17 (1)
unstack b14 b16 (1)
put-down b14 (1)
unstack b7 b22 (1)
stack b7 b19 (1)
unstack b10 b17 (1)
put-down b10 (1)
pick-up b17 (1)
stack b17 b1 (1)
pick-up b10 (1)
stack b10 b17 (1)
unstack b7 b19 (1)
put-down b7 (1)
unstack b19 b5 (1)
put-down b19 (1)
pick-up b5 (1)
stack b5 b9 (1)
pick-up b19 (1)
stack b19 b5 (1)
pick-up b14 (1)
stack b14 b16 (1)
pick-up b7 (1)
stack b7 b19 (1)
unstack b6 b23 (1)
put-down b6 (1)
unstack b14 b16 (1)
put-down b14 (1)
unstack b23 b13 (1)
put-down b23 (1)
unstack b13 b20 (1)
stack b13 b3 (1)
pick-up b20 (1)
stack b20 b6 (1)
pick-up b11 (1)
stack b11 b20 (1)
pick-up b16 (1)
stack b16 b11 (1)
pick-up b14 (1)
stack b14 b16 (1)
unstack b13 b3 (1)
put-down b13 (1)
pick-up b23 (1)
stack b23 b13 (1)
unstack b3 b4 (1)
put-down b3 (1)
unstack b4 b12 (1)
put-down b4 (1)
unstack b12 b21 (1)
put-down b12 (1)
unstack b21 b8 (1)
stack b21 b15 (1)
pick-up b12 (1)
stack b12 b21 (1)
unstack b8 b2 (1)
stack b8 b7 (1)
pick-up b2 (1)
stack b2 b14 (1)
pick-up b22 (1)
stack b22 b8 (1)
pick-up b4 (1)
stack b4 b12 (1)
pick-up b3 (1)
stack b3 b4 (1)
unstack b23 b13 (1)
put-down b23 (1)
pick-up b13 (1)
stack b13 b3 (1)
pick-up b23 (1)
stack b23 b13 (1)
unstack b10 b17 (1)
put-down b10 (1)
unstack b17 b1 (1)
put-down b17 (1)
pick-up b1 (1)
stack b1 b22 (1)
pick-up b17 (1)
stack b17 b1 (1)
pick-up b10 (1)
stack b10 b17 (1)
unstack b2 b14 (1)
put-down b2 (1)
unstack b14 b16 (1)
put-down b14 (1)
unstack b16 b11 (1)
put-down b16 (1)
pick-up b14 (1)
stack b14 b16 (1)
pick-up b2 (1)
stack b2 b14 (1)
unstack b11 b20 (1)
put-down b11 (1)
unstack b20 b6 (1)
put-down b20 (1)
pick-up b11 (1)
stack b11 b20 (1)
pick-up b6 (1)
stack b6 b23 (1)
unstack b11 b20 (1)
put-down b11 (1)
pick-up b20 (1)
stack b20 b6 (1)
pick-up b11 (1)
stack b11 b20 (1)
unstack b2 b14 (1)
put-down b2 (1)
unstack b14 b16 (1)
put-down b14 (1)
pick-up b16 (1)
stack b16 b11 (1)
pick-up b14 (1)
stack b14 b16 (1)
pick-up b2 (1)
stack b2 b14 (1)
[t=0.0556804s, 26652 KB] Plan length: 138 step(s).
[t=0.0556804s, 26652 KB] Plan cost: 138
[t=0.0556804s, 26652 KB] Expanded 1101 state(s).
[t=0.0556804s, 26652 KB] Reopened 0 state(s).
[t=0.0556804s, 26652 KB] Evaluated 1102 state(s).
[t=0.0556804s, 26652 KB] Evaluations: 2204
[t=0.0556804s, 26652 KB] Generated 9696 state(s).
[t=0.0556804s, 26652 KB] Dead ends: 0 state(s).
[t=0.0556804s, 26652 KB] Number of registered states: 1102
[t=0.0556804s, 26652 KB] Int hash set load factor: 1102/2048 = 0.538086
[t=0.0556804s, 26652 KB] Int hash set resizes: 11
[t=0.0556804s, 26652 KB] Search time: 0.0335143s
[t=0.0556804s, 26652 KB] Total time: 0.0556804s
Solution found.
Peak memory: 26652 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.22s
