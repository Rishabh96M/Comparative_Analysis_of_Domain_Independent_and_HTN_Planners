INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_28/bws_problem_28_75.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.016s wall-clock]
2550 relevant atoms
1708 auxiliary atoms
4258 final queue length
7453 total queue pushes
Completing instantiation... [0.030s CPU, 0.026s wall-clock]
Instantiating: [0.050s CPU, 0.044s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
29 uncovered facts
Choosing groups: [0.000s CPU, 0.002s wall-clock]
Building translation key... [0.010s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.009s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.001s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.002s wall-clock]
Translating task: [0.050s CPU, 0.049s wall-clock]
2324 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
56 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.019s wall-clock]
Reordering and filtering variables...
57 of 57 variables necessary.
29 of 57 mutex groups necessary.
1568 of 1568 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.011s wall-clock]
Translator variables: 57
Translator derived variables: 0
Translator facts: 870
Translator goal facts: 24
Translator mutex groups: 29
Translator total mutex groups size: 841
Translator operators: 1568
Translator axioms: 0
Translator task size: 13468
Translator peak memory: 40316 KB
Writing output... [0.010s CPU, 0.008s wall-clock]
Done! [0.150s CPU, 0.147s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=3.2282e-05s, 24488 KB] reading input...
[t=0.00477572s, 26076 KB] done reading input!
[t=0.00568617s, 26472 KB] Initializing landmark count heuristic...
[t=0.00571869s, 26472 KB] Generating landmark graph...
[t=0.00589007s, 26604 KB] Building a landmark graph with reasonable orders.
[t=0.00600018s, 26604 KB] Initializing Exploration...
[t=0.00686971s, 27016 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0303458s, 27816 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0304485s, 27816 KB] Landmarks generation time: 0.0245569s
[t=0.0304722s, 27816 KB] Discovered 124 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0304885s, 27816 KB] 708 edges
[t=0.0304982s, 27816 KB] approx. reasonable orders
[t=0.0309652s, 27816 KB] approx. obedient reasonable orders
[t=0.0311245s, 27816 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0311357s, 27816 KB] Landmarks generation time: 0.0254138s
[t=0.0311455s, 27816 KB] Discovered 124 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0311534s, 27816 KB] 712 edges
[t=0.0311613s, 27816 KB] Landmark graph generation time: 0.0254494s
[t=0.0311695s, 27816 KB] Landmark graph contains 124 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0311772s, 27816 KB] Landmark graph contains 712 orderings.
[t=0.0317066s, 27840 KB] Simplifying 6216 unary operators... done! [4704 unary operators]
[t=0.0331092s, 27840 KB] time to simplify: 0.00149503s
[t=0.0333221s, 27976 KB] Initializing additive heuristic...
[t=0.0333862s, 27976 KB] Initializing FF heuristic...
[t=0.0334382s, 27976 KB] Building successor generator...done!
[t=0.0336997s, 27976 KB] peak memory difference for successor generator creation: 0 KB
[t=0.033708s, 27976 KB] time for successor generation creation: 0.000234516s
[t=0.0337207s, 27976 KB] Variables: 57
[t=0.0337286s, 27976 KB] FactPairs: 870
[t=0.0337362s, 27976 KB] Bytes per state: 24
[t=0.0338204s, 27976 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0338543s, 27976 KB] 57 initial landmarks, 24 goal landmarks
[t=0.0339189s, 27976 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 67
[t=0.0339285s, 27976 KB] New best heuristic value for ff(transform = adapt_costs(one)): 49
[t=0.0339366s, 27976 KB] g=0, 1 evaluated, 0 expanded
[t=0.0339493s, 27976 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 67
[t=0.0339574s, 27976 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 49
[t=0.0340071s, 27976 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 66
[t=0.0340158s, 27976 KB] g=1, 2 evaluated, 1 expanded
[t=0.0342853s, 27976 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 65
[t=0.0342952s, 27976 KB] g=4, 9 evaluated, 8 expanded
[t=0.0344109s, 27976 KB] New best heuristic value for ff(transform = adapt_costs(one)): 48
[t=0.0344196s, 27976 KB] g=2, 12 evaluated, 11 expanded
[t=0.0345024s, 27976 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 64
[t=0.0345122s, 27976 KB] g=3, 14 evaluated, 13 expanded
[t=0.0347195s, 27976 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 63
[t=0.0347328s, 27976 KB] g=6, 19 evaluated, 18 expanded
[t=0.0348724s, 27976 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 62
[t=0.0348833s, 27976 KB] New best heuristic value for ff(transform = adapt_costs(one)): 47
[t=0.0348917s, 27976 KB] g=4, 22 evaluated, 21 expanded
[t=0.0349454s, 27976 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 61
[t=0.0349546s, 27976 KB] g=5, 23 evaluated, 22 expanded
[t=0.0350006s, 27976 KB] New best heuristic value for ff(transform = adapt_costs(one)): 46
[t=0.0350093s, 27976 KB] g=6, 24 evaluated, 23 expanded
[t=0.0352769s, 27976 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 60
[t=0.0352863s, 27976 KB] g=9, 31 evaluated, 30 expanded
[t=0.0355543s, 27976 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.035565s, 27976 KB] g=11, 38 evaluated, 37 expanded
[t=0.0360058s, 27976 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 58
[t=0.0360217s, 27976 KB] g=13, 47 evaluated, 46 expanded
[t=0.0369031s, 27976 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 57
[t=0.0369155s, 27976 KB] g=17, 71 evaluated, 70 expanded
[t=0.0373634s, 27976 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0373862s, 27976 KB] g=20, 83 evaluated, 82 expanded
[t=0.0380821s, 27976 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0380987s, 27976 KB] g=22, 101 evaluated, 100 expanded
[t=0.0387572s, 27976 KB] New best heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0387748s, 27976 KB] g=24, 116 evaluated, 115 expanded
[t=0.0388736s, 27976 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0388848s, 27976 KB] g=24, 118 evaluated, 117 expanded
[t=0.0390817s, 27976 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0390917s, 27976 KB] g=25, 123 evaluated, 122 expanded
[t=0.0391789s, 27976 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0391881s, 27976 KB] New best heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.0391961s, 27976 KB] g=26, 125 evaluated, 124 expanded
[t=0.0395452s, 27976 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.039557s, 27976 KB] g=28, 134 evaluated, 133 expanded
[t=0.0396405s, 27976 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0396642s, 27976 KB] g=28, 136 evaluated, 135 expanded
[t=0.0401101s, 27976 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0401192s, 27976 KB] g=30, 148 evaluated, 147 expanded
[t=0.0401994s, 27976 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.040208s, 27976 KB] g=31, 150 evaluated, 149 expanded
[t=0.0406635s, 27976 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0406724s, 27976 KB] g=32, 162 evaluated, 161 expanded
[t=0.0407559s, 27976 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0408044s, 27976 KB] g=33, 164 evaluated, 163 expanded
[t=0.0413213s, 27976 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0413349s, 27976 KB] g=35, 175 evaluated, 174 expanded
[t=0.0417868s, 27976 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0417972s, 27976 KB] g=37, 187 evaluated, 186 expanded
[t=0.042317s, 27976 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0423267s, 27976 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0423351s, 27976 KB] g=38, 201 evaluated, 200 expanded
[t=0.0423823s, 27976 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0423911s, 27976 KB] g=39, 202 evaluated, 201 expanded
[t=0.0429369s, 27976 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0429483s, 27976 KB] g=40, 216 evaluated, 215 expanded
[t=0.0430391s, 27976 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0430634s, 27976 KB] g=41, 218 evaluated, 217 expanded
[t=0.0472438s, 27976 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0472843s, 27976 KB] g=44, 324 evaluated, 323 expanded
[t=0.0552202s, 27976 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0554004s, 27976 KB] g=52, 535 evaluated, 534 expanded
[t=0.0558769s, 27976 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0559034s, 27976 KB] g=54, 545 evaluated, 544 expanded
[t=0.056104s, 27976 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0561163s, 27976 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0561246s, 27976 KB] g=54, 550 evaluated, 549 expanded
[t=0.0564809s, 27976 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0564928s, 27976 KB] g=56, 559 evaluated, 558 expanded
[t=0.0596355s, 27976 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0596552s, 27976 KB] g=62, 640 evaluated, 639 expanded
[t=0.0799688s, 27976 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0800472s, 27976 KB] g=78, 1141 evaluated, 1140 expanded
[t=0.0810912s, 27976 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.081129s, 27976 KB] g=80, 1165 evaluated, 1164 expanded
[t=0.0819774s, 27976 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0819891s, 27976 KB] g=82, 1187 evaluated, 1186 expanded
[t=0.0825282s, 27976 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0825384s, 27976 KB] g=84, 1201 evaluated, 1200 expanded
[t=0.0835545s, 27976 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0835695s, 27976 KB] g=86, 1226 evaluated, 1225 expanded
[t=0.0843579s, 27976 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0843781s, 27976 KB] g=88, 1247 evaluated, 1246 expanded
[t=0.0844626s, 27976 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0844722s, 27976 KB] g=88, 1249 evaluated, 1248 expanded
[t=0.0851096s, 27976 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0851266s, 27976 KB] g=90, 1265 evaluated, 1264 expanded
[t=0.0854383s, 27976 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0854503s, 27976 KB] g=90, 1273 evaluated, 1272 expanded
[t=0.0859217s, 27976 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.085939s, 27976 KB] g=92, 1284 evaluated, 1283 expanded
[t=0.0865268s, 27976 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0865385s, 27976 KB] g=92, 1300 evaluated, 1299 expanded
[t=0.0866609s, 27976 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0866723s, 27976 KB] g=94, 1303 evaluated, 1302 expanded
[t=0.0875349s, 27976 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0875506s, 27976 KB] g=94, 1327 evaluated, 1326 expanded
[t=0.0878775s, 27976 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0878867s, 27976 KB] g=98, 1336 evaluated, 1335 expanded
[t=0.0879657s, 27976 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0879826s, 27976 KB] g=99, 1338 evaluated, 1337 expanded
[t=0.0885682s, 27976 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.088584s, 27976 KB] g=100, 1353 evaluated, 1352 expanded
[t=0.0886634s, 27976 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0886732s, 27976 KB] g=101, 1355 evaluated, 1354 expanded
[t=0.0892411s, 27976 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0892551s, 27976 KB] g=101, 1370 evaluated, 1369 expanded
[t=0.0896799s, 27976 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0896906s, 27976 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0896999s, 27976 KB] g=102, 1382 evaluated, 1381 expanded
[t=0.0897463s, 27976 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0897551s, 27976 KB] g=103, 1383 evaluated, 1382 expanded
[t=0.0902534s, 27976 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0902808s, 27976 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0902889s, 27976 KB] g=106, 1397 evaluated, 1396 expanded
[t=0.0905781s, 27976 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0905876s, 27976 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0905959s, 27976 KB] g=108, 1405 evaluated, 1404 expanded
[t=0.092481s, 27976 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0925086s, 27976 KB] g=112, 1454 evaluated, 1453 expanded
[t=0.092724s, 27976 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0927337s, 27976 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0927424s, 27976 KB] g=114, 1460 evaluated, 1459 expanded
[t=0.0938447s, 27976 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0938627s, 27976 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0938716s, 27976 KB] g=118, 1489 evaluated, 1488 expanded
[t=0.0940944s, 27976 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0941066s, 27976 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0941152s, 27976 KB] g=120, 1495 evaluated, 1494 expanded
[t=0.0951649s, 27976 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0951773s, 27976 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0951852s, 27976 KB] g=126, 1524 evaluated, 1523 expanded
[t=0.107732s, 27976 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.107781s, 27976 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.107791s, 27976 KB] g=152, 1867 evaluated, 1866 expanded
[t=0.113597s, 27976 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.113728s, 27976 KB] g=170, 1979 evaluated, 1978 expanded
[t=0.113954s, 27976 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.113977s, 27976 KB] g=172, 1982 evaluated, 1981 expanded
[t=0.115943s, 27976 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.116002s, 27976 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.116022s, 27976 KB] g=186, 2014 evaluated, 2013 expanded
[t=0.222984s, 28504 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.223077s, 28504 KB] g=258, 4795 evaluated, 4794 expanded
[t=0.223695s, 28504 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.223714s, 28504 KB] g=262, 4811 evaluated, 4810 expanded
[t=0.22388s, 28504 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.223895s, 28504 KB] g=264, 4815 evaluated, 4814 expanded
[t=0.225814s, 28504 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.225831s, 28504 KB] g=276, 4869 evaluated, 4868 expanded
[t=0.226123s, 28504 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.226135s, 28504 KB] g=280, 4878 evaluated, 4877 expanded
[t=0.226234s, 28504 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.226244s, 28504 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.226251s, 28504 KB] g=282, 4881 evaluated, 4880 expanded
[t=0.229025s, 28504 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.229051s, 28504 KB] g=312, 4982 evaluated, 4981 expanded
[t=0.229273s, 28504 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.229284s, 28504 KB] g=316, 4991 evaluated, 4990 expanded
[t=0.229362s, 28504 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.229371s, 28504 KB] g=318, 4994 evaluated, 4993 expanded
[t=0.229714s, 28504 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.229725s, 28504 KB] g=330, 5011 evaluated, 5010 expanded
[t=0.2298s, 28504 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.229809s, 28504 KB] g=334, 5015 evaluated, 5014 expanded
[t=0.229828s, 28504 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.229838s, 28504 KB] g=335, 5016 evaluated, 5015 expanded
[t=0.229855s, 28504 KB] Solution found!
[t=0.229874s, 28636 KB] Actual search time: 0.196022s
unstack b9 b6 (1)
stack b9 b12 (1)
unstack b6 b2 (1)
stack b6 b9 (1)
unstack b10 b3 (1)
stack b10 b2 (1)
unstack b3 b15 (1)
put-down b3 (1)
unstack b15 b25 (1)
put-down b15 (1)
unstack b25 b22 (1)
put-down b25 (1)
unstack b10 b2 (1)
put-down b10 (1)
unstack b22 b7 (1)
put-down b22 (1)
unstack b7 b8 (1)
put-down b7 (1)
unstack b8 b21 (1)
put-down b8 (1)
unstack b21 b4 (1)
stack b21 b3 (1)
unstack b4 b18 (1)
stack b4 b6 (1)
unstack b18 b20 (1)
stack b18 b25 (1)
pick-up b10 (1)
stack b10 b2 (1)
pick-up b15 (1)
stack b15 b4 (1)
pick-up b22 (1)
stack b22 b7 (1)
unstack b20 b24 (1)
put-down b20 (1)
unstack b24 b28 (1)
put-down b24 (1)
unstack b28 b11 (1)
stack b28 b21 (1)
unstack b11 b23 (1)
put-down b11 (1)
unstack b10 b2 (1)
put-down b10 (1)
pick-up b24 (1)
stack b24 b11 (1)
unstack b28 b21 (1)
put-down b28 (1)
unstack b21 b3 (1)
put-down b21 (1)
pick-up b3 (1)
stack b3 b8 (1)
pick-up b21 (1)
stack b21 b3 (1)
pick-up b28 (1)
stack b28 b21 (1)
pick-up b10 (1)
stack b10 b2 (1)
unstack b24 b11 (1)
put-down b24 (1)
pick-up b11 (1)
stack b11 b23 (1)
pick-up b24 (1)
stack b24 b11 (1)
unstack b15 b4 (1)
put-down b15 (1)
unstack b4 b6 (1)
put-down b4 (1)
pick-up b15 (1)
stack b15 b4 (1)
unstack b6 b9 (1)
put-down b6 (1)
unstack b10 b2 (1)
put-down b10 (1)
unstack b9 b12 (1)
put-down b9 (1)
unstack b12 b14 (1)
put-down b12 (1)
unstack b14 b27 (1)
stack b14 b22 (1)
unstack b27 b17 (1)
put-down b27 (1)
unstack b17 b26 (1)
put-down b17 (1)
unstack b26 b5 (1)
stack b26 b20 (1)
unstack b5 b1 (1)
stack b5 b24 (1)
pick-up b10 (1)
stack b10 b2 (1)
unstack b1 b16 (1)
put-down b1 (1)
pick-up b12 (1)
stack b12 b14 (1)
pick-up b6 (1)
stack b6 b9 (1)
unstack b16 b13 (1)
put-down b16 (1)
unstack b13 b19 (1)
stack b13 b15 (1)
pick-up b19 (1)
stack b19 b13 (1)
pick-up b16 (1)
stack b16 b19 (1)
unstack b10 b2 (1)
put-down b10 (1)
pick-up b2 (1)
stack b2 b1 (1)
pick-up b10 (1)
stack b10 b2 (1)
unstack b18 b25 (1)
put-down b18 (1)
pick-up b25 (1)
stack b25 b5 (1)
pick-up b18 (1)
stack b18 b25 (1)
unstack b26 b20 (1)
put-down b26 (1)
pick-up b20 (1)
stack b20 b27 (1)
pick-up b26 (1)
stack b26 b20 (1)
unstack b6 b9 (1)
put-down b6 (1)
pick-up b9 (1)
stack b9 b12 (1)
pick-up b6 (1)
stack b6 b9 (1)
unstack b16 b19 (1)
put-down b16 (1)
unstack b19 b13 (1)
put-down b19 (1)
unstack b13 b15 (1)
put-down b13 (1)
pick-up b19 (1)
stack b19 b13 (1)
pick-up b16 (1)
stack b16 b19 (1)
unstack b15 b4 (1)
put-down b15 (1)
pick-up b4 (1)
stack b4 b6 (1)
pick-up b15 (1)
stack b15 b4 (1)
unstack b16 b19 (1)
put-down b16 (1)
unstack b19 b13 (1)
put-down b19 (1)
pick-up b13 (1)
stack b13 b15 (1)
pick-up b19 (1)
stack b19 b13 (1)
pick-up b16 (1)
stack b16 b19 (1)
unstack b18 b25 (1)
put-down b18 (1)
unstack b25 b5 (1)
put-down b25 (1)
unstack b5 b24 (1)
put-down b5 (1)
pick-up b25 (1)
stack b25 b5 (1)
pick-up b18 (1)
stack b18 b25 (1)
unstack b24 b11 (1)
put-down b24 (1)
unstack b11 b23 (1)
put-down b11 (1)
pick-up b23 (1)
stack b23 b16 (1)
pick-up b11 (1)
stack b11 b23 (1)
pick-up b24 (1)
stack b24 b11 (1)
unstack b18 b25 (1)
put-down b18 (1)
unstack b25 b5 (1)
put-down b25 (1)
pick-up b18 (1)
stack b18 b25 (1)
unstack b24 b11 (1)
put-down b24 (1)
pick-up b5 (1)
stack b5 b24 (1)
unstack b18 b25 (1)
put-down b18 (1)
pick-up b25 (1)
stack b25 b5 (1)
pick-up b18 (1)
stack b18 b25 (1)
unstack b11 b23 (1)
put-down b11 (1)
unstack b23 b16 (1)
put-down b23 (1)
pick-up b11 (1)
stack b11 b23 (1)
unstack b16 b19 (1)
put-down b16 (1)
unstack b19 b13 (1)
put-down b19 (1)
pick-up b16 (1)
stack b16 b19 (1)
unstack b11 b23 (1)
put-down b11 (1)
pick-up b23 (1)
stack b23 b16 (1)
pick-up b11 (1)
stack b11 b23 (1)
unstack b18 b25 (1)
put-down b18 (1)
unstack b25 b5 (1)
put-down b25 (1)
pick-up b18 (1)
stack b18 b25 (1)
unstack b5 b24 (1)
put-down b5 (1)
pick-up b24 (1)
stack b24 b11 (1)
pick-up b5 (1)
stack b5 b24 (1)
unstack b18 b25 (1)
put-down b18 (1)
pick-up b25 (1)
stack b25 b5 (1)
pick-up b18 (1)
stack b18 b25 (1)
unstack b13 b15 (1)
put-down b13 (1)
unstack b15 b4 (1)
put-down b15 (1)
pick-up b13 (1)
stack b13 b15 (1)
unstack b4 b6 (1)
put-down b4 (1)
unstack b6 b9 (1)
put-down b6 (1)
pick-up b4 (1)
stack b4 b6 (1)
unstack b13 b15 (1)
put-down b13 (1)
pick-up b15 (1)
stack b15 b4 (1)
pick-up b13 (1)
stack b13 b15 (1)
unstack b9 b12 (1)
put-down b9 (1)
unstack b12 b14 (1)
put-down b12 (1)
pick-up b9 (1)
stack b9 b12 (1)
unstack b14 b22 (1)
put-down b14 (1)
unstack b22 b7 (1)
put-down b22 (1)
pick-up b7 (1)
stack b7 b26 (1)
pick-up b22 (1)
stack b22 b7 (1)
pick-up b14 (1)
stack b14 b22 (1)
unstack b9 b12 (1)
put-down b9 (1)
pick-up b12 (1)
stack b12 b14 (1)
pick-up b9 (1)
stack b9 b12 (1)
unstack b13 b15 (1)
put-down b13 (1)
unstack b15 b4 (1)
put-down b15 (1)
pick-up b13 (1)
stack b13 b15 (1)
unstack b4 b6 (1)
put-down b4 (1)
pick-up b6 (1)
stack b6 b9 (1)
pick-up b4 (1)
stack b4 b6 (1)
unstack b13 b15 (1)
put-down b13 (1)
pick-up b15 (1)
stack b15 b4 (1)
pick-up b13 (1)
stack b13 b15 (1)
unstack b18 b25 (1)
put-down b18 (1)
unstack b25 b5 (1)
put-down b25 (1)
pick-up b18 (1)
stack b18 b25 (1)
unstack b5 b24 (1)
put-down b5 (1)
unstack b24 b11 (1)
put-down b24 (1)
pick-up b5 (1)
stack b5 b24 (1)
unstack b18 b25 (1)
put-down b18 (1)
pick-up b25 (1)
stack b25 b5 (1)
pick-up b18 (1)
stack b18 b25 (1)
unstack b11 b23 (1)
put-down b11 (1)
unstack b23 b16 (1)
put-down b23 (1)
pick-up b11 (1)
stack b11 b23 (1)
unstack b16 b19 (1)
put-down b16 (1)
pick-up b19 (1)
stack b19 b13 (1)
pick-up b16 (1)
stack b16 b19 (1)
unstack b11 b23 (1)
put-down b11 (1)
pick-up b23 (1)
stack b23 b16 (1)
pick-up b11 (1)
stack b11 b23 (1)
unstack b18 b25 (1)
put-down b18 (1)
unstack b25 b5 (1)
put-down b25 (1)
pick-up b18 (1)
stack b18 b25 (1)
unstack b5 b24 (1)
put-down b5 (1)
pick-up b24 (1)
stack b24 b11 (1)
pick-up b5 (1)
stack b5 b24 (1)
unstack b18 b25 (1)
put-down b18 (1)
pick-up b25 (1)
stack b25 b5 (1)
pick-up b18 (1)
stack b18 b25 (1)
[t=0.229889s, 28636 KB] Plan length: 336 step(s).
[t=0.229889s, 28636 KB] Plan cost: 336
[t=0.229889s, 28636 KB] Expanded 5016 state(s).
[t=0.229889s, 28636 KB] Reopened 0 state(s).
[t=0.229889s, 28636 KB] Evaluated 5017 state(s).
[t=0.229889s, 28636 KB] Evaluations: 10034
[t=0.229889s, 28636 KB] Generated 50464 state(s).
[t=0.229889s, 28636 KB] Dead ends: 0 state(s).
[t=0.229889s, 28636 KB] Number of registered states: 5017
[t=0.229889s, 28636 KB] Int hash set load factor: 5017/8192 = 0.612427
[t=0.229889s, 28636 KB] Int hash set resizes: 13
[t=0.229889s, 28636 KB] Search time: 0.196069s
[t=0.229889s, 28636 KB] Total time: 0.229889s
Solution found.
Peak memory: 28636 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.44s
