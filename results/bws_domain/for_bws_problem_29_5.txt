INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_29/bws_problem_29_5.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.010s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.017s wall-clock]
2728 relevant atoms
1827 auxiliary atoms
4555 final queue length
7981 total queue pushes
Completing instantiation... [0.030s CPU, 0.033s wall-clock]
Instantiating: [0.050s CPU, 0.052s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.002s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
30 uncovered facts
Choosing groups: [0.010s CPU, 0.002s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.001s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.001s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.002s wall-clock]
Translating task: [0.050s CPU, 0.050s wall-clock]
2494 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
58 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.022s wall-clock]
Reordering and filtering variables...
59 of 59 variables necessary.
30 of 59 mutex groups necessary.
1682 of 1682 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.011s wall-clock]
Translator variables: 59
Translator derived variables: 0
Translator facts: 930
Translator goal facts: 24
Translator mutex groups: 30
Translator total mutex groups size: 900
Translator operators: 1682
Translator axioms: 0
Translator task size: 14441
Translator peak memory: 40824 KB
Writing output... [0.010s CPU, 0.009s wall-clock]
Done! [0.150s CPU, 0.160s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.4254e-05s, 24488 KB] reading input...
[t=0.00523969s, 26220 KB] done reading input!
[t=0.00637078s, 26616 KB] Initializing landmark count heuristic...
[t=0.00643065s, 26616 KB] Generating landmark graph...
[t=0.00653378s, 26748 KB] Building a landmark graph with reasonable orders.
[t=0.00663085s, 26748 KB] Initializing Exploration...
[t=0.00712635s, 27200 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0316139s, 27992 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0317291s, 27992 KB] Landmarks generation time: 0.0252056s
[t=0.0317538s, 27992 KB] Discovered 130 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0317713s, 27992 KB] 742 edges
[t=0.0317815s, 27992 KB] approx. reasonable orders
[t=0.0385762s, 27992 KB] approx. obedient reasonable orders
[t=0.0390217s, 27992 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0390436s, 27992 KB] Landmarks generation time: 0.0326114s
[t=0.0390551s, 27992 KB] Discovered 130 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.039064s, 27992 KB] 851 edges
[t=0.0390731s, 27992 KB] Landmark graph generation time: 0.0326506s
[t=0.0390823s, 27992 KB] Landmark graph contains 130 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0390913s, 27992 KB] Landmark graph contains 851 orderings.
[t=0.039953s, 28016 KB] Simplifying 6670 unary operators... done! [5046 unary operators]
[t=0.0417124s, 28016 KB] time to simplify: 0.00189147s
[t=0.0419476s, 28016 KB] Initializing additive heuristic...
[t=0.041968s, 28016 KB] Initializing FF heuristic...
[t=0.0420584s, 28016 KB] Building successor generator...done!
[t=0.042442s, 28168 KB] peak memory difference for successor generator creation: 152 KB
[t=0.0424523s, 28168 KB] time for successor generation creation: 0.000352907s
[t=0.0424759s, 28168 KB] Variables: 59
[t=0.0424841s, 28168 KB] FactPairs: 930
[t=0.0424921s, 28168 KB] Bytes per state: 24
[t=0.0426039s, 28168 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0426469s, 28168 KB] 57 initial landmarks, 24 goal landmarks
[t=0.0427396s, 28168 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 73
[t=0.0427519s, 28168 KB] New best heuristic value for ff(transform = adapt_costs(one)): 52
[t=0.042763s, 28168 KB] g=0, 1 evaluated, 0 expanded
[t=0.0427799s, 28168 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 73
[t=0.0427891s, 28168 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 52
[t=0.0430312s, 28168 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 72
[t=0.0430433s, 28168 KB] g=2, 6 evaluated, 5 expanded
[t=0.0434075s, 28168 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 71
[t=0.0434268s, 28168 KB] New best heuristic value for ff(transform = adapt_costs(one)): 51
[t=0.043436s, 28168 KB] g=4, 14 evaluated, 13 expanded
[t=0.0436669s, 28168 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 70
[t=0.0436833s, 28168 KB] g=6, 19 evaluated, 18 expanded
[t=0.044165s, 28168 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 69
[t=0.0441758s, 28168 KB] g=8, 30 evaluated, 29 expanded
[t=0.0444826s, 28168 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 66
[t=0.0444926s, 28168 KB] New best heuristic value for ff(transform = adapt_costs(one)): 49
[t=0.044501s, 28168 KB] g=10, 37 evaluated, 36 expanded
[t=0.0448482s, 28168 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 65
[t=0.0448591s, 28168 KB] g=12, 45 evaluated, 44 expanded
[t=0.0457051s, 28168 KB] New best heuristic value for ff(transform = adapt_costs(one)): 48
[t=0.0457239s, 28168 KB] g=14, 65 evaluated, 64 expanded
[t=0.0458173s, 28168 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 64
[t=0.0458273s, 28168 KB] g=14, 67 evaluated, 66 expanded
[t=0.0464308s, 28168 KB] New best heuristic value for ff(transform = adapt_costs(one)): 47
[t=0.046441s, 28168 KB] g=16, 82 evaluated, 81 expanded
[t=0.0464913s, 28168 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 63
[t=0.046509s, 28168 KB] g=16, 83 evaluated, 82 expanded
[t=0.0470372s, 28168 KB] New best heuristic value for ff(transform = adapt_costs(one)): 46
[t=0.0470472s, 28168 KB] g=18, 96 evaluated, 95 expanded
[t=0.0472221s, 28168 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 62
[t=0.0472316s, 28168 KB] g=18, 100 evaluated, 99 expanded
[t=0.0476877s, 28168 KB] New best heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0476973s, 28168 KB] g=20, 111 evaluated, 110 expanded
[t=0.0481115s, 28168 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 61
[t=0.0481273s, 28168 KB] g=20, 121 evaluated, 120 expanded
[t=0.0484224s, 28168 KB] New best heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.0484323s, 28168 KB] g=22, 128 evaluated, 127 expanded
[t=0.0487297s, 28168 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 60
[t=0.0487394s, 28168 KB] g=21, 135 evaluated, 134 expanded
[t=0.0498243s, 28168 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.0498386s, 28168 KB] g=24, 161 evaluated, 160 expanded
[t=0.0505029s, 28168 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0505227s, 28168 KB] g=26, 177 evaluated, 176 expanded
[t=0.0508111s, 28168 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 58
[t=0.0508209s, 28168 KB] g=26, 184 evaluated, 183 expanded
[t=0.0512249s, 28168 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 57
[t=0.0512347s, 28168 KB] g=27, 194 evaluated, 193 expanded
[t=0.0513306s, 28168 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0513394s, 28168 KB] g=28, 196 evaluated, 195 expanded
[t=0.0521479s, 28168 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0521588s, 28168 KB] g=29, 216 evaluated, 215 expanded
[t=0.0526501s, 28168 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0526602s, 28168 KB] g=32, 228 evaluated, 227 expanded
[t=0.0534402s, 28168 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0534591s, 28168 KB] g=34, 246 evaluated, 245 expanded
[t=0.0536421s, 28168 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0536518s, 28168 KB] g=32, 250 evaluated, 249 expanded
[t=0.0541857s, 28168 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0541959s, 28168 KB] g=36, 262 evaluated, 261 expanded
[t=0.0548697s, 28168 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0548802s, 28168 KB] g=38, 278 evaluated, 277 expanded
[t=0.0551047s, 28168 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0551211s, 28168 KB] g=34, 283 evaluated, 282 expanded
[t=0.05558s, 28168 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0555918s, 28168 KB] g=40, 294 evaluated, 293 expanded
[t=0.056935s, 28168 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0569517s, 28168 KB] g=44, 326 evaluated, 325 expanded
[t=0.057665s, 28168 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0576937s, 28168 KB] g=46, 343 evaluated, 342 expanded
[t=0.058495s, 28168 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0585121s, 28168 KB] g=48, 363 evaluated, 362 expanded
[t=0.0639781s, 28168 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0640299s, 28168 KB] g=54, 500 evaluated, 499 expanded
[t=0.068747s, 28168 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0687712s, 28168 KB] g=60, 620 evaluated, 619 expanded
[t=0.0719249s, 28168 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0719483s, 28168 KB] g=66, 698 evaluated, 697 expanded
[t=0.0762734s, 28168 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0763258s, 28168 KB] g=38, 804 evaluated, 803 expanded
[t=0.144823s, 28432 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.144917s, 28432 KB] g=82, 2528 evaluated, 2527 expanded
[t=0.145547s, 28432 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.145568s, 28432 KB] g=84, 2543 evaluated, 2542 expanded
[t=0.146102s, 28432 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.146116s, 28432 KB] g=86, 2556 evaluated, 2555 expanded
[t=0.146678s, 28432 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.146689s, 28432 KB] g=88, 2570 evaluated, 2569 expanded
[t=0.149633s, 28432 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.149658s, 28432 KB] g=92, 2646 evaluated, 2645 expanded
[t=0.150112s, 28432 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.150131s, 28432 KB] g=94, 2657 evaluated, 2656 expanded
[t=0.157512s, 28564 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.15755s, 28564 KB] g=102, 2848 evaluated, 2847 expanded
[t=0.159367s, 28564 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.159388s, 28564 KB] g=106, 2895 evaluated, 2894 expanded
[t=0.159808s, 28564 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.159828s, 28564 KB] g=108, 2905 evaluated, 2904 expanded
[t=0.164665s, 28564 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.1647s, 28564 KB] g=116, 3030 evaluated, 3029 expanded
[t=0.164987s, 28564 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.164999s, 28564 KB] g=118, 3037 evaluated, 3036 expanded
[t=0.168649s, 28696 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.168708s, 28696 KB] g=130, 3135 evaluated, 3134 expanded
[t=0.169348s, 28696 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.169372s, 28696 KB] g=134, 3152 evaluated, 3151 expanded
[t=0.169583s, 28696 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.169599s, 28696 KB] g=136, 3157 evaluated, 3156 expanded
[t=0.172596s, 28696 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.172695s, 28696 KB] g=152, 3242 evaluated, 3241 expanded
[t=0.17343s, 28696 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.173446s, 28696 KB] g=160, 3264 evaluated, 3263 expanded
[t=0.173785s, 28696 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.173797s, 28696 KB] g=164, 3274 evaluated, 3273 expanded
[t=0.173859s, 28696 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.173872s, 28696 KB] g=165, 3276 evaluated, 3275 expanded
[t=0.173938s, 28696 KB] Solution found!
[t=0.173961s, 28696 KB] Actual search time: 0.131309s
unstack b15 b3 (1)
put-down b15 (1)
unstack b3 b9 (1)
put-down b3 (1)
unstack b2 b27 (1)
put-down b2 (1)
unstack b20 b10 (1)
put-down b20 (1)
unstack b27 b11 (1)
stack b27 b3 (1)
unstack b11 b25 (1)
put-down b11 (1)
unstack b25 b18 (1)
stack b25 b20 (1)
unstack b18 b7 (1)
stack b18 b2 (1)
unstack b10 b1 (1)
stack b10 b7 (1)
unstack b1 b4 (1)
put-down b1 (1)
unstack b4 b13 (1)
stack b4 b15 (1)
unstack b13 b12 (1)
put-down b13 (1)
unstack b12 b21 (1)
stack b12 b27 (1)
pick-up b13 (1)
stack b13 b21 (1)
unstack b9 b14 (1)
put-down b9 (1)
unstack b14 b6 (1)
put-down b14 (1)
unstack b6 b23 (1)
stack b6 b11 (1)
unstack b23 b26 (1)
stack b23 b25 (1)
unstack b26 b19 (1)
stack b26 b13 (1)
unstack b19 b5 (1)
stack b19 b9 (1)
unstack b5 b22 (1)
put-down b5 (1)
unstack b22 b16 (1)
stack b22 b12 (1)
unstack b16 b24 (1)
stack b16 b10 (1)
pick-up b5 (1)
stack b5 b16 (1)
unstack b18 b2 (1)
put-down b18 (1)
pick-up b2 (1)
stack b2 b26 (1)
pick-up b18 (1)
stack b18 b2 (1)
unstack b19 b9 (1)
put-down b19 (1)
pick-up b9 (1)
stack b9 b23 (1)
pick-up b19 (1)
stack b19 b9 (1)
unstack b6 b11 (1)
put-down b6 (1)
pick-up b11 (1)
stack b11 b24 (1)
pick-up b6 (1)
stack b6 b11 (1)
unstack b18 b2 (1)
put-down b18 (1)
unstack b2 b26 (1)
put-down b2 (1)
unstack b26 b13 (1)
put-down b26 (1)
pick-up b2 (1)
stack b2 b26 (1)
pick-up b18 (1)
stack b18 b2 (1)
unstack b13 b21 (1)
put-down b13 (1)
unstack b21 b17 (1)
stack b21 b1 (1)
unstack b17 b28 (1)
put-down b17 (1)
pick-up b13 (1)
stack b13 b21 (1)
unstack b28 b8 (1)
stack b28 b14 (1)
pick-up b8 (1)
stack b8 b22 (1)
unstack b4 b15 (1)
put-down b4 (1)
pick-up b15 (1)
stack b15 b17 (1)
pick-up b4 (1)
stack b4 b15 (1)
unstack b18 b2 (1)
put-down b18 (1)
unstack b2 b26 (1)
put-down b2 (1)
pick-up b18 (1)
stack b18 b2 (1)
pick-up b26 (1)
stack b26 b13 (1)
unstack b18 b2 (1)
put-down b18 (1)
pick-up b2 (1)
stack b2 b26 (1)
pick-up b18 (1)
stack b18 b2 (1)
unstack b6 b11 (1)
put-down b6 (1)
unstack b11 b24 (1)
put-down b11 (1)
pick-up b24 (1)
stack b24 b8 (1)
pick-up b11 (1)
stack b11 b24 (1)
pick-up b6 (1)
stack b6 b11 (1)
unstack b5 b16 (1)
put-down b5 (1)
unstack b16 b10 (1)
put-down b16 (1)
pick-up b5 (1)
stack b5 b16 (1)
unstack b10 b7 (1)
put-down b10 (1)
pick-up b7 (1)
stack b7 b28 (1)
pick-up b10 (1)
stack b10 b7 (1)
unstack b5 b16 (1)
put-down b5 (1)
pick-up b16 (1)
stack b16 b10 (1)
pick-up b5 (1)
stack b5 b16 (1)
unstack b19 b9 (1)
put-down b19 (1)
unstack b9 b23 (1)
put-down b9 (1)
unstack b23 b25 (1)
put-down b23 (1)
pick-up b9 (1)
stack b9 b23 (1)
pick-up b19 (1)
stack b19 b9 (1)
unstack b25 b20 (1)
put-down b25 (1)
pick-up b20 (1)
stack b20 b18 (1)
pick-up b25 (1)
stack b25 b20 (1)
unstack b19 b9 (1)
put-down b19 (1)
unstack b9 b23 (1)
put-down b9 (1)
pick-up b19 (1)
stack b19 b9 (1)
pick-up b23 (1)
stack b23 b25 (1)
unstack b19 b9 (1)
put-down b19 (1)
pick-up b9 (1)
stack b9 b23 (1)
pick-up b19 (1)
stack b19 b9 (1)
[t=0.173971s, 28696 KB] Plan length: 166 step(s).
[t=0.173971s, 28696 KB] Plan cost: 166
[t=0.173971s, 28696 KB] Expanded 3277 state(s).
[t=0.173971s, 28696 KB] Reopened 0 state(s).
[t=0.173971s, 28696 KB] Evaluated 3278 state(s).
[t=0.173971s, 28696 KB] Evaluations: 6556
[t=0.173971s, 28696 KB] Generated 53193 state(s).
[t=0.173971s, 28696 KB] Dead ends: 0 state(s).
[t=0.173971s, 28696 KB] Number of registered states: 3278
[t=0.173971s, 28696 KB] Int hash set load factor: 3278/4096 = 0.800293
[t=0.173971s, 28696 KB] Int hash set resizes: 12
[t=0.173971s, 28696 KB] Search time: 0.131367s
[t=0.173971s, 28696 KB] Total time: 0.173971s
Solution found.
Peak memory: 28696 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.38s
