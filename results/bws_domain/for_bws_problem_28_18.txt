INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_28/bws_problem_28_18.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.015s wall-clock]
2550 relevant atoms
1708 auxiliary atoms
4258 final queue length
7456 total queue pushes
Completing instantiation... [0.020s CPU, 0.027s wall-clock]
Instantiating: [0.040s CPU, 0.043s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
29 uncovered facts
Choosing groups: [0.000s CPU, 0.002s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.010s CPU, 0.009s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.002s wall-clock]
Translating task: [0.050s CPU, 0.048s wall-clock]
2324 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
56 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.019s wall-clock]
Reordering and filtering variables...
57 of 57 variables necessary.
29 of 57 mutex groups necessary.
1568 of 1568 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.010s wall-clock]
Translator variables: 57
Translator derived variables: 0
Translator facts: 870
Translator goal facts: 25
Translator mutex groups: 29
Translator total mutex groups size: 841
Translator operators: 1568
Translator axioms: 0
Translator task size: 13469
Translator peak memory: 40316 KB
Writing output... [0.000s CPU, 0.009s wall-clock]
Done! [0.140s CPU, 0.144s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.5493e-05s, 24488 KB] reading input...
[t=0.00535969s, 26076 KB] done reading input!
[t=0.00657163s, 26472 KB] Initializing landmark count heuristic...
[t=0.00661001s, 26472 KB] Generating landmark graph...
[t=0.00670152s, 26604 KB] Building a landmark graph with reasonable orders.
[t=0.00679133s, 26604 KB] Initializing Exploration...
[t=0.00724715s, 27016 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0287137s, 27676 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0288087s, 27676 KB] Landmarks generation time: 0.0221078s
[t=0.0288321s, 27676 KB] Discovered 127 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0288482s, 27676 KB] 526 edges
[t=0.0288585s, 27676 KB] approx. reasonable orders
[t=0.0288685s, 27676 KB] approx. obedient reasonable orders
[t=0.0288971s, 27676 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0289062s, 27676 KB] Landmarks generation time: 0.0222933s
[t=0.0289156s, 27676 KB] Discovered 127 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0289238s, 27676 KB] 526 edges
[t=0.0289321s, 27676 KB] Landmark graph generation time: 0.0223293s
[t=0.0289407s, 27676 KB] Landmark graph contains 127 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0289488s, 27676 KB] Landmark graph contains 526 orderings.
[t=0.0294975s, 27700 KB] Simplifying 6216 unary operators... done! [4704 unary operators]
[t=0.0310466s, 27832 KB] time to simplify: 0.00166749s
[t=0.0313338s, 27832 KB] Initializing additive heuristic...
[t=0.031357s, 27832 KB] Initializing FF heuristic...
[t=0.0314633s, 27832 KB] Building successor generator...done!
[t=0.031825s, 27832 KB] peak memory difference for successor generator creation: 0 KB
[t=0.031835s, 27832 KB] time for successor generation creation: 0.000330452s
[t=0.0318573s, 27832 KB] Variables: 57
[t=0.031866s, 27832 KB] FactPairs: 870
[t=0.0318739s, 27832 KB] Bytes per state: 24
[t=0.0320568s, 27832 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0321041s, 27832 KB] 57 initial landmarks, 25 goal landmarks
[t=0.0321988s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 70
[t=0.0322244s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 52
[t=0.0322326s, 27832 KB] g=0, 1 evaluated, 0 expanded
[t=0.0322468s, 27832 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 70
[t=0.0322556s, 27832 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 52
[t=0.0324475s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 69
[t=0.0324568s, 27832 KB] g=1, 5 evaluated, 4 expanded
[t=0.0325087s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 68
[t=0.0325217s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 51
[t=0.0325308s, 27832 KB] g=2, 6 evaluated, 5 expanded
[t=0.0327354s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 67
[t=0.0327477s, 27832 KB] g=3, 11 evaluated, 10 expanded
[t=0.0333717s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 66
[t=0.0333866s, 27832 KB] g=5, 28 evaluated, 27 expanded
[t=0.0337877s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 65
[t=0.0338029s, 27832 KB] g=8, 39 evaluated, 38 expanded
[t=0.0344568s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 64
[t=0.0344728s, 27832 KB] g=10, 57 evaluated, 56 expanded
[t=0.0352445s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 63
[t=0.0352776s, 27832 KB] g=12, 77 evaluated, 76 expanded
[t=0.0353293s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 50
[t=0.0353425s, 27832 KB] g=6, 78 evaluated, 77 expanded
[t=0.0358978s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 49
[t=0.0359103s, 27832 KB] g=8, 93 evaluated, 92 expanded
[t=0.0361405s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 62
[t=0.03615s, 27832 KB] g=14, 99 evaluated, 98 expanded
[t=0.0365358s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 48
[t=0.0365485s, 27832 KB] g=10, 109 evaluated, 108 expanded
[t=0.0370047s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 61
[t=0.0370216s, 27832 KB] g=11, 121 evaluated, 120 expanded
[t=0.037072s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.0370829s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 47
[t=0.0370911s, 27832 KB] g=12, 122 evaluated, 121 expanded
[t=0.0373674s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 58
[t=0.0373793s, 27832 KB] g=14, 129 evaluated, 128 expanded
[t=0.0378676s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 57
[t=0.0378789s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 46
[t=0.0378867s, 27832 KB] g=16, 142 evaluated, 141 expanded
[t=0.0382223s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0382331s, 27832 KB] g=18, 151 evaluated, 150 expanded
[t=0.0382819s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0382905s, 27832 KB] g=18, 152 evaluated, 151 expanded
[t=0.0386739s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0386851s, 27832 KB] g=19, 162 evaluated, 161 expanded
[t=0.039798s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0398108s, 27832 KB] g=22, 191 evaluated, 190 expanded
[t=0.0398989s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0399082s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.0399165s, 27832 KB] g=22, 193 evaluated, 192 expanded
[t=0.0401873s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0401975s, 27832 KB] g=24, 200 evaluated, 199 expanded
[t=0.0405003s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0405113s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0405197s, 27832 KB] g=26, 208 evaluated, 207 expanded
[t=0.0417248s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0417362s, 27832 KB] g=29, 240 evaluated, 239 expanded
[t=0.0417868s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0417959s, 27832 KB] g=30, 241 evaluated, 240 expanded
[t=0.0419901s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0419998s, 27832 KB] g=31, 246 evaluated, 245 expanded
[t=0.0420476s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0420562s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0420641s, 27832 KB] g=32, 247 evaluated, 246 expanded
[t=0.042455s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0424648s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0424734s, 27832 KB] g=34, 257 evaluated, 256 expanded
[t=0.042779s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0427888s, 27832 KB] g=36, 265 evaluated, 264 expanded
[t=0.0431317s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0431419s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0431511s, 27832 KB] g=38, 274 evaluated, 273 expanded
[t=0.0435311s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0435436s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0435519s, 27832 KB] g=40, 283 evaluated, 282 expanded
[t=0.0439064s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0439164s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0439248s, 27832 KB] g=42, 292 evaluated, 291 expanded
[t=0.044612s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0446458s, 27832 KB] g=45, 310 evaluated, 309 expanded
[t=0.044743s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0447521s, 27832 KB] g=46, 312 evaluated, 311 expanded
[t=0.0450755s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0450847s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0450926s, 27832 KB] g=48, 320 evaluated, 319 expanded
[t=0.045371s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0453816s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0453922s, 27832 KB] g=50, 327 evaluated, 326 expanded
[t=0.0457059s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0457172s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0457271s, 27832 KB] g=52, 334 evaluated, 333 expanded
[t=0.0460445s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0460561s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0460657s, 27832 KB] g=54, 342 evaluated, 341 expanded
[t=0.0463439s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0463541s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0463624s, 27832 KB] g=56, 349 evaluated, 348 expanded
[t=0.0466707s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0466815s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0466914s, 27832 KB] g=58, 357 evaluated, 356 expanded
[t=0.0473438s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.047356s, 27832 KB] g=62, 374 evaluated, 373 expanded
[t=0.0475785s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0475891s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.047597s, 27832 KB] g=64, 380 evaluated, 379 expanded
[t=0.0483918s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0484079s, 27832 KB] g=68, 403 evaluated, 402 expanded
[t=0.0485913s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0486015s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0486094s, 27832 KB] g=70, 408 evaluated, 407 expanded
[t=0.0492342s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.049245s, 27832 KB] g=76, 425 evaluated, 424 expanded
[t=0.0495002s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0495093s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0495172s, 27832 KB] g=78, 432 evaluated, 431 expanded
[t=0.0497421s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0497521s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0497632s, 27832 KB] g=80, 438 evaluated, 437 expanded
[t=0.0499089s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0499188s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.049927s, 27832 KB] g=82, 442 evaluated, 441 expanded
[t=0.0500381s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0500484s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0500561s, 27832 KB] g=84, 445 evaluated, 444 expanded
[t=0.0652888s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0653355s, 27832 KB] g=116, 867 evaluated, 866 expanded
[t=0.0654923s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.065505s, 27832 KB] g=118, 871 evaluated, 870 expanded
[t=0.0659933s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0660042s, 27832 KB] g=124, 885 evaluated, 884 expanded
[t=0.0671273s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0671384s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0671464s, 27832 KB] g=142, 918 evaluated, 917 expanded
[t=0.240748s, 28628 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.240818s, 28628 KB] g=122, 5898 evaluated, 5897 expanded
[t=0.240967s, 28628 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.240978s, 28628 KB] g=124, 5902 evaluated, 5901 expanded
[t=0.249836s, 28760 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.24989s, 28760 KB] g=140, 6161 evaluated, 6160 expanded
[t=0.251435s, 28760 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.251451s, 28760 KB] g=148, 6207 evaluated, 6206 expanded
[t=0.251876s, 28760 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.251886s, 28760 KB] g=152, 6220 evaluated, 6219 expanded
[t=0.251987s, 28760 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.251997s, 28760 KB] g=154, 6223 evaluated, 6222 expanded
[t=0.258473s, 28760 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.258505s, 28760 KB] g=188, 6441 evaluated, 6440 expanded
[t=0.258703s, 28760 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.258713s, 28760 KB] g=192, 6450 evaluated, 6449 expanded
[t=0.258783s, 28760 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.258798s, 28760 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.258806s, 28760 KB] g=194, 6453 evaluated, 6452 expanded
[t=0.25912s, 28760 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.259131s, 28760 KB] g=206, 6470 evaluated, 6469 expanded
[t=0.259232s, 28760 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.259243s, 28760 KB] g=210, 6474 evaluated, 6473 expanded
[t=0.259271s, 28760 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.259279s, 28760 KB] g=211, 6475 evaluated, 6474 expanded
[t=0.259295s, 28760 KB] Solution found!
[t=0.259316s, 28760 KB] Actual search time: 0.227228s
unstack b21 b7 (1)
stack b21 b23 (1)
unstack b14 b13 (1)
put-down b14 (1)
unstack b13 b10 (1)
put-down b13 (1)
unstack b10 b18 (1)
stack b10 b24 (1)
unstack b15 b5 (1)
stack b15 b18 (1)
unstack b7 b27 (1)
stack b7 b10 (1)
unstack b17 b9 (1)
put-down b17 (1)
unstack b9 b12 (1)
put-down b9 (1)
pick-up b14 (1)
stack b14 b12 (1)
unstack b27 b6 (1)
put-down b27 (1)
pick-up b6 (1)
stack b6 b27 (1)
unstack b5 b16 (1)
put-down b5 (1)
unstack b16 b1 (1)
put-down b16 (1)
unstack b14 b12 (1)
put-down b14 (1)
unstack b12 b4 (1)
stack b12 b1 (1)
unstack b4 b25 (1)
stack b4 b16 (1)
pick-up b14 (1)
stack b14 b12 (1)
unstack b25 b19 (1)
put-down b25 (1)
unstack b19 b26 (1)
stack b19 b14 (1)
pick-up b26 (1)
stack b26 b17 (1)
pick-up b5 (1)
stack b5 b19 (1)
unstack b15 b18 (1)
put-down b15 (1)
unstack b18 b2 (1)
stack b18 b6 (1)
pick-up b15 (1)
stack b15 b18 (1)
unstack b2 b8 (1)
stack b2 b15 (1)
unstack b8 b3 (1)
stack b8 b9 (1)
unstack b3 b20 (1)
stack b3 b5 (1)
unstack b20 b11 (1)
stack b20 b8 (1)
pick-up b11 (1)
stack b11 b13 (1)
unstack b21 b23 (1)
put-down b21 (1)
pick-up b23 (1)
stack b23 b3 (1)
pick-up b21 (1)
stack b21 b23 (1)
unstack b26 b17 (1)
put-down b26 (1)
pick-up b17 (1)
stack b17 b2 (1)
pick-up b26 (1)
stack b26 b17 (1)
unstack b7 b10 (1)
put-down b7 (1)
unstack b10 b24 (1)
put-down b10 (1)
unstack b24 b22 (1)
stack b24 b20 (1)
pick-up b10 (1)
stack b10 b24 (1)
pick-up b22 (1)
stack b22 b26 (1)
pick-up b25 (1)
stack b25 b22 (1)
pick-up b7 (1)
stack b7 b10 (1)
unstack b25 b22 (1)
put-down b25 (1)
unstack b22 b26 (1)
put-down b22 (1)
pick-up b25 (1)
stack b25 b22 (1)
unstack b26 b17 (1)
put-down b26 (1)
unstack b17 b2 (1)
put-down b17 (1)
unstack b2 b15 (1)
put-down b2 (1)
pick-up b17 (1)
stack b17 b2 (1)
pick-up b26 (1)
stack b26 b17 (1)
unstack b25 b22 (1)
put-down b25 (1)
pick-up b22 (1)
stack b22 b26 (1)
pick-up b25 (1)
stack b25 b22 (1)
unstack b15 b18 (1)
put-down b15 (1)
unstack b18 b6 (1)
put-down b18 (1)
pick-up b15 (1)
stack b15 b18 (1)
unstack b6 b27 (1)
put-down b6 (1)
pick-up b27 (1)
stack b27 b11 (1)
pick-up b6 (1)
stack b6 b27 (1)
unstack b15 b18 (1)
put-down b15 (1)
pick-up b18 (1)
stack b18 b6 (1)
pick-up b15 (1)
stack b15 b18 (1)
unstack b25 b22 (1)
put-down b25 (1)
unstack b22 b26 (1)
put-down b22 (1)
unstack b26 b17 (1)
put-down b26 (1)
pick-up b22 (1)
stack b22 b26 (1)
pick-up b25 (1)
stack b25 b22 (1)
unstack b17 b2 (1)
put-down b17 (1)
pick-up b2 (1)
stack b2 b15 (1)
pick-up b17 (1)
stack b17 b2 (1)
unstack b25 b22 (1)
put-down b25 (1)
unstack b22 b26 (1)
put-down b22 (1)
pick-up b25 (1)
stack b25 b22 (1)
pick-up b26 (1)
stack b26 b17 (1)
unstack b25 b22 (1)
put-down b25 (1)
pick-up b22 (1)
stack b22 b26 (1)
pick-up b25 (1)
stack b25 b22 (1)
unstack b21 b23 (1)
put-down b21 (1)
unstack b23 b3 (1)
put-down b23 (1)
pick-up b21 (1)
stack b21 b23 (1)
unstack b3 b5 (1)
put-down b3 (1)
unstack b5 b19 (1)
put-down b5 (1)
pick-up b3 (1)
stack b3 b5 (1)
unstack b21 b23 (1)
put-down b21 (1)
pick-up b23 (1)
stack b23 b3 (1)
pick-up b21 (1)
stack b21 b23 (1)
unstack b19 b14 (1)
put-down b19 (1)
unstack b14 b12 (1)
put-down b14 (1)
pick-up b19 (1)
stack b19 b14 (1)
unstack b12 b1 (1)
put-down b12 (1)
unstack b1 b28 (1)
put-down b1 (1)
pick-up b28 (1)
stack b28 b25 (1)
pick-up b1 (1)
stack b1 b28 (1)
pick-up b12 (1)
stack b12 b1 (1)
unstack b19 b14 (1)
put-down b19 (1)
pick-up b14 (1)
stack b14 b12 (1)
pick-up b19 (1)
stack b19 b14 (1)
unstack b21 b23 (1)
put-down b21 (1)
unstack b23 b3 (1)
put-down b23 (1)
pick-up b21 (1)
stack b21 b23 (1)
unstack b3 b5 (1)
put-down b3 (1)
pick-up b5 (1)
stack b5 b19 (1)
pick-up b3 (1)
stack b3 b5 (1)
unstack b21 b23 (1)
put-down b21 (1)
pick-up b23 (1)
stack b23 b3 (1)
pick-up b21 (1)
stack b21 b23 (1)
[t=0.259346s, 28760 KB] Plan length: 212 step(s).
[t=0.259346s, 28760 KB] Plan cost: 212
[t=0.259346s, 28760 KB] Expanded 6475 state(s).
[t=0.259346s, 28760 KB] Reopened 0 state(s).
[t=0.259346s, 28760 KB] Evaluated 6476 state(s).
[t=0.259346s, 28760 KB] Evaluations: 12952
[t=0.259346s, 28760 KB] Generated 57886 state(s).
[t=0.259346s, 28760 KB] Dead ends: 0 state(s).
[t=0.259346s, 28760 KB] Number of registered states: 6476
[t=0.259346s, 28760 KB] Int hash set load factor: 6476/8192 = 0.790527
[t=0.259346s, 28760 KB] Int hash set resizes: 13
[t=0.259346s, 28760 KB] Search time: 0.227292s
[t=0.259346s, 28760 KB] Total time: 0.259346s
Solution found.
Peak memory: 28760 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.45s
