INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_22/bws_problem_22_29.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.010s wall-clock]
1608 relevant atoms
1078 auxiliary atoms
2686 final queue length
4670 total queue pushes
Completing instantiation... [0.020s CPU, 0.016s wall-clock]
Instantiating: [0.030s CPU, 0.028s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
23 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.007s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.010s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
1430 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
44 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.012s wall-clock]
Reordering and filtering variables...
45 of 45 variables necessary.
23 of 45 mutex groups necessary.
968 of 968 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 45
Translator derived variables: 0
Translator facts: 552
Translator goal facts: 18
Translator mutex groups: 23
Translator total mutex groups size: 529
Translator operators: 968
Translator axioms: 0
Translator task size: 8338
Translator peak memory: 36976 KB
Writing output... [0.000s CPU, 0.005s wall-clock]
Done! [0.090s CPU, 0.087s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=3.4916e-05s, 24488 KB] reading input...
[t=0.00302983s, 25340 KB] done reading input!
[t=0.00406987s, 25736 KB] Initializing landmark count heuristic...
[t=0.0041188s, 25736 KB] Generating landmark graph...
[t=0.00419753s, 25736 KB] Building a landmark graph with reasonable orders.
[t=0.00427055s, 25736 KB] Initializing Exploration...
[t=0.00458544s, 26000 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0147332s, 26528 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0148961s, 26528 KB] Landmarks generation time: 0.0107239s
[t=0.0149395s, 26528 KB] Discovered 97 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0149751s, 26528 KB] 378 edges
[t=0.0149952s, 26528 KB] approx. reasonable orders
[t=0.0163156s, 26528 KB] approx. obedient reasonable orders
[t=0.0163486s, 26528 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0163591s, 26528 KB] Landmarks generation time: 0.0122387s
[t=0.0163709s, 26528 KB] Discovered 97 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0163815s, 26528 KB] 403 edges
[t=0.0163936s, 26528 KB] Landmark graph generation time: 0.0122825s
[t=0.0164032s, 26528 KB] Landmark graph contains 97 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0164138s, 26528 KB] Landmark graph contains 403 orderings.
[t=0.0169397s, 26528 KB] Simplifying 3828 unary operators... done! [2904 unary operators]
[t=0.0178883s, 26528 KB] time to simplify: 0.00101245s
[t=0.018014s, 26528 KB] Initializing additive heuristic...
[t=0.0180303s, 26528 KB] Initializing FF heuristic...
[t=0.0180996s, 26528 KB] Building successor generator...done!
[t=0.0183007s, 26528 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0183093s, 26528 KB] time for successor generation creation: 0.000162799s
[t=0.018324s, 26528 KB] Variables: 45
[t=0.0183325s, 26528 KB] FactPairs: 552
[t=0.0183425s, 26528 KB] Bytes per state: 20
[t=0.0184474s, 26528 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0184828s, 26528 KB] 45 initial landmarks, 18 goal landmarks
[t=0.0185329s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0185427s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0185527s, 26528 KB] g=0, 1 evaluated, 0 expanded
[t=0.0185681s, 26528 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0185772s, 26528 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0187169s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.018727s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.018737s, 26528 KB] g=2, 6 evaluated, 5 expanded
[t=0.0188715s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0188814s, 26528 KB] g=4, 11 evaluated, 10 expanded
[t=0.0189907s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.019s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0190097s, 26528 KB] g=4, 15 evaluated, 14 expanded
[t=0.0191207s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0191303s, 26528 KB] g=6, 19 evaluated, 18 expanded
[t=0.0192605s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0192701s, 26528 KB] g=8, 24 evaluated, 23 expanded
[t=0.019331s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0193402s, 26528 KB] g=8, 26 evaluated, 25 expanded
[t=0.0195467s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0195639s, 26528 KB] g=10, 34 evaluated, 33 expanded
[t=0.0197763s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0197863s, 26528 KB] g=12, 42 evaluated, 41 expanded
[t=0.0199965s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0200061s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0200219s, 26528 KB] g=14, 50 evaluated, 49 expanded
[t=0.0200873s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0200971s, 26528 KB] g=15, 52 evaluated, 51 expanded
[t=0.0201355s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0201451s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0201552s, 26528 KB] g=16, 53 evaluated, 52 expanded
[t=0.0206935s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0207065s, 26528 KB] g=20, 74 evaluated, 73 expanded
[t=0.0209706s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0209815s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0209918s, 26528 KB] g=22, 83 evaluated, 82 expanded
[t=0.0211989s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0212161s, 26528 KB] g=24, 91 evaluated, 90 expanded
[t=0.0212821s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0212919s, 26528 KB] g=24, 93 evaluated, 92 expanded
[t=0.0216517s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0216736s, 26528 KB] g=26, 107 evaluated, 106 expanded
[t=0.0218826s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0218935s, 26528 KB] g=28, 115 evaluated, 114 expanded
[t=0.0220477s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0220576s, 26528 KB] g=30, 121 evaluated, 120 expanded
[t=0.0222958s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0223073s, 26528 KB] g=32, 130 evaluated, 129 expanded
[t=0.0227263s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0227377s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.022748s, 26528 KB] g=32, 148 evaluated, 147 expanded
[t=0.0229206s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0229304s, 26528 KB] g=34, 155 evaluated, 154 expanded
[t=0.0229683s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0229938s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0230037s, 26528 KB] g=34, 156 evaluated, 155 expanded
[t=0.0231577s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0231673s, 26528 KB] g=36, 162 evaluated, 161 expanded
[t=0.0235028s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0235127s, 26528 KB] g=38, 175 evaluated, 174 expanded
[t=0.0236668s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0236761s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0236856s, 26528 KB] g=40, 181 evaluated, 180 expanded
[t=0.0237924s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0238017s, 26528 KB] g=41, 185 evaluated, 184 expanded
[t=0.0238385s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0238531s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0238633s, 26528 KB] g=42, 186 evaluated, 185 expanded
[t=0.024017s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0240262s, 26528 KB] g=44, 192 evaluated, 191 expanded
[t=0.0240626s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0240718s, 26528 KB] g=44, 193 evaluated, 192 expanded
[t=0.0243466s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0243582s, 26528 KB] g=46, 204 evaluated, 203 expanded
[t=0.0244901s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0244996s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0245094s, 26528 KB] g=48, 209 evaluated, 208 expanded
[t=0.0246664s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0246761s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0246861s, 26528 KB] g=50, 215 evaluated, 214 expanded
[t=0.0248409s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0248505s, 26528 KB] g=52, 221 evaluated, 220 expanded
[t=0.024911s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0249204s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0249302s, 26528 KB] g=52, 223 evaluated, 222 expanded
[t=0.025087s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0250974s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0251075s, 26528 KB] g=54, 229 evaluated, 228 expanded
[t=0.0253999s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0254095s, 26528 KB] g=58, 241 evaluated, 240 expanded
[t=0.0255144s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0255242s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0255339s, 26528 KB] g=60, 245 evaluated, 244 expanded
[t=0.0259028s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0259134s, 26528 KB] g=66, 260 evaluated, 259 expanded
[t=0.0260171s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0260268s, 26528 KB] g=68, 264 evaluated, 263 expanded
[t=0.0261716s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0261809s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0261904s, 26528 KB] g=70, 270 evaluated, 269 expanded
[t=0.0309357s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.030969s, 26528 KB] g=86, 476 evaluated, 475 expanded
[t=0.0323003s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0323194s, 26528 KB] g=98, 530 evaluated, 529 expanded
[t=0.0325486s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0325597s, 26528 KB] g=102, 539 evaluated, 538 expanded
[t=0.0326379s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0326482s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0326639s, 26528 KB] g=104, 542 evaluated, 541 expanded
[t=0.0342632s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0342788s, 26528 KB] g=127, 622 evaluated, 621 expanded
[t=0.0343097s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0343194s, 26528 KB] g=128, 623 evaluated, 622 expanded
[t=0.0343969s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0344077s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0344174s, 26528 KB] g=130, 627 evaluated, 626 expanded
[t=0.0345704s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0345801s, 26528 KB] g=134, 636 evaluated, 635 expanded
[t=0.0346368s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0346463s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0346566s, 26528 KB] g=136, 639 evaluated, 638 expanded
[t=0.0348147s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0348255s, 26528 KB] g=144, 650 evaluated, 649 expanded
[t=0.0348479s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0348569s, 26528 KB] g=145, 651 evaluated, 650 expanded
[t=0.0348748s, 26528 KB] Solution found!
[t=0.0348897s, 26528 KB] Actual search time: 0.0164055s
unstack b12 b8 (1)
put-down b12 (1)
unstack b8 b18 (1)
stack b8 b19 (1)
unstack b16 b7 (1)
put-down b16 (1)
unstack b7 b14 (1)
put-down b7 (1)
unstack b14 b20 (1)
put-down b14 (1)
unstack b20 b9 (1)
put-down b20 (1)
unstack b9 b15 (1)
stack b9 b5 (1)
unstack b15 b11 (1)
stack b15 b9 (1)
unstack b18 b13 (1)
put-down b18 (1)
unstack b13 b22 (1)
put-down b13 (1)
unstack b22 b17 (1)
stack b22 b18 (1)
unstack b17 b4 (1)
stack b17 b16 (1)
pick-up b14 (1)
stack b14 b4 (1)
pick-up b7 (1)
stack b7 b22 (1)
unstack b14 b4 (1)
put-down b14 (1)
pick-up b4 (1)
stack b4 b20 (1)
pick-up b14 (1)
stack b14 b4 (1)
unstack b8 b19 (1)
put-down b8 (1)
unstack b19 b2 (1)
stack b19 b17 (1)
unstack b2 b6 (1)
put-down b2 (1)
unstack b6 b1 (1)
stack b6 b11 (1)
pick-up b8 (1)
stack b8 b19 (1)
unstack b1 b21 (1)
put-down b1 (1)
unstack b21 b10 (1)
stack b21 b8 (1)
unstack b10 b3 (1)
stack b10 b21 (1)
pick-up b3 (1)
stack b3 b14 (1)
pick-up b1 (1)
stack b1 b3 (1)
unstack b6 b11 (1)
put-down b6 (1)
pick-up b11 (1)
stack b11 b10 (1)
pick-up b6 (1)
stack b6 b11 (1)
unstack b15 b9 (1)
put-down b15 (1)
unstack b9 b5 (1)
put-down b9 (1)
pick-up b5 (1)
stack b5 b7 (1)
pick-up b15 (1)
stack b15 b9 (1)
unstack b5 b7 (1)
put-down b5 (1)
unstack b7 b22 (1)
put-down b7 (1)
pick-up b5 (1)
stack b5 b7 (1)
unstack b15 b9 (1)
put-down b15 (1)
pick-up b9 (1)
stack b9 b5 (1)
pick-up b15 (1)
stack b15 b9 (1)
unstack b22 b18 (1)
put-down b22 (1)
pick-up b18 (1)
stack b18 b13 (1)
pick-up b22 (1)
stack b22 b18 (1)
unstack b15 b9 (1)
put-down b15 (1)
unstack b9 b5 (1)
put-down b9 (1)
pick-up b15 (1)
stack b15 b9 (1)
unstack b5 b7 (1)
put-down b5 (1)
pick-up b7 (1)
stack b7 b22 (1)
pick-up b5 (1)
stack b5 b7 (1)
unstack b15 b9 (1)
put-down b15 (1)
pick-up b9 (1)
stack b9 b5 (1)
pick-up b15 (1)
stack b15 b9 (1)
unstack b6 b11 (1)
put-down b6 (1)
unstack b11 b10 (1)
put-down b11 (1)
unstack b10 b21 (1)
put-down b10 (1)
pick-up b11 (1)
stack b11 b10 (1)
pick-up b6 (1)
stack b6 b11 (1)
unstack b21 b8 (1)
put-down b21 (1)
unstack b8 b19 (1)
put-down b8 (1)
pick-up b21 (1)
stack b21 b8 (1)
unstack b19 b17 (1)
put-down b19 (1)
unstack b17 b16 (1)
put-down b17 (1)
pick-up b16 (1)
stack b16 b1 (1)
pick-up b17 (1)
stack b17 b16 (1)
pick-up b19 (1)
stack b19 b17 (1)
unstack b21 b8 (1)
put-down b21 (1)
pick-up b8 (1)
stack b8 b19 (1)
pick-up b21 (1)
stack b21 b8 (1)
unstack b6 b11 (1)
put-down b6 (1)
unstack b11 b10 (1)
put-down b11 (1)
pick-up b10 (1)
stack b10 b21 (1)
pick-up b11 (1)
stack b11 b10 (1)
pick-up b6 (1)
stack b6 b11 (1)
[t=0.0349016s, 26528 KB] Plan length: 146 step(s).
[t=0.0349016s, 26528 KB] Plan cost: 146
[t=0.0349016s, 26528 KB] Expanded 651 state(s).
[t=0.0349016s, 26528 KB] Reopened 0 state(s).
[t=0.0349016s, 26528 KB] Evaluated 652 state(s).
[t=0.0349016s, 26528 KB] Evaluations: 1304
[t=0.0349016s, 26528 KB] Generated 5820 state(s).
[t=0.0349016s, 26528 KB] Dead ends: 0 state(s).
[t=0.0349016s, 26528 KB] Number of registered states: 652
[t=0.0349016s, 26528 KB] Int hash set load factor: 652/1024 = 0.636719
[t=0.0349016s, 26528 KB] Int hash set resizes: 10
[t=0.0349016s, 26528 KB] Search time: 0.0164545s
[t=0.0349016s, 26528 KB] Total time: 0.0349016s
Solution found.
Peak memory: 26528 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.18s
