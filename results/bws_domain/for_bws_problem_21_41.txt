INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_21/bws_problem_21_41.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.020s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.000s CPU, 0.010s wall-clock]
1472 relevant atoms
987 auxiliary atoms
2459 final queue length
4269 total queue pushes
Completing instantiation... [0.020s CPU, 0.016s wall-clock]
Instantiating: [0.040s CPU, 0.027s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
22 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.006s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.022s wall-clock]
1302 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
42 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.012s wall-clock]
Reordering and filtering variables...
43 of 43 variables necessary.
22 of 43 mutex groups necessary.
882 of 882 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 43
Translator derived variables: 0
Translator facts: 506
Translator goal facts: 18
Translator mutex groups: 22
Translator total mutex groups size: 484
Translator operators: 882
Translator axioms: 0
Translator task size: 7603
Translator peak memory: 36460 KB
Writing output... [0.000s CPU, 0.005s wall-clock]
Done! [0.090s CPU, 0.081s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=1.9699e-05s, 24488 KB] reading input...
[t=0.00250222s, 25268 KB] done reading input!
[t=0.00348201s, 25664 KB] Initializing landmark count heuristic...
[t=0.00351633s, 25664 KB] Generating landmark graph...
[t=0.00357371s, 25664 KB] Building a landmark graph with reasonable orders.
[t=0.00363387s, 25664 KB] Initializing Exploration...
[t=0.0038886s, 25852 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0129875s, 26380 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0132867s, 26380 KB] Landmarks generation time: 0.00971669s
[t=0.013306s, 26380 KB] Discovered 92 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0133424s, 26380 KB] 341 edges
[t=0.0133562s, 26380 KB] approx. reasonable orders
[t=0.0133703s, 26380 KB] approx. obedient reasonable orders
[t=0.0134035s, 26380 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0134137s, 26380 KB] Landmarks generation time: 0.00989446s
[t=0.0134234s, 26380 KB] Discovered 92 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0134347s, 26380 KB] 341 edges
[t=0.0134463s, 26380 KB] Landmark graph generation time: 0.00993845s
[t=0.0134564s, 26380 KB] Landmark graph contains 92 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0134653s, 26380 KB] Landmark graph contains 341 orderings.
[t=0.0141201s, 26380 KB] Simplifying 3486 unary operators... done! [2646 unary operators]
[t=0.0149925s, 26380 KB] time to simplify: 0.000928716s
[t=0.0151028s, 26380 KB] Initializing additive heuristic...
[t=0.0151159s, 26380 KB] Initializing FF heuristic...
[t=0.0151661s, 26380 KB] Building successor generator...done!
[t=0.0153913s, 26380 KB] peak memory difference for successor generator creation: 0 KB
[t=0.015401s, 26380 KB] time for successor generation creation: 0.000186319s
[t=0.0154136s, 26380 KB] Variables: 43
[t=0.0154224s, 26380 KB] FactPairs: 506
[t=0.0154314s, 26380 KB] Bytes per state: 16
[t=0.01553s, 26380 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0155685s, 26380 KB] 43 initial landmarks, 18 goal landmarks
[t=0.0156303s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0156403s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0156489s, 26380 KB] g=0, 1 evaluated, 0 expanded
[t=0.0156621s, 26380 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0156709s, 26380 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0158179s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0158277s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0158357s, 26380 KB] g=2, 6 evaluated, 5 expanded
[t=0.0159752s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.015984s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0159918s, 26380 KB] g=4, 11 evaluated, 10 expanded
[t=0.0161295s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0161387s, 26380 KB] g=6, 16 evaluated, 15 expanded
[t=0.0161794s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0161883s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0161963s, 26380 KB] g=6, 17 evaluated, 16 expanded
[t=0.0163084s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0163174s, 26380 KB] g=8, 21 evaluated, 20 expanded
[t=0.016506s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0165152s, 26380 KB] g=9, 28 evaluated, 27 expanded
[t=0.0165524s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0165612s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0165694s, 26380 KB] g=10, 29 evaluated, 28 expanded
[t=0.016736s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0167449s, 26380 KB] g=12, 35 evaluated, 34 expanded
[t=0.0170673s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0170776s, 26380 KB] g=14, 47 evaluated, 46 expanded
[t=0.0172697s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0172786s, 26380 KB] g=17, 54 evaluated, 53 expanded
[t=0.017671s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0176868s, 26380 KB] g=20, 68 evaluated, 67 expanded
[t=0.0179057s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.017915s, 26380 KB] g=20, 76 evaluated, 75 expanded
[t=0.0180043s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0180142s, 26380 KB] g=22, 79 evaluated, 78 expanded
[t=0.0183609s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0183701s, 26380 KB] g=22, 92 evaluated, 91 expanded
[t=0.0185873s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0186016s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.01861s, 26380 KB] g=24, 100 evaluated, 99 expanded
[t=0.0188028s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0188124s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0188215s, 26380 KB] g=26, 107 evaluated, 106 expanded
[t=0.0193306s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0193419s, 26380 KB] g=29, 126 evaluated, 125 expanded
[t=0.0196907s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0197013s, 26380 KB] g=32, 140 evaluated, 139 expanded
[t=0.0200796s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0200946s, 26380 KB] g=34, 155 evaluated, 154 expanded
[t=0.0202111s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0202251s, 26380 KB] g=32, 159 evaluated, 158 expanded
[t=0.0204959s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0205059s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0205145s, 26380 KB] g=36, 170 evaluated, 169 expanded
[t=0.0207672s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0207772s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0207854s, 26380 KB] g=38, 180 evaluated, 179 expanded
[t=0.0209855s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0209949s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0210035s, 26380 KB] g=40, 188 evaluated, 187 expanded
[t=0.0213508s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0213613s, 26380 KB] g=43, 202 evaluated, 201 expanded
[t=0.0214241s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0214336s, 26380 KB] g=44, 204 evaluated, 203 expanded
[t=0.021638s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0216541s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.021663s, 26380 KB] g=46, 212 evaluated, 211 expanded
[t=0.0218809s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0218914s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0218995s, 26380 KB] g=48, 221 evaluated, 220 expanded
[t=0.0220875s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.022098s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0221058s, 26380 KB] g=50, 229 evaluated, 228 expanded
[t=0.0222583s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0222684s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0222799s, 26380 KB] g=52, 235 evaluated, 234 expanded
[t=0.0229843s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0230057s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0230145s, 26380 KB] g=56, 263 evaluated, 262 expanded
[t=0.0231648s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0231766s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.023185s, 26380 KB] g=58, 269 evaluated, 268 expanded
[t=0.0239155s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0239292s, 26380 KB] g=64, 301 evaluated, 300 expanded
[t=0.0240535s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0240622s, 26380 KB] g=66, 306 evaluated, 305 expanded
[t=0.0241637s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0241732s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0241821s, 26380 KB] g=68, 310 evaluated, 309 expanded
[t=0.025073s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0251016s, 26380 KB] g=76, 347 evaluated, 346 expanded
[t=0.0252552s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0252647s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.025273s, 26380 KB] g=78, 353 evaluated, 352 expanded
[t=0.0301809s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0302004s, 26380 KB] g=100, 562 evaluated, 561 expanded
[t=0.0303029s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0303122s, 26380 KB] g=102, 566 evaluated, 565 expanded
[t=0.0310065s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0310192s, 26380 KB] g=110, 596 evaluated, 595 expanded
[t=0.03123s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.031239s, 26380 KB] g=114, 605 evaluated, 604 expanded
[t=0.0313152s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0313243s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0313327s, 26380 KB] g=116, 608 evaluated, 607 expanded
[t=0.0329546s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0329711s, 26380 KB] g=138, 696 evaluated, 695 expanded
[t=0.0331133s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0331288s, 26380 KB] g=142, 705 evaluated, 704 expanded
[t=0.0331797s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0331885s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0331964s, 26380 KB] g=144, 708 evaluated, 707 expanded
[t=0.0333278s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0333486s, 26380 KB] g=152, 718 evaluated, 717 expanded
[t=0.0334023s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0334109s, 26380 KB] g=156, 722 evaluated, 721 expanded
[t=0.033427s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0334354s, 26380 KB] g=157, 723 evaluated, 722 expanded
[t=0.0334493s, 26380 KB] Solution found!
[t=0.0334608s, 26380 KB] Actual search time: 0.0178878s
unstack b13 b9 (1)
put-down b13 (1)
unstack b17 b5 (1)
put-down b17 (1)
unstack b21 b6 (1)
stack b21 b5 (1)
unstack b6 b16 (1)
put-down b6 (1)
unstack b16 b11 (1)
stack b16 b13 (1)
unstack b11 b12 (1)
put-down b11 (1)
unstack b15 b19 (1)
put-down b15 (1)
unstack b9 b10 (1)
put-down b9 (1)
unstack b10 b7 (1)
put-down b10 (1)
unstack b7 b4 (1)
stack b7 b6 (1)
pick-up b12 (1)
stack b12 b7 (1)
pick-up b11 (1)
stack b11 b4 (1)
pick-up b9 (1)
stack b9 b10 (1)
unstack b21 b5 (1)
put-down b21 (1)
unstack b5 b20 (1)
put-down b5 (1)
unstack b20 b2 (1)
put-down b20 (1)
unstack b2 b14 (1)
stack b2 b21 (1)
unstack b14 b1 (1)
stack b14 b17 (1)
pick-up b15 (1)
stack b15 b2 (1)
pick-up b19 (1)
stack b19 b20 (1)
unstack b1 b8 (1)
put-down b1 (1)
unstack b8 b3 (1)
stack b8 b19 (1)
unstack b3 b18 (1)
put-down b3 (1)
pick-up b5 (1)
stack b5 b3 (1)
pick-up b1 (1)
stack b1 b8 (1)
pick-up b18 (1)
stack b18 b11 (1)
unstack b9 b10 (1)
put-down b9 (1)
pick-up b10 (1)
stack b10 b14 (1)
pick-up b9 (1)
stack b9 b10 (1)
unstack b18 b11 (1)
put-down b18 (1)
unstack b11 b4 (1)
put-down b11 (1)
pick-up b4 (1)
stack b4 b15 (1)
pick-up b11 (1)
stack b11 b4 (1)
pick-up b18 (1)
stack b18 b11 (1)
unstack b12 b7 (1)
put-down b12 (1)
unstack b7 b6 (1)
put-down b7 (1)
pick-up b6 (1)
stack b6 b1 (1)
pick-up b7 (1)
stack b7 b6 (1)
pick-up b12 (1)
stack b12 b7 (1)
unstack b18 b11 (1)
put-down b18 (1)
unstack b11 b4 (1)
put-down b11 (1)
unstack b4 b15 (1)
put-down b4 (1)
pick-up b11 (1)
stack b11 b4 (1)
pick-up b18 (1)
stack b18 b11 (1)
unstack b15 b2 (1)
put-down b15 (1)
unstack b2 b21 (1)
put-down b2 (1)
pick-up b15 (1)
stack b15 b2 (1)
pick-up b21 (1)
stack b21 b5 (1)
unstack b15 b2 (1)
put-down b15 (1)
pick-up b2 (1)
stack b2 b21 (1)
pick-up b15 (1)
stack b15 b2 (1)
unstack b18 b11 (1)
put-down b18 (1)
unstack b11 b4 (1)
put-down b11 (1)
pick-up b18 (1)
stack b18 b11 (1)
pick-up b4 (1)
stack b4 b15 (1)
unstack b18 b11 (1)
put-down b18 (1)
pick-up b11 (1)
stack b11 b4 (1)
pick-up b18 (1)
stack b18 b11 (1)
unstack b12 b7 (1)
put-down b12 (1)
unstack b7 b6 (1)
put-down b7 (1)
unstack b6 b1 (1)
put-down b6 (1)
pick-up b7 (1)
stack b7 b6 (1)
pick-up b12 (1)
stack b12 b7 (1)
unstack b1 b8 (1)
put-down b1 (1)
unstack b8 b19 (1)
put-down b8 (1)
pick-up b1 (1)
stack b1 b8 (1)
unstack b19 b20 (1)
put-down b19 (1)
pick-up b20 (1)
stack b20 b18 (1)
pick-up b19 (1)
stack b19 b20 (1)
unstack b1 b8 (1)
put-down b1 (1)
pick-up b8 (1)
stack b8 b19 (1)
pick-up b1 (1)
stack b1 b8 (1)
unstack b12 b7 (1)
put-down b12 (1)
unstack b7 b6 (1)
put-down b7 (1)
pick-up b12 (1)
stack b12 b7 (1)
pick-up b6 (1)
stack b6 b1 (1)
unstack b12 b7 (1)
put-down b12 (1)
pick-up b7 (1)
stack b7 b6 (1)
pick-up b12 (1)
stack b12 b7 (1)
[t=0.0334792s, 26380 KB] Plan length: 158 step(s).
[t=0.0334792s, 26380 KB] Plan cost: 158
[t=0.0334792s, 26380 KB] Expanded 723 state(s).
[t=0.0334792s, 26380 KB] Reopened 0 state(s).
[t=0.0334792s, 26380 KB] Evaluated 724 state(s).
[t=0.0334792s, 26380 KB] Evaluations: 1448
[t=0.0334792s, 26380 KB] Generated 6019 state(s).
[t=0.0334792s, 26380 KB] Dead ends: 0 state(s).
[t=0.0334792s, 26380 KB] Number of registered states: 724
[t=0.0334792s, 26380 KB] Int hash set load factor: 724/1024 = 0.707031
[t=0.0334792s, 26380 KB] Int hash set resizes: 10
[t=0.0334792s, 26380 KB] Search time: 0.0179497s
[t=0.0334792s, 26380 KB] Total time: 0.0334792s
Solution found.
Peak memory: 26380 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.16s
