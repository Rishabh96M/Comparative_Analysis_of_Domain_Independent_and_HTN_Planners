INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_22/bws_problem_22_82.pddl --sas-file output.sas
Parsing...
Parsing: [0.010s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.010s wall-clock]
1608 relevant atoms
1078 auxiliary atoms
2686 final queue length
4668 total queue pushes
Completing instantiation... [0.020s CPU, 0.017s wall-clock]
Instantiating: [0.030s CPU, 0.029s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
23 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.007s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.025s wall-clock]
1430 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
44 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.011s wall-clock]
Reordering and filtering variables...
45 of 45 variables necessary.
23 of 45 mutex groups necessary.
968 of 968 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 45
Translator derived variables: 0
Translator facts: 552
Translator goal facts: 18
Translator mutex groups: 23
Translator total mutex groups size: 529
Translator operators: 968
Translator axioms: 0
Translator task size: 8338
Translator peak memory: 36972 KB
Writing output... [0.000s CPU, 0.005s wall-clock]
Done! [0.090s CPU, 0.088s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.2582e-05s, 24488 KB] reading input...
[t=0.00294713s, 25340 KB] done reading input!
[t=0.00401347s, 25736 KB] Initializing landmark count heuristic...
[t=0.00405692s, 25736 KB] Generating landmark graph...
[t=0.00412562s, 25736 KB] Building a landmark graph with reasonable orders.
[t=0.00418922s, 25736 KB] Initializing Exploration...
[t=0.00460954s, 26000 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.015449s, 26660 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0154968s, 26660 KB] Landmarks generation time: 0.0113717s
[t=0.0155115s, 26660 KB] Discovered 101 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0155281s, 26660 KB] 695 edges
[t=0.0155377s, 26660 KB] approx. reasonable orders
[t=0.0186617s, 26660 KB] approx. obedient reasonable orders
[t=0.0189203s, 26660 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0189374s, 26660 KB] Landmarks generation time: 0.0148788s
[t=0.0189491s, 26660 KB] Discovered 101 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0189605s, 26660 KB] 781 edges
[t=0.0189711s, 26660 KB] Landmark graph generation time: 0.0149218s
[t=0.0189805s, 26660 KB] Landmark graph contains 101 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.01899s, 26660 KB] Landmark graph contains 781 orderings.
[t=0.0194875s, 26660 KB] Simplifying 3828 unary operators... done! [2904 unary operators]
[t=0.0205301s, 26660 KB] time to simplify: 0.00111875s
[t=0.0206722s, 26660 KB] Initializing additive heuristic...
[t=0.0206888s, 26660 KB] Initializing FF heuristic...
[t=0.0207677s, 26660 KB] Building successor generator...done!
[t=0.0210129s, 26660 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0210224s, 26660 KB] time for successor generation creation: 0.000209478s
[t=0.0210378s, 26660 KB] Variables: 45
[t=0.0210476s, 26660 KB] FactPairs: 552
[t=0.0210564s, 26660 KB] Bytes per state: 20
[t=0.0212039s, 26660 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0212427s, 26660 KB] 45 initial landmarks, 18 goal landmarks
[t=0.0213074s, 26660 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0213174s, 26660 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0213263s, 26660 KB] g=0, 1 evaluated, 0 expanded
[t=0.0213404s, 26660 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0213496s, 26660 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0214511s, 26660 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0214621s, 26660 KB] g=2, 4 evaluated, 3 expanded
[t=0.0215762s, 26660 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0215853s, 26660 KB] g=4, 8 evaluated, 7 expanded
[t=0.0217458s, 26660 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0217555s, 26660 KB] g=6, 14 evaluated, 13 expanded
[t=0.0219236s, 26660 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0219362s, 26660 KB] g=8, 20 evaluated, 19 expanded
[t=0.0221415s, 26660 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0221526s, 26660 KB] g=10, 28 evaluated, 27 expanded
[t=0.0223357s, 26660 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0223464s, 26660 KB] g=11, 35 evaluated, 34 expanded
[t=0.0223828s, 26660 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.022392s, 26660 KB] g=12, 36 evaluated, 35 expanded
[t=0.0227146s, 26660 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0227244s, 26660 KB] g=14, 49 evaluated, 48 expanded
[t=0.0229202s, 26660 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0229292s, 26660 KB] g=15, 57 evaluated, 56 expanded
[t=0.0230111s, 26660 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0230198s, 26660 KB] g=16, 60 evaluated, 59 expanded
[t=0.0232667s, 26660 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0232938s, 26660 KB] g=17, 70 evaluated, 69 expanded
[t=0.0234631s, 26660 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0234724s, 26660 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0234807s, 26660 KB] g=18, 76 evaluated, 75 expanded
[t=0.023587s, 26660 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0235959s, 26660 KB] g=19, 80 evaluated, 79 expanded
[t=0.0237533s, 26660 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0237625s, 26660 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0237708s, 26660 KB] g=20, 86 evaluated, 85 expanded
[t=0.0238523s, 26660 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0238616s, 26660 KB] g=21, 89 evaluated, 88 expanded
[t=0.0241884s, 26660 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0241977s, 26660 KB] g=23, 102 evaluated, 101 expanded
[t=0.0244058s, 26660 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0244179s, 26660 KB] g=24, 108 evaluated, 107 expanded
[t=0.0246208s, 26660 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0246311s, 26660 KB] g=26, 116 evaluated, 115 expanded
[t=0.0247386s, 26660 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0247477s, 26660 KB] g=26, 120 evaluated, 119 expanded
[t=0.0250281s, 26660 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0250371s, 26660 KB] g=28, 131 evaluated, 130 expanded
[t=0.0255308s, 26660 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0255404s, 26660 KB] g=30, 151 evaluated, 150 expanded
[t=0.0263898s, 26660 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0264009s, 26660 KB] g=30, 186 evaluated, 185 expanded
[t=0.0264354s, 26660 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0264445s, 26660 KB] g=32, 187 evaluated, 186 expanded
[t=0.0267397s, 26660 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0267493s, 26660 KB] g=32, 199 evaluated, 198 expanded
[t=0.0270418s, 26660 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0270511s, 26660 KB] g=34, 211 evaluated, 210 expanded
[t=0.0270871s, 26660 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0270958s, 26660 KB] g=34, 212 evaluated, 211 expanded
[t=0.0273424s, 26660 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0273508s, 26660 KB] g=36, 222 evaluated, 221 expanded
[t=0.0274312s, 26660 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0274404s, 26660 KB] g=35, 225 evaluated, 224 expanded
[t=0.0288035s, 26660 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0288152s, 26660 KB] g=38, 278 evaluated, 277 expanded
[t=0.029075s, 26660 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0290847s, 26660 KB] g=42, 288 evaluated, 287 expanded
[t=0.0292893s, 26660 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0293s, 26660 KB] g=39, 296 evaluated, 295 expanded
[t=0.0293662s, 26660 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.029376s, 26660 KB] g=40, 298 evaluated, 297 expanded
[t=0.0299296s, 26660 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0299431s, 26660 KB] g=42, 320 evaluated, 319 expanded
[t=0.0303546s, 26660 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0303652s, 26660 KB] g=50, 336 evaluated, 335 expanded
[t=0.030599s, 26660 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0306107s, 26660 KB] g=52, 345 evaluated, 344 expanded
[t=0.0307987s, 26660 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0308147s, 26660 KB] g=44, 352 evaluated, 351 expanded
[t=0.030854s, 26660 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0308775s, 26660 KB] g=54, 353 evaluated, 352 expanded
[t=0.0314051s, 26660 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0314219s, 26660 KB] g=58, 374 evaluated, 373 expanded
[t=0.0315792s, 26660 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0315893s, 26660 KB] g=46, 380 evaluated, 379 expanded
[t=0.0317231s, 26660 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0317329s, 26660 KB] g=60, 385 evaluated, 384 expanded
[t=0.0320216s, 26660 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0320327s, 26660 KB] g=62, 397 evaluated, 396 expanded
[t=0.0322922s, 26660 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.032308s, 26660 KB] g=64, 406 evaluated, 405 expanded
[t=0.0326608s, 26660 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.032671s, 26660 KB] g=48, 420 evaluated, 419 expanded
[t=0.0334394s, 26660 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0334555s, 26660 KB] g=50, 453 evaluated, 452 expanded
[t=0.0340844s, 26660 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0341021s, 26660 KB] g=52, 481 evaluated, 480 expanded
[t=0.0345448s, 26660 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0345606s, 26660 KB] g=54, 501 evaluated, 500 expanded
[t=0.034907s, 26660 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0349197s, 26660 KB] g=72, 515 evaluated, 514 expanded
[t=0.0354406s, 26660 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0354653s, 26660 KB] g=56, 538 evaluated, 537 expanded
[t=0.0356482s, 26660 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.035669s, 26660 KB] g=76, 546 evaluated, 545 expanded
[t=0.035843s, 26660 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0358613s, 26660 KB] g=78, 554 evaluated, 553 expanded
[t=0.0362766s, 26660 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.036301s, 26660 KB] g=58, 572 evaluated, 571 expanded
[t=0.0367483s, 26660 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.036766s, 26660 KB] g=60, 594 evaluated, 593 expanded
[t=0.0371397s, 26660 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0371625s, 26660 KB] g=86, 612 evaluated, 611 expanded
[t=0.0372603s, 26660 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0372985s, 26660 KB] g=88, 616 evaluated, 615 expanded
[t=0.0373305s, 26660 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0373407s, 26660 KB] g=89, 617 evaluated, 616 expanded
[t=0.037429s, 26660 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0374385s, 26660 KB] g=93, 621 evaluated, 620 expanded
[t=0.0375379s, 26660 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0375496s, 26660 KB] g=95, 626 evaluated, 625 expanded
[t=0.037641s, 26660 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0376506s, 26660 KB] g=97, 631 evaluated, 630 expanded
[t=0.037812s, 26660 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0378217s, 26660 KB] g=98, 640 evaluated, 639 expanded
[t=0.0378469s, 26660 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0378666s, 26660 KB] g=99, 641 evaluated, 640 expanded
[t=0.0379592s, 26660 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0379699s, 26660 KB] g=102, 646 evaluated, 645 expanded
[t=0.0379932s, 26660 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.038002s, 26660 KB] g=103, 647 evaluated, 646 expanded
[t=0.0380614s, 26660 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0380703s, 26660 KB] g=104, 650 evaluated, 649 expanded
[t=0.0380931s, 26660 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0381031s, 26660 KB] g=105, 651 evaluated, 650 expanded
[t=0.038159s, 26660 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0381694s, 26660 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0381783s, 26660 KB] g=108, 654 evaluated, 653 expanded
[t=0.0381978s, 26660 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0382094s, 26660 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0382189s, 26660 KB] g=109, 655 evaluated, 654 expanded
[t=0.0382349s, 26660 KB] Solution found!
[t=0.038249s, 26660 KB] Actual search time: 0.0170044s
unstack b16 b13 (1)
put-down b16 (1)
unstack b13 b15 (1)
put-down b13 (1)
unstack b15 b10 (1)
put-down b15 (1)
unstack b5 b4 (1)
put-down b5 (1)
unstack b4 b2 (1)
put-down b4 (1)
unstack b2 b7 (1)
stack b2 b4 (1)
unstack b10 b11 (1)
put-down b10 (1)
unstack b7 b20 (1)
put-down b7 (1)
pick-up b13 (1)
stack b13 b10 (1)
pick-up b15 (1)
stack b15 b7 (1)
unstack b20 b18 (1)
put-down b20 (1)
unstack b18 b8 (1)
stack b18 b11 (1)
unstack b8 b22 (1)
put-down b8 (1)
pick-up b20 (1)
stack b20 b8 (1)
unstack b22 b14 (1)
stack b22 b20 (1)
unstack b14 b21 (1)
put-down b14 (1)
pick-up b16 (1)
stack b16 b21 (1)
pick-up b5 (1)
stack b5 b14 (1)
unstack b2 b4 (1)
put-down b2 (1)
pick-up b4 (1)
stack b4 b22 (1)
pick-up b2 (1)
stack b2 b4 (1)
unstack b16 b21 (1)
put-down b16 (1)
unstack b21 b3 (1)
put-down b21 (1)
pick-up b16 (1)
stack b16 b21 (1)
unstack b3 b12 (1)
stack b3 b18 (1)
unstack b12 b6 (1)
put-down b12 (1)
unstack b6 b19 (1)
stack b6 b15 (1)
unstack b19 b9 (1)
put-down b19 (1)
unstack b9 b17 (1)
stack b9 b5 (1)
unstack b17 b1 (1)
stack b17 b13 (1)
pick-up b1 (1)
stack b1 b16 (1)
pick-up b19 (1)
stack b19 b17 (1)
unstack b1 b16 (1)
put-down b1 (1)
unstack b16 b21 (1)
put-down b16 (1)
pick-up b1 (1)
stack b1 b16 (1)
pick-up b21 (1)
stack b21 b19 (1)
unstack b1 b16 (1)
put-down b1 (1)
pick-up b16 (1)
stack b16 b21 (1)
pick-up b1 (1)
stack b1 b16 (1)
unstack b3 b18 (1)
put-down b3 (1)
unstack b18 b11 (1)
put-down b18 (1)
pick-up b11 (1)
stack b11 b9 (1)
pick-up b18 (1)
stack b18 b11 (1)
pick-up b3 (1)
stack b3 b18 (1)
unstack b2 b4 (1)
put-down b2 (1)
unstack b4 b22 (1)
put-down b4 (1)
unstack b22 b20 (1)
put-down b22 (1)
unstack b20 b8 (1)
put-down b20 (1)
pick-up b8 (1)
stack b8 b12 (1)
pick-up b2 (1)
stack b2 b4 (1)
pick-up b20 (1)
stack b20 b8 (1)
pick-up b22 (1)
stack b22 b20 (1)
unstack b2 b4 (1)
put-down b2 (1)
pick-up b4 (1)
stack b4 b22 (1)
pick-up b2 (1)
stack b2 b4 (1)
[t=0.0382599s, 26660 KB] Plan length: 110 step(s).
[t=0.0382599s, 26660 KB] Plan cost: 110
[t=0.0382599s, 26660 KB] Expanded 655 state(s).
[t=0.0382599s, 26660 KB] Reopened 0 state(s).
[t=0.0382599s, 26660 KB] Evaluated 656 state(s).
[t=0.0382599s, 26660 KB] Evaluations: 1312
[t=0.0382599s, 26660 KB] Generated 6997 state(s).
[t=0.0382599s, 26660 KB] Dead ends: 0 state(s).
[t=0.0382599s, 26660 KB] Number of registered states: 656
[t=0.0382599s, 26660 KB] Int hash set load factor: 656/1024 = 0.640625
[t=0.0382599s, 26660 KB] Int hash set resizes: 10
[t=0.0382599s, 26660 KB] Search time: 0.0170566s
[t=0.0382599s, 26660 KB] Total time: 0.0382599s
Solution found.
Peak memory: 26660 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.16s
