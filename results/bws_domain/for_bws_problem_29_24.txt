INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_29/bws_problem_29_24.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.018s wall-clock]
2728 relevant atoms
1827 auxiliary atoms
4555 final queue length
7981 total queue pushes
Completing instantiation... [0.030s CPU, 0.029s wall-clock]
Instantiating: [0.050s CPU, 0.049s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.010s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
30 uncovered facts
Choosing groups: [0.000s CPU, 0.002s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.001s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.001s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.002s wall-clock]
Translating task: [0.050s CPU, 0.047s wall-clock]
2494 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
58 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.022s wall-clock]
Reordering and filtering variables...
59 of 59 variables necessary.
30 of 59 mutex groups necessary.
1682 of 1682 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.020s CPU, 0.017s wall-clock]
Translator variables: 59
Translator derived variables: 0
Translator facts: 930
Translator goal facts: 24
Translator mutex groups: 30
Translator total mutex groups size: 900
Translator operators: 1682
Translator axioms: 0
Translator task size: 14441
Translator peak memory: 40824 KB
Writing output... [0.020s CPU, 0.012s wall-clock]
Done! [0.170s CPU, 0.165s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=3.2544e-05s, 24488 KB] reading input...
[t=0.00559642s, 26220 KB] done reading input!
[t=0.00646605s, 26616 KB] Initializing landmark count heuristic...
[t=0.00650043s, 26616 KB] Generating landmark graph...
[t=0.00658777s, 26748 KB] Building a landmark graph with reasonable orders.
[t=0.0066712s, 26748 KB] Initializing Exploration...
[t=0.00754186s, 27200 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.034248s, 28124 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0343722s, 28124 KB] Landmarks generation time: 0.0277943s
[t=0.034396s, 28124 KB] Discovered 127 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0344142s, 28124 KB] 777 edges
[t=0.0344241s, 28124 KB] approx. reasonable orders
[t=0.0348144s, 28124 KB] approx. obedient reasonable orders
[t=0.0348744s, 28124 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0348836s, 28124 KB] Landmarks generation time: 0.0283809s
[t=0.0348937s, 28124 KB] Discovered 127 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0349022s, 28124 KB] 779 edges
[t=0.0349108s, 28124 KB] Landmark graph generation time: 0.0284176s
[t=0.0349195s, 28124 KB] Landmark graph contains 127 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0349274s, 28124 KB] Landmark graph contains 779 orderings.
[t=0.0355584s, 28148 KB] Simplifying 6670 unary operators... done! [5046 unary operators]
[t=0.0372242s, 28148 KB] time to simplify: 0.00177849s
[t=0.0374918s, 28148 KB] Initializing additive heuristic...
[t=0.037522s, 28148 KB] Initializing FF heuristic...
[t=0.0375991s, 28148 KB] Building successor generator...done!
[t=0.0381509s, 28148 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0381681s, 28148 KB] time for successor generation creation: 0.000494543s
[t=0.0381887s, 28148 KB] Variables: 59
[t=0.0382026s, 28148 KB] FactPairs: 930
[t=0.038228s, 28148 KB] Bytes per state: 24
[t=0.0383544s, 28148 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0384142s, 28148 KB] 58 initial landmarks, 24 goal landmarks
[t=0.0385372s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 69
[t=0.0385542s, 28148 KB] New best heuristic value for ff(transform = adapt_costs(one)): 50
[t=0.0385693s, 28148 KB] g=0, 1 evaluated, 0 expanded
[t=0.0385917s, 28148 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 69
[t=0.0386065s, 28148 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 50
[t=0.0389627s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 68
[t=0.0389858s, 28148 KB] New best heuristic value for ff(transform = adapt_costs(one)): 49
[t=0.039002s, 28148 KB] g=2, 6 evaluated, 5 expanded
[t=0.0393367s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 67
[t=0.0393608s, 28148 KB] g=4, 11 evaluated, 10 expanded
[t=0.0399686s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 66
[t=0.0399902s, 28148 KB] g=5, 20 evaluated, 19 expanded
[t=0.0406491s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 65
[t=0.0406781s, 28148 KB] g=8, 30 evaluated, 29 expanded
[t=0.0413508s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 64
[t=0.0413771s, 28148 KB] g=10, 40 evaluated, 39 expanded
[t=0.0418939s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 63
[t=0.0419211s, 28148 KB] g=12, 47 evaluated, 46 expanded
[t=0.0426944s, 28148 KB] New best heuristic value for ff(transform = adapt_costs(one)): 48
[t=0.0427242s, 28148 KB] g=6, 58 evaluated, 57 expanded
[t=0.0428319s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 61
[t=0.0428612s, 28148 KB] g=14, 59 evaluated, 58 expanded
[t=0.0436201s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.0436449s, 28148 KB] New best heuristic value for ff(transform = adapt_costs(one)): 47
[t=0.043662s, 28148 KB] g=16, 70 evaluated, 69 expanded
[t=0.044224s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 57
[t=0.0442749s, 28148 KB] New best heuristic value for ff(transform = adapt_costs(one)): 46
[t=0.044293s, 28148 KB] g=18, 78 evaluated, 77 expanded
[t=0.0450644s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.045092s, 28148 KB] g=21, 89 evaluated, 88 expanded
[t=0.045921s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0459537s, 28148 KB] g=24, 101 evaluated, 100 expanded
[t=0.046912s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0469513s, 28148 KB] g=26, 114 evaluated, 113 expanded
[t=0.0476792s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0477065s, 28148 KB] New best heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0477243s, 28148 KB] g=28, 124 evaluated, 123 expanded
[t=0.0494222s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0495033s, 28148 KB] g=31, 149 evaluated, 148 expanded
[t=0.0496163s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0496267s, 28148 KB] g=32, 151 evaluated, 150 expanded
[t=0.0500649s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0500758s, 28148 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0500844s, 28148 KB] g=34, 161 evaluated, 160 expanded
[t=0.0505645s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.050575s, 28148 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0505836s, 28148 KB] g=36, 172 evaluated, 171 expanded
[t=0.0509045s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0509159s, 28148 KB] g=37, 180 evaluated, 179 expanded
[t=0.0511209s, 28148 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0511359s, 28148 KB] g=38, 184 evaluated, 183 expanded
[t=0.0517698s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0517837s, 28148 KB] g=39, 200 evaluated, 199 expanded
[t=0.0519176s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.051927s, 28148 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0519359s, 28148 KB] g=40, 203 evaluated, 202 expanded
[t=0.0522748s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0522868s, 28148 KB] g=41, 211 evaluated, 210 expanded
[t=0.0524206s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0524302s, 28148 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0524385s, 28148 KB] g=42, 214 evaluated, 213 expanded
[t=0.0526865s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0526967s, 28148 KB] g=43, 220 evaluated, 219 expanded
[t=0.0532169s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0532465s, 28148 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0532808s, 28148 KB] g=46, 229 evaluated, 228 expanded
[t=0.0538438s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0538737s, 28148 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0538911s, 28148 KB] g=48, 237 evaluated, 236 expanded
[t=0.0545013s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.054526s, 28148 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0545433s, 28148 KB] g=50, 246 evaluated, 245 expanded
[t=0.0551605s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0551913s, 28148 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.055208s, 28148 KB] g=52, 255 evaluated, 254 expanded
[t=0.0557248s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0557539s, 28148 KB] g=52, 262 evaluated, 261 expanded
[t=0.0563672s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0563967s, 28148 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0564142s, 28148 KB] g=54, 270 evaluated, 269 expanded
[t=0.0570565s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0570887s, 28148 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0571075s, 28148 KB] g=56, 279 evaluated, 278 expanded
[t=0.0576138s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0576381s, 28148 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0576555s, 28148 KB] g=58, 286 evaluated, 285 expanded
[t=0.0584837s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0585055s, 28148 KB] g=62, 303 evaluated, 302 expanded
[t=0.0588318s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0588423s, 28148 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0588516s, 28148 KB] g=64, 311 evaluated, 310 expanded
[t=0.0591388s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0591506s, 28148 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0591603s, 28148 KB] g=66, 318 evaluated, 317 expanded
[t=0.0594533s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0594755s, 28148 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0594924s, 28148 KB] g=68, 324 evaluated, 323 expanded
[t=0.0599093s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0599367s, 28148 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.059953s, 28148 KB] g=70, 330 evaluated, 329 expanded
[t=0.0609594s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0609903s, 28148 KB] g=74, 345 evaluated, 344 expanded
[t=0.0613224s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0613409s, 28148 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0613554s, 28148 KB] g=76, 350 evaluated, 349 expanded
[t=0.0621275s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0621515s, 28148 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.062168s, 28148 KB] g=80, 361 evaluated, 360 expanded
[t=0.0625327s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0625551s, 28148 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0625712s, 28148 KB] g=82, 366 evaluated, 365 expanded
[t=0.0642225s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0642795s, 28148 KB] g=88, 390 evaluated, 389 expanded
[t=0.0646314s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0646702s, 28148 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0646875s, 28148 KB] g=90, 395 evaluated, 394 expanded
[t=0.0650179s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0650427s, 28148 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.065059s, 28148 KB] g=92, 399 evaluated, 398 expanded
[t=0.0705553s, 28148 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0705879s, 28148 KB] g=106, 507 evaluated, 506 expanded
[t=0.0707421s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.070752s, 28148 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0707603s, 28148 KB] g=108, 511 evaluated, 510 expanded
[t=0.0711164s, 28148 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0711284s, 28148 KB] g=112, 520 evaluated, 519 expanded
[t=0.0712387s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0712476s, 28148 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0712557s, 28148 KB] g=114, 523 evaluated, 522 expanded
[t=0.0744085s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0744222s, 28148 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0744314s, 28148 KB] g=144, 626 evaluated, 625 expanded
[t=0.0746762s, 28148 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0746856s, 28148 KB] g=148, 635 evaluated, 634 expanded
[t=0.0747727s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0747817s, 28148 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0747897s, 28148 KB] g=150, 638 evaluated, 637 expanded
[t=0.0751728s, 28148 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0751842s, 28148 KB] g=162, 655 evaluated, 654 expanded
[t=0.075267s, 28148 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0752758s, 28148 KB] g=166, 659 evaluated, 658 expanded
[t=0.0752966s, 28148 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0753055s, 28148 KB] g=167, 660 evaluated, 659 expanded
[t=0.0753222s, 28148 KB] Solution found!
[t=0.0753331s, 28148 KB] Actual search time: 0.0369087s
unstack b5 b11 (1)
put-down b5 (1)
unstack b15 b3 (1)
put-down b15 (1)
unstack b3 b7 (1)
put-down b3 (1)
unstack b11 b25 (1)
put-down b11 (1)
unstack b26 b14 (1)
put-down b26 (1)
unstack b14 b24 (1)
put-down b14 (1)
unstack b24 b17 (1)
stack b24 b19 (1)
unstack b17 b2 (1)
stack b17 b7 (1)
pick-up b11 (1)
stack b11 b14 (1)
unstack b2 b18 (1)
put-down b2 (1)
unstack b18 b20 (1)
put-down b18 (1)
unstack b20 b21 (1)
put-down b20 (1)
unstack b21 b1 (1)
stack b21 b15 (1)
pick-up b2 (1)
stack b2 b18 (1)
unstack b17 b7 (1)
put-down b17 (1)
unstack b7 b28 (1)
stack b7 b24 (1)
unstack b28 b23 (1)
stack b28 b25 (1)
unstack b23 b4 (1)
stack b23 b1 (1)
pick-up b17 (1)
stack b17 b7 (1)
pick-up b26 (1)
stack b26 b28 (1)
pick-up b3 (1)
stack b3 b23 (1)
unstack b4 b22 (1)
put-down b4 (1)
unstack b22 b12 (1)
stack b22 b11 (1)
unstack b12 b13 (1)
put-down b12 (1)
unstack b13 b6 (1)
put-down b13 (1)
unstack b6 b16 (1)
stack b6 b22 (1)
unstack b16 b10 (1)
stack b16 b13 (1)
pick-up b4 (1)
stack b4 b6 (1)
pick-up b20 (1)
stack b20 b16 (1)
unstack b10 b9 (1)
put-down b10 (1)
unstack b9 b29 (1)
put-down b9 (1)
pick-up b10 (1)
stack b10 b9 (1)
unstack b29 b8 (1)
stack b29 b17 (1)
unstack b8 b27 (1)
stack b8 b29 (1)
pick-up b27 (1)
stack b27 b26 (1)
unstack b2 b18 (1)
put-down b2 (1)
pick-up b18 (1)
stack b18 b8 (1)
pick-up b2 (1)
stack b2 b18 (1)
unstack b21 b15 (1)
put-down b21 (1)
pick-up b15 (1)
stack b15 b27 (1)
pick-up b21 (1)
stack b21 b15 (1)
unstack b3 b23 (1)
put-down b3 (1)
unstack b23 b1 (1)
put-down b23 (1)
pick-up b1 (1)
stack b1 b12 (1)
pick-up b23 (1)
stack b23 b1 (1)
pick-up b3 (1)
stack b3 b23 (1)
unstack b4 b6 (1)
put-down b4 (1)
unstack b6 b22 (1)
put-down b6 (1)
pick-up b4 (1)
stack b4 b6 (1)
unstack b22 b11 (1)
put-down b22 (1)
unstack b11 b14 (1)
put-down b11 (1)
pick-up b14 (1)
stack b14 b21 (1)
pick-up b11 (1)
stack b11 b14 (1)
pick-up b22 (1)
stack b22 b11 (1)
unstack b4 b6 (1)
put-down b4 (1)
pick-up b6 (1)
stack b6 b22 (1)
pick-up b4 (1)
stack b4 b6 (1)
unstack b2 b18 (1)
put-down b2 (1)
unstack b18 b8 (1)
put-down b18 (1)
pick-up b2 (1)
stack b2 b18 (1)
unstack b8 b29 (1)
put-down b8 (1)
unstack b29 b17 (1)
put-down b29 (1)
pick-up b8 (1)
stack b8 b29 (1)
unstack b2 b18 (1)
put-down b2 (1)
pick-up b18 (1)
stack b18 b8 (1)
pick-up b2 (1)
stack b2 b18 (1)
unstack b17 b7 (1)
put-down b17 (1)
unstack b7 b24 (1)
put-down b7 (1)
pick-up b17 (1)
stack b17 b7 (1)
unstack b24 b19 (1)
put-down b24 (1)
pick-up b19 (1)
stack b19 b20 (1)
pick-up b24 (1)
stack b24 b19 (1)
unstack b17 b7 (1)
put-down b17 (1)
pick-up b7 (1)
stack b7 b24 (1)
pick-up b17 (1)
stack b17 b7 (1)
unstack b2 b18 (1)
put-down b2 (1)
unstack b18 b8 (1)
put-down b18 (1)
pick-up b2 (1)
stack b2 b18 (1)
unstack b8 b29 (1)
put-down b8 (1)
pick-up b29 (1)
stack b29 b17 (1)
pick-up b8 (1)
stack b8 b29 (1)
unstack b2 b18 (1)
put-down b2 (1)
pick-up b18 (1)
stack b18 b8 (1)
pick-up b2 (1)
stack b2 b18 (1)
[t=0.0753426s, 28148 KB] Plan length: 168 step(s).
[t=0.0753426s, 28148 KB] Plan cost: 168
[t=0.0753426s, 28148 KB] Expanded 660 state(s).
[t=0.0753426s, 28148 KB] Reopened 0 state(s).
[t=0.0753426s, 28148 KB] Evaluated 661 state(s).
[t=0.0753426s, 28148 KB] Evaluations: 1322
[t=0.0753426s, 28148 KB] Generated 6662 state(s).
[t=0.0753426s, 28148 KB] Dead ends: 0 state(s).
[t=0.0753426s, 28148 KB] Number of registered states: 661
[t=0.0753426s, 28148 KB] Int hash set load factor: 661/1024 = 0.645508
[t=0.0753426s, 28148 KB] Int hash set resizes: 10
[t=0.0753426s, 28148 KB] Search time: 0.036989s
[t=0.0753426s, 28148 KB] Total time: 0.0753426s
Solution found.
Peak memory: 28148 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.29s
