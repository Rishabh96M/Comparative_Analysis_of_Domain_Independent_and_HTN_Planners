INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_30/bws_problem_30_85.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.018s wall-clock]
2912 relevant atoms
1950 auxiliary atoms
4862 final queue length
8525 total queue pushes
Completing instantiation... [0.030s CPU, 0.031s wall-clock]
Instantiating: [0.050s CPU, 0.051s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.002s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
31 uncovered facts
Choosing groups: [0.000s CPU, 0.002s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.001s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.002s wall-clock]
Translating task: [0.050s CPU, 0.052s wall-clock]
2670 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
60 propositions removed
Detecting unreachable propositions: [0.030s CPU, 0.024s wall-clock]
Reordering and filtering variables...
61 of 61 variables necessary.
31 of 61 mutex groups necessary.
1800 of 1800 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.011s wall-clock]
Translator variables: 61
Translator derived variables: 0
Translator facts: 992
Translator goal facts: 20
Translator mutex groups: 31
Translator total mutex groups size: 961
Translator operators: 1800
Translator axioms: 0
Translator task size: 15444
Translator peak memory: 41336 KB
Writing output... [0.010s CPU, 0.009s wall-clock]
Done! [0.160s CPU, 0.164s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=1.7725e-05s, 24488 KB] reading input...
[t=0.00543612s, 26364 KB] done reading input!
[t=0.00636583s, 26760 KB] Initializing landmark count heuristic...
[t=0.00639913s, 26760 KB] Generating landmark graph...
[t=0.00649297s, 26892 KB] Building a landmark graph with reasonable orders.
[t=0.00658407s, 27024 KB] Initializing Exploration...
[t=0.00713186s, 27316 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0321606s, 28516 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0322882s, 28516 KB] Landmarks generation time: 0.0258065s
[t=0.0323169s, 28516 KB] Discovered 126 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0323404s, 28516 KB] 1025 edges
[t=0.0323509s, 28516 KB] approx. reasonable orders
[t=0.0327753s, 28516 KB] approx. obedient reasonable orders
[t=0.0328435s, 28516 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0328526s, 28516 KB] Landmarks generation time: 0.0264507s
[t=0.0328626s, 28516 KB] Discovered 126 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0328706s, 28516 KB] 1029 edges
[t=0.0328795s, 28516 KB] Landmark graph generation time: 0.0264878s
[t=0.0328885s, 28516 KB] Landmark graph contains 126 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0328966s, 28516 KB] Landmark graph contains 1029 orderings.
[t=0.0337133s, 28544 KB] Simplifying 7140 unary operators... done! [5400 unary operators]
[t=0.0355467s, 28544 KB] time to simplify: 0.00185255s
[t=0.0356647s, 28544 KB] Initializing additive heuristic...
[t=0.035685s, 28544 KB] Initializing FF heuristic...
[t=0.0357401s, 28544 KB] Building successor generator...done!
[t=0.0360838s, 28728 KB] peak memory difference for successor generator creation: 184 KB
[t=0.0360934s, 28728 KB] time for successor generation creation: 0.00031546s
[t=0.0361074s, 28728 KB] Variables: 61
[t=0.0361155s, 28728 KB] FactPairs: 992
[t=0.0361234s, 28728 KB] Bytes per state: 24
[t=0.0362082s, 28728 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0362414s, 28728 KB] 61 initial landmarks, 20 goal landmarks
[t=0.0363163s, 28728 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 65
[t=0.0363257s, 28728 KB] New best heuristic value for ff(transform = adapt_costs(one)): 49
[t=0.0363342s, 28728 KB] g=0, 1 evaluated, 0 expanded
[t=0.0363471s, 28728 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 65
[t=0.0363557s, 28728 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 49
[t=0.0364988s, 28728 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 64
[t=0.036508s, 28728 KB] g=1, 4 evaluated, 3 expanded
[t=0.0366009s, 28728 KB] New best heuristic value for ff(transform = adapt_costs(one)): 48
[t=0.0366101s, 28728 KB] g=2, 6 evaluated, 5 expanded
[t=0.0368534s, 28728 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 63
[t=0.0368623s, 28728 KB] g=3, 12 evaluated, 11 expanded
[t=0.0369498s, 28728 KB] New best heuristic value for ff(transform = adapt_costs(one)): 47
[t=0.0369585s, 28728 KB] g=4, 14 evaluated, 13 expanded
[t=0.0371248s, 28728 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 62
[t=0.0371334s, 28728 KB] g=5, 18 evaluated, 17 expanded
[t=0.0374143s, 28728 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 61
[t=0.0374242s, 28728 KB] g=7, 25 evaluated, 24 expanded
[t=0.0375938s, 28728 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 60
[t=0.0376037s, 28728 KB] g=9, 29 evaluated, 28 expanded
[t=0.0380951s, 28728 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.0381198s, 28728 KB] New best heuristic value for ff(transform = adapt_costs(one)): 46
[t=0.038135s, 28728 KB] g=12, 40 evaluated, 39 expanded
[t=0.0384449s, 28728 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 58
[t=0.0384567s, 28728 KB] New best heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0384655s, 28728 KB] g=14, 47 evaluated, 46 expanded
[t=0.0387653s, 28728 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0387824s, 28728 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0387913s, 28728 KB] g=16, 54 evaluated, 53 expanded
[t=0.0393003s, 28728 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0393111s, 28728 KB] g=20, 66 evaluated, 65 expanded
[t=0.039632s, 28728 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0396476s, 28728 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0396572s, 28728 KB] g=22, 73 evaluated, 72 expanded
[t=0.0399136s, 28728 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0399237s, 28728 KB] g=24, 79 evaluated, 78 expanded
[t=0.0401862s, 28728 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0401995s, 28728 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0402081s, 28728 KB] g=26, 85 evaluated, 84 expanded
[t=0.0404911s, 28728 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0405071s, 28728 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0405158s, 28728 KB] g=28, 91 evaluated, 90 expanded
[t=0.0407368s, 28728 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0407475s, 28728 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0407558s, 28728 KB] g=30, 96 evaluated, 95 expanded
[t=0.0412255s, 28728 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0412389s, 28728 KB] g=32, 107 evaluated, 106 expanded
[t=0.0415437s, 28728 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0415555s, 28728 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0415638s, 28728 KB] g=34, 114 evaluated, 113 expanded
[t=0.0418986s, 28728 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0419143s, 28728 KB] g=36, 121 evaluated, 120 expanded
[t=0.042017s, 28728 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0420277s, 28728 KB] g=36, 123 evaluated, 122 expanded
[t=0.0424567s, 28728 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0424683s, 28728 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0424768s, 28728 KB] g=38, 132 evaluated, 131 expanded
[t=0.042783s, 28728 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0427929s, 28728 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0428012s, 28728 KB] g=40, 139 evaluated, 138 expanded
[t=0.0430214s, 28728 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0430308s, 28728 KB] g=42, 144 evaluated, 143 expanded
[t=0.04313s, 28728 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0431391s, 28728 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0431473s, 28728 KB] g=42, 146 evaluated, 145 expanded
[t=0.0433258s, 28728 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0433353s, 28728 KB] g=44, 150 evaluated, 149 expanded
[t=0.0435682s, 28728 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0435781s, 28728 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0435871s, 28728 KB] g=46, 155 evaluated, 154 expanded
[t=0.0438495s, 28728 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0438583s, 28728 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0438669s, 28728 KB] g=48, 161 evaluated, 160 expanded
[t=0.0441221s, 28728 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0441312s, 28728 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0441397s, 28728 KB] g=50, 167 evaluated, 166 expanded
[t=0.0443984s, 28728 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.044407s, 28728 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0444151s, 28728 KB] g=52, 173 evaluated, 172 expanded
[t=0.044607s, 28728 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0446224s, 28728 KB] g=53, 177 evaluated, 176 expanded
[t=0.0446958s, 28728 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0447109s, 28728 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0447195s, 28728 KB] g=54, 178 evaluated, 177 expanded
[t=0.0449828s, 28728 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0449923s, 28728 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0450014s, 28728 KB] g=56, 184 evaluated, 183 expanded
[t=0.0452142s, 28728 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0452231s, 28728 KB] g=57, 189 evaluated, 188 expanded
[t=0.0452761s, 28728 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0452847s, 28728 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0452926s, 28728 KB] g=58, 190 evaluated, 189 expanded
[t=0.0455146s, 28728 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0455244s, 28728 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0455327s, 28728 KB] g=60, 195 evaluated, 194 expanded
[t=0.0457425s, 28728 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0457515s, 28728 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0457594s, 28728 KB] g=62, 200 evaluated, 199 expanded
[t=0.0459707s, 28728 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0459801s, 28728 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0459889s, 28728 KB] g=64, 205 evaluated, 204 expanded
[t=0.0460806s, 28728 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0460897s, 28728 KB] g=65, 207 evaluated, 206 expanded
[t=0.0461426s, 28728 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0461514s, 28728 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0461596s, 28728 KB] g=66, 208 evaluated, 207 expanded
[t=0.0463831s, 28728 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0463986s, 28728 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0464073s, 28728 KB] g=68, 213 evaluated, 212 expanded
[t=0.0470199s, 28728 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0470295s, 28728 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0470384s, 28728 KB] g=72, 229 evaluated, 228 expanded
[t=0.0471993s, 28728 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0472083s, 28728 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0472164s, 28728 KB] g=74, 233 evaluated, 232 expanded
[t=0.0479961s, 28728 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0480057s, 28728 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0480138s, 28728 KB] g=82, 254 evaluated, 253 expanded
[t=0.0480963s, 28728 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0481049s, 28728 KB] g=82, 256 evaluated, 255 expanded
[t=0.0482369s, 28728 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0482458s, 28728 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0482542s, 28728 KB] g=84, 259 evaluated, 258 expanded
[t=0.0486315s, 28728 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0486409s, 28728 KB] g=94, 271 evaluated, 270 expanded
[t=0.0487392s, 28728 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0487479s, 28728 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.048756s, 28728 KB] g=96, 274 evaluated, 273 expanded
[t=0.0488598s, 28728 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0488684s, 28728 KB] g=100, 278 evaluated, 277 expanded
[t=0.0488913s, 28728 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0488998s, 28728 KB] g=101, 279 evaluated, 278 expanded
[t=0.0489177s, 28728 KB] Solution found!
[t=0.0489276s, 28728 KB] Actual search time: 0.0126827s
unstack b2 b13 (1)
put-down b2 (1)
unstack b13 b9 (1)
put-down b13 (1)
unstack b29 b1 (1)
put-down b29 (1)
unstack b1 b4 (1)
put-down b1 (1)
unstack b30 b22 (1)
put-down b30 (1)
unstack b4 b17 (1)
put-down b4 (1)
unstack b17 b12 (1)
put-down b17 (1)
pick-up b29 (1)
stack b29 b17 (1)
unstack b12 b10 (1)
put-down b12 (1)
unstack b10 b3 (1)
put-down b10 (1)
pick-up b12 (1)
stack b12 b10 (1)
unstack b3 b24 (1)
put-down b3 (1)
unstack b24 b7 (1)
stack b24 b9 (1)
pick-up b22 (1)
stack b22 b24 (1)
unstack b7 b28 (1)
put-down b7 (1)
unstack b28 b23 (1)
put-down b28 (1)
unstack b23 b20 (1)
stack b23 b13 (1)
unstack b20 b14 (1)
stack b20 b3 (1)
unstack b14 b26 (1)
put-down b14 (1)
pick-up b1 (1)
stack b1 b20 (1)
pick-up b30 (1)
stack b30 b7 (1)
unstack b26 b21 (1)
put-down b26 (1)
unstack b21 b11 (1)
put-down b21 (1)
unstack b11 b25 (1)
put-down b11 (1)
unstack b25 b19 (1)
stack b25 b29 (1)
unstack b19 b27 (1)
stack b19 b12 (1)
unstack b27 b15 (1)
stack b27 b25 (1)
unstack b15 b8 (1)
stack b15 b4 (1)
unstack b8 b6 (1)
stack b8 b22 (1)
pick-up b26 (1)
stack b26 b11 (1)
unstack b6 b18 (1)
stack b6 b15 (1)
unstack b18 b16 (1)
put-down b18 (1)
unstack b16 b5 (1)
stack b16 b23 (1)
pick-up b5 (1)
stack b5 b19 (1)
unstack b30 b7 (1)
put-down b30 (1)
pick-up b7 (1)
stack b7 b18 (1)
pick-up b30 (1)
stack b30 b7 (1)
unstack b1 b20 (1)
put-down b1 (1)
unstack b20 b3 (1)
put-down b20 (1)
pick-up b3 (1)
stack b3 b26 (1)
pick-up b20 (1)
stack b20 b3 (1)
pick-up b1 (1)
stack b1 b20 (1)
unstack b8 b22 (1)
put-down b8 (1)
unstack b22 b24 (1)
put-down b22 (1)
pick-up b8 (1)
stack b8 b22 (1)
unstack b24 b9 (1)
put-down b24 (1)
pick-up b9 (1)
stack b9 b6 (1)
pick-up b24 (1)
stack b24 b9 (1)
unstack b8 b22 (1)
put-down b8 (1)
pick-up b22 (1)
stack b22 b24 (1)
pick-up b8 (1)
stack b8 b22 (1)
[t=0.0489366s, 28728 KB] Plan length: 102 step(s).
[t=0.0489366s, 28728 KB] Plan cost: 102
[t=0.0489366s, 28728 KB] Expanded 279 state(s).
[t=0.0489366s, 28728 KB] Reopened 0 state(s).
[t=0.0489366s, 28728 KB] Evaluated 280 state(s).
[t=0.0489366s, 28728 KB] Evaluations: 560
[t=0.0489366s, 28728 KB] Generated 3249 state(s).
[t=0.0489366s, 28728 KB] Dead ends: 0 state(s).
[t=0.0489366s, 28728 KB] Number of registered states: 280
[t=0.0489366s, 28728 KB] Int hash set load factor: 280/512 = 0.546875
[t=0.0489366s, 28728 KB] Int hash set resizes: 9
[t=0.0489366s, 28728 KB] Search time: 0.0127289s
[t=0.0489366s, 28728 KB] Total time: 0.0489366s
Solution found.
Peak memory: 28728 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.27s
