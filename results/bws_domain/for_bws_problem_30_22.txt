INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_30/bws_problem_30_22.pddl --sas-file output.sas
Parsing...
Parsing: [0.010s CPU, 0.003s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.019s wall-clock]
2912 relevant atoms
1950 auxiliary atoms
4862 final queue length
8526 total queue pushes
Completing instantiation... [0.030s CPU, 0.032s wall-clock]
Instantiating: [0.050s CPU, 0.053s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.002s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
31 uncovered facts
Choosing groups: [0.000s CPU, 0.002s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.001s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.002s wall-clock]
Translating task: [0.060s CPU, 0.057s wall-clock]
2670 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
60 propositions removed
Detecting unreachable propositions: [0.030s CPU, 0.028s wall-clock]
Reordering and filtering variables...
61 of 61 variables necessary.
31 of 61 mutex groups necessary.
1800 of 1800 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.015s wall-clock]
Translator variables: 61
Translator derived variables: 0
Translator facts: 992
Translator goal facts: 26
Translator mutex groups: 31
Translator total mutex groups size: 961
Translator operators: 1800
Translator axioms: 0
Translator task size: 15450
Translator peak memory: 41336 KB
Writing output... [0.010s CPU, 0.014s wall-clock]
Done! [0.190s CPU, 0.187s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.5384e-05s, 24488 KB] reading input...
[t=0.00548149s, 26364 KB] done reading input!
[t=0.00653741s, 26760 KB] Initializing landmark count heuristic...
[t=0.00660473s, 26760 KB] Generating landmark graph...
[t=0.00672964s, 26892 KB] Building a landmark graph with reasonable orders.
[t=0.00684043s, 27024 KB] Initializing Exploration...
[t=0.00743116s, 27316 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0350681s, 28516 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0352203s, 28516 KB] Landmarks generation time: 0.0284971s
[t=0.0352453s, 28516 KB] Discovered 134 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0352642s, 28516 KB] 1066 edges
[t=0.0352753s, 28516 KB] approx. reasonable orders
[t=0.0360641s, 28516 KB] approx. obedient reasonable orders
[t=0.0361205s, 28516 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0361317s, 28516 KB] Landmarks generation time: 0.029523s
[t=0.0361423s, 28516 KB] Discovered 134 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0361516s, 28516 KB] 1072 edges
[t=0.0361604s, 28516 KB] Landmark graph generation time: 0.0295635s
[t=0.0361696s, 28516 KB] Landmark graph contains 134 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0361778s, 28516 KB] Landmark graph contains 1072 orderings.
[t=0.0368621s, 28544 KB] Simplifying 7140 unary operators... done! [5400 unary operators]
[t=0.0386591s, 28544 KB] time to simplify: 0.00183136s
[t=0.0388043s, 28544 KB] Initializing additive heuristic...
[t=0.0388281s, 28544 KB] Initializing FF heuristic...
[t=0.0389277s, 28544 KB] Building successor generator...done!
[t=0.0393048s, 28544 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0393139s, 28544 KB] time for successor generation creation: 0.000344289s
[t=0.0393323s, 28544 KB] Variables: 61
[t=0.0393406s, 28544 KB] FactPairs: 992
[t=0.0393489s, 28544 KB] Bytes per state: 24
[t=0.0395062s, 28544 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0395518s, 28544 KB] 60 initial landmarks, 26 goal landmarks
[t=0.0397662s, 28544 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 74
[t=0.039782s, 28544 KB] New best heuristic value for ff(transform = adapt_costs(one)): 53
[t=0.0397913s, 28544 KB] g=0, 1 evaluated, 0 expanded
[t=0.0398113s, 28544 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 74
[t=0.0398211s, 28544 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 53
[t=0.040068s, 28544 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 73
[t=0.040082s, 28544 KB] New best heuristic value for ff(transform = adapt_costs(one)): 52
[t=0.040092s, 28544 KB] g=2, 6 evaluated, 5 expanded
[t=0.0403107s, 28544 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 72
[t=0.0403246s, 28544 KB] g=4, 11 evaluated, 10 expanded
[t=0.040585s, 28544 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 71
[t=0.040597s, 28544 KB] g=5, 17 evaluated, 16 expanded
[t=0.0410527s, 28544 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 70
[t=0.0410657s, 28544 KB] g=8, 27 evaluated, 26 expanded
[t=0.0416882s, 28544 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 69
[t=0.0417038s, 28544 KB] g=10, 41 evaluated, 40 expanded
[t=0.0422544s, 28544 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 68
[t=0.0422655s, 28544 KB] g=12, 54 evaluated, 53 expanded
[t=0.0428247s, 28544 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 67
[t=0.0428365s, 28544 KB] g=14, 67 evaluated, 66 expanded
[t=0.0434282s, 28544 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 65
[t=0.0434391s, 28544 KB] New best heuristic value for ff(transform = adapt_costs(one)): 51
[t=0.0434477s, 28544 KB] g=16, 81 evaluated, 80 expanded
[t=0.044172s, 28544 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 64
[t=0.0441878s, 28544 KB] g=19, 98 evaluated, 97 expanded
[t=0.0446508s, 28544 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 63
[t=0.0446637s, 28544 KB] g=21, 108 evaluated, 107 expanded
[t=0.0447621s, 28544 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 61
[t=0.0447715s, 28544 KB] g=22, 110 evaluated, 109 expanded
[t=0.0455328s, 28544 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 60
[t=0.0455438s, 28544 KB] g=24, 128 evaluated, 127 expanded
[t=0.0460188s, 28544 KB] New best heuristic value for ff(transform = adapt_costs(one)): 50
[t=0.0460314s, 28544 KB] g=24, 139 evaluated, 138 expanded
[t=0.0462081s, 28544 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.0462311s, 28544 KB] g=26, 143 evaluated, 142 expanded
[t=0.0469697s, 28544 KB] New best heuristic value for ff(transform = adapt_costs(one)): 49
[t=0.046983s, 28544 KB] g=26, 160 evaluated, 159 expanded
[t=0.0480512s, 28544 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 58
[t=0.0480615s, 28544 KB] g=28, 186 evaluated, 185 expanded
[t=0.0484414s, 28544 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 57
[t=0.0484519s, 28544 KB] g=28, 195 evaluated, 194 expanded
[t=0.0488674s, 28544 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0488787s, 28544 KB] g=30, 205 evaluated, 204 expanded
[t=0.0490503s, 28544 KB] New best heuristic value for ff(transform = adapt_costs(one)): 48
[t=0.0490607s, 28544 KB] g=30, 209 evaluated, 208 expanded
[t=0.0496662s, 28544 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0496801s, 28544 KB] g=32, 224 evaluated, 223 expanded
[t=0.0502034s, 28544 KB] New best heuristic value for ff(transform = adapt_costs(one)): 47
[t=0.0502227s, 28544 KB] g=34, 236 evaluated, 235 expanded
[t=0.0502812s, 28544 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0502917s, 28544 KB] g=34, 237 evaluated, 236 expanded
[t=0.051183s, 28544 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0511961s, 28544 KB] New best heuristic value for ff(transform = adapt_costs(one)): 46
[t=0.0512042s, 28544 KB] g=36, 257 evaluated, 256 expanded
[t=0.0513487s, 28544 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.051358s, 28544 KB] g=37, 260 evaluated, 259 expanded
[t=0.0520642s, 28544 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0520763s, 28544 KB] New best heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0520849s, 28544 KB] g=38, 276 evaluated, 275 expanded
[t=0.0521843s, 28544 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0521936s, 28544 KB] g=39, 278 evaluated, 277 expanded
[t=0.0527859s, 28544 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0527961s, 28544 KB] New best heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.052805s, 28544 KB] g=40, 292 evaluated, 291 expanded
[t=0.0529s, 28544 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0529184s, 28544 KB] g=41, 294 evaluated, 293 expanded
[t=0.0535821s, 28544 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0535926s, 28544 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.053601s, 28544 KB] g=42, 310 evaluated, 309 expanded
[t=0.0537451s, 28544 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.053755s, 28544 KB] g=43, 313 evaluated, 312 expanded
[t=0.0557557s, 28544 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0557687s, 28544 KB] g=48, 360 evaluated, 359 expanded
[t=0.0562573s, 28544 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0562682s, 28544 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0562767s, 28544 KB] g=50, 371 evaluated, 370 expanded
[t=0.0567204s, 28544 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0567315s, 28544 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.056742s, 28544 KB] g=52, 381 evaluated, 380 expanded
[t=0.0571818s, 28544 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0571933s, 28544 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0572017s, 28544 KB] g=54, 391 evaluated, 390 expanded
[t=0.0576434s, 28544 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0576543s, 28544 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0576628s, 28544 KB] g=56, 401 evaluated, 400 expanded
[t=0.0580945s, 28544 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0581206s, 28544 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0581345s, 28544 KB] g=58, 410 evaluated, 409 expanded
[t=0.0585533s, 28544 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0585671s, 28544 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.058576s, 28544 KB] g=60, 419 evaluated, 418 expanded
[t=0.0589894s, 28544 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0589995s, 28544 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0590079s, 28544 KB] g=62, 428 evaluated, 427 expanded
[t=0.0593625s, 28544 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0593735s, 28544 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0593824s, 28544 KB] g=64, 436 evaluated, 435 expanded
[t=0.0594388s, 28544 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0594481s, 28544 KB] g=65, 437 evaluated, 436 expanded
[t=0.0595027s, 28544 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0595117s, 28544 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0595198s, 28544 KB] g=66, 438 evaluated, 437 expanded
[t=0.0595746s, 28544 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0595833s, 28544 KB] g=67, 439 evaluated, 438 expanded
[t=0.0596375s, 28544 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0596578s, 28544 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0596673s, 28544 KB] g=68, 440 evaluated, 439 expanded
[t=0.0597732s, 28544 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.059783s, 28544 KB] g=69, 442 evaluated, 441 expanded
[t=0.0598384s, 28544 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0598479s, 28544 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0598562s, 28544 KB] g=70, 443 evaluated, 442 expanded
[t=0.0608654s, 28544 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0608887s, 28544 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.060897s, 28544 KB] g=74, 467 evaluated, 466 expanded
[t=0.0611947s, 28544 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0612036s, 28544 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0612123s, 28544 KB] g=76, 474 evaluated, 473 expanded
[t=0.0624494s, 28544 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0624596s, 28544 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0624683s, 28544 KB] g=80, 504 evaluated, 503 expanded
[t=0.0627179s, 28544 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0627272s, 28544 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0627358s, 28544 KB] g=82, 510 evaluated, 509 expanded
[t=0.0654344s, 28544 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0654507s, 28544 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0654604s, 28544 KB] g=90, 577 evaluated, 576 expanded
[t=0.0656373s, 28544 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0656467s, 28544 KB] g=90, 581 evaluated, 580 expanded
[t=0.0658627s, 28544 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0658721s, 28544 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0658804s, 28544 KB] g=92, 586 evaluated, 585 expanded
[t=0.0695015s, 28544 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0695201s, 28544 KB] g=104, 676 evaluated, 675 expanded
[t=0.070114s, 28544 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0701312s, 28544 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0701404s, 28544 KB] g=110, 690 evaluated, 689 expanded
[t=0.0740492s, 28544 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0740785s, 28544 KB] g=124, 784 evaluated, 783 expanded
[t=0.074251s, 28544 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0742619s, 28544 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0742715s, 28544 KB] g=126, 788 evaluated, 787 expanded
[t=0.0746333s, 28544 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.074645s, 28544 KB] g=130, 797 evaluated, 796 expanded
[t=0.0748049s, 28544 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0748194s, 28544 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0748284s, 28544 KB] g=132, 800 evaluated, 799 expanded
[t=0.0826468s, 28544 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0826895s, 28544 KB] g=166, 1020 evaluated, 1019 expanded
[t=0.0829482s, 28544 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0829589s, 28544 KB] g=170, 1029 evaluated, 1028 expanded
[t=0.0830483s, 28544 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0830574s, 28544 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0830651s, 28544 KB] g=172, 1032 evaluated, 1031 expanded
[t=0.0834952s, 28544 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0835054s, 28544 KB] g=184, 1050 evaluated, 1049 expanded
[t=0.0835931s, 28544 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0836019s, 28544 KB] g=188, 1054 evaluated, 1053 expanded
[t=0.0836236s, 28544 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0836323s, 28544 KB] g=189, 1055 evaluated, 1054 expanded
[t=0.0836521s, 28544 KB] Solution found!
[t=0.0836658s, 28544 KB] Actual search time: 0.0441096s
unstack b5 b14 (1)
put-down b5 (1)
unstack b14 b7 (1)
put-down b14 (1)
unstack b7 b30 (1)
put-down b7 (1)
unstack b3 b11 (1)
put-down b3 (1)
unstack b30 b13 (1)
put-down b30 (1)
unstack b4 b28 (1)
put-down b4 (1)
unstack b8 b10 (1)
put-down b8 (1)
pick-up b28 (1)
stack b28 b8 (1)
unstack b11 b27 (1)
put-down b11 (1)
unstack b27 b23 (1)
put-down b27 (1)
unstack b23 b17 (1)
stack b23 b3 (1)
pick-up b11 (1)
stack b11 b27 (1)
unstack b17 b21 (1)
put-down b17 (1)
pick-up b13 (1)
stack b13 b17 (1)
unstack b21 b19 (1)
put-down b21 (1)
unstack b19 b29 (1)
put-down b19 (1)
unstack b29 b24 (1)
stack b29 b11 (1)
unstack b24 b18 (1)
stack b24 b13 (1)
pick-up b10 (1)
stack b10 b29 (1)
pick-up b14 (1)
stack b14 b24 (1)
pick-up b30 (1)
stack b30 b21 (1)
unstack b18 b26 (1)
put-down b18 (1)
unstack b26 b20 (1)
put-down b26 (1)
unstack b20 b25 (1)
put-down b20 (1)
unstack b25 b2 (1)
stack b25 b14 (1)
unstack b2 b6 (1)
stack b2 b10 (1)
pick-up b26 (1)
stack b26 b20 (1)
unstack b6 b16 (1)
stack b6 b28 (1)
unstack b16 b22 (1)
stack b16 b30 (1)
unstack b22 b9 (1)
stack b22 b4 (1)
pick-up b7 (1)
stack b7 b6 (1)
unstack b9 b1 (1)
stack b9 b19 (1)
unstack b1 b12 (1)
stack b1 b26 (1)
unstack b12 b15 (1)
stack b12 b5 (1)
pick-up b18 (1)
stack b18 b12 (1)
unstack b23 b3 (1)
put-down b23 (1)
pick-up b3 (1)
stack b3 b9 (1)
pick-up b23 (1)
stack b23 b3 (1)
unstack b22 b4 (1)
put-down b22 (1)
pick-up b4 (1)
stack b4 b15 (1)
pick-up b22 (1)
stack b22 b4 (1)
unstack b16 b30 (1)
put-down b16 (1)
unstack b30 b21 (1)
put-down b30 (1)
pick-up b21 (1)
stack b21 b22 (1)
pick-up b30 (1)
stack b30 b21 (1)
pick-up b16 (1)
stack b16 b30 (1)
unstack b7 b6 (1)
put-down b7 (1)
unstack b6 b28 (1)
put-down b6 (1)
pick-up b7 (1)
stack b7 b6 (1)
unstack b28 b8 (1)
put-down b28 (1)
pick-up b8 (1)
stack b8 b2 (1)
pick-up b28 (1)
stack b28 b8 (1)
unstack b7 b6 (1)
put-down b7 (1)
pick-up b6 (1)
stack b6 b28 (1)
pick-up b7 (1)
stack b7 b6 (1)
unstack b25 b14 (1)
put-down b25 (1)
unstack b14 b24 (1)
put-down b14 (1)
pick-up b25 (1)
stack b25 b14 (1)
unstack b24 b13 (1)
put-down b24 (1)
unstack b13 b17 (1)
put-down b13 (1)
pick-up b17 (1)
stack b17 b16 (1)
pick-up b13 (1)
stack b13 b17 (1)
pick-up b24 (1)
stack b24 b13 (1)
unstack b25 b14 (1)
put-down b25 (1)
pick-up b14 (1)
stack b14 b24 (1)
pick-up b25 (1)
stack b25 b14 (1)
unstack b7 b6 (1)
put-down b7 (1)
unstack b6 b28 (1)
put-down b6 (1)
pick-up b7 (1)
stack b7 b6 (1)
unstack b28 b8 (1)
put-down b28 (1)
unstack b8 b2 (1)
put-down b8 (1)
pick-up b28 (1)
stack b28 b8 (1)
unstack b7 b6 (1)
put-down b7 (1)
pick-up b6 (1)
stack b6 b28 (1)
pick-up b7 (1)
stack b7 b6 (1)
unstack b2 b10 (1)
put-down b2 (1)
unstack b10 b29 (1)
put-down b10 (1)
pick-up b2 (1)
stack b2 b10 (1)
unstack b29 b11 (1)
put-down b29 (1)
unstack b11 b27 (1)
put-down b11 (1)
pick-up b27 (1)
stack b27 b25 (1)
pick-up b11 (1)
stack b11 b27 (1)
pick-up b29 (1)
stack b29 b11 (1)
unstack b2 b10 (1)
put-down b2 (1)
pick-up b10 (1)
stack b10 b29 (1)
pick-up b2 (1)
stack b2 b10 (1)
unstack b7 b6 (1)
put-down b7 (1)
unstack b6 b28 (1)
put-down b6 (1)
pick-up b7 (1)
stack b7 b6 (1)
unstack b28 b8 (1)
put-down b28 (1)
pick-up b8 (1)
stack b8 b2 (1)
pick-up b28 (1)
stack b28 b8 (1)
unstack b7 b6 (1)
put-down b7 (1)
pick-up b6 (1)
stack b6 b28 (1)
pick-up b7 (1)
stack b7 b6 (1)
[t=0.0836758s, 28544 KB] Plan length: 190 step(s).
[t=0.0836758s, 28544 KB] Plan cost: 190
[t=0.0836758s, 28544 KB] Expanded 1055 state(s).
[t=0.0836758s, 28544 KB] Reopened 0 state(s).
[t=0.0836758s, 28544 KB] Evaluated 1056 state(s).
[t=0.0836758s, 28544 KB] Evaluations: 2112
[t=0.0836758s, 28544 KB] Generated 10515 state(s).
[t=0.0836758s, 28544 KB] Dead ends: 0 state(s).
[t=0.0836758s, 28544 KB] Number of registered states: 1056
[t=0.0836758s, 28544 KB] Int hash set load factor: 1056/2048 = 0.515625
[t=0.0836758s, 28544 KB] Int hash set resizes: 11
[t=0.0836758s, 28544 KB] Search time: 0.0441707s
[t=0.0836758s, 28544 KB] Total time: 0.0836758s
Solution found.
Peak memory: 28544 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.32s
