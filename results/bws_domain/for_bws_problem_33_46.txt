INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_33/bws_problem_33_46.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.022s wall-clock]
3500 relevant atoms
2343 auxiliary atoms
5843 final queue length
10271 total queue pushes
Completing instantiation... [0.050s CPU, 0.042s wall-clock]
Instantiating: [0.070s CPU, 0.066s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.002s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
34 uncovered facts
Choosing groups: [0.010s CPU, 0.002s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.010s CPU, 0.012s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.001s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.004s wall-clock]
Translating task: [0.060s CPU, 0.058s wall-clock]
3234 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
66 propositions removed
Detecting unreachable propositions: [0.030s CPU, 0.028s wall-clock]
Reordering and filtering variables...
67 of 67 variables necessary.
34 of 67 mutex groups necessary.
2178 of 2178 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.014s wall-clock]
Translator variables: 67
Translator derived variables: 0
Translator facts: 1190
Translator goal facts: 26
Translator mutex groups: 34
Translator total mutex groups size: 1156
Translator operators: 2178
Translator axioms: 0
Translator task size: 18675
Translator peak memory: 43532 KB
Writing output... [0.010s CPU, 0.011s wall-clock]
Done! [0.190s CPU, 0.195s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.5961e-05s, 24488 KB] reading input...
[t=0.00645023s, 26928 KB] done reading input!
[t=0.00746905s, 27324 KB] Initializing landmark count heuristic...
[t=0.00750712s, 27324 KB] Generating landmark graph...
[t=0.00762171s, 27456 KB] Building a landmark graph with reasonable orders.
[t=0.00773456s, 27588 KB] Initializing Exploration...
[t=0.00834818s, 28188 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0413733s, 29244 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0414783s, 29244 KB] Landmarks generation time: 0.033864s
[t=0.0415005s, 29244 KB] Discovered 146 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0415171s, 29244 KB] 858 edges
[t=0.0415273s, 29244 KB] approx. reasonable orders
[t=0.0507154s, 29244 KB] approx. obedient reasonable orders
[t=0.0513064s, 29244 KB] Removed 1 reasonable or obedient reasonable orders
[t=0.0513307s, 29244 KB] Landmarks generation time: 0.0438213s
[t=0.0513425s, 29244 KB] Discovered 146 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0513514s, 29244 KB] 968 edges
[t=0.05136s, 29244 KB] Landmark graph generation time: 0.04386s
[t=0.0513686s, 29244 KB] Landmark graph contains 146 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0513766s, 29244 KB] Landmark graph contains 968 orderings.
[t=0.0524611s, 29244 KB] Simplifying 8646 unary operators... done! [6534 unary operators]
[t=0.0547752s, 29244 KB] time to simplify: 0.00234031s
[t=0.0549366s, 29312 KB] Initializing additive heuristic...
[t=0.0549579s, 29312 KB] Initializing FF heuristic...
[t=0.0550136s, 29312 KB] Building successor generator...done!
[t=0.0553909s, 29312 KB] peak memory difference for successor generator creation: 0 KB
[t=0.055401s, 29312 KB] time for successor generation creation: 0.000348953s
[t=0.0554154s, 29312 KB] Variables: 67
[t=0.0554243s, 29312 KB] FactPairs: 1190
[t=0.0554328s, 29312 KB] Bytes per state: 32
[t=0.055521s, 29312 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.055554s, 29312 KB] 67 initial landmarks, 26 goal landmarks
[t=0.0556355s, 29312 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 79
[t=0.0556448s, 29312 KB] New best heuristic value for ff(transform = adapt_costs(one)): 59
[t=0.0556543s, 29312 KB] g=0, 1 evaluated, 0 expanded
[t=0.0556689s, 29312 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 79
[t=0.0556776s, 29312 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 59
[t=0.0558431s, 29312 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 78
[t=0.0558524s, 29312 KB] g=1, 4 evaluated, 3 expanded
[t=0.0562483s, 29312 KB] New best heuristic value for ff(transform = adapt_costs(one)): 58
[t=0.0562578s, 29312 KB] g=2, 12 evaluated, 11 expanded
[t=0.056422s, 29312 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 77
[t=0.0564377s, 29312 KB] g=3, 15 evaluated, 14 expanded
[t=0.0567579s, 29312 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 76
[t=0.0567683s, 29312 KB] g=5, 21 evaluated, 20 expanded
[t=0.0575157s, 29312 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 75
[t=0.0575254s, 29312 KB] g=8, 36 evaluated, 35 expanded
[t=0.05773s, 29312 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 74
[t=0.0577391s, 29312 KB] g=9, 40 evaluated, 39 expanded
[t=0.0583801s, 29312 KB] New best heuristic value for ff(transform = adapt_costs(one)): 57
[t=0.0583902s, 29312 KB] g=12, 53 evaluated, 52 expanded
[t=0.0585023s, 29312 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 73
[t=0.058511s, 29312 KB] g=12, 55 evaluated, 54 expanded
[t=0.0594602s, 29312 KB] New best heuristic value for ff(transform = adapt_costs(one)): 56
[t=0.0594885s, 29312 KB] g=14, 74 evaluated, 73 expanded
[t=0.0597626s, 29312 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 72
[t=0.0597735s, 29312 KB] g=14, 79 evaluated, 78 expanded
[t=0.0608552s, 29312 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 71
[t=0.0608771s, 29312 KB] g=16, 100 evaluated, 99 expanded
[t=0.0621343s, 29312 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 70
[t=0.0621645s, 29312 KB] g=18, 126 evaluated, 125 expanded
[t=0.0627116s, 29312 KB] New best heuristic value for ff(transform = adapt_costs(one)): 55
[t=0.0627305s, 29312 KB] g=18, 137 evaluated, 136 expanded
[t=0.0636612s, 29312 KB] New best heuristic value for ff(transform = adapt_costs(one)): 54
[t=0.0636883s, 29312 KB] g=20, 155 evaluated, 154 expanded
[t=0.0637523s, 29312 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 69
[t=0.0637625s, 29312 KB] g=20, 156 evaluated, 155 expanded
[t=0.0652514s, 29312 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 68
[t=0.0652659s, 29312 KB] g=22, 186 evaluated, 185 expanded
[t=0.0661821s, 29312 KB] New best heuristic value for ff(transform = adapt_costs(one)): 53
[t=0.0661985s, 29312 KB] g=24, 205 evaluated, 204 expanded
[t=0.0668772s, 29312 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 67
[t=0.0668876s, 29312 KB] g=24, 219 evaluated, 218 expanded
[t=0.0681596s, 29312 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 64
[t=0.0681707s, 29312 KB] g=26, 245 evaluated, 244 expanded
[t=0.0698794s, 29312 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 63
[t=0.0699049s, 29312 KB] g=28, 279 evaluated, 278 expanded
[t=0.0729347s, 29312 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 62
[t=0.0729566s, 29312 KB] g=30, 340 evaluated, 339 expanded
[t=0.074573s, 29312 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 60
[t=0.0745994s, 29312 KB] New best heuristic value for ff(transform = adapt_costs(one)): 52
[t=0.0746088s, 29312 KB] g=32, 372 evaluated, 371 expanded
[t=0.0754903s, 29312 KB] New best heuristic value for ff(transform = adapt_costs(one)): 51
[t=0.0755119s, 29312 KB] g=34, 389 evaluated, 388 expanded
[t=0.076148s, 29312 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 58
[t=0.0761764s, 29312 KB] New best heuristic value for ff(transform = adapt_costs(one)): 50
[t=0.0761856s, 29312 KB] g=34, 401 evaluated, 400 expanded
[t=0.0769724s, 29312 KB] New best heuristic value for ff(transform = adapt_costs(one)): 49
[t=0.0769856s, 29312 KB] g=36, 417 evaluated, 416 expanded
[t=0.0770512s, 29312 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0770622s, 29312 KB] New best heuristic value for ff(transform = adapt_costs(one)): 48
[t=0.0770706s, 29312 KB] g=36, 418 evaluated, 417 expanded
[t=0.0778077s, 29312 KB] New best heuristic value for ff(transform = adapt_costs(one)): 47
[t=0.0778238s, 29312 KB] g=38, 433 evaluated, 432 expanded
[t=0.0783801s, 29312 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0784003s, 29312 KB] New best heuristic value for ff(transform = adapt_costs(one)): 46
[t=0.0784095s, 29312 KB] g=38, 443 evaluated, 442 expanded
[t=0.0791349s, 29312 KB] New best heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0791477s, 29312 KB] g=40, 457 evaluated, 456 expanded
[t=0.0806218s, 29312 KB] New best heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.080675s, 29312 KB] g=42, 485 evaluated, 484 expanded
[t=0.0813442s, 29312 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0813644s, 29312 KB] g=44, 498 evaluated, 497 expanded
[t=0.0839065s, 29312 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0839291s, 29312 KB] g=48, 548 evaluated, 547 expanded
[t=0.084958s, 29312 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0849733s, 29312 KB] g=50, 567 evaluated, 566 expanded
[t=0.0858666s, 29312 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0858845s, 29312 KB] g=52, 584 evaluated, 583 expanded
[t=0.0871018s, 29312 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0871327s, 29312 KB] g=54, 608 evaluated, 607 expanded
[t=0.0879225s, 29312 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0879394s, 29312 KB] g=56, 623 evaluated, 622 expanded
[t=0.0891472s, 29312 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0891609s, 29312 KB] g=58, 647 evaluated, 646 expanded
[t=0.0903788s, 29312 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0903985s, 29312 KB] g=60, 671 evaluated, 670 expanded
[t=0.0916315s, 29312 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.09165s, 29312 KB] g=62, 695 evaluated, 694 expanded
[t=0.0928203s, 29312 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.092845s, 29312 KB] g=64, 719 evaluated, 718 expanded
[t=0.0936355s, 29312 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.09365s, 29312 KB] g=66, 734 evaluated, 733 expanded
[t=0.0942817s, 29312 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0942936s, 29312 KB] g=68, 747 evaluated, 746 expanded
[t=0.094842s, 29312 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.094877s, 29312 KB] g=70, 758 evaluated, 757 expanded
[t=0.0953894s, 29312 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0954054s, 29312 KB] g=72, 769 evaluated, 768 expanded
[t=0.0962018s, 29312 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0962157s, 29312 KB] g=74, 785 evaluated, 784 expanded
[t=0.0968361s, 29312 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0968476s, 29312 KB] g=76, 798 evaluated, 797 expanded
[t=0.102387s, 29312 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.10241s, 29312 KB] g=80, 909 evaluated, 908 expanded
[t=0.102911s, 29312 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.102923s, 29312 KB] g=82, 919 evaluated, 918 expanded
[t=0.108481s, 29312 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.108501s, 29312 KB] g=88, 1034 evaluated, 1033 expanded
[t=0.110279s, 29312 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.110294s, 29312 KB] g=92, 1070 evaluated, 1069 expanded
[t=0.110636s, 29312 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.110647s, 29312 KB] g=94, 1077 evaluated, 1076 expanded
[t=0.112949s, 29312 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.112965s, 29312 KB] g=100, 1125 evaluated, 1124 expanded
[t=0.114278s, 29312 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.114291s, 29312 KB] g=104, 1150 evaluated, 1149 expanded
[t=0.114769s, 29312 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.114783s, 29312 KB] g=106, 1158 evaluated, 1157 expanded
[t=0.129824s, 29312 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.129904s, 29312 KB] g=136, 1464 evaluated, 1463 expanded
[t=0.134538s, 29312 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.134558s, 29312 KB] g=122, 1564 evaluated, 1563 expanded
[t=0.137414s, 29312 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.137431s, 29312 KB] g=130, 1625 evaluated, 1624 expanded
[t=0.137681s, 29312 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.137692s, 29312 KB] g=132, 1630 evaluated, 1629 expanded
[t=0.140132s, 29312 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.140159s, 29312 KB] g=148, 1688 evaluated, 1687 expanded
[t=0.140724s, 29312 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.14074s, 29312 KB] g=156, 1703 evaluated, 1702 expanded
[t=0.141061s, 29312 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.141073s, 29312 KB] g=160, 1711 evaluated, 1710 expanded
[t=0.141148s, 29312 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.141159s, 29312 KB] g=161, 1713 evaluated, 1712 expanded
[t=0.141229s, 29312 KB] Solution found!
[t=0.141251s, 29312 KB] Actual search time: 0.0856961s
unstack b7 b29 (1)
put-down b7 (1)
unstack b29 b9 (1)
put-down b29 (1)
unstack b3 b13 (1)
put-down b3 (1)
unstack b28 b24 (1)
put-down b28 (1)
unstack b24 b19 (1)
put-down b24 (1)
unstack b19 b8 (1)
put-down b19 (1)
unstack b33 b15 (1)
put-down b33 (1)
unstack b15 b23 (1)
put-down b15 (1)
unstack b23 b32 (1)
put-down b23 (1)
unstack b6 b31 (1)
put-down b6 (1)
unstack b31 b20 (1)
put-down b31 (1)
unstack b8 b4 (1)
put-down b8 (1)
unstack b9 b18 (1)
stack b9 b7 (1)
unstack b18 b26 (1)
put-down b18 (1)
unstack b26 b1 (1)
put-down b26 (1)
pick-up b19 (1)
stack b19 b9 (1)
pick-up b18 (1)
stack b18 b19 (1)
pick-up b24 (1)
stack b24 b18 (1)
pick-up b28 (1)
stack b28 b26 (1)
unstack b1 b5 (1)
stack b1 b31 (1)
pick-up b15 (1)
stack b15 b30 (1)
pick-up b29 (1)
stack b29 b8 (1)
unstack b5 b17 (1)
put-down b5 (1)
unstack b17 b14 (1)
stack b17 b13 (1)
unstack b14 b16 (1)
stack b14 b1 (1)
unstack b16 b12 (1)
put-down b16 (1)
unstack b12 b27 (1)
stack b12 b20 (1)
unstack b27 b25 (1)
stack b27 b28 (1)
unstack b25 b22 (1)
put-down b25 (1)
unstack b22 b10 (1)
put-down b22 (1)
unstack b10 b11 (1)
put-down b10 (1)
unstack b11 b2 (1)
stack b11 b6 (1)
unstack b2 b21 (1)
stack b2 b33 (1)
pick-up b21 (1)
stack b21 b2 (1)
pick-up b3 (1)
stack b3 b25 (1)
pick-up b32 (1)
stack b32 b10 (1)
pick-up b4 (1)
stack b4 b22 (1)
pick-up b5 (1)
stack b5 b16 (1)
unstack b11 b6 (1)
put-down b11 (1)
pick-up b6 (1)
stack b6 b27 (1)
pick-up b11 (1)
stack b11 b6 (1)
unstack b12 b20 (1)
put-down b12 (1)
pick-up b20 (1)
stack b20 b21 (1)
pick-up b12 (1)
stack b12 b20 (1)
unstack b15 b30 (1)
put-down b15 (1)
pick-up b30 (1)
stack b30 b11 (1)
pick-up b15 (1)
stack b15 b30 (1)
unstack b17 b13 (1)
put-down b17 (1)
pick-up b13 (1)
stack b13 b14 (1)
pick-up b17 (1)
stack b17 b13 (1)
unstack b29 b8 (1)
put-down b29 (1)
pick-up b8 (1)
stack b8 b15 (1)
pick-up b29 (1)
stack b29 b8 (1)
unstack b17 b13 (1)
put-down b17 (1)
unstack b13 b14 (1)
put-down b13 (1)
unstack b14 b1 (1)
put-down b14 (1)
pick-up b13 (1)
stack b13 b14 (1)
pick-up b17 (1)
stack b17 b13 (1)
unstack b1 b31 (1)
put-down b1 (1)
pick-up b31 (1)
stack b31 b32 (1)
pick-up b1 (1)
stack b1 b31 (1)
unstack b17 b13 (1)
put-down b17 (1)
unstack b13 b14 (1)
put-down b13 (1)
pick-up b14 (1)
stack b14 b1 (1)
pick-up b13 (1)
stack b13 b14 (1)
pick-up b17 (1)
stack b17 b13 (1)
unstack b12 b20 (1)
put-down b12 (1)
unstack b20 b21 (1)
put-down b20 (1)
unstack b21 b2 (1)
put-down b21 (1)
pick-up b20 (1)
stack b20 b21 (1)
pick-up b12 (1)
stack b12 b20 (1)
unstack b2 b33 (1)
put-down b2 (1)
pick-up b33 (1)
stack b33 b17 (1)
pick-up b2 (1)
stack b2 b33 (1)
unstack b12 b20 (1)
put-down b12 (1)
unstack b20 b21 (1)
put-down b20 (1)
pick-up b12 (1)
stack b12 b20 (1)
pick-up b21 (1)
stack b21 b2 (1)
unstack b12 b20 (1)
put-down b12 (1)
pick-up b20 (1)
stack b20 b21 (1)
pick-up b12 (1)
stack b12 b20 (1)
[t=0.141263s, 29312 KB] Plan length: 162 step(s).
[t=0.141263s, 29312 KB] Plan cost: 162
[t=0.141263s, 29312 KB] Expanded 1714 state(s).
[t=0.141263s, 29312 KB] Reopened 0 state(s).
[t=0.141263s, 29312 KB] Evaluated 1715 state(s).
[t=0.141263s, 29312 KB] Evaluations: 3430
[t=0.141263s, 29312 KB] Generated 25673 state(s).
[t=0.141263s, 29312 KB] Dead ends: 0 state(s).
[t=0.141263s, 29312 KB] Number of registered states: 1715
[t=0.141263s, 29312 KB] Int hash set load factor: 1715/2048 = 0.837402
[t=0.141263s, 29312 KB] Int hash set resizes: 11
[t=0.141263s, 29312 KB] Search time: 0.0857426s
[t=0.141263s, 29312 KB] Total time: 0.141263s
Solution found.
Peak memory: 29312 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.39s
