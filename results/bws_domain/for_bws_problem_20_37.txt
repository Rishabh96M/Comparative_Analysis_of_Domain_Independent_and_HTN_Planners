INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_20/bws_problem_20_37.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.010s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.012s wall-clock]
1342 relevant atoms
900 auxiliary atoms
2242 final queue length
3886 total queue pushes
Completing instantiation... [0.010s CPU, 0.014s wall-clock]
Instantiating: [0.030s CPU, 0.028s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
21 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.006s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.022s wall-clock]
1180 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
40 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.009s wall-clock]
Reordering and filtering variables...
41 of 41 variables necessary.
21 of 41 mutex groups necessary.
800 of 800 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 41
Translator derived variables: 0
Translator facts: 462
Translator goal facts: 16
Translator mutex groups: 21
Translator total mutex groups size: 441
Translator operators: 800
Translator axioms: 0
Translator task size: 6900
Translator peak memory: 35948 KB
Writing output... [0.000s CPU, 0.004s wall-clock]
Done! [0.080s CPU, 0.079s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=1.8325e-05s, 24488 KB] reading input...
[t=0.00230248s, 25180 KB] done reading input!
[t=0.00352789s, 25444 KB] Initializing landmark count heuristic...
[t=0.00364618s, 25444 KB] Generating landmark graph...
[t=0.00375464s, 25576 KB] Building a landmark graph with reasonable orders.
[t=0.0038119s, 25576 KB] Initializing Exploration...
[t=0.00409177s, 25744 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0118057s, 26140 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.011871s, 26140 KB] Landmarks generation time: 0.00811696s
[t=0.011886s, 26140 KB] Discovered 87 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0119019s, 26140 KB] 284 edges
[t=0.0119112s, 26140 KB] approx. reasonable orders
[t=0.0136323s, 26140 KB] approx. obedient reasonable orders
[t=0.013669s, 26140 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0136787s, 26140 KB] Landmarks generation time: 0.0100246s
[t=0.0136884s, 26140 KB] Discovered 87 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0137017s, 26140 KB] 322 edges
[t=0.0137126s, 26140 KB] Landmark graph generation time: 0.0100733s
[t=0.013721s, 26140 KB] Landmark graph contains 87 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0137288s, 26140 KB] Landmark graph contains 322 orderings.
[t=0.0141106s, 26300 KB] Simplifying 3160 unary operators... done! [2400 unary operators]
[t=0.014835s, 26300 KB] time to simplify: 0.000774817s
[t=0.0149373s, 26300 KB] Initializing additive heuristic...
[t=0.0149514s, 26300 KB] Initializing FF heuristic...
[t=0.0150014s, 26300 KB] Building successor generator...done!
[t=0.0151664s, 26300 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0151749s, 26300 KB] time for successor generation creation: 0.000134221s
[t=0.0151858s, 26300 KB] Variables: 41
[t=0.0151939s, 26300 KB] FactPairs: 462
[t=0.0152019s, 26300 KB] Bytes per state: 16
[t=0.0152839s, 26300 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0153177s, 26300 KB] 41 initial landmarks, 16 goal landmarks
[t=0.0153625s, 26300 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0153719s, 26300 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0153802s, 26300 KB] g=0, 1 evaluated, 0 expanded
[t=0.015394s, 26300 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0154028s, 26300 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0155042s, 26300 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0155134s, 26300 KB] g=1, 5 evaluated, 4 expanded
[t=0.0155663s, 26300 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0155753s, 26300 KB] g=2, 7 evaluated, 6 expanded
[t=0.0157506s, 26300 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0157603s, 26300 KB] g=3, 15 evaluated, 14 expanded
[t=0.0157903s, 26300 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0157989s, 26300 KB] g=4, 16 evaluated, 15 expanded
[t=0.0159721s, 26300 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0159811s, 26300 KB] g=6, 24 evaluated, 23 expanded
[t=0.0160716s, 26300 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0160812s, 26300 KB] g=7, 28 evaluated, 27 expanded
[t=0.0161553s, 26300 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.016164s, 26300 KB] g=8, 31 evaluated, 30 expanded
[t=0.0162559s, 26300 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0162647s, 26300 KB] g=9, 35 evaluated, 34 expanded
[t=0.0163786s, 26300 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0163873s, 26300 KB] g=10, 40 evaluated, 39 expanded
[t=0.0164381s, 26300 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0164475s, 26300 KB] g=11, 42 evaluated, 41 expanded
[t=0.0166869s, 26300 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0166964s, 26300 KB] g=13, 53 evaluated, 52 expanded
[t=0.0170073s, 26300 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0170205s, 26300 KB] g=16, 67 evaluated, 66 expanded
[t=0.0170767s, 26300 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0170858s, 26300 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0170937s, 26300 KB] g=14, 69 evaluated, 68 expanded
[t=0.0171242s, 26300 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0171329s, 26300 KB] g=15, 70 evaluated, 69 expanded
[t=0.0173638s, 26300 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0173749s, 26300 KB] g=17, 80 evaluated, 79 expanded
[t=0.0177045s, 26300 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.017716s, 26300 KB] g=20, 96 evaluated, 95 expanded
[t=0.0180161s, 26300 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.018028s, 26300 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0180373s, 26300 KB] g=18, 107 evaluated, 106 expanded
[t=0.0180719s, 26300 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0180819s, 26300 KB] g=19, 108 evaluated, 107 expanded
[t=0.0183096s, 26300 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0183205s, 26300 KB] g=21, 118 evaluated, 117 expanded
[t=0.018692s, 26300 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0187009s, 26300 KB] g=24, 135 evaluated, 134 expanded
[t=0.0189261s, 26300 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0189349s, 26300 KB] g=22, 146 evaluated, 145 expanded
[t=0.0191313s, 26300 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0191411s, 26300 KB] g=26, 155 evaluated, 154 expanded
[t=0.0192535s, 26300 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0192624s, 26300 KB] g=24, 160 evaluated, 159 expanded
[t=0.0196564s, 26300 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0196659s, 26300 KB] g=28, 179 evaluated, 178 expanded
[t=0.0198362s, 26300 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0198461s, 26300 KB] g=28, 187 evaluated, 186 expanded
[t=0.020149s, 26300 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0201597s, 26300 KB] g=30, 201 evaluated, 200 expanded
[t=0.0207715s, 26300 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0207827s, 26300 KB] g=32, 230 evaluated, 229 expanded
[t=0.0216154s, 26300 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0216388s, 26300 KB] g=34, 268 evaluated, 267 expanded
[t=0.021895s, 26300 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0219075s, 26300 KB] g=36, 280 evaluated, 279 expanded
[t=0.0220225s, 26300 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.022033s, 26300 KB] g=34, 285 evaluated, 284 expanded
[t=0.0225103s, 26300 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0225262s, 26300 KB] g=36, 305 evaluated, 304 expanded
[t=0.0227187s, 26300 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0227332s, 26300 KB] g=38, 313 evaluated, 312 expanded
[t=0.0231982s, 26300 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0232123s, 26300 KB] g=40, 331 evaluated, 330 expanded
[t=0.0234196s, 26300 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0234292s, 26300 KB] g=42, 340 evaluated, 339 expanded
[t=0.0239549s, 26300 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0239645s, 26300 KB] g=46, 365 evaluated, 364 expanded
[t=0.0241757s, 26300 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.024185s, 26300 KB] g=48, 375 evaluated, 374 expanded
[t=0.024213s, 26300 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0242216s, 26300 KB] g=41, 376 evaluated, 375 expanded
[t=0.0242717s, 26300 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0242811s, 26300 KB] g=42, 378 evaluated, 377 expanded
[t=0.0246565s, 26300 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0246665s, 26300 KB] g=44, 397 evaluated, 396 expanded
[t=0.0251272s, 26300 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0251562s, 26300 KB] g=46, 420 evaluated, 419 expanded
[t=0.0256205s, 26300 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0256322s, 26300 KB] g=48, 443 evaluated, 442 expanded
[t=0.025916s, 26300 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0259249s, 26300 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0259325s, 26300 KB] g=50, 459 evaluated, 458 expanded
[t=0.0260507s, 26300 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0260593s, 26300 KB] g=52, 466 evaluated, 465 expanded
[t=0.0261162s, 26300 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0261247s, 26300 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0261322s, 26300 KB] g=52, 469 evaluated, 468 expanded
[t=0.0261703s, 26300 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0261785s, 26300 KB] g=53, 471 evaluated, 470 expanded
[t=0.0262027s, 26300 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0262108s, 26300 KB] g=54, 472 evaluated, 471 expanded
[t=0.0263105s, 26300 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0263189s, 26300 KB] g=56, 478 evaluated, 477 expanded
[t=0.0263413s, 26300 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0263494s, 26300 KB] g=57, 479 evaluated, 478 expanded
[t=0.026473s, 26300 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0264817s, 26300 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0264902s, 26300 KB] g=60, 487 evaluated, 486 expanded
[t=0.026512s, 26300 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.02652s, 26300 KB] g=61, 488 evaluated, 487 expanded
[t=0.0265421s, 26300 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0265501s, 26300 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0265575s, 26300 KB] g=62, 489 evaluated, 488 expanded
[t=0.0266743s, 26300 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.026683s, 26300 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0266907s, 26300 KB] g=66, 497 evaluated, 496 expanded
[t=0.0267346s, 26300 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0267427s, 26300 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0267502s, 26300 KB] g=68, 500 evaluated, 499 expanded
[t=0.0268038s, 26300 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.026812s, 26300 KB] g=72, 504 evaluated, 503 expanded
[t=0.0268278s, 26300 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.026836s, 26300 KB] g=73, 505 evaluated, 504 expanded
[t=0.0268496s, 26300 KB] Solution found!
[t=0.0268594s, 26300 KB] Actual search time: 0.011538s
unstack b10 b1 (1)
put-down b10 (1)
unstack b13 b2 (1)
stack b13 b1 (1)
unstack b11 b17 (1)
put-down b11 (1)
unstack b12 b16 (1)
put-down b12 (1)
unstack b2 b7 (1)
put-down b2 (1)
unstack b16 b5 (1)
put-down b16 (1)
unstack b5 b18 (1)
stack b5 b11 (1)
unstack b17 b8 (1)
put-down b17 (1)
unstack b8 b15 (1)
stack b8 b17 (1)
unstack b13 b1 (1)
put-down b13 (1)
unstack b18 b20 (1)
put-down b18 (1)
unstack b1 b6 (1)
put-down b1 (1)
unstack b15 b14 (1)
put-down b15 (1)
unstack b14 b9 (1)
put-down b14 (1)
pick-up b18 (1)
stack b18 b6 (1)
pick-up b20 (1)
stack b20 b12 (1)
pick-up b9 (1)
stack b9 b20 (1)
pick-up b15 (1)
stack b15 b9 (1)
unstack b18 b6 (1)
put-down b18 (1)
unstack b6 b4 (1)
put-down b6 (1)
unstack b4 b3 (1)
stack b4 b2 (1)
unstack b3 b19 (1)
stack b3 b5 (1)
pick-up b18 (1)
stack b18 b6 (1)
pick-up b7 (1)
stack b7 b3 (1)
pick-up b14 (1)
stack b14 b7 (1)
pick-up b19 (1)
stack b19 b14 (1)
pick-up b13 (1)
stack b13 b1 (1)
pick-up b16 (1)
stack b16 b19 (1)
unstack b13 b1 (1)
put-down b13 (1)
pick-up b1 (1)
stack b1 b16 (1)
pick-up b13 (1)
stack b13 b1 (1)
unstack b8 b17 (1)
put-down b8 (1)
pick-up b17 (1)
stack b17 b15 (1)
pick-up b8 (1)
stack b8 b17 (1)
unstack b18 b6 (1)
put-down b18 (1)
pick-up b6 (1)
stack b6 b4 (1)
pick-up b18 (1)
stack b18 b6 (1)
[t=0.0268682s, 26300 KB] Plan length: 74 step(s).
[t=0.0268682s, 26300 KB] Plan cost: 74
[t=0.0268682s, 26300 KB] Expanded 505 state(s).
[t=0.0268682s, 26300 KB] Reopened 0 state(s).
[t=0.0268682s, 26300 KB] Evaluated 506 state(s).
[t=0.0268682s, 26300 KB] Evaluations: 1012
[t=0.0268682s, 26300 KB] Generated 5393 state(s).
[t=0.0268682s, 26300 KB] Dead ends: 0 state(s).
[t=0.0268682s, 26300 KB] Number of registered states: 506
[t=0.0268682s, 26300 KB] Int hash set load factor: 506/512 = 0.988281
[t=0.0268682s, 26300 KB] Int hash set resizes: 9
[t=0.0268682s, 26300 KB] Search time: 0.0115847s
[t=0.0268682s, 26300 KB] Total time: 0.0268682s
Solution found.
Peak memory: 26300 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.17s
