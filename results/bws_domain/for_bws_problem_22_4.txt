INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_22/bws_problem_22_4.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.009s wall-clock]
1608 relevant atoms
1078 auxiliary atoms
2686 final queue length
4673 total queue pushes
Completing instantiation... [0.020s CPU, 0.016s wall-clock]
Instantiating: [0.030s CPU, 0.027s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
23 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.010s CPU, 0.007s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.001s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
1430 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
44 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.012s wall-clock]
Reordering and filtering variables...
45 of 45 variables necessary.
23 of 45 mutex groups necessary.
968 of 968 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.007s wall-clock]
Translator variables: 45
Translator derived variables: 0
Translator facts: 552
Translator goal facts: 17
Translator mutex groups: 23
Translator total mutex groups size: 529
Translator operators: 968
Translator axioms: 0
Translator task size: 8337
Translator peak memory: 36972 KB
Writing output... [0.010s CPU, 0.005s wall-clock]
Done! [0.090s CPU, 0.089s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=3.1962e-05s, 24488 KB] reading input...
[t=0.00325657s, 25340 KB] done reading input!
[t=0.00456182s, 25736 KB] Initializing landmark count heuristic...
[t=0.00460428s, 25736 KB] Generating landmark graph...
[t=0.00466573s, 25736 KB] Building a landmark graph with reasonable orders.
[t=0.00473556s, 25736 KB] Initializing Exploration...
[t=0.00505088s, 26000 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0144973s, 26396 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0145897s, 26396 KB] Landmarks generation time: 0.00994072s
[t=0.0146209s, 26396 KB] Discovered 93 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0146367s, 26396 KB] 299 edges
[t=0.0146462s, 26396 KB] approx. reasonable orders
[t=0.0174807s, 26396 KB] approx. obedient reasonable orders
[t=0.01758s, 26396 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0176037s, 26396 KB] Landmarks generation time: 0.0129971s
[t=0.017614s, 26396 KB] Discovered 93 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.017622s, 26396 KB] 358 edges
[t=0.0176309s, 26396 KB] Landmark graph generation time: 0.0130338s
[t=0.0176395s, 26396 KB] Landmark graph contains 93 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0176479s, 26396 KB] Landmark graph contains 358 orderings.
[t=0.0181923s, 26396 KB] Simplifying 3828 unary operators... done! [2904 unary operators]
[t=0.0196504s, 26528 KB] time to simplify: 0.0015767s
[t=0.0199027s, 26528 KB] Initializing additive heuristic...
[t=0.0199289s, 26528 KB] Initializing FF heuristic...
[t=0.0200269s, 26528 KB] Building successor generator...done!
[t=0.0202791s, 26528 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0202903s, 26528 KB] time for successor generation creation: 0.000223957s
[t=0.0203055s, 26528 KB] Variables: 45
[t=0.020315s, 26528 KB] FactPairs: 552
[t=0.0203237s, 26528 KB] Bytes per state: 20
[t=0.0204828s, 26528 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0205203s, 26528 KB] 44 initial landmarks, 17 goal landmarks
[t=0.020581s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.020591s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0205995s, 26528 KB] g=0, 1 evaluated, 0 expanded
[t=0.0206159s, 26528 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0206246s, 26528 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.020812s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0208239s, 26528 KB] g=1, 7 evaluated, 6 expanded
[t=0.0208638s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0208756s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0208835s, 26528 KB] g=2, 8 evaluated, 7 expanded
[t=0.0210951s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0211115s, 26528 KB] g=3, 14 evaluated, 13 expanded
[t=0.0212094s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.021224s, 26528 KB] g=4, 16 evaluated, 15 expanded
[t=0.0217166s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0217329s, 26528 KB] g=5, 28 evaluated, 27 expanded
[t=0.0217894s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0218034s, 26528 KB] g=6, 29 evaluated, 28 expanded
[t=0.0222848s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0223048s, 26528 KB] g=8, 41 evaluated, 40 expanded
[t=0.0224825s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0224973s, 26528 KB] g=8, 45 evaluated, 44 expanded
[t=0.0228602s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0228747s, 26528 KB] g=10, 54 evaluated, 53 expanded
[t=0.0231216s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0231358s, 26528 KB] g=10, 60 evaluated, 59 expanded
[t=0.0235489s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0235719s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0235854s, 26528 KB] g=12, 70 evaluated, 69 expanded
[t=0.0238343s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0238602s, 26528 KB] g=13, 76 evaluated, 75 expanded
[t=0.0243508s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0243706s, 26528 KB] g=15, 92 evaluated, 91 expanded
[t=0.0248702s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0248863s, 26528 KB] g=18, 112 evaluated, 111 expanded
[t=0.0249925s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0250016s, 26528 KB] g=16, 116 evaluated, 115 expanded
[t=0.0252938s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0253051s, 26528 KB] g=18, 128 evaluated, 127 expanded
[t=0.0253489s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0253574s, 26528 KB] g=20, 129 evaluated, 128 expanded
[t=0.0257714s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0257819s, 26528 KB] g=22, 146 evaluated, 145 expanded
[t=0.0259907s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0260013s, 26528 KB] g=22, 154 evaluated, 153 expanded
[t=0.0263174s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0263273s, 26528 KB] g=24, 167 evaluated, 166 expanded
[t=0.0263612s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0263701s, 26528 KB] g=24, 168 evaluated, 167 expanded
[t=0.026685s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0266944s, 26528 KB] g=26, 181 evaluated, 180 expanded
[t=0.0269531s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0269649s, 26528 KB] g=26, 191 evaluated, 190 expanded
[t=0.0273839s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.027393s, 26528 KB] g=28, 208 evaluated, 207 expanded
[t=0.0276618s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0276719s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0276813s, 26528 KB] g=30, 219 evaluated, 218 expanded
[t=0.027912s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0279209s, 26528 KB] g=32, 229 evaluated, 228 expanded
[t=0.0279524s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.027961s, 26528 KB] g=32, 230 evaluated, 229 expanded
[t=0.0283072s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0283166s, 26528 KB] g=34, 246 evaluated, 245 expanded
[t=0.0285483s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0285572s, 26528 KB] g=34, 256 evaluated, 255 expanded
[t=0.0286872s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0286971s, 26528 KB] g=36, 261 evaluated, 260 expanded
[t=0.0290372s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0290479s, 26528 KB] g=38, 277 evaluated, 276 expanded
[t=0.0292825s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0292919s, 26528 KB] g=40, 288 evaluated, 287 expanded
[t=0.0295009s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0295101s, 26528 KB] g=42, 298 evaluated, 297 expanded
[t=0.0295604s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0295694s, 26528 KB] g=42, 300 evaluated, 299 expanded
[t=0.0296817s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0296906s, 26528 KB] g=44, 305 evaluated, 304 expanded
[t=0.0298431s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0298526s, 26528 KB] g=46, 312 evaluated, 311 expanded
[t=0.0300075s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.030017s, 26528 KB] g=48, 319 evaluated, 318 expanded
[t=0.0300507s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0300595s, 26528 KB] g=49, 320 evaluated, 319 expanded
[t=0.03017s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0301792s, 26528 KB] g=51, 325 evaluated, 324 expanded
[t=0.0303044s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0303134s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0303216s, 26528 KB] g=52, 331 evaluated, 330 expanded
[t=0.0303524s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0303611s, 26528 KB] g=53, 332 evaluated, 331 expanded
[t=0.0303902s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0303991s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0304087s, 26528 KB] g=54, 333 evaluated, 332 expanded
[t=0.0304443s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0304536s, 26528 KB] g=55, 334 evaluated, 333 expanded
[t=0.0305667s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0305832s, 26528 KB] g=59, 339 evaluated, 338 expanded
[t=0.0306263s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0306358s, 26528 KB] g=61, 341 evaluated, 340 expanded
[t=0.0307757s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0307851s, 26528 KB] g=63, 349 evaluated, 348 expanded
[t=0.030909s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0309194s, 26528 KB] g=64, 356 evaluated, 355 expanded
[t=0.0309863s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0309956s, 26528 KB] g=65, 360 evaluated, 359 expanded
[t=0.0310667s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0310773s, 26528 KB] g=66, 364 evaluated, 363 expanded
[t=0.0311277s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0311377s, 26528 KB] g=67, 367 evaluated, 366 expanded
[t=0.0311621s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0311709s, 26528 KB] g=68, 368 evaluated, 367 expanded
[t=0.0312114s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0312204s, 26528 KB] g=70, 370 evaluated, 369 expanded
[t=0.0312446s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0312541s, 26528 KB] g=71, 371 evaluated, 370 expanded
[t=0.0313028s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0313133s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0313225s, 26528 KB] g=74, 374 evaluated, 373 expanded
[t=0.0313404s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0313488s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0313565s, 26528 KB] g=75, 375 evaluated, 374 expanded
[t=0.031373s, 26528 KB] Solution found!
[t=0.0313875s, 26528 KB] Actual search time: 0.0108637s
unstack b6 b12 (1)
stack b6 b1 (1)
unstack b12 b4 (1)
put-down b12 (1)
unstack b8 b22 (1)
stack b8 b4 (1)
unstack b15 b16 (1)
put-down b15 (1)
unstack b3 b7 (1)
put-down b3 (1)
unstack b22 b5 (1)
stack b22 b3 (1)
unstack b19 b11 (1)
put-down b19 (1)
unstack b8 b4 (1)
put-down b8 (1)
unstack b5 b10 (1)
put-down b5 (1)
unstack b10 b2 (1)
stack b10 b22 (1)
unstack b2 b14 (1)
put-down b2 (1)
unstack b7 b17 (1)
stack b7 b10 (1)
unstack b17 b21 (1)
put-down b17 (1)
unstack b21 b13 (1)
stack b21 b12 (1)
pick-up b11 (1)
stack b11 b7 (1)
unstack b13 b9 (1)
stack b13 b5 (1)
pick-up b14 (1)
stack b14 b20 (1)
pick-up b16 (1)
stack b16 b11 (1)
pick-up b17 (1)
stack b17 b16 (1)
pick-up b19 (1)
stack b19 b13 (1)
pick-up b4 (1)
stack b4 b19 (1)
pick-up b8 (1)
stack b8 b4 (1)
unstack b9 b18 (1)
stack b9 b21 (1)
pick-up b18 (1)
stack b18 b17 (1)
unstack b14 b20 (1)
put-down b14 (1)
pick-up b20 (1)
stack b20 b18 (1)
pick-up b14 (1)
stack b14 b20 (1)
unstack b8 b4 (1)
put-down b8 (1)
unstack b4 b19 (1)
put-down b4 (1)
unstack b19 b13 (1)
put-down b19 (1)
unstack b13 b5 (1)
put-down b13 (1)
pick-up b5 (1)
stack b5 b9 (1)
pick-up b13 (1)
stack b13 b5 (1)
pick-up b8 (1)
stack b8 b4 (1)
pick-up b19 (1)
stack b19 b13 (1)
unstack b8 b4 (1)
put-down b8 (1)
pick-up b4 (1)
stack b4 b19 (1)
pick-up b8 (1)
stack b8 b4 (1)
[t=0.0313973s, 26528 KB] Plan length: 76 step(s).
[t=0.0313973s, 26528 KB] Plan cost: 76
[t=0.0313973s, 26528 KB] Expanded 375 state(s).
[t=0.0313973s, 26528 KB] Reopened 0 state(s).
[t=0.0313973s, 26528 KB] Evaluated 376 state(s).
[t=0.0313973s, 26528 KB] Evaluations: 752
[t=0.0313973s, 26528 KB] Generated 4249 state(s).
[t=0.0313973s, 26528 KB] Dead ends: 0 state(s).
[t=0.0313973s, 26528 KB] Number of registered states: 376
[t=0.0313973s, 26528 KB] Int hash set load factor: 376/512 = 0.734375
[t=0.0313973s, 26528 KB] Int hash set resizes: 9
[t=0.0313973s, 26528 KB] Search time: 0.0109157s
[t=0.0313973s, 26528 KB] Total time: 0.0313973s
Solution found.
Peak memory: 26528 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.17s
