INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_22/bws_problem_22_6.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.010s wall-clock]
1608 relevant atoms
1078 auxiliary atoms
2686 final queue length
4669 total queue pushes
Completing instantiation... [0.020s CPU, 0.017s wall-clock]
Instantiating: [0.030s CPU, 0.028s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
23 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.006s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.026s wall-clock]
1430 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
44 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.012s wall-clock]
Reordering and filtering variables...
45 of 45 variables necessary.
23 of 45 mutex groups necessary.
968 of 968 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 45
Translator derived variables: 0
Translator facts: 552
Translator goal facts: 19
Translator mutex groups: 23
Translator total mutex groups size: 529
Translator operators: 968
Translator axioms: 0
Translator task size: 8339
Translator peak memory: 36976 KB
Writing output... [0.000s CPU, 0.005s wall-clock]
Done! [0.080s CPU, 0.086s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=4.2035e-05s, 24488 KB] reading input...
[t=0.00309661s, 25340 KB] done reading input!
[t=0.00415832s, 25736 KB] Initializing landmark count heuristic...
[t=0.00426057s, 25736 KB] Generating landmark graph...
[t=0.0043391s, 25736 KB] Building a landmark graph with reasonable orders.
[t=0.00444046s, 25736 KB] Initializing Exploration...
[t=0.00498012s, 26000 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0157358s, 26660 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0158068s, 26660 KB] Landmarks generation time: 0.011449s
[t=0.0158209s, 26660 KB] Discovered 98 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0158366s, 26660 KB] 705 edges
[t=0.0158462s, 26660 KB] approx. reasonable orders
[t=0.0162215s, 26660 KB] approx. obedient reasonable orders
[t=0.0162527s, 26660 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0162619s, 26660 KB] Landmarks generation time: 0.0119949s
[t=0.0162712s, 26660 KB] Discovered 98 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0162791s, 26660 KB] 710 edges
[t=0.016287s, 26660 KB] Landmark graph generation time: 0.0120336s
[t=0.0162956s, 26660 KB] Landmark graph contains 98 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0163036s, 26660 KB] Landmark graph contains 710 orderings.
[t=0.0166124s, 26660 KB] Simplifying 3828 unary operators... done! [2904 unary operators]
[t=0.0175131s, 26660 KB] time to simplify: 0.000966239s
[t=0.0176372s, 26660 KB] Initializing additive heuristic...
[t=0.0176522s, 26660 KB] Initializing FF heuristic...
[t=0.0177025s, 26660 KB] Building successor generator...done!
[t=0.0179006s, 26660 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0179092s, 26660 KB] time for successor generation creation: 0.000164422s
[t=0.0179217s, 26660 KB] Variables: 45
[t=0.0179301s, 26660 KB] FactPairs: 552
[t=0.017938s, 26660 KB] Bytes per state: 20
[t=0.0180218s, 26660 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0180531s, 26660 KB] 45 initial landmarks, 19 goal landmarks
[t=0.0181188s, 26660 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0181283s, 26660 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.018137s, 26660 KB] g=0, 1 evaluated, 0 expanded
[t=0.0181501s, 26660 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.018159s, 26660 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0182781s, 26660 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0182891s, 26660 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0182974s, 26660 KB] g=2, 5 evaluated, 4 expanded
[t=0.0184198s, 26660 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.018429s, 26660 KB] g=4, 9 evaluated, 8 expanded
[t=0.0185105s, 26660 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0185195s, 26660 KB] g=4, 12 evaluated, 11 expanded
[t=0.0186465s, 26660 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0186553s, 26660 KB] g=6, 17 evaluated, 16 expanded
[t=0.0187594s, 26660 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0187682s, 26660 KB] g=6, 21 evaluated, 20 expanded
[t=0.0188681s, 26660 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0188768s, 26660 KB] g=8, 25 evaluated, 24 expanded
[t=0.0189091s, 26660 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0189177s, 26660 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0189254s, 26660 KB] g=8, 26 evaluated, 25 expanded
[t=0.0190039s, 26660 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0190127s, 26660 KB] g=10, 29 evaluated, 28 expanded
[t=0.0190927s, 26660 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0191015s, 26660 KB] g=11, 32 evaluated, 31 expanded
[t=0.019137s, 26660 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0191509s, 26660 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0191739s, 26660 KB] g=12, 33 evaluated, 32 expanded
[t=0.0192821s, 26660 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0192914s, 26660 KB] g=14, 37 evaluated, 36 expanded
[t=0.019426s, 26660 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.019435s, 26660 KB] g=16, 42 evaluated, 41 expanded
[t=0.0195928s, 26660 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0196028s, 26660 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0196111s, 26660 KB] g=18, 48 evaluated, 47 expanded
[t=0.0197713s, 26660 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0197806s, 26660 KB] g=20, 54 evaluated, 53 expanded
[t=0.0198162s, 26660 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0198254s, 26660 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0198337s, 26660 KB] g=20, 55 evaluated, 54 expanded
[t=0.0199771s, 26660 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0199975s, 26660 KB] g=22, 60 evaluated, 59 expanded
[t=0.0202044s, 26660 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.020214s, 26660 KB] g=25, 68 evaluated, 67 expanded
[t=0.0202724s, 26660 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0202818s, 26660 KB] g=26, 70 evaluated, 69 expanded
[t=0.0204619s, 26660 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0204711s, 26660 KB] g=28, 77 evaluated, 76 expanded
[t=0.0205058s, 26660 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0205143s, 26660 KB] g=29, 78 evaluated, 77 expanded
[t=0.0205479s, 26660 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0205563s, 26660 KB] g=28, 79 evaluated, 78 expanded
[t=0.0209342s, 26660 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0209437s, 26660 KB] g=31, 94 evaluated, 93 expanded
[t=0.0217449s, 26660 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0217558s, 26660 KB] g=36, 126 evaluated, 125 expanded
[t=0.0220166s, 26660 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0220265s, 26660 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0220344s, 26660 KB] g=38, 136 evaluated, 135 expanded
[t=0.0222701s, 26660 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0222814s, 26660 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0222898s, 26660 KB] g=40, 145 evaluated, 144 expanded
[t=0.0225102s, 26660 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0225197s, 26660 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0225283s, 26660 KB] g=42, 153 evaluated, 152 expanded
[t=0.0227557s, 26660 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0227677s, 26660 KB] g=44, 162 evaluated, 161 expanded
[t=0.022828s, 26660 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0228373s, 26660 KB] g=44, 164 evaluated, 163 expanded
[t=0.023157s, 26660 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0231677s, 26660 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0231791s, 26660 KB] g=46, 177 evaluated, 176 expanded
[t=0.0233532s, 26660 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0233628s, 26660 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0233716s, 26660 KB] g=48, 184 evaluated, 183 expanded
[t=0.0235674s, 26660 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0235773s, 26660 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0235852s, 26660 KB] g=50, 192 evaluated, 191 expanded
[t=0.0246579s, 26660 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0246929s, 26660 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0247019s, 26660 KB] g=54, 233 evaluated, 232 expanded
[t=0.0248789s, 26660 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0248898s, 26660 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0248978s, 26660 KB] g=56, 240 evaluated, 239 expanded
[t=0.0257879s, 26660 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.025814s, 26660 KB] g=60, 276 evaluated, 275 expanded
[t=0.0260178s, 26660 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0260368s, 26660 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0260508s, 26660 KB] g=62, 281 evaluated, 280 expanded
[t=0.0284181s, 26660 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.028549s, 26660 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0285599s, 26660 KB] g=70, 349 evaluated, 348 expanded
[t=0.0287839s, 26660 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.028803s, 26660 KB] g=70, 353 evaluated, 352 expanded
[t=0.0289398s, 26660 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0289496s, 26660 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0289581s, 26660 KB] g=72, 358 evaluated, 357 expanded
[t=0.030128s, 26660 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0301435s, 26660 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.030154s, 26660 KB] g=80, 404 evaluated, 403 expanded
[t=0.0302783s, 26660 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0302872s, 26660 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.030295s, 26660 KB] g=82, 408 evaluated, 407 expanded
[t=0.0307473s, 26660 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0307595s, 26660 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0307673s, 26660 KB] g=90, 427 evaluated, 426 expanded
[t=0.0308538s, 26660 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0308998s, 26660 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0309083s, 26660 KB] g=92, 430 evaluated, 429 expanded
[t=0.0318144s, 26660 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0318528s, 26660 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0318622s, 26660 KB] g=110, 475 evaluated, 474 expanded
[t=0.0319245s, 26660 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0319334s, 26660 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0319412s, 26660 KB] g=112, 478 evaluated, 477 expanded
[t=0.032128s, 26660 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0321437s, 26660 KB] g=120, 490 evaluated, 489 expanded
[t=0.0321626s, 26660 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0321712s, 26660 KB] g=121, 491 evaluated, 490 expanded
[t=0.0322016s, 26660 KB] Solution found!
[t=0.0322131s, 26660 KB] Actual search time: 0.0141578s
unstack b11 b18 (1)
put-down b11 (1)
unstack b13 b16 (1)
put-down b13 (1)
unstack b18 b3 (1)
stack b18 b16 (1)
pick-up b20 (1)
stack b20 b18 (1)
unstack b3 b8 (1)
put-down b3 (1)
unstack b8 b17 (1)
stack b8 b3 (1)
unstack b17 b4 (1)
put-down b17 (1)
unstack b4 b15 (1)
put-down b4 (1)
unstack b15 b19 (1)
stack b15 b4 (1)
pick-up b17 (1)
stack b17 b15 (1)
unstack b19 b5 (1)
put-down b19 (1)
unstack b5 b14 (1)
put-down b5 (1)
unstack b14 b2 (1)
stack b14 b13 (1)
pick-up b5 (1)
stack b5 b14 (1)
unstack b2 b10 (1)
put-down b2 (1)
unstack b10 b12 (1)
put-down b10 (1)
unstack b12 b22 (1)
put-down b12 (1)
unstack b22 b6 (1)
put-down b22 (1)
pick-up b12 (1)
stack b12 b22 (1)
unstack b6 b1 (1)
stack b6 b2 (1)
unstack b1 b21 (1)
stack b1 b11 (1)
unstack b21 b9 (1)
stack b21 b19 (1)
pick-up b10 (1)
stack b10 b21 (1)
unstack b9 b7 (1)
put-down b9 (1)
pick-up b7 (1)
stack b7 b20 (1)
unstack b6 b2 (1)
put-down b6 (1)
pick-up b2 (1)
stack b2 b9 (1)
pick-up b6 (1)
stack b6 b2 (1)
unstack b8 b3 (1)
put-down b8 (1)
pick-up b3 (1)
stack b3 b7 (1)
pick-up b8 (1)
stack b8 b3 (1)
unstack b10 b21 (1)
put-down b10 (1)
unstack b21 b19 (1)
put-down b21 (1)
pick-up b19 (1)
stack b19 b1 (1)
pick-up b21 (1)
stack b21 b19 (1)
pick-up b10 (1)
stack b10 b21 (1)
unstack b17 b15 (1)
put-down b17 (1)
unstack b15 b4 (1)
put-down b15 (1)
pick-up b4 (1)
stack b4 b12 (1)
pick-up b15 (1)
stack b15 b4 (1)
pick-up b17 (1)
stack b17 b15 (1)
unstack b5 b14 (1)
put-down b5 (1)
unstack b14 b13 (1)
put-down b14 (1)
pick-up b13 (1)
stack b13 b6 (1)
pick-up b14 (1)
stack b14 b13 (1)
pick-up b5 (1)
stack b5 b14 (1)
unstack b8 b3 (1)
put-down b8 (1)
unstack b3 b7 (1)
put-down b3 (1)
unstack b7 b20 (1)
put-down b7 (1)
pick-up b3 (1)
stack b3 b7 (1)
pick-up b8 (1)
stack b8 b3 (1)
unstack b20 b18 (1)
put-down b20 (1)
unstack b18 b16 (1)
put-down b18 (1)
pick-up b16 (1)
stack b16 b17 (1)
pick-up b18 (1)
stack b18 b16 (1)
pick-up b20 (1)
stack b20 b18 (1)
unstack b8 b3 (1)
put-down b8 (1)
unstack b3 b7 (1)
put-down b3 (1)
pick-up b7 (1)
stack b7 b20 (1)
pick-up b3 (1)
stack b3 b7 (1)
pick-up b8 (1)
stack b8 b3 (1)
[t=0.032223s, 26660 KB] Plan length: 122 step(s).
[t=0.032223s, 26660 KB] Plan cost: 122
[t=0.032223s, 26660 KB] Expanded 491 state(s).
[t=0.032223s, 26660 KB] Reopened 0 state(s).
[t=0.032223s, 26660 KB] Evaluated 492 state(s).
[t=0.032223s, 26660 KB] Evaluations: 984
[t=0.032223s, 26660 KB] Generated 4151 state(s).
[t=0.032223s, 26660 KB] Dead ends: 0 state(s).
[t=0.032223s, 26660 KB] Number of registered states: 492
[t=0.032223s, 26660 KB] Int hash set load factor: 492/512 = 0.960938
[t=0.032223s, 26660 KB] Int hash set resizes: 9
[t=0.032223s, 26660 KB] Search time: 0.0142015s
[t=0.032223s, 26660 KB] Total time: 0.032223s
Solution found.
Peak memory: 26660 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.17s
