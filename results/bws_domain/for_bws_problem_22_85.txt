INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_22/bws_problem_22_85.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.010s wall-clock]
1608 relevant atoms
1078 auxiliary atoms
2686 final queue length
4669 total queue pushes
Completing instantiation... [0.020s CPU, 0.017s wall-clock]
Instantiating: [0.030s CPU, 0.028s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
23 uncovered facts
Choosing groups: [0.010s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.007s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
1430 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
44 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
45 of 45 variables necessary.
23 of 45 mutex groups necessary.
968 of 968 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 45
Translator derived variables: 0
Translator facts: 552
Translator goal facts: 17
Translator mutex groups: 23
Translator total mutex groups size: 529
Translator operators: 968
Translator axioms: 0
Translator task size: 8337
Translator peak memory: 36976 KB
Writing output... [0.010s CPU, 0.005s wall-clock]
Done! [0.090s CPU, 0.087s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.0172e-05s, 24488 KB] reading input...
[t=0.00270397s, 25340 KB] done reading input!
[t=0.00346777s, 25736 KB] Initializing landmark count heuristic...
[t=0.00349445s, 25736 KB] Generating landmark graph...
[t=0.00355122s, 25736 KB] Building a landmark graph with reasonable orders.
[t=0.00360823s, 25736 KB] Initializing Exploration...
[t=0.00387006s, 26000 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0158275s, 26532 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.016085s, 26532 KB] Landmarks generation time: 0.0125386s
[t=0.0161026s, 26532 KB] Discovered 96 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0161336s, 26532 KB] 407 edges
[t=0.0161462s, 26532 KB] approx. reasonable orders
[t=0.0167276s, 26532 KB] approx. obedient reasonable orders
[t=0.0167585s, 26532 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0167682s, 26532 KB] Landmarks generation time: 0.0132737s
[t=0.0167803s, 26532 KB] Discovered 96 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0167899s, 26532 KB] 414 edges
[t=0.0167985s, 26532 KB] Landmark graph generation time: 0.0133112s
[t=0.0168071s, 26532 KB] Landmark graph contains 96 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0168323s, 26532 KB] Landmark graph contains 414 orderings.
[t=0.0173058s, 26532 KB] Simplifying 3828 unary operators... done! [2904 unary operators]
[t=0.0182387s, 26532 KB] time to simplify: 0.000994091s
[t=0.0183626s, 26532 KB] Initializing additive heuristic...
[t=0.0183776s, 26532 KB] Initializing FF heuristic...
[t=0.0184291s, 26532 KB] Building successor generator...done!
[t=0.0186256s, 26532 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0186339s, 26532 KB] time for successor generation creation: 0.000164414s
[t=0.0186452s, 26532 KB] Variables: 45
[t=0.0186534s, 26532 KB] FactPairs: 552
[t=0.0186614s, 26532 KB] Bytes per state: 20
[t=0.0187593s, 26532 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0187926s, 26532 KB] 45 initial landmarks, 17 goal landmarks
[t=0.0188424s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0188515s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0188601s, 26532 KB] g=0, 1 evaluated, 0 expanded
[t=0.0188735s, 26532 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0188822s, 26532 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0190241s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0190332s, 26532 KB] g=2, 6 evaluated, 5 expanded
[t=0.0192866s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0192955s, 26532 KB] g=3, 16 evaluated, 15 expanded
[t=0.0194785s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0194881s, 26532 KB] g=6, 23 evaluated, 22 expanded
[t=0.0197925s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0198028s, 26532 KB] g=8, 35 evaluated, 34 expanded
[t=0.0200928s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0201079s, 26532 KB] g=10, 44 evaluated, 43 expanded
[t=0.0202382s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0202471s, 26532 KB] g=6, 49 evaluated, 48 expanded
[t=0.020448s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0204566s, 26532 KB] g=12, 57 evaluated, 56 expanded
[t=0.0205389s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0205474s, 26532 KB] g=8, 60 evaluated, 59 expanded
[t=0.0206786s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0206872s, 26532 KB] g=13, 65 evaluated, 64 expanded
[t=0.0207455s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0207542s, 26532 KB] g=14, 67 evaluated, 66 expanded
[t=0.0210686s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0210847s, 26532 KB] g=16, 77 evaluated, 76 expanded
[t=0.0211879s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0211964s, 26532 KB] g=16, 81 evaluated, 80 expanded
[t=0.0215263s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0215355s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0215439s, 26532 KB] g=18, 95 evaluated, 94 expanded
[t=0.0217593s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0217678s, 26532 KB] g=20, 104 evaluated, 103 expanded
[t=0.0218009s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0218092s, 26532 KB] g=20, 105 evaluated, 104 expanded
[t=0.0221082s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0221167s, 26532 KB] g=21, 118 evaluated, 117 expanded
[t=0.0221497s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.022158s, 26532 KB] g=22, 119 evaluated, 118 expanded
[t=0.0222654s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0222744s, 26532 KB] g=22, 123 evaluated, 122 expanded
[t=0.0225709s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0225802s, 26532 KB] g=24, 135 evaluated, 134 expanded
[t=0.0227323s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0227415s, 26532 KB] g=24, 141 evaluated, 140 expanded
[t=0.0230502s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.023059s, 26532 KB] g=26, 154 evaluated, 153 expanded
[t=0.0232507s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0232593s, 26532 KB] g=28, 162 evaluated, 161 expanded
[t=0.0232923s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0233011s, 26532 KB] g=28, 163 evaluated, 162 expanded
[t=0.0236273s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0236359s, 26532 KB] g=30, 177 evaluated, 176 expanded
[t=0.0239016s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0239104s, 26532 KB] g=32, 188 evaluated, 187 expanded
[t=0.0241589s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.024174s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0241834s, 26532 KB] g=34, 196 evaluated, 195 expanded
[t=0.0248791s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0249074s, 26532 KB] g=38, 223 evaluated, 222 expanded
[t=0.0251478s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0251573s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0251654s, 26532 KB] g=40, 232 evaluated, 231 expanded
[t=0.0253873s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0253959s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0254042s, 26532 KB] g=42, 241 evaluated, 240 expanded
[t=0.0256024s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0256173s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.025626s, 26532 KB] g=44, 249 evaluated, 248 expanded
[t=0.0258569s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0258684s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0258779s, 26532 KB] g=46, 258 evaluated, 257 expanded
[t=0.0260962s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0261098s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0261179s, 26532 KB] g=48, 267 evaluated, 266 expanded
[t=0.0263077s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0263225s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.02633s, 26532 KB] g=50, 275 evaluated, 274 expanded
[t=0.0265035s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.026513s, 26532 KB] g=53, 282 evaluated, 281 expanded
[t=0.0265707s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0265795s, 26532 KB] g=54, 284 evaluated, 283 expanded
[t=0.0267274s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0267368s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.026745s, 26532 KB] g=56, 290 evaluated, 289 expanded
[t=0.0269859s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0269952s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0270031s, 26532 KB] g=60, 300 evaluated, 299 expanded
[t=0.0271499s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.027159s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0271666s, 26532 KB] g=62, 306 evaluated, 305 expanded
[t=0.0274242s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0274432s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0274518s, 26532 KB] g=66, 316 evaluated, 315 expanded
[t=0.027582s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0275919s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0276s, 26532 KB] g=68, 321 evaluated, 320 expanded
[t=0.0278016s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.027813s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0278214s, 26532 KB] g=72, 329 evaluated, 328 expanded
[t=0.0279251s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0279351s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.027943s, 26532 KB] g=74, 333 evaluated, 332 expanded
[t=0.0289994s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0290107s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0290187s, 26532 KB] g=86, 376 evaluated, 375 expanded
[t=0.0292247s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0292364s, 26532 KB] g=90, 385 evaluated, 384 expanded
[t=0.0293099s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0293189s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0293268s, 26532 KB] g=92, 388 evaluated, 387 expanded
[t=0.0298473s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0298568s, 26532 KB] g=106, 415 evaluated, 414 expanded
[t=0.029914s, 26532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.029923s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.029931s, 26532 KB] g=108, 418 evaluated, 417 expanded
[t=0.029992s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0300005s, 26532 KB] g=112, 422 evaluated, 421 expanded
[t=0.0300172s, 26532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0300256s, 26532 KB] g=113, 423 evaluated, 422 expanded
[t=0.0300396s, 26532 KB] Solution found!
[t=0.0300499s, 26532 KB] Actual search time: 0.0112542s
unstack b17 b9 (1)
put-down b17 (1)
unstack b9 b22 (1)
put-down b9 (1)
unstack b13 b18 (1)
put-down b13 (1)
unstack b18 b14 (1)
put-down b18 (1)
unstack b14 b2 (1)
put-down b14 (1)
unstack b2 b21 (1)
stack b2 b13 (1)
unstack b21 b11 (1)
stack b21 b18 (1)
unstack b11 b10 (1)
put-down b11 (1)
unstack b10 b1 (1)
put-down b10 (1)
unstack b1 b4 (1)
stack b1 b6 (1)
unstack b4 b3 (1)
stack b4 b14 (1)
pick-up b3 (1)
stack b3 b17 (1)
unstack b22 b19 (1)
put-down b22 (1)
pick-up b9 (1)
stack b9 b19 (1)
unstack b1 b6 (1)
put-down b1 (1)
unstack b6 b15 (1)
stack b6 b22 (1)
pick-up b1 (1)
stack b1 b6 (1)
unstack b15 b16 (1)
put-down b15 (1)
unstack b16 b12 (1)
put-down b16 (1)
unstack b12 b8 (1)
put-down b12 (1)
unstack b8 b7 (1)
stack b8 b2 (1)
unstack b7 b20 (1)
put-down b7 (1)
unstack b20 b5 (1)
stack b20 b11 (1)
pick-up b15 (1)
stack b15 b16 (1)
pick-up b5 (1)
stack b5 b1 (1)
unstack b9 b19 (1)
put-down b9 (1)
pick-up b19 (1)
stack b19 b8 (1)
pick-up b9 (1)
stack b9 b19 (1)
unstack b21 b18 (1)
put-down b21 (1)
pick-up b18 (1)
stack b18 b10 (1)
pick-up b21 (1)
stack b21 b18 (1)
unstack b3 b17 (1)
put-down b3 (1)
pick-up b17 (1)
stack b17 b12 (1)
pick-up b3 (1)
stack b3 b17 (1)
unstack b4 b14 (1)
put-down b4 (1)
pick-up b14 (1)
stack b14 b7 (1)
pick-up b4 (1)
stack b4 b14 (1)
unstack b5 b1 (1)
put-down b5 (1)
unstack b1 b6 (1)
put-down b1 (1)
pick-up b5 (1)
stack b5 b1 (1)
unstack b6 b22 (1)
put-down b6 (1)
pick-up b22 (1)
stack b22 b20 (1)
pick-up b6 (1)
stack b6 b22 (1)
unstack b5 b1 (1)
put-down b5 (1)
pick-up b1 (1)
stack b1 b6 (1)
pick-up b5 (1)
stack b5 b1 (1)
unstack b9 b19 (1)
put-down b9 (1)
unstack b19 b8 (1)
put-down b19 (1)
pick-up b9 (1)
stack b9 b19 (1)
unstack b8 b2 (1)
put-down b8 (1)
unstack b2 b13 (1)
put-down b2 (1)
pick-up b13 (1)
stack b13 b15 (1)
pick-up b2 (1)
stack b2 b13 (1)
pick-up b8 (1)
stack b8 b2 (1)
unstack b9 b19 (1)
put-down b9 (1)
pick-up b19 (1)
stack b19 b8 (1)
pick-up b9 (1)
stack b9 b19 (1)
[t=0.0300588s, 26532 KB] Plan length: 114 step(s).
[t=0.0300588s, 26532 KB] Plan cost: 114
[t=0.0300588s, 26532 KB] Expanded 423 state(s).
[t=0.0300588s, 26532 KB] Reopened 0 state(s).
[t=0.0300588s, 26532 KB] Evaluated 424 state(s).
[t=0.0300588s, 26532 KB] Evaluations: 848
[t=0.0300588s, 26532 KB] Generated 4064 state(s).
[t=0.0300588s, 26532 KB] Dead ends: 0 state(s).
[t=0.0300588s, 26532 KB] Number of registered states: 424
[t=0.0300588s, 26532 KB] Int hash set load factor: 424/512 = 0.828125
[t=0.0300588s, 26532 KB] Int hash set resizes: 9
[t=0.0300588s, 26532 KB] Search time: 0.0112999s
[t=0.0300588s, 26532 KB] Total time: 0.0300588s
Solution found.
Peak memory: 26532 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.17s
