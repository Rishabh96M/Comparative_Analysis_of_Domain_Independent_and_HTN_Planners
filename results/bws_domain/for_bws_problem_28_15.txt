INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_28/bws_problem_28_15.pddl --sas-file output.sas
Parsing...
Parsing: [0.020s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.017s wall-clock]
2550 relevant atoms
1708 auxiliary atoms
4258 final queue length
7453 total queue pushes
Completing instantiation... [0.030s CPU, 0.028s wall-clock]
Instantiating: [0.040s CPU, 0.047s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
29 uncovered facts
Choosing groups: [0.000s CPU, 0.002s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.009s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.002s wall-clock]
Translating task: [0.050s CPU, 0.048s wall-clock]
2324 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
56 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.020s wall-clock]
Reordering and filtering variables...
57 of 57 variables necessary.
29 of 57 mutex groups necessary.
1568 of 1568 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.011s wall-clock]
Translator variables: 57
Translator derived variables: 0
Translator facts: 870
Translator goal facts: 25
Translator mutex groups: 29
Translator total mutex groups size: 841
Translator operators: 1568
Translator axioms: 0
Translator task size: 13469
Translator peak memory: 40316 KB
Writing output... [0.010s CPU, 0.009s wall-clock]
Done! [0.160s CPU, 0.150s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=1.8486e-05s, 24488 KB] reading input...
[t=0.00465292s, 26076 KB] done reading input!
[t=0.00623353s, 26472 KB] Initializing landmark count heuristic...
[t=0.00631628s, 26472 KB] Generating landmark graph...
[t=0.00646183s, 26604 KB] Building a landmark graph with reasonable orders.
[t=0.00661115s, 26604 KB] Initializing Exploration...
[t=0.00715809s, 27016 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0298355s, 27808 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0299377s, 27808 KB] Landmarks generation time: 0.0234667s
[t=0.0299607s, 27808 KB] Discovered 128 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0299776s, 27808 KB] 718 edges
[t=0.0299879s, 27808 KB] approx. reasonable orders
[t=0.0330784s, 27808 KB] approx. obedient reasonable orders
[t=0.0331284s, 27808 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0331392s, 27808 KB] Landmarks generation time: 0.0268182s
[t=0.0331491s, 27808 KB] Discovered 128 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0331574s, 27808 KB] 757 edges
[t=0.0331658s, 27808 KB] Landmark graph generation time: 0.0268568s
[t=0.0331744s, 27808 KB] Landmark graph contains 128 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0331821s, 27808 KB] Landmark graph contains 757 orderings.
[t=0.0337492s, 27832 KB] Simplifying 6216 unary operators... done! [4704 unary operators]
[t=0.0353213s, 27832 KB] time to simplify: 0.00167049s
[t=0.0355223s, 27832 KB] Initializing additive heuristic...
[t=0.0355409s, 27832 KB] Initializing FF heuristic...
[t=0.0356257s, 27832 KB] Building successor generator...done!
[t=0.0361204s, 27832 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0361373s, 27832 KB] time for successor generation creation: 0.000450482s
[t=0.0361659s, 27832 KB] Variables: 57
[t=0.0361791s, 27832 KB] FactPairs: 870
[t=0.0361924s, 27832 KB] Bytes per state: 24
[t=0.0363381s, 27832 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0363821s, 27832 KB] 57 initial landmarks, 25 goal landmarks
[t=0.0364949s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 71
[t=0.0365127s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 51
[t=0.0365263s, 27832 KB] g=0, 1 evaluated, 0 expanded
[t=0.0365487s, 27832 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 71
[t=0.0365618s, 27832 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 51
[t=0.036853s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 70
[t=0.0368974s, 27832 KB] g=2, 5 evaluated, 4 expanded
[t=0.0372179s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 69
[t=0.0372384s, 27832 KB] g=3, 11 evaluated, 10 expanded
[t=0.0374553s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 50
[t=0.0374661s, 27832 KB] g=4, 16 evaluated, 15 expanded
[t=0.0376426s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 68
[t=0.037653s, 27832 KB] g=6, 20 evaluated, 19 expanded
[t=0.0382258s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 67
[t=0.0382358s, 27832 KB] g=8, 34 evaluated, 33 expanded
[t=0.0387463s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 66
[t=0.0387612s, 27832 KB] g=10, 46 evaluated, 45 expanded
[t=0.0394222s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 65
[t=0.0394363s, 27832 KB] g=12, 62 evaluated, 61 expanded
[t=0.0400576s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 64
[t=0.0400718s, 27832 KB] g=14, 78 evaluated, 77 expanded
[t=0.0408383s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 63
[t=0.0408569s, 27832 KB] g=16, 98 evaluated, 97 expanded
[t=0.0412475s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 49
[t=0.0412579s, 27832 KB] g=10, 108 evaluated, 107 expanded
[t=0.0416914s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 60
[t=0.0417121s, 27832 KB] g=18, 119 evaluated, 118 expanded
[t=0.0418896s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 48
[t=0.0418994s, 27832 KB] g=12, 123 evaluated, 122 expanded
[t=0.0428091s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 58
[t=0.0428218s, 27832 KB] g=20, 145 evaluated, 144 expanded
[t=0.0435252s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0435428s, 27832 KB] g=22, 163 evaluated, 162 expanded
[t=0.0444985s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0445144s, 27832 KB] g=25, 186 evaluated, 185 expanded
[t=0.0454828s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0454954s, 27832 KB] g=28, 210 evaluated, 209 expanded
[t=0.045915s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0459272s, 27832 KB] g=29, 220 evaluated, 219 expanded
[t=0.0459897s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0460045s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 47
[t=0.0460176s, 27832 KB] g=30, 221 evaluated, 220 expanded
[t=0.0465091s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0465266s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.046535s, 27832 KB] g=32, 232 evaluated, 231 expanded
[t=0.0470782s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.0471001s, 27832 KB] g=34, 244 evaluated, 243 expanded
[t=0.0472135s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0472295s, 27832 KB] g=34, 246 evaluated, 245 expanded
[t=0.0480707s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0481053s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0481146s, 27832 KB] g=36, 265 evaluated, 264 expanded
[t=0.0485398s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0485583s, 27832 KB] g=38, 275 evaluated, 274 expanded
[t=0.0492829s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0493241s, 27832 KB] g=40, 284 evaluated, 283 expanded
[t=0.0496623s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0496719s, 27832 KB] g=42, 292 evaluated, 291 expanded
[t=0.0510313s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0510434s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0510531s, 27832 KB] g=46, 325 evaluated, 324 expanded
[t=0.0512317s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0512409s, 27832 KB] g=47, 329 evaluated, 328 expanded
[t=0.0516118s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0516223s, 27832 KB] g=48, 338 evaluated, 337 expanded
[t=0.0519112s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.051921s, 27832 KB] g=49, 345 evaluated, 344 expanded
[t=0.0523292s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0523457s, 27832 KB] g=50, 355 evaluated, 354 expanded
[t=0.0526747s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0526841s, 27832 KB] g=51, 363 evaluated, 362 expanded
[t=0.0530815s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0530911s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0530993s, 27832 KB] g=52, 373 evaluated, 372 expanded
[t=0.0532252s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0532338s, 27832 KB] g=53, 376 evaluated, 375 expanded
[t=0.0536286s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0536377s, 27832 KB] g=54, 386 evaluated, 385 expanded
[t=0.0541903s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0541995s, 27832 KB] g=56, 400 evaluated, 399 expanded
[t=0.0542959s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0543053s, 27832 KB] g=56, 402 evaluated, 401 expanded
[t=0.0549399s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0549614s, 27832 KB] g=58, 417 evaluated, 416 expanded
[t=0.0551684s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0551776s, 27832 KB] g=59, 422 evaluated, 421 expanded
[t=0.0556329s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0556445s, 27832 KB] g=62, 433 evaluated, 432 expanded
[t=0.0559288s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0559378s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0559471s, 27832 KB] g=64, 440 evaluated, 439 expanded
[t=0.0561935s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0562035s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0562116s, 27832 KB] g=66, 446 evaluated, 445 expanded
[t=0.0563374s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0563469s, 27832 KB] g=67, 449 evaluated, 448 expanded
[t=0.0564105s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.056425s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.056436s, 27832 KB] g=68, 450 evaluated, 449 expanded
[t=0.0567s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0567184s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0567269s, 27832 KB] g=70, 456 evaluated, 455 expanded
[t=0.0570266s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.057038s, 27832 KB] g=72, 463 evaluated, 462 expanded
[t=0.0571281s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0571378s, 27832 KB] g=72, 465 evaluated, 464 expanded
[t=0.0574574s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0574681s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0574761s, 27832 KB] g=74, 473 evaluated, 472 expanded
[t=0.0582222s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0582448s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0582536s, 27832 KB] g=78, 492 evaluated, 491 expanded
[t=0.0584541s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0584682s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0584772s, 27832 KB] g=80, 497 evaluated, 496 expanded
[t=0.0669254s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0669529s, 27832 KB] g=96, 713 evaluated, 712 expanded
[t=0.0670449s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0670546s, 27832 KB] g=97, 715 evaluated, 714 expanded
[t=0.0675592s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0675695s, 27832 KB] g=98, 728 evaluated, 727 expanded
[t=0.0677348s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0677442s, 27832 KB] g=99, 732 evaluated, 731 expanded
[t=0.0677928s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0678016s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0678098s, 27832 KB] g=100, 733 evaluated, 732 expanded
[t=0.068046s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.068055s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.068064s, 27832 KB] g=102, 739 evaluated, 738 expanded
[t=0.0682636s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0682732s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0682817s, 27832 KB] g=104, 744 evaluated, 743 expanded
[t=0.0689338s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0689508s, 27832 KB] g=108, 760 evaluated, 759 expanded
[t=0.0691103s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0691198s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0691284s, 27832 KB] g=110, 764 evaluated, 763 expanded
[t=0.0784767s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0785822s, 27832 KB] g=128, 1004 evaluated, 1003 expanded
[t=0.0787503s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.078762s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0787703s, 27832 KB] g=130, 1008 evaluated, 1007 expanded
[t=0.0798517s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0798621s, 27832 KB] g=138, 1040 evaluated, 1039 expanded
[t=0.0799382s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.079947s, 27832 KB] g=138, 1042 evaluated, 1041 expanded
[t=0.0800538s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0800626s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0800702s, 27832 KB] g=140, 1045 evaluated, 1044 expanded
[t=0.0832923s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0833076s, 27832 KB] g=170, 1158 evaluated, 1157 expanded
[t=0.0835725s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0836018s, 27832 KB] g=174, 1167 evaluated, 1166 expanded
[t=0.0836852s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0837034s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0837115s, 27832 KB] g=176, 1170 evaluated, 1169 expanded
[t=0.0840649s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0840751s, 27832 KB] g=188, 1187 evaluated, 1186 expanded
[t=0.0841478s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0841564s, 27832 KB] g=192, 1191 evaluated, 1190 expanded
[t=0.0841749s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0841838s, 27832 KB] g=193, 1192 evaluated, 1191 expanded
[t=0.0841996s, 27832 KB] Solution found!
[t=0.0842118s, 27832 KB] Actual search time: 0.0478219s
unstack b18 b15 (1)
put-down b18 (1)
unstack b15 b5 (1)
put-down b15 (1)
unstack b12 b14 (1)
put-down b12 (1)
unstack b14 b9 (1)
put-down b14 (1)
unstack b5 b26 (1)
put-down b5 (1)
unstack b9 b1 (1)
put-down b9 (1)
unstack b1 b10 (1)
put-down b1 (1)
unstack b10 b6 (1)
put-down b10 (1)
unstack b6 b23 (1)
stack b6 b14 (1)
pick-up b9 (1)
stack b9 b6 (1)
pick-up b10 (1)
stack b10 b9 (1)
unstack b21 b17 (1)
put-down b21 (1)
unstack b17 b25 (1)
put-down b17 (1)
unstack b25 b28 (1)
put-down b25 (1)
unstack b28 b2 (1)
stack b28 b18 (1)
unstack b2 b7 (1)
stack b2 b25 (1)
unstack b7 b20 (1)
stack b7 b10 (1)
pick-up b1 (1)
stack b1 b7 (1)
pick-up b20 (1)
stack b20 b23 (1)
pick-up b21 (1)
stack b21 b17 (1)
unstack b26 b13 (1)
put-down b26 (1)
unstack b13 b24 (1)
stack b13 b20 (1)
unstack b24 b22 (1)
stack b24 b21 (1)
unstack b22 b19 (1)
put-down b22 (1)
unstack b19 b11 (1)
put-down b19 (1)
unstack b11 b3 (1)
stack b11 b24 (1)
pick-up b15 (1)
stack b15 b3 (1)
pick-up b26 (1)
stack b26 b13 (1)
pick-up b5 (1)
stack b5 b11 (1)
unstack b15 b3 (1)
put-down b15 (1)
unstack b3 b8 (1)
stack b3 b1 (1)
pick-up b15 (1)
stack b15 b3 (1)
unstack b8 b27 (1)
stack b8 b26 (1)
unstack b27 b4 (1)
stack b27 b5 (1)
unstack b4 b16 (1)
stack b4 b22 (1)
pick-up b16 (1)
stack b16 b8 (1)
pick-up b12 (1)
stack b12 b16 (1)
unstack b28 b18 (1)
put-down b28 (1)
pick-up b18 (1)
stack b18 b2 (1)
pick-up b28 (1)
stack b28 b18 (1)
unstack b12 b16 (1)
put-down b12 (1)
unstack b16 b8 (1)
put-down b16 (1)
pick-up b12 (1)
stack b12 b16 (1)
unstack b8 b26 (1)
put-down b8 (1)
unstack b26 b13 (1)
put-down b26 (1)
unstack b13 b20 (1)
put-down b13 (1)
unstack b20 b23 (1)
put-down b20 (1)
pick-up b23 (1)
stack b23 b4 (1)
pick-up b20 (1)
stack b20 b23 (1)
pick-up b13 (1)
stack b13 b20 (1)
pick-up b26 (1)
stack b26 b13 (1)
pick-up b8 (1)
stack b8 b26 (1)
unstack b12 b16 (1)
put-down b12 (1)
pick-up b16 (1)
stack b16 b8 (1)
pick-up b12 (1)
stack b12 b16 (1)
unstack b27 b5 (1)
put-down b27 (1)
unstack b5 b11 (1)
put-down b5 (1)
unstack b11 b24 (1)
put-down b11 (1)
pick-up b5 (1)
stack b5 b11 (1)
pick-up b27 (1)
stack b27 b5 (1)
unstack b24 b21 (1)
put-down b24 (1)
unstack b21 b17 (1)
put-down b21 (1)
pick-up b17 (1)
stack b17 b19 (1)
pick-up b21 (1)
stack b21 b17 (1)
pick-up b24 (1)
stack b24 b21 (1)
unstack b27 b5 (1)
put-down b27 (1)
unstack b5 b11 (1)
put-down b5 (1)
pick-up b11 (1)
stack b11 b24 (1)
pick-up b5 (1)
stack b5 b11 (1)
pick-up b27 (1)
stack b27 b5 (1)
unstack b15 b3 (1)
put-down b15 (1)
unstack b3 b1 (1)
put-down b3 (1)
pick-up b15 (1)
stack b15 b3 (1)
unstack b1 b7 (1)
put-down b1 (1)
unstack b7 b10 (1)
put-down b7 (1)
pick-up b1 (1)
stack b1 b7 (1)
unstack b15 b3 (1)
put-down b15 (1)
pick-up b3 (1)
stack b3 b1 (1)
pick-up b15 (1)
stack b15 b3 (1)
unstack b10 b9 (1)
put-down b10 (1)
unstack b9 b6 (1)
put-down b9 (1)
pick-up b10 (1)
stack b10 b9 (1)
unstack b6 b14 (1)
put-down b6 (1)
pick-up b14 (1)
stack b14 b12 (1)
pick-up b6 (1)
stack b6 b14 (1)
unstack b10 b9 (1)
put-down b10 (1)
pick-up b9 (1)
stack b9 b6 (1)
pick-up b10 (1)
stack b10 b9 (1)
unstack b15 b3 (1)
put-down b15 (1)
unstack b3 b1 (1)
put-down b3 (1)
pick-up b15 (1)
stack b15 b3 (1)
unstack b1 b7 (1)
put-down b1 (1)
pick-up b7 (1)
stack b7 b10 (1)
pick-up b1 (1)
stack b1 b7 (1)
unstack b15 b3 (1)
put-down b15 (1)
pick-up b3 (1)
stack b3 b1 (1)
pick-up b15 (1)
stack b15 b3 (1)
[t=0.0842212s, 27832 KB] Plan length: 194 step(s).
[t=0.0842212s, 27832 KB] Plan cost: 194
[t=0.0842212s, 27832 KB] Expanded 1192 state(s).
[t=0.0842212s, 27832 KB] Reopened 0 state(s).
[t=0.0842212s, 27832 KB] Evaluated 1193 state(s).
[t=0.0842212s, 27832 KB] Evaluations: 2386
[t=0.0842212s, 27832 KB] Generated 10504 state(s).
[t=0.0842212s, 27832 KB] Dead ends: 0 state(s).
[t=0.0842212s, 27832 KB] Number of registered states: 1193
[t=0.0842212s, 27832 KB] Int hash set load factor: 1193/2048 = 0.58252
[t=0.0842212s, 27832 KB] Int hash set resizes: 11
[t=0.0842212s, 27832 KB] Search time: 0.047884s
[t=0.0842212s, 27832 KB] Total time: 0.0842212s
Solution found.
Peak memory: 27832 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.29s
