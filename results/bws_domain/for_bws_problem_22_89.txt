INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_22/bws_problem_22_89.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.011s wall-clock]
1608 relevant atoms
1078 auxiliary atoms
2686 final queue length
4672 total queue pushes
Completing instantiation... [0.020s CPU, 0.017s wall-clock]
Instantiating: [0.030s CPU, 0.030s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
23 uncovered facts
Choosing groups: [0.010s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.007s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.026s wall-clock]
1430 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
44 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.012s wall-clock]
Reordering and filtering variables...
45 of 45 variables necessary.
23 of 45 mutex groups necessary.
968 of 968 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.007s wall-clock]
Translator variables: 45
Translator derived variables: 0
Translator facts: 552
Translator goal facts: 18
Translator mutex groups: 23
Translator total mutex groups size: 529
Translator operators: 968
Translator axioms: 0
Translator task size: 8338
Translator peak memory: 36976 KB
Writing output... [0.000s CPU, 0.005s wall-clock]
Done! [0.090s CPU, 0.092s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.4366e-05s, 24488 KB] reading input...
[t=0.0028594s, 25340 KB] done reading input!
[t=0.00370087s, 25736 KB] Initializing landmark count heuristic...
[t=0.00372941s, 25736 KB] Generating landmark graph...
[t=0.00378937s, 25736 KB] Building a landmark graph with reasonable orders.
[t=0.00384667s, 25736 KB] Initializing Exploration...
[t=0.00412028s, 26000 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0138518s, 26396 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0139959s, 26396 KB] Landmarks generation time: 0.0102076s
[t=0.0140106s, 26396 KB] Discovered 94 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0140304s, 26396 KB] 311 edges
[t=0.0140417s, 26396 KB] approx. reasonable orders
[t=0.0155723s, 26396 KB] approx. obedient reasonable orders
[t=0.0156217s, 26396 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0156317s, 26396 KB] Landmarks generation time: 0.0119002s
[t=0.0156419s, 26396 KB] Discovered 94 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0156501s, 26396 KB] 342 edges
[t=0.0156597s, 26396 KB] Landmark graph generation time: 0.0119375s
[t=0.0156683s, 26396 KB] Landmark graph contains 94 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0156772s, 26396 KB] Landmark graph contains 342 orderings.
[t=0.0162835s, 26396 KB] Simplifying 3828 unary operators... done! [2904 unary operators]
[t=0.017323s, 26528 KB] time to simplify: 0.00112428s
[t=0.0174821s, 26528 KB] Initializing additive heuristic...
[t=0.0174981s, 26528 KB] Initializing FF heuristic...
[t=0.0175843s, 26528 KB] Building successor generator...done!
[t=0.0178231s, 26528 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0178317s, 26528 KB] time for successor generation creation: 0.000201495s
[t=0.0178467s, 26528 KB] Variables: 45
[t=0.0178601s, 26528 KB] FactPairs: 552
[t=0.0178736s, 26528 KB] Bytes per state: 20
[t=0.0180584s, 26528 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0180989s, 26528 KB] 44 initial landmarks, 18 goal landmarks
[t=0.0181732s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0181849s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0181931s, 26528 KB] g=0, 1 evaluated, 0 expanded
[t=0.0182115s, 26528 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.018221s, 26528 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.018366s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0183768s, 26528 KB] g=1, 6 evaluated, 5 expanded
[t=0.0184144s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0184244s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0184327s, 26528 KB] g=2, 7 evaluated, 6 expanded
[t=0.0185671s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0185759s, 26528 KB] g=3, 12 evaluated, 11 expanded
[t=0.0189833s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.018998s, 26528 KB] g=5, 27 evaluated, 26 expanded
[t=0.0191444s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0191559s, 26528 KB] g=6, 32 evaluated, 31 expanded
[t=0.0193574s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0193665s, 26528 KB] g=8, 40 evaluated, 39 expanded
[t=0.0196637s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0196733s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0196817s, 26528 KB] g=8, 52 evaluated, 51 expanded
[t=0.0198591s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0198679s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0198757s, 26528 KB] g=10, 59 evaluated, 58 expanded
[t=0.020055s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0200709s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.020079s, 26528 KB] g=12, 66 evaluated, 65 expanded
[t=0.0202468s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0202558s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0202632s, 26528 KB] g=14, 73 evaluated, 72 expanded
[t=0.0204267s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0204357s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0204439s, 26528 KB] g=16, 79 evaluated, 78 expanded
[t=0.0206194s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0206286s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0206367s, 26528 KB] g=18, 86 evaluated, 85 expanded
[t=0.0207899s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0207991s, 26528 KB] g=21, 92 evaluated, 91 expanded
[t=0.0208338s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0208425s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0208504s, 26528 KB] g=22, 93 evaluated, 92 expanded
[t=0.0210336s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0210445s, 26528 KB] g=24, 100 evaluated, 99 expanded
[t=0.0210796s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0210887s, 26528 KB] g=24, 101 evaluated, 100 expanded
[t=0.0213609s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0213697s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0213777s, 26528 KB] g=26, 112 evaluated, 111 expanded
[t=0.0215276s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0215365s, 26528 KB] g=29, 118 evaluated, 117 expanded
[t=0.0218003s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0218095s, 26528 KB] g=32, 129 evaluated, 128 expanded
[t=0.0220569s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0220688s, 26528 KB] g=34, 139 evaluated, 138 expanded
[t=0.0222135s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0222224s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0222305s, 26528 KB] g=36, 145 evaluated, 144 expanded
[t=0.0244188s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0244319s, 26528 KB] g=48, 240 evaluated, 239 expanded
[t=0.0246829s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0246925s, 26528 KB] g=50, 250 evaluated, 249 expanded
[t=0.025061s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0250725s, 26528 KB] g=52, 264 evaluated, 263 expanded
[t=0.0253031s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0253132s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.025321s, 26528 KB] g=54, 273 evaluated, 272 expanded
[t=0.0254783s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0254887s, 26528 KB] g=56, 279 evaluated, 278 expanded
[t=0.0263741s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.02639s, 26528 KB] g=62, 315 evaluated, 314 expanded
[t=0.0268513s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0268621s, 26528 KB] g=64, 334 evaluated, 333 expanded
[t=0.0270957s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0271083s, 26528 KB] g=58, 343 evaluated, 342 expanded
[t=0.0274023s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0274132s, 26528 KB] g=66, 355 evaluated, 354 expanded
[t=0.0274485s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0274577s, 26528 KB] g=60, 356 evaluated, 355 expanded
[t=0.0278086s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0278187s, 26528 KB] g=68, 370 evaluated, 369 expanded
[t=0.0281226s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0281343s, 26528 KB] g=70, 382 evaluated, 381 expanded
[t=0.0282889s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0282982s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0283062s, 26528 KB] g=72, 388 evaluated, 387 expanded
[t=0.0284569s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0284675s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0284758s, 26528 KB] g=74, 394 evaluated, 393 expanded
[t=0.0288997s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0289094s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0289186s, 26528 KB] g=78, 412 evaluated, 411 expanded
[t=0.0290659s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.029081s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0290904s, 26528 KB] g=80, 417 evaluated, 416 expanded
[t=0.0294732s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0294857s, 26528 KB] g=84, 433 evaluated, 432 expanded
[t=0.0295652s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0295743s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0295825s, 26528 KB] g=86, 436 evaluated, 435 expanded
[t=0.0297112s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0297211s, 26528 KB] g=90, 441 evaluated, 440 expanded
[t=0.0297995s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.029808s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0298168s, 26528 KB] g=92, 444 evaluated, 443 expanded
[t=0.031624s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0316338s, 26528 KB] g=114, 532 evaluated, 531 expanded
[t=0.0317929s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0318014s, 26528 KB] g=118, 541 evaluated, 540 expanded
[t=0.0318596s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0318738s, 26528 KB] g=120, 544 evaluated, 543 expanded
[t=0.0320274s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0320358s, 26528 KB] g=128, 555 evaluated, 554 expanded
[t=0.0320525s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0320608s, 26528 KB] g=129, 556 evaluated, 555 expanded
[t=0.0320748s, 26528 KB] Solution found!
[t=0.032086s, 26528 KB] Actual search time: 0.0139827s
unstack b5 b11 (1)
stack b5 b14 (1)
unstack b8 b22 (1)
put-down b8 (1)
unstack b22 b6 (1)
put-down b22 (1)
unstack b6 b12 (1)
stack b6 b11 (1)
unstack b12 b3 (1)
stack b12 b6 (1)
unstack b3 b4 (1)
put-down b3 (1)
unstack b13 b7 (1)
stack b13 b12 (1)
unstack b7 b9 (1)
stack b7 b4 (1)
pick-up b9 (1)
stack b9 b13 (1)
unstack b5 b14 (1)
put-down b5 (1)
unstack b14 b1 (1)
stack b14 b22 (1)
pick-up b2 (1)
stack b2 b1 (1)
pick-up b5 (1)
stack b5 b14 (1)
unstack b2 b1 (1)
put-down b2 (1)
unstack b1 b16 (1)
put-down b1 (1)
unstack b16 b18 (1)
put-down b16 (1)
pick-up b20 (1)
stack b20 b16 (1)
pick-up b2 (1)
stack b2 b1 (1)
unstack b9 b13 (1)
put-down b9 (1)
unstack b13 b12 (1)
put-down b13 (1)
pick-up b9 (1)
stack b9 b13 (1)
unstack b12 b6 (1)
put-down b12 (1)
unstack b6 b11 (1)
put-down b6 (1)
unstack b11 b10 (1)
stack b11 b3 (1)
unstack b10 b19 (1)
stack b10 b18 (1)
pick-up b12 (1)
stack b12 b6 (1)
pick-up b8 (1)
stack b8 b19 (1)
unstack b10 b18 (1)
put-down b10 (1)
unstack b8 b19 (1)
put-down b8 (1)
unstack b19 b15 (1)
put-down b19 (1)
unstack b15 b17 (1)
put-down b15 (1)
unstack b17 b21 (1)
stack b17 b9 (1)
pick-up b18 (1)
stack b18 b17 (1)
pick-up b21 (1)
stack b21 b7 (1)
pick-up b10 (1)
stack b10 b18 (1)
pick-up b19 (1)
stack b19 b15 (1)
pick-up b8 (1)
stack b8 b19 (1)
unstack b2 b1 (1)
put-down b2 (1)
pick-up b1 (1)
stack b1 b21 (1)
pick-up b2 (1)
stack b2 b1 (1)
unstack b20 b16 (1)
put-down b20 (1)
pick-up b16 (1)
stack b16 b10 (1)
pick-up b20 (1)
stack b20 b16 (1)
unstack b12 b6 (1)
put-down b12 (1)
pick-up b6 (1)
stack b6 b11 (1)
pick-up b12 (1)
stack b12 b6 (1)
unstack b20 b16 (1)
put-down b20 (1)
unstack b16 b10 (1)
put-down b16 (1)
unstack b10 b18 (1)
put-down b10 (1)
pick-up b16 (1)
stack b16 b10 (1)
pick-up b20 (1)
stack b20 b16 (1)
unstack b18 b17 (1)
put-down b18 (1)
unstack b17 b9 (1)
put-down b17 (1)
pick-up b18 (1)
stack b18 b17 (1)
unstack b9 b13 (1)
put-down b9 (1)
pick-up b13 (1)
stack b13 b12 (1)
pick-up b9 (1)
stack b9 b13 (1)
unstack b18 b17 (1)
put-down b18 (1)
pick-up b17 (1)
stack b17 b9 (1)
pick-up b18 (1)
stack b18 b17 (1)
unstack b20 b16 (1)
put-down b20 (1)
unstack b16 b10 (1)
put-down b16 (1)
pick-up b10 (1)
stack b10 b18 (1)
pick-up b16 (1)
stack b16 b10 (1)
pick-up b20 (1)
stack b20 b16 (1)
[t=0.0320955s, 26528 KB] Plan length: 130 step(s).
[t=0.0320955s, 26528 KB] Plan cost: 130
[t=0.0320955s, 26528 KB] Expanded 556 state(s).
[t=0.0320955s, 26528 KB] Reopened 0 state(s).
[t=0.0320955s, 26528 KB] Evaluated 557 state(s).
[t=0.0320955s, 26528 KB] Evaluations: 1114
[t=0.0320955s, 26528 KB] Generated 5176 state(s).
[t=0.0320955s, 26528 KB] Dead ends: 0 state(s).
[t=0.0320955s, 26528 KB] Number of registered states: 557
[t=0.0320955s, 26528 KB] Int hash set load factor: 557/1024 = 0.543945
[t=0.0320955s, 26528 KB] Int hash set resizes: 10
[t=0.0320955s, 26528 KB] Search time: 0.0140386s
[t=0.0320955s, 26528 KB] Total time: 0.0320955s
Solution found.
Peak memory: 26528 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.17s
