INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_20/bws_problem_20_82.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.008s wall-clock]
1342 relevant atoms
900 auxiliary atoms
2242 final queue length
3887 total queue pushes
Completing instantiation... [0.010s CPU, 0.014s wall-clock]
Instantiating: [0.020s CPU, 0.024s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
21 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.005s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.021s wall-clock]
1180 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
40 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.011s wall-clock]
Reordering and filtering variables...
41 of 41 variables necessary.
21 of 41 mutex groups necessary.
800 of 800 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.005s wall-clock]
Translator variables: 41
Translator derived variables: 0
Translator facts: 462
Translator goal facts: 15
Translator mutex groups: 21
Translator total mutex groups size: 441
Translator operators: 800
Translator axioms: 0
Translator task size: 6899
Translator peak memory: 35944 KB
Writing output... [0.000s CPU, 0.005s wall-clock]
Done! [0.070s CPU, 0.075s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=1.8686e-05s, 24488 KB] reading input...
[t=0.00238231s, 25180 KB] done reading input!
[t=0.00329563s, 25444 KB] Initializing landmark count heuristic...
[t=0.00334528s, 25444 KB] Generating landmark graph...
[t=0.00346463s, 25576 KB] Building a landmark graph with reasonable orders.
[t=0.00360017s, 25576 KB] Initializing Exploration...
[t=0.00417224s, 25744 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.011994s, 26140 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0121233s, 26140 KB] Landmarks generation time: 0.00864644s
[t=0.0121397s, 26140 KB] Discovered 81 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0121558s, 26140 KB] 276 edges
[t=0.0121663s, 26140 KB] approx. reasonable orders
[t=0.0127475s, 26140 KB] approx. obedient reasonable orders
[t=0.0127702s, 26140 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0127795s, 26140 KB] Landmarks generation time: 0.00941184s
[t=0.0127894s, 26140 KB] Discovered 81 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0127976s, 26140 KB] 290 edges
[t=0.0128065s, 26140 KB] Landmark graph generation time: 0.00946903s
[t=0.012816s, 26140 KB] Landmark graph contains 81 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0128245s, 26140 KB] Landmark graph contains 290 orderings.
[t=0.01324s, 26140 KB] Simplifying 3160 unary operators... done! [2400 unary operators]
[t=0.0141979s, 26140 KB] time to simplify: 0.0010602s
[t=0.01439s, 26140 KB] Initializing additive heuristic...
[t=0.0144186s, 26140 KB] Initializing FF heuristic...
[t=0.0145144s, 26140 KB] Building successor generator...done!
[t=0.0147859s, 26140 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0148023s, 26140 KB] time for successor generation creation: 0.000218459s
[t=0.0148257s, 26140 KB] Variables: 41
[t=0.0148385s, 26140 KB] FactPairs: 462
[t=0.01485s, 26140 KB] Bytes per state: 16
[t=0.0150149s, 26140 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0150748s, 26140 KB] 39 initial landmarks, 15 goal landmarks
[t=0.0151516s, 26140 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0151613s, 26140 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0151703s, 26140 KB] g=0, 1 evaluated, 0 expanded
[t=0.015187s, 26140 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0151957s, 26140 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0153112s, 26140 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0153257s, 26140 KB] g=1, 5 evaluated, 4 expanded
[t=0.015555s, 26140 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0155669s, 26140 KB] g=3, 15 evaluated, 14 expanded
[t=0.0158066s, 26140 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0158156s, 26140 KB] g=6, 26 evaluated, 25 expanded
[t=0.0161639s, 26140 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0161744s, 26140 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0161828s, 26140 KB] g=8, 42 evaluated, 41 expanded
[t=0.0163613s, 26140 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0163706s, 26140 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0163788s, 26140 KB] g=10, 50 evaluated, 49 expanded
[t=0.0165756s, 26140 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0165846s, 26140 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0165929s, 26140 KB] g=12, 59 evaluated, 58 expanded
[t=0.0167944s, 26140 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0168033s, 26140 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0168117s, 26140 KB] g=14, 68 evaluated, 67 expanded
[t=0.0169473s, 26140 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.016956s, 26140 KB] g=15, 74 evaluated, 73 expanded
[t=0.0170581s, 26140 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0170687s, 26140 KB] g=16, 78 evaluated, 77 expanded
[t=0.0173546s, 26140 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.017364s, 26140 KB] g=17, 91 evaluated, 90 expanded
[t=0.0174624s, 26140 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0174718s, 26140 KB] g=18, 95 evaluated, 94 expanded
[t=0.0177499s, 26140 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0177608s, 26140 KB] g=19, 108 evaluated, 107 expanded
[t=0.0178569s, 26140 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0178656s, 26140 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0178735s, 26140 KB] g=20, 112 evaluated, 111 expanded
[t=0.0180069s, 26140 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0180157s, 26140 KB] g=21, 118 evaluated, 117 expanded
[t=0.0180475s, 26140 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0180562s, 26140 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0180642s, 26140 KB] g=22, 119 evaluated, 118 expanded
[t=0.0182411s, 26140 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0182498s, 26140 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0182578s, 26140 KB] g=24, 127 evaluated, 126 expanded
[t=0.0184421s, 26140 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0184517s, 26140 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0184604s, 26140 KB] g=26, 135 evaluated, 134 expanded
[t=0.0186343s, 26140 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0186432s, 26140 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0186511s, 26140 KB] g=28, 143 evaluated, 142 expanded
[t=0.0187872s, 26140 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0187965s, 26140 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0188047s, 26140 KB] g=30, 149 evaluated, 148 expanded
[t=0.0191977s, 26140 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0192098s, 26140 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0192179s, 26140 KB] g=34, 167 evaluated, 166 expanded
[t=0.0193577s, 26140 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0193667s, 26140 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0193749s, 26140 KB] g=36, 173 evaluated, 172 expanded
[t=0.019723s, 26140 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0197322s, 26140 KB] g=40, 190 evaluated, 189 expanded
[t=0.0198223s, 26140 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0198318s, 26140 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0198404s, 26140 KB] g=42, 194 evaluated, 193 expanded
[t=0.0200087s, 26140 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0200187s, 26140 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0200306s, 26140 KB] g=42, 202 evaluated, 201 expanded
[t=0.0202292s, 26140 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0202387s, 26140 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0202467s, 26140 KB] g=46, 212 evaluated, 211 expanded
[t=0.020329s, 26140 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0203379s, 26140 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0203458s, 26140 KB] g=48, 216 evaluated, 215 expanded
[t=0.0205747s, 26140 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0205835s, 26140 KB] g=54, 229 evaluated, 228 expanded
[t=0.0206728s, 26140 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0206819s, 26140 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0206906s, 26140 KB] g=56, 234 evaluated, 233 expanded
[t=0.0207469s, 26140 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0207554s, 26140 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0207631s, 26140 KB] g=58, 237 evaluated, 236 expanded
[t=0.0209079s, 26140 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0209171s, 26140 KB] g=62, 246 evaluated, 245 expanded
[t=0.0209705s, 26140 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0209793s, 26140 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0209871s, 26140 KB] g=64, 249 evaluated, 248 expanded
[t=0.0210761s, 26140 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0210847s, 26140 KB] g=70, 255 evaluated, 254 expanded
[t=0.0211419s, 26140 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0211506s, 26140 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0211587s, 26140 KB] g=72, 258 evaluated, 257 expanded
[t=0.021175s, 26140 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0211834s, 26140 KB] g=73, 259 evaluated, 258 expanded
[t=0.021197s, 26140 KB] Solution found!
[t=0.0212088s, 26140 KB] Actual search time: 0.00612855s
unstack b20 b13 (1)
put-down b20 (1)
unstack b8 b6 (1)
put-down b8 (1)
unstack b11 b14 (1)
put-down b11 (1)
unstack b14 b17 (1)
stack b14 b16 (1)
unstack b17 b4 (1)
put-down b17 (1)
unstack b4 b15 (1)
put-down b4 (1)
unstack b15 b7 (1)
stack b15 b19 (1)
unstack b6 b2 (1)
put-down b6 (1)
unstack b2 b10 (1)
put-down b2 (1)
unstack b10 b5 (1)
stack b10 b14 (1)
unstack b7 b18 (1)
stack b7 b5 (1)
pick-up b11 (1)
stack b11 b2 (1)
unstack b18 b3 (1)
stack b18 b11 (1)
pick-up b20 (1)
stack b20 b3 (1)
pick-up b8 (1)
stack b8 b15 (1)
unstack b20 b3 (1)
put-down b20 (1)
pick-up b3 (1)
stack b3 b6 (1)
pick-up b20 (1)
stack b20 b3 (1)
unstack b13 b12 (1)
put-down b13 (1)
pick-up b12 (1)
stack b12 b18 (1)
pick-up b13 (1)
stack b13 b12 (1)
unstack b7 b5 (1)
put-down b7 (1)
pick-up b5 (1)
stack b5 b13 (1)
pick-up b7 (1)
stack b7 b5 (1)
unstack b10 b14 (1)
put-down b10 (1)
unstack b14 b16 (1)
put-down b14 (1)
unstack b16 b1 (1)
stack b16 b4 (1)
pick-up b1 (1)
stack b1 b10 (1)
pick-up b14 (1)
stack b14 b16 (1)
unstack b1 b10 (1)
put-down b1 (1)
pick-up b10 (1)
stack b10 b14 (1)
pick-up b1 (1)
stack b1 b10 (1)
unstack b8 b15 (1)
put-down b8 (1)
unstack b15 b19 (1)
put-down b15 (1)
unstack b19 b9 (1)
stack b19 b17 (1)
pick-up b15 (1)
stack b15 b19 (1)
pick-up b8 (1)
stack b8 b15 (1)
[t=0.0212181s, 26140 KB] Plan length: 74 step(s).
[t=0.0212181s, 26140 KB] Plan cost: 74
[t=0.0212181s, 26140 KB] Expanded 259 state(s).
[t=0.0212181s, 26140 KB] Reopened 0 state(s).
[t=0.0212181s, 26140 KB] Evaluated 260 state(s).
[t=0.0212181s, 26140 KB] Evaluations: 520
[t=0.0212181s, 26140 KB] Generated 2430 state(s).
[t=0.0212181s, 26140 KB] Dead ends: 0 state(s).
[t=0.0212181s, 26140 KB] Number of registered states: 260
[t=0.0212181s, 26140 KB] Int hash set load factor: 260/512 = 0.507812
[t=0.0212181s, 26140 KB] Int hash set resizes: 9
[t=0.0212181s, 26140 KB] Search time: 0.00620462s
[t=0.0212181s, 26140 KB] Total time: 0.0212181s
Solution found.
Peak memory: 26140 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.14s
