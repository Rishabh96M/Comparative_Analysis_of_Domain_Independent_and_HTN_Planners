INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_23/bws_problem_23_11.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.010s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.000s CPU, 0.011s wall-clock]
1750 relevant atoms
1173 auxiliary atoms
2923 final queue length
5088 total queue pushes
Completing instantiation... [0.020s CPU, 0.018s wall-clock]
Instantiating: [0.030s CPU, 0.030s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.010s CPU, 0.000s wall-clock]
Choosing groups...
24 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.007s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.027s wall-clock]
1564 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
46 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.013s wall-clock]
Reordering and filtering variables...
47 of 47 variables necessary.
24 of 47 mutex groups necessary.
1058 of 1058 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 47
Translator derived variables: 0
Translator facts: 600
Translator goal facts: 20
Translator mutex groups: 24
Translator total mutex groups size: 576
Translator operators: 1058
Translator axioms: 0
Translator task size: 9109
Translator peak memory: 37488 KB
Writing output... [0.000s CPU, 0.006s wall-clock]
Done! [0.090s CPU, 0.095s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=1.8326e-05s, 24488 KB] reading input...
[t=0.00300186s, 25428 KB] done reading input!
[t=0.00381458s, 25824 KB] Initializing landmark count heuristic...
[t=0.00383984s, 25824 KB] Generating landmark graph...
[t=0.00390393s, 25824 KB] Building a landmark graph with reasonable orders.
[t=0.00398104s, 25956 KB] Initializing Exploration...
[t=0.00436771s, 26256 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0170364s, 26652 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0171112s, 26652 KB] Landmarks generation time: 0.0132087s
[t=0.0171246s, 26652 KB] Discovered 105 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0171422s, 26652 KB] 544 edges
[t=0.0171522s, 26652 KB] approx. reasonable orders
[t=0.0189159s, 26652 KB] approx. obedient reasonable orders
[t=0.0189702s, 26652 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0189803s, 26652 KB] Landmarks generation time: 0.0151393s
[t=0.0189909s, 26652 KB] Discovered 105 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0189993s, 26652 KB] 571 edges
[t=0.0190087s, 26652 KB] Landmark graph generation time: 0.015176s
[t=0.0190174s, 26652 KB] Landmark graph contains 105 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0190265s, 26652 KB] Landmark graph contains 571 orderings.
[t=0.0194859s, 26652 KB] Simplifying 4186 unary operators... done! [3174 unary operators]
[t=0.0205272s, 26784 KB] time to simplify: 0.00112898s
[t=0.0206828s, 26784 KB] Initializing additive heuristic...
[t=0.0207135s, 26784 KB] Initializing FF heuristic...
[t=0.0207789s, 26784 KB] Building successor generator...done!
[t=0.0209963s, 26784 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0210053s, 26784 KB] time for successor generation creation: 0.000188598s
[t=0.0210194s, 26784 KB] Variables: 47
[t=0.0210277s, 26784 KB] FactPairs: 600
[t=0.0210358s, 26784 KB] Bytes per state: 20
[t=0.0211264s, 26784 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0211611s, 26784 KB] 47 initial landmarks, 20 goal landmarks
[t=0.0212174s, 26784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 58
[t=0.0212272s, 26784 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0212364s, 26784 KB] g=0, 1 evaluated, 0 expanded
[t=0.0212504s, 26784 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 58
[t=0.021259s, 26784 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0213903s, 26784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 57
[t=0.0213999s, 26784 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0214082s, 26784 KB] g=2, 5 evaluated, 4 expanded
[t=0.0215486s, 26784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0215606s, 26784 KB] g=4, 9 evaluated, 8 expanded
[t=0.0218244s, 26784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0218346s, 26784 KB] g=6, 18 evaluated, 17 expanded
[t=0.0220311s, 26784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0220413s, 26784 KB] g=8, 25 evaluated, 24 expanded
[t=0.0223238s, 26784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0223341s, 26784 KB] g=10, 35 evaluated, 34 expanded
[t=0.0225602s, 26784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0225735s, 26784 KB] g=12, 43 evaluated, 42 expanded
[t=0.0227776s, 26784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0227919s, 26784 KB] g=13, 50 evaluated, 49 expanded
[t=0.0232902s, 26784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0232998s, 26784 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0233086s, 26784 KB] g=16, 67 evaluated, 66 expanded
[t=0.0235934s, 26784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0236106s, 26784 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0236546s, 26784 KB] g=18, 77 evaluated, 76 expanded
[t=0.0239423s, 26784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0239545s, 26784 KB] g=20, 87 evaluated, 86 expanded
[t=0.0239931s, 26784 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0240026s, 26784 KB] g=20, 88 evaluated, 87 expanded
[t=0.0241831s, 26784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0241944s, 26784 KB] g=21, 94 evaluated, 93 expanded
[t=0.0246029s, 26784 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0246173s, 26784 KB] g=22, 108 evaluated, 107 expanded
[t=0.0250179s, 26784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0250299s, 26784 KB] g=24, 122 evaluated, 121 expanded
[t=0.0252229s, 26784 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0252356s, 26784 KB] g=24, 128 evaluated, 127 expanded
[t=0.0257922s, 26784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0258083s, 26784 KB] g=26, 147 evaluated, 146 expanded
[t=0.0258784s, 26784 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0258889s, 26784 KB] g=26, 149 evaluated, 148 expanded
[t=0.0265385s, 26784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0265564s, 26784 KB] g=28, 172 evaluated, 171 expanded
[t=0.0272767s, 26784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0272864s, 26784 KB] g=30, 197 evaluated, 196 expanded
[t=0.0277088s, 26784 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0277187s, 26784 KB] g=30, 212 evaluated, 211 expanded
[t=0.0281141s, 26784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0281322s, 26784 KB] g=32, 225 evaluated, 224 expanded
[t=0.0283269s, 26784 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0283511s, 26784 KB] g=32, 229 evaluated, 228 expanded
[t=0.0291525s, 26784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0291893s, 26784 KB] g=34, 252 evaluated, 251 expanded
[t=0.0295762s, 26784 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0295899s, 26784 KB] g=36, 264 evaluated, 263 expanded
[t=0.0300438s, 26784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0300534s, 26784 KB] g=36, 281 evaluated, 280 expanded
[t=0.030093s, 26784 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0301021s, 26784 KB] g=38, 282 evaluated, 281 expanded
[t=0.0307622s, 26784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0307729s, 26784 KB] g=38, 306 evaluated, 305 expanded
[t=0.0314365s, 26784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0314461s, 26784 KB] g=40, 332 evaluated, 331 expanded
[t=0.0321877s, 26784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0321977s, 26784 KB] g=42, 361 evaluated, 360 expanded
[t=0.0329033s, 26784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0329131s, 26784 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0329259s, 26784 KB] g=44, 389 evaluated, 388 expanded
[t=0.0332281s, 26784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0332385s, 26784 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.033248s, 26784 KB] g=46, 401 evaluated, 400 expanded
[t=0.0335148s, 26784 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0335264s, 26784 KB] g=48, 411 evaluated, 410 expanded
[t=0.033924s, 26784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0339339s, 26784 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0339426s, 26784 KB] g=50, 426 evaluated, 425 expanded
[t=0.0340001s, 26784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0340094s, 26784 KB] g=51, 428 evaluated, 427 expanded
[t=0.0343011s, 26784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0343105s, 26784 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0343181s, 26784 KB] g=52, 440 evaluated, 439 expanded
[t=0.0343753s, 26784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.034384s, 26784 KB] g=53, 442 evaluated, 441 expanded
[t=0.0350656s, 26784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0350779s, 26784 KB] g=56, 469 evaluated, 468 expanded
[t=0.0352619s, 26784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0352709s, 26784 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0352789s, 26784 KB] g=58, 476 evaluated, 475 expanded
[t=0.0357382s, 26784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0357646s, 26784 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0357735s, 26784 KB] g=62, 492 evaluated, 491 expanded
[t=0.0359598s, 26784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0359695s, 26784 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0359807s, 26784 KB] g=64, 499 evaluated, 498 expanded
[t=0.0369468s, 26784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0369599s, 26784 KB] g=68, 535 evaluated, 534 expanded
[t=0.0370985s, 26784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0371085s, 26784 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0371172s, 26784 KB] g=70, 540 evaluated, 539 expanded
[t=0.0376278s, 26784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0376449s, 26784 KB] g=74, 559 evaluated, 558 expanded
[t=0.0377579s, 26784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.037771s, 26784 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0377801s, 26784 KB] g=76, 563 evaluated, 562 expanded
[t=0.0388097s, 26784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0388225s, 26784 KB] g=86, 602 evaluated, 601 expanded
[t=0.0389394s, 26784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0389623s, 26784 KB] g=88, 606 evaluated, 605 expanded
[t=0.0393416s, 26784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0393518s, 26784 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0393757s, 26784 KB] g=94, 620 evaluated, 619 expanded
[t=0.0412415s, 26784 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0412577s, 26784 KB] g=108, 690 evaluated, 689 expanded
[t=0.0413714s, 26784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.041381s, 26784 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0413894s, 26784 KB] g=110, 694 evaluated, 693 expanded
[t=0.0416394s, 26784 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.04165s, 26784 KB] g=114, 703 evaluated, 702 expanded
[t=0.0417348s, 26784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0417453s, 26784 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0417532s, 26784 KB] g=116, 706 evaluated, 705 expanded
[t=0.047513s, 26784 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0475378s, 26784 KB] g=150, 948 evaluated, 947 expanded
[t=0.0477253s, 26784 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0477354s, 26784 KB] g=154, 957 evaluated, 956 expanded
[t=0.0478012s, 26784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0478104s, 26784 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0478185s, 26784 KB] g=156, 960 evaluated, 959 expanded
[t=0.0480791s, 26784 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0480883s, 26784 KB] g=168, 976 evaluated, 975 expanded
[t=0.0481494s, 26784 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0481582s, 26784 KB] g=172, 980 evaluated, 979 expanded
[t=0.0481757s, 26784 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0481841s, 26784 KB] g=173, 981 evaluated, 980 expanded
[t=0.0481989s, 26784 KB] Solution found!
[t=0.0482124s, 26784 KB] Actual search time: 0.0270487s
unstack b8 b15 (1)
put-down b8 (1)
unstack b13 b4 (1)
put-down b13 (1)
unstack b15 b3 (1)
put-down b15 (1)
unstack b20 b19 (1)
put-down b20 (1)
unstack b3 b16 (1)
put-down b3 (1)
unstack b4 b21 (1)
put-down b4 (1)
unstack b21 b9 (1)
put-down b21 (1)
unstack b16 b12 (1)
put-down b16 (1)
unstack b9 b11 (1)
put-down b9 (1)
unstack b11 b17 (1)
put-down b11 (1)
unstack b17 b7 (1)
put-down b17 (1)
unstack b12 b14 (1)
put-down b12 (1)
unstack b14 b23 (1)
put-down b14 (1)
unstack b23 b1 (1)
stack b23 b12 (1)
unstack b1 b6 (1)
put-down b1 (1)
pick-up b21 (1)
stack b21 b1 (1)
unstack b6 b10 (1)
stack b6 b14 (1)
unstack b7 b22 (1)
stack b7 b3 (1)
unstack b22 b18 (1)
stack b22 b10 (1)
unstack b18 b2 (1)
stack b18 b8 (1)
pick-up b11 (1)
stack b11 b18 (1)
pick-up b13 (1)
stack b13 b16 (1)
pick-up b15 (1)
stack b15 b23 (1)
pick-up b17 (1)
stack b17 b20 (1)
pick-up b2 (1)
stack b2 b9 (1)
pick-up b4 (1)
stack b4 b7 (1)
unstack b17 b20 (1)
put-down b17 (1)
pick-up b20 (1)
stack b20 b22 (1)
pick-up b17 (1)
stack b17 b20 (1)
unstack b19 b5 (1)
put-down b19 (1)
pick-up b5 (1)
stack b5 b2 (1)
pick-up b19 (1)
stack b19 b5 (1)
unstack b21 b1 (1)
put-down b21 (1)
pick-up b1 (1)
stack b1 b15 (1)
pick-up b21 (1)
stack b21 b1 (1)
unstack b6 b14 (1)
put-down b6 (1)
pick-up b14 (1)
stack b14 b4 (1)
pick-up b6 (1)
stack b6 b14 (1)
unstack b17 b20 (1)
put-down b17 (1)
unstack b20 b22 (1)
put-down b20 (1)
pick-up b17 (1)
stack b17 b20 (1)
unstack b22 b10 (1)
put-down b22 (1)
pick-up b10 (1)
stack b10 b6 (1)
pick-up b22 (1)
stack b22 b10 (1)
unstack b17 b20 (1)
put-down b17 (1)
pick-up b20 (1)
stack b20 b22 (1)
pick-up b17 (1)
stack b17 b20 (1)
unstack b21 b1 (1)
put-down b21 (1)
unstack b1 b15 (1)
put-down b1 (1)
pick-up b21 (1)
stack b21 b1 (1)
unstack b15 b23 (1)
put-down b15 (1)
unstack b23 b12 (1)
put-down b23 (1)
pick-up b12 (1)
stack b12 b13 (1)
pick-up b23 (1)
stack b23 b12 (1)
pick-up b15 (1)
stack b15 b23 (1)
unstack b21 b1 (1)
put-down b21 (1)
pick-up b1 (1)
stack b1 b15 (1)
pick-up b21 (1)
stack b21 b1 (1)
unstack b17 b20 (1)
put-down b17 (1)
unstack b20 b22 (1)
put-down b20 (1)
pick-up b17 (1)
stack b17 b20 (1)
unstack b22 b10 (1)
put-down b22 (1)
unstack b10 b6 (1)
put-down b10 (1)
pick-up b22 (1)
stack b22 b10 (1)
unstack b17 b20 (1)
put-down b17 (1)
pick-up b20 (1)
stack b20 b22 (1)
pick-up b17 (1)
stack b17 b20 (1)
unstack b6 b14 (1)
put-down b6 (1)
unstack b14 b4 (1)
put-down b14 (1)
pick-up b6 (1)
stack b6 b14 (1)
unstack b4 b7 (1)
put-down b4 (1)
unstack b7 b3 (1)
put-down b7 (1)
pick-up b3 (1)
stack b3 b11 (1)
pick-up b7 (1)
stack b7 b3 (1)
pick-up b4 (1)
stack b4 b7 (1)
unstack b6 b14 (1)
put-down b6 (1)
pick-up b14 (1)
stack b14 b4 (1)
pick-up b6 (1)
stack b6 b14 (1)
unstack b17 b20 (1)
put-down b17 (1)
unstack b20 b22 (1)
put-down b20 (1)
pick-up b17 (1)
stack b17 b20 (1)
unstack b22 b10 (1)
put-down b22 (1)
pick-up b10 (1)
stack b10 b6 (1)
pick-up b22 (1)
stack b22 b10 (1)
unstack b17 b20 (1)
put-down b17 (1)
pick-up b20 (1)
stack b20 b22 (1)
pick-up b17 (1)
stack b17 b20 (1)
[t=0.0482222s, 26784 KB] Plan length: 174 step(s).
[t=0.0482222s, 26784 KB] Plan cost: 174
[t=0.0482222s, 26784 KB] Expanded 981 state(s).
[t=0.0482222s, 26784 KB] Reopened 0 state(s).
[t=0.0482222s, 26784 KB] Evaluated 982 state(s).
[t=0.0482222s, 26784 KB] Evaluations: 1964
[t=0.0482222s, 26784 KB] Generated 9982 state(s).
[t=0.0482222s, 26784 KB] Dead ends: 0 state(s).
[t=0.0482222s, 26784 KB] Number of registered states: 982
[t=0.0482222s, 26784 KB] Int hash set load factor: 982/1024 = 0.958984
[t=0.0482222s, 26784 KB] Int hash set resizes: 10
[t=0.0482222s, 26784 KB] Search time: 0.0270962s
[t=0.0482222s, 26784 KB] Total time: 0.0482222s
Solution found.
Peak memory: 26784 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.19s
