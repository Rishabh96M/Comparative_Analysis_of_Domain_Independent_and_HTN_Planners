INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_27/bws_problem_27_21.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.000s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.015s wall-clock]
2378 relevant atoms
1593 auxiliary atoms
3971 final queue length
6946 total queue pushes
Completing instantiation... [0.020s CPU, 0.024s wall-clock]
Instantiating: [0.040s CPU, 0.040s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.010s CPU, 0.002s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
28 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.001s wall-clock]
Translating task: [0.040s CPU, 0.042s wall-clock]
2160 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
54 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.018s wall-clock]
Reordering and filtering variables...
55 of 55 variables necessary.
28 of 55 mutex groups necessary.
1458 of 1458 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.009s wall-clock]
Translator variables: 55
Translator derived variables: 0
Translator facts: 812
Translator goal facts: 23
Translator mutex groups: 28
Translator total mutex groups size: 784
Translator operators: 1458
Translator axioms: 0
Translator task size: 12528
Translator peak memory: 39412 KB
Writing output... [0.010s CPU, 0.015s wall-clock]
Done! [0.130s CPU, 0.139s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.0707e-05s, 24488 KB] reading input...
[t=0.00463189s, 25936 KB] done reading input!
[t=0.00547763s, 26332 KB] Initializing landmark count heuristic...
[t=0.0055088s, 26332 KB] Generating landmark graph...
[t=0.00558396s, 26332 KB] Building a landmark graph with reasonable orders.
[t=0.00565751s, 26464 KB] Initializing Exploration...
[t=0.00606394s, 26732 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0252375s, 27524 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0254723s, 27524 KB] Landmarks generation time: 0.0199102s
[t=0.0255075s, 27524 KB] Discovered 123 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.025527s, 27524 KB] 560 edges
[t=0.0255371s, 27524 KB] approx. reasonable orders
[t=0.0315179s, 27524 KB] approx. obedient reasonable orders
[t=0.0318485s, 27524 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0318609s, 27524 KB] Landmarks generation time: 0.0263506s
[t=0.0318726s, 27524 KB] Discovered 123 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0318814s, 27524 KB] 659 edges
[t=0.0318905s, 27524 KB] Landmark graph generation time: 0.0263887s
[t=0.0318991s, 27524 KB] Landmark graph contains 123 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0319069s, 27524 KB] Landmark graph contains 659 orderings.
[t=0.0324021s, 27524 KB] Simplifying 5778 unary operators... done! [4374 unary operators]
[t=0.0337925s, 27524 KB] time to simplify: 0.00148111s
[t=0.0339697s, 27524 KB] Initializing additive heuristic...
[t=0.0339866s, 27524 KB] Initializing FF heuristic...
[t=0.0340375s, 27524 KB] Building successor generator...done!
[t=0.0342949s, 27524 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0343033s, 27524 KB] time for successor generation creation: 0.000222984s
[t=0.0343165s, 27524 KB] Variables: 55
[t=0.0343244s, 27524 KB] FactPairs: 812
[t=0.0343326s, 27524 KB] Bytes per state: 24
[t=0.0344228s, 27524 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0344557s, 27524 KB] 55 initial landmarks, 23 goal landmarks
[t=0.034519s, 27524 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 68
[t=0.0345297s, 27524 KB] New best heuristic value for ff(transform = adapt_costs(one)): 50
[t=0.0345384s, 27524 KB] g=0, 1 evaluated, 0 expanded
[t=0.0345523s, 27524 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 68
[t=0.0345612s, 27524 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 50
[t=0.0347935s, 27524 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 67
[t=0.0348033s, 27524 KB] New best heuristic value for ff(transform = adapt_costs(one)): 49
[t=0.0348116s, 27524 KB] g=2, 7 evaluated, 6 expanded
[t=0.0350899s, 27524 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 66
[t=0.0351004s, 27524 KB] g=4, 14 evaluated, 13 expanded
[t=0.0352472s, 27524 KB] New best heuristic value for ff(transform = adapt_costs(one)): 48
[t=0.0352563s, 27524 KB] g=4, 18 evaluated, 17 expanded
[t=0.0357857s, 27524 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 65
[t=0.0357955s, 27524 KB] g=6, 33 evaluated, 32 expanded
[t=0.0362194s, 27524 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 64
[t=0.036229s, 27524 KB] g=8, 45 evaluated, 44 expanded
[t=0.0364761s, 27524 KB] New best heuristic value for ff(transform = adapt_costs(one)): 47
[t=0.036485s, 27524 KB] g=8, 52 evaluated, 51 expanded
[t=0.0367994s, 27524 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 63
[t=0.036809s, 27524 KB] g=10, 61 evaluated, 60 expanded
[t=0.0371291s, 27524 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 62
[t=0.0371404s, 27524 KB] g=11, 70 evaluated, 69 expanded
[t=0.0376729s, 27524 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 61
[t=0.0376833s, 27524 KB] g=13, 85 evaluated, 84 expanded
[t=0.0377285s, 27524 KB] New best heuristic value for ff(transform = adapt_costs(one)): 46
[t=0.0377369s, 27524 KB] g=14, 86 evaluated, 85 expanded
[t=0.0382624s, 27524 KB] New best heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0382893s, 27524 KB] g=16, 101 evaluated, 100 expanded
[t=0.0385121s, 27524 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 58
[t=0.0385213s, 27524 KB] g=16, 107 evaluated, 106 expanded
[t=0.0393126s, 27524 KB] New best heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.0393317s, 27524 KB] g=20, 128 evaluated, 127 expanded
[t=0.0394625s, 27524 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 57
[t=0.0394747s, 27524 KB] g=18, 131 evaluated, 130 expanded
[t=0.0399458s, 27524 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0399615s, 27524 KB] g=22, 144 evaluated, 143 expanded
[t=0.0403872s, 27524 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0404017s, 27524 KB] g=20, 156 evaluated, 155 expanded
[t=0.0405565s, 27524 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0405833s, 27524 KB] g=24, 160 evaluated, 159 expanded
[t=0.0411078s, 27524 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0411204s, 27524 KB] g=26, 175 evaluated, 174 expanded
[t=0.041355s, 27524 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0413649s, 27524 KB] g=22, 181 evaluated, 180 expanded
[t=0.041687s, 27524 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0416986s, 27524 KB] g=23, 190 evaluated, 189 expanded
[t=0.0428538s, 27524 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.042874s, 27524 KB] g=26, 223 evaluated, 222 expanded
[t=0.0435385s, 27524 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0435544s, 27524 KB] g=32, 241 evaluated, 240 expanded
[t=0.0439123s, 27524 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0439238s, 27524 KB] g=34, 251 evaluated, 250 expanded
[t=0.0441592s, 27524 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0441701s, 27524 KB] g=28, 257 evaluated, 256 expanded
[t=0.0453017s, 27524 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0453145s, 27524 KB] g=30, 289 evaluated, 288 expanded
[t=0.0457923s, 27524 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0458026s, 27524 KB] g=40, 302 evaluated, 301 expanded
[t=0.0460885s, 27524 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0460995s, 27524 KB] g=42, 310 evaluated, 309 expanded
[t=0.0471574s, 27524 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0471733s, 27524 KB] g=48, 339 evaluated, 338 expanded
[t=0.0476918s, 27524 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0477019s, 27524 KB] g=50, 354 evaluated, 353 expanded
[t=0.0480532s, 27524 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0480624s, 27524 KB] g=52, 364 evaluated, 363 expanded
[t=0.0482105s, 27524 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0482196s, 27524 KB] g=32, 368 evaluated, 367 expanded
[t=0.0485369s, 27524 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0485464s, 27524 KB] g=54, 377 evaluated, 376 expanded
[t=0.0489694s, 27524 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0489789s, 27524 KB] g=56, 389 evaluated, 388 expanded
[t=0.0501547s, 27524 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0501708s, 27524 KB] g=60, 423 evaluated, 422 expanded
[t=0.0505255s, 27524 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0505359s, 27524 KB] g=62, 433 evaluated, 432 expanded
[t=0.055712s, 27524 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.055735s, 27524 KB] g=74, 580 evaluated, 579 expanded
[t=0.0567623s, 27524 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0567752s, 27524 KB] g=78, 609 evaluated, 608 expanded
[t=0.0571529s, 27524 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0571831s, 27524 KB] g=80, 617 evaluated, 616 expanded
[t=0.0755565s, 27524 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.075662s, 27524 KB] g=114, 1139 evaluated, 1138 expanded
[t=0.0758634s, 27524 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0758738s, 27524 KB] g=116, 1144 evaluated, 1143 expanded
[t=0.0761087s, 27524 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0761186s, 27524 KB] g=118, 1151 evaluated, 1150 expanded
[t=0.0762765s, 27524 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0762858s, 27524 KB] g=120, 1156 evaluated, 1155 expanded
[t=0.0764774s, 27524 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0764897s, 27524 KB] g=122, 1162 evaluated, 1161 expanded
[t=0.0767116s, 27524 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0767229s, 27524 KB] g=124, 1169 evaluated, 1168 expanded
[t=0.0768775s, 27524 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.076888s, 27524 KB] g=126, 1174 evaluated, 1173 expanded
[t=0.0771629s, 27524 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0771774s, 27524 KB] g=130, 1184 evaluated, 1183 expanded
[t=0.0772645s, 27524 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0772757s, 27524 KB] g=132, 1187 evaluated, 1186 expanded
[t=0.0794275s, 27524 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0794608s, 27524 KB] g=148, 1259 evaluated, 1258 expanded
[t=0.0800757s, 27524 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0800874s, 27524 KB] g=156, 1281 evaluated, 1280 expanded
[t=0.0801604s, 27524 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0801703s, 27524 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0801782s, 27524 KB] g=160, 1285 evaluated, 1284 expanded
[t=0.0801979s, 27524 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0802065s, 27524 KB] g=161, 1286 evaluated, 1285 expanded
[t=0.0802246s, 27524 KB] Solution found!
[t=0.080239s, 27524 KB] Actual search time: 0.0457807s
unstack b11 b1 (1)
put-down b11 (1)
pick-up b24 (1)
stack b24 b16 (1)
unstack b12 b6 (1)
put-down b12 (1)
pick-up b18 (1)
stack b18 b6 (1)
unstack b1 b14 (1)
put-down b1 (1)
unstack b14 b3 (1)
put-down b14 (1)
unstack b3 b26 (1)
stack b3 b18 (1)
unstack b26 b10 (1)
stack b26 b14 (1)
unstack b10 b25 (1)
put-down b10 (1)
unstack b25 b13 (1)
put-down b25 (1)
unstack b13 b27 (1)
put-down b13 (1)
pick-up b10 (1)
stack b10 b13 (1)
pick-up b12 (1)
stack b12 b27 (1)
unstack b24 b16 (1)
put-down b24 (1)
unstack b16 b23 (1)
stack b16 b3 (1)
pick-up b1 (1)
stack b1 b23 (1)
pick-up b24 (1)
stack b24 b16 (1)
unstack b1 b23 (1)
put-down b1 (1)
unstack b23 b19 (1)
stack b23 b26 (1)
pick-up b1 (1)
stack b1 b23 (1)
unstack b19 b22 (1)
stack b19 b24 (1)
unstack b22 b4 (1)
put-down b22 (1)
unstack b4 b8 (1)
put-down b4 (1)
unstack b8 b7 (1)
stack b8 b10 (1)
unstack b7 b21 (1)
stack b7 b19 (1)
unstack b21 b9 (1)
stack b21 b7 (1)
pick-up b4 (1)
stack b4 b21 (1)
pick-up b9 (1)
stack b9 b25 (1)
unstack b12 b27 (1)
put-down b12 (1)
pick-up b27 (1)
stack b27 b8 (1)
pick-up b12 (1)
stack b12 b27 (1)
unstack b1 b23 (1)
put-down b1 (1)
unstack b23 b26 (1)
put-down b23 (1)
pick-up b1 (1)
stack b1 b23 (1)
unstack b26 b14 (1)
put-down b26 (1)
pick-up b14 (1)
stack b14 b9 (1)
pick-up b26 (1)
stack b26 b14 (1)
unstack b1 b23 (1)
put-down b1 (1)
pick-up b23 (1)
stack b23 b26 (1)
pick-up b1 (1)
stack b1 b23 (1)
unstack b4 b21 (1)
put-down b4 (1)
unstack b21 b7 (1)
put-down b21 (1)
pick-up b4 (1)
stack b4 b21 (1)
unstack b7 b19 (1)
put-down b7 (1)
unstack b19 b24 (1)
put-down b19 (1)
unstack b24 b16 (1)
put-down b24 (1)
pick-up b19 (1)
stack b19 b24 (1)
pick-up b7 (1)
stack b7 b19 (1)
unstack b4 b21 (1)
put-down b4 (1)
pick-up b21 (1)
stack b21 b7 (1)
pick-up b4 (1)
stack b4 b21 (1)
unstack b16 b3 (1)
put-down b16 (1)
unstack b3 b18 (1)
put-down b3 (1)
pick-up b16 (1)
stack b16 b3 (1)
unstack b18 b6 (1)
put-down b18 (1)
unstack b6 b5 (1)
stack b6 b11 (1)
pick-up b18 (1)
stack b18 b6 (1)
unstack b5 b2 (1)
stack b5 b12 (1)
unstack b2 b17 (1)
put-down b2 (1)
unstack b17 b20 (1)
stack b17 b1 (1)
unstack b20 b15 (1)
stack b20 b17 (1)
pick-up b15 (1)
stack b15 b5 (1)
pick-up b22 (1)
stack b22 b15 (1)
unstack b16 b3 (1)
put-down b16 (1)
pick-up b3 (1)
stack b3 b18 (1)
pick-up b16 (1)
stack b16 b3 (1)
unstack b4 b21 (1)
put-down b4 (1)
unstack b21 b7 (1)
put-down b21 (1)
unstack b7 b19 (1)
put-down b7 (1)
pick-up b21 (1)
stack b21 b7 (1)
pick-up b4 (1)
stack b4 b21 (1)
unstack b19 b24 (1)
put-down b19 (1)
pick-up b24 (1)
stack b24 b16 (1)
pick-up b19 (1)
stack b19 b24 (1)
unstack b4 b21 (1)
put-down b4 (1)
unstack b21 b7 (1)
put-down b21 (1)
pick-up b4 (1)
stack b4 b21 (1)
pick-up b7 (1)
stack b7 b19 (1)
unstack b4 b21 (1)
put-down b4 (1)
pick-up b21 (1)
stack b21 b7 (1)
pick-up b4 (1)
stack b4 b21 (1)
[t=0.0802491s, 27524 KB] Plan length: 162 step(s).
[t=0.0802491s, 27524 KB] Plan cost: 162
[t=0.0802491s, 27524 KB] Expanded 1286 state(s).
[t=0.0802491s, 27524 KB] Reopened 0 state(s).
[t=0.0802491s, 27524 KB] Evaluated 1287 state(s).
[t=0.0802491s, 27524 KB] Evaluations: 2574
[t=0.0802491s, 27524 KB] Generated 16001 state(s).
[t=0.0802491s, 27524 KB] Dead ends: 0 state(s).
[t=0.0802491s, 27524 KB] Number of registered states: 1287
[t=0.0802491s, 27524 KB] Int hash set load factor: 1287/2048 = 0.628418
[t=0.0802491s, 27524 KB] Int hash set resizes: 11
[t=0.0802491s, 27524 KB] Search time: 0.0458267s
[t=0.0802491s, 27524 KB] Total time: 0.0802491s
Solution found.
Peak memory: 27524 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.26s
