INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_24/bws_problem_24_71.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.030s CPU, 0.017s wall-clock]
1898 relevant atoms
1272 auxiliary atoms
3170 final queue length
5526 total queue pushes
Completing instantiation... [0.020s CPU, 0.023s wall-clock]
Instantiating: [0.050s CPU, 0.042s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.010s CPU, 0.000s wall-clock]
Choosing groups...
25 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.007s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.029s wall-clock]
1704 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
48 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.025s wall-clock]
Reordering and filtering variables...
49 of 49 variables necessary.
25 of 49 mutex groups necessary.
1152 of 1152 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.007s wall-clock]
Translator variables: 49
Translator derived variables: 0
Translator facts: 650
Translator goal facts: 20
Translator mutex groups: 25
Translator total mutex groups size: 625
Translator operators: 1152
Translator axioms: 0
Translator task size: 9912
Translator peak memory: 37884 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.130s CPU, 0.122s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=3.2136e-05s, 24488 KB] reading input...
[t=0.00335162s, 25532 KB] done reading input!
[t=0.00426495s, 25928 KB] Initializing landmark count heuristic...
[t=0.00429407s, 25928 KB] Generating landmark graph...
[t=0.00436576s, 25928 KB] Building a landmark graph with reasonable orders.
[t=0.00444029s, 26060 KB] Initializing Exploration...
[t=0.00478772s, 26388 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0181852s, 26920 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0182753s, 26920 KB] Landmarks generation time: 0.0139242s
[t=0.0183036s, 26920 KB] Discovered 105 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0183192s, 26920 KB] 538 edges
[t=0.0183295s, 26920 KB] approx. reasonable orders
[t=0.0219891s, 26920 KB] approx. obedient reasonable orders
[t=0.0221725s, 26920 KB] Removed 3 reasonable or obedient reasonable orders
[t=0.0221836s, 26920 KB] Landmarks generation time: 0.0178881s
[t=0.022195s, 26920 KB] Discovered 105 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0222031s, 26920 KB] 632 edges
[t=0.0222284s, 26920 KB] Landmark graph generation time: 0.017941s
[t=0.0222364s, 26920 KB] Landmark graph contains 105 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0222446s, 26920 KB] Landmark graph contains 632 orderings.
[t=0.0228531s, 26920 KB] Simplifying 4560 unary operators... done! [3456 unary operators]
[t=0.0241093s, 26920 KB] time to simplify: 0.00135147s
[t=0.0243025s, 26920 KB] Initializing additive heuristic...
[t=0.0243265s, 26920 KB] Initializing FF heuristic...
[t=0.0244733s, 26920 KB] Building successor generator...done!
[t=0.0247714s, 26920 KB] peak memory difference for successor generator creation: 0 KB
[t=0.024782s, 26920 KB] time for successor generation creation: 0.000244148s
[t=0.0248071s, 26920 KB] Variables: 49
[t=0.0248161s, 26920 KB] FactPairs: 650
[t=0.0248241s, 26920 KB] Bytes per state: 20
[t=0.0250442s, 26920 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0250979s, 26920 KB] 46 initial landmarks, 20 goal landmarks
[t=0.0252042s, 26920 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.0252181s, 26920 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0252271s, 26920 KB] g=0, 1 evaluated, 0 expanded
[t=0.0252444s, 26920 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.0252532s, 26920 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0254252s, 26920 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0255063s, 26920 KB] g=2, 6 evaluated, 5 expanded
[t=0.0255617s, 26920 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 58
[t=0.0255811s, 26920 KB] g=2, 7 evaluated, 6 expanded
[t=0.0256808s, 26920 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 57
[t=0.02569s, 26920 KB] g=3, 10 evaluated, 9 expanded
[t=0.0260958s, 26920 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0261064s, 26920 KB] g=6, 23 evaluated, 22 expanded
[t=0.0265434s, 26920 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0265534s, 26920 KB] g=8, 38 evaluated, 37 expanded
[t=0.0266831s, 26920 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0266928s, 26920 KB] g=6, 42 evaluated, 41 expanded
[t=0.0269876s, 26920 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0269981s, 26920 KB] g=10, 52 evaluated, 51 expanded
[t=0.0274079s, 26920 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0274187s, 26920 KB] g=12, 66 evaluated, 65 expanded
[t=0.0277801s, 26920 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0277975s, 26920 KB] g=10, 78 evaluated, 77 expanded
[t=0.0279293s, 26920 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0279398s, 26920 KB] g=14, 82 evaluated, 81 expanded
[t=0.0283215s, 26920 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0283319s, 26920 KB] g=12, 95 evaluated, 94 expanded
[t=0.0286749s, 26920 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0286873s, 26920 KB] g=14, 106 evaluated, 105 expanded
[t=0.029126s, 26920 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.029138s, 26920 KB] g=16, 121 evaluated, 120 expanded
[t=0.029234s, 26920 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0292434s, 26920 KB] g=18, 124 evaluated, 123 expanded
[t=0.0296414s, 26920 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0296551s, 26920 KB] g=18, 137 evaluated, 136 expanded
[t=0.0298817s, 26920 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0298931s, 26920 KB] g=20, 145 evaluated, 144 expanded
[t=0.0302286s, 26920 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.030248s, 26920 KB] g=22, 156 evaluated, 155 expanded
[t=0.0305745s, 26920 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0305884s, 26920 KB] g=22, 167 evaluated, 166 expanded
[t=0.0312961s, 26920 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0313126s, 26920 KB] g=24, 191 evaluated, 190 expanded
[t=0.0319848s, 26920 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0319949s, 26920 KB] g=26, 214 evaluated, 213 expanded
[t=0.0320395s, 26920 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0320485s, 26920 KB] g=30, 215 evaluated, 214 expanded
[t=0.0327596s, 26920 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0327792s, 26920 KB] g=28, 239 evaluated, 238 expanded
[t=0.0330256s, 26920 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0330369s, 26920 KB] g=32, 247 evaluated, 246 expanded
[t=0.0336146s, 26920 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0336274s, 26920 KB] g=30, 265 evaluated, 264 expanded
[t=0.0342869s, 26920 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0342977s, 26920 KB] g=32, 287 evaluated, 286 expanded
[t=0.0349434s, 26920 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0349542s, 26920 KB] g=38, 309 evaluated, 308 expanded
[t=0.0353396s, 26920 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0353498s, 26920 KB] g=40, 322 evaluated, 321 expanded
[t=0.0357236s, 26920 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0357335s, 26920 KB] g=42, 335 evaluated, 334 expanded
[t=0.0364675s, 26920 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0364782s, 26920 KB] g=46, 361 evaluated, 360 expanded
[t=0.0380999s, 26920 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0381187s, 26920 KB] g=52, 418 evaluated, 417 expanded
[t=0.038415s, 26920 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0384262s, 26920 KB] g=54, 428 evaluated, 427 expanded
[t=0.0387749s, 26920 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.038785s, 26920 KB] g=56, 440 evaluated, 439 expanded
[t=0.0390219s, 26920 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0390313s, 26920 KB] g=56, 448 evaluated, 447 expanded
[t=0.0393172s, 26920 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.039327s, 26920 KB] g=58, 458 evaluated, 457 expanded
[t=0.0412441s, 26920 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0412796s, 26920 KB] g=38, 524 evaluated, 523 expanded
[t=0.0431733s, 26920 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0431919s, 26920 KB] g=72, 592 evaluated, 591 expanded
[t=0.0530504s, 26920 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0530747s, 26920 KB] g=86, 965 evaluated, 964 expanded
[t=0.0533133s, 26920 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0533232s, 26920 KB] g=88, 974 evaluated, 973 expanded
[t=0.0542514s, 26920 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0542648s, 26920 KB] g=92, 1010 evaluated, 1009 expanded
[t=0.0544689s, 26920 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.054479s, 26920 KB] g=94, 1018 evaluated, 1017 expanded
[t=0.0557207s, 26920 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0557331s, 26920 KB] g=102, 1067 evaluated, 1066 expanded
[t=0.0562093s, 26920 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0562276s, 26920 KB] g=106, 1087 evaluated, 1086 expanded
[t=0.0563717s, 26920 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0563862s, 26920 KB] g=108, 1093 evaluated, 1092 expanded
[t=0.0572544s, 26920 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0572761s, 26920 KB] g=120, 1130 evaluated, 1129 expanded
[t=0.0574951s, 26920 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0575061s, 26920 KB] g=124, 1140 evaluated, 1139 expanded
[t=0.0575242s, 26920 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0575325s, 26920 KB] g=125, 1141 evaluated, 1140 expanded
[t=0.0575743s, 26920 KB] Solution found!
[t=0.057593s, 26920 KB] Actual search time: 0.0324893s
unstack b14 b17 (1)
stack b14 b5 (1)
unstack b17 b10 (1)
put-down b17 (1)
unstack b10 b20 (1)
stack b10 b23 (1)
unstack b20 b13 (1)
put-down b20 (1)
unstack b13 b11 (1)
put-down b13 (1)
unstack b24 b4 (1)
stack b24 b13 (1)
unstack b4 b18 (1)
put-down b4 (1)
pick-up b17 (1)
stack b17 b4 (1)
pick-up b20 (1)
stack b20 b18 (1)
unstack b11 b16 (1)
put-down b11 (1)
unstack b16 b12 (1)
stack b16 b24 (1)
unstack b12 b6 (1)
put-down b12 (1)
unstack b6 b22 (1)
put-down b6 (1)
unstack b22 b19 (1)
put-down b22 (1)
pick-up b19 (1)
stack b19 b14 (1)
pick-up b11 (1)
stack b11 b19 (1)
unstack b20 b18 (1)
put-down b20 (1)
unstack b18 b15 (1)
stack b18 b22 (1)
unstack b15 b9 (1)
stack b15 b16 (1)
pick-up b20 (1)
stack b20 b18 (1)
pick-up b6 (1)
stack b6 b15 (1)
unstack b9 b2 (1)
put-down b9 (1)
unstack b2 b1 (1)
stack b2 b11 (1)
unstack b10 b23 (1)
put-down b10 (1)
unstack b23 b8 (1)
stack b23 b9 (1)
pick-up b10 (1)
stack b10 b23 (1)
unstack b8 b7 (1)
stack b8 b6 (1)
pick-up b7 (1)
stack b7 b8 (1)
pick-up b12 (1)
stack b12 b7 (1)
unstack b20 b18 (1)
put-down b20 (1)
unstack b18 b22 (1)
put-down b18 (1)
pick-up b20 (1)
stack b20 b18 (1)
unstack b2 b11 (1)
put-down b2 (1)
pick-up b22 (1)
stack b22 b2 (1)
unstack b20 b18 (1)
put-down b20 (1)
pick-up b18 (1)
stack b18 b22 (1)
pick-up b20 (1)
stack b20 b18 (1)
unstack b11 b19 (1)
put-down b11 (1)
unstack b19 b14 (1)
put-down b19 (1)
pick-up b11 (1)
stack b11 b19 (1)
unstack b14 b5 (1)
put-down b14 (1)
unstack b5 b3 (1)
stack b5 b1 (1)
pick-up b14 (1)
stack b14 b5 (1)
pick-up b3 (1)
stack b3 b12 (1)
unstack b11 b19 (1)
put-down b11 (1)
pick-up b19 (1)
stack b19 b14 (1)
pick-up b11 (1)
stack b11 b19 (1)
unstack b10 b23 (1)
put-down b10 (1)
unstack b23 b9 (1)
put-down b23 (1)
pick-up b10 (1)
stack b10 b23 (1)
pick-up b9 (1)
stack b9 b3 (1)
unstack b10 b23 (1)
put-down b10 (1)
pick-up b23 (1)
stack b23 b9 (1)
pick-up b10 (1)
stack b10 b23 (1)
unstack b20 b18 (1)
put-down b20 (1)
unstack b18 b22 (1)
put-down b18 (1)
pick-up b20 (1)
stack b20 b18 (1)
unstack b22 b2 (1)
put-down b22 (1)
pick-up b2 (1)
stack b2 b11 (1)
pick-up b22 (1)
stack b22 b2 (1)
unstack b20 b18 (1)
put-down b20 (1)
pick-up b18 (1)
stack b18 b22 (1)
pick-up b20 (1)
stack b20 b18 (1)
[t=0.0576025s, 26920 KB] Plan length: 126 step(s).
[t=0.0576025s, 26920 KB] Plan cost: 126
[t=0.0576025s, 26920 KB] Expanded 1142 state(s).
[t=0.0576025s, 26920 KB] Reopened 0 state(s).
[t=0.0576025s, 26920 KB] Evaluated 1143 state(s).
[t=0.0576025s, 26920 KB] Evaluations: 2286
[t=0.0576025s, 26920 KB] Generated 12382 state(s).
[t=0.0576025s, 26920 KB] Dead ends: 0 state(s).
[t=0.0576025s, 26920 KB] Number of registered states: 1143
[t=0.0576025s, 26920 KB] Int hash set load factor: 1143/2048 = 0.558105
[t=0.0576025s, 26920 KB] Int hash set resizes: 11
[t=0.0576025s, 26920 KB] Search time: 0.0325601s
[t=0.0576025s, 26920 KB] Total time: 0.0576025s
Solution found.
Peak memory: 26920 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.23s
