INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_30/bws_problem_30_75.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.018s wall-clock]
2912 relevant atoms
1950 auxiliary atoms
4862 final queue length
8528 total queue pushes
Completing instantiation... [0.040s CPU, 0.032s wall-clock]
Instantiating: [0.050s CPU, 0.053s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.002s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
31 uncovered facts
Choosing groups: [0.000s CPU, 0.002s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.010s CPU, 0.011s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.001s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.002s wall-clock]
Translating task: [0.050s CPU, 0.056s wall-clock]
2670 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
60 propositions removed
Detecting unreachable propositions: [0.030s CPU, 0.025s wall-clock]
Reordering and filtering variables...
61 of 61 variables necessary.
31 of 61 mutex groups necessary.
1800 of 1800 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.013s wall-clock]
Translator variables: 61
Translator derived variables: 0
Translator facts: 992
Translator goal facts: 25
Translator mutex groups: 31
Translator total mutex groups size: 961
Translator operators: 1800
Translator axioms: 0
Translator task size: 15449
Translator peak memory: 41336 KB
Writing output... [0.010s CPU, 0.009s wall-clock]
Done! [0.160s CPU, 0.173s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=3.1703e-05s, 24488 KB] reading input...
[t=0.00514921s, 26364 KB] done reading input!
[t=0.0059951s, 26760 KB] Initializing landmark count heuristic...
[t=0.00602391s, 26760 KB] Generating landmark graph...
[t=0.00611803s, 26892 KB] Building a landmark graph with reasonable orders.
[t=0.00621083s, 27024 KB] Initializing Exploration...
[t=0.00685389s, 27316 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0330911s, 28240 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0332081s, 28240 KB] Landmarks generation time: 0.0270986s
[t=0.0332319s, 28240 KB] Discovered 132 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0332496s, 28240 KB] 633 edges
[t=0.03326s, 28240 KB] approx. reasonable orders
[t=0.0373856s, 28240 KB] approx. obedient reasonable orders
[t=0.0374343s, 28240 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0374454s, 28240 KB] Landmarks generation time: 0.031419s
[t=0.0374558s, 28240 KB] Discovered 132 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0374644s, 28240 KB] 674 edges
[t=0.0374732s, 28240 KB] Landmark graph generation time: 0.0314564s
[t=0.0374819s, 28240 KB] Landmark graph contains 132 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0374903s, 28240 KB] Landmark graph contains 674 orderings.
[t=0.0381766s, 28268 KB] Simplifying 7140 unary operators... done! [5400 unary operators]
[t=0.0402924s, 28268 KB] time to simplify: 0.00226598s
[t=0.0405529s, 28268 KB] Initializing additive heuristic...
[t=0.0405752s, 28268 KB] Initializing FF heuristic...
[t=0.0406875s, 28268 KB] Building successor generator...done!
[t=0.041181s, 28268 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0411938s, 28268 KB] time for successor generation creation: 0.000423959s
[t=0.0412307s, 28268 KB] Variables: 61
[t=0.0412393s, 28268 KB] FactPairs: 992
[t=0.0412477s, 28268 KB] Bytes per state: 24
[t=0.0415088s, 28268 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0415588s, 28268 KB] 60 initial landmarks, 25 goal landmarks
[t=0.0416949s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 72
[t=0.0417078s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 53
[t=0.0417167s, 28268 KB] g=0, 1 evaluated, 0 expanded
[t=0.0417352s, 28268 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 72
[t=0.041746s, 28268 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 53
[t=0.0421267s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 52
[t=0.0421385s, 28268 KB] g=2, 9 evaluated, 8 expanded
[t=0.042193s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 71
[t=0.042202s, 28268 KB] g=2, 10 evaluated, 9 expanded
[t=0.042766s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 69
[t=0.0427784s, 28268 KB] g=4, 23 evaluated, 22 expanded
[t=0.0433359s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 68
[t=0.0433526s, 28268 KB] g=6, 36 evaluated, 35 expanded
[t=0.0438649s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 51
[t=0.0438836s, 28268 KB] g=8, 47 evaluated, 46 expanded
[t=0.0439825s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 67
[t=0.0440078s, 28268 KB] g=8, 49 evaluated, 48 expanded
[t=0.0445738s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 50
[t=0.0445888s, 28268 KB] g=10, 62 evaluated, 61 expanded
[t=0.0448092s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 66
[t=0.0448197s, 28268 KB] g=10, 67 evaluated, 66 expanded
[t=0.0453615s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 65
[t=0.0453791s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 49
[t=0.0453883s, 28268 KB] g=12, 80 evaluated, 79 expanded
[t=0.0457156s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 64
[t=0.0457289s, 28268 KB] g=14, 87 evaluated, 86 expanded
[t=0.0458288s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 62
[t=0.0458589s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 48
[t=0.045869s, 28268 KB] g=14, 89 evaluated, 88 expanded
[t=0.0462164s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 61
[t=0.0462293s, 28268 KB] g=16, 96 evaluated, 95 expanded
[t=0.0463847s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 47
[t=0.0463949s, 28268 KB] g=16, 99 evaluated, 98 expanded
[t=0.0468326s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 60
[t=0.0468485s, 28268 KB] g=18, 109 evaluated, 108 expanded
[t=0.0472882s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.0473035s, 28268 KB] g=20, 119 evaluated, 118 expanded
[t=0.0479913s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 58
[t=0.0480016s, 28268 KB] g=22, 135 evaluated, 134 expanded
[t=0.048809s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 57
[t=0.0488244s, 28268 KB] g=24, 154 evaluated, 153 expanded
[t=0.0499679s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 46
[t=0.0499962s, 28268 KB] g=24, 174 evaluated, 173 expanded
[t=0.0500675s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.050078s, 28268 KB] g=26, 175 evaluated, 174 expanded
[t=0.0508719s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0508821s, 28268 KB] g=26, 194 evaluated, 193 expanded
[t=0.0511786s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0511923s, 28268 KB] g=28, 201 evaluated, 200 expanded
[t=0.0519199s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.0519309s, 28268 KB] g=28, 218 evaluated, 217 expanded
[t=0.0523876s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0523982s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0524064s, 28268 KB] g=30, 229 evaluated, 228 expanded
[t=0.0527705s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0527802s, 28268 KB] g=32, 238 evaluated, 237 expanded
[t=0.0528712s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0528808s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.052889s, 28268 KB] g=32, 240 evaluated, 239 expanded
[t=0.0532139s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0532233s, 28268 KB] g=34, 248 evaluated, 247 expanded
[t=0.0537142s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0537279s, 28268 KB] g=36, 259 evaluated, 258 expanded
[t=0.0541182s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0541285s, 28268 KB] g=38, 268 evaluated, 267 expanded
[t=0.0550251s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0550355s, 28268 KB] g=40, 290 evaluated, 289 expanded
[t=0.0561306s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0561695s, 28268 KB] g=42, 315 evaluated, 314 expanded
[t=0.0568352s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.056847s, 28268 KB] g=44, 331 evaluated, 330 expanded
[t=0.0570596s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0570697s, 28268 KB] g=44, 336 evaluated, 335 expanded
[t=0.0575516s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0575626s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0575721s, 28268 KB] g=46, 348 evaluated, 347 expanded
[t=0.0582713s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0582877s, 28268 KB] g=49, 365 evaluated, 364 expanded
[t=0.0587183s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0587298s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0587381s, 28268 KB] g=52, 375 evaluated, 374 expanded
[t=0.0592486s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.059275s, 28268 KB] g=54, 384 evaluated, 383 expanded
[t=0.0593355s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0593457s, 28268 KB] g=54, 385 evaluated, 384 expanded
[t=0.0599938s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0600096s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0600183s, 28268 KB] g=56, 399 evaluated, 398 expanded
[t=0.0602422s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0602525s, 28268 KB] g=57, 404 evaluated, 403 expanded
[t=0.0603136s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0603232s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0603318s, 28268 KB] g=58, 405 evaluated, 404 expanded
[t=0.0606852s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.060698s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0607066s, 28268 KB] g=60, 413 evaluated, 412 expanded
[t=0.0610071s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0610206s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0610296s, 28268 KB] g=62, 420 evaluated, 419 expanded
[t=0.0610852s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0610945s, 28268 KB] g=63, 421 evaluated, 420 expanded
[t=0.0611503s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0611595s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0611722s, 28268 KB] g=64, 422 evaluated, 421 expanded
[t=0.0615425s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0615576s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0615665s, 28268 KB] g=66, 430 evaluated, 429 expanded
[t=0.0619037s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0619383s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0619494s, 28268 KB] g=68, 437 evaluated, 436 expanded
[t=0.0621704s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0621821s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.062191s, 28268 KB] g=70, 442 evaluated, 441 expanded
[t=0.0654925s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0655331s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0655433s, 28268 KB] g=78, 521 evaluated, 520 expanded
[t=0.0657936s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0658088s, 28268 KB] g=78, 526 evaluated, 525 expanded
[t=0.066187s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0661994s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0662095s, 28268 KB] g=80, 535 evaluated, 534 expanded
[t=0.0687917s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0688064s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0688166s, 28268 KB] g=94, 598 evaluated, 597 expanded
[t=0.119351s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.119505s, 28268 KB] g=122, 1847 evaluated, 1846 expanded
[t=0.11979s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.119802s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.119811s, 28268 KB] g=124, 1853 evaluated, 1852 expanded
[t=0.120081s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.120092s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.1201s, 28268 KB] g=126, 1859 evaluated, 1858 expanded
[t=0.12033s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.12034s, 28268 KB] g=126, 1864 evaluated, 1863 expanded
[t=0.120631s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.120641s, 28268 KB] g=129, 1871 evaluated, 1870 expanded
[t=0.120731s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.12074s, 28268 KB] g=130, 1873 evaluated, 1872 expanded
[t=0.120794s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.120803s, 28268 KB] g=128, 1874 evaluated, 1873 expanded
[t=0.121082s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.121091s, 28268 KB] g=132, 1881 evaluated, 1880 expanded
[t=0.122274s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.122287s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.122296s, 28268 KB] g=134, 1911 evaluated, 1910 expanded
[t=0.12298s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.122991s, 28268 KB] g=142, 1928 evaluated, 1927 expanded
[t=0.123343s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.123353s, 28268 KB] g=146, 1937 evaluated, 1936 expanded
[t=0.123475s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.123494s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.123503s, 28268 KB] g=148, 1940 evaluated, 1939 expanded
[t=0.131266s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.131301s, 28268 KB] g=182, 2172 evaluated, 2171 expanded
[t=0.131569s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.131582s, 28268 KB] g=186, 2181 evaluated, 2180 expanded
[t=0.131674s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.131685s, 28268 KB] g=188, 2184 evaluated, 2183 expanded
[t=0.132608s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.132622s, 28268 KB] g=204, 2221 evaluated, 2220 expanded
[t=0.132851s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.132862s, 28268 KB] g=212, 2232 evaluated, 2231 expanded
[t=0.132884s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.132894s, 28268 KB] g=213, 2233 evaluated, 2232 expanded
[t=0.132912s, 28268 KB] Solution found!
[t=0.132929s, 28268 KB] Actual search time: 0.0913661s
unstack b22 b30 (1)
put-down b22 (1)
unstack b26 b17 (1)
stack b26 b30 (1)
unstack b17 b21 (1)
put-down b17 (1)
unstack b21 b10 (1)
stack b21 b9 (1)
unstack b10 b28 (1)
put-down b10 (1)
pick-up b18 (1)
stack b18 b26 (1)
unstack b28 b19 (1)
stack b28 b18 (1)
unstack b19 b2 (1)
put-down b19 (1)
pick-up b22 (1)
stack b22 b19 (1)
unstack b2 b13 (1)
put-down b2 (1)
unstack b13 b16 (1)
put-down b13 (1)
unstack b16 b23 (1)
put-down b16 (1)
unstack b23 b29 (1)
put-down b23 (1)
unstack b29 b3 (1)
stack b29 b28 (1)
unstack b3 b8 (1)
put-down b3 (1)
pick-up b2 (1)
stack b2 b3 (1)
unstack b21 b9 (1)
put-down b21 (1)
unstack b22 b19 (1)
put-down b22 (1)
unstack b9 b27 (1)
put-down b9 (1)
pick-up b19 (1)
stack b19 b29 (1)
pick-up b22 (1)
stack b22 b19 (1)
pick-up b27 (1)
stack b27 b21 (1)
pick-up b17 (1)
stack b17 b27 (1)
unstack b24 b7 (1)
put-down b24 (1)
unstack b7 b4 (1)
put-down b7 (1)
unstack b4 b15 (1)
stack b4 b16 (1)
unstack b15 b14 (1)
stack b15 b24 (1)
unstack b14 b25 (1)
stack b14 b22 (1)
unstack b25 b5 (1)
stack b25 b20 (1)
pick-up b13 (1)
stack b13 b15 (1)
unstack b5 b12 (1)
stack b5 b8 (1)
unstack b12 b6 (1)
stack b12 b4 (1)
pick-up b6 (1)
stack b6 b2 (1)
pick-up b7 (1)
stack b7 b14 (1)
pick-up b9 (1)
stack b9 b5 (1)
unstack b17 b27 (1)
put-down b17 (1)
unstack b27 b21 (1)
put-down b27 (1)
pick-up b21 (1)
stack b21 b9 (1)
pick-up b27 (1)
stack b27 b21 (1)
pick-up b17 (1)
stack b17 b27 (1)
unstack b7 b14 (1)
put-down b7 (1)
unstack b14 b22 (1)
put-down b14 (1)
unstack b22 b19 (1)
put-down b22 (1)
pick-up b14 (1)
stack b14 b22 (1)
pick-up b7 (1)
stack b7 b14 (1)
unstack b13 b15 (1)
put-down b13 (1)
unstack b15 b24 (1)
put-down b15 (1)
pick-up b13 (1)
stack b13 b15 (1)
pick-up b24 (1)
stack b24 b7 (1)
unstack b13 b15 (1)
put-down b13 (1)
pick-up b15 (1)
stack b15 b24 (1)
pick-up b13 (1)
stack b13 b15 (1)
unstack b19 b29 (1)
put-down b19 (1)
unstack b29 b28 (1)
put-down b29 (1)
unstack b28 b18 (1)
put-down b28 (1)
pick-up b29 (1)
stack b29 b28 (1)
pick-up b19 (1)
stack b19 b29 (1)
unstack b18 b26 (1)
put-down b18 (1)
unstack b26 b30 (1)
put-down b26 (1)
unstack b30 b11 (1)
stack b30 b17 (1)
unstack b11 b1 (1)
stack b11 b13 (1)
pick-up b1 (1)
stack b1 b23 (1)
pick-up b26 (1)
stack b26 b30 (1)
pick-up b18 (1)
stack b18 b26 (1)
unstack b25 b20 (1)
put-down b25 (1)
pick-up b20 (1)
stack b20 b11 (1)
pick-up b25 (1)
stack b25 b20 (1)
unstack b19 b29 (1)
put-down b19 (1)
unstack b29 b28 (1)
put-down b29 (1)
pick-up b19 (1)
stack b19 b29 (1)
pick-up b28 (1)
stack b28 b18 (1)
unstack b19 b29 (1)
put-down b19 (1)
pick-up b29 (1)
stack b29 b28 (1)
pick-up b19 (1)
stack b19 b29 (1)
unstack b25 b20 (1)
put-down b25 (1)
unstack b20 b11 (1)
put-down b20 (1)
pick-up b25 (1)
stack b25 b20 (1)
unstack b11 b13 (1)
put-down b11 (1)
unstack b13 b15 (1)
put-down b13 (1)
unstack b15 b24 (1)
put-down b15 (1)
pick-up b13 (1)
stack b13 b15 (1)
pick-up b11 (1)
stack b11 b13 (1)
unstack b25 b20 (1)
put-down b25 (1)
pick-up b20 (1)
stack b20 b11 (1)
pick-up b25 (1)
stack b25 b20 (1)
unstack b24 b7 (1)
put-down b24 (1)
unstack b7 b14 (1)
put-down b7 (1)
pick-up b24 (1)
stack b24 b7 (1)
unstack b14 b22 (1)
put-down b14 (1)
pick-up b22 (1)
stack b22 b19 (1)
pick-up b14 (1)
stack b14 b22 (1)
unstack b24 b7 (1)
put-down b24 (1)
pick-up b7 (1)
stack b7 b14 (1)
pick-up b24 (1)
stack b24 b7 (1)
unstack b25 b20 (1)
put-down b25 (1)
unstack b20 b11 (1)
put-down b20 (1)
unstack b11 b13 (1)
put-down b11 (1)
pick-up b20 (1)
stack b20 b11 (1)
pick-up b25 (1)
stack b25 b20 (1)
unstack b13 b15 (1)
put-down b13 (1)
pick-up b15 (1)
stack b15 b24 (1)
pick-up b13 (1)
stack b13 b15 (1)
unstack b25 b20 (1)
put-down b25 (1)
unstack b20 b11 (1)
put-down b20 (1)
pick-up b11 (1)
stack b11 b13 (1)
pick-up b20 (1)
stack b20 b11 (1)
pick-up b25 (1)
stack b25 b20 (1)
[t=0.132941s, 28268 KB] Plan length: 214 step(s).
[t=0.132941s, 28268 KB] Plan cost: 214
[t=0.132941s, 28268 KB] Expanded 2233 state(s).
[t=0.132941s, 28268 KB] Reopened 0 state(s).
[t=0.132941s, 28268 KB] Evaluated 2234 state(s).
[t=0.132941s, 28268 KB] Evaluations: 4468
[t=0.132941s, 28268 KB] Generated 24357 state(s).
[t=0.132941s, 28268 KB] Dead ends: 0 state(s).
[t=0.132941s, 28268 KB] Number of registered states: 2234
[t=0.132941s, 28268 KB] Int hash set load factor: 2234/4096 = 0.54541
[t=0.132941s, 28268 KB] Int hash set resizes: 12
[t=0.132941s, 28268 KB] Search time: 0.0914329s
[t=0.132941s, 28268 KB] Total time: 0.132941s
Solution found.
Peak memory: 28268 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.36s
