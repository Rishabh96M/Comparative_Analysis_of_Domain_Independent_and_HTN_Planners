INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_21/bws_problem_21_10.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.009s wall-clock]
1472 relevant atoms
987 auxiliary atoms
2459 final queue length
4271 total queue pushes
Completing instantiation... [0.020s CPU, 0.015s wall-clock]
Instantiating: [0.030s CPU, 0.026s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
22 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.006s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.010s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.022s wall-clock]
1302 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
42 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.011s wall-clock]
Reordering and filtering variables...
43 of 43 variables necessary.
22 of 43 mutex groups necessary.
882 of 882 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.005s wall-clock]
Translator variables: 43
Translator derived variables: 0
Translator facts: 506
Translator goal facts: 15
Translator mutex groups: 22
Translator total mutex groups size: 484
Translator operators: 882
Translator axioms: 0
Translator task size: 7600
Translator peak memory: 36460 KB
Writing output... [0.010s CPU, 0.004s wall-clock]
Done! [0.080s CPU, 0.078s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=1.9717e-05s, 24488 KB] reading input...
[t=0.00245774s, 25268 KB] done reading input!
[t=0.00389473s, 25664 KB] Initializing landmark count heuristic...
[t=0.00404582s, 25664 KB] Generating landmark graph...
[t=0.0041244s, 25664 KB] Building a landmark graph with reasonable orders.
[t=0.00419142s, 25664 KB] Initializing Exploration...
[t=0.00454374s, 25852 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0128428s, 26248 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0130499s, 26248 KB] Landmarks generation time: 0.00892698s
[t=0.0130669s, 26248 KB] Discovered 86 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0130971s, 26248 KB] 256 edges
[t=0.0131084s, 26248 KB] approx. reasonable orders
[t=0.0149382s, 26248 KB] approx. obedient reasonable orders
[t=0.0149736s, 26248 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0149837s, 26248 KB] Landmarks generation time: 0.0109337s
[t=0.0149941s, 26248 KB] Discovered 86 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0150024s, 26248 KB] 288 edges
[t=0.0150127s, 26248 KB] Landmark graph generation time: 0.0109743s
[t=0.0150217s, 26248 KB] Landmark graph contains 86 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0150319s, 26248 KB] Landmark graph contains 288 orderings.
[t=0.0154638s, 26248 KB] Simplifying 3486 unary operators... done! [2646 unary operators]
[t=0.0163654s, 26380 KB] time to simplify: 0.00096937s
[t=0.016484s, 26380 KB] Initializing additive heuristic...
[t=0.016499s, 26380 KB] Initializing FF heuristic...
[t=0.0165624s, 26380 KB] Building successor generator...done!
[t=0.0167567s, 26380 KB] peak memory difference for successor generator creation: 0 KB
[t=0.016768s, 26380 KB] time for successor generation creation: 0.000160199s
[t=0.0167906s, 26380 KB] Variables: 43
[t=0.0168069s, 26380 KB] FactPairs: 506
[t=0.0168215s, 26380 KB] Bytes per state: 16
[t=0.0170091s, 26380 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0170629s, 26380 KB] 43 initial landmarks, 15 goal landmarks
[t=0.0171293s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0171404s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0171497s, 26380 KB] g=0, 1 evaluated, 0 expanded
[t=0.0171655s, 26380 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0171763s, 26380 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0172771s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0172901s, 26380 KB] g=1, 4 evaluated, 3 expanded
[t=0.0174834s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0174986s, 26380 KB] g=2, 11 evaluated, 10 expanded
[t=0.0175997s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0176097s, 26380 KB] g=3, 15 evaluated, 14 expanded
[t=0.0176422s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0176527s, 26380 KB] g=4, 16 evaluated, 15 expanded
[t=0.0179418s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.017959s, 26380 KB] g=6, 27 evaluated, 26 expanded
[t=0.0180617s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0180717s, 26380 KB] g=7, 31 evaluated, 30 expanded
[t=0.0182864s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0183022s, 26380 KB] g=8, 39 evaluated, 38 expanded
[t=0.0183681s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0183806s, 26380 KB] g=9, 41 evaluated, 40 expanded
[t=0.0185805s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.018598s, 26380 KB] g=11, 48 evaluated, 47 expanded
[t=0.0186572s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.018668s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0186763s, 26380 KB] g=12, 50 evaluated, 49 expanded
[t=0.0188711s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0188904s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0189s, 26380 KB] g=14, 58 evaluated, 57 expanded
[t=0.0191049s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0191163s, 26380 KB] g=16, 66 evaluated, 65 expanded
[t=0.0191748s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0191846s, 26380 KB] g=16, 68 evaluated, 67 expanded
[t=0.019377s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0193896s, 26380 KB] g=18, 76 evaluated, 75 expanded
[t=0.0197091s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0197218s, 26380 KB] g=20, 89 evaluated, 88 expanded
[t=0.0197561s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.019766s, 26380 KB] g=18, 90 evaluated, 89 expanded
[t=0.019973s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0199847s, 26380 KB] g=19, 98 evaluated, 97 expanded
[t=0.0201124s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0201227s, 26380 KB] g=22, 103 evaluated, 102 expanded
[t=0.0203611s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0203711s, 26380 KB] g=24, 113 evaluated, 112 expanded
[t=0.0204733s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0204847s, 26380 KB] g=25, 117 evaluated, 116 expanded
[t=0.0206326s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0206422s, 26380 KB] g=26, 123 evaluated, 122 expanded
[t=0.0208593s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0208693s, 26380 KB] g=28, 132 evaluated, 131 expanded
[t=0.0209035s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0209137s, 26380 KB] g=28, 133 evaluated, 132 expanded
[t=0.0211475s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0211571s, 26380 KB] g=30, 143 evaluated, 142 expanded
[t=0.0212583s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.021268s, 26380 KB] g=31, 147 evaluated, 146 expanded
[t=0.0214374s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0214485s, 26380 KB] g=33, 154 evaluated, 153 expanded
[t=0.021719s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0217307s, 26380 KB] g=36, 165 evaluated, 164 expanded
[t=0.0220519s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0220658s, 26380 KB] g=34, 179 evaluated, 178 expanded
[t=0.0221677s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0221831s, 26380 KB] g=35, 183 evaluated, 182 expanded
[t=0.0222608s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0222719s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0222806s, 26380 KB] g=36, 186 evaluated, 185 expanded
[t=0.0223394s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.022351s, 26380 KB] g=37, 188 evaluated, 187 expanded
[t=0.0225442s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0225626s, 26380 KB] g=40, 196 evaluated, 195 expanded
[t=0.0227513s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0227616s, 26380 KB] g=42, 204 evaluated, 203 expanded
[t=0.022908s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0229194s, 26380 KB] g=40, 210 evaluated, 209 expanded
[t=0.0229755s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0229856s, 26380 KB] g=41, 212 evaluated, 211 expanded
[t=0.0230187s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0230277s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0230362s, 26380 KB] g=42, 213 evaluated, 212 expanded
[t=0.0231182s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0231288s, 26380 KB] g=43, 216 evaluated, 215 expanded
[t=0.0232024s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0232121s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0232203s, 26380 KB] g=44, 219 evaluated, 218 expanded
[t=0.0232731s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0232836s, 26380 KB] g=45, 221 evaluated, 220 expanded
[t=0.0233979s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0234093s, 26380 KB] g=46, 226 evaluated, 225 expanded
[t=0.0235401s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0235549s, 26380 KB] g=48, 232 evaluated, 231 expanded
[t=0.0236072s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0236179s, 26380 KB] g=48, 234 evaluated, 233 expanded
[t=0.0239765s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.024007s, 26380 KB] g=50, 248 evaluated, 247 expanded
[t=0.0244789s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0244952s, 26380 KB] g=56, 272 evaluated, 271 expanded
[t=0.0246678s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0246798s, 26380 KB] g=56, 281 evaluated, 280 expanded
[t=0.0248619s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0248732s, 26380 KB] g=59, 290 evaluated, 289 expanded
[t=0.0249746s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.024986s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0249954s, 26380 KB] g=60, 295 evaluated, 294 expanded
[t=0.0250446s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0250539s, 26380 KB] g=61, 297 evaluated, 296 expanded
[t=0.0250841s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0250942s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0251025s, 26380 KB] g=62, 298 evaluated, 297 expanded
[t=0.0251291s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0251382s, 26380 KB] g=63, 299 evaluated, 298 expanded
[t=0.0251966s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0252155s, 26380 KB] g=66, 302 evaluated, 301 expanded
[t=0.0253095s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0253205s, 26380 KB] g=68, 307 evaluated, 306 expanded
[t=0.0253577s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0253684s, 26380 KB] g=69, 309 evaluated, 308 expanded
[t=0.0253998s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0254115s, 26380 KB] g=70, 310 evaluated, 309 expanded
[t=0.0254354s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0254448s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.025453s, 26380 KB] g=70, 311 evaluated, 310 expanded
[t=0.0254707s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0254795s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0254882s, 26380 KB] g=71, 312 evaluated, 311 expanded
[t=0.0255047s, 26380 KB] Solution found!
[t=0.0255162s, 26380 KB] Actual search time: 0.0084481s
unstack b1 b5 (1)
put-down b1 (1)
unstack b14 b4 (1)
stack b14 b5 (1)
unstack b7 b13 (1)
put-down b7 (1)
unstack b13 b2 (1)
put-down b13 (1)
unstack b14 b5 (1)
put-down b14 (1)
unstack b2 b16 (1)
stack b2 b7 (1)
unstack b16 b18 (1)
put-down b16 (1)
pick-up b14 (1)
stack b14 b5 (1)
unstack b18 b15 (1)
put-down b18 (1)
unstack b15 b12 (1)
put-down b15 (1)
pick-up b12 (1)
stack b12 b9 (1)
unstack b19 b8 (1)
stack b19 b15 (1)
unstack b21 b20 (1)
stack b21 b4 (1)
unstack b20 b6 (1)
stack b20 b21 (1)
pick-up b8 (1)
stack b8 b18 (1)
unstack b14 b5 (1)
put-down b14 (1)
pick-up b5 (1)
stack b5 b19 (1)
pick-up b14 (1)
stack b14 b5 (1)
unstack b6 b17 (1)
put-down b6 (1)
unstack b17 b10 (1)
stack b17 b13 (1)
unstack b10 b11 (1)
stack b10 b8 (1)
unstack b11 b3 (1)
stack b11 b16 (1)
pick-up b3 (1)
stack b3 b12 (1)
pick-up b6 (1)
stack b6 b17 (1)
unstack b20 b21 (1)
put-down b20 (1)
unstack b21 b4 (1)
put-down b21 (1)
pick-up b20 (1)
stack b20 b21 (1)
pick-up b4 (1)
stack b4 b1 (1)
unstack b20 b21 (1)
put-down b20 (1)
pick-up b21 (1)
stack b21 b4 (1)
pick-up b20 (1)
stack b20 b21 (1)
unstack b3 b12 (1)
put-down b3 (1)
unstack b12 b9 (1)
put-down b12 (1)
pick-up b9 (1)
stack b9 b11 (1)
pick-up b12 (1)
stack b12 b9 (1)
pick-up b3 (1)
stack b3 b12 (1)
[t=0.0255263s, 26380 KB] Plan length: 72 step(s).
[t=0.0255263s, 26380 KB] Plan cost: 72
[t=0.0255263s, 26380 KB] Expanded 312 state(s).
[t=0.0255263s, 26380 KB] Reopened 0 state(s).
[t=0.0255263s, 26380 KB] Evaluated 313 state(s).
[t=0.0255263s, 26380 KB] Evaluations: 626
[t=0.0255263s, 26380 KB] Generated 3356 state(s).
[t=0.0255263s, 26380 KB] Dead ends: 0 state(s).
[t=0.0255263s, 26380 KB] Number of registered states: 313
[t=0.0255263s, 26380 KB] Int hash set load factor: 313/512 = 0.611328
[t=0.0255263s, 26380 KB] Int hash set resizes: 9
[t=0.0255263s, 26380 KB] Search time: 0.00851824s
[t=0.0255263s, 26380 KB] Total time: 0.0255263s
Solution found.
Peak memory: 26380 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.16s
