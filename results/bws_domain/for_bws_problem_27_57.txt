INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_27/bws_problem_27_57.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.000s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.015s wall-clock]
2378 relevant atoms
1593 auxiliary atoms
3971 final queue length
6947 total queue pushes
Completing instantiation... [0.020s CPU, 0.024s wall-clock]
Instantiating: [0.050s CPU, 0.041s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.002s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
28 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.010s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.001s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.002s wall-clock]
Translating task: [0.040s CPU, 0.045s wall-clock]
2160 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
54 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.018s wall-clock]
Reordering and filtering variables...
55 of 55 variables necessary.
28 of 55 mutex groups necessary.
1458 of 1458 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.012s wall-clock]
Translator variables: 55
Translator derived variables: 0
Translator facts: 812
Translator goal facts: 19
Translator mutex groups: 28
Translator total mutex groups size: 784
Translator operators: 1458
Translator axioms: 0
Translator task size: 12524
Translator peak memory: 39544 KB
Writing output... [0.000s CPU, 0.008s wall-clock]
Done! [0.140s CPU, 0.141s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.0647e-05s, 24488 KB] reading input...
[t=0.00413567s, 25936 KB] done reading input!
[t=0.00508271s, 26332 KB] Initializing landmark count heuristic...
[t=0.00514009s, 26332 KB] Generating landmark graph...
[t=0.00523307s, 26332 KB] Building a landmark graph with reasonable orders.
[t=0.0053077s, 26464 KB] Initializing Exploration...
[t=0.00577888s, 26732 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0238428s, 27392 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0240411s, 27392 KB] Landmarks generation time: 0.018821s
[t=0.0240675s, 27392 KB] Discovered 112 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0240901s, 27392 KB] 518 edges
[t=0.0241s, 27392 KB] approx. reasonable orders
[t=0.0286408s, 27392 KB] approx. obedient reasonable orders
[t=0.0289228s, 27392 KB] Removed 4 reasonable or obedient reasonable orders
[t=0.0289568s, 27392 KB] Landmarks generation time: 0.0238153s
[t=0.0289681s, 27392 KB] Discovered 112 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0289773s, 27392 KB] 597 edges
[t=0.0289865s, 27392 KB] Landmark graph generation time: 0.0238538s
[t=0.0289955s, 27392 KB] Landmark graph contains 112 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0290038s, 27392 KB] Landmark graph contains 597 orderings.
[t=0.0297519s, 27468 KB] Simplifying 5778 unary operators... done! [4374 unary operators]
[t=0.031207s, 27600 KB] time to simplify: 0.00155288s
[t=0.0313964s, 27600 KB] Initializing additive heuristic...
[t=0.031415s, 27600 KB] Initializing FF heuristic...
[t=0.0314739s, 27600 KB] Building successor generator...done!
[t=0.0317682s, 27600 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0317767s, 27600 KB] time for successor generation creation: 0.000259259s
[t=0.031791s, 27600 KB] Variables: 55
[t=0.0317993s, 27600 KB] FactPairs: 812
[t=0.0318071s, 27600 KB] Bytes per state: 24
[t=0.0319158s, 27600 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0319593s, 27600 KB] 53 initial landmarks, 19 goal landmarks
[t=0.0320286s, 27600 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.0320389s, 27600 KB] New best heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.0320561s, 27600 KB] g=0, 1 evaluated, 0 expanded
[t=0.0320713s, 27600 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.0320797s, 27600 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.0321723s, 27600 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 58
[t=0.0321824s, 27600 KB] g=1, 3 evaluated, 2 expanded
[t=0.0323998s, 27600 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 57
[t=0.0324093s, 27600 KB] g=3, 9 evaluated, 8 expanded
[t=0.0325239s, 27600 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0325362s, 27600 KB] g=2, 12 evaluated, 11 expanded
[t=0.0330205s, 27600 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0330342s, 27600 KB] g=4, 25 evaluated, 24 expanded
[t=0.0331124s, 27600 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0331217s, 27600 KB] g=5, 27 evaluated, 26 expanded
[t=0.0332623s, 27600 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.033271s, 27600 KB] g=7, 31 evaluated, 30 expanded
[t=0.0338329s, 27600 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0338417s, 27600 KB] g=10, 48 evaluated, 47 expanded
[t=0.0339186s, 27600 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0339274s, 27600 KB] g=10, 50 evaluated, 49 expanded
[t=0.0344552s, 27600 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0344642s, 27600 KB] g=12, 66 evaluated, 65 expanded
[t=0.0345085s, 27600 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0345176s, 27600 KB] g=12, 67 evaluated, 66 expanded
[t=0.035047s, 27600 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0350569s, 27600 KB] g=13, 83 evaluated, 82 expanded
[t=0.0352471s, 27600 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0352566s, 27600 KB] g=14, 88 evaluated, 87 expanded
[t=0.0357905s, 27600 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0357997s, 27600 KB] g=16, 104 evaluated, 103 expanded
[t=0.0358789s, 27600 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0358883s, 27600 KB] g=16, 106 evaluated, 105 expanded
[t=0.0364282s, 27600 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0364411s, 27600 KB] g=18, 122 evaluated, 121 expanded
[t=0.0366901s, 27600 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0366996s, 27600 KB] g=18, 129 evaluated, 128 expanded
[t=0.0374783s, 27600 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0374895s, 27600 KB] g=20, 152 evaluated, 151 expanded
[t=0.0381995s, 27600 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0382083s, 27600 KB] g=22, 173 evaluated, 172 expanded
[t=0.0384359s, 27600 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0384451s, 27600 KB] g=24, 180 evaluated, 179 expanded
[t=0.038643s, 27600 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0386521s, 27600 KB] g=25, 186 evaluated, 185 expanded
[t=0.0389448s, 27600 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0389546s, 27600 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0389655s, 27600 KB] g=28, 195 evaluated, 194 expanded
[t=0.0391946s, 27600 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0392033s, 27600 KB] g=30, 202 evaluated, 201 expanded
[t=0.0397535s, 27600 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0397633s, 27600 KB] g=32, 219 evaluated, 218 expanded
[t=0.0399332s, 27600 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0399418s, 27600 KB] g=30, 224 evaluated, 223 expanded
[t=0.0400151s, 27600 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0400234s, 27600 KB] g=31, 226 evaluated, 225 expanded
[t=0.0405301s, 27600 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0405398s, 27600 KB] g=34, 241 evaluated, 240 expanded
[t=0.0406185s, 27600 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0406271s, 27600 KB] g=34, 243 evaluated, 242 expanded
[t=0.0410744s, 27600 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0410866s, 27600 KB] g=36, 256 evaluated, 255 expanded
[t=0.0413372s, 27600 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0413466s, 27600 KB] g=36, 263 evaluated, 262 expanded
[t=0.0415773s, 27600 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.041586s, 27600 KB] g=38, 270 evaluated, 269 expanded
[t=0.042049s, 27600 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0420579s, 27600 KB] g=40, 284 evaluated, 283 expanded
[t=0.0421341s, 27600 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0421431s, 27600 KB] g=38, 286 evaluated, 285 expanded
[t=0.0426432s, 27600 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0426553s, 27600 KB] g=42, 301 evaluated, 300 expanded
[t=0.0429851s, 27600 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0429939s, 27600 KB] g=40, 311 evaluated, 310 expanded
[t=0.0430414s, 27600 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0430502s, 27600 KB] g=44, 312 evaluated, 311 expanded
[t=0.0435886s, 27600 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0435975s, 27600 KB] g=46, 328 evaluated, 327 expanded
[t=0.0439627s, 27600 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.043972s, 27600 KB] g=48, 339 evaluated, 338 expanded
[t=0.044051s, 27600 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0440598s, 27600 KB] g=42, 341 evaluated, 340 expanded
[t=0.0445219s, 27600 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0445314s, 27600 KB] g=50, 354 evaluated, 353 expanded
[t=0.044926s, 27600 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0449383s, 27600 KB] g=52, 365 evaluated, 364 expanded
[t=0.0453159s, 27600 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.045328s, 27600 KB] g=44, 375 evaluated, 374 expanded
[t=0.0473001s, 27600 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0473253s, 27600 KB] g=56, 431 evaluated, 430 expanded
[t=0.0477297s, 27600 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.04774s, 27600 KB] g=58, 443 evaluated, 442 expanded
[t=0.049584s, 27600 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0496121s, 27600 KB] g=50, 497 evaluated, 496 expanded
[t=0.0497687s, 27600 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0497788s, 27600 KB] g=64, 501 evaluated, 500 expanded
[t=0.0503916s, 27600 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0504073s, 27600 KB] g=52, 519 evaluated, 518 expanded
[t=0.0512477s, 27600 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0512938s, 27600 KB] g=64, 536 evaluated, 535 expanded
[t=0.0517124s, 27600 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0517447s, 27600 KB] g=54, 545 evaluated, 544 expanded
[t=0.0525438s, 27600 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0525608s, 27600 KB] g=68, 568 evaluated, 567 expanded
[t=0.0527669s, 27600 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.052776s, 27600 KB] g=70, 574 evaluated, 573 expanded
[t=0.0544835s, 27600 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0545009s, 27600 KB] g=78, 626 evaluated, 625 expanded
[t=0.0552015s, 27600 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0552159s, 27600 KB] g=82, 647 evaluated, 646 expanded
[t=0.055428s, 27600 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0554374s, 27600 KB] g=84, 653 evaluated, 652 expanded
[t=0.0578018s, 27600 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0578204s, 27600 KB] g=100, 725 evaluated, 724 expanded
[t=0.0580369s, 27600 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0580484s, 27600 KB] g=56, 732 evaluated, 731 expanded
[t=0.0584294s, 27600 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0584438s, 27600 KB] g=57, 744 evaluated, 743 expanded
[t=0.0585741s, 27600 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0585956s, 27600 KB] g=108, 748 evaluated, 747 expanded
[t=0.0588703s, 27600 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0588805s, 27600 KB] g=112, 758 evaluated, 757 expanded
[t=0.0589314s, 27600 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.05894s, 27600 KB] g=113, 760 evaluated, 759 expanded
[t=0.0589869s, 27600 KB] Solution found!
[t=0.059002s, 27600 KB] Actual search time: 0.0270401s
unstack b3 b15 (1)
put-down b3 (1)
unstack b15 b5 (1)
put-down b15 (1)
unstack b17 b26 (1)
put-down b17 (1)
unstack b18 b22 (1)
put-down b18 (1)
unstack b22 b24 (1)
stack b22 b4 (1)
unstack b5 b2 (1)
stack b5 b21 (1)
unstack b6 b1 (1)
stack b6 b22 (1)
unstack b1 b7 (1)
put-down b1 (1)
pick-up b2 (1)
stack b2 b1 (1)
unstack b7 b19 (1)
put-down b7 (1)
pick-up b24 (1)
stack b24 b19 (1)
unstack b26 b9 (1)
put-down b26 (1)
unstack b9 b10 (1)
put-down b9 (1)
unstack b10 b14 (1)
put-down b10 (1)
pick-up b18 (1)
stack b18 b10 (1)
unstack b14 b12 (1)
put-down b14 (1)
unstack b12 b11 (1)
stack b12 b7 (1)
unstack b11 b13 (1)
stack b11 b6 (1)
unstack b13 b20 (1)
stack b13 b26 (1)
unstack b20 b16 (1)
put-down b20 (1)
pick-up b14 (1)
stack b14 b13 (1)
unstack b16 b27 (1)
stack b16 b15 (1)
unstack b27 b8 (1)
stack b27 b11 (1)
unstack b8 b23 (1)
put-down b8 (1)
pick-up b17 (1)
stack b17 b23 (1)
pick-up b9 (1)
stack b9 b20 (1)
unstack b12 b7 (1)
put-down b12 (1)
pick-up b7 (1)
stack b7 b16 (1)
pick-up b12 (1)
stack b12 b7 (1)
unstack b5 b21 (1)
put-down b5 (1)
pick-up b21 (1)
stack b21 b2 (1)
pick-up b5 (1)
stack b5 b21 (1)
unstack b17 b23 (1)
put-down b17 (1)
unstack b23 b25 (1)
stack b23 b5 (1)
pick-up b17 (1)
stack b17 b23 (1)
unstack b14 b13 (1)
put-down b14 (1)
unstack b13 b26 (1)
put-down b13 (1)
pick-up b14 (1)
stack b14 b13 (1)
pick-up b26 (1)
stack b26 b25 (1)
unstack b14 b13 (1)
put-down b14 (1)
pick-up b13 (1)
stack b13 b26 (1)
pick-up b14 (1)
stack b14 b13 (1)
unstack b27 b11 (1)
put-down b27 (1)
unstack b11 b6 (1)
put-down b11 (1)
unstack b6 b22 (1)
put-down b6 (1)
pick-up b11 (1)
stack b11 b6 (1)
pick-up b27 (1)
stack b27 b11 (1)
unstack b22 b4 (1)
put-down b22 (1)
pick-up b4 (1)
stack b4 b12 (1)
pick-up b22 (1)
stack b22 b4 (1)
unstack b27 b11 (1)
put-down b27 (1)
unstack b11 b6 (1)
put-down b11 (1)
pick-up b27 (1)
stack b27 b11 (1)
pick-up b6 (1)
stack b6 b22 (1)
unstack b27 b11 (1)
put-down b27 (1)
pick-up b11 (1)
stack b11 b6 (1)
pick-up b27 (1)
stack b27 b11 (1)
[t=0.0590127s, 27600 KB] Plan length: 114 step(s).
[t=0.0590127s, 27600 KB] Plan cost: 114
[t=0.0590127s, 27600 KB] Expanded 761 state(s).
[t=0.0590127s, 27600 KB] Reopened 0 state(s).
[t=0.0590127s, 27600 KB] Evaluated 762 state(s).
[t=0.0590127s, 27600 KB] Evaluations: 1524
[t=0.0590127s, 27600 KB] Generated 10061 state(s).
[t=0.0590127s, 27600 KB] Dead ends: 0 state(s).
[t=0.0590127s, 27600 KB] Number of registered states: 762
[t=0.0590127s, 27600 KB] Int hash set load factor: 762/1024 = 0.744141
[t=0.0590127s, 27600 KB] Int hash set resizes: 10
[t=0.0590127s, 27600 KB] Search time: 0.0270974s
[t=0.0590127s, 27600 KB] Total time: 0.0590127s
Solution found.
Peak memory: 27600 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.25s
