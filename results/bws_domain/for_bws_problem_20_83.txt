INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_20/bws_problem_20_83.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.008s wall-clock]
1342 relevant atoms
900 auxiliary atoms
2242 final queue length
3887 total queue pushes
Completing instantiation... [0.020s CPU, 0.014s wall-clock]
Instantiating: [0.030s CPU, 0.024s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
21 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.006s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.021s wall-clock]
1180 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
40 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.009s wall-clock]
Reordering and filtering variables...
41 of 41 variables necessary.
21 of 41 mutex groups necessary.
800 of 800 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.005s wall-clock]
Translator variables: 41
Translator derived variables: 0
Translator facts: 462
Translator goal facts: 14
Translator mutex groups: 21
Translator total mutex groups size: 441
Translator operators: 800
Translator axioms: 0
Translator task size: 6898
Translator peak memory: 35944 KB
Writing output... [0.000s CPU, 0.004s wall-clock]
Done! [0.070s CPU, 0.073s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.3096e-05s, 24488 KB] reading input...
[t=0.00238697s, 25180 KB] done reading input!
[t=0.00355079s, 25444 KB] Initializing landmark count heuristic...
[t=0.00363396s, 25444 KB] Generating landmark graph...
[t=0.00370341s, 25576 KB] Building a landmark graph with reasonable orders.
[t=0.00377249s, 25576 KB] Initializing Exploration...
[t=0.00407684s, 25744 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0110312s, 26140 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0111004s, 26140 KB] Landmarks generation time: 0.00739751s
[t=0.0111155s, 26140 KB] Discovered 79 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0111317s, 26140 KB] 237 edges
[t=0.0111418s, 26140 KB] approx. reasonable orders
[t=0.0113072s, 26140 KB] approx. obedient reasonable orders
[t=0.0113289s, 26140 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0113385s, 26140 KB] Landmarks generation time: 0.00770093s
[t=0.0113483s, 26140 KB] Discovered 79 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0113565s, 26140 KB] 241 edges
[t=0.0113659s, 26140 KB] Landmark graph generation time: 0.00773909s
[t=0.0113747s, 26140 KB] Landmark graph contains 79 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.011383s, 26140 KB] Landmark graph contains 241 orderings.
[t=0.0118476s, 26280 KB] Simplifying 3160 unary operators... done! [2400 unary operators]
[t=0.0126531s, 26280 KB] time to simplify: 0.000856783s
[t=0.0127557s, 26280 KB] Initializing additive heuristic...
[t=0.0127688s, 26280 KB] Initializing FF heuristic...
[t=0.0128173s, 26280 KB] Building successor generator...done!
[t=0.0129869s, 26280 KB] peak memory difference for successor generator creation: 0 KB
[t=0.012996s, 26280 KB] time for successor generation creation: 0.000138101s
[t=0.0130086s, 26280 KB] Variables: 41
[t=0.0130175s, 26280 KB] FactPairs: 462
[t=0.0130262s, 26280 KB] Bytes per state: 16
[t=0.0131145s, 26280 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0131565s, 26280 KB] 39 initial landmarks, 14 goal landmarks
[t=0.0132012s, 26280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0132105s, 26280 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0132199s, 26280 KB] g=0, 1 evaluated, 0 expanded
[t=0.0132343s, 26280 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0132431s, 26280 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0133859s, 26280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0133951s, 26280 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0134034s, 26280 KB] g=2, 7 evaluated, 6 expanded
[t=0.013536s, 26280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0135451s, 26280 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.013553s, 26280 KB] g=4, 13 evaluated, 12 expanded
[t=0.0136859s, 26280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0136948s, 26280 KB] g=6, 19 evaluated, 18 expanded
[t=0.0138217s, 26280 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0138311s, 26280 KB] g=6, 24 evaluated, 23 expanded
[t=0.0140295s, 26280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0140389s, 26280 KB] g=8, 33 evaluated, 32 expanded
[t=0.0142497s, 26280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.01426s, 26280 KB] g=10, 42 evaluated, 41 expanded
[t=0.0144004s, 26280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0144103s, 26280 KB] g=12, 48 evaluated, 47 expanded
[t=0.0146692s, 26280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0146814s, 26280 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0146924s, 26280 KB] g=14, 59 evaluated, 58 expanded
[t=0.0147665s, 26280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.014779s, 26280 KB] g=15, 62 evaluated, 61 expanded
[t=0.0148112s, 26280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.01482s, 26280 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0148283s, 26280 KB] g=16, 63 evaluated, 62 expanded
[t=0.0149888s, 26280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0149983s, 26280 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0150062s, 26280 KB] g=18, 70 evaluated, 69 expanded
[t=0.0151851s, 26280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0151942s, 26280 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0152022s, 26280 KB] g=20, 78 evaluated, 77 expanded
[t=0.0153819s, 26280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0153911s, 26280 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0153994s, 26280 KB] g=22, 86 evaluated, 85 expanded
[t=0.0155853s, 26280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0155957s, 26280 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.015604s, 26280 KB] g=24, 94 evaluated, 93 expanded
[t=0.0157749s, 26280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0157844s, 26280 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0157929s, 26280 KB] g=26, 101 evaluated, 100 expanded
[t=0.0159236s, 26280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0159326s, 26280 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0159404s, 26280 KB] g=28, 107 evaluated, 106 expanded
[t=0.0161904s, 26280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0161994s, 26280 KB] g=32, 119 evaluated, 118 expanded
[t=0.0163218s, 26280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0163309s, 26280 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0163399s, 26280 KB] g=34, 125 evaluated, 124 expanded
[t=0.0164522s, 26280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0164648s, 26280 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0164735s, 26280 KB] g=36, 130 evaluated, 129 expanded
[t=0.0165807s, 26280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0165897s, 26280 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.016598s, 26280 KB] g=38, 135 evaluated, 134 expanded
[t=0.0167161s, 26280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0167256s, 26280 KB] g=41, 141 evaluated, 140 expanded
[t=0.0167523s, 26280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0167618s, 26280 KB] g=42, 142 evaluated, 141 expanded
[t=0.0168393s, 26280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0168485s, 26280 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0168568s, 26280 KB] g=44, 146 evaluated, 145 expanded
[t=0.0169336s, 26280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0169453s, 26280 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0169548s, 26280 KB] g=46, 150 evaluated, 149 expanded
[t=0.0170813s, 26280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.017091s, 26280 KB] g=48, 157 evaluated, 156 expanded
[t=0.017159s, 26280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.017168s, 26280 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0171763s, 26280 KB] g=50, 161 evaluated, 160 expanded
[t=0.0172266s, 26280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0172353s, 26280 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0172435s, 26280 KB] g=52, 164 evaluated, 163 expanded
[t=0.0173029s, 26280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0173121s, 26280 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0173204s, 26280 KB] g=56, 168 evaluated, 167 expanded
[t=0.0173371s, 26280 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0173456s, 26280 KB] g=57, 169 evaluated, 168 expanded
[t=0.0173603s, 26280 KB] Solution found!
[t=0.0173701s, 26280 KB] Actual search time: 0.0042105s
unstack b10 b7 (1)
put-down b10 (1)
unstack b14 b6 (1)
put-down b14 (1)
unstack b7 b8 (1)
stack b7 b16 (1)
unstack b1 b3 (1)
put-down b1 (1)
unstack b6 b20 (1)
put-down b6 (1)
unstack b20 b13 (1)
put-down b20 (1)
unstack b13 b17 (1)
put-down b13 (1)
unstack b17 b9 (1)
stack b17 b1 (1)
unstack b9 b5 (1)
put-down b9 (1)
unstack b5 b19 (1)
stack b5 b10 (1)
unstack b19 b18 (1)
stack b19 b5 (1)
pick-up b18 (1)
stack b18 b13 (1)
pick-up b20 (1)
stack b20 b19 (1)
pick-up b6 (1)
stack b6 b9 (1)
unstack b11 b12 (1)
put-down b11 (1)
unstack b12 b2 (1)
put-down b12 (1)
pick-up b11 (1)
stack b11 b12 (1)
unstack b2 b15 (1)
stack b2 b20 (1)
pick-up b15 (1)
stack b15 b11 (1)
unstack b7 b16 (1)
put-down b7 (1)
unstack b16 b4 (1)
stack b16 b3 (1)
pick-up b4 (1)
stack b4 b6 (1)
unstack b16 b3 (1)
put-down b16 (1)
pick-up b3 (1)
stack b3 b4 (1)
pick-up b16 (1)
stack b16 b3 (1)
pick-up b7 (1)
stack b7 b16 (1)
unstack b17 b1 (1)
put-down b17 (1)
pick-up b1 (1)
stack b1 b2 (1)
pick-up b17 (1)
stack b17 b1 (1)
[t=0.0173794s, 26280 KB] Plan length: 58 step(s).
[t=0.0173794s, 26280 KB] Plan cost: 58
[t=0.0173794s, 26280 KB] Expanded 169 state(s).
[t=0.0173794s, 26280 KB] Reopened 0 state(s).
[t=0.0173794s, 26280 KB] Evaluated 170 state(s).
[t=0.0173794s, 26280 KB] Evaluations: 340
[t=0.0173794s, 26280 KB] Generated 1671 state(s).
[t=0.0173794s, 26280 KB] Dead ends: 0 state(s).
[t=0.0173794s, 26280 KB] Number of registered states: 170
[t=0.0173794s, 26280 KB] Int hash set load factor: 170/256 = 0.664062
[t=0.0173794s, 26280 KB] Int hash set resizes: 8
[t=0.0173794s, 26280 KB] Search time: 0.00426538s
[t=0.0173794s, 26280 KB] Total time: 0.0173794s
Solution found.
Peak memory: 26280 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.14s
