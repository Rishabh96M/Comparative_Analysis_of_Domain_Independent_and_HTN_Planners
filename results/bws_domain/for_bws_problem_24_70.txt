INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_24/bws_problem_24_70.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.012s wall-clock]
1898 relevant atoms
1272 auxiliary atoms
3170 final queue length
5529 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.034s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
25 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.007s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.029s wall-clock]
1704 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
48 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.021s wall-clock]
Reordering and filtering variables...
49 of 49 variables necessary.
25 of 49 mutex groups necessary.
1152 of 1152 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.007s wall-clock]
Translator variables: 49
Translator derived variables: 0
Translator facts: 650
Translator goal facts: 20
Translator mutex groups: 25
Translator total mutex groups size: 625
Translator operators: 1152
Translator axioms: 0
Translator task size: 9912
Translator peak memory: 37872 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.109s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.5927e-05s, 24488 KB] reading input...
[t=0.00337445s, 25532 KB] done reading input!
[t=0.00450782s, 25928 KB] Initializing landmark count heuristic...
[t=0.00453927s, 25928 KB] Generating landmark graph...
[t=0.00461577s, 25928 KB] Building a landmark graph with reasonable orders.
[t=0.00468083s, 26060 KB] Initializing Exploration...
[t=0.00505087s, 26388 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0178384s, 26784 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0180038s, 26784 KB] Landmarks generation time: 0.0133931s
[t=0.018022s, 26784 KB] Discovered 105 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.018044s, 26784 KB] 395 edges
[t=0.0180546s, 26784 KB] approx. reasonable orders
[t=0.0220859s, 26784 KB] approx. obedient reasonable orders
[t=0.022207s, 26784 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0222204s, 26784 KB] Landmarks generation time: 0.0176805s
[t=0.022232s, 26784 KB] Discovered 105 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0222411s, 26784 KB] 461 edges
[t=0.0222533s, 26784 KB] Landmark graph generation time: 0.0177212s
[t=0.0222622s, 26784 KB] Landmark graph contains 105 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.022272s, 26784 KB] Landmark graph contains 461 orderings.
[t=0.0230192s, 26784 KB] Simplifying 4560 unary operators... done! [3456 unary operators]
[t=0.0242454s, 26916 KB] time to simplify: 0.00131701s
[t=0.0244138s, 26916 KB] Initializing additive heuristic...
[t=0.0244295s, 26916 KB] Initializing FF heuristic...
[t=0.0245136s, 26916 KB] Building successor generator...done!
[t=0.0247512s, 26916 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0247606s, 26916 KB] time for successor generation creation: 0.000201335s
[t=0.0247734s, 26916 KB] Variables: 49
[t=0.0247815s, 26916 KB] FactPairs: 650
[t=0.0247896s, 26916 KB] Bytes per state: 20
[t=0.0248747s, 26916 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0249077s, 26916 KB] 48 initial landmarks, 20 goal landmarks
[t=0.0249638s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 57
[t=0.0249732s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0249815s, 26916 KB] g=0, 1 evaluated, 0 expanded
[t=0.0249955s, 26916 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 57
[t=0.0250047s, 26916 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0251639s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0251747s, 26916 KB] g=1, 6 evaluated, 5 expanded
[t=0.0253634s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0253724s, 26916 KB] g=2, 12 evaluated, 11 expanded
[t=0.0256295s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0256385s, 26916 KB] g=3, 21 evaluated, 20 expanded
[t=0.0258137s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0258226s, 26916 KB] g=4, 27 evaluated, 26 expanded
[t=0.0261402s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0261501s, 26916 KB] g=6, 38 evaluated, 37 expanded
[t=0.0263644s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0263736s, 26916 KB] g=6, 45 evaluated, 44 expanded
[t=0.026742s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0267512s, 26916 KB] g=8, 58 evaluated, 57 expanded
[t=0.0269017s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0269104s, 26916 KB] g=8, 63 evaluated, 62 expanded
[t=0.0273866s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0273978s, 26916 KB] g=10, 79 evaluated, 78 expanded
[t=0.0280679s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0280862s, 26916 KB] g=12, 102 evaluated, 101 expanded
[t=0.0284444s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.02846s, 26916 KB] g=13, 112 evaluated, 111 expanded
[t=0.0289842s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0289965s, 26916 KB] g=12, 129 evaluated, 128 expanded
[t=0.0294127s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0294248s, 26916 KB] g=16, 143 evaluated, 142 expanded
[t=0.0294673s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.029478s, 26916 KB] g=14, 144 evaluated, 143 expanded
[t=0.0304045s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.030429s, 26916 KB] g=18, 175 evaluated, 174 expanded
[t=0.0312325s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0312432s, 26916 KB] g=18, 203 evaluated, 202 expanded
[t=0.0320337s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0320465s, 26916 KB] g=20, 231 evaluated, 230 expanded
[t=0.0325035s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0325155s, 26916 KB] g=22, 246 evaluated, 245 expanded
[t=0.0329363s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0329466s, 26916 KB] g=24, 260 evaluated, 259 expanded
[t=0.0329852s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0329941s, 26916 KB] g=22, 261 evaluated, 260 expanded
[t=0.0334528s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0334627s, 26916 KB] g=26, 277 evaluated, 276 expanded
[t=0.0338931s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0339035s, 26916 KB] g=24, 292 evaluated, 291 expanded
[t=0.0340291s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0340389s, 26916 KB] g=28, 296 evaluated, 295 expanded
[t=0.0345578s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0345689s, 26916 KB] g=30, 314 evaluated, 313 expanded
[t=0.0349996s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0350119s, 26916 KB] g=26, 329 evaluated, 328 expanded
[t=0.0367046s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0367342s, 26916 KB] g=28, 388 evaluated, 387 expanded
[t=0.0375948s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0376068s, 26916 KB] g=30, 418 evaluated, 417 expanded
[t=0.0392559s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0392671s, 26916 KB] g=32, 475 evaluated, 474 expanded
[t=0.0406937s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0407072s, 26916 KB] g=34, 522 evaluated, 521 expanded
[t=0.0419876s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0419982s, 26916 KB] g=36, 569 evaluated, 568 expanded
[t=0.0431151s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0431284s, 26916 KB] g=38, 609 evaluated, 608 expanded
[t=0.0437809s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0437943s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0438027s, 26916 KB] g=40, 633 evaluated, 632 expanded
[t=0.0441736s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0441906s, 26916 KB] g=42, 647 evaluated, 646 expanded
[t=0.0442373s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0442554s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0442688s, 26916 KB] g=42, 648 evaluated, 647 expanded
[t=0.0446417s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0446578s, 26916 KB] g=44, 661 evaluated, 660 expanded
[t=0.0449634s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.044978s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.044986s, 26916 KB] g=44, 673 evaluated, 672 expanded
[t=0.0452851s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0452985s, 26916 KB] g=46, 685 evaluated, 684 expanded
[t=0.0457183s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0457308s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0457389s, 26916 KB] g=46, 701 evaluated, 700 expanded
[t=0.0459955s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0460055s, 26916 KB] g=48, 712 evaluated, 711 expanded
[t=0.0461612s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0461729s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0461808s, 26916 KB] g=48, 718 evaluated, 717 expanded
[t=0.0464066s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.046416s, 26916 KB] g=50, 728 evaluated, 727 expanded
[t=0.046764s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0467741s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.046782s, 26916 KB] g=50, 743 evaluated, 742 expanded
[t=0.0469823s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0469918s, 26916 KB] g=52, 752 evaluated, 751 expanded
[t=0.0473291s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0473397s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0473498s, 26916 KB] g=52, 767 evaluated, 766 expanded
[t=0.0475439s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0475537s, 26916 KB] g=54, 775 evaluated, 774 expanded
[t=0.047824s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0478334s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0478415s, 26916 KB] g=54, 787 evaluated, 786 expanded
[t=0.0479975s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0480067s, 26916 KB] g=56, 794 evaluated, 793 expanded
[t=0.0481572s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.048167s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0481752s, 26916 KB] g=56, 800 evaluated, 799 expanded
[t=0.0483168s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0483281s, 26916 KB] g=58, 806 evaluated, 805 expanded
[t=0.0483605s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0483693s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0483774s, 26916 KB] g=58, 807 evaluated, 806 expanded
[t=0.0484955s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0485049s, 26916 KB] g=60, 812 evaluated, 811 expanded
[t=0.0486669s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0486768s, 26916 KB] g=62, 820 evaluated, 819 expanded
[t=0.0487557s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.048765s, 26916 KB] g=64, 824 evaluated, 823 expanded
[t=0.0488566s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0488656s, 26916 KB] g=66, 828 evaluated, 827 expanded
[t=0.049209s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0492187s, 26916 KB] g=70, 846 evaluated, 845 expanded
[t=0.0493196s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0493286s, 26916 KB] g=74, 852 evaluated, 851 expanded
[t=0.049366s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0493748s, 26916 KB] g=75, 854 evaluated, 853 expanded
[t=0.0494062s, 26916 KB] Solution found!
[t=0.0494184s, 26916 KB] Actual search time: 0.0245083s
unstack b23 b15 (1)
put-down b23 (1)
unstack b22 b8 (1)
put-down b22 (1)
unstack b15 b14 (1)
put-down b15 (1)
unstack b5 b6 (1)
put-down b5 (1)
unstack b6 b11 (1)
put-down b6 (1)
unstack b11 b17 (1)
put-down b11 (1)
unstack b17 b4 (1)
put-down b17 (1)
unstack b4 b24 (1)
stack b4 b23 (1)
unstack b24 b7 (1)
put-down b24 (1)
unstack b14 b20 (1)
put-down b14 (1)
unstack b20 b16 (1)
put-down b20 (1)
unstack b16 b9 (1)
put-down b16 (1)
unstack b9 b13 (1)
put-down b9 (1)
unstack b13 b12 (1)
put-down b13 (1)
unstack b12 b18 (1)
put-down b12 (1)
pick-up b10 (1)
stack b10 b13 (1)
pick-up b18 (1)
stack b18 b4 (1)
pick-up b20 (1)
stack b20 b18 (1)
pick-up b15 (1)
stack b15 b20 (1)
pick-up b11 (1)
stack b11 b15 (1)
pick-up b17 (1)
stack b17 b11 (1)
pick-up b21 (1)
stack b21 b10 (1)
pick-up b5 (1)
stack b5 b21 (1)
pick-up b12 (1)
stack b12 b5 (1)
pick-up b8 (1)
stack b8 b14 (1)
pick-up b9 (1)
stack b9 b8 (1)
pick-up b6 (1)
stack b6 b9 (1)
pick-up b16 (1)
stack b16 b6 (1)
pick-up b22 (1)
stack b22 b16 (1)
unstack b1 b2 (1)
stack b1 b3 (1)
unstack b2 b19 (1)
stack b2 b12 (1)
pick-up b7 (1)
stack b7 b24 (1)
unstack b1 b3 (1)
put-down b1 (1)
pick-up b3 (1)
stack b3 b19 (1)
pick-up b1 (1)
stack b1 b3 (1)
unstack b7 b24 (1)
put-down b7 (1)
pick-up b24 (1)
stack b24 b1 (1)
pick-up b7 (1)
stack b7 b24 (1)
[t=0.0494277s, 26916 KB] Plan length: 76 step(s).
[t=0.0494277s, 26916 KB] Plan cost: 76
[t=0.0494277s, 26916 KB] Expanded 855 state(s).
[t=0.0494277s, 26916 KB] Reopened 0 state(s).
[t=0.0494277s, 26916 KB] Evaluated 856 state(s).
[t=0.0494277s, 26916 KB] Evaluations: 1712
[t=0.0494277s, 26916 KB] Generated 11085 state(s).
[t=0.0494277s, 26916 KB] Dead ends: 0 state(s).
[t=0.0494277s, 26916 KB] Number of registered states: 856
[t=0.0494277s, 26916 KB] Int hash set load factor: 856/1024 = 0.835938
[t=0.0494277s, 26916 KB] Int hash set resizes: 10
[t=0.0494277s, 26916 KB] Search time: 0.0245533s
[t=0.0494277s, 26916 KB] Total time: 0.0494277s
Solution found.
Peak memory: 26916 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.21s
