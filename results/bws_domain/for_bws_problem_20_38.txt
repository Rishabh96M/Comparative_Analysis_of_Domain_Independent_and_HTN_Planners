INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_20/bws_problem_20_38.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.008s wall-clock]
1342 relevant atoms
900 auxiliary atoms
2242 final queue length
3886 total queue pushes
Completing instantiation... [0.010s CPU, 0.013s wall-clock]
Instantiating: [0.020s CPU, 0.022s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.010s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
21 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.005s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.022s wall-clock]
1180 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
40 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.014s wall-clock]
Reordering and filtering variables...
41 of 41 variables necessary.
21 of 41 mutex groups necessary.
800 of 800 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.005s wall-clock]
Translator variables: 41
Translator derived variables: 0
Translator facts: 462
Translator goal facts: 16
Translator mutex groups: 21
Translator total mutex groups size: 441
Translator operators: 800
Translator axioms: 0
Translator task size: 6900
Translator peak memory: 35948 KB
Writing output... [0.010s CPU, 0.004s wall-clock]
Done! [0.080s CPU, 0.077s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.0958e-05s, 24488 KB] reading input...
[t=0.00236299s, 25180 KB] done reading input!
[t=0.00342281s, 25444 KB] Initializing landmark count heuristic...
[t=0.00349079s, 25444 KB] Generating landmark graph...
[t=0.00356973s, 25576 KB] Building a landmark graph with reasonable orders.
[t=0.00364918s, 25576 KB] Initializing Exploration...
[t=0.00390076s, 25744 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0121249s, 26140 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0121918s, 26140 KB] Landmarks generation time: 0.00862119s
[t=0.0122053s, 26140 KB] Discovered 88 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0122221s, 26140 KB] 356 edges
[t=0.012232s, 26140 KB] approx. reasonable orders
[t=0.0143708s, 26140 KB] approx. obedient reasonable orders
[t=0.0144672s, 26140 KB] Removed 1 reasonable or obedient reasonable orders
[t=0.0144796s, 26140 KB] Landmarks generation time: 0.0109862s
[t=0.0144899s, 26140 KB] Discovered 88 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0144981s, 26140 KB] 419 edges
[t=0.0145065s, 26140 KB] Landmark graph generation time: 0.0110224s
[t=0.0145147s, 26140 KB] Landmark graph contains 88 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0145225s, 26140 KB] Landmark graph contains 419 orderings.
[t=0.0147836s, 26140 KB] Simplifying 3160 unary operators... done! [2400 unary operators]
[t=0.0155918s, 26272 KB] time to simplify: 0.000877451s
[t=0.015751s, 26272 KB] Initializing additive heuristic...
[t=0.0157768s, 26272 KB] Initializing FF heuristic...
[t=0.0158543s, 26272 KB] Building successor generator...done!
[t=0.0160654s, 26272 KB] peak memory difference for successor generator creation: 0 KB
[t=0.016075s, 26272 KB] time for successor generation creation: 0.000176898s
[t=0.0160897s, 26272 KB] Variables: 41
[t=0.0160983s, 26272 KB] FactPairs: 462
[t=0.0161065s, 26272 KB] Bytes per state: 16
[t=0.0162807s, 26272 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0163253s, 26272 KB] 40 initial landmarks, 16 goal landmarks
[t=0.0164003s, 26272 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0164108s, 26272 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0164201s, 26272 KB] g=0, 1 evaluated, 0 expanded
[t=0.016436s, 26272 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0164467s, 26272 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0166057s, 26272 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0166173s, 26272 KB] g=2, 7 evaluated, 6 expanded
[t=0.0166505s, 26272 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0166604s, 26272 KB] g=2, 8 evaluated, 7 expanded
[t=0.0168888s, 26272 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0168983s, 26272 KB] g=4, 18 evaluated, 17 expanded
[t=0.0172352s, 26272 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0172588s, 26272 KB] g=6, 30 evaluated, 29 expanded
[t=0.0175955s, 26272 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0176122s, 26272 KB] g=8, 45 evaluated, 44 expanded
[t=0.0178492s, 26272 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0178603s, 26272 KB] g=6, 55 evaluated, 54 expanded
[t=0.0178901s, 26272 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0179027s, 26272 KB] g=9, 56 evaluated, 55 expanded
[t=0.0182232s, 26272 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0182342s, 26272 KB] g=8, 69 evaluated, 68 expanded
[t=0.0184502s, 26272 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0184596s, 26272 KB] g=10, 79 evaluated, 78 expanded
[t=0.0185032s, 26272 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.018517s, 26272 KB] g=12, 80 evaluated, 79 expanded
[t=0.0189958s, 26272 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0190078s, 26272 KB] g=14, 102 evaluated, 101 expanded
[t=0.0194613s, 26272 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0194782s, 26272 KB] g=16, 123 evaluated, 122 expanded
[t=0.0200271s, 26272 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0200656s, 26272 KB] g=18, 145 evaluated, 144 expanded
[t=0.0202383s, 26272 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0202541s, 26272 KB] g=18, 152 evaluated, 151 expanded
[t=0.0205941s, 26272 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0206097s, 26272 KB] g=20, 167 evaluated, 166 expanded
[t=0.0207591s, 26272 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0207692s, 26272 KB] g=20, 173 evaluated, 172 expanded
[t=0.0209789s, 26272 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0209894s, 26272 KB] g=22, 182 evaluated, 181 expanded
[t=0.0211574s, 26272 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0211669s, 26272 KB] g=21, 189 evaluated, 188 expanded
[t=0.021445s, 26272 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0214553s, 26272 KB] g=24, 201 evaluated, 200 expanded
[t=0.0220595s, 26272 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0220824s, 26272 KB] g=28, 227 evaluated, 226 expanded
[t=0.022304s, 26272 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.022314s, 26272 KB] g=24, 236 evaluated, 235 expanded
[t=0.0224332s, 26272 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0224432s, 26272 KB] g=30, 241 evaluated, 240 expanded
[t=0.0227322s, 26272 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0227424s, 26272 KB] g=32, 254 evaluated, 253 expanded
[t=0.0230047s, 26272 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0230147s, 26272 KB] g=26, 265 evaluated, 264 expanded
[t=0.023957s, 26272 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0239721s, 26272 KB] g=28, 307 evaluated, 306 expanded
[t=0.0240618s, 26272 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.024073s, 26272 KB] g=38, 310 evaluated, 309 expanded
[t=0.0244075s, 26272 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0244237s, 26272 KB] g=40, 324 evaluated, 323 expanded
[t=0.0246573s, 26272 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0246672s, 26272 KB] g=42, 334 evaluated, 333 expanded
[t=0.0254758s, 26272 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0254885s, 26272 KB] g=32, 369 evaluated, 368 expanded
[t=0.0255237s, 26272 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0255336s, 26272 KB] g=46, 370 evaluated, 369 expanded
[t=0.0257554s, 26272 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.025765s, 26272 KB] g=48, 380 evaluated, 379 expanded
[t=0.0261421s, 26272 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0261532s, 26272 KB] g=34, 397 evaluated, 396 expanded
[t=0.0265587s, 26272 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0265694s, 26272 KB] g=52, 416 evaluated, 415 expanded
[t=0.026747s, 26272 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0267598s, 26272 KB] g=54, 424 evaluated, 423 expanded
[t=0.0269149s, 26272 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0269301s, 26272 KB] g=36, 430 evaluated, 429 expanded
[t=0.0279729s, 26272 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0279836s, 26272 KB] g=38, 481 evaluated, 480 expanded
[t=0.0286793s, 26272 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0286916s, 26272 KB] g=40, 514 evaluated, 513 expanded
[t=0.0290553s, 26272 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0290669s, 26272 KB] g=66, 532 evaluated, 531 expanded
[t=0.029257s, 26272 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0292941s, 26272 KB] g=68, 540 evaluated, 539 expanded
[t=0.0296166s, 26272 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0296358s, 26272 KB] g=42, 554 evaluated, 553 expanded
[t=0.0300924s, 26272 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0301056s, 26272 KB] g=44, 578 evaluated, 577 expanded
[t=0.0302443s, 26272 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0302545s, 26272 KB] g=72, 585 evaluated, 584 expanded
[t=0.0303706s, 26272 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0303798s, 26272 KB] g=72, 591 evaluated, 590 expanded
[t=0.0304937s, 26272 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0305031s, 26272 KB] g=74, 597 evaluated, 596 expanded
[t=0.0308159s, 26272 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0308261s, 26272 KB] g=46, 614 evaluated, 613 expanded
[t=0.0311132s, 26272 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0311314s, 26272 KB] g=86, 629 evaluated, 628 expanded
[t=0.0312623s, 26272 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0312716s, 26272 KB] g=90, 637 evaluated, 636 expanded
[t=0.031307s, 26272 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0313159s, 26272 KB] g=91, 639 evaluated, 638 expanded
[t=0.0313304s, 26272 KB] Solution found!
[t=0.031343s, 26272 KB] Actual search time: 0.015015s
unstack b1 b4 (1)
stack b1 b3 (1)
unstack b8 b6 (1)
put-down b8 (1)
unstack b6 b9 (1)
stack b6 b18 (1)
unstack b9 b7 (1)
stack b9 b8 (1)
unstack b4 b16 (1)
put-down b4 (1)
unstack b7 b15 (1)
stack b7 b4 (1)
unstack b16 b5 (1)
put-down b16 (1)
unstack b5 b11 (1)
put-down b5 (1)
unstack b11 b13 (1)
put-down b11 (1)
unstack b13 b2 (1)
put-down b13 (1)
unstack b2 b20 (1)
stack b2 b15 (1)
pick-up b5 (1)
stack b5 b13 (1)
unstack b20 b17 (1)
put-down b20 (1)
unstack b17 b12 (1)
put-down b17 (1)
pick-up b12 (1)
stack b12 b1 (1)
pick-up b16 (1)
stack b16 b12 (1)
unstack b6 b18 (1)
put-down b6 (1)
unstack b18 b10 (1)
stack b18 b9 (1)
unstack b10 b19 (1)
stack b10 b17 (1)
pick-up b19 (1)
stack b19 b20 (1)
pick-up b6 (1)
stack b6 b18 (1)
unstack b19 b20 (1)
put-down b19 (1)
pick-up b20 (1)
stack b20 b10 (1)
pick-up b19 (1)
stack b19 b20 (1)
unstack b7 b4 (1)
put-down b7 (1)
pick-up b4 (1)
stack b4 b11 (1)
pick-up b7 (1)
stack b7 b4 (1)
unstack b16 b12 (1)
put-down b16 (1)
unstack b12 b1 (1)
put-down b12 (1)
pick-up b16 (1)
stack b16 b12 (1)
unstack b1 b3 (1)
put-down b1 (1)
unstack b3 b14 (1)
stack b3 b7 (1)
pick-up b1 (1)
stack b1 b3 (1)
unstack b16 b12 (1)
put-down b16 (1)
pick-up b12 (1)
stack b12 b1 (1)
pick-up b16 (1)
stack b16 b12 (1)
pick-up b14 (1)
stack b14 b16 (1)
unstack b6 b18 (1)
put-down b6 (1)
unstack b18 b9 (1)
put-down b18 (1)
pick-up b6 (1)
stack b6 b18 (1)
unstack b9 b8 (1)
put-down b9 (1)
pick-up b8 (1)
stack b8 b2 (1)
pick-up b9 (1)
stack b9 b8 (1)
unstack b6 b18 (1)
put-down b6 (1)
pick-up b18 (1)
stack b18 b9 (1)
pick-up b6 (1)
stack b6 b18 (1)
[t=0.0313536s, 26272 KB] Plan length: 92 step(s).
[t=0.0313536s, 26272 KB] Plan cost: 92
[t=0.0313536s, 26272 KB] Expanded 639 state(s).
[t=0.0313536s, 26272 KB] Reopened 0 state(s).
[t=0.0313536s, 26272 KB] Evaluated 640 state(s).
[t=0.0313536s, 26272 KB] Evaluations: 1280
[t=0.0313536s, 26272 KB] Generated 7205 state(s).
[t=0.0313536s, 26272 KB] Dead ends: 0 state(s).
[t=0.0313536s, 26272 KB] Number of registered states: 640
[t=0.0313536s, 26272 KB] Int hash set load factor: 640/1024 = 0.625
[t=0.0313536s, 26272 KB] Int hash set resizes: 10
[t=0.0313536s, 26272 KB] Search time: 0.0150742s
[t=0.0313536s, 26272 KB] Total time: 0.0313536s
Solution found.
Peak memory: 26272 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.16s
