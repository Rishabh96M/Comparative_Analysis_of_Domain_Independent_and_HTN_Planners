INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_24/bws_problem_24_65.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.011s wall-clock]
1898 relevant atoms
1272 auxiliary atoms
3170 final queue length
5527 total queue pushes
Completing instantiation... [0.020s CPU, 0.019s wall-clock]
Instantiating: [0.030s CPU, 0.032s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
25 uncovered facts
Choosing groups: [0.010s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.007s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.002s wall-clock]
Translating task: [0.030s CPU, 0.029s wall-clock]
1704 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
48 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.018s wall-clock]
Reordering and filtering variables...
49 of 49 variables necessary.
25 of 49 mutex groups necessary.
1152 of 1152 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.008s wall-clock]
Translator variables: 49
Translator derived variables: 0
Translator facts: 650
Translator goal facts: 19
Translator mutex groups: 25
Translator total mutex groups size: 625
Translator operators: 1152
Translator axioms: 0
Translator task size: 9911
Translator peak memory: 37876 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.100s CPU, 0.106s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=1.897e-05s, 24488 KB] reading input...
[t=0.00324691s, 25532 KB] done reading input!
[t=0.00430725s, 25928 KB] Initializing landmark count heuristic...
[t=0.00437041s, 25928 KB] Generating landmark graph...
[t=0.00445214s, 25928 KB] Building a landmark graph with reasonable orders.
[t=0.00452876s, 26060 KB] Initializing Exploration...
[t=0.00489633s, 26388 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0176541s, 26784 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0177348s, 26784 KB] Landmarks generation time: 0.0132832s
[t=0.0177494s, 26784 KB] Discovered 103 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0177648s, 26784 KB] 437 edges
[t=0.0177741s, 26784 KB] approx. reasonable orders
[t=0.0181765s, 26784 KB] approx. obedient reasonable orders
[t=0.0182027s, 26784 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0182115s, 26784 KB] Landmarks generation time: 0.013838s
[t=0.0182219s, 26784 KB] Discovered 103 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0182307s, 26784 KB] 444 edges
[t=0.0182397s, 26784 KB] Landmark graph generation time: 0.0138772s
[t=0.0182487s, 26784 KB] Landmark graph contains 103 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0182569s, 26784 KB] Landmark graph contains 444 orderings.
[t=0.0186126s, 26784 KB] Simplifying 4560 unary operators... done! [3456 unary operators]
[t=0.0196807s, 26916 KB] time to simplify: 0.00115182s
[t=0.0198372s, 26916 KB] Initializing additive heuristic...
[t=0.0198544s, 26916 KB] Initializing FF heuristic...
[t=0.019949s, 26916 KB] Building successor generator...done!
[t=0.0202535s, 26916 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0202628s, 26916 KB] time for successor generation creation: 0.000260828s
[t=0.0202775s, 26916 KB] Variables: 49
[t=0.0202879s, 26916 KB] FactPairs: 650
[t=0.0202981s, 26916 KB] Bytes per state: 20
[t=0.0205367s, 26916 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0205824s, 26916 KB] 48 initial landmarks, 19 goal landmarks
[t=0.0206781s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0206898s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0206995s, 26916 KB] g=0, 1 evaluated, 0 expanded
[t=0.0207151s, 26916 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0207247s, 26916 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0209681s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0209795s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0209875s, 26916 KB] g=2, 7 evaluated, 6 expanded
[t=0.0211645s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0211736s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0211817s, 26916 KB] g=4, 13 evaluated, 12 expanded
[t=0.0212474s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0212562s, 26916 KB] g=5, 15 evaluated, 14 expanded
[t=0.0212949s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0213033s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.021311s, 26916 KB] g=6, 16 evaluated, 15 expanded
[t=0.0214077s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0214171s, 26916 KB] g=7, 19 evaluated, 18 expanded
[t=0.0215566s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0215652s, 26916 KB] g=8, 23 evaluated, 22 expanded
[t=0.0218626s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0218832s, 26916 KB] g=10, 33 evaluated, 32 expanded
[t=0.021921s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.021931s, 26916 KB] g=10, 34 evaluated, 33 expanded
[t=0.0223887s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0223991s, 26916 KB] g=12, 50 evaluated, 49 expanded
[t=0.0228449s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.022859s, 26916 KB] g=14, 65 evaluated, 64 expanded
[t=0.0232757s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0232929s, 26916 KB] g=16, 80 evaluated, 79 expanded
[t=0.0233872s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0233969s, 26916 KB] g=14, 83 evaluated, 82 expanded
[t=0.0237639s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0237761s, 26916 KB] g=16, 96 evaluated, 95 expanded
[t=0.0238412s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0238515s, 26916 KB] g=18, 98 evaluated, 97 expanded
[t=0.0245907s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.024617s, 26916 KB] g=19, 124 evaluated, 123 expanded
[t=0.024814s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0248255s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0248347s, 26916 KB] g=20, 129 evaluated, 128 expanded
[t=0.0250594s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.02507s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0250787s, 26916 KB] g=22, 136 evaluated, 135 expanded
[t=0.0252933s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0253024s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0253102s, 26916 KB] g=24, 143 evaluated, 142 expanded
[t=0.0255444s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0255533s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0255614s, 26916 KB] g=26, 151 evaluated, 150 expanded
[t=0.0257376s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0257465s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0257544s, 26916 KB] g=28, 157 evaluated, 156 expanded
[t=0.0259462s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0259554s, 26916 KB] g=30, 163 evaluated, 162 expanded
[t=0.0261366s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0261462s, 26916 KB] g=32, 169 evaluated, 168 expanded
[t=0.0267973s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0268065s, 26916 KB] g=35, 192 evaluated, 191 expanded
[t=0.0268483s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0268571s, 26916 KB] g=36, 193 evaluated, 192 expanded
[t=0.027115s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0271247s, 26916 KB] g=38, 202 evaluated, 201 expanded
[t=0.0273011s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.02731s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0273181s, 26916 KB] g=40, 208 evaluated, 207 expanded
[t=0.0276772s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0276902s, 26916 KB] g=43, 220 evaluated, 219 expanded
[t=0.0277281s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0277372s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.027745s, 26916 KB] g=44, 221 evaluated, 220 expanded
[t=0.0279407s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0279495s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0279573s, 26916 KB] g=46, 228 evaluated, 227 expanded
[t=0.0281244s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.028133s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0281409s, 26916 KB] g=48, 234 evaluated, 233 expanded
[t=0.0282833s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0282918s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0282995s, 26916 KB] g=50, 239 evaluated, 238 expanded
[t=0.0284672s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0284759s, 26916 KB] g=52, 245 evaluated, 244 expanded
[t=0.0285392s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0285478s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0285556s, 26916 KB] g=52, 247 evaluated, 246 expanded
[t=0.0287327s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0287534s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0287618s, 26916 KB] g=54, 253 evaluated, 252 expanded
[t=0.0289355s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0289507s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0289592s, 26916 KB] g=56, 258 evaluated, 257 expanded
[t=0.0295749s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0295847s, 26916 KB] g=64, 282 evaluated, 281 expanded
[t=0.0297356s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0297446s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0297524s, 26916 KB] g=66, 288 evaluated, 287 expanded
[t=0.0298791s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0298881s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.029896s, 26916 KB] g=68, 293 evaluated, 292 expanded
[t=0.0299995s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0300083s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0300163s, 26916 KB] g=70, 297 evaluated, 296 expanded
[t=0.0305614s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0305708s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0305788s, 26916 KB] g=78, 321 evaluated, 320 expanded
[t=0.0306284s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0306366s, 26916 KB] g=78, 323 evaluated, 322 expanded
[t=0.0307033s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0307143s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0307223s, 26916 KB] g=80, 326 evaluated, 325 expanded
[t=0.0309163s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0309256s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0309352s, 26916 KB] g=88, 337 evaluated, 336 expanded
[t=0.0309581s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0309664s, 26916 KB] g=88, 338 evaluated, 337 expanded
[t=0.0309837s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0309918s, 26916 KB] g=89, 339 evaluated, 338 expanded
[t=0.0310067s, 26916 KB] Solution found!
[t=0.0310163s, 26916 KB] Actual search time: 0.0104289s
unstack b14 b1 (1)
put-down b14 (1)
unstack b22 b13 (1)
put-down b22 (1)
unstack b13 b2 (1)
stack b13 b23 (1)
unstack b1 b20 (1)
stack b1 b6 (1)
unstack b20 b3 (1)
put-down b20 (1)
unstack b2 b4 (1)
put-down b2 (1)
unstack b4 b24 (1)
put-down b4 (1)
unstack b18 b11 (1)
stack b18 b4 (1)
unstack b24 b12 (1)
put-down b24 (1)
unstack b12 b19 (1)
stack b12 b3 (1)
unstack b19 b16 (1)
stack b19 b11 (1)
unstack b16 b5 (1)
stack b16 b14 (1)
pick-up b2 (1)
stack b2 b19 (1)
pick-up b24 (1)
stack b24 b16 (1)
unstack b5 b10 (1)
put-down b5 (1)
unstack b1 b6 (1)
put-down b1 (1)
unstack b13 b23 (1)
put-down b13 (1)
unstack b23 b15 (1)
stack b23 b1 (1)
pick-up b13 (1)
stack b13 b23 (1)
pick-up b6 (1)
stack b6 b20 (1)
unstack b12 b3 (1)
put-down b12 (1)
unstack b3 b9 (1)
stack b3 b15 (1)
pick-up b12 (1)
stack b12 b3 (1)
unstack b9 b7 (1)
stack b9 b5 (1)
unstack b7 b8 (1)
stack b7 b12 (1)
unstack b8 b21 (1)
stack b8 b22 (1)
pick-up b10 (1)
stack b10 b8 (1)
pick-up b21 (1)
stack b21 b9 (1)
unstack b2 b19 (1)
put-down b2 (1)
unstack b19 b11 (1)
put-down b19 (1)
unstack b11 b17 (1)
put-down b11 (1)
pick-up b17 (1)
stack b17 b18 (1)
pick-up b11 (1)
stack b11 b17 (1)
pick-up b19 (1)
stack b19 b11 (1)
pick-up b2 (1)
stack b2 b19 (1)
unstack b13 b23 (1)
put-down b13 (1)
unstack b23 b1 (1)
put-down b23 (1)
pick-up b1 (1)
stack b1 b6 (1)
pick-up b23 (1)
stack b23 b1 (1)
pick-up b13 (1)
stack b13 b23 (1)
unstack b21 b9 (1)
put-down b21 (1)
unstack b9 b5 (1)
put-down b9 (1)
pick-up b5 (1)
stack b5 b7 (1)
pick-up b9 (1)
stack b9 b5 (1)
pick-up b21 (1)
stack b21 b9 (1)
[t=0.0310253s, 26916 KB] Plan length: 90 step(s).
[t=0.0310253s, 26916 KB] Plan cost: 90
[t=0.0310253s, 26916 KB] Expanded 339 state(s).
[t=0.0310253s, 26916 KB] Reopened 0 state(s).
[t=0.0310253s, 26916 KB] Evaluated 340 state(s).
[t=0.0310253s, 26916 KB] Evaluations: 680
[t=0.0310253s, 26916 KB] Generated 3407 state(s).
[t=0.0310253s, 26916 KB] Dead ends: 0 state(s).
[t=0.0310253s, 26916 KB] Number of registered states: 340
[t=0.0310253s, 26916 KB] Int hash set load factor: 340/512 = 0.664062
[t=0.0310253s, 26916 KB] Int hash set resizes: 9
[t=0.0310253s, 26916 KB] Search time: 0.0104898s
[t=0.0310253s, 26916 KB] Total time: 0.0310253s
Solution found.
Peak memory: 26916 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.18s
