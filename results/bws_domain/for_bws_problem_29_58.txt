INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_29/bws_problem_29_58.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.016s wall-clock]
2728 relevant atoms
1827 auxiliary atoms
4555 final queue length
7981 total queue pushes
Completing instantiation... [0.030s CPU, 0.030s wall-clock]
Instantiating: [0.050s CPU, 0.048s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
30 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.009s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.001s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.001s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.002s wall-clock]
Translating task: [0.050s CPU, 0.047s wall-clock]
2494 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
58 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.020s wall-clock]
Reordering and filtering variables...
59 of 59 variables necessary.
30 of 59 mutex groups necessary.
1682 of 1682 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.011s wall-clock]
Translator variables: 59
Translator derived variables: 0
Translator facts: 930
Translator goal facts: 26
Translator mutex groups: 30
Translator total mutex groups size: 900
Translator operators: 1682
Translator axioms: 0
Translator task size: 14443
Translator peak memory: 40824 KB
Writing output... [0.010s CPU, 0.010s wall-clock]
Done! [0.150s CPU, 0.155s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=1.8226e-05s, 24488 KB] reading input...
[t=0.00503646s, 26220 KB] done reading input!
[t=0.00607455s, 26616 KB] Initializing landmark count heuristic...
[t=0.00611535s, 26616 KB] Generating landmark graph...
[t=0.00620774s, 26748 KB] Building a landmark graph with reasonable orders.
[t=0.00631046s, 26748 KB] Initializing Exploration...
[t=0.00692772s, 27200 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.032633s, 28124 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0327296s, 28124 KB] Landmarks generation time: 0.0265148s
[t=0.0327519s, 28124 KB] Discovered 134 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0327684s, 28124 KB] 1039 edges
[t=0.0327784s, 28124 KB] approx. reasonable orders
[t=0.0385699s, 28124 KB] approx. obedient reasonable orders
[t=0.0386406s, 28124 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0386524s, 28124 KB] Landmarks generation time: 0.0325351s
[t=0.0386625s, 28124 KB] Discovered 134 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0386705s, 28124 KB] 1106 edges
[t=0.0386788s, 28124 KB] Landmark graph generation time: 0.0325703s
[t=0.0386872s, 28124 KB] Landmark graph contains 134 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0386951s, 28124 KB] Landmark graph contains 1106 orderings.
[t=0.0392491s, 28148 KB] Simplifying 6670 unary operators... done! [5046 unary operators]
[t=0.0407869s, 28148 KB] time to simplify: 0.00164266s
[t=0.0409845s, 28148 KB] Initializing additive heuristic...
[t=0.0410176s, 28148 KB] Initializing FF heuristic...
[t=0.0410693s, 28148 KB] Building successor generator...done!
[t=0.0413723s, 28332 KB] peak memory difference for successor generator creation: 184 KB
[t=0.0413821s, 28332 KB] time for successor generation creation: 0.000270844s
[t=0.0413956s, 28332 KB] Variables: 59
[t=0.0414039s, 28332 KB] FactPairs: 930
[t=0.0414119s, 28332 KB] Bytes per state: 24
[t=0.0415076s, 28332 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0415344s, 28332 KB] 59 initial landmarks, 26 goal landmarks
[t=0.0416052s, 28332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 75
[t=0.0416148s, 28332 KB] New best heuristic value for ff(transform = adapt_costs(one)): 54
[t=0.0416239s, 28332 KB] g=0, 1 evaluated, 0 expanded
[t=0.0416436s, 28332 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 75
[t=0.0416571s, 28332 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 54
[t=0.0419586s, 28332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 74
[t=0.0419749s, 28332 KB] g=2, 7 evaluated, 6 expanded
[t=0.0423193s, 28332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 73
[t=0.0423322s, 28332 KB] g=4, 14 evaluated, 13 expanded
[t=0.0426097s, 28332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 72
[t=0.042619s, 28332 KB] g=6, 21 evaluated, 20 expanded
[t=0.0429041s, 28332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 71
[t=0.0429239s, 28332 KB] New best heuristic value for ff(transform = adapt_costs(one)): 53
[t=0.0429318s, 28332 KB] g=8, 28 evaluated, 27 expanded
[t=0.0432391s, 28332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 70
[t=0.0432491s, 28332 KB] g=10, 36 evaluated, 35 expanded
[t=0.043411s, 28332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 69
[t=0.0434207s, 28332 KB] New best heuristic value for ff(transform = adapt_costs(one)): 51
[t=0.0434286s, 28332 KB] g=10, 40 evaluated, 39 expanded
[t=0.0438s, 28332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 68
[t=0.0438211s, 28332 KB] g=12, 47 evaluated, 46 expanded
[t=0.0441341s, 28332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 67
[t=0.0441439s, 28332 KB] g=14, 54 evaluated, 53 expanded
[t=0.0443035s, 28332 KB] New best heuristic value for ff(transform = adapt_costs(one)): 50
[t=0.0443125s, 28332 KB] g=14, 58 evaluated, 57 expanded
[t=0.0446215s, 28332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 66
[t=0.0446418s, 28332 KB] g=16, 66 evaluated, 65 expanded
[t=0.0450973s, 28332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 64
[t=0.0451135s, 28332 KB] g=18, 77 evaluated, 76 expanded
[t=0.0454771s, 28332 KB] New best heuristic value for ff(transform = adapt_costs(one)): 49
[t=0.0454927s, 28332 KB] g=20, 86 evaluated, 85 expanded
[t=0.0456328s, 28332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 63
[t=0.0456454s, 28332 KB] g=20, 89 evaluated, 88 expanded
[t=0.0464786s, 28332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 60
[t=0.046507s, 28332 KB] New best heuristic value for ff(transform = adapt_costs(one)): 48
[t=0.046517s, 28332 KB] g=22, 109 evaluated, 108 expanded
[t=0.0467724s, 28332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.0467831s, 28332 KB] g=23, 115 evaluated, 114 expanded
[t=0.0472015s, 28332 KB] New best heuristic value for ff(transform = adapt_costs(one)): 47
[t=0.0472125s, 28332 KB] g=24, 125 evaluated, 124 expanded
[t=0.047718s, 28332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 58
[t=0.0477286s, 28332 KB] g=26, 138 evaluated, 137 expanded
[t=0.0481051s, 28332 KB] New best heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0481155s, 28332 KB] g=26, 147 evaluated, 146 expanded
[t=0.0487346s, 28332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0487448s, 28332 KB] g=28, 162 evaluated, 161 expanded
[t=0.048958s, 28332 KB] New best heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.0489688s, 28332 KB] g=28, 167 evaluated, 166 expanded
[t=0.0496134s, 28332 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0496339s, 28332 KB] g=30, 183 evaluated, 182 expanded
[t=0.0497874s, 28332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0498025s, 28332 KB] g=30, 186 evaluated, 185 expanded
[t=0.0509001s, 28332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0509227s, 28332 KB] g=32, 211 evaluated, 210 expanded
[t=0.0517373s, 28332 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.051754s, 28332 KB] g=36, 231 evaluated, 230 expanded
[t=0.0519654s, 28332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0519751s, 28332 KB] g=34, 236 evaluated, 235 expanded
[t=0.0525779s, 28332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0525898s, 28332 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0525981s, 28332 KB] g=38, 250 evaluated, 249 expanded
[t=0.05294s, 28332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0529499s, 28332 KB] g=40, 258 evaluated, 257 expanded
[t=0.0530397s, 28332 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0530487s, 28332 KB] g=40, 260 evaluated, 259 expanded
[t=0.0537849s, 28332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0538041s, 28332 KB] g=42, 276 evaluated, 275 expanded
[t=0.0545778s, 28332 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0545955s, 28332 KB] g=44, 295 evaluated, 294 expanded
[t=0.0546498s, 28332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0546598s, 28332 KB] g=44, 296 evaluated, 295 expanded
[t=0.0553579s, 28332 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.055372s, 28332 KB] g=46, 313 evaluated, 312 expanded
[t=0.0555078s, 28332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0555172s, 28332 KB] g=46, 316 evaluated, 315 expanded
[t=0.0591562s, 28332 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0592024s, 28332 KB] g=52, 406 evaluated, 405 expanded
[t=0.123029s, 28332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.123092s, 28332 KB] g=56, 2012 evaluated, 2011 expanded
[t=0.123922s, 28332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.123934s, 28332 KB] g=57, 2032 evaluated, 2031 expanded
[t=0.125507s, 28332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.125564s, 28332 KB] g=60, 2068 evaluated, 2067 expanded
[t=0.12663s, 28332 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.126644s, 28332 KB] g=70, 2094 evaluated, 2093 expanded
[t=0.127241s, 28332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.127264s, 28332 KB] g=62, 2108 evaluated, 2107 expanded
[t=0.127969s, 28332 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.127992s, 28332 KB] g=74, 2124 evaluated, 2123 expanded
[t=0.128704s, 28332 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.128721s, 28332 KB] g=76, 2141 evaluated, 2140 expanded
[t=0.129018s, 28332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.12903s, 28332 KB] g=64, 2148 evaluated, 2147 expanded
[t=0.129397s, 28332 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.129419s, 28332 KB] g=78, 2156 evaluated, 2155 expanded
[t=0.130196s, 28332 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.130213s, 28332 KB] g=80, 2174 evaluated, 2173 expanded
[t=0.13039s, 28332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.1304s, 28332 KB] g=81, 2178 evaluated, 2177 expanded
[t=0.130831s, 28332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.130842s, 28332 KB] g=83, 2189 evaluated, 2188 expanded
[t=0.130888s, 28332 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.130898s, 28332 KB] g=82, 2190 evaluated, 2189 expanded
[t=0.131509s, 28332 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.13152s, 28332 KB] g=84, 2206 evaluated, 2205 expanded
[t=0.131899s, 28332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.13192s, 28332 KB] g=86, 2216 evaluated, 2215 expanded
[t=0.132042s, 28332 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.132056s, 28332 KB] g=86, 2219 evaluated, 2218 expanded
[t=0.13306s, 28332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.133082s, 28332 KB] g=88, 2243 evaluated, 2242 expanded
[t=0.134315s, 28332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.134368s, 28332 KB] g=90, 2273 evaluated, 2272 expanded
[t=0.136125s, 28332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.13617s, 28332 KB] g=91, 2313 evaluated, 2312 expanded
[t=0.136469s, 28332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.136481s, 28332 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.13649s, 28332 KB] g=92, 2320 evaluated, 2319 expanded
[t=0.136582s, 28332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.136594s, 28332 KB] g=93, 2322 evaluated, 2321 expanded
[t=0.136998s, 28332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.13701s, 28332 KB] g=96, 2332 evaluated, 2331 expanded
[t=0.13734s, 28332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.137355s, 28332 KB] g=98, 2340 evaluated, 2339 expanded
[t=0.137445s, 28332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.137455s, 28332 KB] g=99, 2342 evaluated, 2341 expanded
[t=0.137642s, 28332 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.137661s, 28332 KB] g=100, 2346 evaluated, 2345 expanded
[t=0.137887s, 28332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.137899s, 28332 KB] g=101, 2351 evaluated, 2350 expanded
[t=0.138141s, 28332 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.138151s, 28332 KB] g=100, 2357 evaluated, 2356 expanded
[t=0.138199s, 28332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.138208s, 28332 KB] g=101, 2358 evaluated, 2357 expanded
[t=0.138372s, 28332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.138381s, 28332 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.13839s, 28332 KB] g=102, 2362 evaluated, 2361 expanded
[t=0.138438s, 28332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.138447s, 28332 KB] g=103, 2363 evaluated, 2362 expanded
[t=0.138682s, 28332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.138691s, 28332 KB] g=105, 2369 evaluated, 2368 expanded
[t=0.138814s, 28332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.138824s, 28332 KB] g=107, 2372 evaluated, 2371 expanded
[t=0.139422s, 28332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.139441s, 28332 KB] g=110, 2387 evaluated, 2386 expanded
[t=0.139915s, 28332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.139927s, 28332 KB] g=112, 2399 evaluated, 2398 expanded
[t=0.140364s, 28332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.140376s, 28332 KB] g=114, 2410 evaluated, 2409 expanded
[t=0.140613s, 28332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.140622s, 28332 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.14063s, 28332 KB] g=116, 2416 evaluated, 2415 expanded
[t=0.143269s, 28332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.143289s, 28332 KB] g=128, 2483 evaluated, 2482 expanded
[t=0.143859s, 28332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.143876s, 28332 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.143885s, 28332 KB] g=134, 2497 evaluated, 2496 expanded
[t=0.153158s, 28332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.153215s, 28332 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.153225s, 28332 KB] g=168, 2731 evaluated, 2730 expanded
[t=0.201701s, 28640 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.201791s, 28640 KB] g=239, 3950 evaluated, 3949 expanded
[t=0.2021s, 28640 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.202113s, 28640 KB] g=240, 3957 evaluated, 3956 expanded
[t=0.202247s, 28640 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.202257s, 28640 KB] g=241, 3960 evaluated, 3959 expanded
[t=0.202306s, 28640 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.202317s, 28640 KB] g=242, 3961 evaluated, 3960 expanded
[t=0.202518s, 28640 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.202528s, 28640 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.202536s, 28640 KB] g=244, 3966 evaluated, 3965 expanded
[t=0.203187s, 28640 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.203209s, 28640 KB] g=248, 3982 evaluated, 3981 expanded
[t=0.203379s, 28640 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.20339s, 28640 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.203399s, 28640 KB] g=250, 3986 evaluated, 3985 expanded
[t=0.205424s, 28640 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.205436s, 28640 KB] g=262, 4040 evaluated, 4039 expanded
[t=0.205756s, 28640 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.205769s, 28640 KB] g=266, 4049 evaluated, 4048 expanded
[t=0.205883s, 28640 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.205894s, 28640 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.205902s, 28640 KB] g=268, 4052 evaluated, 4051 expanded
[t=0.208953s, 28640 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.208997s, 28640 KB] g=298, 4153 evaluated, 4152 expanded
[t=0.209238s, 28640 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.209249s, 28640 KB] g=302, 4162 evaluated, 4161 expanded
[t=0.209336s, 28640 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.209355s, 28640 KB] g=304, 4165 evaluated, 4164 expanded
[t=0.209732s, 28640 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.209748s, 28640 KB] g=316, 4182 evaluated, 4181 expanded
[t=0.20983s, 28640 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.209852s, 28640 KB] g=320, 4186 evaluated, 4185 expanded
[t=0.209873s, 28640 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.209882s, 28640 KB] g=321, 4187 evaluated, 4186 expanded
[t=0.209904s, 28640 KB] Solution found!
[t=0.209941s, 28640 KB] Actual search time: 0.168406s
unstack b12 b5 (1)
put-down b12 (1)
unstack b5 b2 (1)
put-down b5 (1)
unstack b2 b24 (1)
put-down b2 (1)
unstack b24 b6 (1)
put-down b24 (1)
pick-up b5 (1)
stack b5 b24 (1)
unstack b6 b17 (1)
put-down b6 (1)
unstack b17 b9 (1)
put-down b17 (1)
unstack b9 b10 (1)
put-down b9 (1)
unstack b10 b25 (1)
stack b10 b29 (1)
unstack b25 b19 (1)
put-down b25 (1)
unstack b19 b18 (1)
stack b19 b5 (1)
pick-up b12 (1)
stack b12 b17 (1)
pick-up b2 (1)
stack b2 b19 (1)
pick-up b25 (1)
stack b25 b15 (1)
pick-up b6 (1)
stack b6 b10 (1)
unstack b18 b22 (1)
put-down b18 (1)
unstack b22 b4 (1)
put-down b22 (1)
unstack b4 b26 (1)
stack b4 b9 (1)
unstack b26 b28 (1)
stack b26 b6 (1)
unstack b28 b13 (1)
stack b28 b12 (1)
unstack b13 b1 (1)
put-down b13 (1)
pick-up b1 (1)
stack b1 b14 (1)
pick-up b18 (1)
stack b18 b1 (1)
unstack b25 b15 (1)
put-down b25 (1)
pick-up b15 (1)
stack b15 b22 (1)
pick-up b25 (1)
stack b25 b15 (1)
unstack b26 b6 (1)
put-down b26 (1)
unstack b6 b10 (1)
put-down b6 (1)
unstack b10 b29 (1)
put-down b10 (1)
pick-up b6 (1)
stack b6 b10 (1)
pick-up b26 (1)
stack b26 b6 (1)
unstack b29 b11 (1)
put-down b29 (1)
unstack b11 b23 (1)
stack b11 b4 (1)
unstack b23 b21 (1)
stack b23 b13 (1)
pick-up b29 (1)
stack b29 b11 (1)
unstack b21 b27 (1)
put-down b21 (1)
unstack b27 b8 (1)
stack b27 b26 (1)
unstack b8 b3 (1)
stack b8 b28 (1)
unstack b3 b20 (1)
put-down b3 (1)
unstack b20 b7 (1)
stack b20 b2 (1)
unstack b7 b16 (1)
put-down b7 (1)
pick-up b16 (1)
stack b16 b25 (1)
pick-up b21 (1)
stack b21 b7 (1)
unstack b23 b13 (1)
put-down b23 (1)
pick-up b13 (1)
stack b13 b27 (1)
pick-up b23 (1)
stack b23 b13 (1)
unstack b18 b1 (1)
put-down b18 (1)
unstack b1 b14 (1)
put-down b1 (1)
pick-up b14 (1)
stack b14 b21 (1)
pick-up b1 (1)
stack b1 b14 (1)
pick-up b18 (1)
stack b18 b1 (1)
unstack b16 b25 (1)
put-down b16 (1)
unstack b25 b15 (1)
put-down b25 (1)
unstack b15 b22 (1)
put-down b15 (1)
pick-up b22 (1)
stack b22 b8 (1)
pick-up b15 (1)
stack b15 b22 (1)
pick-up b25 (1)
stack b25 b15 (1)
pick-up b16 (1)
stack b16 b25 (1)
unstack b29 b11 (1)
put-down b29 (1)
unstack b11 b4 (1)
put-down b11 (1)
pick-up b29 (1)
stack b29 b11 (1)
unstack b4 b9 (1)
put-down b4 (1)
pick-up b9 (1)
stack b9 b16 (1)
pick-up b4 (1)
stack b4 b9 (1)
unstack b29 b11 (1)
put-down b29 (1)
pick-up b11 (1)
stack b11 b4 (1)
pick-up b29 (1)
stack b29 b11 (1)
unstack b23 b13 (1)
put-down b23 (1)
unstack b13 b27 (1)
put-down b13 (1)
unstack b27 b26 (1)
put-down b27 (1)
pick-up b13 (1)
stack b13 b27 (1)
pick-up b23 (1)
stack b23 b13 (1)
unstack b26 b6 (1)
put-down b26 (1)
unstack b6 b10 (1)
put-down b6 (1)
pick-up b10 (1)
stack b10 b29 (1)
pick-up b6 (1)
stack b6 b10 (1)
pick-up b26 (1)
stack b26 b6 (1)
unstack b23 b13 (1)
put-down b23 (1)
unstack b13 b27 (1)
put-down b13 (1)
pick-up b23 (1)
stack b23 b13 (1)
unstack b26 b6 (1)
put-down b26 (1)
pick-up b27 (1)
stack b27 b26 (1)
unstack b23 b13 (1)
put-down b23 (1)
pick-up b13 (1)
stack b13 b27 (1)
pick-up b23 (1)
stack b23 b13 (1)
unstack b6 b10 (1)
put-down b6 (1)
unstack b10 b29 (1)
put-down b10 (1)
pick-up b6 (1)
stack b6 b10 (1)
unstack b29 b11 (1)
put-down b29 (1)
unstack b11 b4 (1)
put-down b11 (1)
pick-up b29 (1)
stack b29 b11 (1)
unstack b6 b10 (1)
put-down b6 (1)
pick-up b10 (1)
stack b10 b29 (1)
pick-up b6 (1)
stack b6 b10 (1)
unstack b23 b13 (1)
put-down b23 (1)
unstack b13 b27 (1)
put-down b13 (1)
pick-up b23 (1)
stack b23 b13 (1)
unstack b27 b26 (1)
put-down b27 (1)
pick-up b26 (1)
stack b26 b6 (1)
pick-up b27 (1)
stack b27 b26 (1)
unstack b23 b13 (1)
put-down b23 (1)
pick-up b13 (1)
stack b13 b27 (1)
pick-up b23 (1)
stack b23 b13 (1)
unstack b4 b9 (1)
put-down b4 (1)
unstack b9 b16 (1)
put-down b9 (1)
pick-up b4 (1)
stack b4 b9 (1)
unstack b16 b25 (1)
put-down b16 (1)
unstack b25 b15 (1)
put-down b25 (1)
pick-up b16 (1)
stack b16 b25 (1)
unstack b4 b9 (1)
put-down b4 (1)
pick-up b9 (1)
stack b9 b16 (1)
pick-up b4 (1)
stack b4 b9 (1)
unstack b15 b22 (1)
put-down b15 (1)
unstack b22 b8 (1)
put-down b22 (1)
pick-up b15 (1)
stack b15 b22 (1)
unstack b8 b28 (1)
put-down b8 (1)
unstack b28 b12 (1)
put-down b28 (1)
unstack b12 b17 (1)
put-down b12 (1)
pick-up b17 (1)
stack b17 b3 (1)
pick-up b12 (1)
stack b12 b17 (1)
pick-up b28 (1)
stack b28 b12 (1)
pick-up b8 (1)
stack b8 b28 (1)
unstack b15 b22 (1)
put-down b15 (1)
pick-up b22 (1)
stack b22 b8 (1)
pick-up b15 (1)
stack b15 b22 (1)
unstack b4 b9 (1)
put-down b4 (1)
unstack b9 b16 (1)
put-down b9 (1)
pick-up b4 (1)
stack b4 b9 (1)
unstack b16 b25 (1)
put-down b16 (1)
pick-up b25 (1)
stack b25 b15 (1)
pick-up b16 (1)
stack b16 b25 (1)
unstack b4 b9 (1)
put-down b4 (1)
pick-up b9 (1)
stack b9 b16 (1)
pick-up b4 (1)
stack b4 b9 (1)
unstack b23 b13 (1)
put-down b23 (1)
unstack b13 b27 (1)
put-down b13 (1)
pick-up b23 (1)
stack b23 b13 (1)
unstack b27 b26 (1)
put-down b27 (1)
unstack b26 b6 (1)
put-down b26 (1)
pick-up b27 (1)
stack b27 b26 (1)
unstack b23 b13 (1)
put-down b23 (1)
pick-up b13 (1)
stack b13 b27 (1)
pick-up b23 (1)
stack b23 b13 (1)
unstack b6 b10 (1)
put-down b6 (1)
unstack b10 b29 (1)
put-down b10 (1)
pick-up b6 (1)
stack b6 b10 (1)
unstack b29 b11 (1)
put-down b29 (1)
pick-up b11 (1)
stack b11 b4 (1)
pick-up b29 (1)
stack b29 b11 (1)
unstack b6 b10 (1)
put-down b6 (1)
pick-up b10 (1)
stack b10 b29 (1)
pick-up b6 (1)
stack b6 b10 (1)
unstack b23 b13 (1)
put-down b23 (1)
unstack b13 b27 (1)
put-down b13 (1)
pick-up b23 (1)
stack b23 b13 (1)
unstack b27 b26 (1)
put-down b27 (1)
pick-up b26 (1)
stack b26 b6 (1)
pick-up b27 (1)
stack b27 b26 (1)
unstack b23 b13 (1)
put-down b23 (1)
pick-up b13 (1)
stack b13 b27 (1)
pick-up b23 (1)
stack b23 b13 (1)
[t=0.209955s, 28640 KB] Plan length: 322 step(s).
[t=0.209955s, 28640 KB] Plan cost: 322
[t=0.209955s, 28640 KB] Expanded 4187 state(s).
[t=0.209955s, 28640 KB] Reopened 0 state(s).
[t=0.209955s, 28640 KB] Evaluated 4188 state(s).
[t=0.209955s, 28640 KB] Evaluations: 8376
[t=0.209955s, 28640 KB] Generated 41390 state(s).
[t=0.209955s, 28640 KB] Dead ends: 0 state(s).
[t=0.209955s, 28640 KB] Number of registered states: 4188
[t=0.209955s, 28640 KB] Int hash set load factor: 4188/8192 = 0.51123
[t=0.209955s, 28640 KB] Int hash set resizes: 13
[t=0.209955s, 28640 KB] Search time: 0.168447s
[t=0.209955s, 28640 KB] Total time: 0.209955s
Solution found.
Peak memory: 28640 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.42s
