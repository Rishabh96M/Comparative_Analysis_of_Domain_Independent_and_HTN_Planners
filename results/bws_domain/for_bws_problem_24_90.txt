INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_24/bws_problem_24_90.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.010s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
1898 relevant atoms
1272 auxiliary atoms
3170 final queue length
5526 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
25 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.007s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.030s wall-clock]
1704 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
48 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.023s wall-clock]
Reordering and filtering variables...
49 of 49 variables necessary.
25 of 49 mutex groups necessary.
1152 of 1152 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.007s wall-clock]
Translator variables: 49
Translator derived variables: 0
Translator facts: 650
Translator goal facts: 20
Translator mutex groups: 25
Translator total mutex groups size: 625
Translator operators: 1152
Translator axioms: 0
Translator task size: 9912
Translator peak memory: 37880 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.110s CPU, 0.113s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=1.8131e-05s, 24488 KB] reading input...
[t=0.00330614s, 25532 KB] done reading input!
[t=0.00425174s, 25928 KB] Initializing landmark count heuristic...
[t=0.00427916s, 25928 KB] Generating landmark graph...
[t=0.00434683s, 25928 KB] Building a landmark graph with reasonable orders.
[t=0.00441141s, 26060 KB] Initializing Exploration...
[t=0.0047467s, 26388 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.018522s, 26784 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0186979s, 26784 KB] Landmarks generation time: 0.0143602s
[t=0.0187195s, 26784 KB] Discovered 102 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0187452s, 26784 KB] 359 edges
[t=0.0187561s, 26784 KB] approx. reasonable orders
[t=0.0199552s, 26784 KB] approx. obedient reasonable orders
[t=0.019991s, 26784 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0200059s, 26784 KB] Landmarks generation time: 0.0157237s
[t=0.0200155s, 26784 KB] Discovered 102 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0200238s, 26784 KB] 376 edges
[t=0.0200324s, 26784 KB] Landmark graph generation time: 0.0157603s
[t=0.0200411s, 26784 KB] Landmark graph contains 102 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0200492s, 26784 KB] Landmark graph contains 376 orderings.
[t=0.0204283s, 26784 KB] Simplifying 4560 unary operators... done! [3456 unary operators]
[t=0.0215307s, 26916 KB] time to simplify: 0.0011766s
[t=0.0216919s, 26916 KB] Initializing additive heuristic...
[t=0.021708s, 26916 KB] Initializing FF heuristic...
[t=0.0217636s, 26916 KB] Building successor generator...done!
[t=0.0220117s, 26916 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0220299s, 26916 KB] time for successor generation creation: 0.000210916s
[t=0.0220422s, 26916 KB] Variables: 49
[t=0.0220505s, 26916 KB] FactPairs: 650
[t=0.0220587s, 26916 KB] Bytes per state: 20
[t=0.0221624s, 26916 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0222179s, 26916 KB] 47 initial landmarks, 20 goal landmarks
[t=0.0222752s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0222887s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0222971s, 26916 KB] g=0, 1 evaluated, 0 expanded
[t=0.0223122s, 26916 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0223208s, 26916 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0224525s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0224618s, 26916 KB] g=1, 5 evaluated, 4 expanded
[t=0.0228162s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0228259s, 26916 KB] g=3, 17 evaluated, 16 expanded
[t=0.0229464s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.022955s, 26916 KB] g=4, 21 evaluated, 20 expanded
[t=0.0231871s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.023196s, 26916 KB] g=6, 29 evaluated, 28 expanded
[t=0.0233337s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0233459s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0233543s, 26916 KB] g=6, 33 evaluated, 32 expanded
[t=0.0235332s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0235424s, 26916 KB] g=8, 39 evaluated, 38 expanded
[t=0.0237717s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0237811s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0237896s, 26916 KB] g=10, 47 evaluated, 46 expanded
[t=0.0239914s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0240002s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0240083s, 26916 KB] g=12, 54 evaluated, 53 expanded
[t=0.0242113s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0242479s, 26916 KB] g=14, 60 evaluated, 59 expanded
[t=0.0243189s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0243299s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0243537s, 26916 KB] g=14, 62 evaluated, 61 expanded
[t=0.0245648s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.024574s, 26916 KB] g=16, 69 evaluated, 68 expanded
[t=0.024915s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0249241s, 26916 KB] g=18, 81 evaluated, 80 expanded
[t=0.0250709s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0250798s, 26916 KB] g=18, 86 evaluated, 85 expanded
[t=0.0254461s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0254562s, 26916 KB] g=20, 99 evaluated, 98 expanded
[t=0.0258612s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0258717s, 26916 KB] g=22, 113 evaluated, 112 expanded
[t=0.0262784s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0262882s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0262975s, 26916 KB] g=24, 127 evaluated, 126 expanded
[t=0.0265685s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.026578s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0265869s, 26916 KB] g=26, 136 evaluated, 135 expanded
[t=0.0268202s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.026829s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0268372s, 26916 KB] g=28, 144 evaluated, 143 expanded
[t=0.0270724s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0270815s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0270898s, 26916 KB] g=30, 152 evaluated, 151 expanded
[t=0.0273541s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0273636s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0273718s, 26916 KB] g=32, 161 evaluated, 160 expanded
[t=0.0275746s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0275836s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0275917s, 26916 KB] g=34, 168 evaluated, 167 expanded
[t=0.0280539s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0280636s, 26916 KB] g=38, 184 evaluated, 183 expanded
[t=0.0282443s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0282533s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0282614s, 26916 KB] g=40, 190 evaluated, 189 expanded
[t=0.0291362s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0291516s, 26916 KB] g=44, 221 evaluated, 220 expanded
[t=0.0293038s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0293172s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0293261s, 26916 KB] g=46, 226 evaluated, 225 expanded
[t=0.030633s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0306485s, 26916 KB] g=55, 270 evaluated, 269 expanded
[t=0.0306891s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.030698s, 26916 KB] g=56, 271 evaluated, 270 expanded
[t=0.0309093s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0309186s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0309269s, 26916 KB] g=58, 278 evaluated, 277 expanded
[t=0.031134s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0311444s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0311529s, 26916 KB] g=60, 285 evaluated, 284 expanded
[t=0.0313308s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0313404s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0313485s, 26916 KB] g=62, 291 evaluated, 290 expanded
[t=0.0320032s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0320153s, 26916 KB] g=66, 314 evaluated, 313 expanded
[t=0.0321907s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0322025s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0322107s, 26916 KB] g=68, 320 evaluated, 319 expanded
[t=0.0331611s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0331743s, 26916 KB] g=76, 355 evaluated, 354 expanded
[t=0.0333397s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0333508s, 26916 KB] g=78, 361 evaluated, 360 expanded
[t=0.0334839s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0334933s, 26916 KB] g=80, 366 evaluated, 365 expanded
[t=0.0336007s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0336108s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0336194s, 26916 KB] g=82, 370 evaluated, 369 expanded
[t=0.0340955s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.034115s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0341239s, 26916 KB] g=84, 388 evaluated, 387 expanded
[t=0.0349534s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0349696s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0349782s, 26916 KB] g=96, 420 evaluated, 419 expanded
[t=0.0352208s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0352338s, 26916 KB] g=100, 429 evaluated, 428 expanded
[t=0.0353176s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0353282s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0353385s, 26916 KB] g=102, 432 evaluated, 431 expanded
[t=0.0377359s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0377536s, 26916 KB] g=132, 535 evaluated, 534 expanded
[t=0.0379785s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.037989s, 26916 KB] g=136, 544 evaluated, 543 expanded
[t=0.0380634s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0380733s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0380823s, 26916 KB] g=138, 547 evaluated, 546 expanded
[t=0.0383873s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0383976s, 26916 KB] g=150, 565 evaluated, 564 expanded
[t=0.0384633s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0384724s, 26916 KB] g=154, 569 evaluated, 568 expanded
[t=0.0384903s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.038499s, 26916 KB] g=155, 570 evaluated, 569 expanded
[t=0.0385142s, 26916 KB] Solution found!
[t=0.0385259s, 26916 KB] Actual search time: 0.0163055s
unstack b9 b15 (1)
put-down b9 (1)
unstack b15 b16 (1)
put-down b15 (1)
unstack b22 b7 (1)
stack b22 b15 (1)
unstack b13 b11 (1)
put-down b13 (1)
unstack b11 b21 (1)
stack b11 b22 (1)
unstack b23 b17 (1)
stack b23 b21 (1)
unstack b7 b14 (1)
stack b7 b11 (1)
unstack b14 b3 (1)
put-down b14 (1)
unstack b17 b10 (1)
put-down b17 (1)
unstack b10 b18 (1)
put-down b10 (1)
unstack b18 b20 (1)
stack b18 b17 (1)
unstack b20 b1 (1)
stack b20 b10 (1)
unstack b1 b4 (1)
stack b1 b23 (1)
unstack b3 b8 (1)
stack b3 b14 (1)
unstack b8 b12 (1)
put-down b8 (1)
pick-up b9 (1)
stack b9 b12 (1)
pick-up b13 (1)
stack b13 b3 (1)
unstack b9 b12 (1)
put-down b9 (1)
pick-up b12 (1)
stack b12 b16 (1)
pick-up b9 (1)
stack b9 b12 (1)
unstack b18 b17 (1)
put-down b18 (1)
pick-up b17 (1)
stack b17 b20 (1)
pick-up b18 (1)
stack b18 b17 (1)
unstack b1 b23 (1)
put-down b1 (1)
unstack b23 b21 (1)
put-down b23 (1)
pick-up b1 (1)
stack b1 b23 (1)
unstack b21 b19 (1)
put-down b21 (1)
unstack b19 b2 (1)
stack b19 b7 (1)
unstack b2 b5 (1)
put-down b2 (1)
pick-up b5 (1)
stack b5 b8 (1)
pick-up b21 (1)
stack b21 b19 (1)
unstack b1 b23 (1)
put-down b1 (1)
pick-up b23 (1)
stack b23 b21 (1)
pick-up b1 (1)
stack b1 b23 (1)
unstack b9 b12 (1)
put-down b9 (1)
unstack b12 b16 (1)
put-down b12 (1)
unstack b16 b24 (1)
put-down b16 (1)
unstack b24 b6 (1)
stack b24 b18 (1)
pick-up b6 (1)
stack b6 b13 (1)
pick-up b16 (1)
stack b16 b24 (1)
pick-up b12 (1)
stack b12 b16 (1)
pick-up b9 (1)
stack b9 b12 (1)
unstack b6 b13 (1)
put-down b6 (1)
unstack b13 b3 (1)
put-down b13 (1)
pick-up b6 (1)
stack b6 b13 (1)
unstack b3 b14 (1)
put-down b3 (1)
pick-up b14 (1)
stack b14 b2 (1)
pick-up b3 (1)
stack b3 b14 (1)
unstack b6 b13 (1)
put-down b6 (1)
pick-up b13 (1)
stack b13 b3 (1)
pick-up b6 (1)
stack b6 b13 (1)
unstack b9 b12 (1)
put-down b9 (1)
unstack b12 b16 (1)
put-down b12 (1)
pick-up b9 (1)
stack b9 b12 (1)
unstack b16 b24 (1)
put-down b16 (1)
unstack b24 b18 (1)
put-down b24 (1)
pick-up b16 (1)
stack b16 b24 (1)
unstack b9 b12 (1)
put-down b9 (1)
pick-up b12 (1)
stack b12 b16 (1)
pick-up b9 (1)
stack b9 b12 (1)
unstack b18 b17 (1)
put-down b18 (1)
unstack b17 b20 (1)
put-down b17 (1)
pick-up b18 (1)
stack b18 b17 (1)
unstack b20 b10 (1)
put-down b20 (1)
pick-up b10 (1)
stack b10 b6 (1)
pick-up b20 (1)
stack b20 b10 (1)
unstack b18 b17 (1)
put-down b18 (1)
pick-up b17 (1)
stack b17 b20 (1)
pick-up b18 (1)
stack b18 b17 (1)
unstack b9 b12 (1)
put-down b9 (1)
unstack b12 b16 (1)
put-down b12 (1)
pick-up b9 (1)
stack b9 b12 (1)
unstack b16 b24 (1)
put-down b16 (1)
pick-up b24 (1)
stack b24 b18 (1)
pick-up b16 (1)
stack b16 b24 (1)
unstack b9 b12 (1)
put-down b9 (1)
pick-up b12 (1)
stack b12 b16 (1)
pick-up b9 (1)
stack b9 b12 (1)
[t=0.0385357s, 26916 KB] Plan length: 156 step(s).
[t=0.0385357s, 26916 KB] Plan cost: 156
[t=0.0385357s, 26916 KB] Expanded 570 state(s).
[t=0.0385357s, 26916 KB] Reopened 0 state(s).
[t=0.0385357s, 26916 KB] Evaluated 571 state(s).
[t=0.0385357s, 26916 KB] Evaluations: 1142
[t=0.0385357s, 26916 KB] Generated 4896 state(s).
[t=0.0385357s, 26916 KB] Dead ends: 0 state(s).
[t=0.0385357s, 26916 KB] Number of registered states: 571
[t=0.0385357s, 26916 KB] Int hash set load factor: 571/1024 = 0.557617
[t=0.0385357s, 26916 KB] Int hash set resizes: 10
[t=0.0385357s, 26916 KB] Search time: 0.016374s
[t=0.0385357s, 26916 KB] Total time: 0.0385357s
Solution found.
Peak memory: 26916 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.20s
