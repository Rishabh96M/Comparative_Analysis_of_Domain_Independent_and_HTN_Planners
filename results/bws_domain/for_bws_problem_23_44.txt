INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_23/bws_problem_23_44.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.000s CPU, 0.011s wall-clock]
1750 relevant atoms
1173 auxiliary atoms
2923 final queue length
5090 total queue pushes
Completing instantiation... [0.020s CPU, 0.018s wall-clock]
Instantiating: [0.020s CPU, 0.030s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.010s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
24 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.007s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.026s wall-clock]
1564 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
46 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
47 of 47 variables necessary.
24 of 47 mutex groups necessary.
1058 of 1058 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 47
Translator derived variables: 0
Translator facts: 600
Translator goal facts: 19
Translator mutex groups: 24
Translator total mutex groups size: 576
Translator operators: 1058
Translator axioms: 0
Translator task size: 9108
Translator peak memory: 37488 KB
Writing output... [0.000s CPU, 0.005s wall-clock]
Done! [0.080s CPU, 0.091s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.1507e-05s, 24488 KB] reading input...
[t=0.0030151s, 25428 KB] done reading input!
[t=0.00407406s, 25824 KB] Initializing landmark count heuristic...
[t=0.00411534s, 25824 KB] Generating landmark graph...
[t=0.00418201s, 25824 KB] Building a landmark graph with reasonable orders.
[t=0.00424581s, 25956 KB] Initializing Exploration...
[t=0.00454177s, 26256 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0155345s, 26652 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.015609s, 26652 KB] Landmarks generation time: 0.0114288s
[t=0.0156232s, 26652 KB] Discovered 98 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0156379s, 26652 KB] 333 edges
[t=0.0156477s, 26652 KB] approx. reasonable orders
[t=0.0168267s, 26652 KB] approx. obedient reasonable orders
[t=0.0168514s, 26652 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0168607s, 26652 KB] Landmarks generation time: 0.0127427s
[t=0.0168696s, 26652 KB] Discovered 98 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0168775s, 26652 KB] 356 edges
[t=0.0168855s, 26652 KB] Landmark graph generation time: 0.012777s
[t=0.0168937s, 26652 KB] Landmark graph contains 98 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0169015s, 26652 KB] Landmark graph contains 356 orderings.
[t=0.0172322s, 26652 KB] Simplifying 4186 unary operators... done! [3174 unary operators]
[t=0.0182029s, 26652 KB] time to simplify: 0.00104545s
[t=0.0183471s, 26652 KB] Initializing additive heuristic...
[t=0.0183624s, 26652 KB] Initializing FF heuristic...
[t=0.0184174s, 26652 KB] Building successor generator...done!
[t=0.0186255s, 26652 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0186339s, 26652 KB] time for successor generation creation: 0.000175795s
[t=0.0186463s, 26652 KB] Variables: 47
[t=0.0186544s, 26652 KB] FactPairs: 600
[t=0.0186622s, 26652 KB] Bytes per state: 20
[t=0.0187464s, 26652 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0187785s, 26652 KB] 45 initial landmarks, 19 goal landmarks
[t=0.0188292s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0188381s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0188462s, 26652 KB] g=0, 1 evaluated, 0 expanded
[t=0.0188597s, 26652 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0188686s, 26652 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.019042s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0190508s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0190586s, 26652 KB] g=2, 7 evaluated, 6 expanded
[t=0.0192479s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0192651s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.019275s, 26652 KB] g=4, 13 evaluated, 12 expanded
[t=0.0193458s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0193548s, 26652 KB] g=5, 15 evaluated, 14 expanded
[t=0.0196338s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0196433s, 26652 KB] g=8, 25 evaluated, 24 expanded
[t=0.0198958s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0199056s, 26652 KB] g=10, 34 evaluated, 33 expanded
[t=0.0199436s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0199557s, 26652 KB] g=10, 35 evaluated, 34 expanded
[t=0.0203882s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0203988s, 26652 KB] g=12, 51 evaluated, 50 expanded
[t=0.0209729s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0209919s, 26652 KB] g=14, 72 evaluated, 71 expanded
[t=0.0211972s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0212092s, 26652 KB] g=14, 79 evaluated, 78 expanded
[t=0.0215699s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0216031s, 26652 KB] g=16, 92 evaluated, 91 expanded
[t=0.0221813s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0221948s, 26652 KB] g=18, 114 evaluated, 113 expanded
[t=0.0227171s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0227333s, 26652 KB] g=20, 134 evaluated, 133 expanded
[t=0.0233211s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0233437s, 26652 KB] g=22, 155 evaluated, 154 expanded
[t=0.0235714s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0235822s, 26652 KB] g=22, 163 evaluated, 162 expanded
[t=0.0238992s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0239091s, 26652 KB] g=24, 175 evaluated, 174 expanded
[t=0.0243587s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.02437s, 26652 KB] g=24, 192 evaluated, 191 expanded
[t=0.0244868s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0244961s, 26652 KB] g=26, 196 evaluated, 195 expanded
[t=0.025031s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0250445s, 26652 KB] g=26, 216 evaluated, 215 expanded
[t=0.0257754s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0257863s, 26652 KB] g=28, 244 evaluated, 243 expanded
[t=0.0265675s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0265792s, 26652 KB] g=32, 273 evaluated, 272 expanded
[t=0.0266453s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0266548s, 26652 KB] g=30, 275 evaluated, 274 expanded
[t=0.027072s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0270852s, 26652 KB] g=34, 290 evaluated, 289 expanded
[t=0.0274831s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0274973s, 26652 KB] g=32, 304 evaluated, 303 expanded
[t=0.0275673s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0275774s, 26652 KB] g=36, 306 evaluated, 305 expanded
[t=0.0281985s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0282091s, 26652 KB] g=34, 329 evaluated, 328 expanded
[t=0.0288698s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.02888s, 26652 KB] g=40, 354 evaluated, 353 expanded
[t=0.029072s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0290813s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0290894s, 26652 KB] g=42, 361 evaluated, 360 expanded
[t=0.0292757s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0292846s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0292925s, 26652 KB] g=44, 368 evaluated, 367 expanded
[t=0.0294548s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0294643s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0294723s, 26652 KB] g=46, 374 evaluated, 373 expanded
[t=0.0324865s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0325042s, 26652 KB] g=58, 494 evaluated, 493 expanded
[t=0.0330651s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0330751s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0330832s, 26652 KB] g=64, 516 evaluated, 515 expanded
[t=0.0394708s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0394893s, 26652 KB] g=84, 768 evaluated, 767 expanded
[t=0.0399184s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0399297s, 26652 KB] g=86, 784 evaluated, 783 expanded
[t=0.0402801s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.040293s, 26652 KB] g=88, 797 evaluated, 796 expanded
[t=0.041254s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0413142s, 26652 KB] g=94, 831 evaluated, 830 expanded
[t=0.04186s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0419026s, 26652 KB] g=96, 846 evaluated, 845 expanded
[t=0.0419484s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0419596s, 26652 KB] g=94, 847 evaluated, 846 expanded
[t=0.0422348s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0422475s, 26652 KB] g=98, 857 evaluated, 856 expanded
[t=0.0427969s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.042809s, 26652 KB] g=103, 877 evaluated, 876 expanded
[t=0.0428745s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0428851s, 26652 KB] g=104, 879 evaluated, 878 expanded
[t=0.0431181s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0431305s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0431397s, 26652 KB] g=106, 887 evaluated, 886 expanded
[t=0.0433607s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0433729s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0433812s, 26652 KB] g=108, 894 evaluated, 893 expanded
[t=0.043518s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0435282s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0435362s, 26652 KB] g=110, 899 evaluated, 898 expanded
[t=0.0439559s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.043983s, 26652 KB] g=113, 911 evaluated, 910 expanded
[t=0.0440414s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.044059s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0440726s, 26652 KB] g=114, 912 evaluated, 911 expanded
[t=0.0442872s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0443062s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0443204s, 26652 KB] g=116, 917 evaluated, 916 expanded
[t=0.0451039s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0451276s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.045136s, 26652 KB] g=122, 936 evaluated, 935 expanded
[t=0.0456326s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0456448s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0456532s, 26652 KB] g=132, 955 evaluated, 954 expanded
[t=0.0790594s, 26784 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.079151s, 26784 KB] g=168, 2261 evaluated, 2260 expanded
[t=0.0792702s, 26784 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0792819s, 26784 KB] g=170, 2265 evaluated, 2264 expanded
[t=0.080588s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0806023s, 26916 KB] g=182, 2319 evaluated, 2318 expanded
[t=0.0808086s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0808194s, 26916 KB] g=186, 2328 evaluated, 2327 expanded
[t=0.0808925s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0809028s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0809104s, 26916 KB] g=188, 2331 evaluated, 2330 expanded
[t=0.0821483s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0821776s, 26916 KB] g=210, 2396 evaluated, 2395 expanded
[t=0.0822394s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0822504s, 26916 KB] g=212, 2399 evaluated, 2398 expanded
[t=0.0824189s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0824322s, 26916 KB] g=220, 2410 evaluated, 2409 expanded
[t=0.0824729s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0824908s, 26916 KB] g=220, 2411 evaluated, 2410 expanded
[t=0.0825191s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.082531s, 26916 KB] g=221, 2412 evaluated, 2411 expanded
[t=0.0825473s, 26916 KB] Solution found!
[t=0.0825645s, 26916 KB] Actual search time: 0.0637835s
unstack b5 b16 (1)
put-down b5 (1)
unstack b16 b20 (1)
put-down b16 (1)
unstack b20 b13 (1)
put-down b20 (1)
unstack b13 b10 (1)
put-down b13 (1)
unstack b10 b2 (1)
stack b10 b21 (1)
unstack b4 b8 (1)
put-down b4 (1)
pick-up b14 (1)
stack b14 b8 (1)
unstack b7 b22 (1)
put-down b7 (1)
unstack b22 b11 (1)
put-down b22 (1)
unstack b11 b15 (1)
put-down b11 (1)
unstack b15 b12 (1)
stack b15 b10 (1)
pick-up b11 (1)
stack b11 b12 (1)
pick-up b4 (1)
stack b4 b15 (1)
unstack b11 b12 (1)
put-down b11 (1)
unstack b12 b18 (1)
stack b12 b4 (1)
pick-up b11 (1)
stack b11 b12 (1)
pick-up b18 (1)
stack b18 b22 (1)
pick-up b7 (1)
stack b7 b18 (1)
unstack b14 b8 (1)
put-down b14 (1)
unstack b8 b1 (1)
stack b8 b11 (1)
unstack b1 b6 (1)
stack b1 b7 (1)
pick-up b14 (1)
stack b14 b8 (1)
unstack b6 b19 (1)
stack b6 b13 (1)
unstack b1 b7 (1)
put-down b1 (1)
unstack b7 b18 (1)
put-down b7 (1)
pick-up b1 (1)
stack b1 b7 (1)
unstack b18 b22 (1)
put-down b18 (1)
pick-up b22 (1)
stack b22 b6 (1)
pick-up b18 (1)
stack b18 b22 (1)
unstack b1 b7 (1)
put-down b1 (1)
pick-up b7 (1)
stack b7 b18 (1)
pick-up b1 (1)
stack b1 b7 (1)
unstack b14 b8 (1)
put-down b14 (1)
unstack b8 b11 (1)
put-down b8 (1)
unstack b11 b12 (1)
put-down b11 (1)
pick-up b8 (1)
stack b8 b11 (1)
pick-up b14 (1)
stack b14 b8 (1)
unstack b12 b4 (1)
put-down b12 (1)
unstack b4 b15 (1)
put-down b4 (1)
unstack b15 b10 (1)
put-down b15 (1)
unstack b10 b21 (1)
put-down b10 (1)
unstack b21 b3 (1)
stack b21 b1 (1)
unstack b3 b17 (1)
put-down b3 (1)
pick-up b15 (1)
stack b15 b10 (1)
pick-up b12 (1)
stack b12 b4 (1)
unstack b15 b10 (1)
put-down b15 (1)
pick-up b2 (1)
stack b2 b17 (1)
pick-up b10 (1)
stack b10 b21 (1)
pick-up b15 (1)
stack b15 b10 (1)
unstack b2 b17 (1)
put-down b2 (1)
unstack b17 b23 (1)
put-down b17 (1)
unstack b23 b9 (1)
stack b23 b16 (1)
pick-up b17 (1)
stack b17 b23 (1)
pick-up b20 (1)
stack b20 b9 (1)
pick-up b2 (1)
stack b2 b17 (1)
unstack b20 b9 (1)
put-down b20 (1)
pick-up b9 (1)
stack b9 b5 (1)
pick-up b20 (1)
stack b20 b9 (1)
unstack b12 b4 (1)
put-down b12 (1)
unstack b15 b10 (1)
put-down b15 (1)
pick-up b4 (1)
stack b4 b15 (1)
pick-up b12 (1)
stack b12 b4 (1)
unstack b14 b8 (1)
put-down b14 (1)
unstack b8 b11 (1)
put-down b8 (1)
pick-up b11 (1)
stack b11 b12 (1)
pick-up b8 (1)
stack b8 b11 (1)
pick-up b14 (1)
stack b14 b8 (1)
unstack b10 b21 (1)
put-down b10 (1)
unstack b21 b1 (1)
put-down b21 (1)
pick-up b10 (1)
stack b10 b21 (1)
unstack b1 b7 (1)
put-down b1 (1)
unstack b7 b18 (1)
put-down b7 (1)
pick-up b1 (1)
stack b1 b7 (1)
unstack b10 b21 (1)
put-down b10 (1)
pick-up b21 (1)
stack b21 b1 (1)
pick-up b10 (1)
stack b10 b21 (1)
unstack b18 b22 (1)
put-down b18 (1)
unstack b22 b6 (1)
put-down b22 (1)
pick-up b18 (1)
stack b18 b22 (1)
unstack b6 b13 (1)
put-down b6 (1)
pick-up b13 (1)
stack b13 b3 (1)
pick-up b6 (1)
stack b6 b13 (1)
unstack b18 b22 (1)
put-down b18 (1)
pick-up b22 (1)
stack b22 b6 (1)
pick-up b18 (1)
stack b18 b22 (1)
unstack b10 b21 (1)
put-down b10 (1)
unstack b21 b1 (1)
put-down b21 (1)
pick-up b10 (1)
stack b10 b21 (1)
unstack b1 b7 (1)
put-down b1 (1)
pick-up b7 (1)
stack b7 b18 (1)
pick-up b1 (1)
stack b1 b7 (1)
unstack b10 b21 (1)
put-down b10 (1)
pick-up b21 (1)
stack b21 b1 (1)
pick-up b10 (1)
stack b10 b21 (1)
unstack b14 b8 (1)
put-down b14 (1)
unstack b8 b11 (1)
put-down b8 (1)
unstack b11 b12 (1)
put-down b11 (1)
pick-up b8 (1)
stack b8 b11 (1)
pick-up b14 (1)
stack b14 b8 (1)
unstack b12 b4 (1)
put-down b12 (1)
unstack b4 b15 (1)
put-down b4 (1)
pick-up b12 (1)
stack b12 b4 (1)
pick-up b15 (1)
stack b15 b10 (1)
unstack b12 b4 (1)
put-down b12 (1)
pick-up b4 (1)
stack b4 b15 (1)
pick-up b12 (1)
stack b12 b4 (1)
unstack b14 b8 (1)
put-down b14 (1)
unstack b8 b11 (1)
put-down b8 (1)
pick-up b11 (1)
stack b11 b12 (1)
pick-up b8 (1)
stack b8 b11 (1)
pick-up b14 (1)
stack b14 b8 (1)
[t=0.0825738s, 26916 KB] Plan length: 222 step(s).
[t=0.0825738s, 26916 KB] Plan cost: 222
[t=0.0825738s, 26916 KB] Expanded 2412 state(s).
[t=0.0825738s, 26916 KB] Reopened 0 state(s).
[t=0.0825738s, 26916 KB] Evaluated 2413 state(s).
[t=0.0825738s, 26916 KB] Evaluations: 4826
[t=0.0825738s, 26916 KB] Generated 23657 state(s).
[t=0.0825738s, 26916 KB] Dead ends: 0 state(s).
[t=0.0825738s, 26916 KB] Number of registered states: 2413
[t=0.0825738s, 26916 KB] Int hash set load factor: 2413/4096 = 0.589111
[t=0.0825738s, 26916 KB] Int hash set resizes: 12
[t=0.0825738s, 26916 KB] Search time: 0.0638279s
[t=0.0825738s, 26916 KB] Total time: 0.0825738s
Solution found.
Peak memory: 26916 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.21s
