INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_21/bws_problem_21_85.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.009s wall-clock]
1472 relevant atoms
987 auxiliary atoms
2459 final queue length
4269 total queue pushes
Completing instantiation... [0.010s CPU, 0.015s wall-clock]
Instantiating: [0.020s CPU, 0.025s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
22 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.006s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.022s wall-clock]
1302 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
42 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.011s wall-clock]
Reordering and filtering variables...
43 of 43 variables necessary.
22 of 43 mutex groups necessary.
882 of 882 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 43
Translator derived variables: 0
Translator facts: 506
Translator goal facts: 17
Translator mutex groups: 22
Translator total mutex groups size: 484
Translator operators: 882
Translator axioms: 0
Translator task size: 7602
Translator peak memory: 36456 KB
Writing output... [0.010s CPU, 0.005s wall-clock]
Done! [0.080s CPU, 0.080s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=1.966e-05s, 24488 KB] reading input...
[t=0.00236526s, 25268 KB] done reading input!
[t=0.00317665s, 25664 KB] Initializing landmark count heuristic...
[t=0.00320667s, 25664 KB] Generating landmark graph...
[t=0.00327657s, 25664 KB] Building a landmark graph with reasonable orders.
[t=0.00333038s, 25664 KB] Initializing Exploration...
[t=0.00361144s, 25852 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0125891s, 26380 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0127381s, 26380 KB] Landmarks generation time: 0.00946295s
[t=0.0127539s, 26380 KB] Discovered 94 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0127745s, 26380 KB] 389 edges
[t=0.0127851s, 26380 KB] approx. reasonable orders
[t=0.0154624s, 26380 KB] approx. obedient reasonable orders
[t=0.0156092s, 26380 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0156199s, 26380 KB] Landmarks generation time: 0.0124105s
[t=0.0156296s, 26380 KB] Discovered 94 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0156378s, 26380 KB] 451 edges
[t=0.0156461s, 26380 KB] Landmark graph generation time: 0.0124462s
[t=0.0156545s, 26380 KB] Landmark graph contains 94 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0156624s, 26380 KB] Landmark graph contains 451 orderings.
[t=0.0159588s, 26380 KB] Simplifying 3486 unary operators... done! [2646 unary operators]
[t=0.016828s, 26380 KB] time to simplify: 0.000930977s
[t=0.0169433s, 26380 KB] Initializing additive heuristic...
[t=0.0169565s, 26380 KB] Initializing FF heuristic...
[t=0.0170076s, 26380 KB] Building successor generator...done!
[t=0.0171908s, 26380 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0171999s, 26380 KB] time for successor generation creation: 0.000151922s
[t=0.0172119s, 26380 KB] Variables: 43
[t=0.0172203s, 26380 KB] FactPairs: 506
[t=0.0172286s, 26380 KB] Bytes per state: 16
[t=0.017322s, 26380 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0173552s, 26380 KB] 43 initial landmarks, 17 goal landmarks
[t=0.0174172s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0174266s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0174351s, 26380 KB] g=0, 1 evaluated, 0 expanded
[t=0.0174488s, 26380 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0174573s, 26380 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0176144s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0176237s, 26380 KB] g=2, 7 evaluated, 6 expanded
[t=0.0176564s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.017665s, 26380 KB] g=2, 8 evaluated, 7 expanded
[t=0.0178532s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0178621s, 26380 KB] g=4, 16 evaluated, 15 expanded
[t=0.0178967s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0179056s, 26380 KB] g=4, 17 evaluated, 16 expanded
[t=0.0180504s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0180593s, 26380 KB] g=6, 23 evaluated, 22 expanded
[t=0.0181807s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0181898s, 26380 KB] g=6, 28 evaluated, 27 expanded
[t=0.0182688s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0182776s, 26380 KB] g=8, 31 evaluated, 30 expanded
[t=0.0185658s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0185755s, 26380 KB] g=8, 43 evaluated, 42 expanded
[t=0.0188967s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0189076s, 26380 KB] g=14, 57 evaluated, 56 expanded
[t=0.0191415s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0191511s, 26380 KB] g=10, 67 evaluated, 66 expanded
[t=0.019514s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0195239s, 26380 KB] g=12, 83 evaluated, 82 expanded
[t=0.0197589s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0197718s, 26380 KB] g=13, 93 evaluated, 92 expanded
[t=0.0202034s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0202132s, 26380 KB] g=22, 112 evaluated, 111 expanded
[t=0.020249s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0202589s, 26380 KB] g=16, 113 evaluated, 112 expanded
[t=0.0207462s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0207574s, 26380 KB] g=18, 133 evaluated, 132 expanded
[t=0.020836s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0208458s, 26380 KB] g=19, 136 evaluated, 135 expanded
[t=0.0209068s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0209161s, 26380 KB] g=26, 138 evaluated, 137 expanded
[t=0.0212711s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0212808s, 26380 KB] g=28, 153 evaluated, 152 expanded
[t=0.0214032s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0214121s, 26380 KB] g=21, 158 evaluated, 157 expanded
[t=0.0214695s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0214784s, 26380 KB] g=22, 160 evaluated, 159 expanded
[t=0.0216721s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.021682s, 26380 KB] g=30, 168 evaluated, 167 expanded
[t=0.0220308s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0220438s, 26380 KB] g=32, 183 evaluated, 182 expanded
[t=0.0221248s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0221342s, 26380 KB] g=24, 186 evaluated, 185 expanded
[t=0.0226725s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0226922s, 26380 KB] g=34, 209 evaluated, 208 expanded
[t=0.0227513s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0227761s, 26380 KB] g=26, 211 evaluated, 210 expanded
[t=0.0231124s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0231438s, 26380 KB] g=36, 223 evaluated, 222 expanded
[t=0.0234678s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.023481s, 26380 KB] g=38, 236 evaluated, 235 expanded
[t=0.0236611s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.023673s, 26380 KB] g=28, 243 evaluated, 242 expanded
[t=0.023714s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0237241s, 26380 KB] g=40, 244 evaluated, 243 expanded
[t=0.0239983s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0240085s, 26380 KB] g=42, 255 evaluated, 254 expanded
[t=0.0249161s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0249315s, 26380 KB] g=30, 291 evaluated, 290 expanded
[t=0.0255902s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0256026s, 26380 KB] g=32, 319 evaluated, 318 expanded
[t=0.0262221s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0262358s, 26380 KB] g=34, 347 evaluated, 346 expanded
[t=0.0279352s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0280075s, 26380 KB] g=36, 403 evaluated, 402 expanded
[t=0.0287055s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.028718s, 26380 KB] g=38, 434 evaluated, 433 expanded
[t=0.0291634s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0291737s, 26380 KB] g=60, 455 evaluated, 454 expanded
[t=0.0294004s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0294103s, 26380 KB] g=62, 465 evaluated, 464 expanded
[t=0.0295093s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0295191s, 26380 KB] g=40, 469 evaluated, 468 expanded
[t=0.0296799s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0296892s, 26380 KB] g=64, 476 evaluated, 475 expanded
[t=0.0299026s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0299115s, 26380 KB] g=66, 486 evaluated, 485 expanded
[t=0.0302507s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0302614s, 26380 KB] g=42, 502 evaluated, 501 expanded
[t=0.0304304s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0304397s, 26380 KB] g=70, 510 evaluated, 509 expanded
[t=0.0306349s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0306449s, 26380 KB] g=72, 518 evaluated, 517 expanded
[t=0.0309738s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0309836s, 26380 KB] g=44, 534 evaluated, 533 expanded
[t=0.0312768s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0312866s, 26380 KB] g=46, 549 evaluated, 548 expanded
[t=0.0317322s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0317415s, 26380 KB] g=48, 572 evaluated, 571 expanded
[t=0.0319269s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0319365s, 26380 KB] g=80, 581 evaluated, 580 expanded
[t=0.0320641s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0320732s, 26380 KB] g=82, 587 evaluated, 586 expanded
[t=0.0323896s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0324007s, 26380 KB] g=50, 603 evaluated, 602 expanded
[t=0.0324283s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0324382s, 26380 KB] g=51, 604 evaluated, 603 expanded
[t=0.0329101s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0329218s, 26380 KB] g=52, 630 evaluated, 629 expanded
[t=0.0329647s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0329735s, 26380 KB] g=53, 632 evaluated, 631 expanded
[t=0.0334271s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0334372s, 26380 KB] g=54, 660 evaluated, 659 expanded
[t=0.0334641s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.033473s, 26380 KB] g=98, 661 evaluated, 660 expanded
[t=0.033497s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0335062s, 26380 KB] g=55, 662 evaluated, 661 expanded
[t=0.0337952s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0338078s, 26380 KB] g=106, 682 evaluated, 681 expanded
[t=0.0338307s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0338396s, 26380 KB] g=56, 683 evaluated, 682 expanded
[t=0.0338623s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0338712s, 26380 KB] g=57, 684 evaluated, 683 expanded
[t=0.0339073s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0339159s, 26380 KB] g=106, 686 evaluated, 685 expanded
[t=0.0339328s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0339413s, 26380 KB] g=107, 687 evaluated, 686 expanded
[t=0.0339683s, 26380 KB] Solution found!
[t=0.0339794s, 26380 KB] Actual search time: 0.016621s
pick-up b17 (1)
stack b17 b13 (1)
unstack b6 b11 (1)
stack b6 b3 (1)
unstack b11 b19 (1)
put-down b11 (1)
unstack b19 b2 (1)
stack b19 b17 (1)
unstack b2 b10 (1)
put-down b2 (1)
unstack b10 b21 (1)
put-down b10 (1)
pick-up b21 (1)
stack b21 b19 (1)
unstack b6 b3 (1)
put-down b6 (1)
unstack b3 b12 (1)
put-down b3 (1)
unstack b12 b1 (1)
put-down b12 (1)
pick-up b6 (1)
stack b6 b3 (1)
unstack b1 b4 (1)
put-down b1 (1)
unstack b4 b18 (1)
stack b4 b11 (1)
unstack b18 b16 (1)
stack b18 b6 (1)
unstack b16 b5 (1)
stack b16 b12 (1)
unstack b5 b9 (1)
stack b5 b18 (1)
unstack b9 b8 (1)
put-down b9 (1)
pick-up b10 (1)
stack b10 b9 (1)
pick-up b2 (1)
stack b2 b5 (1)
unstack b8 b14 (1)
stack b8 b10 (1)
pick-up b14 (1)
stack b14 b8 (1)
unstack b21 b19 (1)
put-down b21 (1)
unstack b19 b17 (1)
put-down b19 (1)
pick-up b21 (1)
stack b21 b19 (1)
unstack b17 b13 (1)
put-down b17 (1)
unstack b13 b20 (1)
put-down b13 (1)
pick-up b1 (1)
stack b1 b20 (1)
pick-up b17 (1)
stack b17 b13 (1)
unstack b1 b20 (1)
put-down b1 (1)
unstack b20 b15 (1)
stack b20 b16 (1)
unstack b15 b7 (1)
put-down b15 (1)
pick-up b1 (1)
stack b1 b20 (1)
pick-up b7 (1)
stack b7 b21 (1)
unstack b17 b13 (1)
put-down b17 (1)
pick-up b13 (1)
stack b13 b15 (1)
pick-up b17 (1)
stack b17 b13 (1)
unstack b7 b21 (1)
put-down b7 (1)
unstack b21 b19 (1)
put-down b21 (1)
pick-up b19 (1)
stack b19 b17 (1)
pick-up b21 (1)
stack b21 b19 (1)
pick-up b7 (1)
stack b7 b21 (1)
unstack b2 b5 (1)
put-down b2 (1)
unstack b5 b18 (1)
put-down b5 (1)
unstack b18 b6 (1)
put-down b18 (1)
pick-up b5 (1)
stack b5 b18 (1)
pick-up b2 (1)
stack b2 b5 (1)
unstack b6 b3 (1)
put-down b6 (1)
pick-up b3 (1)
stack b3 b7 (1)
pick-up b6 (1)
stack b6 b3 (1)
unstack b2 b5 (1)
put-down b2 (1)
unstack b5 b18 (1)
put-down b5 (1)
pick-up b18 (1)
stack b18 b6 (1)
pick-up b5 (1)
stack b5 b18 (1)
pick-up b2 (1)
stack b2 b5 (1)
[t=0.0339892s, 26380 KB] Plan length: 108 step(s).
[t=0.0339892s, 26380 KB] Plan cost: 108
[t=0.0339892s, 26380 KB] Expanded 688 state(s).
[t=0.0339892s, 26380 KB] Reopened 0 state(s).
[t=0.0339892s, 26380 KB] Evaluated 689 state(s).
[t=0.0339892s, 26380 KB] Evaluations: 1378
[t=0.0339892s, 26380 KB] Generated 7554 state(s).
[t=0.0339892s, 26380 KB] Dead ends: 0 state(s).
[t=0.0339892s, 26380 KB] Number of registered states: 689
[t=0.0339892s, 26380 KB] Int hash set load factor: 689/1024 = 0.672852
[t=0.0339892s, 26380 KB] Int hash set resizes: 10
[t=0.0339892s, 26380 KB] Search time: 0.0166676s
[t=0.0339892s, 26380 KB] Total time: 0.0339892s
Solution found.
Peak memory: 26380 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.15s
