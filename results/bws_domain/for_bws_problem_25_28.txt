INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_25/bws_problem_25_28.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.010s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
2052 relevant atoms
1375 auxiliary atoms
3427 final queue length
5982 total queue pushes
Completing instantiation... [0.020s CPU, 0.021s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.010s CPU, 0.000s wall-clock]
Choosing groups...
26 uncovered facts
Choosing groups: [0.000s CPU, 0.002s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.008s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.002s wall-clock]
Translating task: [0.030s CPU, 0.032s wall-clock]
1850 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
50 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.026s wall-clock]
Reordering and filtering variables...
51 of 51 variables necessary.
26 of 51 mutex groups necessary.
1250 of 1250 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.008s wall-clock]
Translator variables: 51
Translator derived variables: 0
Translator facts: 702
Translator goal facts: 19
Translator mutex groups: 26
Translator total mutex groups size: 676
Translator operators: 1250
Translator axioms: 0
Translator task size: 10748
Translator peak memory: 38388 KB
Writing output... [0.010s CPU, 0.006s wall-clock]
Done! [0.120s CPU, 0.120s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.0135e-05s, 24488 KB] reading input...
[t=0.00351289s, 25632 KB] done reading input!
[t=0.00432645s, 26028 KB] Initializing landmark count heuristic...
[t=0.00436214s, 26028 KB] Generating landmark graph...
[t=0.00445798s, 26160 KB] Building a landmark graph with reasonable orders.
[t=0.00454416s, 26160 KB] Initializing Exploration...
[t=0.0049654s, 26532 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0191236s, 27060 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0192467s, 27060 KB] Landmarks generation time: 0.0147886s
[t=0.0192634s, 27060 KB] Discovered 106 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0192858s, 27060 KB] 499 edges
[t=0.0192958s, 27060 KB] approx. reasonable orders
[t=0.0204043s, 27060 KB] approx. obedient reasonable orders
[t=0.0204339s, 27060 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0204433s, 27060 KB] Landmarks generation time: 0.0160771s
[t=0.0204528s, 27060 KB] Discovered 106 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0204607s, 27060 KB] 515 edges
[t=0.020469s, 27060 KB] Landmark graph generation time: 0.0161139s
[t=0.0204777s, 27060 KB] Landmark graph contains 106 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0204861s, 27060 KB] Landmark graph contains 515 orderings.
[t=0.0208957s, 27060 KB] Simplifying 4950 unary operators... done! [3750 unary operators]
[t=0.0220962s, 27060 KB] time to simplify: 0.00128313s
[t=0.0222556s, 27060 KB] Initializing additive heuristic...
[t=0.0222719s, 27060 KB] Initializing FF heuristic...
[t=0.0223244s, 27060 KB] Building successor generator...done!
[t=0.0225713s, 27060 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0225807s, 27060 KB] time for successor generation creation: 0.000219582s
[t=0.0225935s, 27060 KB] Variables: 51
[t=0.0226018s, 27060 KB] FactPairs: 702
[t=0.0226098s, 27060 KB] Bytes per state: 20
[t=0.0226976s, 27060 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0227312s, 27060 KB] 50 initial landmarks, 19 goal landmarks
[t=0.0227919s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.022802s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0228103s, 27060 KB] g=0, 1 evaluated, 0 expanded
[t=0.0228242s, 27060 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0228331s, 27060 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0230068s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0230166s, 27060 KB] g=1, 6 evaluated, 5 expanded
[t=0.0230873s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0230965s, 27060 KB] g=2, 8 evaluated, 7 expanded
[t=0.0233727s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0233821s, 27060 KB] g=3, 17 evaluated, 16 expanded
[t=0.0234238s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0234325s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0234409s, 27060 KB] g=4, 18 evaluated, 17 expanded
[t=0.023568s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0235769s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.023585s, 27060 KB] g=6, 22 evaluated, 21 expanded
[t=0.0237121s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0237209s, 27060 KB] g=8, 26 evaluated, 25 expanded
[t=0.0239711s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0239807s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0239886s, 27060 KB] g=10, 34 evaluated, 33 expanded
[t=0.0241151s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0241243s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0241322s, 27060 KB] g=12, 38 evaluated, 37 expanded
[t=0.0242883s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0243005s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0243093s, 27060 KB] g=14, 43 evaluated, 42 expanded
[t=0.0244395s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0244484s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0244565s, 27060 KB] g=16, 47 evaluated, 46 expanded
[t=0.0247094s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0247191s, 27060 KB] g=21, 55 evaluated, 54 expanded
[t=0.0250025s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0250117s, 27060 KB] g=24, 64 evaluated, 63 expanded
[t=0.0252382s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0252487s, 27060 KB] g=26, 71 evaluated, 70 expanded
[t=0.0256071s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0256165s, 27060 KB] g=28, 83 evaluated, 82 expanded
[t=0.025686s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0256946s, 27060 KB] g=28, 85 evaluated, 84 expanded
[t=0.0259044s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.025913s, 27060 KB] g=30, 92 evaluated, 91 expanded
[t=0.0260391s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0260477s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0260555s, 27060 KB] g=32, 96 evaluated, 95 expanded
[t=0.026241s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0262497s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0262574s, 27060 KB] g=34, 102 evaluated, 101 expanded
[t=0.0264503s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0264588s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0264667s, 27060 KB] g=36, 108 evaluated, 107 expanded
[t=0.0266283s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0266368s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0266445s, 27060 KB] g=38, 113 evaluated, 112 expanded
[t=0.0267737s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0267823s, 27060 KB] g=39, 117 evaluated, 116 expanded
[t=0.0269157s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0269246s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0269326s, 27060 KB] g=40, 121 evaluated, 120 expanded
[t=0.0270054s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0270144s, 27060 KB] g=41, 123 evaluated, 122 expanded
[t=0.027173s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0271818s, 27060 KB] g=43, 128 evaluated, 127 expanded
[t=0.0272291s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0272401s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0272481s, 27060 KB] g=44, 129 evaluated, 128 expanded
[t=0.0274335s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0274421s, 27060 KB] g=46, 135 evaluated, 134 expanded
[t=0.0276263s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.027635s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0276428s, 27060 KB] g=48, 141 evaluated, 140 expanded
[t=0.0278619s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0278708s, 27060 KB] g=50, 148 evaluated, 147 expanded
[t=0.0279421s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0279538s, 27060 KB] g=50, 150 evaluated, 149 expanded
[t=0.0282355s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0282445s, 27060 KB] g=52, 159 evaluated, 158 expanded
[t=0.0284607s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0284699s, 27060 KB] g=52, 166 evaluated, 165 expanded
[t=0.0285682s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0285769s, 27060 KB] g=54, 169 evaluated, 168 expanded
[t=0.0289168s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0289268s, 27060 KB] g=54, 180 evaluated, 179 expanded
[t=0.0291174s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0291264s, 27060 KB] g=56, 186 evaluated, 185 expanded
[t=0.0296547s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0296656s, 27060 KB] g=58, 203 evaluated, 202 expanded
[t=0.0298489s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0298579s, 27060 KB] g=60, 209 evaluated, 208 expanded
[t=0.0299587s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.029968s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0299764s, 27060 KB] g=60, 212 evaluated, 211 expanded
[t=0.030135s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.030144s, 27060 KB] g=62, 217 evaluated, 216 expanded
[t=0.0320595s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0320689s, 27060 KB] g=70, 281 evaluated, 280 expanded
[t=0.0321361s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0321449s, 27060 KB] g=71, 283 evaluated, 282 expanded
[t=0.0322718s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0322805s, 27060 KB] g=72, 287 evaluated, 286 expanded
[t=0.0323456s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0323541s, 27060 KB] g=73, 289 evaluated, 288 expanded
[t=0.0354012s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0354178s, 27060 KB] g=90, 395 evaluated, 394 expanded
[t=0.0356589s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0356706s, 27060 KB] g=92, 404 evaluated, 403 expanded
[t=0.0357337s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.035743s, 27060 KB] g=93, 406 evaluated, 405 expanded
[t=0.0359444s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0359556s, 27060 KB] g=96, 413 evaluated, 412 expanded
[t=0.03602s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0360293s, 27060 KB] g=97, 415 evaluated, 414 expanded
[t=0.0361618s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0361716s, 27060 KB] g=98, 419 evaluated, 418 expanded
[t=0.0362378s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0362479s, 27060 KB] g=99, 421 evaluated, 420 expanded
[t=0.0364163s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0364264s, 27060 KB] g=102, 427 evaluated, 426 expanded
[t=0.0364637s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0364728s, 27060 KB] g=103, 428 evaluated, 427 expanded
[t=0.0365133s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0365223s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0365303s, 27060 KB] g=104, 429 evaluated, 428 expanded
[t=0.0376542s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0376673s, 27060 KB] g=118, 473 evaluated, 472 expanded
[t=0.0377444s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0377534s, 27060 KB] g=120, 476 evaluated, 475 expanded
[t=0.0379537s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0379633s, 27060 KB] g=128, 486 evaluated, 485 expanded
[t=0.0380395s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0380482s, 27060 KB] g=132, 490 evaluated, 489 expanded
[t=0.0380669s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0380758s, 27060 KB] g=133, 491 evaluated, 490 expanded
[t=0.0380915s, 27060 KB] Solution found!
[t=0.0381053s, 27060 KB] Actual search time: 0.0153709s
unstack b5 b14 (1)
put-down b5 (1)
unstack b8 b22 (1)
stack b8 b14 (1)
pick-up b17 (1)
stack b17 b5 (1)
unstack b18 b3 (1)
put-down b18 (1)
unstack b20 b24 (1)
stack b20 b3 (1)
unstack b24 b7 (1)
put-down b24 (1)
unstack b7 b23 (1)
stack b7 b20 (1)
pick-up b23 (1)
stack b23 b7 (1)
unstack b8 b14 (1)
put-down b8 (1)
unstack b14 b16 (1)
put-down b14 (1)
unstack b16 b9 (1)
put-down b16 (1)
unstack b9 b12 (1)
put-down b9 (1)
pick-up b14 (1)
stack b14 b16 (1)
pick-up b8 (1)
stack b8 b14 (1)
unstack b12 b4 (1)
put-down b12 (1)
unstack b4 b11 (1)
put-down b4 (1)
unstack b11 b10 (1)
stack b11 b4 (1)
unstack b10 b6 (1)
stack b10 b23 (1)
unstack b6 b25 (1)
stack b6 b22 (1)
pick-up b12 (1)
stack b12 b10 (1)
unstack b25 b2 (1)
put-down b25 (1)
unstack b2 b19 (1)
stack b2 b6 (1)
unstack b19 b15 (1)
put-down b19 (1)
unstack b15 b13 (1)
put-down b15 (1)
unstack b13 b1 (1)
put-down b13 (1)
pick-up b25 (1)
stack b25 b13 (1)
pick-up b18 (1)
stack b18 b15 (1)
unstack b25 b13 (1)
put-down b25 (1)
pick-up b13 (1)
stack b13 b18 (1)
pick-up b25 (1)
stack b25 b13 (1)
pick-up b1 (1)
stack b1 b19 (1)
unstack b8 b14 (1)
put-down b8 (1)
unstack b14 b16 (1)
put-down b14 (1)
pick-up b16 (1)
stack b16 b11 (1)
pick-up b14 (1)
stack b14 b16 (1)
pick-up b8 (1)
stack b8 b14 (1)
unstack b12 b10 (1)
put-down b12 (1)
unstack b10 b23 (1)
put-down b10 (1)
unstack b23 b7 (1)
put-down b23 (1)
pick-up b10 (1)
stack b10 b23 (1)
pick-up b12 (1)
stack b12 b10 (1)
unstack b7 b20 (1)
put-down b7 (1)
unstack b1 b19 (1)
put-down b1 (1)
unstack b20 b3 (1)
put-down b20 (1)
unstack b3 b21 (1)
stack b3 b24 (1)
pick-up b21 (1)
stack b21 b12 (1)
pick-up b1 (1)
stack b1 b19 (1)
pick-up b20 (1)
stack b20 b3 (1)
pick-up b7 (1)
stack b7 b20 (1)
unstack b21 b12 (1)
put-down b21 (1)
unstack b1 b19 (1)
put-down b1 (1)
pick-up b19 (1)
stack b19 b21 (1)
pick-up b1 (1)
stack b1 b19 (1)
unstack b12 b10 (1)
put-down b12 (1)
unstack b10 b23 (1)
put-down b10 (1)
pick-up b12 (1)
stack b12 b10 (1)
pick-up b23 (1)
stack b23 b7 (1)
unstack b12 b10 (1)
put-down b12 (1)
pick-up b10 (1)
stack b10 b23 (1)
pick-up b12 (1)
stack b12 b10 (1)
unstack b1 b19 (1)
put-down b1 (1)
unstack b19 b21 (1)
put-down b19 (1)
pick-up b1 (1)
stack b1 b19 (1)
pick-up b21 (1)
stack b21 b12 (1)
unstack b1 b19 (1)
put-down b1 (1)
pick-up b19 (1)
stack b19 b21 (1)
pick-up b1 (1)
stack b1 b19 (1)
[t=0.0381145s, 27060 KB] Plan length: 134 step(s).
[t=0.0381145s, 27060 KB] Plan cost: 134
[t=0.0381145s, 27060 KB] Expanded 491 state(s).
[t=0.0381145s, 27060 KB] Reopened 0 state(s).
[t=0.0381145s, 27060 KB] Evaluated 492 state(s).
[t=0.0381145s, 27060 KB] Evaluations: 984
[t=0.0381145s, 27060 KB] Generated 5016 state(s).
[t=0.0381145s, 27060 KB] Dead ends: 0 state(s).
[t=0.0381145s, 27060 KB] Number of registered states: 492
[t=0.0381145s, 27060 KB] Int hash set load factor: 492/512 = 0.960938
[t=0.0381145s, 27060 KB] Int hash set resizes: 9
[t=0.0381145s, 27060 KB] Search time: 0.0154173s
[t=0.0381145s, 27060 KB] Total time: 0.0381145s
Solution found.
Peak memory: 27060 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.21s
