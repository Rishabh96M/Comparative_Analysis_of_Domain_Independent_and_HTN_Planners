INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_29/bws_problem_29_62.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.003s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.016s wall-clock]
2728 relevant atoms
1827 auxiliary atoms
4555 final queue length
7984 total queue pushes
Completing instantiation... [0.030s CPU, 0.030s wall-clock]
Instantiating: [0.050s CPU, 0.049s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
30 uncovered facts
Choosing groups: [0.000s CPU, 0.002s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.001s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.002s wall-clock]
Translating task: [0.040s CPU, 0.048s wall-clock]
2494 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
58 propositions removed
Detecting unreachable propositions: [0.030s CPU, 0.023s wall-clock]
Reordering and filtering variables...
59 of 59 variables necessary.
30 of 59 mutex groups necessary.
1682 of 1682 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.011s wall-clock]
Translator variables: 59
Translator derived variables: 0
Translator facts: 930
Translator goal facts: 24
Translator mutex groups: 30
Translator total mutex groups size: 900
Translator operators: 1682
Translator axioms: 0
Translator task size: 14441
Translator peak memory: 40824 KB
Writing output... [0.010s CPU, 0.009s wall-clock]
Done! [0.150s CPU, 0.157s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=3.5396e-05s, 24488 KB] reading input...
[t=0.00522931s, 26220 KB] done reading input!
[t=0.00620004s, 26616 KB] Initializing landmark count heuristic...
[t=0.00623547s, 26616 KB] Generating landmark graph...
[t=0.00632793s, 26748 KB] Building a landmark graph with reasonable orders.
[t=0.00641864s, 26748 KB] Initializing Exploration...
[t=0.006894s, 27200 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0306949s, 28124 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0308086s, 28124 KB] Landmarks generation time: 0.0244907s
[t=0.0308341s, 28124 KB] Discovered 127 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0308532s, 28124 KB] 780 edges
[t=0.030864s, 28124 KB] approx. reasonable orders
[t=0.0346181s, 28124 KB] approx. obedient reasonable orders
[t=0.034772s, 28124 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0347877s, 28124 KB] Landmarks generation time: 0.0285502s
[t=0.0347992s, 28124 KB] Discovered 127 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0348085s, 28124 KB] 818 edges
[t=0.0348179s, 28124 KB] Landmark graph generation time: 0.0285901s
[t=0.0348271s, 28124 KB] Landmark graph contains 127 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0348358s, 28124 KB] Landmark graph contains 818 orderings.
[t=0.035742s, 28148 KB] Simplifying 6670 unary operators... done! [5046 unary operators]
[t=0.0373427s, 28148 KB] time to simplify: 0.00171269s
[t=0.0376105s, 28148 KB] Initializing additive heuristic...
[t=0.037707s, 28148 KB] Initializing FF heuristic...
[t=0.0377977s, 28148 KB] Building successor generator...done!
[t=0.0381271s, 28148 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0381546s, 28148 KB] time for successor generation creation: 0.000298563s
[t=0.0381713s, 28148 KB] Variables: 59
[t=0.0381805s, 28148 KB] FactPairs: 930
[t=0.0381914s, 28148 KB] Bytes per state: 24
[t=0.0384241s, 28148 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0384677s, 28148 KB] 59 initial landmarks, 24 goal landmarks
[t=0.038587s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 68
[t=0.0385971s, 28148 KB] New best heuristic value for ff(transform = adapt_costs(one)): 52
[t=0.0386055s, 28148 KB] g=0, 1 evaluated, 0 expanded
[t=0.0386202s, 28148 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 68
[t=0.0386288s, 28148 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 52
[t=0.038726s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 67
[t=0.038736s, 28148 KB] g=1, 3 evaluated, 2 expanded
[t=0.0387865s, 28148 KB] New best heuristic value for ff(transform = adapt_costs(one)): 51
[t=0.0387962s, 28148 KB] g=2, 4 evaluated, 3 expanded
[t=0.03929s, 28148 KB] New best heuristic value for ff(transform = adapt_costs(one)): 50
[t=0.0393004s, 28148 KB] g=4, 17 evaluated, 16 expanded
[t=0.0394575s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 66
[t=0.0394665s, 28148 KB] g=4, 21 evaluated, 20 expanded
[t=0.0398243s, 28148 KB] New best heuristic value for ff(transform = adapt_costs(one)): 49
[t=0.0398341s, 28148 KB] g=6, 30 evaluated, 29 expanded
[t=0.0402559s, 28148 KB] New best heuristic value for ff(transform = adapt_costs(one)): 48
[t=0.0402655s, 28148 KB] g=8, 41 evaluated, 40 expanded
[t=0.040389s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 65
[t=0.0403981s, 28148 KB] g=6, 44 evaluated, 43 expanded
[t=0.0413572s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 63
[t=0.0413668s, 28148 KB] g=8, 69 evaluated, 68 expanded
[t=0.0421647s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 62
[t=0.0421744s, 28148 KB] g=10, 90 evaluated, 89 expanded
[t=0.043094s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 61
[t=0.0431082s, 28148 KB] g=12, 113 evaluated, 112 expanded
[t=0.0432397s, 28148 KB] New best heuristic value for ff(transform = adapt_costs(one)): 47
[t=0.0432506s, 28148 KB] g=14, 116 evaluated, 115 expanded
[t=0.0440963s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 60
[t=0.0441207s, 28148 KB] g=14, 138 evaluated, 137 expanded
[t=0.0450552s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.0450644s, 28148 KB] g=16, 163 evaluated, 162 expanded
[t=0.0460615s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 58
[t=0.046071s, 28148 KB] g=18, 190 evaluated, 189 expanded
[t=0.046236s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 57
[t=0.0462448s, 28148 KB] g=19, 194 evaluated, 193 expanded
[t=0.0463346s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0463433s, 28148 KB] g=20, 196 evaluated, 195 expanded
[t=0.047401s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.04741s, 28148 KB] g=22, 224 evaluated, 223 expanded
[t=0.0494055s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0494217s, 28148 KB] g=26, 275 evaluated, 274 expanded
[t=0.0506942s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0507066s, 28148 KB] g=28, 306 evaluated, 305 expanded
[t=0.0513357s, 28148 KB] New best heuristic value for ff(transform = adapt_costs(one)): 46
[t=0.0513479s, 28148 KB] g=30, 322 evaluated, 321 expanded
[t=0.0514812s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0514926s, 28148 KB] g=30, 325 evaluated, 324 expanded
[t=0.0523285s, 28148 KB] New best heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0523443s, 28148 KB] g=32, 347 evaluated, 346 expanded
[t=0.0526055s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0526196s, 28148 KB] g=32, 353 evaluated, 352 expanded
[t=0.0535891s, 28148 KB] New best heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.0536038s, 28148 KB] g=34, 376 evaluated, 375 expanded
[t=0.0540064s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0540155s, 28148 KB] g=34, 386 evaluated, 385 expanded
[t=0.0549229s, 28148 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0549329s, 28148 KB] g=36, 410 evaluated, 409 expanded
[t=0.055181s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0551908s, 28148 KB] g=36, 416 evaluated, 415 expanded
[t=0.0559523s, 28148 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0559639s, 28148 KB] g=38, 436 evaluated, 435 expanded
[t=0.056329s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0563381s, 28148 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0563463s, 28148 KB] g=38, 445 evaluated, 444 expanded
[t=0.0567749s, 28148 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0567837s, 28148 KB] g=40, 456 evaluated, 455 expanded
[t=0.0574457s, 28148 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0574548s, 28148 KB] g=42, 474 evaluated, 473 expanded
[t=0.0610894s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0611254s, 28148 KB] g=48, 566 evaluated, 565 expanded
[t=0.0620962s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0621093s, 28148 KB] g=50, 591 evaluated, 590 expanded
[t=0.0630351s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0630512s, 28148 KB] g=52, 613 evaluated, 612 expanded
[t=0.0635964s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0636107s, 28148 KB] g=54, 626 evaluated, 625 expanded
[t=0.0638983s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.063909s, 28148 KB] g=55, 633 evaluated, 632 expanded
[t=0.0640007s, 28148 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0640112s, 28148 KB] g=56, 635 evaluated, 634 expanded
[t=0.0649239s, 28148 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0649364s, 28148 KB] g=58, 658 evaluated, 657 expanded
[t=0.0651211s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0651305s, 28148 KB] g=58, 662 evaluated, 661 expanded
[t=0.0658687s, 28148 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0658802s, 28148 KB] g=60, 681 evaluated, 680 expanded
[t=0.0663189s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0663303s, 28148 KB] g=60, 692 evaluated, 691 expanded
[t=0.0666124s, 28148 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0666227s, 28148 KB] g=62, 699 evaluated, 698 expanded
[t=0.067495s, 28148 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0675197s, 28148 KB] g=64, 720 evaluated, 719 expanded
[t=0.0677111s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0677211s, 28148 KB] g=62, 724 evaluated, 723 expanded
[t=0.0685838s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0685977s, 28148 KB] g=64, 745 evaluated, 744 expanded
[t=0.0697608s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.069772s, 28148 KB] g=66, 774 evaluated, 773 expanded
[t=0.071002s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0710124s, 28148 KB] g=68, 806 evaluated, 805 expanded
[t=0.0722024s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.072221s, 28148 KB] g=70, 835 evaluated, 834 expanded
[t=0.0728064s, 28148 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0728166s, 28148 KB] g=72, 849 evaluated, 848 expanded
[t=0.0732592s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0732712s, 28148 KB] g=72, 860 evaluated, 859 expanded
[t=0.0740542s, 28148 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0740793s, 28148 KB] g=74, 879 evaluated, 878 expanded
[t=0.0742628s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0742738s, 28148 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0742821s, 28148 KB] g=74, 883 evaluated, 882 expanded
[t=0.0746811s, 28148 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0746909s, 28148 KB] g=76, 893 evaluated, 892 expanded
[t=0.0749058s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0749154s, 28148 KB] g=76, 898 evaluated, 897 expanded
[t=0.0755758s, 28148 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0755876s, 28148 KB] g=78, 914 evaluated, 913 expanded
[t=0.0757166s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0757265s, 28148 KB] g=78, 917 evaluated, 916 expanded
[t=0.0761281s, 28148 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0761393s, 28148 KB] g=80, 927 evaluated, 926 expanded
[t=0.0762701s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0762805s, 28148 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0762892s, 28148 KB] g=80, 930 evaluated, 929 expanded
[t=0.0765719s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0765835s, 28148 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0765919s, 28148 KB] g=82, 937 evaluated, 936 expanded
[t=0.077276s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0772953s, 28148 KB] g=86, 953 evaluated, 952 expanded
[t=0.077516s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0775282s, 28148 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0775368s, 28148 KB] g=88, 958 evaluated, 957 expanded
[t=0.0781485s, 28148 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0781657s, 28148 KB] g=92, 973 evaluated, 972 expanded
[t=0.0784181s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0784357s, 28148 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0784448s, 28148 KB] g=94, 979 evaluated, 978 expanded
[t=0.0814097s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0814322s, 28148 KB] g=106, 1053 evaluated, 1052 expanded
[t=0.0819781s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0819893s, 28148 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.081998s, 28148 KB] g=112, 1067 evaluated, 1066 expanded
[t=0.0928178s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.092843s, 28148 KB] g=140, 1341 evaluated, 1340 expanded
[t=0.0934955s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0935072s, 28148 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0935157s, 28148 KB] g=150, 1358 evaluated, 1357 expanded
[t=0.140335s, 28148 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.140405s, 28148 KB] g=230, 2552 evaluated, 2551 expanded
[t=0.141025s, 28280 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.141045s, 28280 KB] g=234, 2568 evaluated, 2567 expanded
[t=0.141219s, 28280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.14123s, 28280 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.141238s, 28280 KB] g=236, 2572 evaluated, 2571 expanded
[t=0.143368s, 28280 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.143418s, 28280 KB] g=248, 2626 evaluated, 2625 expanded
[t=0.143773s, 28280 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.14379s, 28280 KB] g=252, 2635 evaluated, 2634 expanded
[t=0.143904s, 28280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.143914s, 28280 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.143922s, 28280 KB] g=254, 2638 evaluated, 2637 expanded
[t=0.146917s, 28280 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.146933s, 28280 KB] g=284, 2739 evaluated, 2738 expanded
[t=0.147177s, 28280 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.147187s, 28280 KB] g=288, 2748 evaluated, 2747 expanded
[t=0.147342s, 28280 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.147357s, 28280 KB] g=290, 2751 evaluated, 2750 expanded
[t=0.147778s, 28280 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.14779s, 28280 KB] g=302, 2769 evaluated, 2768 expanded
[t=0.147881s, 28280 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.14789s, 28280 KB] g=306, 2773 evaluated, 2772 expanded
[t=0.147911s, 28280 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.147921s, 28280 KB] g=307, 2774 evaluated, 2773 expanded
[t=0.147938s, 28280 KB] Solution found!
[t=0.147965s, 28280 KB] Actual search time: 0.109495s
unstack b11 b25 (1)
put-down b11 (1)
unstack b14 b28 (1)
put-down b14 (1)
unstack b16 b22 (1)
put-down b16 (1)
unstack b25 b29 (1)
stack b25 b10 (1)
unstack b28 b7 (1)
put-down b28 (1)
unstack b29 b2 (1)
put-down b29 (1)
unstack b2 b19 (1)
put-down b2 (1)
unstack b19 b27 (1)
put-down b19 (1)
unstack b27 b1 (1)
put-down b27 (1)
unstack b1 b21 (1)
stack b1 b22 (1)
unstack b7 b8 (1)
put-down b7 (1)
unstack b1 b22 (1)
put-down b1 (1)
unstack b22 b23 (1)
put-down b22 (1)
pick-up b1 (1)
stack b1 b22 (1)
pick-up b12 (1)
stack b12 b21 (1)
pick-up b11 (1)
stack b11 b12 (1)
pick-up b23 (1)
stack b23 b25 (1)
pick-up b19 (1)
stack b19 b23 (1)
pick-up b9 (1)
stack b9 b7 (1)
unstack b11 b12 (1)
put-down b11 (1)
unstack b12 b21 (1)
put-down b12 (1)
pick-up b11 (1)
stack b11 b12 (1)
unstack b21 b5 (1)
put-down b21 (1)
unstack b5 b18 (1)
put-down b5 (1)
unstack b18 b3 (1)
stack b18 b19 (1)
unstack b3 b24 (1)
stack b3 b18 (1)
unstack b24 b15 (1)
stack b24 b2 (1)
unstack b15 b4 (1)
put-down b15 (1)
unstack b4 b17 (1)
stack b4 b27 (1)
unstack b17 b20 (1)
put-down b17 (1)
unstack b20 b26 (1)
put-down b20 (1)
unstack b26 b6 (1)
put-down b26 (1)
pick-up b8 (1)
stack b8 b6 (1)
pick-up b14 (1)
stack b14 b4 (1)
pick-up b16 (1)
stack b16 b14 (1)
pick-up b13 (1)
stack b13 b16 (1)
pick-up b21 (1)
stack b21 b5 (1)
pick-up b28 (1)
stack b28 b24 (1)
pick-up b20 (1)
stack b20 b28 (1)
pick-up b29 (1)
stack b29 b17 (1)
pick-up b15 (1)
stack b15 b29 (1)
unstack b8 b6 (1)
put-down b8 (1)
pick-up b6 (1)
stack b6 b13 (1)
pick-up b8 (1)
stack b8 b6 (1)
unstack b11 b12 (1)
put-down b11 (1)
pick-up b12 (1)
stack b12 b21 (1)
pick-up b11 (1)
stack b11 b12 (1)
unstack b20 b28 (1)
put-down b20 (1)
unstack b28 b24 (1)
put-down b28 (1)
pick-up b20 (1)
stack b20 b28 (1)
unstack b24 b2 (1)
put-down b24 (1)
pick-up b2 (1)
stack b2 b3 (1)
pick-up b24 (1)
stack b24 b2 (1)
unstack b20 b28 (1)
put-down b20 (1)
pick-up b28 (1)
stack b28 b24 (1)
pick-up b20 (1)
stack b20 b28 (1)
unstack b8 b6 (1)
put-down b8 (1)
unstack b6 b13 (1)
put-down b6 (1)
unstack b13 b16 (1)
put-down b13 (1)
pick-up b6 (1)
stack b6 b13 (1)
pick-up b8 (1)
stack b8 b6 (1)
unstack b16 b14 (1)
put-down b16 (1)
unstack b14 b4 (1)
put-down b14 (1)
pick-up b16 (1)
stack b16 b14 (1)
unstack b4 b27 (1)
put-down b4 (1)
pick-up b27 (1)
stack b27 b20 (1)
pick-up b4 (1)
stack b4 b27 (1)
unstack b16 b14 (1)
put-down b16 (1)
pick-up b14 (1)
stack b14 b4 (1)
pick-up b16 (1)
stack b16 b14 (1)
unstack b8 b6 (1)
put-down b8 (1)
unstack b6 b13 (1)
put-down b6 (1)
pick-up b13 (1)
stack b13 b16 (1)
pick-up b8 (1)
stack b8 b6 (1)
unstack b13 b16 (1)
put-down b13 (1)
unstack b16 b14 (1)
put-down b16 (1)
pick-up b13 (1)
stack b13 b16 (1)
unstack b8 b6 (1)
put-down b8 (1)
pick-up b6 (1)
stack b6 b13 (1)
pick-up b8 (1)
stack b8 b6 (1)
unstack b14 b4 (1)
put-down b14 (1)
unstack b4 b27 (1)
put-down b4 (1)
pick-up b14 (1)
stack b14 b4 (1)
unstack b27 b20 (1)
put-down b27 (1)
unstack b20 b28 (1)
put-down b20 (1)
pick-up b27 (1)
stack b27 b20 (1)
unstack b14 b4 (1)
put-down b14 (1)
pick-up b4 (1)
stack b4 b27 (1)
pick-up b14 (1)
stack b14 b4 (1)
unstack b8 b6 (1)
put-down b8 (1)
unstack b6 b13 (1)
put-down b6 (1)
pick-up b8 (1)
stack b8 b6 (1)
unstack b13 b16 (1)
put-down b13 (1)
pick-up b16 (1)
stack b16 b14 (1)
pick-up b13 (1)
stack b13 b16 (1)
unstack b8 b6 (1)
put-down b8 (1)
pick-up b6 (1)
stack b6 b13 (1)
pick-up b8 (1)
stack b8 b6 (1)
unstack b28 b24 (1)
put-down b28 (1)
unstack b24 b2 (1)
put-down b24 (1)
pick-up b28 (1)
stack b28 b24 (1)
unstack b2 b3 (1)
put-down b2 (1)
unstack b3 b18 (1)
put-down b3 (1)
pick-up b2 (1)
stack b2 b3 (1)
unstack b28 b24 (1)
put-down b28 (1)
pick-up b24 (1)
stack b24 b2 (1)
pick-up b28 (1)
stack b28 b24 (1)
unstack b18 b19 (1)
put-down b18 (1)
unstack b19 b23 (1)
put-down b19 (1)
pick-up b18 (1)
stack b18 b19 (1)
unstack b23 b25 (1)
put-down b23 (1)
unstack b25 b10 (1)
put-down b25 (1)
pick-up b10 (1)
stack b10 b9 (1)
pick-up b25 (1)
stack b25 b10 (1)
pick-up b23 (1)
stack b23 b25 (1)
unstack b18 b19 (1)
put-down b18 (1)
pick-up b19 (1)
stack b19 b23 (1)
pick-up b18 (1)
stack b18 b19 (1)
unstack b28 b24 (1)
put-down b28 (1)
unstack b24 b2 (1)
put-down b24 (1)
pick-up b28 (1)
stack b28 b24 (1)
unstack b2 b3 (1)
put-down b2 (1)
pick-up b3 (1)
stack b3 b18 (1)
pick-up b2 (1)
stack b2 b3 (1)
unstack b28 b24 (1)
put-down b28 (1)
pick-up b24 (1)
stack b24 b2 (1)
pick-up b28 (1)
stack b28 b24 (1)
unstack b8 b6 (1)
put-down b8 (1)
unstack b6 b13 (1)
put-down b6 (1)
pick-up b8 (1)
stack b8 b6 (1)
unstack b13 b16 (1)
put-down b13 (1)
unstack b16 b14 (1)
put-down b16 (1)
pick-up b13 (1)
stack b13 b16 (1)
unstack b8 b6 (1)
put-down b8 (1)
pick-up b6 (1)
stack b6 b13 (1)
pick-up b8 (1)
stack b8 b6 (1)
unstack b14 b4 (1)
put-down b14 (1)
unstack b4 b27 (1)
put-down b4 (1)
pick-up b14 (1)
stack b14 b4 (1)
unstack b27 b20 (1)
put-down b27 (1)
pick-up b20 (1)
stack b20 b28 (1)
pick-up b27 (1)
stack b27 b20 (1)
unstack b14 b4 (1)
put-down b14 (1)
pick-up b4 (1)
stack b4 b27 (1)
pick-up b14 (1)
stack b14 b4 (1)
unstack b8 b6 (1)
put-down b8 (1)
unstack b6 b13 (1)
put-down b6 (1)
pick-up b8 (1)
stack b8 b6 (1)
unstack b13 b16 (1)
put-down b13 (1)
pick-up b16 (1)
stack b16 b14 (1)
pick-up b13 (1)
stack b13 b16 (1)
unstack b8 b6 (1)
put-down b8 (1)
pick-up b6 (1)
stack b6 b13 (1)
pick-up b8 (1)
stack b8 b6 (1)
[t=0.147977s, 28280 KB] Plan length: 308 step(s).
[t=0.147977s, 28280 KB] Plan cost: 308
[t=0.147977s, 28280 KB] Expanded 2774 state(s).
[t=0.147977s, 28280 KB] Reopened 0 state(s).
[t=0.147977s, 28280 KB] Evaluated 2775 state(s).
[t=0.147977s, 28280 KB] Evaluations: 5550
[t=0.147977s, 28280 KB] Generated 31150 state(s).
[t=0.147977s, 28280 KB] Dead ends: 0 state(s).
[t=0.147977s, 28280 KB] Number of registered states: 2775
[t=0.147977s, 28280 KB] Int hash set load factor: 2775/4096 = 0.67749
[t=0.147977s, 28280 KB] Int hash set resizes: 12
[t=0.147977s, 28280 KB] Search time: 0.109554s
[t=0.147977s, 28280 KB] Total time: 0.147977s
Solution found.
Peak memory: 28280 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.36s
