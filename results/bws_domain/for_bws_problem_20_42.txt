INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_20/bws_problem_20_42.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.013s wall-clock]
1342 relevant atoms
900 auxiliary atoms
2242 final queue length
3886 total queue pushes
Completing instantiation... [0.010s CPU, 0.016s wall-clock]
Instantiating: [0.030s CPU, 0.030s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.003s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.010s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
21 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.007s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.001s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.002s wall-clock]
Translating task: [0.030s CPU, 0.027s wall-clock]
1180 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
40 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.010s wall-clock]
Reordering and filtering variables...
41 of 41 variables necessary.
21 of 41 mutex groups necessary.
800 of 800 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.005s wall-clock]
Translator variables: 41
Translator derived variables: 0
Translator facts: 462
Translator goal facts: 17
Translator mutex groups: 21
Translator total mutex groups size: 441
Translator operators: 800
Translator axioms: 0
Translator task size: 6901
Translator peak memory: 35940 KB
Writing output... [0.010s CPU, 0.004s wall-clock]
Done! [0.090s CPU, 0.089s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.3017e-05s, 24488 KB] reading input...
[t=0.00272325s, 25180 KB] done reading input!
[t=0.00367542s, 25444 KB] Initializing landmark count heuristic...
[t=0.00371305s, 25444 KB] Generating landmark graph...
[t=0.00376822s, 25576 KB] Building a landmark graph with reasonable orders.
[t=0.00382009s, 25576 KB] Initializing Exploration...
[t=0.00405882s, 25744 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0134058s, 26140 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0137425s, 26140 KB] Landmarks generation time: 0.00999507s
[t=0.013781s, 26140 KB] Discovered 91 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.013827s, 26140 KB] 447 edges
[t=0.0138509s, 26140 KB] approx. reasonable orders
[t=0.0167938s, 26140 KB] approx. obedient reasonable orders
[t=0.0170453s, 26140 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0170578s, 26140 KB] Landmarks generation time: 0.0133418s
[t=0.0170675s, 26140 KB] Discovered 91 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.017076s, 26140 KB] 523 edges
[t=0.0170845s, 26140 KB] Landmark graph generation time: 0.0133784s
[t=0.0170929s, 26140 KB] Landmark graph contains 91 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0171009s, 26140 KB] Landmark graph contains 523 orderings.
[t=0.0174144s, 26348 KB] Simplifying 3160 unary operators... done! [2400 unary operators]
[t=0.0182407s, 26348 KB] time to simplify: 0.000895302s
[t=0.0183732s, 26348 KB] Initializing additive heuristic...
[t=0.0183908s, 26348 KB] Initializing FF heuristic...
[t=0.0184517s, 26348 KB] Building successor generator...done!
[t=0.0186338s, 26348 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0186425s, 26348 KB] time for successor generation creation: 0.000150009s
[t=0.018655s, 26348 KB] Variables: 41
[t=0.0186639s, 26348 KB] FactPairs: 462
[t=0.018672s, 26348 KB] Bytes per state: 16
[t=0.0188052s, 26348 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0188402s, 26348 KB] 41 initial landmarks, 17 goal landmarks
[t=0.0188938s, 26348 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0189035s, 26348 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0189119s, 26348 KB] g=0, 1 evaluated, 0 expanded
[t=0.0189264s, 26348 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0189355s, 26348 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0190649s, 26348 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0190749s, 26348 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0190917s, 26348 KB] g=2, 6 evaluated, 5 expanded
[t=0.0192221s, 26348 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0192332s, 26348 KB] g=4, 11 evaluated, 10 expanded
[t=0.0193106s, 26348 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0193203s, 26348 KB] g=4, 14 evaluated, 13 expanded
[t=0.0195212s, 26348 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0195322s, 26348 KB] g=5, 23 evaluated, 22 expanded
[t=0.019609s, 26348 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0196187s, 26348 KB] g=6, 26 evaluated, 25 expanded
[t=0.0198648s, 26348 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0198767s, 26348 KB] g=8, 37 evaluated, 36 expanded
[t=0.0200761s, 26348 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0200882s, 26348 KB] g=10, 46 evaluated, 45 expanded
[t=0.0202038s, 26348 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0202147s, 26348 KB] g=10, 51 evaluated, 50 expanded
[t=0.0205326s, 26348 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0205436s, 26348 KB] g=12, 65 evaluated, 64 expanded
[t=0.0210111s, 26348 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0210315s, 26348 KB] g=14, 85 evaluated, 84 expanded
[t=0.0210639s, 26348 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0210851s, 26348 KB] g=16, 86 evaluated, 85 expanded
[t=0.0218858s, 26348 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0219375s, 26348 KB] g=16, 117 evaluated, 116 expanded
[t=0.0220623s, 26348 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0220724s, 26348 KB] g=22, 122 evaluated, 121 expanded
[t=0.022396s, 26348 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0224071s, 26348 KB] g=26, 137 evaluated, 136 expanded
[t=0.0224373s, 26348 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0224472s, 26348 KB] g=18, 138 evaluated, 137 expanded
[t=0.0226109s, 26348 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0226289s, 26348 KB] g=19, 145 evaluated, 144 expanded
[t=0.0226619s, 26348 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0226707s, 26348 KB] g=28, 146 evaluated, 145 expanded
[t=0.0227021s, 26348 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0227125s, 26348 KB] g=20, 147 evaluated, 146 expanded
[t=0.0229272s, 26348 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0229362s, 26348 KB] g=30, 156 evaluated, 155 expanded
[t=0.023154s, 26348 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0231627s, 26348 KB] g=32, 166 evaluated, 165 expanded
[t=0.0232999s, 26348 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0233097s, 26348 KB] g=22, 172 evaluated, 171 expanded
[t=0.0234068s, 26348 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0234157s, 26348 KB] g=34, 176 evaluated, 175 expanded
[t=0.0236165s, 26348 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0236255s, 26348 KB] g=36, 185 evaluated, 184 expanded
[t=0.0238041s, 26348 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0238137s, 26348 KB] g=24, 193 evaluated, 192 expanded
[t=0.0238473s, 26348 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0238562s, 26348 KB] g=38, 194 evaluated, 193 expanded
[t=0.0241232s, 26348 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0241392s, 26348 KB] g=40, 205 evaluated, 204 expanded
[t=0.024355s, 26348 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0243664s, 26348 KB] g=26, 214 evaluated, 213 expanded
[t=0.0244005s, 26348 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0244098s, 26348 KB] g=42, 215 evaluated, 214 expanded
[t=0.0246633s, 26348 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0246832s, 26348 KB] g=44, 224 evaluated, 223 expanded
[t=0.024961s, 26348 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0249835s, 26348 KB] g=46, 233 evaluated, 232 expanded
[t=0.0251574s, 26348 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0251713s, 26348 KB] g=28, 238 evaluated, 237 expanded
[t=0.0252187s, 26348 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0252312s, 26348 KB] g=48, 239 evaluated, 238 expanded
[t=0.0258718s, 26348 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0259006s, 26348 KB] g=30, 260 evaluated, 259 expanded
[t=0.0265463s, 26348 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0265891s, 26348 KB] g=32, 282 evaluated, 281 expanded
[t=0.0271097s, 26348 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0271201s, 26348 KB] g=34, 307 evaluated, 306 expanded
[t=0.0278249s, 26348 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0278432s, 26348 KB] g=36, 339 evaluated, 338 expanded
[t=0.0280909s, 26348 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0281031s, 26348 KB] g=60, 349 evaluated, 348 expanded
[t=0.0284162s, 26348 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0284385s, 26348 KB] g=38, 364 evaluated, 363 expanded
[t=0.0285625s, 26348 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0285836s, 26348 KB] g=64, 370 evaluated, 369 expanded
[t=0.0287135s, 26348 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0287287s, 26348 KB] g=66, 376 evaluated, 375 expanded
[t=0.0291412s, 26348 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0291517s, 26348 KB] g=40, 397 evaluated, 396 expanded
[t=0.0296174s, 26348 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0296277s, 26348 KB] g=42, 422 evaluated, 421 expanded
[t=0.0299736s, 26348 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0299857s, 26348 KB] g=44, 441 evaluated, 440 expanded
[t=0.0303032s, 26348 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0303187s, 26348 KB] g=46, 457 evaluated, 456 expanded
[t=0.0304061s, 26348 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0304203s, 26348 KB] g=47, 460 evaluated, 459 expanded
[t=0.030832s, 26348 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0308522s, 26348 KB] g=48, 480 evaluated, 479 expanded
[t=0.0308961s, 26348 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0309059s, 26348 KB] g=49, 482 evaluated, 481 expanded
[t=0.0311839s, 26348 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0312s, 26348 KB] g=54, 498 evaluated, 497 expanded
[t=0.0312902s, 26348 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0313002s, 26348 KB] g=56, 503 evaluated, 502 expanded
[t=0.0313237s, 26348 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.031333s, 26348 KB] g=50, 504 evaluated, 503 expanded
[t=0.0313857s, 26348 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0313949s, 26348 KB] g=51, 507 evaluated, 506 expanded
[t=0.0315634s, 26348 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0315733s, 26348 KB] g=52, 518 evaluated, 517 expanded
[t=0.0316079s, 26348 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0316169s, 26348 KB] g=53, 520 evaluated, 519 expanded
[t=0.0316395s, 26348 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0316485s, 26348 KB] g=54, 521 evaluated, 520 expanded
[t=0.0317113s, 26348 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.031728s, 26348 KB] g=56, 525 evaluated, 524 expanded
[t=0.0317496s, 26348 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0317584s, 26348 KB] g=57, 526 evaluated, 525 expanded
[t=0.0318075s, 26348 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0318165s, 26348 KB] g=58, 529 evaluated, 528 expanded
[t=0.0318367s, 26348 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0318455s, 26348 KB] g=59, 530 evaluated, 529 expanded
[t=0.0318904s, 26348 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0318997s, 26348 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0319083s, 26348 KB] g=62, 533 evaluated, 532 expanded
[t=0.0319254s, 26348 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0319366s, 26348 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0319456s, 26348 KB] g=63, 534 evaluated, 533 expanded
[t=0.0319607s, 26348 KB] Solution found!
[t=0.0319725s, 26348 KB] Actual search time: 0.0131273s
unstack b19 b8 (1)
put-down b19 (1)
unstack b7 b16 (1)
put-down b7 (1)
unstack b16 b15 (1)
put-down b16 (1)
unstack b10 b9 (1)
put-down b10 (1)
unstack b15 b20 (1)
put-down b15 (1)
unstack b8 b18 (1)
put-down b8 (1)
unstack b18 b12 (1)
put-down b18 (1)
unstack b20 b6 (1)
put-down b20 (1)
unstack b6 b14 (1)
put-down b6 (1)
unstack b14 b17 (1)
stack b14 b19 (1)
unstack b17 b2 (1)
put-down b17 (1)
unstack b2 b13 (1)
stack b2 b6 (1)
unstack b13 b3 (1)
stack b13 b20 (1)
unstack b3 b5 (1)
put-down b3 (1)
unstack b5 b11 (1)
put-down b5 (1)
unstack b11 b4 (1)
put-down b11 (1)
pick-up b4 (1)
stack b4 b13 (1)
pick-up b12 (1)
stack b12 b2 (1)
pick-up b1 (1)
stack b1 b12 (1)
pick-up b18 (1)
stack b18 b1 (1)
pick-up b15 (1)
stack b15 b18 (1)
pick-up b10 (1)
stack b10 b15 (1)
pick-up b9 (1)
stack b9 b10 (1)
pick-up b7 (1)
stack b7 b9 (1)
pick-up b8 (1)
stack b8 b7 (1)
pick-up b17 (1)
stack b17 b8 (1)
pick-up b16 (1)
stack b16 b11 (1)
pick-up b3 (1)
stack b3 b17 (1)
pick-up b5 (1)
stack b5 b3 (1)
unstack b16 b11 (1)
put-down b16 (1)
pick-up b11 (1)
stack b11 b5 (1)
pick-up b16 (1)
stack b16 b11 (1)
[t=0.0319819s, 26348 KB] Plan length: 64 step(s).
[t=0.0319819s, 26348 KB] Plan cost: 64
[t=0.0319819s, 26348 KB] Expanded 534 state(s).
[t=0.0319819s, 26348 KB] Reopened 0 state(s).
[t=0.0319819s, 26348 KB] Evaluated 535 state(s).
[t=0.0319819s, 26348 KB] Evaluations: 1070
[t=0.0319819s, 26348 KB] Generated 5161 state(s).
[t=0.0319819s, 26348 KB] Dead ends: 0 state(s).
[t=0.0319819s, 26348 KB] Number of registered states: 535
[t=0.0319819s, 26348 KB] Int hash set load factor: 535/1024 = 0.522461
[t=0.0319819s, 26348 KB] Int hash set resizes: 10
[t=0.0319819s, 26348 KB] Search time: 0.0131773s
[t=0.0319819s, 26348 KB] Total time: 0.0319819s
Solution found.
Peak memory: 26348 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.16s
