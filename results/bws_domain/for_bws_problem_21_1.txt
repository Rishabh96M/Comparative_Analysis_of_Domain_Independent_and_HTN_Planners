INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_21/bws_problem_21_1.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.010s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.009s wall-clock]
1472 relevant atoms
987 auxiliary atoms
2459 final queue length
4270 total queue pushes
Completing instantiation... [0.010s CPU, 0.016s wall-clock]
Instantiating: [0.030s CPU, 0.026s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.010s CPU, 0.000s wall-clock]
Choosing groups...
22 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.006s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.023s wall-clock]
1302 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
42 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.011s wall-clock]
Reordering and filtering variables...
43 of 43 variables necessary.
22 of 43 mutex groups necessary.
882 of 882 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 43
Translator derived variables: 0
Translator facts: 506
Translator goal facts: 17
Translator mutex groups: 22
Translator total mutex groups size: 484
Translator operators: 882
Translator axioms: 0
Translator task size: 7602
Translator peak memory: 36456 KB
Writing output... [0.000s CPU, 0.005s wall-clock]
Done! [0.080s CPU, 0.081s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=1.9352e-05s, 24488 KB] reading input...
[t=0.00252929s, 25268 KB] done reading input!
[t=0.00350297s, 25664 KB] Initializing landmark count heuristic...
[t=0.00354604s, 25664 KB] Generating landmark graph...
[t=0.00362338s, 25664 KB] Building a landmark graph with reasonable orders.
[t=0.00368542s, 25664 KB] Initializing Exploration...
[t=0.00403102s, 25852 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0129278s, 26248 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0130056s, 26248 KB] Landmarks generation time: 0.00938284s
[t=0.0130215s, 26248 KB] Discovered 88 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0130402s, 26248 KB] 290 edges
[t=0.0130518s, 26248 KB] approx. reasonable orders
[t=0.0142736s, 26248 KB] approx. obedient reasonable orders
[t=0.0142998s, 26248 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0143099s, 26248 KB] Landmarks generation time: 0.010757s
[t=0.0143206s, 26248 KB] Discovered 88 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0143305s, 26248 KB] 318 edges
[t=0.0143408s, 26248 KB] Landmark graph generation time: 0.0108032s
[t=0.0143508s, 26248 KB] Landmark graph contains 88 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0143606s, 26248 KB] Landmark graph contains 318 orderings.
[t=0.014644s, 26248 KB] Simplifying 3486 unary operators... done! [2646 unary operators]
[t=0.0156195s, 26380 KB] time to simplify: 0.00104923s
[t=0.0157553s, 26380 KB] Initializing additive heuristic...
[t=0.0157722s, 26380 KB] Initializing FF heuristic...
[t=0.0158368s, 26380 KB] Building successor generator...done!
[t=0.0160289s, 26380 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0160381s, 26380 KB] time for successor generation creation: 0.000159367s
[t=0.0160516s, 26380 KB] Variables: 43
[t=0.0160601s, 26380 KB] FactPairs: 506
[t=0.0160682s, 26380 KB] Bytes per state: 16
[t=0.0162163s, 26380 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.016252s, 26380 KB] 42 initial landmarks, 17 goal landmarks
[t=0.016308s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.016319s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0163356s, 26380 KB] g=0, 1 evaluated, 0 expanded
[t=0.0163517s, 26380 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0163608s, 26380 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.016522s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0165321s, 26380 KB] g=2, 7 evaluated, 6 expanded
[t=0.0167402s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0167569s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0167723s, 26380 KB] g=4, 15 evaluated, 14 expanded
[t=0.0169467s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0169557s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0169637s, 26380 KB] g=6, 22 evaluated, 21 expanded
[t=0.0171301s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0171389s, 26380 KB] g=8, 29 evaluated, 28 expanded
[t=0.0173536s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0173626s, 26380 KB] g=10, 38 evaluated, 37 expanded
[t=0.0174243s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0174402s, 26380 KB] g=10, 40 evaluated, 39 expanded
[t=0.0177643s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0177742s, 26380 KB] g=12, 54 evaluated, 53 expanded
[t=0.018146s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0181666s, 26380 KB] g=14, 70 evaluated, 69 expanded
[t=0.0184131s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0184224s, 26380 KB] g=16, 81 evaluated, 80 expanded
[t=0.0184763s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0184885s, 26380 KB] g=16, 83 evaluated, 82 expanded
[t=0.0187707s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.01878s, 26380 KB] g=18, 96 evaluated, 95 expanded
[t=0.0189393s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.018948s, 26380 KB] g=18, 103 evaluated, 102 expanded
[t=0.0191533s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0191624s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0191701s, 26380 KB] g=20, 112 evaluated, 111 expanded
[t=0.0193131s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0193219s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.01933s, 26380 KB] g=22, 118 evaluated, 117 expanded
[t=0.0196196s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0196329s, 26380 KB] g=25, 130 evaluated, 129 expanded
[t=0.0199383s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0199499s, 26380 KB] g=27, 142 evaluated, 141 expanded
[t=0.0199839s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0199932s, 26380 KB] g=28, 143 evaluated, 142 expanded
[t=0.0200273s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0200365s, 26380 KB] g=28, 144 evaluated, 143 expanded
[t=0.0203292s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0203389s, 26380 KB] g=30, 156 evaluated, 155 expanded
[t=0.0203958s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0204048s, 26380 KB] g=30, 158 evaluated, 157 expanded
[t=0.020667s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0206766s, 26380 KB] g=32, 169 evaluated, 168 expanded
[t=0.0208082s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0208177s, 26380 KB] g=32, 174 evaluated, 173 expanded
[t=0.021127s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0211404s, 26380 KB] g=34, 186 evaluated, 185 expanded
[t=0.0212062s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0212196s, 26380 KB] g=34, 188 evaluated, 187 expanded
[t=0.0214033s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.021415s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0214259s, 26380 KB] g=36, 195 evaluated, 194 expanded
[t=0.0218285s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0218393s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0218497s, 26380 KB] g=42, 213 evaluated, 212 expanded
[t=0.022563s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0225751s, 26380 KB] g=54, 245 evaluated, 244 expanded
[t=0.0227189s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0227291s, 26380 KB] g=56, 251 evaluated, 250 expanded
[t=0.0228476s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0228612s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0228718s, 26380 KB] g=58, 256 evaluated, 255 expanded
[t=0.0229868s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.022998s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0230098s, 26380 KB] g=60, 260 evaluated, 259 expanded
[t=0.0233151s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.023326s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0233365s, 26380 KB] g=66, 274 evaluated, 273 expanded
[t=0.0237758s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0237896s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0238013s, 26380 KB] g=60, 294 evaluated, 293 expanded
[t=0.0238985s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0239152s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.023925s, 26380 KB] g=62, 298 evaluated, 297 expanded
[t=0.0241188s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0241311s, 26380 KB] g=66, 307 evaluated, 306 expanded
[t=0.0242055s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0242173s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0242282s, 26380 KB] g=68, 310 evaluated, 309 expanded
[t=0.0262867s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0263012s, 26380 KB] g=98, 412 evaluated, 411 expanded
[t=0.0263824s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0263924s, 26380 KB] g=99, 415 evaluated, 414 expanded
[t=0.0264261s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0264362s, 26380 KB] g=100, 416 evaluated, 415 expanded
[t=0.0265292s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0265396s, 26380 KB] g=102, 420 evaluated, 419 expanded
[t=0.0266163s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.026635s, 26380 KB] g=102, 423 evaluated, 422 expanded
[t=0.0267344s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.026744s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0267543s, 26380 KB] g=104, 427 evaluated, 426 expanded
[t=0.0269432s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0269554s, 26380 KB] g=108, 436 evaluated, 435 expanded
[t=0.0270249s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0270343s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0270424s, 26380 KB] g=110, 439 evaluated, 438 expanded
[t=0.0276565s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0276662s, 26380 KB] g=126, 477 evaluated, 476 expanded
[t=0.0278109s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0278215s, 26380 KB] g=134, 487 evaluated, 486 expanded
[t=0.0278761s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0278888s, 26380 KB] g=138, 491 evaluated, 490 expanded
[t=0.0279085s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0279177s, 26380 KB] g=139, 492 evaluated, 491 expanded
[t=0.0279485s, 26380 KB] Solution found!
[t=0.027961s, 26380 KB] Actual search time: 0.0117052s
unstack b11 b16 (1)
put-down b11 (1)
unstack b16 b3 (1)
put-down b16 (1)
unstack b3 b15 (1)
put-down b3 (1)
unstack b15 b14 (1)
put-down b15 (1)
unstack b14 b5 (1)
put-down b14 (1)
unstack b21 b1 (1)
stack b21 b5 (1)
unstack b4 b10 (1)
put-down b4 (1)
unstack b1 b2 (1)
put-down b1 (1)
pick-up b14 (1)
stack b14 b21 (1)
pick-up b10 (1)
stack b10 b14 (1)
pick-up b4 (1)
stack b4 b2 (1)
unstack b20 b13 (1)
put-down b20 (1)
unstack b13 b8 (1)
put-down b13 (1)
unstack b8 b18 (1)
stack b8 b3 (1)
unstack b18 b6 (1)
stack b18 b20 (1)
pick-up b6 (1)
stack b6 b9 (1)
pick-up b11 (1)
stack b11 b6 (1)
pick-up b13 (1)
stack b13 b11 (1)
unstack b18 b20 (1)
put-down b18 (1)
pick-up b20 (1)
stack b20 b13 (1)
pick-up b18 (1)
stack b18 b20 (1)
unstack b10 b14 (1)
put-down b10 (1)
unstack b14 b21 (1)
put-down b14 (1)
pick-up b10 (1)
stack b10 b14 (1)
unstack b21 b5 (1)
put-down b21 (1)
unstack b5 b7 (1)
put-down b5 (1)
unstack b7 b17 (1)
stack b7 b18 (1)
pick-up b15 (1)
stack b15 b7 (1)
pick-up b17 (1)
stack b17 b4 (1)
pick-up b5 (1)
stack b5 b17 (1)
pick-up b21 (1)
stack b21 b5 (1)
unstack b10 b14 (1)
put-down b10 (1)
pick-up b14 (1)
stack b14 b21 (1)
pick-up b10 (1)
stack b10 b14 (1)
unstack b15 b7 (1)
put-down b15 (1)
unstack b7 b18 (1)
put-down b7 (1)
pick-up b15 (1)
stack b15 b7 (1)
unstack b18 b20 (1)
put-down b18 (1)
unstack b20 b13 (1)
put-down b20 (1)
pick-up b18 (1)
stack b18 b20 (1)
unstack b15 b7 (1)
put-down b15 (1)
pick-up b7 (1)
stack b7 b18 (1)
pick-up b15 (1)
stack b15 b7 (1)
unstack b13 b11 (1)
put-down b13 (1)
unstack b11 b6 (1)
put-down b11 (1)
pick-up b13 (1)
stack b13 b11 (1)
unstack b6 b9 (1)
put-down b6 (1)
unstack b9 b12 (1)
put-down b9 (1)
unstack b12 b19 (1)
stack b12 b1 (1)
pick-up b19 (1)
stack b19 b15 (1)
pick-up b9 (1)
stack b9 b12 (1)
pick-up b6 (1)
stack b6 b9 (1)
unstack b13 b11 (1)
put-down b13 (1)
pick-up b11 (1)
stack b11 b6 (1)
pick-up b13 (1)
stack b13 b11 (1)
unstack b19 b15 (1)
put-down b19 (1)
unstack b15 b7 (1)
put-down b15 (1)
unstack b7 b18 (1)
put-down b7 (1)
pick-up b15 (1)
stack b15 b7 (1)
pick-up b19 (1)
stack b19 b15 (1)
unstack b18 b20 (1)
put-down b18 (1)
pick-up b20 (1)
stack b20 b13 (1)
pick-up b18 (1)
stack b18 b20 (1)
unstack b19 b15 (1)
put-down b19 (1)
unstack b15 b7 (1)
put-down b15 (1)
pick-up b19 (1)
stack b19 b15 (1)
pick-up b7 (1)
stack b7 b18 (1)
unstack b19 b15 (1)
put-down b19 (1)
pick-up b15 (1)
stack b15 b7 (1)
pick-up b19 (1)
stack b19 b15 (1)
[t=0.0279704s, 26380 KB] Plan length: 140 step(s).
[t=0.0279704s, 26380 KB] Plan cost: 140
[t=0.0279704s, 26380 KB] Expanded 492 state(s).
[t=0.0279704s, 26380 KB] Reopened 0 state(s).
[t=0.0279704s, 26380 KB] Evaluated 493 state(s).
[t=0.0279704s, 26380 KB] Evaluations: 986
[t=0.0279704s, 26380 KB] Generated 4353 state(s).
[t=0.0279704s, 26380 KB] Dead ends: 0 state(s).
[t=0.0279704s, 26380 KB] Number of registered states: 493
[t=0.0279704s, 26380 KB] Int hash set load factor: 493/512 = 0.962891
[t=0.0279704s, 26380 KB] Int hash set resizes: 9
[t=0.0279704s, 26380 KB] Search time: 0.011755s
[t=0.0279704s, 26380 KB] Total time: 0.0279704s
Solution found.
Peak memory: 26380 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.15s
