INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_20/bws_problem_20_21.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.008s wall-clock]
1342 relevant atoms
900 auxiliary atoms
2242 final queue length
3888 total queue pushes
Completing instantiation... [0.020s CPU, 0.016s wall-clock]
Instantiating: [0.030s CPU, 0.025s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
21 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.005s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.021s wall-clock]
1180 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
40 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.009s wall-clock]
Reordering and filtering variables...
41 of 41 variables necessary.
21 of 41 mutex groups necessary.
800 of 800 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.005s wall-clock]
Translator variables: 41
Translator derived variables: 0
Translator facts: 462
Translator goal facts: 15
Translator mutex groups: 21
Translator total mutex groups size: 441
Translator operators: 800
Translator axioms: 0
Translator task size: 6899
Translator peak memory: 35948 KB
Writing output... [0.000s CPU, 0.004s wall-clock]
Done! [0.070s CPU, 0.075s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.0494e-05s, 24488 KB] reading input...
[t=0.00229339s, 25180 KB] done reading input!
[t=0.00331569s, 25444 KB] Initializing landmark count heuristic...
[t=0.00338323s, 25444 KB] Generating landmark graph...
[t=0.0034558s, 25576 KB] Building a landmark graph with reasonable orders.
[t=0.00351616s, 25576 KB] Initializing Exploration...
[t=0.00381389s, 25744 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0106585s, 26140 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0107212s, 26140 KB] Landmarks generation time: 0.00726429s
[t=0.0107345s, 26140 KB] Discovered 80 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0107511s, 26140 KB] 226 edges
[t=0.0107607s, 26140 KB] approx. reasonable orders
[t=0.0127634s, 26140 KB] approx. obedient reasonable orders
[t=0.0130228s, 26140 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.013034s, 26140 KB] Landmarks generation time: 0.00964709s
[t=0.0130438s, 26140 KB] Discovered 80 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0130522s, 26140 KB] 302 edges
[t=0.0130608s, 26140 KB] Landmark graph generation time: 0.00968524s
[t=0.0130699s, 26140 KB] Landmark graph contains 80 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0130779s, 26140 KB] Landmark graph contains 302 orderings.
[t=0.0133598s, 26140 KB] Simplifying 3160 unary operators... done! [2400 unary operators]
[t=0.0141267s, 26140 KB] time to simplify: 0.000819173s
[t=0.0142298s, 26140 KB] Initializing additive heuristic...
[t=0.0142441s, 26140 KB] Initializing FF heuristic...
[t=0.0142965s, 26140 KB] Building successor generator...done!
[t=0.0144681s, 26140 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0144765s, 26140 KB] time for successor generation creation: 0.000140216s
[t=0.0144877s, 26140 KB] Variables: 41
[t=0.0144959s, 26140 KB] FactPairs: 462
[t=0.0145038s, 26140 KB] Bytes per state: 16
[t=0.014592s, 26140 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0146251s, 26140 KB] 37 initial landmarks, 15 goal landmarks
[t=0.0146702s, 26140 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0146794s, 26140 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0146884s, 26140 KB] g=0, 1 evaluated, 0 expanded
[t=0.0147027s, 26140 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0147117s, 26140 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0147945s, 26140 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0148044s, 26140 KB] g=1, 4 evaluated, 3 expanded
[t=0.0149697s, 26140 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0149793s, 26140 KB] g=2, 11 evaluated, 10 expanded
[t=0.0151161s, 26140 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0151257s, 26140 KB] g=3, 17 evaluated, 16 expanded
[t=0.0152809s, 26140 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0152904s, 26140 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0152984s, 26140 KB] g=4, 24 evaluated, 23 expanded
[t=0.0153596s, 26140 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0153717s, 26140 KB] g=5, 26 evaluated, 25 expanded
[t=0.0154043s, 26140 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0154179s, 26140 KB] g=6, 27 evaluated, 26 expanded
[t=0.0157204s, 26140 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0157309s, 26140 KB] g=8, 41 evaluated, 40 expanded
[t=0.0157619s, 26140 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0157715s, 26140 KB] g=8, 42 evaluated, 41 expanded
[t=0.0161044s, 26140 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.016121s, 26140 KB] g=10, 57 evaluated, 56 expanded
[t=0.0165563s, 26140 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.016574s, 26140 KB] g=12, 77 evaluated, 76 expanded
[t=0.0167749s, 26140 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0167994s, 26140 KB] g=14, 86 evaluated, 85 expanded
[t=0.0171059s, 26140 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.017119s, 26140 KB] g=14, 100 evaluated, 99 expanded
[t=0.0175753s, 26140 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0175948s, 26140 KB] g=16, 121 evaluated, 120 expanded
[t=0.0176306s, 26140 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0176399s, 26140 KB] g=16, 122 evaluated, 121 expanded
[t=0.0178793s, 26140 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0178918s, 26140 KB] g=17, 132 evaluated, 131 expanded
[t=0.0180534s, 26140 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0180634s, 26140 KB] g=18, 139 evaluated, 138 expanded
[t=0.0183965s, 26140 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0184171s, 26140 KB] g=20, 153 evaluated, 152 expanded
[t=0.0186324s, 26140 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0186465s, 26140 KB] g=20, 162 evaluated, 161 expanded
[t=0.0187896s, 26140 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0188007s, 26140 KB] g=22, 168 evaluated, 167 expanded
[t=0.0191308s, 26140 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0191456s, 26140 KB] g=24, 182 evaluated, 181 expanded
[t=0.0193375s, 26140 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.01935s, 26140 KB] g=22, 190 evaluated, 189 expanded
[t=0.0198818s, 26140 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0198953s, 26140 KB] g=24, 214 evaluated, 213 expanded
[t=0.0206044s, 26140 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0206389s, 26140 KB] g=26, 236 evaluated, 235 expanded
[t=0.0210182s, 26140 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0210399s, 26140 KB] g=28, 252 evaluated, 251 expanded
[t=0.0211282s, 26140 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0211455s, 26140 KB] g=28, 254 evaluated, 253 expanded
[t=0.0214646s, 26140 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0214885s, 26140 KB] g=30, 263 evaluated, 262 expanded
[t=0.0218595s, 26140 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0218862s, 26140 KB] g=32, 273 evaluated, 272 expanded
[t=0.0219922s, 26140 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0220094s, 26140 KB] g=30, 276 evaluated, 275 expanded
[t=0.0225845s, 26140 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0226119s, 26140 KB] g=32, 294 evaluated, 293 expanded
[t=0.0231943s, 26140 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0232345s, 26140 KB] g=36, 312 evaluated, 311 expanded
[t=0.0235505s, 26140 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0235699s, 26140 KB] g=38, 321 evaluated, 320 expanded
[t=0.0236176s, 26140 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.023627s, 26140 KB] g=34, 323 evaluated, 322 expanded
[t=0.0238698s, 26140 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0238799s, 26140 KB] g=42, 337 evaluated, 336 expanded
[t=0.0239798s, 26140 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0239892s, 26140 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0239972s, 26140 KB] g=44, 342 evaluated, 341 expanded
[t=0.024056s, 26140 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0240646s, 26140 KB] g=46, 345 evaluated, 344 expanded
[t=0.0240888s, 26140 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0240971s, 26140 KB] g=46, 346 evaluated, 345 expanded
[t=0.0241669s, 26140 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0241753s, 26140 KB] g=48, 350 evaluated, 349 expanded
[t=0.0242455s, 26140 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0242544s, 26140 KB] g=48, 354 evaluated, 353 expanded
[t=0.0242915s, 26140 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0242999s, 26140 KB] g=50, 356 evaluated, 355 expanded
[t=0.0243548s, 26140 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0243634s, 26140 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0243711s, 26140 KB] g=50, 359 evaluated, 358 expanded
[t=0.0244336s, 26140 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0244419s, 26140 KB] g=52, 363 evaluated, 362 expanded
[t=0.0244765s, 26140 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0244849s, 26140 KB] g=54, 365 evaluated, 364 expanded
[t=0.0245313s, 26140 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0245401s, 26140 KB] g=56, 368 evaluated, 367 expanded
[t=0.0245836s, 26140 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0245919s, 26140 KB] g=58, 371 evaluated, 370 expanded
[t=0.0246124s, 26140 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0246209s, 26140 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0246286s, 26140 KB] g=58, 372 evaluated, 371 expanded
[t=0.024645s, 26140 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0246533s, 26140 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.024661s, 26140 KB] g=59, 373 evaluated, 372 expanded
[t=0.0246754s, 26140 KB] Solution found!
[t=0.0246857s, 26140 KB] Actual search time: 0.0100575s
unstack b17 b15 (1)
put-down b17 (1)
unstack b14 b9 (1)
stack b14 b17 (1)
unstack b16 b8 (1)
stack b16 b9 (1)
unstack b5 b10 (1)
stack b5 b6 (1)
unstack b4 b3 (1)
put-down b4 (1)
unstack b3 b20 (1)
put-down b3 (1)
unstack b20 b19 (1)
stack b20 b15 (1)
unstack b19 b12 (1)
put-down b19 (1)
pick-up b10 (1)
stack b10 b20 (1)
unstack b12 b11 (1)
stack b12 b19 (1)
pick-up b11 (1)
stack b11 b4 (1)
pick-up b8 (1)
stack b8 b12 (1)
unstack b16 b9 (1)
put-down b16 (1)
unstack b9 b7 (1)
stack b9 b14 (1)
pick-up b16 (1)
stack b16 b9 (1)
pick-up b3 (1)
stack b3 b7 (1)
unstack b5 b6 (1)
put-down b5 (1)
unstack b6 b18 (1)
stack b6 b3 (1)
pick-up b5 (1)
stack b5 b6 (1)
unstack b18 b13 (1)
put-down b18 (1)
unstack b13 b1 (1)
stack b13 b5 (1)
pick-up b18 (1)
stack b18 b1 (1)
unstack b11 b4 (1)
put-down b11 (1)
pick-up b4 (1)
stack b4 b13 (1)
pick-up b11 (1)
stack b11 b4 (1)
unstack b10 b20 (1)
put-down b10 (1)
unstack b20 b15 (1)
put-down b20 (1)
pick-up b15 (1)
stack b15 b11 (1)
pick-up b20 (1)
stack b20 b15 (1)
pick-up b10 (1)
stack b10 b20 (1)
[t=0.0246948s, 26140 KB] Plan length: 60 step(s).
[t=0.0246948s, 26140 KB] Plan cost: 60
[t=0.0246948s, 26140 KB] Expanded 373 state(s).
[t=0.0246948s, 26140 KB] Reopened 0 state(s).
[t=0.0246948s, 26140 KB] Evaluated 374 state(s).
[t=0.0246948s, 26140 KB] Evaluations: 748
[t=0.0246948s, 26140 KB] Generated 3801 state(s).
[t=0.0246948s, 26140 KB] Dead ends: 0 state(s).
[t=0.0246948s, 26140 KB] Number of registered states: 374
[t=0.0246948s, 26140 KB] Int hash set load factor: 374/512 = 0.730469
[t=0.0246948s, 26140 KB] Int hash set resizes: 9
[t=0.0246948s, 26140 KB] Search time: 0.0101033s
[t=0.0246948s, 26140 KB] Total time: 0.0246948s
Solution found.
Peak memory: 26140 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.15s
