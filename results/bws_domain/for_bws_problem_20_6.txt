INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_20/bws_problem_20_6.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.010s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.000s CPU, 0.008s wall-clock]
1342 relevant atoms
900 auxiliary atoms
2242 final queue length
3886 total queue pushes
Completing instantiation... [0.020s CPU, 0.016s wall-clock]
Instantiating: [0.030s CPU, 0.026s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
21 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.005s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.021s wall-clock]
1180 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
40 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.010s wall-clock]
Reordering and filtering variables...
41 of 41 variables necessary.
21 of 41 mutex groups necessary.
800 of 800 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 41
Translator derived variables: 0
Translator facts: 462
Translator goal facts: 16
Translator mutex groups: 21
Translator total mutex groups size: 441
Translator operators: 800
Translator axioms: 0
Translator task size: 6900
Translator peak memory: 35948 KB
Writing output... [0.000s CPU, 0.004s wall-clock]
Done! [0.080s CPU, 0.077s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=1.6355e-05s, 24488 KB] reading input...
[t=0.00249048s, 25180 KB] done reading input!
[t=0.00327751s, 25444 KB] Initializing landmark count heuristic...
[t=0.00330554s, 25444 KB] Generating landmark graph...
[t=0.00335986s, 25576 KB] Building a landmark graph with reasonable orders.
[t=0.00340986s, 25576 KB] Initializing Exploration...
[t=0.00364009s, 25744 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0120442s, 26140 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0121833s, 26140 KB] Landmarks generation time: 0.00883091s
[t=0.0122038s, 26140 KB] Discovered 87 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.012227s, 26140 KB] 378 edges
[t=0.0122441s, 26140 KB] approx. reasonable orders
[t=0.0124555s, 26140 KB] approx. obedient reasonable orders
[t=0.0124931s, 26140 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0125042s, 26140 KB] Landmarks generation time: 0.00919667s
[t=0.0125145s, 26140 KB] Discovered 87 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0125233s, 26140 KB] 380 edges
[t=0.0125321s, 26140 KB] Landmark graph generation time: 0.00923465s
[t=0.0125418s, 26140 KB] Landmark graph contains 87 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0125514s, 26140 KB] Landmark graph contains 380 orderings.
[t=0.0129204s, 26328 KB] Simplifying 3160 unary operators... done! [2400 unary operators]
[t=0.0136792s, 26328 KB] time to simplify: 0.000812236s
[t=0.0137817s, 26328 KB] Initializing additive heuristic...
[t=0.0137962s, 26328 KB] Initializing FF heuristic...
[t=0.0138484s, 26328 KB] Building successor generator...done!
[t=0.0140153s, 26328 KB] peak memory difference for successor generator creation: 0 KB
[t=0.014024s, 26328 KB] time for successor generation creation: 0.000135048s
[t=0.0140368s, 26328 KB] Variables: 41
[t=0.0140449s, 26328 KB] FactPairs: 462
[t=0.0140527s, 26328 KB] Bytes per state: 16
[t=0.0141911s, 26328 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0142334s, 26328 KB] 41 initial landmarks, 16 goal landmarks
[t=0.0142854s, 26328 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0142957s, 26328 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0143044s, 26328 KB] g=0, 1 evaluated, 0 expanded
[t=0.014318s, 26328 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0143266s, 26328 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0144482s, 26328 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0144607s, 26328 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0144689s, 26328 KB] g=2, 6 evaluated, 5 expanded
[t=0.0145425s, 26328 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0145519s, 26328 KB] g=3, 9 evaluated, 8 expanded
[t=0.0147525s, 26328 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0147646s, 26328 KB] g=6, 18 evaluated, 17 expanded
[t=0.014961s, 26328 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.014972s, 26328 KB] g=8, 27 evaluated, 26 expanded
[t=0.0152523s, 26328 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0152663s, 26328 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0152757s, 26328 KB] g=10, 40 evaluated, 39 expanded
[t=0.0154086s, 26328 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0154209s, 26328 KB] g=12, 46 evaluated, 45 expanded
[t=0.0154959s, 26328 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0155084s, 26328 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0155173s, 26328 KB] g=12, 49 evaluated, 48 expanded
[t=0.0156533s, 26328 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.015667s, 26328 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0156751s, 26328 KB] g=14, 55 evaluated, 54 expanded
[t=0.0158428s, 26328 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0158611s, 26328 KB] g=16, 62 evaluated, 61 expanded
[t=0.0159391s, 26328 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0159505s, 26328 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0159586s, 26328 KB] g=16, 65 evaluated, 64 expanded
[t=0.0160999s, 26328 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0161125s, 26328 KB] g=18, 71 evaluated, 70 expanded
[t=0.0162735s, 26328 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0162862s, 26328 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0162959s, 26328 KB] g=20, 78 evaluated, 77 expanded
[t=0.0164552s, 26328 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0164771s, 26328 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0164894s, 26328 KB] g=22, 85 evaluated, 84 expanded
[t=0.0166538s, 26328 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0166679s, 26328 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0166771s, 26328 KB] g=24, 92 evaluated, 91 expanded
[t=0.0168644s, 26328 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0168813s, 26328 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0169017s, 26328 KB] g=26, 100 evaluated, 99 expanded
[t=0.0171285s, 26328 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.017155s, 26328 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.017168s, 26328 KB] g=28, 107 evaluated, 106 expanded
[t=0.0173852s, 26328 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0174082s, 26328 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0174222s, 26328 KB] g=30, 113 evaluated, 112 expanded
[t=0.0176453s, 26328 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0176701s, 26328 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0176844s, 26328 KB] g=32, 120 evaluated, 119 expanded
[t=0.0183616s, 26328 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0184437s, 26328 KB] g=38, 142 evaluated, 141 expanded
[t=0.0186713s, 26328 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0187073s, 26328 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0187234s, 26328 KB] g=40, 149 evaluated, 148 expanded
[t=0.0189002s, 26328 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0189245s, 26328 KB] g=40, 154 evaluated, 153 expanded
[t=0.0191288s, 26328 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0191532s, 26328 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0191673s, 26328 KB] g=42, 160 evaluated, 159 expanded
[t=0.0195576s, 26328 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0195856s, 26328 KB] g=46, 172 evaluated, 171 expanded
[t=0.0197308s, 26328 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0197523s, 26328 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0197646s, 26328 KB] g=48, 176 evaluated, 175 expanded
[t=0.0207749s, 26328 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0208235s, 26328 KB] g=58, 208 evaluated, 207 expanded
[t=0.0209666s, 26328 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0209887s, 26328 KB] g=59, 212 evaluated, 211 expanded
[t=0.0210369s, 26328 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0210495s, 26328 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0210607s, 26328 KB] g=60, 213 evaluated, 212 expanded
[t=0.0212434s, 26328 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.021262s, 26328 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0212742s, 26328 KB] g=62, 219 evaluated, 218 expanded
[t=0.0214209s, 26328 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0214354s, 26328 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0214505s, 26328 KB] g=64, 223 evaluated, 222 expanded
[t=0.0217914s, 26328 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0218158s, 26328 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0218297s, 26328 KB] g=70, 236 evaluated, 235 expanded
[t=0.0227152s, 26328 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.022735s, 26328 KB] g=70, 273 evaluated, 272 expanded
[t=0.0228915s, 26328 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0229055s, 26328 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0229151s, 26328 KB] g=76, 280 evaluated, 279 expanded
[t=0.0318482s, 26328 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0318744s, 26328 KB] g=102, 715 evaluated, 714 expanded
[t=0.0320582s, 26328 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0320679s, 26328 KB] g=106, 724 evaluated, 723 expanded
[t=0.0321341s, 26328 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0321429s, 26328 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0321508s, 26328 KB] g=108, 727 evaluated, 726 expanded
[t=0.0333039s, 26328 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0333159s, 26328 KB] g=126, 792 evaluated, 791 expanded
[t=0.0333717s, 26328 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0333809s, 26328 KB] g=128, 795 evaluated, 794 expanded
[t=0.0335408s, 26328 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0335511s, 26328 KB] g=136, 806 evaluated, 805 expanded
[t=0.0336177s, 26328 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0336321s, 26328 KB] g=140, 810 evaluated, 809 expanded
[t=0.0336561s, 26328 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0336689s, 26328 KB] g=141, 811 evaluated, 810 expanded
[t=0.0336881s, 26328 KB] Solution found!
[t=0.0337043s, 26328 KB] Actual search time: 0.0194718s
unstack b9 b16 (1)
put-down b9 (1)
unstack b16 b20 (1)
put-down b16 (1)
unstack b13 b1 (1)
put-down b13 (1)
unstack b14 b11 (1)
put-down b14 (1)
pick-up b1 (1)
stack b1 b11 (1)
unstack b20 b10 (1)
stack b20 b13 (1)
unstack b10 b7 (1)
put-down b10 (1)
unstack b7 b12 (1)
stack b7 b2 (1)
unstack b12 b5 (1)
put-down b12 (1)
unstack b5 b18 (1)
stack b5 b7 (1)
unstack b18 b15 (1)
stack b18 b14 (1)
unstack b15 b19 (1)
put-down b15 (1)
pick-up b16 (1)
stack b16 b15 (1)
unstack b19 b3 (1)
stack b19 b20 (1)
unstack b3 b4 (1)
put-down b3 (1)
pick-up b4 (1)
stack b4 b5 (1)
unstack b1 b11 (1)
put-down b1 (1)
unstack b11 b6 (1)
put-down b11 (1)
pick-up b6 (1)
stack b6 b10 (1)
pick-up b11 (1)
stack b11 b6 (1)
pick-up b1 (1)
stack b1 b11 (1)
unstack b18 b14 (1)
put-down b18 (1)
pick-up b14 (1)
stack b14 b19 (1)
pick-up b18 (1)
stack b18 b14 (1)
unstack b4 b5 (1)
put-down b4 (1)
unstack b5 b7 (1)
put-down b5 (1)
pick-up b4 (1)
stack b4 b5 (1)
unstack b7 b2 (1)
put-down b7 (1)
unstack b2 b8 (1)
stack b2 b12 (1)
unstack b8 b17 (1)
stack b8 b9 (1)
pick-up b17 (1)
stack b17 b18 (1)
unstack b2 b12 (1)
put-down b2 (1)
pick-up b12 (1)
stack b12 b17 (1)
pick-up b7 (1)
stack b7 b2 (1)
unstack b12 b17 (1)
put-down b12 (1)
unstack b17 b18 (1)
put-down b17 (1)
pick-up b12 (1)
stack b12 b17 (1)
unstack b7 b2 (1)
put-down b7 (1)
pick-up b2 (1)
stack b2 b12 (1)
pick-up b7 (1)
stack b7 b2 (1)
unstack b4 b5 (1)
put-down b4 (1)
pick-up b5 (1)
stack b5 b7 (1)
pick-up b4 (1)
stack b4 b5 (1)
unstack b18 b14 (1)
put-down b18 (1)
unstack b14 b19 (1)
put-down b14 (1)
pick-up b18 (1)
stack b18 b14 (1)
unstack b19 b20 (1)
put-down b19 (1)
unstack b20 b13 (1)
put-down b20 (1)
pick-up b13 (1)
stack b13 b3 (1)
pick-up b20 (1)
stack b20 b13 (1)
pick-up b19 (1)
stack b19 b20 (1)
unstack b18 b14 (1)
put-down b18 (1)
pick-up b14 (1)
stack b14 b19 (1)
pick-up b18 (1)
stack b18 b14 (1)
unstack b4 b5 (1)
put-down b4 (1)
unstack b5 b7 (1)
put-down b5 (1)
unstack b7 b2 (1)
put-down b7 (1)
pick-up b5 (1)
stack b5 b7 (1)
pick-up b4 (1)
stack b4 b5 (1)
unstack b2 b12 (1)
put-down b2 (1)
unstack b12 b17 (1)
put-down b12 (1)
pick-up b17 (1)
stack b17 b18 (1)
pick-up b12 (1)
stack b12 b17 (1)
pick-up b2 (1)
stack b2 b12 (1)
unstack b4 b5 (1)
put-down b4 (1)
unstack b5 b7 (1)
put-down b5 (1)
pick-up b4 (1)
stack b4 b5 (1)
pick-up b7 (1)
stack b7 b2 (1)
unstack b4 b5 (1)
put-down b4 (1)
pick-up b5 (1)
stack b5 b7 (1)
pick-up b4 (1)
stack b4 b5 (1)
[t=0.0337177s, 26328 KB] Plan length: 142 step(s).
[t=0.0337177s, 26328 KB] Plan cost: 142
[t=0.0337177s, 26328 KB] Expanded 811 state(s).
[t=0.0337177s, 26328 KB] Reopened 0 state(s).
[t=0.0337177s, 26328 KB] Evaluated 812 state(s).
[t=0.0337177s, 26328 KB] Evaluations: 1624
[t=0.0337177s, 26328 KB] Generated 7042 state(s).
[t=0.0337177s, 26328 KB] Dead ends: 0 state(s).
[t=0.0337177s, 26328 KB] Number of registered states: 812
[t=0.0337177s, 26328 KB] Int hash set load factor: 812/1024 = 0.792969
[t=0.0337177s, 26328 KB] Int hash set resizes: 10
[t=0.0337177s, 26328 KB] Search time: 0.0195271s
[t=0.0337177s, 26328 KB] Total time: 0.0337177s
Solution found.
Peak memory: 26328 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.17s
