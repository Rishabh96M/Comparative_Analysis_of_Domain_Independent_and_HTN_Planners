INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_26/bws_problem_26_57.pddl --sas-file output.sas
Parsing...
Parsing: [0.010s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.000s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.014s wall-clock]
2212 relevant atoms
1482 auxiliary atoms
3694 final queue length
6454 total queue pushes
Completing instantiation... [0.020s CPU, 0.024s wall-clock]
Instantiating: [0.030s CPU, 0.039s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
27 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.010s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.008s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.001s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.002s wall-clock]
Translating task: [0.040s CPU, 0.037s wall-clock]
2002 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
52 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.022s wall-clock]
Reordering and filtering variables...
53 of 53 variables necessary.
27 of 53 mutex groups necessary.
1352 of 1352 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.009s wall-clock]
Translator variables: 53
Translator derived variables: 0
Translator facts: 756
Translator goal facts: 24
Translator mutex groups: 27
Translator total mutex groups size: 729
Translator operators: 1352
Translator axioms: 0
Translator task size: 11624
Translator peak memory: 38900 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.130s CPU, 0.129s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.1621e-05s, 24488 KB] reading input...
[t=0.00397458s, 25744 KB] done reading input!
[t=0.00502264s, 26140 KB] Initializing landmark count heuristic...
[t=0.00505954s, 26140 KB] Generating landmark graph...
[t=0.00514008s, 26272 KB] Building a landmark graph with reasonable orders.
[t=0.00522204s, 26272 KB] Initializing Exploration...
[t=0.00560565s, 26680 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0238936s, 27208 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0240171s, 27208 KB] Landmarks generation time: 0.0188779s
[t=0.0240322s, 27208 KB] Discovered 119 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0240555s, 27208 KB] 579 edges
[t=0.024066s, 27208 KB] approx. reasonable orders
[t=0.0253544s, 27208 KB] approx. obedient reasonable orders
[t=0.0254595s, 27208 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0254927s, 27208 KB] Landmarks generation time: 0.0204329s
[t=0.0255056s, 27208 KB] Discovered 119 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0255157s, 27208 KB] 598 edges
[t=0.0255249s, 27208 KB] Landmark graph generation time: 0.0204726s
[t=0.0255342s, 27208 KB] Landmark graph contains 119 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0255471s, 27208 KB] Landmark graph contains 598 orderings.
[t=0.0264549s, 27208 KB] Simplifying 5356 unary operators... done! [4056 unary operators]
[t=0.0279933s, 27340 KB] time to simplify: 0.00163609s
[t=0.0281723s, 27340 KB] Initializing additive heuristic...
[t=0.0281916s, 27340 KB] Initializing FF heuristic...
[t=0.028254s, 27340 KB] Building successor generator...done!
[t=0.0285033s, 27340 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0285123s, 27340 KB] time for successor generation creation: 0.000222453s
[t=0.0285255s, 27340 KB] Variables: 53
[t=0.0285341s, 27340 KB] FactPairs: 756
[t=0.0285425s, 27340 KB] Bytes per state: 20
[t=0.0286488s, 27340 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0286837s, 27340 KB] 53 initial landmarks, 24 goal landmarks
[t=0.0287483s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 66
[t=0.0287638s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 48
[t=0.0287733s, 27340 KB] g=0, 1 evaluated, 0 expanded
[t=0.0287872s, 27340 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 66
[t=0.0287964s, 27340 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 48
[t=0.0288811s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 65
[t=0.0288904s, 27340 KB] g=1, 3 evaluated, 2 expanded
[t=0.0291027s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 47
[t=0.0291123s, 27340 KB] g=2, 9 evaluated, 8 expanded
[t=0.02922s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 64
[t=0.0292295s, 27340 KB] g=3, 12 evaluated, 11 expanded
[t=0.0295385s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 63
[t=0.0295486s, 27340 KB] g=6, 21 evaluated, 20 expanded
[t=0.0297625s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 46
[t=0.0297782s, 27340 KB] g=4, 27 evaluated, 26 expanded
[t=0.0298882s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 60
[t=0.0298973s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0299061s, 27340 KB] g=8, 30 evaluated, 29 expanded
[t=0.030144s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.0301534s, 27340 KB] g=10, 37 evaluated, 36 expanded
[t=0.0303597s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.0303686s, 27340 KB] g=10, 43 evaluated, 42 expanded
[t=0.0307668s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 58
[t=0.0307768s, 27340 KB] g=12, 55 evaluated, 54 expanded
[t=0.0311613s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0311782s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0312042s, 27340 KB] g=14, 66 evaluated, 65 expanded
[t=0.0314319s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0314414s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0314496s, 27340 KB] g=16, 72 evaluated, 71 expanded
[t=0.0316585s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0316675s, 27340 KB] g=18, 78 evaluated, 77 expanded
[t=0.0317778s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0317866s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0317949s, 27340 KB] g=18, 81 evaluated, 80 expanded
[t=0.032002s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0320121s, 27340 KB] g=20, 87 evaluated, 86 expanded
[t=0.0322645s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.032281s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0322895s, 27340 KB] g=22, 94 evaluated, 93 expanded
[t=0.0325585s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0325684s, 27340 KB] g=25, 102 evaluated, 101 expanded
[t=0.0330327s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0330427s, 27340 KB] g=28, 116 evaluated, 115 expanded
[t=0.0333116s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0333209s, 27340 KB] g=30, 124 evaluated, 123 expanded
[t=0.033397s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0334068s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0334159s, 27340 KB] g=30, 126 evaluated, 125 expanded
[t=0.03366s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0336692s, 27340 KB] g=32, 133 evaluated, 132 expanded
[t=0.0337438s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0337527s, 27340 KB] g=32, 135 evaluated, 134 expanded
[t=0.0341418s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0341515s, 27340 KB] g=34, 147 evaluated, 146 expanded
[t=0.0347227s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0347404s, 27340 KB] g=38, 164 evaluated, 163 expanded
[t=0.0349846s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0349943s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0350025s, 27340 KB] g=40, 171 evaluated, 170 expanded
[t=0.0358549s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0358651s, 27340 KB] g=44, 198 evaluated, 197 expanded
[t=0.0360666s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0360759s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0360842s, 27340 KB] g=46, 204 evaluated, 203 expanded
[t=0.0400207s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0401016s, 27340 KB] g=61, 321 evaluated, 320 expanded
[t=0.0401514s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0401619s, 27340 KB] g=62, 322 evaluated, 321 expanded
[t=0.0406486s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.04066s, 27340 KB] g=64, 336 evaluated, 335 expanded
[t=0.041005s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0410166s, 27340 KB] g=66, 346 evaluated, 345 expanded
[t=0.0414291s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0414433s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0414532s, 27340 KB] g=68, 357 evaluated, 356 expanded
[t=0.0418156s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0418323s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0418408s, 27340 KB] g=70, 367 evaluated, 366 expanded
[t=0.0421645s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0421762s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0421847s, 27340 KB] g=72, 376 evaluated, 375 expanded
[t=0.0424823s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0424994s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0425091s, 27340 KB] g=74, 384 evaluated, 383 expanded
[t=0.0438115s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0438273s, 27340 KB] g=79, 423 evaluated, 422 expanded
[t=0.0438734s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.043883s, 27340 KB] g=80, 424 evaluated, 423 expanded
[t=0.0444193s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0444374s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0444475s, 27340 KB] g=82, 440 evaluated, 439 expanded
[t=0.0447873s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0447995s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0448081s, 27340 KB] g=84, 450 evaluated, 449 expanded
[t=0.0450712s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0450816s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0450906s, 27340 KB] g=86, 458 evaluated, 457 expanded
[t=0.0453493s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0453592s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0453675s, 27340 KB] g=88, 466 evaluated, 465 expanded
[t=0.0455671s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0455776s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0455858s, 27340 KB] g=90, 472 evaluated, 471 expanded
[t=0.0468696s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0469431s, 27340 KB] g=94, 508 evaluated, 507 expanded
[t=0.0471875s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0472385s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0472479s, 27340 KB] g=96, 514 evaluated, 513 expanded
[t=0.0493045s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0493259s, 27340 KB] g=104, 578 evaluated, 577 expanded
[t=0.0495829s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0495947s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0496033s, 27340 KB] g=106, 586 evaluated, 585 expanded
[t=0.0570149s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0570627s, 27340 KB] g=120, 820 evaluated, 819 expanded
[t=0.0572253s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.057237s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0572454s, 27340 KB] g=122, 825 evaluated, 824 expanded
[t=0.0577214s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0577351s, 27340 KB] g=126, 841 evaluated, 840 expanded
[t=0.0578633s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0578757s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0578867s, 27340 KB] g=128, 845 evaluated, 844 expanded
[t=0.0650367s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0650741s, 27340 KB] g=148, 1103 evaluated, 1102 expanded
[t=0.065894s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0659263s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0659356s, 27340 KB] g=158, 1127 evaluated, 1126 expanded
[t=0.0693358s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0693538s, 27340 KB] g=152, 1252 evaluated, 1251 expanded
[t=0.0702142s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0702314s, 27340 KB] g=160, 1286 evaluated, 1285 expanded
[t=0.0704687s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0704788s, 27340 KB] g=164, 1295 evaluated, 1294 expanded
[t=0.0705577s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0705669s, 27340 KB] g=166, 1298 evaluated, 1297 expanded
[t=0.0716901s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0717024s, 27340 KB] g=184, 1354 evaluated, 1353 expanded
[t=0.0717634s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0717727s, 27340 KB] g=186, 1357 evaluated, 1356 expanded
[t=0.0719592s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0719692s, 27340 KB] g=194, 1369 evaluated, 1368 expanded
[t=0.0719885s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0719974s, 27340 KB] g=195, 1370 evaluated, 1369 expanded
[t=0.072014s, 27340 KB] Solution found!
[t=0.0720324s, 27340 KB] Actual search time: 0.0433462s
unstack b11 b16 (1)
put-down b11 (1)
unstack b21 b19 (1)
put-down b21 (1)
unstack b16 b26 (1)
put-down b16 (1)
unstack b19 b6 (1)
stack b19 b11 (1)
pick-up b8 (1)
stack b8 b5 (1)
unstack b26 b22 (1)
put-down b26 (1)
unstack b22 b10 (1)
stack b22 b26 (1)
unstack b10 b12 (1)
stack b10 b8 (1)
unstack b6 b24 (1)
stack b6 b12 (1)
unstack b24 b25 (1)
put-down b24 (1)
pick-up b25 (1)
stack b25 b24 (1)
unstack b6 b12 (1)
put-down b6 (1)
unstack b12 b18 (1)
put-down b12 (1)
unstack b18 b14 (1)
stack b18 b10 (1)
pick-up b16 (1)
stack b16 b18 (1)
pick-up b6 (1)
stack b6 b12 (1)
unstack b14 b17 (1)
put-down b14 (1)
unstack b17 b2 (1)
put-down b17 (1)
pick-up b2 (1)
stack b2 b6 (1)
pick-up b17 (1)
stack b17 b2 (1)
unstack b22 b26 (1)
put-down b22 (1)
pick-up b26 (1)
stack b26 b14 (1)
pick-up b22 (1)
stack b22 b26 (1)
unstack b16 b18 (1)
put-down b16 (1)
unstack b18 b10 (1)
put-down b18 (1)
pick-up b16 (1)
stack b16 b18 (1)
unstack b10 b8 (1)
put-down b10 (1)
unstack b8 b5 (1)
put-down b8 (1)
unstack b5 b23 (1)
put-down b5 (1)
unstack b23 b9 (1)
put-down b23 (1)
unstack b9 b13 (1)
stack b9 b17 (1)
unstack b13 b7 (1)
stack b13 b16 (1)
unstack b7 b1 (1)
put-down b7 (1)
unstack b1 b15 (1)
stack b1 b25 (1)
pick-up b10 (1)
stack b10 b8 (1)
pick-up b21 (1)
stack b21 b15 (1)
pick-up b5 (1)
stack b5 b7 (1)
unstack b21 b15 (1)
put-down b21 (1)
unstack b15 b20 (1)
put-down b15 (1)
unstack b20 b3 (1)
stack b20 b22 (1)
unstack b3 b4 (1)
stack b3 b19 (1)
pick-up b15 (1)
stack b15 b20 (1)
pick-up b4 (1)
stack b4 b3 (1)
pick-up b21 (1)
stack b21 b15 (1)
pick-up b23 (1)
stack b23 b4 (1)
unstack b10 b8 (1)
put-down b10 (1)
pick-up b8 (1)
stack b8 b5 (1)
pick-up b10 (1)
stack b10 b8 (1)
unstack b1 b25 (1)
put-down b1 (1)
unstack b25 b24 (1)
put-down b25 (1)
pick-up b24 (1)
stack b24 b13 (1)
pick-up b25 (1)
stack b25 b24 (1)
pick-up b1 (1)
stack b1 b25 (1)
unstack b9 b17 (1)
put-down b9 (1)
unstack b17 b2 (1)
put-down b17 (1)
pick-up b9 (1)
stack b9 b17 (1)
unstack b2 b6 (1)
put-down b2 (1)
unstack b6 b12 (1)
put-down b6 (1)
pick-up b12 (1)
stack b12 b23 (1)
pick-up b6 (1)
stack b6 b12 (1)
pick-up b2 (1)
stack b2 b6 (1)
unstack b9 b17 (1)
put-down b9 (1)
pick-up b17 (1)
stack b17 b2 (1)
pick-up b9 (1)
stack b9 b17 (1)
unstack b1 b25 (1)
put-down b1 (1)
unstack b25 b24 (1)
put-down b25 (1)
unstack b24 b13 (1)
put-down b24 (1)
pick-up b25 (1)
stack b25 b24 (1)
pick-up b1 (1)
stack b1 b25 (1)
unstack b13 b16 (1)
put-down b13 (1)
unstack b16 b18 (1)
put-down b16 (1)
pick-up b13 (1)
stack b13 b16 (1)
pick-up b18 (1)
stack b18 b10 (1)
unstack b13 b16 (1)
put-down b13 (1)
pick-up b16 (1)
stack b16 b18 (1)
pick-up b13 (1)
stack b13 b16 (1)
unstack b1 b25 (1)
put-down b1 (1)
unstack b25 b24 (1)
put-down b25 (1)
pick-up b1 (1)
stack b1 b25 (1)
pick-up b24 (1)
stack b24 b13 (1)
unstack b1 b25 (1)
put-down b1 (1)
pick-up b25 (1)
stack b25 b24 (1)
pick-up b1 (1)
stack b1 b25 (1)
unstack b21 b15 (1)
put-down b21 (1)
unstack b15 b20 (1)
put-down b15 (1)
unstack b20 b22 (1)
put-down b20 (1)
pick-up b15 (1)
stack b15 b20 (1)
pick-up b21 (1)
stack b21 b15 (1)
unstack b22 b26 (1)
put-down b22 (1)
unstack b26 b14 (1)
put-down b26 (1)
pick-up b14 (1)
stack b14 b1 (1)
pick-up b26 (1)
stack b26 b14 (1)
pick-up b22 (1)
stack b22 b26 (1)
unstack b21 b15 (1)
put-down b21 (1)
unstack b15 b20 (1)
put-down b15 (1)
pick-up b20 (1)
stack b20 b22 (1)
pick-up b15 (1)
stack b15 b20 (1)
pick-up b21 (1)
stack b21 b15 (1)
[t=0.0720423s, 27340 KB] Plan length: 196 step(s).
[t=0.0720423s, 27340 KB] Plan cost: 196
[t=0.0720423s, 27340 KB] Expanded 1370 state(s).
[t=0.0720423s, 27340 KB] Reopened 0 state(s).
[t=0.0720423s, 27340 KB] Evaluated 1371 state(s).
[t=0.0720423s, 27340 KB] Evaluations: 2742
[t=0.0720423s, 27340 KB] Generated 10775 state(s).
[t=0.0720423s, 27340 KB] Dead ends: 0 state(s).
[t=0.0720423s, 27340 KB] Number of registered states: 1371
[t=0.0720423s, 27340 KB] Int hash set load factor: 1371/2048 = 0.669434
[t=0.0720423s, 27340 KB] Int hash set resizes: 11
[t=0.0720423s, 27340 KB] Search time: 0.0433939s
[t=0.0720423s, 27340 KB] Total time: 0.0720423s
Solution found.
Peak memory: 27340 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.25s
