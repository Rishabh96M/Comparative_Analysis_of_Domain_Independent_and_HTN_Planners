INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_22/bws_problem_22_87.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.010s wall-clock]
1608 relevant atoms
1078 auxiliary atoms
2686 final queue length
4670 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.031s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
23 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.010s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.006s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.026s wall-clock]
1430 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
44 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.011s wall-clock]
Reordering and filtering variables...
45 of 45 variables necessary.
23 of 45 mutex groups necessary.
968 of 968 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 45
Translator derived variables: 0
Translator facts: 552
Translator goal facts: 16
Translator mutex groups: 23
Translator total mutex groups size: 529
Translator operators: 968
Translator axioms: 0
Translator task size: 8336
Translator peak memory: 36976 KB
Writing output... [0.010s CPU, 0.005s wall-clock]
Done! [0.090s CPU, 0.091s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=4.1083e-05s, 24488 KB] reading input...
[t=0.00304427s, 25340 KB] done reading input!
[t=0.00395902s, 25736 KB] Initializing landmark count heuristic...
[t=0.00399582s, 25736 KB] Generating landmark graph...
[t=0.00405879s, 25736 KB] Building a landmark graph with reasonable orders.
[t=0.0041212s, 25736 KB] Initializing Exploration...
[t=0.00442676s, 26000 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0147583s, 26528 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0149349s, 26528 KB] Landmarks generation time: 0.0108907s
[t=0.014965s, 26528 KB] Discovered 94 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0149888s, 26528 KB] 356 edges
[t=0.0149996s, 26528 KB] approx. reasonable orders
[t=0.0176165s, 26528 KB] approx. obedient reasonable orders
[t=0.0177603s, 26528 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0177721s, 26528 KB] Landmarks generation time: 0.0137737s
[t=0.0177829s, 26528 KB] Discovered 94 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0177916s, 26528 KB] 413 edges
[t=0.0178s, 26528 KB] Landmark graph generation time: 0.0138112s
[t=0.0178085s, 26528 KB] Landmark graph contains 94 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0178171s, 26528 KB] Landmark graph contains 413 orderings.
[t=0.0181529s, 26528 KB] Simplifying 3828 unary operators... done! [2904 unary operators]
[t=0.019063s, 26528 KB] time to simplify: 0.000968412s
[t=0.0191849s, 26528 KB] Initializing additive heuristic...
[t=0.0191986s, 26528 KB] Initializing FF heuristic...
[t=0.0192474s, 26528 KB] Building successor generator...done!
[t=0.0194418s, 26528 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0194501s, 26528 KB] time for successor generation creation: 0.000162905s
[t=0.0194615s, 26528 KB] Variables: 45
[t=0.0194696s, 26528 KB] FactPairs: 552
[t=0.0194776s, 26528 KB] Bytes per state: 20
[t=0.0195621s, 26528 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0195948s, 26528 KB] 44 initial landmarks, 16 goal landmarks
[t=0.0196515s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0196686s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.019679s, 26528 KB] g=0, 1 evaluated, 0 expanded
[t=0.0196946s, 26528 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0197057s, 26528 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0198554s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0198652s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0198739s, 26528 KB] g=2, 6 evaluated, 5 expanded
[t=0.0200121s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0200216s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.02003s, 26528 KB] g=4, 11 evaluated, 10 expanded
[t=0.0201702s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0201803s, 26528 KB] g=6, 16 evaluated, 15 expanded
[t=0.0202185s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0202282s, 26528 KB] g=6, 17 evaluated, 16 expanded
[t=0.0204678s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.020477s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0204856s, 26528 KB] g=8, 26 evaluated, 25 expanded
[t=0.0205734s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0205826s, 26528 KB] g=9, 29 evaluated, 28 expanded
[t=0.0208027s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.020812s, 26528 KB] g=12, 37 evaluated, 36 expanded
[t=0.0208747s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0208845s, 26528 KB] g=12, 39 evaluated, 38 expanded
[t=0.0211313s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0211409s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0211542s, 26528 KB] g=14, 48 evaluated, 47 expanded
[t=0.021332s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0213436s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.021353s, 26528 KB] g=16, 54 evaluated, 53 expanded
[t=0.0215509s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0215602s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0215691s, 26528 KB] g=18, 60 evaluated, 59 expanded
[t=0.0217112s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0217208s, 26528 KB] g=20, 65 evaluated, 64 expanded
[t=0.021758s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.021767s, 26528 KB] g=20, 66 evaluated, 65 expanded
[t=0.0219916s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0220078s, 26528 KB] g=22, 74 evaluated, 73 expanded
[t=0.0220478s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0220583s, 26528 KB] g=22, 75 evaluated, 74 expanded
[t=0.0222806s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0222908s, 26528 KB] g=22, 83 evaluated, 82 expanded
[t=0.022355s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0223646s, 26528 KB] g=24, 85 evaluated, 84 expanded
[t=0.0224823s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0224919s, 26528 KB] g=25, 89 evaluated, 88 expanded
[t=0.0225837s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0225932s, 26528 KB] g=24, 92 evaluated, 91 expanded
[t=0.0227072s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0227169s, 26528 KB] g=27, 96 evaluated, 95 expanded
[t=0.022839s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0228488s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0228582s, 26528 KB] g=26, 100 evaluated, 99 expanded
[t=0.0229747s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0229839s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0229926s, 26528 KB] g=28, 104 evaluated, 103 expanded
[t=0.023055s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0230643s, 26528 KB] g=29, 106 evaluated, 105 expanded
[t=0.0231013s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0231105s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0231192s, 26528 KB] g=30, 107 evaluated, 106 expanded
[t=0.0232354s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0232448s, 26528 KB] g=32, 111 evaluated, 110 expanded
[t=0.0233078s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.023317s, 26528 KB] g=32, 113 evaluated, 112 expanded
[t=0.0235119s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0235216s, 26528 KB] g=34, 120 evaluated, 119 expanded
[t=0.0236643s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0236769s, 26528 KB] g=36, 125 evaluated, 124 expanded
[t=0.0239267s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.023937s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0239465s, 26528 KB] g=38, 134 evaluated, 133 expanded
[t=0.0240056s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0240157s, 26528 KB] g=39, 136 evaluated, 135 expanded
[t=0.0240496s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0240591s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0240678s, 26528 KB] g=40, 137 evaluated, 136 expanded
[t=0.0241185s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.024128s, 26528 KB] g=41, 139 evaluated, 138 expanded
[t=0.0241576s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.024167s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0241758s, 26528 KB] g=42, 140 evaluated, 139 expanded
[t=0.0242985s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.024308s, 26528 KB] g=44, 146 evaluated, 145 expanded
[t=0.0244271s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0244369s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0244552s, 26528 KB] g=44, 151 evaluated, 150 expanded
[t=0.0244927s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0245029s, 26528 KB] g=45, 152 evaluated, 151 expanded
[t=0.0245339s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0245437s, 26528 KB] g=46, 153 evaluated, 152 expanded
[t=0.0246403s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0246556s, 26528 KB] g=48, 157 evaluated, 156 expanded
[t=0.0246834s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0246935s, 26528 KB] g=49, 158 evaluated, 157 expanded
[t=0.0247639s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0247751s, 26528 KB] g=50, 161 evaluated, 160 expanded
[t=0.0248022s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0248119s, 26528 KB] g=51, 162 evaluated, 161 expanded
[t=0.024874s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0248836s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0248922s, 26528 KB] g=54, 165 evaluated, 164 expanded
[t=0.0249117s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0249213s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0249351s, 26528 KB] g=55, 166 evaluated, 165 expanded
[t=0.0249548s, 26528 KB] Solution found!
[t=0.0249657s, 26528 KB] Actual search time: 0.00536815s
unstack b21 b10 (1)
put-down b21 (1)
unstack b7 b2 (1)
put-down b7 (1)
unstack b2 b12 (1)
put-down b2 (1)
unstack b12 b22 (1)
put-down b12 (1)
unstack b22 b4 (1)
put-down b22 (1)
unstack b4 b3 (1)
stack b4 b1 (1)
unstack b3 b19 (1)
stack b3 b2 (1)
unstack b19 b18 (1)
stack b19 b7 (1)
unstack b18 b14 (1)
put-down b18 (1)
unstack b9 b13 (1)
stack b9 b4 (1)
unstack b13 b6 (1)
stack b13 b21 (1)
pick-up b10 (1)
stack b10 b13 (1)
unstack b6 b20 (1)
stack b6 b10 (1)
unstack b20 b8 (1)
stack b20 b18 (1)
unstack b8 b11 (1)
stack b8 b19 (1)
unstack b9 b4 (1)
put-down b9 (1)
unstack b4 b1 (1)
put-down b4 (1)
unstack b1 b5 (1)
stack b1 b3 (1)
unstack b5 b16 (1)
stack b5 b20 (1)
unstack b16 b17 (1)
stack b16 b6 (1)
unstack b17 b15 (1)
stack b17 b5 (1)
pick-up b15 (1)
stack b15 b14 (1)
pick-up b11 (1)
stack b11 b9 (1)
pick-up b22 (1)
stack b22 b15 (1)
pick-up b4 (1)
stack b4 b1 (1)
unstack b11 b9 (1)
put-down b11 (1)
pick-up b9 (1)
stack b9 b4 (1)
pick-up b11 (1)
stack b11 b9 (1)
[t=0.0249769s, 26528 KB] Plan length: 56 step(s).
[t=0.0249769s, 26528 KB] Plan cost: 56
[t=0.0249769s, 26528 KB] Expanded 166 state(s).
[t=0.0249769s, 26528 KB] Reopened 0 state(s).
[t=0.0249769s, 26528 KB] Evaluated 167 state(s).
[t=0.0249769s, 26528 KB] Evaluations: 334
[t=0.0249769s, 26528 KB] Generated 1586 state(s).
[t=0.0249769s, 26528 KB] Dead ends: 0 state(s).
[t=0.0249769s, 26528 KB] Number of registered states: 167
[t=0.0249769s, 26528 KB] Int hash set load factor: 167/256 = 0.652344
[t=0.0249769s, 26528 KB] Int hash set resizes: 8
[t=0.0249769s, 26528 KB] Search time: 0.00541512s
[t=0.0249769s, 26528 KB] Total time: 0.0249769s
Solution found.
Peak memory: 26528 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.16s
