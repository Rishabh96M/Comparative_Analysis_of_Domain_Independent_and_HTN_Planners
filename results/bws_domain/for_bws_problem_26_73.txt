INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_26/bws_problem_26_73.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.013s wall-clock]
2212 relevant atoms
1482 auxiliary atoms
3694 final queue length
6455 total queue pushes
Completing instantiation... [0.020s CPU, 0.023s wall-clock]
Instantiating: [0.040s CPU, 0.038s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.010s CPU, 0.000s wall-clock]
Choosing groups...
27 uncovered facts
Choosing groups: [0.000s CPU, 0.002s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.008s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.035s wall-clock]
2002 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
52 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.022s wall-clock]
Reordering and filtering variables...
53 of 53 variables necessary.
27 of 53 mutex groups necessary.
1352 of 1352 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.009s wall-clock]
Translator variables: 53
Translator derived variables: 0
Translator facts: 756
Translator goal facts: 18
Translator mutex groups: 27
Translator total mutex groups size: 729
Translator operators: 1352
Translator axioms: 0
Translator task size: 11618
Translator peak memory: 38900 KB
Writing output... [0.010s CPU, 0.008s wall-clock]
Done! [0.120s CPU, 0.125s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=1.8702e-05s, 24488 KB] reading input...
[t=0.0037996s, 25744 KB] done reading input!
[t=0.00492586s, 26140 KB] Initializing landmark count heuristic...
[t=0.0050035s, 26140 KB] Generating landmark graph...
[t=0.00511591s, 26272 KB] Building a landmark graph with reasonable orders.
[t=0.00521445s, 26272 KB] Initializing Exploration...
[t=0.00565817s, 26680 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0213549s, 27208 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0214435s, 27208 KB] Landmarks generation time: 0.0163243s
[t=0.0214578s, 27208 KB] Discovered 108 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0214733s, 27208 KB] 377 edges
[t=0.0214828s, 27208 KB] approx. reasonable orders
[t=0.0254123s, 27208 KB] approx. obedient reasonable orders
[t=0.0255682s, 27208 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0255805s, 27208 KB] Landmarks generation time: 0.020573s
[t=0.0255907s, 27208 KB] Discovered 108 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0255988s, 27208 KB] 436 edges
[t=0.0256072s, 27208 KB] Landmark graph generation time: 0.020611s
[t=0.0256155s, 27208 KB] Landmark graph contains 108 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0256235s, 27208 KB] Landmark graph contains 436 orderings.
[t=0.0260738s, 27208 KB] Simplifying 5356 unary operators... done! [4056 unary operators]
[t=0.0273229s, 27340 KB] time to simplify: 0.00132858s
[t=0.0274844s, 27340 KB] Initializing additive heuristic...
[t=0.0274987s, 27340 KB] Initializing FF heuristic...
[t=0.0275696s, 27340 KB] Building successor generator...done!
[t=0.0278303s, 27340 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0278404s, 27340 KB] time for successor generation creation: 0.000233667s
[t=0.0278533s, 27340 KB] Variables: 53
[t=0.0278612s, 27340 KB] FactPairs: 756
[t=0.0278752s, 27340 KB] Bytes per state: 20
[t=0.0279744s, 27340 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0280064s, 27340 KB] 51 initial landmarks, 18 goal landmarks
[t=0.028079s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 57
[t=0.0280892s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0280976s, 27340 KB] g=0, 1 evaluated, 0 expanded
[t=0.0281117s, 27340 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 57
[t=0.0281233s, 27340 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0283509s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0283605s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0283687s, 27340 KB] g=2, 7 evaluated, 6 expanded
[t=0.0285774s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.028588s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0285964s, 27340 KB] g=4, 13 evaluated, 12 expanded
[t=0.0288076s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0288165s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0288248s, 27340 KB] g=6, 19 evaluated, 18 expanded
[t=0.029032s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0290409s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0290489s, 27340 KB] g=8, 25 evaluated, 24 expanded
[t=0.0292506s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0292591s, 27340 KB] g=10, 31 evaluated, 30 expanded
[t=0.0293358s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0293446s, 27340 KB] g=10, 33 evaluated, 32 expanded
[t=0.0295798s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0295883s, 27340 KB] g=12, 40 evaluated, 39 expanded
[t=0.029811s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0298195s, 27340 KB] g=12, 47 evaluated, 46 expanded
[t=0.0299816s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0299901s, 27340 KB] g=14, 52 evaluated, 51 expanded
[t=0.0302159s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0302251s, 27340 KB] g=13, 59 evaluated, 58 expanded
[t=0.0308066s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0308245s, 27340 KB] g=16, 76 evaluated, 75 expanded
[t=0.0308993s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0309078s, 27340 KB] g=18, 78 evaluated, 77 expanded
[t=0.0313162s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0313256s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0313365s, 27340 KB] g=20, 91 evaluated, 90 expanded
[t=0.0315668s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.031576s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0315846s, 27340 KB] g=22, 98 evaluated, 97 expanded
[t=0.0317783s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0317869s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0317952s, 27340 KB] g=24, 104 evaluated, 103 expanded
[t=0.0319589s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0319681s, 27340 KB] g=26, 109 evaluated, 108 expanded
[t=0.0322542s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0322647s, 27340 KB] g=28, 117 evaluated, 116 expanded
[t=0.0324937s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0325025s, 27340 KB] g=30, 124 evaluated, 123 expanded
[t=0.0325548s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0325842s, 27340 KB] g=29, 125 evaluated, 124 expanded
[t=0.0330987s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0331119s, 27340 KB] g=32, 140 evaluated, 139 expanded
[t=0.033218s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0332274s, 27340 KB] g=34, 143 evaluated, 142 expanded
[t=0.0336247s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0336362s, 27340 KB] g=36, 155 evaluated, 154 expanded
[t=0.0337449s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0337557s, 27340 KB] g=34, 158 evaluated, 157 expanded
[t=0.0339249s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0339376s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0339463s, 27340 KB] g=38, 163 evaluated, 162 expanded
[t=0.0340847s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0341003s, 27340 KB] g=40, 167 evaluated, 166 expanded
[t=0.0342695s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0342865s, 27340 KB] g=42, 172 evaluated, 171 expanded
[t=0.0345598s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0345741s, 27340 KB] g=44, 180 evaluated, 179 expanded
[t=0.0348004s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0348255s, 27340 KB] g=46, 187 evaluated, 186 expanded
[t=0.0352278s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0352444s, 27340 KB] g=48, 199 evaluated, 198 expanded
[t=0.0358884s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0359032s, 27340 KB] g=50, 219 evaluated, 218 expanded
[t=0.0359816s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0359914s, 27340 KB] g=51, 221 evaluated, 220 expanded
[t=0.0360693s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0360796s, 27340 KB] g=52, 223 evaluated, 222 expanded
[t=0.0362801s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0362896s, 27340 KB] g=53, 229 evaluated, 228 expanded
[t=0.0365967s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0366136s, 27340 KB] g=55, 238 evaluated, 237 expanded
[t=0.0366847s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0366935s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0367015s, 27340 KB] g=56, 240 evaluated, 239 expanded
[t=0.0370267s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0370376s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0370456s, 27340 KB] g=58, 250 evaluated, 249 expanded
[t=0.0370822s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.037091s, 27340 KB] g=59, 251 evaluated, 250 expanded
[t=0.0371254s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0371343s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0371427s, 27340 KB] g=60, 252 evaluated, 251 expanded
[t=0.0373047s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0373142s, 27340 KB] g=61, 258 evaluated, 257 expanded
[t=0.0373513s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0373599s, 27340 KB] g=62, 259 evaluated, 258 expanded
[t=0.0375169s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.037527s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0375351s, 27340 KB] g=62, 265 evaluated, 264 expanded
[t=0.0376818s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0376918s, 27340 KB] g=63, 271 evaluated, 270 expanded
[t=0.0377285s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0377381s, 27340 KB] g=64, 272 evaluated, 271 expanded
[t=0.0379728s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0379825s, 27340 KB] g=66, 281 evaluated, 280 expanded
[t=0.0381753s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0381847s, 27340 KB] g=64, 288 evaluated, 287 expanded
[t=0.0382205s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0382293s, 27340 KB] g=68, 289 evaluated, 288 expanded
[t=0.0384323s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.038442s, 27340 KB] g=65, 297 evaluated, 296 expanded
[t=0.0384767s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0384855s, 27340 KB] g=70, 298 evaluated, 297 expanded
[t=0.0387408s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0387525s, 27340 KB] g=66, 308 evaluated, 307 expanded
[t=0.0389056s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0389326s, 27340 KB] g=67, 314 evaluated, 313 expanded
[t=0.039111s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0391211s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0391296s, 27340 KB] g=68, 321 evaluated, 320 expanded
[t=0.0392053s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0392145s, 27340 KB] g=69, 324 evaluated, 323 expanded
[t=0.0392479s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0392574s, 27340 KB] g=70, 325 evaluated, 324 expanded
[t=0.039357s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0393778s, 27340 KB] g=72, 329 evaluated, 328 expanded
[t=0.0394564s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0394667s, 27340 KB] g=70, 332 evaluated, 331 expanded
[t=0.0395144s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0395233s, 27340 KB] g=71, 334 evaluated, 333 expanded
[t=0.0395563s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0395651s, 27340 KB] g=72, 335 evaluated, 334 expanded
[t=0.039622s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0396308s, 27340 KB] g=74, 337 evaluated, 336 expanded
[t=0.0396575s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0396662s, 27340 KB] g=75, 338 evaluated, 337 expanded
[t=0.0397315s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.039741s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0397527s, 27340 KB] g=78, 341 evaluated, 340 expanded
[t=0.0397749s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0397845s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.039793s, 27340 KB] g=79, 342 evaluated, 341 expanded
[t=0.0398099s, 27340 KB] Solution found!
[t=0.0398207s, 27340 KB] Actual search time: 0.0118098s
unstack b23 b5 (1)
put-down b23 (1)
unstack b3 b15 (1)
put-down b3 (1)
unstack b15 b22 (1)
stack b15 b23 (1)
unstack b7 b26 (1)
put-down b7 (1)
unstack b17 b13 (1)
stack b17 b22 (1)
unstack b13 b19 (1)
put-down b13 (1)
unstack b19 b16 (1)
stack b19 b26 (1)
unstack b4 b9 (1)
put-down b4 (1)
unstack b9 b24 (1)
stack b9 b19 (1)
unstack b24 b18 (1)
stack b24 b13 (1)
unstack b18 b2 (1)
stack b18 b7 (1)
pick-up b16 (1)
stack b16 b2 (1)
unstack b17 b22 (1)
put-down b17 (1)
unstack b22 b8 (1)
stack b22 b4 (1)
pick-up b17 (1)
stack b17 b22 (1)
unstack b8 b10 (1)
put-down b8 (1)
unstack b10 b20 (1)
put-down b10 (1)
pick-up b20 (1)
stack b20 b18 (1)
pick-up b5 (1)
stack b5 b10 (1)
unstack b17 b22 (1)
put-down b17 (1)
unstack b22 b4 (1)
put-down b22 (1)
unstack b9 b19 (1)
put-down b9 (1)
unstack b19 b26 (1)
put-down b19 (1)
unstack b26 b25 (1)
put-down b26 (1)
unstack b25 b1 (1)
put-down b25 (1)
unstack b1 b6 (1)
stack b1 b15 (1)
unstack b6 b21 (1)
put-down b6 (1)
unstack b21 b12 (1)
stack b21 b25 (1)
unstack b12 b14 (1)
stack b12 b5 (1)
unstack b14 b11 (1)
stack b14 b12 (1)
pick-up b8 (1)
stack b8 b14 (1)
pick-up b4 (1)
stack b4 b11 (1)
pick-up b22 (1)
stack b22 b4 (1)
pick-up b17 (1)
stack b17 b22 (1)
pick-up b26 (1)
stack b26 b17 (1)
pick-up b6 (1)
stack b6 b9 (1)
pick-up b19 (1)
stack b19 b26 (1)
unstack b6 b9 (1)
put-down b6 (1)
pick-up b9 (1)
stack b9 b19 (1)
pick-up b6 (1)
stack b6 b9 (1)
[t=0.03983s, 27340 KB] Plan length: 80 step(s).
[t=0.03983s, 27340 KB] Plan cost: 80
[t=0.03983s, 27340 KB] Expanded 342 state(s).
[t=0.03983s, 27340 KB] Reopened 0 state(s).
[t=0.03983s, 27340 KB] Evaluated 343 state(s).
[t=0.03983s, 27340 KB] Evaluations: 686
[t=0.03983s, 27340 KB] Generated 4009 state(s).
[t=0.03983s, 27340 KB] Dead ends: 0 state(s).
[t=0.03983s, 27340 KB] Number of registered states: 343
[t=0.03983s, 27340 KB] Int hash set load factor: 343/512 = 0.669922
[t=0.03983s, 27340 KB] Int hash set resizes: 9
[t=0.03983s, 27340 KB] Search time: 0.0118559s
[t=0.03983s, 27340 KB] Total time: 0.03983s
Solution found.
Peak memory: 27340 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.21s
