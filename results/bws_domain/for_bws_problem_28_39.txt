INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_28/bws_problem_28_39.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.015s wall-clock]
2550 relevant atoms
1708 auxiliary atoms
4258 final queue length
7455 total queue pushes
Completing instantiation... [0.020s CPU, 0.026s wall-clock]
Instantiating: [0.040s CPU, 0.043s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
29 uncovered facts
Choosing groups: [0.000s CPU, 0.002s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.009s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.001s wall-clock]
Translating task: [0.050s CPU, 0.046s wall-clock]
2324 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
56 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.020s wall-clock]
Reordering and filtering variables...
57 of 57 variables necessary.
29 of 57 mutex groups necessary.
1568 of 1568 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.010s wall-clock]
Translator variables: 57
Translator derived variables: 0
Translator facts: 870
Translator goal facts: 25
Translator mutex groups: 29
Translator total mutex groups size: 841
Translator operators: 1568
Translator axioms: 0
Translator task size: 13469
Translator peak memory: 40312 KB
Writing output... [0.010s CPU, 0.008s wall-clock]
Done! [0.140s CPU, 0.142s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.8161e-05s, 24488 KB] reading input...
[t=0.00515282s, 26076 KB] done reading input!
[t=0.00642388s, 26472 KB] Initializing landmark count heuristic...
[t=0.00648116s, 26472 KB] Generating landmark graph...
[t=0.00660362s, 26604 KB] Building a landmark graph with reasonable orders.
[t=0.00671791s, 26604 KB] Initializing Exploration...
[t=0.00731379s, 27016 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0300106s, 27812 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0301201s, 27812 KB] Landmarks generation time: 0.0235079s
[t=0.030144s, 27812 KB] Discovered 127 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0301616s, 27812 KB] 827 edges
[t=0.030172s, 27812 KB] approx. reasonable orders
[t=0.0301821s, 27812 KB] approx. obedient reasonable orders
[t=0.0302183s, 27812 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0302288s, 27812 KB] Landmarks generation time: 0.0237427s
[t=0.0302388s, 27812 KB] Discovered 127 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0302473s, 27812 KB] 827 edges
[t=0.0302563s, 27812 KB] Landmark graph generation time: 0.0237828s
[t=0.0302655s, 27812 KB] Landmark graph contains 127 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.030274s, 27812 KB] Landmark graph contains 827 orderings.
[t=0.0308968s, 27836 KB] Simplifying 6216 unary operators... done! [4704 unary operators]
[t=0.0323973s, 27836 KB] time to simplify: 0.00161825s
[t=0.0326614s, 28012 KB] Initializing additive heuristic...
[t=0.0326857s, 28012 KB] Initializing FF heuristic...
[t=0.0327967s, 28012 KB] Building successor generator...done!
[t=0.0331658s, 28012 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0331746s, 28012 KB] time for successor generation creation: 0.000328428s
[t=0.0331898s, 28012 KB] Variables: 57
[t=0.0331982s, 28012 KB] FactPairs: 870
[t=0.0332062s, 28012 KB] Bytes per state: 24
[t=0.0333157s, 28012 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0333562s, 28012 KB] 56 initial landmarks, 25 goal landmarks
[t=0.0334314s, 28012 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 71
[t=0.0334414s, 28012 KB] New best heuristic value for ff(transform = adapt_costs(one)): 51
[t=0.0334499s, 28012 KB] g=0, 1 evaluated, 0 expanded
[t=0.0334637s, 28012 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 71
[t=0.0334724s, 28012 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 51
[t=0.0337248s, 28012 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 70
[t=0.0337348s, 28012 KB] New best heuristic value for ff(transform = adapt_costs(one)): 50
[t=0.0337427s, 28012 KB] g=2, 7 evaluated, 6 expanded
[t=0.0339393s, 28012 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 68
[t=0.0339486s, 28012 KB] New best heuristic value for ff(transform = adapt_costs(one)): 49
[t=0.0339566s, 28012 KB] g=4, 12 evaluated, 11 expanded
[t=0.0341764s, 28012 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 65
[t=0.0341889s, 28012 KB] New best heuristic value for ff(transform = adapt_costs(one)): 47
[t=0.0341984s, 28012 KB] g=6, 16 evaluated, 15 expanded
[t=0.0343982s, 28012 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 64
[t=0.0344074s, 28012 KB] g=8, 21 evaluated, 20 expanded
[t=0.0349903s, 28012 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 63
[t=0.0350028s, 28012 KB] g=10, 36 evaluated, 35 expanded
[t=0.0351213s, 28012 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 62
[t=0.0351309s, 28012 KB] New best heuristic value for ff(transform = adapt_costs(one)): 46
[t=0.0351387s, 28012 KB] g=10, 39 evaluated, 38 expanded
[t=0.0353272s, 28012 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 61
[t=0.0353362s, 28012 KB] g=12, 44 evaluated, 43 expanded
[t=0.0356093s, 28012 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.0356182s, 28012 KB] New best heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0356356s, 28012 KB] g=14, 51 evaluated, 50 expanded
[t=0.0358657s, 28012 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 58
[t=0.0358755s, 28012 KB] New best heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.0358837s, 28012 KB] g=16, 57 evaluated, 56 expanded
[t=0.0361481s, 28012 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0361576s, 28012 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0361653s, 28012 KB] g=18, 64 evaluated, 63 expanded
[t=0.0362171s, 28012 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0362264s, 28012 KB] g=19, 65 evaluated, 64 expanded
[t=0.0362741s, 28012 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.036283s, 28012 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0362908s, 28012 KB] g=20, 66 evaluated, 65 expanded
[t=0.0365492s, 28012 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0365595s, 28012 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0365673s, 28012 KB] g=22, 72 evaluated, 71 expanded
[t=0.037051s, 28012 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0370671s, 28012 KB] g=25, 85 evaluated, 84 expanded
[t=0.03801s, 28012 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.038023s, 28012 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0380322s, 28012 KB] g=28, 110 evaluated, 109 expanded
[t=0.0383387s, 28012 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0383488s, 28012 KB] g=30, 118 evaluated, 117 expanded
[t=0.0384745s, 28012 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0384845s, 28012 KB] g=30, 121 evaluated, 120 expanded
[t=0.0389676s, 28012 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0389901s, 28012 KB] g=32, 132 evaluated, 131 expanded
[t=0.0392426s, 28012 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0392634s, 28012 KB] g=34, 138 evaluated, 137 expanded
[t=0.0395827s, 28012 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0395921s, 28012 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0396001s, 28012 KB] g=36, 146 evaluated, 145 expanded
[t=0.0399437s, 28012 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0399531s, 28012 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0399615s, 28012 KB] g=38, 155 evaluated, 154 expanded
[t=0.0402658s, 28012 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0402756s, 28012 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0402863s, 28012 KB] g=40, 163 evaluated, 162 expanded
[t=0.0406163s, 28012 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0406256s, 28012 KB] g=42, 172 evaluated, 171 expanded
[t=0.0407447s, 28012 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0407531s, 28012 KB] g=42, 175 evaluated, 174 expanded
[t=0.0409447s, 28012 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.040954s, 28012 KB] g=43, 180 evaluated, 179 expanded
[t=0.0410395s, 28012 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0410481s, 28012 KB] g=44, 182 evaluated, 181 expanded
[t=0.0414834s, 28012 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.041494s, 28012 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0415042s, 28012 KB] g=46, 194 evaluated, 193 expanded
[t=0.0418593s, 28012 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0418681s, 28012 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0418763s, 28012 KB] g=48, 203 evaluated, 202 expanded
[t=0.0423749s, 28012 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0423848s, 28012 KB] g=51, 216 evaluated, 215 expanded
[t=0.0424688s, 28012 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0424778s, 28012 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0424858s, 28012 KB] g=52, 218 evaluated, 217 expanded
[t=0.0428558s, 28012 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0428682s, 28012 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0428766s, 28012 KB] g=54, 228 evaluated, 227 expanded
[t=0.0431853s, 28012 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0431949s, 28012 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0432029s, 28012 KB] g=56, 237 evaluated, 236 expanded
[t=0.0434467s, 28012 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0434553s, 28012 KB] g=56, 244 evaluated, 243 expanded
[t=0.0437015s, 28012 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0437102s, 28012 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0437178s, 28012 KB] g=58, 251 evaluated, 250 expanded
[t=0.0442627s, 28012 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0442876s, 28012 KB] g=61, 266 evaluated, 265 expanded
[t=0.0443375s, 28012 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0443477s, 28012 KB] g=62, 267 evaluated, 266 expanded
[t=0.0446137s, 28012 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0446249s, 28012 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0446331s, 28012 KB] g=64, 274 evaluated, 273 expanded
[t=0.044864s, 28012 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0448752s, 28012 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0448834s, 28012 KB] g=66, 280 evaluated, 279 expanded
[t=0.0459198s, 28012 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0459943s, 28012 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0460037s, 28012 KB] g=70, 308 evaluated, 307 expanded
[t=0.0462258s, 28012 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0462383s, 28012 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.046247s, 28012 KB] g=72, 314 evaluated, 313 expanded
[t=0.0473918s, 28012 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0474182s, 28012 KB] g=78, 347 evaluated, 346 expanded
[t=0.0476181s, 28012 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0476283s, 28012 KB] g=80, 352 evaluated, 351 expanded
[t=0.047912s, 28012 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0479214s, 28012 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0479293s, 28012 KB] g=82, 360 evaluated, 359 expanded
[t=0.0501541s, 28012 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.050174s, 28012 KB] g=94, 424 evaluated, 423 expanded
[t=0.0506625s, 28012 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0506733s, 28012 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.050682s, 28012 KB] g=100, 438 evaluated, 437 expanded
[t=0.0559857s, 28012 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0560014s, 28012 KB] g=94, 586 evaluated, 585 expanded
[t=0.0566133s, 28012 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0566227s, 28012 KB] g=98, 603 evaluated, 602 expanded
[t=0.0567711s, 28012 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0567802s, 28012 KB] g=100, 607 evaluated, 606 expanded
[t=0.0585176s, 28012 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0585316s, 28012 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0585401s, 28012 KB] g=112, 661 evaluated, 660 expanded
[t=0.0588413s, 28012 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0588532s, 28012 KB] g=116, 670 evaluated, 669 expanded
[t=0.0589554s, 28012 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0589641s, 28012 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0589719s, 28012 KB] g=118, 673 evaluated, 672 expanded
[t=0.0608244s, 28012 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0608385s, 28012 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0608472s, 28012 KB] g=140, 747 evaluated, 746 expanded
[t=0.0610458s, 28012 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0610553s, 28012 KB] g=144, 756 evaluated, 755 expanded
[t=0.0611901s, 28012 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0611988s, 28012 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.061207s, 28012 KB] g=146, 759 evaluated, 758 expanded
[t=0.0614224s, 28012 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0614316s, 28012 KB] g=154, 769 evaluated, 768 expanded
[t=0.0615094s, 28012 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0615189s, 28012 KB] g=158, 773 evaluated, 772 expanded
[t=0.0615385s, 28012 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0615471s, 28012 KB] g=159, 774 evaluated, 773 expanded
[t=0.0615636s, 28012 KB] Solution found!
[t=0.0615757s, 28012 KB] Actual search time: 0.028222s
unstack b19 b3 (1)
put-down b19 (1)
unstack b25 b12 (1)
stack b25 b23 (1)
unstack b12 b22 (1)
stack b12 b19 (1)
unstack b22 b8 (1)
put-down b22 (1)
unstack b7 b26 (1)
stack b7 b8 (1)
unstack b26 b17 (1)
put-down b26 (1)
unstack b17 b24 (1)
stack b17 b3 (1)
unstack b24 b20 (1)
put-down b24 (1)
unstack b20 b11 (1)
stack b20 b15 (1)
unstack b11 b16 (1)
stack b11 b25 (1)
pick-up b22 (1)
stack b22 b20 (1)
unstack b7 b8 (1)
put-down b7 (1)
unstack b8 b14 (1)
put-down b8 (1)
unstack b14 b6 (1)
stack b14 b24 (1)
pick-up b7 (1)
stack b7 b8 (1)
unstack b6 b28 (1)
put-down b6 (1)
unstack b28 b18 (1)
put-down b28 (1)
unstack b18 b5 (1)
stack b18 b14 (1)
unstack b5 b9 (1)
stack b5 b16 (1)
unstack b9 b13 (1)
stack b9 b12 (1)
unstack b13 b4 (1)
put-down b13 (1)
unstack b4 b10 (1)
stack b4 b26 (1)
unstack b10 b1 (1)
stack b10 b6 (1)
pick-up b28 (1)
stack b28 b10 (1)
unstack b1 b27 (1)
put-down b1 (1)
unstack b27 b2 (1)
stack b27 b22 (1)
pick-up b1 (1)
stack b1 b27 (1)
pick-up b2 (1)
stack b2 b7 (1)
pick-up b13 (1)
stack b13 b2 (1)
unstack b17 b3 (1)
put-down b17 (1)
unstack b3 b21 (1)
stack b3 b5 (1)
pick-up b17 (1)
stack b17 b3 (1)
pick-up b21 (1)
stack b21 b28 (1)
unstack b4 b26 (1)
put-down b4 (1)
pick-up b26 (1)
stack b26 b1 (1)
pick-up b4 (1)
stack b4 b26 (1)
unstack b11 b25 (1)
put-down b11 (1)
unstack b25 b23 (1)
put-down b25 (1)
pick-up b23 (1)
stack b23 b17 (1)
pick-up b25 (1)
stack b25 b23 (1)
pick-up b11 (1)
stack b11 b25 (1)
unstack b13 b2 (1)
put-down b13 (1)
unstack b2 b7 (1)
put-down b2 (1)
pick-up b13 (1)
stack b13 b2 (1)
unstack b7 b8 (1)
put-down b7 (1)
pick-up b8 (1)
stack b8 b18 (1)
pick-up b7 (1)
stack b7 b8 (1)
unstack b13 b2 (1)
put-down b13 (1)
pick-up b2 (1)
stack b2 b7 (1)
pick-up b13 (1)
stack b13 b2 (1)
unstack b21 b28 (1)
put-down b21 (1)
unstack b28 b10 (1)
put-down b28 (1)
pick-up b21 (1)
stack b21 b28 (1)
unstack b10 b6 (1)
put-down b10 (1)
pick-up b6 (1)
stack b6 b13 (1)
pick-up b10 (1)
stack b10 b6 (1)
unstack b21 b28 (1)
put-down b21 (1)
pick-up b28 (1)
stack b28 b10 (1)
pick-up b21 (1)
stack b21 b28 (1)
unstack b11 b25 (1)
put-down b11 (1)
unstack b25 b23 (1)
put-down b25 (1)
unstack b23 b17 (1)
put-down b23 (1)
pick-up b25 (1)
stack b25 b23 (1)
pick-up b11 (1)
stack b11 b25 (1)
unstack b17 b3 (1)
put-down b17 (1)
unstack b3 b5 (1)
put-down b3 (1)
pick-up b17 (1)
stack b17 b3 (1)
unstack b5 b16 (1)
put-down b5 (1)
pick-up b16 (1)
stack b16 b9 (1)
pick-up b5 (1)
stack b5 b16 (1)
unstack b17 b3 (1)
put-down b17 (1)
pick-up b3 (1)
stack b3 b5 (1)
pick-up b17 (1)
stack b17 b3 (1)
unstack b11 b25 (1)
put-down b11 (1)
unstack b25 b23 (1)
put-down b25 (1)
pick-up b11 (1)
stack b11 b25 (1)
pick-up b23 (1)
stack b23 b17 (1)
unstack b11 b25 (1)
put-down b11 (1)
pick-up b25 (1)
stack b25 b23 (1)
pick-up b11 (1)
stack b11 b25 (1)
[t=0.0615913s, 28012 KB] Plan length: 160 step(s).
[t=0.0615913s, 28012 KB] Plan cost: 160
[t=0.0615913s, 28012 KB] Expanded 774 state(s).
[t=0.0615913s, 28012 KB] Reopened 0 state(s).
[t=0.0615913s, 28012 KB] Evaluated 775 state(s).
[t=0.0615913s, 28012 KB] Evaluations: 1550
[t=0.0615913s, 28012 KB] Generated 6666 state(s).
[t=0.0615913s, 28012 KB] Dead ends: 0 state(s).
[t=0.0615913s, 28012 KB] Number of registered states: 775
[t=0.0615913s, 28012 KB] Int hash set load factor: 775/1024 = 0.756836
[t=0.0615913s, 28012 KB] Int hash set resizes: 10
[t=0.0615913s, 28012 KB] Search time: 0.0282764s
[t=0.0615913s, 28012 KB] Total time: 0.0615913s
Solution found.
Peak memory: 28012 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.26s
