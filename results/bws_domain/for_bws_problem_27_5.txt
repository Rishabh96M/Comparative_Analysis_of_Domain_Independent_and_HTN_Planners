INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_27/bws_problem_27_5.pddl --sas-file output.sas
Parsing...
Parsing: [0.010s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.017s wall-clock]
2378 relevant atoms
1593 auxiliary atoms
3971 final queue length
6945 total queue pushes
Completing instantiation... [0.030s CPU, 0.031s wall-clock]
Instantiating: [0.050s CPU, 0.050s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
28 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.008s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.001s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.010s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.002s wall-clock]
Translating task: [0.040s CPU, 0.043s wall-clock]
2160 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
54 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.018s wall-clock]
Reordering and filtering variables...
55 of 55 variables necessary.
28 of 55 mutex groups necessary.
1458 of 1458 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.010s wall-clock]
Translator variables: 55
Translator derived variables: 0
Translator facts: 812
Translator goal facts: 25
Translator mutex groups: 28
Translator total mutex groups size: 784
Translator operators: 1458
Translator axioms: 0
Translator task size: 12530
Translator peak memory: 39544 KB
Writing output... [0.010s CPU, 0.008s wall-clock]
Done! [0.150s CPU, 0.143s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=3.0881e-05s, 24488 KB] reading input...
[t=0.00470321s, 25936 KB] done reading input!
[t=0.00581076s, 26332 KB] Initializing landmark count heuristic...
[t=0.00584303s, 26332 KB] Generating landmark graph...
[t=0.00592316s, 26332 KB] Building a landmark graph with reasonable orders.
[t=0.00599993s, 26464 KB] Initializing Exploration...
[t=0.00641465s, 26732 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0279957s, 27656 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0281888s, 27656 KB] Landmarks generation time: 0.022285s
[t=0.0282217s, 27656 KB] Discovered 126 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0282525s, 27656 KB] 841 edges
[t=0.0282711s, 27656 KB] approx. reasonable orders
[t=0.031438s, 27656 KB] approx. obedient reasonable orders
[t=0.0315015s, 27656 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.031521s, 27656 KB] Landmarks generation time: 0.0256765s
[t=0.0315323s, 27656 KB] Discovered 126 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0315415s, 27656 KB] 883 edges
[t=0.0315507s, 27656 KB] Landmark graph generation time: 0.0257148s
[t=0.0315598s, 27656 KB] Landmark graph contains 126 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0315683s, 27656 KB] Landmark graph contains 883 orderings.
[t=0.0322168s, 27680 KB] Simplifying 5778 unary operators... done! [4374 unary operators]
[t=0.0336406s, 27680 KB] time to simplify: 0.0015292s
[t=0.0338339s, 27680 KB] Initializing additive heuristic...
[t=0.0338554s, 27680 KB] Initializing FF heuristic...
[t=0.033914s, 27680 KB] Building successor generator...done!
[t=0.0341802s, 27680 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0341897s, 27680 KB] time for successor generation creation: 0.000229532s
[t=0.0342038s, 27680 KB] Variables: 55
[t=0.034212s, 27680 KB] FactPairs: 812
[t=0.0342204s, 27680 KB] Bytes per state: 24
[t=0.0343123s, 27680 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0343462s, 27680 KB] 55 initial landmarks, 25 goal landmarks
[t=0.0344119s, 27680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 71
[t=0.0344214s, 27680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 51
[t=0.0344297s, 27680 KB] g=0, 1 evaluated, 0 expanded
[t=0.0344437s, 27680 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 71
[t=0.0344522s, 27680 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 51
[t=0.0346542s, 27680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 70
[t=0.0346636s, 27680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 50
[t=0.0346721s, 27680 KB] g=2, 6 evaluated, 5 expanded
[t=0.0348488s, 27680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 69
[t=0.0348576s, 27680 KB] g=4, 11 evaluated, 10 expanded
[t=0.0353576s, 27680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 68
[t=0.0353667s, 27680 KB] g=6, 26 evaluated, 25 expanded
[t=0.0356084s, 27680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 49
[t=0.0356181s, 27680 KB] g=6, 33 evaluated, 32 expanded
[t=0.03589s, 27680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 67
[t=0.0358993s, 27680 KB] g=7, 41 evaluated, 40 expanded
[t=0.0361813s, 27680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 65
[t=0.0362138s, 27680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 47
[t=0.0362277s, 27680 KB] g=8, 47 evaluated, 46 expanded
[t=0.0364796s, 27680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 64
[t=0.0364936s, 27680 KB] g=9, 52 evaluated, 51 expanded
[t=0.0370288s, 27680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 63
[t=0.0370563s, 27680 KB] g=11, 63 evaluated, 62 expanded
[t=0.0373739s, 27680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 62
[t=0.0373861s, 27680 KB] g=14, 71 evaluated, 70 expanded
[t=0.0377112s, 27680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 46
[t=0.037733s, 27680 KB] g=16, 80 evaluated, 79 expanded
[t=0.0378218s, 27680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 61
[t=0.0378322s, 27680 KB] g=16, 82 evaluated, 81 expanded
[t=0.0383761s, 27680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 58
[t=0.0383935s, 27680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0384018s, 27680 KB] g=18, 97 evaluated, 96 expanded
[t=0.0388022s, 27680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.0388142s, 27680 KB] g=20, 107 evaluated, 106 expanded
[t=0.0389024s, 27680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 57
[t=0.0389126s, 27680 KB] g=20, 109 evaluated, 108 expanded
[t=0.0395417s, 27680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0395559s, 27680 KB] g=22, 126 evaluated, 125 expanded
[t=0.0396056s, 27680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0396156s, 27680 KB] g=22, 127 evaluated, 126 expanded
[t=0.0401988s, 27680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0402128s, 27680 KB] g=24, 143 evaluated, 142 expanded
[t=0.0403001s, 27680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0403103s, 27680 KB] g=24, 145 evaluated, 144 expanded
[t=0.0408636s, 27680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0408859s, 27680 KB] g=26, 160 evaluated, 159 expanded
[t=0.0413105s, 27680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0413295s, 27680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0413389s, 27680 KB] g=28, 171 evaluated, 170 expanded
[t=0.04171s, 27680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0417206s, 27680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0417291s, 27680 KB] g=30, 181 evaluated, 180 expanded
[t=0.0421021s, 27680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0421123s, 27680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.042124s, 27680 KB] g=32, 191 evaluated, 190 expanded
[t=0.0424939s, 27680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0425045s, 27680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0425144s, 27680 KB] g=34, 201 evaluated, 200 expanded
[t=0.0428093s, 27680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0428195s, 27680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0428278s, 27680 KB] g=36, 209 evaluated, 208 expanded
[t=0.0431303s, 27680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0431466s, 27680 KB] g=38, 217 evaluated, 216 expanded
[t=0.0434402s, 27680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0434501s, 27680 KB] g=39, 225 evaluated, 224 expanded
[t=0.0441292s, 27680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0441439s, 27680 KB] g=42, 243 evaluated, 242 expanded
[t=0.0449203s, 27680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0449398s, 27680 KB] g=44, 263 evaluated, 262 expanded
[t=0.0454928s, 27680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0455213s, 27680 KB] g=46, 276 evaluated, 275 expanded
[t=0.0457497s, 27680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.045762s, 27680 KB] g=46, 281 evaluated, 280 expanded
[t=0.0462685s, 27680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0462828s, 27680 KB] g=48, 294 evaluated, 293 expanded
[t=0.046331s, 27680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0463406s, 27680 KB] g=48, 295 evaluated, 294 expanded
[t=0.0469135s, 27680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0469238s, 27680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0469333s, 27680 KB] g=50, 311 evaluated, 310 expanded
[t=0.0472218s, 27680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0472314s, 27680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0472398s, 27680 KB] g=52, 319 evaluated, 318 expanded
[t=0.0475387s, 27680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0475491s, 27680 KB] g=54, 328 evaluated, 327 expanded
[t=0.0475956s, 27680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.047605s, 27680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0476134s, 27680 KB] g=54, 329 evaluated, 328 expanded
[t=0.0478628s, 27680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0478805s, 27680 KB] g=56, 336 evaluated, 335 expanded
[t=0.0481519s, 27680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0481627s, 27680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0481717s, 27680 KB] g=58, 344 evaluated, 343 expanded
[t=0.0484404s, 27680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0484502s, 27680 KB] g=60, 352 evaluated, 351 expanded
[t=0.0485252s, 27680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0485351s, 27680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0485441s, 27680 KB] g=60, 354 evaluated, 353 expanded
[t=0.048804s, 27680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0488152s, 27680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0488247s, 27680 KB] g=62, 362 evaluated, 361 expanded
[t=0.0491211s, 27680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0491311s, 27680 KB] g=65, 372 evaluated, 371 expanded
[t=0.0491722s, 27680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.049181s, 27680 KB] g=66, 373 evaluated, 372 expanded
[t=0.0493708s, 27680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0493801s, 27680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0493883s, 27680 KB] g=68, 379 evaluated, 378 expanded
[t=0.0498905s, 27680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0499047s, 27680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0499143s, 27680 KB] g=72, 395 evaluated, 394 expanded
[t=0.05011s, 27680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0501252s, 27680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0501341s, 27680 KB] g=74, 401 evaluated, 400 expanded
[t=0.0519667s, 27680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0519857s, 27680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0519958s, 27680 KB] g=82, 464 evaluated, 463 expanded
[t=0.0521205s, 27680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0521303s, 27680 KB] g=82, 468 evaluated, 467 expanded
[t=0.0522773s, 27680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0522865s, 27680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0522947s, 27680 KB] g=84, 473 evaluated, 472 expanded
[t=0.0536357s, 27680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0536546s, 27680 KB] g=92, 520 evaluated, 519 expanded
[t=0.0537603s, 27680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0537712s, 27680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0537799s, 27680 KB] g=94, 523 evaluated, 522 expanded
[t=0.0546128s, 27680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.054627s, 27680 KB] g=102, 550 evaluated, 549 expanded
[t=0.0547239s, 27680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.054733s, 27680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.054741s, 27680 KB] g=104, 553 evaluated, 552 expanded
[t=0.057224s, 27680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0573143s, 27680 KB] g=127, 643 evaluated, 642 expanded
[t=0.0573474s, 27680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0573568s, 27680 KB] g=128, 644 evaluated, 643 expanded
[t=0.0574451s, 27680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0574658s, 27680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0574754s, 27680 KB] g=130, 648 evaluated, 647 expanded
[t=0.0576525s, 27680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0576618s, 27680 KB] g=134, 657 evaluated, 656 expanded
[t=0.0577242s, 27680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.057733s, 27680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0577411s, 27680 KB] g=136, 660 evaluated, 659 expanded
[t=0.0579208s, 27680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0579298s, 27680 KB] g=144, 671 evaluated, 670 expanded
[t=0.0579488s, 27680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0579573s, 27680 KB] g=145, 672 evaluated, 671 expanded
[t=0.0579734s, 27680 KB] Solution found!
[t=0.0579851s, 27680 KB] Actual search time: 0.0236357s
unstack b21 b19 (1)
put-down b21 (1)
unstack b22 b7 (1)
put-down b22 (1)
unstack b7 b3 (1)
put-down b7 (1)
unstack b26 b14 (1)
stack b26 b7 (1)
unstack b19 b9 (1)
put-down b19 (1)
unstack b3 b2 (1)
put-down b3 (1)
unstack b2 b16 (1)
put-down b2 (1)
unstack b16 b25 (1)
put-down b16 (1)
unstack b25 b18 (1)
stack b25 b26 (1)
unstack b18 b24 (1)
put-down b18 (1)
pick-up b24 (1)
stack b24 b19 (1)
unstack b9 b1 (1)
put-down b9 (1)
unstack b1 b27 (1)
stack b1 b25 (1)
unstack b27 b11 (1)
stack b27 b22 (1)
pick-up b10 (1)
stack b10 b1 (1)
unstack b11 b20 (1)
stack b11 b21 (1)
pick-up b3 (1)
stack b3 b27 (1)
pick-up b16 (1)
stack b16 b10 (1)
unstack b20 b17 (1)
put-down b20 (1)
unstack b17 b23 (1)
put-down b17 (1)
unstack b23 b5 (1)
stack b23 b14 (1)
unstack b5 b15 (1)
stack b5 b2 (1)
unstack b15 b13 (1)
stack b15 b20 (1)
unstack b13 b6 (1)
stack b13 b18 (1)
pick-up b17 (1)
stack b17 b5 (1)
unstack b6 b12 (1)
stack b6 b11 (1)
pick-up b9 (1)
stack b9 b15 (1)
unstack b12 b8 (1)
put-down b12 (1)
unstack b8 b4 (1)
stack b8 b13 (1)
pick-up b4 (1)
stack b4 b16 (1)
pick-up b12 (1)
stack b12 b4 (1)
unstack b23 b14 (1)
put-down b23 (1)
pick-up b14 (1)
stack b14 b8 (1)
pick-up b23 (1)
stack b23 b14 (1)
unstack b24 b19 (1)
put-down b24 (1)
pick-up b19 (1)
stack b19 b12 (1)
pick-up b24 (1)
stack b24 b19 (1)
unstack b17 b5 (1)
put-down b17 (1)
unstack b5 b2 (1)
put-down b5 (1)
pick-up b2 (1)
stack b2 b6 (1)
pick-up b5 (1)
stack b5 b2 (1)
pick-up b17 (1)
stack b17 b5 (1)
unstack b3 b27 (1)
put-down b3 (1)
unstack b27 b22 (1)
put-down b27 (1)
pick-up b22 (1)
stack b22 b23 (1)
pick-up b27 (1)
stack b27 b22 (1)
pick-up b3 (1)
stack b3 b27 (1)
unstack b9 b15 (1)
put-down b9 (1)
unstack b15 b20 (1)
put-down b15 (1)
pick-up b20 (1)
stack b20 b17 (1)
pick-up b15 (1)
stack b15 b20 (1)
pick-up b9 (1)
stack b9 b15 (1)
unstack b3 b27 (1)
put-down b3 (1)
unstack b27 b22 (1)
put-down b27 (1)
unstack b22 b23 (1)
put-down b22 (1)
pick-up b27 (1)
stack b27 b22 (1)
pick-up b3 (1)
stack b3 b27 (1)
unstack b23 b14 (1)
put-down b23 (1)
unstack b14 b8 (1)
put-down b14 (1)
pick-up b23 (1)
stack b23 b14 (1)
unstack b8 b13 (1)
put-down b8 (1)
unstack b13 b18 (1)
put-down b13 (1)
pick-up b18 (1)
stack b18 b9 (1)
pick-up b13 (1)
stack b13 b18 (1)
pick-up b8 (1)
stack b8 b13 (1)
unstack b23 b14 (1)
put-down b23 (1)
pick-up b14 (1)
stack b14 b8 (1)
pick-up b23 (1)
stack b23 b14 (1)
unstack b3 b27 (1)
put-down b3 (1)
unstack b27 b22 (1)
put-down b27 (1)
pick-up b22 (1)
stack b22 b23 (1)
pick-up b27 (1)
stack b27 b22 (1)
pick-up b3 (1)
stack b3 b27 (1)
[t=0.0580112s, 27680 KB] Plan length: 146 step(s).
[t=0.0580112s, 27680 KB] Plan cost: 146
[t=0.0580112s, 27680 KB] Expanded 672 state(s).
[t=0.0580112s, 27680 KB] Reopened 0 state(s).
[t=0.0580112s, 27680 KB] Evaluated 673 state(s).
[t=0.0580112s, 27680 KB] Evaluations: 1346
[t=0.0580112s, 27680 KB] Generated 5765 state(s).
[t=0.0580112s, 27680 KB] Dead ends: 0 state(s).
[t=0.0580112s, 27680 KB] Number of registered states: 673
[t=0.0580112s, 27680 KB] Int hash set load factor: 673/1024 = 0.657227
[t=0.0580112s, 27680 KB] Int hash set resizes: 10
[t=0.0580112s, 27680 KB] Search time: 0.0236992s
[t=0.0580112s, 27680 KB] Total time: 0.0580112s
Solution found.
Peak memory: 27680 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.24s
