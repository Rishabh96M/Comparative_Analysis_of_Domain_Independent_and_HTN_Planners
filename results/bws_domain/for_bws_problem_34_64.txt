INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_34/bws_problem_34_64.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.023s wall-clock]
3708 relevant atoms
2482 auxiliary atoms
6190 final queue length
10887 total queue pushes
Completing instantiation... [0.050s CPU, 0.046s wall-clock]
Instantiating: [0.070s CPU, 0.071s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.010s CPU, 0.002s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
35 uncovered facts
Choosing groups: [0.000s CPU, 0.002s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.010s CPU, 0.012s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.001s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.010s CPU, 0.001s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.002s wall-clock]
Translating task: [0.060s CPU, 0.060s wall-clock]
3434 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
68 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.028s wall-clock]
Reordering and filtering variables...
69 of 69 variables necessary.
35 of 69 mutex groups necessary.
2312 of 2312 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.020s CPU, 0.015s wall-clock]
Translator variables: 69
Translator derived variables: 0
Translator facts: 1260
Translator goal facts: 28
Translator mutex groups: 35
Translator total mutex groups size: 1225
Translator operators: 2312
Translator axioms: 0
Translator task size: 19820
Translator peak memory: 44440 KB
Writing output... [0.010s CPU, 0.012s wall-clock]
Done! [0.200s CPU, 0.206s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=1.9785e-05s, 24488 KB] reading input...
[t=0.00694644s, 27204 KB] done reading input!
[t=0.00832376s, 27600 KB] Initializing landmark count heuristic...
[t=0.00839051s, 27600 KB] Generating landmark graph...
[t=0.0085257s, 27732 KB] Building a landmark graph with reasonable orders.
[t=0.00870579s, 27864 KB] Initializing Exploration...
[t=0.00941729s, 28512 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0473819s, 29836 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0476007s, 29836 KB] Landmarks generation time: 0.0391002s
[t=0.0476409s, 29836 KB] Discovered 154 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0476657s, 29836 KB] 1159 edges
[t=0.0476769s, 29836 KB] approx. reasonable orders
[t=0.0588468s, 29836 KB] approx. obedient reasonable orders
[t=0.0596845s, 29836 KB] Removed 4 reasonable or obedient reasonable orders
[t=0.0597029s, 29836 KB] Landmarks generation time: 0.0513121s
[t=0.0597152s, 29836 KB] Discovered 154 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0597241s, 29836 KB] 1292 edges
[t=0.0597326s, 29836 KB] Landmark graph generation time: 0.0513487s
[t=0.0597407s, 29836 KB] Landmark graph contains 154 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0597485s, 29836 KB] Landmark graph contains 1292 orderings.
[t=0.0605553s, 29836 KB] Simplifying 9180 unary operators... done! [6936 unary operators]
[t=0.062951s, 29836 KB] time to simplify: 0.002415s
[t=0.0631191s, 29864 KB] Initializing additive heuristic...
[t=0.0631404s, 29864 KB] Initializing FF heuristic...
[t=0.0631925s, 29864 KB] Building successor generator...done!
[t=0.0635867s, 29864 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0635959s, 29864 KB] time for successor generation creation: 0.000366498s
[t=0.0636099s, 29864 KB] Variables: 69
[t=0.0636183s, 29864 KB] FactPairs: 1260
[t=0.0636261s, 29864 KB] Bytes per state: 32
[t=0.063711s, 29864 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0637438s, 29864 KB] 69 initial landmarks, 28 goal landmarks
[t=0.0638285s, 29864 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 85
[t=0.0638376s, 29864 KB] New best heuristic value for ff(transform = adapt_costs(one)): 62
[t=0.0638461s, 29864 KB] g=0, 1 evaluated, 0 expanded
[t=0.0638602s, 29864 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 85
[t=0.0638697s, 29864 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 62
[t=0.0642142s, 29864 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 84
[t=0.0642242s, 29864 KB] g=2, 7 evaluated, 6 expanded
[t=0.0647326s, 29864 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 83
[t=0.0647433s, 29864 KB] g=4, 16 evaluated, 15 expanded
[t=0.0652259s, 29864 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 82
[t=0.0652369s, 29864 KB] g=6, 25 evaluated, 24 expanded
[t=0.0660595s, 29864 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 81
[t=0.0660721s, 29864 KB] New best heuristic value for ff(transform = adapt_costs(one)): 61
[t=0.066081s, 29864 KB] g=8, 40 evaluated, 39 expanded
[t=0.0665476s, 29864 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 80
[t=0.0665617s, 29864 KB] g=10, 49 evaluated, 48 expanded
[t=0.0671924s, 29864 KB] New best heuristic value for ff(transform = adapt_costs(one)): 60
[t=0.0672112s, 29864 KB] g=12, 61 evaluated, 60 expanded
[t=0.0673378s, 29864 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 79
[t=0.0673525s, 29864 KB] g=12, 63 evaluated, 62 expanded
[t=0.0683291s, 29864 KB] New best heuristic value for ff(transform = adapt_costs(one)): 59
[t=0.0683444s, 29864 KB] g=14, 80 evaluated, 79 expanded
[t=0.068531s, 29864 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 78
[t=0.068541s, 29864 KB] g=14, 83 evaluated, 82 expanded
[t=0.0695357s, 29864 KB] New best heuristic value for ff(transform = adapt_costs(one)): 58
[t=0.0695488s, 29864 KB] g=16, 100 evaluated, 99 expanded
[t=0.0697319s, 29864 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 77
[t=0.0697508s, 29864 KB] g=16, 103 evaluated, 102 expanded
[t=0.070535s, 29864 KB] New best heuristic value for ff(transform = adapt_costs(one)): 57
[t=0.0705456s, 29864 KB] g=18, 117 evaluated, 116 expanded
[t=0.0711222s, 29864 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 76
[t=0.0711329s, 29864 KB] g=18, 127 evaluated, 126 expanded
[t=0.0715583s, 29864 KB] New best heuristic value for ff(transform = adapt_costs(one)): 56
[t=0.0715688s, 29864 KB] g=20, 134 evaluated, 133 expanded
[t=0.072591s, 29864 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 75
[t=0.0726026s, 29864 KB] g=20, 152 evaluated, 151 expanded
[t=0.0728493s, 29864 KB] New best heuristic value for ff(transform = adapt_costs(one)): 55
[t=0.07286s, 29864 KB] g=22, 156 evaluated, 155 expanded
[t=0.0740431s, 29864 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 74
[t=0.074061s, 29864 KB] g=22, 176 evaluated, 175 expanded
[t=0.0741315s, 29864 KB] New best heuristic value for ff(transform = adapt_costs(one)): 54
[t=0.0741412s, 29864 KB] g=24, 177 evaluated, 176 expanded
[t=0.0756123s, 29864 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 73
[t=0.0756232s, 29864 KB] g=24, 203 evaluated, 202 expanded
[t=0.0761961s, 29864 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 72
[t=0.0762062s, 29864 KB] g=25, 214 evaluated, 213 expanded
[t=0.0769243s, 29864 KB] New best heuristic value for ff(transform = adapt_costs(one)): 53
[t=0.0769346s, 29864 KB] g=28, 228 evaluated, 227 expanded
[t=0.0779648s, 29864 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 71
[t=0.0779762s, 29864 KB] g=28, 248 evaluated, 247 expanded
[t=0.079889s, 29864 KB] New best heuristic value for ff(transform = adapt_costs(one)): 52
[t=0.0799009s, 29864 KB] g=32, 284 evaluated, 283 expanded
[t=0.0799639s, 29864 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 70
[t=0.0799731s, 29864 KB] g=30, 285 evaluated, 284 expanded
[t=0.0819326s, 29864 KB] New best heuristic value for ff(transform = adapt_costs(one)): 51
[t=0.0819495s, 29864 KB] g=36, 322 evaluated, 321 expanded
[t=0.0820666s, 29864 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 69
[t=0.0820776s, 29864 KB] g=32, 324 evaluated, 323 expanded
[t=0.0830047s, 29864 KB] New best heuristic value for ff(transform = adapt_costs(one)): 50
[t=0.0830226s, 29864 KB] g=36, 342 evaluated, 341 expanded
[t=0.0840237s, 29864 KB] New best heuristic value for ff(transform = adapt_costs(one)): 48
[t=0.0840401s, 29864 KB] g=38, 361 evaluated, 360 expanded
[t=0.0841602s, 29864 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 68
[t=0.0841722s, 29864 KB] g=34, 363 evaluated, 362 expanded
[t=0.0861814s, 29864 KB] New best heuristic value for ff(transform = adapt_costs(one)): 47
[t=0.0862319s, 29864 KB] g=42, 399 evaluated, 398 expanded
[t=0.0865293s, 29864 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 67
[t=0.0865405s, 29864 KB] g=36, 404 evaluated, 403 expanded
[t=0.0902871s, 29864 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 65
[t=0.0903084s, 29864 KB] g=38, 476 evaluated, 475 expanded
[t=0.0917133s, 29864 KB] New best heuristic value for ff(transform = adapt_costs(one)): 46
[t=0.0917595s, 29864 KB] g=48, 502 evaluated, 501 expanded
[t=0.0925374s, 29864 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 63
[t=0.092552s, 29864 KB] g=40, 515 evaluated, 514 expanded
[t=0.0926793s, 29864 KB] New best heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0926964s, 29864 KB] g=50, 517 evaluated, 516 expanded
[t=0.0936203s, 29864 KB] New best heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.0936354s, 29864 KB] g=52, 534 evaluated, 533 expanded
[t=0.094552s, 29864 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0945643s, 29864 KB] g=54, 551 evaluated, 550 expanded
[t=0.0953622s, 29864 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.095374s, 29864 KB] g=56, 565 evaluated, 564 expanded
[t=0.0955994s, 29864 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 61
[t=0.0956092s, 29864 KB] g=42, 569 evaluated, 568 expanded
[t=0.0984258s, 29864 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0984531s, 29864 KB] g=60, 622 evaluated, 621 expanded
[t=0.099144s, 29864 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0991627s, 29864 KB] g=62, 635 evaluated, 634 expanded
[t=0.100111s, 29864 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.100123s, 29864 KB] g=64, 653 evaluated, 652 expanded
[t=0.101044s, 29864 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.101055s, 29864 KB] g=66, 670 evaluated, 669 expanded
[t=0.101925s, 29864 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.101937s, 29864 KB] g=68, 686 evaluated, 685 expanded
[t=0.109895s, 29864 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.109912s, 29864 KB] g=74, 839 evaluated, 838 expanded
[t=0.114211s, 29864 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.114242s, 29864 KB] g=78, 919 evaluated, 918 expanded
[t=0.114856s, 29864 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.114872s, 29864 KB] g=80, 930 evaluated, 929 expanded
[t=0.134452s, 29864 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.134587s, 29864 KB] g=94, 1301 evaluated, 1300 expanded
[t=0.186523s, 29864 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.186642s, 29864 KB] g=110, 2301 evaluated, 2300 expanded
[t=0.187019s, 29864 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.187035s, 29864 KB] g=112, 2308 evaluated, 2307 expanded
[t=0.187358s, 29864 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.18737s, 29864 KB] g=114, 2314 evaluated, 2313 expanded
[t=0.187737s, 29864 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.187748s, 29864 KB] g=116, 2321 evaluated, 2320 expanded
[t=0.188061s, 29864 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.188071s, 29864 KB] g=118, 2327 evaluated, 2326 expanded
[t=0.189398s, 29864 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.18941s, 29864 KB] g=124, 2353 evaluated, 2352 expanded
[t=0.197255s, 29864 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.197274s, 29864 KB] g=136, 2508 evaluated, 2507 expanded
[t=0.199032s, 29864 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.199046s, 29864 KB] g=140, 2542 evaluated, 2541 expanded
[t=0.199455s, 29864 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.199467s, 29864 KB] g=142, 2550 evaluated, 2549 expanded
[t=0.204712s, 29864 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.204733s, 29864 KB] g=154, 2653 evaluated, 2652 expanded
[t=0.205762s, 29864 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.205773s, 29864 KB] g=158, 2673 evaluated, 2672 expanded
[t=0.20606s, 29864 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.20607s, 29864 KB] g=160, 2678 evaluated, 2677 expanded
[t=0.306678s, 30528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.306747s, 30528 KB] g=208, 4760 evaluated, 4759 expanded
[t=0.307156s, 30528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.307169s, 30528 KB] g=210, 4768 evaluated, 4767 expanded
[t=0.309974s, 30528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.309991s, 30528 KB] g=218, 4828 evaluated, 4827 expanded
[t=0.310904s, 30528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.310915s, 30528 KB] g=222, 4848 evaluated, 4847 expanded
[t=0.31115s, 30528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.311161s, 30528 KB] g=224, 4853 evaluated, 4852 expanded
[t=0.314679s, 30660 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.314702s, 30660 KB] g=240, 4934 evaluated, 4933 expanded
[t=0.315584s, 30660 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.315599s, 30660 KB] g=248, 4955 evaluated, 4954 expanded
[t=0.315966s, 30660 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.315984s, 30660 KB] g=252, 4964 evaluated, 4963 expanded
[t=0.31601s, 30660 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.31602s, 30660 KB] g=253, 4965 evaluated, 4964 expanded
[t=0.316042s, 30660 KB] Solution found!
[t=0.316079s, 30660 KB] Actual search time: 0.252334s
unstack b17 b25 (1)
put-down b17 (1)
unstack b25 b11 (1)
put-down b25 (1)
unstack b11 b33 (1)
put-down b11 (1)
unstack b33 b14 (1)
put-down b33 (1)
unstack b14 b13 (1)
put-down b14 (1)
unstack b13 b27 (1)
stack b13 b31 (1)
pick-up b17 (1)
stack b17 b13 (1)
unstack b27 b5 (1)
stack b27 b17 (1)
unstack b5 b3 (1)
put-down b5 (1)
unstack b3 b23 (1)
put-down b3 (1)
unstack b28 b32 (1)
stack b28 b27 (1)
pick-up b25 (1)
stack b25 b32 (1)
unstack b23 b1 (1)
put-down b23 (1)
unstack b1 b2 (1)
stack b1 b23 (1)
unstack b2 b21 (1)
put-down b2 (1)
pick-up b14 (1)
stack b14 b21 (1)
unstack b29 b12 (1)
put-down b29 (1)
unstack b12 b7 (1)
stack b12 b3 (1)
pick-up b11 (1)
stack b11 b12 (1)
unstack b7 b10 (1)
put-down b7 (1)
pick-up b10 (1)
stack b10 b25 (1)
unstack b14 b21 (1)
put-down b14 (1)
unstack b21 b24 (1)
stack b21 b26 (1)
pick-up b14 (1)
stack b14 b21 (1)
unstack b24 b15 (1)
stack b24 b2 (1)
unstack b15 b19 (1)
put-down b15 (1)
unstack b19 b30 (1)
stack b19 b24 (1)
unstack b30 b4 (1)
put-down b30 (1)
unstack b4 b9 (1)
stack b4 b29 (1)
pick-up b7 (1)
stack b7 b30 (1)
unstack b9 b20 (1)
stack b9 b11 (1)
unstack b20 b34 (1)
put-down b20 (1)
unstack b34 b8 (1)
stack b34 b10 (1)
pick-up b8 (1)
stack b8 b5 (1)
unstack b4 b29 (1)
put-down b4 (1)
pick-up b29 (1)
stack b29 b34 (1)
pick-up b4 (1)
stack b4 b29 (1)
unstack b7 b30 (1)
put-down b7 (1)
pick-up b30 (1)
stack b30 b8 (1)
pick-up b7 (1)
stack b7 b30 (1)
unstack b19 b24 (1)
put-down b19 (1)
unstack b24 b2 (1)
put-down b24 (1)
pick-up b19 (1)
stack b19 b24 (1)
pick-up b2 (1)
stack b2 b4 (1)
unstack b19 b24 (1)
put-down b19 (1)
pick-up b24 (1)
stack b24 b2 (1)
pick-up b19 (1)
stack b19 b24 (1)
unstack b28 b27 (1)
put-down b28 (1)
unstack b27 b17 (1)
put-down b27 (1)
unstack b17 b13 (1)
put-down b17 (1)
pick-up b27 (1)
stack b27 b17 (1)
pick-up b28 (1)
stack b28 b27 (1)
unstack b13 b31 (1)
put-down b13 (1)
unstack b31 b6 (1)
stack b31 b9 (1)
pick-up b13 (1)
stack b13 b31 (1)
unstack b6 b16 (1)
stack b6 b19 (1)
unstack b16 b22 (1)
stack b16 b14 (1)
unstack b22 b18 (1)
put-down b22 (1)
pick-up b18 (1)
stack b18 b28 (1)
unstack b1 b23 (1)
put-down b1 (1)
pick-up b23 (1)
stack b23 b6 (1)
pick-up b1 (1)
stack b1 b23 (1)
unstack b16 b14 (1)
put-down b16 (1)
unstack b14 b21 (1)
put-down b14 (1)
pick-up b16 (1)
stack b16 b14 (1)
unstack b21 b26 (1)
put-down b21 (1)
pick-up b26 (1)
stack b26 b22 (1)
pick-up b21 (1)
stack b21 b26 (1)
unstack b16 b14 (1)
put-down b16 (1)
pick-up b14 (1)
stack b14 b21 (1)
pick-up b16 (1)
stack b16 b14 (1)
unstack b18 b28 (1)
put-down b18 (1)
unstack b28 b27 (1)
put-down b28 (1)
pick-up b18 (1)
stack b18 b28 (1)
unstack b27 b17 (1)
put-down b27 (1)
pick-up b17 (1)
stack b17 b13 (1)
pick-up b27 (1)
stack b27 b17 (1)
unstack b18 b28 (1)
put-down b18 (1)
pick-up b28 (1)
stack b28 b27 (1)
pick-up b18 (1)
stack b18 b28 (1)
unstack b1 b23 (1)
put-down b1 (1)
unstack b23 b6 (1)
put-down b23 (1)
pick-up b1 (1)
stack b1 b23 (1)
unstack b6 b19 (1)
put-down b6 (1)
unstack b19 b24 (1)
put-down b19 (1)
unstack b24 b2 (1)
put-down b24 (1)
pick-up b19 (1)
stack b19 b24 (1)
pick-up b6 (1)
stack b6 b19 (1)
unstack b1 b23 (1)
put-down b1 (1)
pick-up b23 (1)
stack b23 b6 (1)
pick-up b1 (1)
stack b1 b23 (1)
unstack b2 b4 (1)
put-down b2 (1)
unstack b4 b29 (1)
put-down b4 (1)
unstack b29 b34 (1)
put-down b29 (1)
pick-up b4 (1)
stack b4 b29 (1)
pick-up b2 (1)
stack b2 b4 (1)
unstack b34 b10 (1)
put-down b34 (1)
unstack b10 b25 (1)
put-down b10 (1)
pick-up b34 (1)
stack b34 b10 (1)
unstack b25 b32 (1)
put-down b25 (1)
pick-up b32 (1)
stack b32 b7 (1)
pick-up b25 (1)
stack b25 b32 (1)
unstack b34 b10 (1)
put-down b34 (1)
pick-up b10 (1)
stack b10 b25 (1)
pick-up b34 (1)
stack b34 b10 (1)
unstack b2 b4 (1)
put-down b2 (1)
unstack b4 b29 (1)
put-down b4 (1)
pick-up b2 (1)
stack b2 b4 (1)
pick-up b29 (1)
stack b29 b34 (1)
unstack b2 b4 (1)
put-down b2 (1)
pick-up b4 (1)
stack b4 b29 (1)
pick-up b2 (1)
stack b2 b4 (1)
unstack b1 b23 (1)
put-down b1 (1)
unstack b23 b6 (1)
put-down b23 (1)
unstack b6 b19 (1)
put-down b6 (1)
pick-up b23 (1)
stack b23 b6 (1)
pick-up b1 (1)
stack b1 b23 (1)
unstack b19 b24 (1)
put-down b19 (1)
pick-up b24 (1)
stack b24 b2 (1)
pick-up b19 (1)
stack b19 b24 (1)
unstack b1 b23 (1)
put-down b1 (1)
unstack b23 b6 (1)
put-down b23 (1)
pick-up b1 (1)
stack b1 b23 (1)
pick-up b6 (1)
stack b6 b19 (1)
unstack b1 b23 (1)
put-down b1 (1)
pick-up b23 (1)
stack b23 b6 (1)
pick-up b1 (1)
stack b1 b23 (1)
[t=0.31609s, 30660 KB] Plan length: 254 step(s).
[t=0.31609s, 30660 KB] Plan cost: 254
[t=0.31609s, 30660 KB] Expanded 4965 state(s).
[t=0.31609s, 30660 KB] Reopened 0 state(s).
[t=0.31609s, 30660 KB] Evaluated 4966 state(s).
[t=0.31609s, 30660 KB] Evaluations: 9932
[t=0.31609s, 30660 KB] Generated 77851 state(s).
[t=0.31609s, 30660 KB] Dead ends: 0 state(s).
[t=0.31609s, 30660 KB] Number of registered states: 4966
[t=0.31609s, 30660 KB] Int hash set load factor: 4966/8192 = 0.606201
[t=0.31609s, 30660 KB] Int hash set resizes: 13
[t=0.31609s, 30660 KB] Search time: 0.25238s
[t=0.31609s, 30660 KB] Total time: 0.31609s
Solution found.
Peak memory: 30660 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.58s
