INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_21/bws_problem_21_49.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.010s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.000s CPU, 0.009s wall-clock]
1472 relevant atoms
987 auxiliary atoms
2459 final queue length
4269 total queue pushes
Completing instantiation... [0.020s CPU, 0.015s wall-clock]
Instantiating: [0.030s CPU, 0.026s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
22 uncovered facts
Choosing groups: [0.010s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.006s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.022s wall-clock]
1302 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
42 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.011s wall-clock]
Reordering and filtering variables...
43 of 43 variables necessary.
22 of 43 mutex groups necessary.
882 of 882 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.005s wall-clock]
Translator variables: 43
Translator derived variables: 0
Translator facts: 506
Translator goal facts: 18
Translator mutex groups: 22
Translator total mutex groups size: 484
Translator operators: 882
Translator axioms: 0
Translator task size: 7603
Translator peak memory: 36460 KB
Writing output... [0.000s CPU, 0.005s wall-clock]
Done! [0.080s CPU, 0.079s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.692e-05s, 24488 KB] reading input...
[t=0.00254614s, 25268 KB] done reading input!
[t=0.00338631s, 25664 KB] Initializing landmark count heuristic...
[t=0.00341786s, 25664 KB] Generating landmark graph...
[t=0.00347419s, 25664 KB] Building a landmark graph with reasonable orders.
[t=0.00352815s, 25664 KB] Initializing Exploration...
[t=0.00378083s, 25852 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0128474s, 26380 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0129439s, 26380 KB] Landmarks generation time: 0.00947082s
[t=0.0129588s, 26380 KB] Discovered 94 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.012976s, 26380 KB] 400 edges
[t=0.0129866s, 26380 KB] approx. reasonable orders
[t=0.0145229s, 26380 KB] approx. obedient reasonable orders
[t=0.0145544s, 26380 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0145644s, 26380 KB] Landmarks generation time: 0.0111432s
[t=0.0145742s, 26380 KB] Discovered 94 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0145824s, 26380 KB] 433 edges
[t=0.0145912s, 26380 KB] Landmark graph generation time: 0.0111804s
[t=0.0145999s, 26380 KB] Landmark graph contains 94 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0146082s, 26380 KB] Landmark graph contains 433 orderings.
[t=0.0149373s, 26380 KB] Simplifying 3486 unary operators... done! [2646 unary operators]
[t=0.0157807s, 26380 KB] time to simplify: 0.000906013s
[t=0.0159005s, 26380 KB] Initializing additive heuristic...
[t=0.0159154s, 26380 KB] Initializing FF heuristic...
[t=0.0159799s, 26380 KB] Building successor generator...done!
[t=0.0161671s, 26380 KB] peak memory difference for successor generator creation: 0 KB
[t=0.016176s, 26380 KB] time for successor generation creation: 0.000152083s
[t=0.0161902s, 26380 KB] Variables: 43
[t=0.0161987s, 26380 KB] FactPairs: 506
[t=0.016207s, 26380 KB] Bytes per state: 16
[t=0.0163345s, 26380 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0163739s, 26380 KB] 43 initial landmarks, 18 goal landmarks
[t=0.0164349s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0164452s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0164539s, 26380 KB] g=0, 1 evaluated, 0 expanded
[t=0.016468s, 26380 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0164768s, 26380 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0165433s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0165528s, 26380 KB] g=1, 3 evaluated, 2 expanded
[t=0.0166824s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0166947s, 26380 KB] g=2, 8 evaluated, 7 expanded
[t=0.0167285s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0167374s, 26380 KB] g=3, 9 evaluated, 8 expanded
[t=0.0171357s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0171495s, 26380 KB] g=5, 25 evaluated, 24 expanded
[t=0.0171834s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0171924s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.017203s, 26380 KB] g=6, 26 evaluated, 25 expanded
[t=0.0172602s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0172706s, 26380 KB] g=7, 28 evaluated, 27 expanded
[t=0.0173045s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0173137s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0173217s, 26380 KB] g=8, 29 evaluated, 28 expanded
[t=0.0174717s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0174846s, 26380 KB] g=10, 34 evaluated, 33 expanded
[t=0.017688s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0177006s, 26380 KB] g=12, 41 evaluated, 40 expanded
[t=0.0177589s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0177746s, 26380 KB] g=12, 43 evaluated, 42 expanded
[t=0.0179914s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0180024s, 26380 KB] g=14, 52 evaluated, 51 expanded
[t=0.0182199s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0182297s, 26380 KB] g=16, 61 evaluated, 60 expanded
[t=0.0182895s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0182988s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0183077s, 26380 KB] g=16, 63 evaluated, 62 expanded
[t=0.0184651s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0184752s, 26380 KB] g=18, 69 evaluated, 68 expanded
[t=0.0186522s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0186627s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.018671s, 26380 KB] g=20, 76 evaluated, 75 expanded
[t=0.01885s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0188614s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.018871s, 26380 KB] g=22, 83 evaluated, 82 expanded
[t=0.0190491s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0190589s, 26380 KB] g=24, 90 evaluated, 89 expanded
[t=0.0190946s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0191051s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.019114s, 26380 KB] g=24, 91 evaluated, 90 expanded
[t=0.0192699s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0192799s, 26380 KB] g=26, 97 evaluated, 96 expanded
[t=0.0193134s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0193226s, 26380 KB] g=26, 98 evaluated, 97 expanded
[t=0.0197531s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0197662s, 26380 KB] g=29, 116 evaluated, 115 expanded
[t=0.0198013s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0198109s, 26380 KB] g=30, 117 evaluated, 116 expanded
[t=0.0201751s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0201867s, 26380 KB] g=32, 132 evaluated, 131 expanded
[t=0.0207294s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0207474s, 26380 KB] g=34, 155 evaluated, 154 expanded
[t=0.0209591s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.020975s, 26380 KB] g=36, 164 evaluated, 163 expanded
[t=0.0211848s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0211997s, 26380 KB] g=36, 173 evaluated, 172 expanded
[t=0.021232s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0212422s, 26380 KB] g=38, 174 evaluated, 173 expanded
[t=0.0215492s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0215616s, 26380 KB] g=40, 187 evaluated, 186 expanded
[t=0.0221649s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0221799s, 26380 KB] g=42, 214 evaluated, 213 expanded
[t=0.0227525s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0227632s, 26380 KB] g=40, 240 evaluated, 239 expanded
[t=0.0231055s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0231158s, 26380 KB] g=46, 255 evaluated, 254 expanded
[t=0.0232952s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0233046s, 26380 KB] g=48, 262 evaluated, 261 expanded
[t=0.0233354s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0233441s, 26380 KB] g=42, 263 evaluated, 262 expanded
[t=0.0279824s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0279974s, 26380 KB] g=68, 472 evaluated, 471 expanded
[t=0.0282633s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0282727s, 26380 KB] g=70, 485 evaluated, 484 expanded
[t=0.028592s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0286017s, 26380 KB] g=71, 500 evaluated, 499 expanded
[t=0.0286319s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.028641s, 26380 KB] g=72, 501 evaluated, 500 expanded
[t=0.028751s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.02876s, 26380 KB] g=73, 506 evaluated, 505 expanded
[t=0.0292816s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.029293s, 26380 KB] g=74, 531 evaluated, 530 expanded
[t=0.0294135s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0294251s, 26380 KB] g=78, 536 evaluated, 535 expanded
[t=0.0295188s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0295279s, 26380 KB] g=75, 540 evaluated, 539 expanded
[t=0.0297317s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0297408s, 26380 KB] g=80, 550 evaluated, 549 expanded
[t=0.0299622s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0299715s, 26380 KB] g=82, 561 evaluated, 560 expanded
[t=0.0299994s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0300086s, 26380 KB] g=76, 562 evaluated, 561 expanded
[t=0.0301483s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0301574s, 26380 KB] g=77, 569 evaluated, 568 expanded
[t=0.0302265s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0302354s, 26380 KB] g=84, 572 evaluated, 571 expanded
[t=0.0303971s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0304076s, 26380 KB] g=86, 580 evaluated, 579 expanded
[t=0.0304366s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0304454s, 26380 KB] g=78, 581 evaluated, 580 expanded
[t=0.0305485s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0305576s, 26380 KB] g=79, 586 evaluated, 585 expanded
[t=0.0307259s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0307352s, 26380 KB] g=80, 595 evaluated, 594 expanded
[t=0.0307871s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0307968s, 26380 KB] g=81, 597 evaluated, 596 expanded
[t=0.0308212s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0308316s, 26380 KB] g=82, 598 evaluated, 597 expanded
[t=0.0309662s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0309757s, 26380 KB] g=84, 606 evaluated, 605 expanded
[t=0.0311165s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0311288s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0311367s, 26380 KB] g=86, 614 evaluated, 613 expanded
[t=0.0312101s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0312197s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0312278s, 26380 KB] g=88, 618 evaluated, 617 expanded
[t=0.0313587s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0313687s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0313765s, 26380 KB] g=94, 625 evaluated, 624 expanded
[t=0.0316513s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0316609s, 26380 KB] g=93, 643 evaluated, 642 expanded
[t=0.0316872s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0316954s, 26380 KB] g=94, 644 evaluated, 643 expanded
[t=0.0317582s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0317671s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0317749s, 26380 KB] g=96, 648 evaluated, 647 expanded
[t=0.0318222s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0318325s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0318415s, 26380 KB] g=98, 651 evaluated, 650 expanded
[t=0.0318998s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0319085s, 26380 KB] g=102, 655 evaluated, 654 expanded
[t=0.031927s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0319361s, 26380 KB] g=103, 656 evaluated, 655 expanded
[t=0.031951s, 26380 KB] Solution found!
[t=0.0319686s, 26380 KB] Actual search time: 0.0155933s
unstack b16 b18 (1)
put-down b16 (1)
unstack b18 b13 (1)
put-down b18 (1)
unstack b20 b4 (1)
stack b20 b13 (1)
unstack b4 b3 (1)
stack b4 b18 (1)
unstack b5 b12 (1)
put-down b5 (1)
unstack b12 b9 (1)
stack b12 b5 (1)
unstack b9 b15 (1)
put-down b9 (1)
pick-up b3 (1)
stack b3 b9 (1)
unstack b15 b10 (1)
put-down b15 (1)
unstack b10 b6 (1)
stack b10 b16 (1)
unstack b6 b2 (1)
put-down b6 (1)
unstack b8 b1 (1)
stack b8 b2 (1)
unstack b12 b5 (1)
put-down b12 (1)
unstack b20 b13 (1)
put-down b20 (1)
unstack b13 b19 (1)
stack b13 b8 (1)
unstack b19 b14 (1)
put-down b19 (1)
pick-up b14 (1)
stack b14 b3 (1)
pick-up b20 (1)
stack b20 b13 (1)
pick-up b12 (1)
stack b12 b5 (1)
pick-up b15 (1)
stack b15 b19 (1)
pick-up b1 (1)
stack b1 b15 (1)
unstack b4 b18 (1)
put-down b4 (1)
pick-up b18 (1)
stack b18 b10 (1)
pick-up b4 (1)
stack b4 b18 (1)
unstack b20 b13 (1)
put-down b20 (1)
unstack b13 b8 (1)
put-down b13 (1)
pick-up b20 (1)
stack b20 b13 (1)
unstack b1 b15 (1)
put-down b1 (1)
unstack b12 b5 (1)
put-down b12 (1)
unstack b15 b19 (1)
put-down b15 (1)
unstack b8 b2 (1)
put-down b8 (1)
unstack b2 b17 (1)
put-down b2 (1)
unstack b17 b21 (1)
put-down b17 (1)
unstack b21 b11 (1)
stack b21 b14 (1)
unstack b11 b7 (1)
put-down b11 (1)
pick-up b7 (1)
stack b7 b6 (1)
pick-up b19 (1)
stack b19 b21 (1)
pick-up b15 (1)
stack b15 b19 (1)
pick-up b1 (1)
stack b1 b15 (1)
pick-up b11 (1)
stack b11 b1 (1)
pick-up b17 (1)
stack b17 b12 (1)
pick-up b2 (1)
stack b2 b17 (1)
pick-up b5 (1)
stack b5 b11 (1)
unstack b2 b17 (1)
put-down b2 (1)
unstack b17 b12 (1)
put-down b17 (1)
pick-up b12 (1)
stack b12 b5 (1)
pick-up b17 (1)
stack b17 b12 (1)
pick-up b2 (1)
stack b2 b17 (1)
pick-up b8 (1)
stack b8 b2 (1)
unstack b20 b13 (1)
put-down b20 (1)
pick-up b13 (1)
stack b13 b8 (1)
pick-up b20 (1)
stack b20 b13 (1)
[t=0.031982s, 26380 KB] Plan length: 104 step(s).
[t=0.031982s, 26380 KB] Plan cost: 104
[t=0.031982s, 26380 KB] Expanded 656 state(s).
[t=0.031982s, 26380 KB] Reopened 0 state(s).
[t=0.031982s, 26380 KB] Evaluated 657 state(s).
[t=0.031982s, 26380 KB] Evaluations: 1314
[t=0.031982s, 26380 KB] Generated 6167 state(s).
[t=0.031982s, 26380 KB] Dead ends: 0 state(s).
[t=0.031982s, 26380 KB] Number of registered states: 657
[t=0.031982s, 26380 KB] Int hash set load factor: 657/1024 = 0.641602
[t=0.031982s, 26380 KB] Int hash set resizes: 10
[t=0.031982s, 26380 KB] Search time: 0.015648s
[t=0.031982s, 26380 KB] Total time: 0.031982s
Solution found.
Peak memory: 26380 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.16s
