INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_21/bws_problem_21_57.pddl --sas-file output.sas
Parsing...
Parsing: [0.010s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.010s wall-clock]
1472 relevant atoms
987 auxiliary atoms
2459 final queue length
4271 total queue pushes
Completing instantiation... [0.010s CPU, 0.015s wall-clock]
Instantiating: [0.020s CPU, 0.027s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.010s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
22 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.006s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.022s wall-clock]
1302 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
42 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.011s wall-clock]
Reordering and filtering variables...
43 of 43 variables necessary.
22 of 43 mutex groups necessary.
882 of 882 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 43
Translator derived variables: 0
Translator facts: 506
Translator goal facts: 14
Translator mutex groups: 22
Translator total mutex groups size: 484
Translator operators: 882
Translator axioms: 0
Translator task size: 7599
Translator peak memory: 36456 KB
Writing output... [0.000s CPU, 0.005s wall-clock]
Done! [0.080s CPU, 0.081s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=4.4275e-05s, 24488 KB] reading input...
[t=0.00251753s, 25268 KB] done reading input!
[t=0.00357114s, 25664 KB] Initializing landmark count heuristic...
[t=0.00364096s, 25664 KB] Generating landmark graph...
[t=0.00371914s, 25664 KB] Building a landmark graph with reasonable orders.
[t=0.00378797s, 25664 KB] Initializing Exploration...
[t=0.00408728s, 25852 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.011104s, 26248 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0111748s, 26248 KB] Landmarks generation time: 0.0074549s
[t=0.0111885s, 26248 KB] Discovered 78 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0112052s, 26248 KB] 215 edges
[t=0.011216s, 26248 KB] approx. reasonable orders
[t=0.0118847s, 26248 KB] approx. obedient reasonable orders
[t=0.0119059s, 26248 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0119149s, 26248 KB] Landmarks generation time: 0.00826985s
[t=0.011924s, 26248 KB] Discovered 78 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.011932s, 26248 KB] 228 edges
[t=0.0119399s, 26248 KB] Landmark graph generation time: 0.00830578s
[t=0.0119483s, 26248 KB] Landmark graph contains 78 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0119562s, 26248 KB] Landmark graph contains 228 orderings.
[t=0.0122464s, 26248 KB] Simplifying 3486 unary operators... done! [2646 unary operators]
[t=0.0130691s, 26380 KB] time to simplify: 0.000886702s
[t=0.0131894s, 26380 KB] Initializing additive heuristic...
[t=0.0132052s, 26380 KB] Initializing FF heuristic...
[t=0.0132684s, 26380 KB] Building successor generator...done!
[t=0.0134737s, 26380 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0134933s, 26380 KB] time for successor generation creation: 0.000161344s
[t=0.0135086s, 26380 KB] Variables: 43
[t=0.0135325s, 26380 KB] FactPairs: 506
[t=0.0135408s, 26380 KB] Bytes per state: 16
[t=0.0136599s, 26380 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0136946s, 26380 KB] 39 initial landmarks, 14 goal landmarks
[t=0.0137439s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0137536s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0137617s, 26380 KB] g=0, 1 evaluated, 0 expanded
[t=0.013776s, 26380 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0137848s, 26380 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0139062s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0139346s, 26380 KB] g=1, 5 evaluated, 4 expanded
[t=0.0139707s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.01398s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0139887s, 26380 KB] g=2, 6 evaluated, 5 expanded
[t=0.0140972s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0141093s, 26380 KB] g=3, 10 evaluated, 9 expanded
[t=0.0142148s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0142255s, 26380 KB] g=4, 14 evaluated, 13 expanded
[t=0.0144201s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0144314s, 26380 KB] g=5, 22 evaluated, 21 expanded
[t=0.0147425s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0147539s, 26380 KB] g=7, 35 evaluated, 34 expanded
[t=0.0148154s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0148253s, 26380 KB] g=6, 37 evaluated, 36 expanded
[t=0.0150372s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0150472s, 26380 KB] g=9, 46 evaluated, 45 expanded
[t=0.0151773s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.015188s, 26380 KB] g=8, 51 evaluated, 50 expanded
[t=0.0153348s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0153442s, 26380 KB] g=9, 57 evaluated, 56 expanded
[t=0.0153768s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0153968s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0154056s, 26380 KB] g=10, 58 evaluated, 57 expanded
[t=0.0155313s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.015542s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.015551s, 26380 KB] g=12, 63 evaluated, 62 expanded
[t=0.0157148s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0157273s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0157354s, 26380 KB] g=14, 69 evaluated, 68 expanded
[t=0.0158751s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.015885s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0158934s, 26380 KB] g=16, 75 evaluated, 74 expanded
[t=0.0161509s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0161612s, 26380 KB] g=20, 86 evaluated, 85 expanded
[t=0.0163002s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.016311s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0163214s, 26380 KB] g=22, 92 evaluated, 91 expanded
[t=0.0164386s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0164479s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.016456s, 26380 KB] g=24, 97 evaluated, 96 expanded
[t=0.0169058s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0169235s, 26380 KB] g=30, 116 evaluated, 115 expanded
[t=0.0175734s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0175992s, 26380 KB] g=36, 144 evaluated, 143 expanded
[t=0.0176333s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0176431s, 26380 KB] g=37, 145 evaluated, 144 expanded
[t=0.0179269s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0179405s, 26380 KB] g=39, 157 evaluated, 156 expanded
[t=0.0182092s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0182197s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.018228s, 26380 KB] g=42, 168 evaluated, 167 expanded
[t=0.0183764s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0183906s, 26380 KB] g=45, 174 evaluated, 173 expanded
[t=0.0184502s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0184601s, 26380 KB] g=46, 176 evaluated, 175 expanded
[t=0.0185874s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0185993s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0186075s, 26380 KB] g=48, 181 evaluated, 180 expanded
[t=0.0187088s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0187207s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0187431s, 26380 KB] g=50, 185 evaluated, 184 expanded
[t=0.01887s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.018884s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0188924s, 26380 KB] g=52, 190 evaluated, 189 expanded
[t=0.0190107s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0190227s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0190315s, 26380 KB] g=54, 195 evaluated, 194 expanded
[t=0.0191292s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0191394s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0191476s, 26380 KB] g=56, 199 evaluated, 198 expanded
[t=0.0193631s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0193736s, 26380 KB] g=60, 208 evaluated, 207 expanded
[t=0.0194282s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0194388s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0194471s, 26380 KB] g=62, 210 evaluated, 209 expanded
[t=0.023753s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0237708s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0237809s, 26380 KB] g=96, 411 evaluated, 410 expanded
[t=0.0239685s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0239777s, 26380 KB] g=100, 420 evaluated, 419 expanded
[t=0.0240488s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0240608s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0240709s, 26380 KB] g=102, 423 evaluated, 422 expanded
[t=0.0248117s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0248318s, 26380 KB] g=118, 461 evaluated, 460 expanded
[t=0.0249943s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0250038s, 26380 KB] g=126, 472 evaluated, 471 expanded
[t=0.025021s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0250296s, 26380 KB] g=127, 473 evaluated, 472 expanded
[t=0.0250441s, 26380 KB] Solution found!
[t=0.0250549s, 26380 KB] Actual search time: 0.011357s
unstack b11 b3 (1)
stack b11 b9 (1)
unstack b21 b8 (1)
put-down b21 (1)
pick-up b5 (1)
stack b5 b1 (1)
unstack b8 b10 (1)
stack b8 b13 (1)
unstack b3 b6 (1)
stack b3 b10 (1)
unstack b6 b20 (1)
put-down b6 (1)
unstack b20 b18 (1)
put-down b20 (1)
pick-up b18 (1)
stack b18 b5 (1)
unstack b11 b9 (1)
put-down b11 (1)
unstack b9 b19 (1)
put-down b9 (1)
pick-up b11 (1)
stack b11 b9 (1)
unstack b19 b12 (1)
stack b19 b8 (1)
unstack b3 b10 (1)
put-down b3 (1)
unstack b10 b2 (1)
put-down b10 (1)
pick-up b3 (1)
stack b3 b10 (1)
unstack b19 b8 (1)
put-down b19 (1)
unstack b8 b13 (1)
put-down b8 (1)
unstack b13 b14 (1)
stack b13 b18 (1)
unstack b14 b15 (1)
put-down b14 (1)
pick-up b8 (1)
stack b8 b13 (1)
pick-up b19 (1)
stack b19 b8 (1)
unstack b15 b16 (1)
put-down b15 (1)
unstack b16 b7 (1)
stack b16 b19 (1)
pick-up b15 (1)
stack b15 b16 (1)
unstack b7 b17 (1)
stack b7 b21 (1)
unstack b17 b4 (1)
put-down b17 (1)
pick-up b14 (1)
stack b14 b17 (1)
pick-up b4 (1)
stack b4 b6 (1)
unstack b15 b16 (1)
put-down b15 (1)
unstack b3 b10 (1)
put-down b3 (1)
pick-up b10 (1)
stack b10 b15 (1)
pick-up b3 (1)
stack b3 b10 (1)
unstack b16 b19 (1)
put-down b16 (1)
unstack b19 b8 (1)
put-down b19 (1)
pick-up b16 (1)
stack b16 b19 (1)
unstack b3 b10 (1)
put-down b3 (1)
unstack b10 b15 (1)
put-down b10 (1)
pick-up b15 (1)
stack b15 b16 (1)
pick-up b10 (1)
stack b10 b15 (1)
pick-up b3 (1)
stack b3 b10 (1)
unstack b8 b13 (1)
put-down b8 (1)
unstack b13 b18 (1)
put-down b13 (1)
pick-up b8 (1)
stack b8 b13 (1)
unstack b18 b5 (1)
put-down b18 (1)
unstack b5 b1 (1)
put-down b5 (1)
pick-up b1 (1)
stack b1 b7 (1)
pick-up b5 (1)
stack b5 b1 (1)
pick-up b18 (1)
stack b18 b5 (1)
unstack b8 b13 (1)
put-down b8 (1)
pick-up b13 (1)
stack b13 b18 (1)
pick-up b8 (1)
stack b8 b13 (1)
unstack b3 b10 (1)
put-down b3 (1)
unstack b10 b15 (1)
put-down b10 (1)
unstack b15 b16 (1)
put-down b15 (1)
pick-up b10 (1)
stack b10 b15 (1)
pick-up b3 (1)
stack b3 b10 (1)
unstack b16 b19 (1)
put-down b16 (1)
pick-up b19 (1)
stack b19 b8 (1)
pick-up b16 (1)
stack b16 b19 (1)
unstack b3 b10 (1)
put-down b3 (1)
unstack b10 b15 (1)
put-down b10 (1)
pick-up b15 (1)
stack b15 b16 (1)
pick-up b10 (1)
stack b10 b15 (1)
pick-up b3 (1)
stack b3 b10 (1)
[t=0.025064s, 26380 KB] Plan length: 128 step(s).
[t=0.025064s, 26380 KB] Plan cost: 128
[t=0.025064s, 26380 KB] Expanded 473 state(s).
[t=0.025064s, 26380 KB] Reopened 0 state(s).
[t=0.025064s, 26380 KB] Evaluated 474 state(s).
[t=0.025064s, 26380 KB] Evaluations: 948
[t=0.025064s, 26380 KB] Generated 4939 state(s).
[t=0.025064s, 26380 KB] Dead ends: 0 state(s).
[t=0.025064s, 26380 KB] Number of registered states: 474
[t=0.025064s, 26380 KB] Int hash set load factor: 474/512 = 0.925781
[t=0.025064s, 26380 KB] Int hash set resizes: 9
[t=0.025064s, 26380 KB] Search time: 0.0114046s
[t=0.025064s, 26380 KB] Total time: 0.025064s
Solution found.
Peak memory: 26380 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.15s
