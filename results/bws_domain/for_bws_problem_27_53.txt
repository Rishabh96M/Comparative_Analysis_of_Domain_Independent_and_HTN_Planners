INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_27/bws_problem_27_53.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.014s wall-clock]
2378 relevant atoms
1593 auxiliary atoms
3971 final queue length
6947 total queue pushes
Completing instantiation... [0.030s CPU, 0.025s wall-clock]
Instantiating: [0.040s CPU, 0.041s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
28 uncovered facts
Choosing groups: [0.010s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.010s CPU, 0.008s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.001s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.002s wall-clock]
Translating task: [0.040s CPU, 0.043s wall-clock]
2160 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
54 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.018s wall-clock]
Reordering and filtering variables...
55 of 55 variables necessary.
28 of 55 mutex groups necessary.
1458 of 1458 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.010s wall-clock]
Translator variables: 55
Translator derived variables: 0
Translator facts: 812
Translator goal facts: 22
Translator mutex groups: 28
Translator total mutex groups size: 784
Translator operators: 1458
Translator axioms: 0
Translator task size: 12527
Translator peak memory: 39544 KB
Writing output... [0.010s CPU, 0.008s wall-clock]
Done! [0.130s CPU, 0.133s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=1.9589e-05s, 24488 KB] reading input...
[t=0.00420145s, 25936 KB] done reading input!
[t=0.00536374s, 26332 KB] Initializing landmark count heuristic...
[t=0.00540862s, 26332 KB] Generating landmark graph...
[t=0.0054983s, 26332 KB] Building a landmark graph with reasonable orders.
[t=0.00557987s, 26464 KB] Initializing Exploration...
[t=0.00602673s, 26732 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0236956s, 27392 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0237965s, 27392 KB] Landmarks generation time: 0.0183086s
[t=0.0238214s, 27392 KB] Discovered 116 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0238384s, 27392 KB] 443 edges
[t=0.0238491s, 27392 KB] approx. reasonable orders
[t=0.024171s, 27392 KB] approx. obedient reasonable orders
[t=0.0242059s, 27392 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0242153s, 27392 KB] Landmarks generation time: 0.0188045s
[t=0.0242254s, 27392 KB] Discovered 116 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0242336s, 27392 KB] 447 edges
[t=0.0242422s, 27392 KB] Landmark graph generation time: 0.0188407s
[t=0.0242509s, 27392 KB] Landmark graph contains 116 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0242589s, 27392 KB] Landmark graph contains 447 orderings.
[t=0.0247878s, 27416 KB] Simplifying 5778 unary operators... done! [4374 unary operators]
[t=0.0262102s, 27548 KB] time to simplify: 0.00154474s
[t=0.0264219s, 27548 KB] Initializing additive heuristic...
[t=0.0264414s, 27548 KB] Initializing FF heuristic...
[t=0.0265127s, 27548 KB] Building successor generator...done!
[t=0.0268062s, 27548 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0268152s, 27548 KB] time for successor generation creation: 0.00025664s
[t=0.0268334s, 27548 KB] Variables: 55
[t=0.0268415s, 27548 KB] FactPairs: 812
[t=0.0268494s, 27548 KB] Bytes per state: 24
[t=0.0269742s, 27548 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0270143s, 27548 KB] 55 initial landmarks, 22 goal landmarks
[t=0.0271023s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 61
[t=0.0271118s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 47
[t=0.0271201s, 27548 KB] g=0, 1 evaluated, 0 expanded
[t=0.0271352s, 27548 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 61
[t=0.027144s, 27548 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 47
[t=0.0274254s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 60
[t=0.0274388s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 46
[t=0.0274472s, 27548 KB] g=2, 8 evaluated, 7 expanded
[t=0.0276978s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.0277082s, 27548 KB] g=4, 15 evaluated, 14 expanded
[t=0.0282305s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 58
[t=0.028243s, 27548 KB] g=6, 30 evaluated, 29 expanded
[t=0.0286262s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 57
[t=0.0286443s, 27548 KB] g=8, 41 evaluated, 40 expanded
[t=0.0288582s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0288706s, 27548 KB] g=6, 47 evaluated, 46 expanded
[t=0.0293342s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0293816s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.0293931s, 27548 KB] g=8, 59 evaluated, 58 expanded
[t=0.0297536s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0297736s, 27548 KB] g=10, 66 evaluated, 65 expanded
[t=0.0300593s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0300718s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0300799s, 27548 KB] g=12, 74 evaluated, 73 expanded
[t=0.0304086s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0304494s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0304582s, 27548 KB] g=14, 83 evaluated, 82 expanded
[t=0.0309676s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0309832s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0309918s, 27548 KB] g=16, 97 evaluated, 96 expanded
[t=0.0313498s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0313656s, 27548 KB] g=19, 107 evaluated, 106 expanded
[t=0.0317633s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0317781s, 27548 KB] g=21, 118 evaluated, 117 expanded
[t=0.0319117s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0319427s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0319576s, 27548 KB] g=22, 120 evaluated, 119 expanded
[t=0.0323817s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0324064s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.032415s, 27548 KB] g=24, 129 evaluated, 128 expanded
[t=0.0329902s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0330043s, 27548 KB] g=27, 145 evaluated, 144 expanded
[t=0.0330554s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0330644s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0330723s, 27548 KB] g=28, 146 evaluated, 145 expanded
[t=0.033398s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0334092s, 27548 KB] g=30, 155 evaluated, 154 expanded
[t=0.0335559s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0335655s, 27548 KB] g=30, 159 evaluated, 158 expanded
[t=0.0341427s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0341685s, 27548 KB] g=32, 172 evaluated, 171 expanded
[t=0.0344659s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0344781s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0344867s, 27548 KB] g=34, 180 evaluated, 179 expanded
[t=0.0347676s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0347783s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0347866s, 27548 KB] g=36, 188 evaluated, 187 expanded
[t=0.0358749s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0358848s, 27548 KB] g=41, 220 evaluated, 219 expanded
[t=0.0359333s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0359424s, 27548 KB] g=42, 221 evaluated, 220 expanded
[t=0.0361959s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0362052s, 27548 KB] g=43, 228 evaluated, 227 expanded
[t=0.0362556s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.036266s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0362795s, 27548 KB] g=44, 229 evaluated, 228 expanded
[t=0.0366093s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0366193s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0366275s, 27548 KB] g=46, 238 evaluated, 237 expanded
[t=0.0369103s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0369201s, 27548 KB] g=46, 246 evaluated, 245 expanded
[t=0.0370042s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0370133s, 27548 KB] g=48, 248 evaluated, 247 expanded
[t=0.0375315s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0375436s, 27548 KB] g=48, 262 evaluated, 261 expanded
[t=0.0379063s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0379167s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0379253s, 27548 KB] g=50, 272 evaluated, 271 expanded
[t=0.0382815s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0382907s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0382991s, 27548 KB] g=52, 282 evaluated, 281 expanded
[t=0.0385819s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.038592s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0386011s, 27548 KB] g=54, 290 evaluated, 289 expanded
[t=0.0388549s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.038864s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0388723s, 27548 KB] g=56, 297 evaluated, 296 expanded
[t=0.0399936s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0400058s, 27548 KB] g=61, 329 evaluated, 328 expanded
[t=0.0400869s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0400964s, 27548 KB] g=62, 331 evaluated, 330 expanded
[t=0.0406119s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0406222s, 27548 KB] g=64, 346 evaluated, 345 expanded
[t=0.0409299s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0409391s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.040948s, 27548 KB] g=66, 355 evaluated, 354 expanded
[t=0.0411943s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0412035s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0412116s, 27548 KB] g=68, 362 evaluated, 361 expanded
[t=0.0414558s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0414649s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0414731s, 27548 KB] g=70, 369 evaluated, 368 expanded
[t=0.0416919s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0417033s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0417118s, 27548 KB] g=72, 375 evaluated, 374 expanded
[t=0.0426824s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.042701s, 27548 KB] g=76, 403 evaluated, 402 expanded
[t=0.0428821s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0428929s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0429016s, 27548 KB] g=78, 408 evaluated, 407 expanded
[t=0.0435478s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.043567s, 27548 KB] g=82, 427 evaluated, 426 expanded
[t=0.0437157s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0437265s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0437349s, 27548 KB] g=84, 431 evaluated, 430 expanded
[t=0.0450461s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0450716s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0450803s, 27548 KB] g=92, 469 evaluated, 468 expanded
[t=0.0452233s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0452353s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0452443s, 27548 KB] g=94, 473 evaluated, 472 expanded
[t=0.0496572s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0496998s, 27548 KB] g=112, 603 evaluated, 602 expanded
[t=0.0498199s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0498294s, 27548 KB] g=112, 606 evaluated, 605 expanded
[t=0.0499744s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0499845s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0499929s, 27548 KB] g=114, 610 evaluated, 609 expanded
[t=0.0509156s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0509265s, 27548 KB] g=122, 637 evaluated, 636 expanded
[t=0.051225s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0512341s, 27548 KB] g=126, 646 evaluated, 645 expanded
[t=0.0513395s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0513483s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0513563s, 27548 KB] g=128, 649 evaluated, 648 expanded
[t=0.0545261s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0545454s, 27548 KB] g=158, 757 evaluated, 756 expanded
[t=0.0547807s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0547902s, 27548 KB] g=162, 766 evaluated, 765 expanded
[t=0.0548725s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0548826s, 27548 KB] g=164, 769 evaluated, 768 expanded
[t=0.0552602s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.05527s, 27548 KB] g=176, 787 evaluated, 786 expanded
[t=0.0553477s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0553565s, 27548 KB] g=180, 791 evaluated, 790 expanded
[t=0.0553759s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0553846s, 27548 KB] g=181, 792 evaluated, 791 expanded
[t=0.0554015s, 27548 KB] Solution found!
[t=0.0554142s, 27548 KB] Actual search time: 0.0283951s
unstack b18 b26 (1)
put-down b18 (1)
unstack b14 b9 (1)
put-down b14 (1)
unstack b26 b23 (1)
stack b26 b9 (1)
unstack b19 b12 (1)
stack b19 b23 (1)
unstack b12 b20 (1)
put-down b12 (1)
unstack b20 b15 (1)
put-down b20 (1)
pick-up b15 (1)
stack b15 b2 (1)
pick-up b11 (1)
stack b11 b15 (1)
unstack b19 b23 (1)
put-down b19 (1)
unstack b23 b6 (1)
put-down b23 (1)
unstack b6 b22 (1)
stack b6 b20 (1)
pick-up b19 (1)
stack b19 b23 (1)
unstack b26 b9 (1)
put-down b26 (1)
unstack b9 b16 (1)
stack b9 b18 (1)
pick-up b26 (1)
stack b26 b9 (1)
unstack b16 b24 (1)
put-down b16 (1)
unstack b24 b27 (1)
stack b24 b3 (1)
pick-up b27 (1)
stack b27 b12 (1)
unstack b24 b3 (1)
put-down b24 (1)
unstack b3 b1 (1)
put-down b3 (1)
unstack b1 b25 (1)
stack b1 b26 (1)
unstack b25 b8 (1)
stack b25 b19 (1)
unstack b8 b21 (1)
stack b8 b24 (1)
unstack b21 b17 (1)
put-down b21 (1)
unstack b17 b10 (1)
put-down b17 (1)
pick-up b22 (1)
stack b22 b10 (1)
pick-up b16 (1)
stack b16 b8 (1)
pick-up b3 (1)
stack b3 b1 (1)
unstack b22 b10 (1)
put-down b22 (1)
unstack b10 b5 (1)
put-down b10 (1)
unstack b5 b4 (1)
stack b5 b11 (1)
unstack b4 b7 (1)
put-down b4 (1)
pick-up b10 (1)
stack b10 b5 (1)
unstack b7 b13 (1)
stack b7 b16 (1)
pick-up b13 (1)
stack b13 b14 (1)
pick-up b22 (1)
stack b22 b10 (1)
unstack b13 b14 (1)
put-down b13 (1)
pick-up b14 (1)
stack b14 b7 (1)
pick-up b13 (1)
stack b13 b14 (1)
unstack b27 b12 (1)
put-down b27 (1)
pick-up b12 (1)
stack b12 b13 (1)
pick-up b27 (1)
stack b27 b12 (1)
unstack b25 b19 (1)
put-down b25 (1)
unstack b19 b23 (1)
put-down b19 (1)
pick-up b23 (1)
stack b23 b4 (1)
pick-up b19 (1)
stack b19 b23 (1)
pick-up b25 (1)
stack b25 b19 (1)
unstack b22 b10 (1)
put-down b22 (1)
unstack b10 b5 (1)
put-down b10 (1)
unstack b5 b11 (1)
put-down b5 (1)
pick-up b10 (1)
stack b10 b5 (1)
pick-up b22 (1)
stack b22 b10 (1)
unstack b11 b15 (1)
put-down b11 (1)
unstack b15 b2 (1)
put-down b15 (1)
pick-up b2 (1)
stack b2 b21 (1)
pick-up b15 (1)
stack b15 b2 (1)
pick-up b11 (1)
stack b11 b15 (1)
unstack b22 b10 (1)
put-down b22 (1)
unstack b10 b5 (1)
put-down b10 (1)
pick-up b22 (1)
stack b22 b10 (1)
pick-up b5 (1)
stack b5 b11 (1)
unstack b22 b10 (1)
put-down b22 (1)
pick-up b10 (1)
stack b10 b5 (1)
pick-up b22 (1)
stack b22 b10 (1)
unstack b27 b12 (1)
put-down b27 (1)
unstack b12 b13 (1)
put-down b12 (1)
pick-up b27 (1)
stack b27 b12 (1)
unstack b13 b14 (1)
put-down b13 (1)
unstack b14 b7 (1)
put-down b14 (1)
pick-up b13 (1)
stack b13 b14 (1)
unstack b27 b12 (1)
put-down b27 (1)
pick-up b12 (1)
stack b12 b13 (1)
pick-up b27 (1)
stack b27 b12 (1)
unstack b7 b16 (1)
put-down b7 (1)
unstack b16 b8 (1)
put-down b16 (1)
pick-up b7 (1)
stack b7 b16 (1)
unstack b8 b24 (1)
put-down b8 (1)
pick-up b24 (1)
stack b24 b3 (1)
pick-up b8 (1)
stack b8 b24 (1)
unstack b7 b16 (1)
put-down b7 (1)
pick-up b16 (1)
stack b16 b8 (1)
pick-up b7 (1)
stack b7 b16 (1)
unstack b27 b12 (1)
put-down b27 (1)
unstack b12 b13 (1)
put-down b12 (1)
pick-up b27 (1)
stack b27 b12 (1)
unstack b13 b14 (1)
put-down b13 (1)
pick-up b14 (1)
stack b14 b7 (1)
pick-up b13 (1)
stack b13 b14 (1)
unstack b27 b12 (1)
put-down b27 (1)
pick-up b12 (1)
stack b12 b13 (1)
pick-up b27 (1)
stack b27 b12 (1)
[t=0.055424s, 27548 KB] Plan length: 182 step(s).
[t=0.055424s, 27548 KB] Plan cost: 182
[t=0.055424s, 27548 KB] Expanded 792 state(s).
[t=0.055424s, 27548 KB] Reopened 0 state(s).
[t=0.055424s, 27548 KB] Evaluated 793 state(s).
[t=0.055424s, 27548 KB] Evaluations: 1586
[t=0.055424s, 27548 KB] Generated 7909 state(s).
[t=0.055424s, 27548 KB] Dead ends: 0 state(s).
[t=0.055424s, 27548 KB] Number of registered states: 793
[t=0.055424s, 27548 KB] Int hash set load factor: 793/1024 = 0.774414
[t=0.055424s, 27548 KB] Int hash set resizes: 10
[t=0.055424s, 27548 KB] Search time: 0.0284505s
[t=0.055424s, 27548 KB] Total time: 0.055424s
Solution found.
Peak memory: 27548 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.24s
