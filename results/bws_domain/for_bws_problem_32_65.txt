INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_32/bws_problem_32_65.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.020s wall-clock]
3298 relevant atoms
2208 auxiliary atoms
5506 final queue length
9675 total queue pushes
Completing instantiation... [0.040s CPU, 0.040s wall-clock]
Instantiating: [0.060s CPU, 0.062s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.002s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.001s wall-clock]
Choosing groups...
33 uncovered facts
Choosing groups: [0.000s CPU, 0.002s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.020s CPU, 0.013s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.001s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.002s wall-clock]
Translating task: [0.050s CPU, 0.054s wall-clock]
3040 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
64 propositions removed
Detecting unreachable propositions: [0.030s CPU, 0.026s wall-clock]
Reordering and filtering variables...
65 of 65 variables necessary.
33 of 65 mutex groups necessary.
2048 of 2048 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.014s wall-clock]
Translator variables: 65
Translator derived variables: 0
Translator facts: 1122
Translator goal facts: 27
Translator mutex groups: 33
Translator total mutex groups size: 1089
Translator operators: 2048
Translator axioms: 0
Translator task size: 17567
Translator peak memory: 42624 KB
Writing output... [0.010s CPU, 0.010s wall-clock]
Done! [0.190s CPU, 0.185s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.4406e-05s, 24488 KB] reading input...
[t=0.00664016s, 26784 KB] done reading input!
[t=0.00750323s, 27180 KB] Initializing landmark count heuristic...
[t=0.00753605s, 27180 KB] Generating landmark graph...
[t=0.00763167s, 27312 KB] Building a landmark graph with reasonable orders.
[t=0.00773232s, 27312 KB] Initializing Exploration...
[t=0.00827862s, 27768 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0364796s, 28560 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0366875s, 28560 KB] Landmarks generation time: 0.0290654s
[t=0.0367115s, 28560 KB] Discovered 135 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0367284s, 28560 KB] 428 edges
[t=0.0367382s, 28560 KB] approx. reasonable orders
[t=0.038503s, 28560 KB] approx. obedient reasonable orders
[t=0.0385699s, 28560 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0385814s, 28560 KB] Landmarks generation time: 0.0310437s
[t=0.0385916s, 28560 KB] Discovered 135 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0386002s, 28560 KB] 442 edges
[t=0.0386087s, 28560 KB] Landmark graph generation time: 0.0310798s
[t=0.0386175s, 28560 KB] Landmark graph contains 135 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0386264s, 28560 KB] Landmark graph contains 442 orderings.
[t=0.0393494s, 28592 KB] Simplifying 8128 unary operators... done! [6144 unary operators]
[t=0.0415103s, 28856 KB] time to simplify: 0.00220891s
[t=0.0416686s, 28856 KB] Initializing additive heuristic...
[t=0.0416906s, 28856 KB] Initializing FF heuristic...
[t=0.0417619s, 28856 KB] Building successor generator...done!
[t=0.0421644s, 28856 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0421756s, 28856 KB] time for successor generation creation: 0.00037133s
[t=0.0421952s, 28856 KB] Variables: 65
[t=0.0422035s, 28856 KB] FactPairs: 1122
[t=0.0422124s, 28856 KB] Bytes per state: 32
[t=0.0423549s, 28856 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0423947s, 28856 KB] 63 initial landmarks, 27 goal landmarks
[t=0.0425095s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 72
[t=0.0425196s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 56
[t=0.0425276s, 28856 KB] g=0, 1 evaluated, 0 expanded
[t=0.0425462s, 28856 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 72
[t=0.0425546s, 28856 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 56
[t=0.042666s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 71
[t=0.0426752s, 28856 KB] g=1, 3 evaluated, 2 expanded
[t=0.0427351s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 55
[t=0.0427442s, 28856 KB] g=2, 4 evaluated, 3 expanded
[t=0.0437476s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 70
[t=0.0437676s, 28856 KB] g=4, 25 evaluated, 24 expanded
[t=0.0438755s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 54
[t=0.0438847s, 28856 KB] g=4, 27 evaluated, 26 expanded
[t=0.0447549s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 69
[t=0.0447697s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 53
[t=0.0447791s, 28856 KB] g=6, 45 evaluated, 44 expanded
[t=0.0448372s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 68
[t=0.0448466s, 28856 KB] g=7, 46 evaluated, 45 expanded
[t=0.0456269s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 67
[t=0.045657s, 28856 KB] g=9, 63 evaluated, 62 expanded
[t=0.0463326s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 52
[t=0.0463457s, 28856 KB] g=10, 77 evaluated, 76 expanded
[t=0.0467355s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 66
[t=0.0467503s, 28856 KB] g=12, 85 evaluated, 84 expanded
[t=0.0480026s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 64
[t=0.0480245s, 28856 KB] g=14, 112 evaluated, 111 expanded
[t=0.0488386s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 62
[t=0.0488572s, 28856 KB] g=16, 129 evaluated, 128 expanded
[t=0.0492705s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 51
[t=0.0492808s, 28856 KB] g=18, 138 evaluated, 137 expanded
[t=0.0500477s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 61
[t=0.0500577s, 28856 KB] g=19, 154 evaluated, 153 expanded
[t=0.0509839s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 58
[t=0.0509937s, 28856 KB] g=22, 174 evaluated, 173 expanded
[t=0.0520499s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 57
[t=0.0520613s, 28856 KB] g=24, 196 evaluated, 195 expanded
[t=0.0525495s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 50
[t=0.0525599s, 28856 KB] g=26, 206 evaluated, 205 expanded
[t=0.0535495s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0535661s, 28856 KB] g=26, 227 evaluated, 226 expanded
[t=0.0544591s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0544697s, 28856 KB] g=28, 246 evaluated, 245 expanded
[t=0.0554862s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 49
[t=0.0555001s, 28856 KB] g=30, 268 evaluated, 267 expanded
[t=0.0557427s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0557527s, 28856 KB] g=30, 273 evaluated, 272 expanded
[t=0.0565785s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 48
[t=0.0565962s, 28856 KB] g=32, 291 evaluated, 290 expanded
[t=0.0571596s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0571719s, 28856 KB] g=32, 303 evaluated, 302 expanded
[t=0.0574499s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 47
[t=0.0574632s, 28856 KB] g=34, 309 evaluated, 308 expanded
[t=0.0582908s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 46
[t=0.0583123s, 28856 KB] g=36, 327 evaluated, 326 expanded
[t=0.0586887s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.058699s, 28856 KB] g=38, 335 evaluated, 334 expanded
[t=0.0613964s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0614315s, 28856 KB] g=42, 383 evaluated, 382 expanded
[t=0.0621182s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0621299s, 28856 KB] g=44, 398 evaluated, 397 expanded
[t=0.0630617s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0630787s, 28856 KB] g=46, 417 evaluated, 416 expanded
[t=0.0638464s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0638585s, 28856 KB] g=48, 433 evaluated, 432 expanded
[t=0.0644492s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0644587s, 28856 KB] g=50, 446 evaluated, 445 expanded
[t=0.0645163s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0645271s, 28856 KB] g=50, 447 evaluated, 446 expanded
[t=0.0654504s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.065469s, 28856 KB] g=52, 468 evaluated, 467 expanded
[t=0.0658772s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0658873s, 28856 KB] g=50, 477 evaluated, 476 expanded
[t=0.0665955s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0666076s, 28856 KB] g=52, 492 evaluated, 491 expanded
[t=0.0672974s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.067307s, 28856 KB] g=54, 507 evaluated, 506 expanded
[t=0.07085s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.070871s, 28856 KB] g=57, 585 evaluated, 584 expanded
[t=0.0709339s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0709437s, 28856 KB] g=58, 586 evaluated, 585 expanded
[t=0.0717235s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0717371s, 28856 KB] g=60, 602 evaluated, 601 expanded
[t=0.0731409s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0731807s, 28856 KB] g=62, 631 evaluated, 630 expanded
[t=0.0740209s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0740456s, 28856 KB] g=64, 649 evaluated, 648 expanded
[t=0.0742458s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0742555s, 28856 KB] g=64, 653 evaluated, 652 expanded
[t=0.0749604s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0749759s, 28856 KB] g=66, 668 evaluated, 667 expanded
[t=0.0763837s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0764117s, 28856 KB] g=68, 697 evaluated, 696 expanded
[t=0.0768355s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0768507s, 28856 KB] g=70, 705 evaluated, 704 expanded
[t=0.080993s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0810176s, 28856 KB] g=74, 797 evaluated, 796 expanded
[t=0.0819076s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0819194s, 28856 KB] g=76, 817 evaluated, 816 expanded
[t=0.0824733s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0824904s, 28856 KB] g=78, 829 evaluated, 828 expanded
[t=0.0857649s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0857785s, 28856 KB] g=84, 903 evaluated, 902 expanded
[t=0.0864008s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0864119s, 28856 KB] g=86, 917 evaluated, 916 expanded
[t=0.0889224s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0889417s, 28856 KB] g=92, 973 evaluated, 972 expanded
[t=0.0893705s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0893816s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0893927s, 28856 KB] g=94, 982 evaluated, 981 expanded
[t=0.0897497s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0897601s, 28856 KB] g=96, 990 evaluated, 989 expanded
[t=0.0900302s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0900537s, 28856 KB] g=98, 996 evaluated, 995 expanded
[t=0.0903467s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.090358s, 28856 KB] g=100, 1002 evaluated, 1001 expanded
[t=0.0992826s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0993302s, 28856 KB] g=112, 1190 evaluated, 1189 expanded
[t=0.0995679s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0995788s, 28856 KB] g=113, 1195 evaluated, 1194 expanded
[t=0.0996384s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0996485s, 28856 KB] g=114, 1196 evaluated, 1195 expanded
[t=0.100174s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.100186s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.100196s, 28856 KB] g=116, 1207 evaluated, 1206 expanded
[t=0.100648s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.100658s, 28856 KB] g=118, 1217 evaluated, 1216 expanded
[t=0.100761s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.100771s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.100779s, 28856 KB] g=118, 1219 evaluated, 1218 expanded
[t=0.101209s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.101218s, 28856 KB] g=120, 1229 evaluated, 1228 expanded
[t=0.101315s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.101324s, 28856 KB] g=120, 1231 evaluated, 1230 expanded
[t=0.101918s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.101928s, 28856 KB] g=122, 1245 evaluated, 1244 expanded
[t=0.102177s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.102188s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.102196s, 28856 KB] g=122, 1250 evaluated, 1249 expanded
[t=0.102557s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.102567s, 28856 KB] g=124, 1258 evaluated, 1257 expanded
[t=0.102668s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.102677s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.102686s, 28856 KB] g=124, 1260 evaluated, 1259 expanded
[t=0.103018s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.10303s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.10304s, 28856 KB] g=126, 1267 evaluated, 1266 expanded
[t=0.103343s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.103355s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.103367s, 28856 KB] g=128, 1273 evaluated, 1272 expanded
[t=0.103911s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.103925s, 28856 KB] g=131, 1284 evaluated, 1283 expanded
[t=0.104031s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.104042s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.104053s, 28856 KB] g=132, 1286 evaluated, 1285 expanded
[t=0.104298s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.104309s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.104322s, 28856 KB] g=134, 1291 evaluated, 1290 expanded
[t=0.105048s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.105064s, 28856 KB] g=138, 1307 evaluated, 1306 expanded
[t=0.105261s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.105272s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.105283s, 28856 KB] g=140, 1311 evaluated, 1310 expanded
[t=0.106391s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.106407s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.106419s, 28856 KB] g=148, 1336 evaluated, 1335 expanded
[t=0.10656s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.106571s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.106582s, 28856 KB] g=150, 1339 evaluated, 1338 expanded
[t=0.134944s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.135012s, 28856 KB] g=196, 2092 evaluated, 2091 expanded
[t=0.136063s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.136079s, 28856 KB] g=204, 2121 evaluated, 2120 expanded
[t=0.136184s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.136194s, 28856 KB] g=206, 2124 evaluated, 2123 expanded
[t=0.137356s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.137368s, 28856 KB] g=222, 2167 evaluated, 2166 expanded
[t=0.137597s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.137606s, 28856 KB] g=230, 2178 evaluated, 2177 expanded
[t=0.137627s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.137636s, 28856 KB] g=231, 2179 evaluated, 2178 expanded
[t=0.137653s, 28856 KB] Solution found!
[t=0.13767s, 28856 KB] Actual search time: 0.0952713s
unstack b12 b31 (1)
stack b12 b22 (1)
pick-up b31 (1)
stack b31 b23 (1)
unstack b8 b30 (1)
stack b8 b11 (1)
unstack b30 b13 (1)
put-down b30 (1)
unstack b12 b22 (1)
put-down b12 (1)
unstack b13 b24 (1)
put-down b13 (1)
pick-up b22 (1)
stack b22 b8 (1)
pick-up b12 (1)
stack b12 b22 (1)
unstack b15 b29 (1)
put-down b15 (1)
unstack b29 b14 (1)
put-down b29 (1)
unstack b14 b5 (1)
stack b14 b15 (1)
unstack b5 b6 (1)
put-down b5 (1)
unstack b6 b10 (1)
put-down b6 (1)
unstack b10 b26 (1)
stack b10 b16 (1)
pick-up b13 (1)
stack b13 b30 (1)
pick-up b26 (1)
stack b26 b7 (1)
pick-up b29 (1)
stack b29 b5 (1)
pick-up b3 (1)
stack b3 b10 (1)
unstack b31 b23 (1)
put-down b31 (1)
unstack b23 b21 (1)
put-down b23 (1)
unstack b13 b30 (1)
put-down b13 (1)
unstack b21 b18 (1)
put-down b21 (1)
unstack b18 b32 (1)
stack b18 b31 (1)
unstack b32 b19 (1)
put-down b32 (1)
pick-up b19 (1)
stack b19 b21 (1)
pick-up b23 (1)
stack b23 b19 (1)
unstack b26 b7 (1)
put-down b26 (1)
unstack b7 b28 (1)
put-down b7 (1)
unstack b28 b20 (1)
stack b28 b18 (1)
unstack b20 b9 (1)
put-down b20 (1)
pick-up b7 (1)
stack b7 b28 (1)
pick-up b13 (1)
stack b13 b30 (1)
pick-up b26 (1)
stack b26 b7 (1)
unstack b9 b1 (1)
stack b9 b26 (1)
unstack b13 b30 (1)
put-down b13 (1)
unstack b29 b5 (1)
put-down b29 (1)
pick-up b5 (1)
stack b5 b9 (1)
pick-up b29 (1)
stack b29 b5 (1)
pick-up b13 (1)
stack b13 b30 (1)
unstack b14 b15 (1)
put-down b14 (1)
pick-up b15 (1)
stack b15 b29 (1)
pick-up b14 (1)
stack b14 b15 (1)
unstack b3 b10 (1)
put-down b3 (1)
unstack b10 b16 (1)
put-down b10 (1)
unstack b13 b30 (1)
put-down b13 (1)
pick-up b16 (1)
stack b16 b20 (1)
pick-up b10 (1)
stack b10 b16 (1)
pick-up b13 (1)
stack b13 b30 (1)
pick-up b3 (1)
stack b3 b10 (1)
unstack b12 b22 (1)
put-down b12 (1)
unstack b22 b8 (1)
put-down b22 (1)
pick-up b12 (1)
stack b12 b22 (1)
unstack b13 b30 (1)
put-down b13 (1)
unstack b8 b11 (1)
put-down b8 (1)
unstack b11 b4 (1)
put-down b11 (1)
unstack b4 b17 (1)
put-down b4 (1)
unstack b17 b25 (1)
stack b17 b14 (1)
unstack b25 b2 (1)
stack b25 b3 (1)
unstack b2 b27 (1)
stack b2 b32 (1)
pick-up b27 (1)
stack b27 b24 (1)
pick-up b30 (1)
stack b30 b2 (1)
pick-up b13 (1)
stack b13 b30 (1)
pick-up b11 (1)
stack b11 b13 (1)
pick-up b8 (1)
stack b8 b11 (1)
unstack b27 b24 (1)
put-down b27 (1)
pick-up b24 (1)
stack b24 b25 (1)
pick-up b27 (1)
stack b27 b24 (1)
unstack b12 b22 (1)
put-down b12 (1)
pick-up b22 (1)
stack b22 b8 (1)
pick-up b12 (1)
stack b12 b22 (1)
unstack b23 b19 (1)
put-down b23 (1)
unstack b19 b21 (1)
put-down b19 (1)
pick-up b21 (1)
stack b21 b4 (1)
pick-up b19 (1)
stack b19 b21 (1)
pick-up b23 (1)
stack b23 b19 (1)
unstack b17 b14 (1)
put-down b17 (1)
unstack b14 b15 (1)
put-down b14 (1)
pick-up b17 (1)
stack b17 b14 (1)
unstack b15 b29 (1)
put-down b15 (1)
unstack b29 b5 (1)
put-down b29 (1)
unstack b5 b9 (1)
put-down b5 (1)
pick-up b29 (1)
stack b29 b5 (1)
pick-up b15 (1)
stack b15 b29 (1)
unstack b17 b14 (1)
put-down b17 (1)
pick-up b14 (1)
stack b14 b15 (1)
pick-up b17 (1)
stack b17 b14 (1)
unstack b9 b26 (1)
put-down b9 (1)
unstack b26 b7 (1)
put-down b26 (1)
unstack b7 b28 (1)
put-down b7 (1)
pick-up b26 (1)
stack b26 b7 (1)
pick-up b9 (1)
stack b9 b26 (1)
unstack b28 b18 (1)
put-down b28 (1)
unstack b18 b31 (1)
put-down b18 (1)
pick-up b28 (1)
stack b28 b18 (1)
pick-up b31 (1)
stack b31 b23 (1)
unstack b28 b18 (1)
put-down b28 (1)
pick-up b18 (1)
stack b18 b31 (1)
pick-up b28 (1)
stack b28 b18 (1)
unstack b9 b26 (1)
put-down b9 (1)
unstack b26 b7 (1)
put-down b26 (1)
pick-up b7 (1)
stack b7 b28 (1)
pick-up b26 (1)
stack b26 b7 (1)
pick-up b9 (1)
stack b9 b26 (1)
unstack b17 b14 (1)
put-down b17 (1)
unstack b14 b15 (1)
put-down b14 (1)
unstack b15 b29 (1)
put-down b15 (1)
pick-up b14 (1)
stack b14 b15 (1)
pick-up b17 (1)
stack b17 b14 (1)
unstack b29 b5 (1)
put-down b29 (1)
pick-up b5 (1)
stack b5 b9 (1)
pick-up b29 (1)
stack b29 b5 (1)
unstack b17 b14 (1)
put-down b17 (1)
unstack b14 b15 (1)
put-down b14 (1)
pick-up b15 (1)
stack b15 b29 (1)
pick-up b14 (1)
stack b14 b15 (1)
pick-up b17 (1)
stack b17 b14 (1)
[t=0.137679s, 28856 KB] Plan length: 232 step(s).
[t=0.137679s, 28856 KB] Plan cost: 232
[t=0.137679s, 28856 KB] Expanded 2179 state(s).
[t=0.137679s, 28856 KB] Reopened 0 state(s).
[t=0.137679s, 28856 KB] Evaluated 2180 state(s).
[t=0.137679s, 28856 KB] Evaluations: 4360
[t=0.137679s, 28856 KB] Generated 24477 state(s).
[t=0.137679s, 28856 KB] Dead ends: 0 state(s).
[t=0.137679s, 28856 KB] Number of registered states: 2180
[t=0.137679s, 28856 KB] Int hash set load factor: 2180/4096 = 0.532227
[t=0.137679s, 28856 KB] Int hash set resizes: 12
[t=0.137679s, 28856 KB] Search time: 0.0953256s
[t=0.137679s, 28856 KB] Total time: 0.137679s
Solution found.
Peak memory: 28856 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.38s
