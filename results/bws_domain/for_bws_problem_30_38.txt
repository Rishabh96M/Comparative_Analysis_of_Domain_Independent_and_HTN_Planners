INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_30/bws_problem_30_38.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.018s wall-clock]
2912 relevant atoms
1950 auxiliary atoms
4862 final queue length
8524 total queue pushes
Completing instantiation... [0.040s CPU, 0.031s wall-clock]
Instantiating: [0.060s CPU, 0.051s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.002s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
31 uncovered facts
Choosing groups: [0.010s CPU, 0.002s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.010s CPU, 0.011s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.001s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.002s wall-clock]
Translating task: [0.050s CPU, 0.050s wall-clock]
2670 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
60 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.023s wall-clock]
Reordering and filtering variables...
61 of 61 variables necessary.
31 of 61 mutex groups necessary.
1800 of 1800 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.012s wall-clock]
Translator variables: 61
Translator derived variables: 0
Translator facts: 992
Translator goal facts: 25
Translator mutex groups: 31
Translator total mutex groups size: 961
Translator operators: 1800
Translator axioms: 0
Translator task size: 15449
Translator peak memory: 41336 KB
Writing output... [0.010s CPU, 0.009s wall-clock]
Done! [0.160s CPU, 0.163s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.1703e-05s, 24488 KB] reading input...
[t=0.00575068s, 26364 KB] done reading input!
[t=0.00791387s, 26760 KB] Initializing landmark count heuristic...
[t=0.00804211s, 26760 KB] Generating landmark graph...
[t=0.00830263s, 26892 KB] Building a landmark graph with reasonable orders.
[t=0.00847426s, 27024 KB] Initializing Exploration...
[t=0.00902229s, 27316 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0350385s, 28512 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0351692s, 28512 KB] Landmarks generation time: 0.0268509s
[t=0.035194s, 28512 KB] Discovered 130 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0352133s, 28512 KB] 1033 edges
[t=0.0352232s, 28512 KB] approx. reasonable orders
[t=0.03614s, 28512 KB] approx. obedient reasonable orders
[t=0.0362571s, 28512 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0362697s, 28512 KB] Landmarks generation time: 0.0282147s
[t=0.0362808s, 28512 KB] Discovered 130 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0362891s, 28512 KB] 1042 edges
[t=0.0362998s, 28512 KB] Landmark graph generation time: 0.028265s
[t=0.0363088s, 28512 KB] Landmark graph contains 130 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0363172s, 28512 KB] Landmark graph contains 1042 orderings.
[t=0.0372058s, 28540 KB] Simplifying 7140 unary operators... done! [5400 unary operators]
[t=0.0389944s, 28540 KB] time to simplify: 0.00181692s
[t=0.0391214s, 28540 KB] Initializing additive heuristic...
[t=0.0391412s, 28540 KB] Initializing FF heuristic...
[t=0.0392001s, 28540 KB] Building successor generator...done!
[t=0.0395752s, 28684 KB] peak memory difference for successor generator creation: 144 KB
[t=0.0395857s, 28684 KB] time for successor generation creation: 0.000343032s
[t=0.0395994s, 28684 KB] Variables: 61
[t=0.0396169s, 28684 KB] FactPairs: 992
[t=0.0396248s, 28684 KB] Bytes per state: 24
[t=0.0397148s, 28684 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0397487s, 28684 KB] 59 initial landmarks, 25 goal landmarks
[t=0.0398272s, 28684 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 71
[t=0.0398369s, 28684 KB] New best heuristic value for ff(transform = adapt_costs(one)): 51
[t=0.0398451s, 28684 KB] g=0, 1 evaluated, 0 expanded
[t=0.0398587s, 28684 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 71
[t=0.0398672s, 28684 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 51
[t=0.0400083s, 28684 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 70
[t=0.0400176s, 28684 KB] g=2, 4 evaluated, 3 expanded
[t=0.0401929s, 28684 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 69
[t=0.0402031s, 28684 KB] g=4, 8 evaluated, 7 expanded
[t=0.0402555s, 28684 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 68
[t=0.0402648s, 28684 KB] g=5, 9 evaluated, 8 expanded
[t=0.0406779s, 28684 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 67
[t=0.0406884s, 28684 KB] g=8, 19 evaluated, 18 expanded
[t=0.0409606s, 28684 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 66
[t=0.0409731s, 28684 KB] g=9, 25 evaluated, 24 expanded
[t=0.0414334s, 28684 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 65
[t=0.0414438s, 28684 KB] New best heuristic value for ff(transform = adapt_costs(one)): 50
[t=0.0414529s, 28684 KB] g=12, 36 evaluated, 35 expanded
[t=0.0418049s, 28684 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 64
[t=0.0418259s, 28684 KB] g=14, 44 evaluated, 43 expanded
[t=0.0421516s, 28684 KB] New best heuristic value for ff(transform = adapt_costs(one)): 49
[t=0.0421603s, 28684 KB] g=16, 52 evaluated, 51 expanded
[t=0.04221s, 28684 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 63
[t=0.0422186s, 28684 KB] g=16, 53 evaluated, 52 expanded
[t=0.0431671s, 28684 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 62
[t=0.0431861s, 28684 KB] g=20, 76 evaluated, 75 expanded
[t=0.0435707s, 28684 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 61
[t=0.0435856s, 28684 KB] g=22, 85 evaluated, 84 expanded
[t=0.043635s, 28684 KB] New best heuristic value for ff(transform = adapt_costs(one)): 48
[t=0.0436437s, 28684 KB] g=22, 86 evaluated, 85 expanded
[t=0.0443194s, 28684 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 58
[t=0.0443295s, 28684 KB] New best heuristic value for ff(transform = adapt_costs(one)): 47
[t=0.0443378s, 28684 KB] g=24, 103 evaluated, 102 expanded
[t=0.0446682s, 28684 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 57
[t=0.0446777s, 28684 KB] g=26, 111 evaluated, 110 expanded
[t=0.0457954s, 28684 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0458386s, 28684 KB] New best heuristic value for ff(transform = adapt_costs(one)): 46
[t=0.0458532s, 28684 KB] g=28, 129 evaluated, 128 expanded
[t=0.0464982s, 28684 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0465145s, 28684 KB] g=30, 139 evaluated, 138 expanded
[t=0.0466774s, 28684 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0467117s, 28684 KB] New best heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.046734s, 28684 KB] g=30, 141 evaluated, 140 expanded
[t=0.0475612s, 28684 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0475831s, 28684 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0475982s, 28684 KB] g=32, 152 evaluated, 151 expanded
[t=0.0494773s, 28684 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0495012s, 28684 KB] g=38, 193 evaluated, 192 expanded
[t=0.0534857s, 28684 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0535068s, 28684 KB] g=44, 288 evaluated, 287 expanded
[t=0.0538874s, 28684 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0538971s, 28684 KB] g=46, 297 evaluated, 296 expanded
[t=0.0556018s, 28684 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0556137s, 28684 KB] g=51, 339 evaluated, 338 expanded
[t=0.0556696s, 28684 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0556784s, 28684 KB] g=52, 340 evaluated, 339 expanded
[t=0.0564239s, 28684 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0564334s, 28684 KB] g=54, 358 evaluated, 357 expanded
[t=0.0572313s, 28684 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0572432s, 28684 KB] g=52, 376 evaluated, 375 expanded
[t=0.0574023s, 28684 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0574223s, 28684 KB] g=56, 379 evaluated, 378 expanded
[t=0.0581743s, 28684 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0581866s, 28684 KB] g=58, 396 evaluated, 395 expanded
[t=0.0586617s, 28684 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0586795s, 28684 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0586886s, 28684 KB] g=60, 407 evaluated, 406 expanded
[t=0.0591138s, 28684 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0591231s, 28684 KB] g=62, 417 evaluated, 416 expanded
[t=0.0595966s, 28684 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0596078s, 28684 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0596173s, 28684 KB] g=64, 428 evaluated, 427 expanded
[t=0.0600932s, 28684 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0601034s, 28684 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0601117s, 28684 KB] g=66, 439 evaluated, 438 expanded
[t=0.0606258s, 28684 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0606369s, 28684 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0606448s, 28684 KB] g=68, 451 evaluated, 450 expanded
[t=0.0610942s, 28684 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0611051s, 28684 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0611135s, 28684 KB] g=70, 461 evaluated, 460 expanded
[t=0.0616178s, 28684 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.06163s, 28684 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0616386s, 28684 KB] g=72, 472 evaluated, 471 expanded
[t=0.0620821s, 28684 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0620913s, 28684 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0620995s, 28684 KB] g=74, 482 evaluated, 481 expanded
[t=0.0625177s, 28684 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0625273s, 28684 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.062535s, 28684 KB] g=76, 492 evaluated, 491 expanded
[t=0.0629825s, 28684 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0629925s, 28684 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0630005s, 28684 KB] g=78, 503 evaluated, 502 expanded
[t=0.0633992s, 28684 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0634169s, 28684 KB] g=78, 512 evaluated, 511 expanded
[t=0.0635114s, 28684 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0635253s, 28684 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0635355s, 28684 KB] g=80, 513 evaluated, 512 expanded
[t=0.0644281s, 28684 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.064446s, 28684 KB] g=83, 533 evaluated, 532 expanded
[t=0.0644998s, 28684 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0645096s, 28684 KB] g=84, 534 evaluated, 533 expanded
[t=0.0648524s, 28684 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0648637s, 28684 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0648724s, 28684 KB] g=86, 542 evaluated, 541 expanded
[t=0.0659302s, 28684 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0659481s, 28684 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0659571s, 28684 KB] g=90, 568 evaluated, 567 expanded
[t=0.0662884s, 28684 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0663021s, 28684 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.066311s, 28684 KB] g=92, 576 evaluated, 575 expanded
[t=0.0674277s, 28684 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0675343s, 28684 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0675432s, 28684 KB] g=96, 602 evaluated, 601 expanded
[t=0.0678318s, 28684 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0678424s, 28684 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0678516s, 28684 KB] g=98, 609 evaluated, 608 expanded
[t=0.0686772s, 28684 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.068695s, 28684 KB] g=101, 630 evaluated, 629 expanded
[t=0.0697805s, 28684 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0697996s, 28684 KB] g=106, 656 evaluated, 655 expanded
[t=0.0701245s, 28684 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0701355s, 28684 KB] g=102, 664 evaluated, 663 expanded
[t=0.0705327s, 28684 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0705448s, 28684 KB] g=104, 674 evaluated, 673 expanded
[t=0.0709506s, 28684 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0709633s, 28684 KB] g=110, 683 evaluated, 682 expanded
[t=0.0712922s, 28684 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0713109s, 28684 KB] g=112, 691 evaluated, 690 expanded
[t=0.0728473s, 28684 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0728864s, 28684 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.072896s, 28684 KB] g=118, 727 evaluated, 726 expanded
[t=0.0770616s, 28684 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.077077s, 28684 KB] g=130, 835 evaluated, 834 expanded
[t=0.0776649s, 28684 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0776767s, 28684 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0776845s, 28684 KB] g=136, 849 evaluated, 848 expanded
[t=0.0862302s, 28684 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0864497s, 28684 KB] g=158, 1049 evaluated, 1048 expanded
[t=0.0868354s, 28684 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0868692s, 28684 KB] g=160, 1053 evaluated, 1052 expanded
[t=0.0883712s, 28684 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0884113s, 28684 KB] g=168, 1078 evaluated, 1077 expanded
[t=0.0889033s, 28684 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0889283s, 28684 KB] g=172, 1087 evaluated, 1086 expanded
[t=0.0890558s, 28684 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0890659s, 28684 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0890851s, 28684 KB] g=174, 1090 evaluated, 1089 expanded
[t=0.0967961s, 28684 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0968206s, 28684 KB] g=208, 1311 evaluated, 1310 expanded
[t=0.0971195s, 28684 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0971302s, 28684 KB] g=212, 1320 evaluated, 1319 expanded
[t=0.09722s, 28684 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0972299s, 28684 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.097238s, 28684 KB] g=214, 1323 evaluated, 1322 expanded
[t=0.0976748s, 28684 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0976842s, 28684 KB] g=226, 1341 evaluated, 1340 expanded
[t=0.0977688s, 28684 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0977774s, 28684 KB] g=230, 1345 evaluated, 1344 expanded
[t=0.0977983s, 28684 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0978066s, 28684 KB] g=231, 1346 evaluated, 1345 expanded
[t=0.0978232s, 28684 KB] Solution found!
[t=0.0978369s, 28684 KB] Actual search time: 0.0580859s
unstack b29 b11 (1)
put-down b29 (1)
unstack b11 b12 (1)
put-down b11 (1)
unstack b12 b13 (1)
put-down b12 (1)
unstack b7 b28 (1)
put-down b7 (1)
unstack b28 b10 (1)
put-down b28 (1)
unstack b10 b30 (1)
put-down b10 (1)
unstack b30 b1 (1)
put-down b30 (1)
unstack b1 b19 (1)
stack b1 b29 (1)
unstack b13 b26 (1)
put-down b13 (1)
unstack b26 b18 (1)
stack b26 b19 (1)
pick-up b13 (1)
stack b13 b26 (1)
unstack b18 b15 (1)
stack b18 b7 (1)
unstack b15 b4 (1)
put-down b15 (1)
unstack b4 b24 (1)
put-down b4 (1)
unstack b24 b20 (1)
stack b24 b1 (1)
pick-up b30 (1)
stack b30 b4 (1)
unstack b13 b26 (1)
put-down b13 (1)
unstack b26 b19 (1)
put-down b26 (1)
pick-up b13 (1)
stack b13 b26 (1)
unstack b19 b25 (1)
put-down b19 (1)
unstack b25 b3 (1)
put-down b25 (1)
pick-up b12 (1)
stack b12 b3 (1)
pick-up b19 (1)
stack b19 b25 (1)
unstack b12 b3 (1)
put-down b12 (1)
unstack b3 b22 (1)
put-down b3 (1)
unstack b22 b14 (1)
stack b22 b11 (1)
unstack b14 b27 (1)
put-down b14 (1)
unstack b27 b17 (1)
put-down b27 (1)
unstack b17 b8 (1)
stack b17 b15 (1)
pick-up b12 (1)
stack b12 b3 (1)
unstack b8 b16 (1)
put-down b8 (1)
unstack b16 b9 (1)
stack b16 b17 (1)
unstack b9 b5 (1)
put-down b9 (1)
pick-up b28 (1)
stack b28 b16 (1)
unstack b5 b2 (1)
stack b5 b30 (1)
unstack b2 b23 (1)
stack b2 b13 (1)
unstack b23 b6 (1)
stack b23 b18 (1)
unstack b6 b21 (1)
stack b6 b10 (1)
pick-up b14 (1)
stack b14 b21 (1)
pick-up b8 (1)
stack b8 b9 (1)
unstack b14 b21 (1)
put-down b14 (1)
pick-up b21 (1)
stack b21 b23 (1)
pick-up b14 (1)
stack b14 b21 (1)
unstack b19 b25 (1)
put-down b19 (1)
pick-up b25 (1)
stack b25 b6 (1)
pick-up b19 (1)
stack b19 b25 (1)
unstack b22 b11 (1)
put-down b22 (1)
pick-up b11 (1)
stack b11 b8 (1)
pick-up b22 (1)
stack b22 b11 (1)
unstack b24 b1 (1)
put-down b24 (1)
unstack b1 b29 (1)
put-down b1 (1)
pick-up b24 (1)
stack b24 b1 (1)
pick-up b29 (1)
stack b29 b2 (1)
unstack b24 b1 (1)
put-down b24 (1)
pick-up b1 (1)
stack b1 b29 (1)
pick-up b24 (1)
stack b24 b1 (1)
unstack b12 b3 (1)
put-down b12 (1)
pick-up b3 (1)
stack b3 b22 (1)
pick-up b12 (1)
stack b12 b3 (1)
unstack b28 b16 (1)
put-down b28 (1)
unstack b16 b17 (1)
put-down b16 (1)
pick-up b28 (1)
stack b28 b16 (1)
unstack b17 b15 (1)
put-down b17 (1)
pick-up b15 (1)
stack b15 b14 (1)
pick-up b17 (1)
stack b17 b15 (1)
unstack b28 b16 (1)
put-down b28 (1)
pick-up b16 (1)
stack b16 b17 (1)
pick-up b28 (1)
stack b28 b16 (1)
unstack b24 b1 (1)
put-down b24 (1)
unstack b1 b29 (1)
put-down b1 (1)
unstack b29 b2 (1)
put-down b29 (1)
pick-up b1 (1)
stack b1 b29 (1)
pick-up b24 (1)
stack b24 b1 (1)
unstack b2 b13 (1)
put-down b2 (1)
unstack b13 b26 (1)
put-down b13 (1)
pick-up b2 (1)
stack b2 b13 (1)
pick-up b26 (1)
stack b26 b19 (1)
unstack b2 b13 (1)
put-down b2 (1)
pick-up b13 (1)
stack b13 b26 (1)
pick-up b2 (1)
stack b2 b13 (1)
unstack b24 b1 (1)
put-down b24 (1)
unstack b1 b29 (1)
put-down b1 (1)
pick-up b24 (1)
stack b24 b1 (1)
pick-up b29 (1)
stack b29 b2 (1)
unstack b24 b1 (1)
put-down b24 (1)
pick-up b1 (1)
stack b1 b29 (1)
pick-up b24 (1)
stack b24 b1 (1)
unstack b28 b16 (1)
put-down b28 (1)
unstack b16 b17 (1)
put-down b16 (1)
pick-up b28 (1)
stack b28 b16 (1)
unstack b17 b15 (1)
put-down b17 (1)
unstack b15 b14 (1)
put-down b15 (1)
pick-up b17 (1)
stack b17 b15 (1)
unstack b28 b16 (1)
put-down b28 (1)
pick-up b16 (1)
stack b16 b17 (1)
pick-up b28 (1)
stack b28 b16 (1)
unstack b14 b21 (1)
put-down b14 (1)
unstack b21 b23 (1)
put-down b21 (1)
pick-up b14 (1)
stack b14 b21 (1)
unstack b23 b18 (1)
put-down b23 (1)
unstack b18 b7 (1)
put-down b18 (1)
pick-up b7 (1)
stack b7 b5 (1)
pick-up b18 (1)
stack b18 b7 (1)
pick-up b23 (1)
stack b23 b18 (1)
unstack b14 b21 (1)
put-down b14 (1)
pick-up b21 (1)
stack b21 b23 (1)
pick-up b14 (1)
stack b14 b21 (1)
unstack b28 b16 (1)
put-down b28 (1)
unstack b16 b17 (1)
put-down b16 (1)
pick-up b28 (1)
stack b28 b16 (1)
unstack b17 b15 (1)
put-down b17 (1)
pick-up b15 (1)
stack b15 b14 (1)
pick-up b17 (1)
stack b17 b15 (1)
unstack b28 b16 (1)
put-down b28 (1)
pick-up b16 (1)
stack b16 b17 (1)
pick-up b28 (1)
stack b28 b16 (1)
[t=0.0978463s, 28684 KB] Plan length: 232 step(s).
[t=0.0978463s, 28684 KB] Plan cost: 232
[t=0.0978463s, 28684 KB] Expanded 1346 state(s).
[t=0.0978463s, 28684 KB] Reopened 0 state(s).
[t=0.0978463s, 28684 KB] Evaluated 1347 state(s).
[t=0.0978463s, 28684 KB] Evaluations: 2694
[t=0.0978463s, 28684 KB] Generated 14802 state(s).
[t=0.0978463s, 28684 KB] Dead ends: 0 state(s).
[t=0.0978463s, 28684 KB] Number of registered states: 1347
[t=0.0978463s, 28684 KB] Int hash set load factor: 1347/2048 = 0.657715
[t=0.0978463s, 28684 KB] Int hash set resizes: 11
[t=0.0978463s, 28684 KB] Search time: 0.0581319s
[t=0.0978463s, 28684 KB] Total time: 0.0978463s
Solution found.
Peak memory: 28684 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.32s
