INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_25/bws_problem_25_12.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
2052 relevant atoms
1375 auxiliary atoms
3427 final queue length
5985 total queue pushes
Completing instantiation... [0.030s CPU, 0.021s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
26 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.007s wall-clock]
Building STRIPS to SAS dictionary... [0.010s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.002s wall-clock]
Translating task: [0.030s CPU, 0.031s wall-clock]
1850 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
50 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.022s wall-clock]
Reordering and filtering variables...
51 of 51 variables necessary.
26 of 51 mutex groups necessary.
1250 of 1250 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.008s wall-clock]
Translator variables: 51
Translator derived variables: 0
Translator facts: 702
Translator goal facts: 21
Translator mutex groups: 26
Translator total mutex groups size: 676
Translator operators: 1250
Translator axioms: 0
Translator task size: 10750
Translator peak memory: 38384 KB
Writing output... [0.010s CPU, 0.006s wall-clock]
Done! [0.120s CPU, 0.115s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=4.0487e-05s, 24488 KB] reading input...
[t=0.00380765s, 25632 KB] done reading input!
[t=0.00468219s, 26028 KB] Initializing landmark count heuristic...
[t=0.00471369s, 26028 KB] Generating landmark graph...
[t=0.00478682s, 26160 KB] Building a landmark graph with reasonable orders.
[t=0.00485417s, 26160 KB] Initializing Exploration...
[t=0.00521168s, 26532 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0196698s, 27060 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0197657s, 27060 KB] Landmarks generation time: 0.0149809s
[t=0.0197812s, 27060 KB] Discovered 106 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0197971s, 27060 KB] 347 edges
[t=0.0198063s, 27060 KB] approx. reasonable orders
[t=0.0229814s, 27060 KB] approx. obedient reasonable orders
[t=0.0230252s, 27060 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0230351s, 27060 KB] Landmarks generation time: 0.0183197s
[t=0.0230448s, 27060 KB] Discovered 106 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0230531s, 27060 KB] 399 edges
[t=0.0230616s, 27060 KB] Landmark graph generation time: 0.0183548s
[t=0.0230699s, 27060 KB] Landmark graph contains 106 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0230778s, 27060 KB] Landmark graph contains 399 orderings.
[t=0.0234998s, 27060 KB] Simplifying 4950 unary operators... done! [3750 unary operators]
[t=0.0246606s, 27060 KB] time to simplify: 0.00123239s
[t=0.0248056s, 27060 KB] Initializing additive heuristic...
[t=0.0248207s, 27060 KB] Initializing FF heuristic...
[t=0.02487s, 27060 KB] Building successor generator...done!
[t=0.0250912s, 27060 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0250994s, 27060 KB] time for successor generation creation: 0.000189287s
[t=0.0251107s, 27060 KB] Variables: 51
[t=0.0251186s, 27060 KB] FactPairs: 702
[t=0.0251263s, 27060 KB] Bytes per state: 20
[t=0.0252324s, 27060 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0252664s, 27060 KB] 49 initial landmarks, 21 goal landmarks
[t=0.0253207s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 57
[t=0.0253304s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0253389s, 27060 KB] g=0, 1 evaluated, 0 expanded
[t=0.0253537s, 27060 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 57
[t=0.0253624s, 27060 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0257217s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.025732s, 27060 KB] g=2, 11 evaluated, 10 expanded
[t=0.0257718s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0257803s, 27060 KB] g=2, 12 evaluated, 11 expanded
[t=0.0262905s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0262999s, 27060 KB] g=4, 29 evaluated, 28 expanded
[t=0.0264127s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0264236s, 27060 KB] g=4, 31 evaluated, 30 expanded
[t=0.0266816s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0266919s, 27060 KB] g=5, 39 evaluated, 38 expanded
[t=0.0268053s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.026814s, 27060 KB] g=6, 42 evaluated, 41 expanded
[t=0.0270816s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0270909s, 27060 KB] g=7, 51 evaluated, 50 expanded
[t=0.0271925s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0272014s, 27060 KB] g=8, 54 evaluated, 53 expanded
[t=0.0279008s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.027911s, 27060 KB] g=12, 77 evaluated, 76 expanded
[t=0.0281033s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0281131s, 27060 KB] g=10, 83 evaluated, 82 expanded
[t=0.0283257s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0283347s, 27060 KB] g=14, 90 evaluated, 89 expanded
[t=0.0287013s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0287112s, 27060 KB] g=16, 102 evaluated, 101 expanded
[t=0.0287943s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0288041s, 27060 KB] g=17, 104 evaluated, 103 expanded
[t=0.0291536s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0291627s, 27060 KB] g=19, 115 evaluated, 114 expanded
[t=0.0295541s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0295699s, 27060 KB] g=22, 127 evaluated, 126 expanded
[t=0.0301365s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0301472s, 27060 KB] g=22, 144 evaluated, 143 expanded
[t=0.03019s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0302s, 27060 KB] g=24, 145 evaluated, 144 expanded
[t=0.0309623s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0309783s, 27060 KB] g=26, 168 evaluated, 167 expanded
[t=0.0310528s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0310625s, 27060 KB] g=26, 170 evaluated, 169 expanded
[t=0.031506s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.031522s, 27060 KB] g=28, 184 evaluated, 183 expanded
[t=0.0317897s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0318022s, 27060 KB] g=28, 192 evaluated, 191 expanded
[t=0.0320348s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0320486s, 27060 KB] g=30, 199 evaluated, 198 expanded
[t=0.0322576s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0322727s, 27060 KB] g=29, 205 evaluated, 204 expanded
[t=0.0325404s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0325517s, 27060 KB] g=32, 213 evaluated, 212 expanded
[t=0.032815s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0328264s, 27060 KB] g=31, 221 evaluated, 220 expanded
[t=0.0330678s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0330799s, 27060 KB] g=34, 228 evaluated, 227 expanded
[t=0.033528s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0335409s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0335524s, 27060 KB] g=36, 242 evaluated, 241 expanded
[t=0.033626s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0336386s, 27060 KB] g=37, 244 evaluated, 243 expanded
[t=0.0339557s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0339758s, 27060 KB] g=39, 254 evaluated, 253 expanded
[t=0.034314s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0343402s, 27060 KB] g=42, 264 evaluated, 263 expanded
[t=0.0349666s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.034984s, 27060 KB] g=44, 280 evaluated, 279 expanded
[t=0.0355527s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0355637s, 27060 KB] g=46, 299 evaluated, 298 expanded
[t=0.0361108s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0361336s, 27060 KB] g=42, 316 evaluated, 315 expanded
[t=0.0362649s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0362742s, 27060 KB] g=48, 320 evaluated, 319 expanded
[t=0.0369343s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.036945s, 27060 KB] g=50, 342 evaluated, 341 expanded
[t=0.0376176s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0376285s, 27060 KB] g=52, 364 evaluated, 363 expanded
[t=0.0379736s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0379839s, 27060 KB] g=53, 375 evaluated, 374 expanded
[t=0.0384197s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0384326s, 27060 KB] g=55, 388 evaluated, 387 expanded
[t=0.0384756s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0384849s, 27060 KB] g=56, 389 evaluated, 388 expanded
[t=0.0394335s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.039449s, 27060 KB] g=58, 421 evaluated, 420 expanded
[t=0.0405691s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0405799s, 27060 KB] g=60, 458 evaluated, 457 expanded
[t=0.0414252s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0414359s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0414447s, 27060 KB] g=62, 487 evaluated, 486 expanded
[t=0.0417663s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0417769s, 27060 KB] g=64, 498 evaluated, 497 expanded
[t=0.0423048s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0423176s, 27060 KB] g=64, 515 evaluated, 514 expanded
[t=0.0427218s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0427503s, 27060 KB] g=66, 526 evaluated, 525 expanded
[t=0.0432109s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0432262s, 27060 KB] g=66, 541 evaluated, 540 expanded
[t=0.0435765s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0435897s, 27060 KB] g=68, 553 evaluated, 552 expanded
[t=0.0436863s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0436975s, 27060 KB] g=68, 556 evaluated, 555 expanded
[t=0.044063s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0440777s, 27060 KB] g=70, 568 evaluated, 567 expanded
[t=0.0443485s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0443667s, 27060 KB] g=72, 577 evaluated, 576 expanded
[t=0.0444064s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0444161s, 27060 KB] g=70, 578 evaluated, 577 expanded
[t=0.0449023s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0449335s, 27060 KB] g=72, 589 evaluated, 588 expanded
[t=0.0451653s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0451746s, 27060 KB] g=74, 596 evaluated, 595 expanded
[t=0.0452139s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0452355s, 27060 KB] g=72, 597 evaluated, 596 expanded
[t=0.0455426s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.045554s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0455641s, 27060 KB] g=74, 606 evaluated, 605 expanded
[t=0.0457213s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0457314s, 27060 KB] g=76, 611 evaluated, 610 expanded
[t=0.0459108s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.04592s, 27060 KB] g=78, 617 evaluated, 616 expanded
[t=0.051137s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0511537s, 27060 KB] g=102, 809 evaluated, 808 expanded
[t=0.0515106s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0515201s, 27060 KB] g=104, 823 evaluated, 822 expanded
[t=0.0516157s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0516247s, 27060 KB] g=105, 827 evaluated, 826 expanded
[t=0.0517672s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0517761s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0517837s, 27060 KB] g=106, 833 evaluated, 832 expanded
[t=0.0518563s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0518654s, 27060 KB] g=107, 836 evaluated, 835 expanded
[t=0.0518969s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0519052s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0519128s, 27060 KB] g=108, 837 evaluated, 836 expanded
[t=0.0520051s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0520134s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0520213s, 27060 KB] g=110, 841 evaluated, 840 expanded
[t=0.0522051s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0522136s, 27060 KB] g=114, 850 evaluated, 849 expanded
[t=0.0522788s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.052287s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0522946s, 27060 KB] g=116, 853 evaluated, 852 expanded
[t=0.0524619s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0524702s, 27060 KB] g=124, 863 evaluated, 862 expanded
[t=0.0525346s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.052543s, 27060 KB] g=128, 867 evaluated, 866 expanded
[t=0.0525602s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0525684s, 27060 KB] g=129, 868 evaluated, 867 expanded
[t=0.0525831s, 27060 KB] Solution found!
[t=0.0525945s, 27060 KB] Actual search time: 0.0273252s
pick-up b16 (1)
stack b16 b10 (1)
unstack b2 b12 (1)
stack b2 b17 (1)
unstack b12 b8 (1)
stack b12 b9 (1)
pick-up b24 (1)
stack b24 b12 (1)
unstack b25 b4 (1)
put-down b25 (1)
unstack b4 b18 (1)
stack b4 b8 (1)
unstack b18 b1 (1)
stack b18 b3 (1)
unstack b1 b23 (1)
put-down b1 (1)
unstack b16 b10 (1)
put-down b16 (1)
unstack b10 b7 (1)
stack b10 b23 (1)
pick-up b16 (1)
stack b16 b10 (1)
unstack b7 b14 (1)
put-down b7 (1)
unstack b14 b6 (1)
stack b14 b25 (1)
unstack b6 b20 (1)
put-down b6 (1)
unstack b20 b11 (1)
stack b20 b2 (1)
unstack b11 b15 (1)
stack b11 b1 (1)
pick-up b15 (1)
stack b15 b4 (1)
pick-up b7 (1)
stack b7 b11 (1)
unstack b16 b10 (1)
put-down b16 (1)
unstack b24 b12 (1)
put-down b24 (1)
unstack b10 b23 (1)
put-down b10 (1)
unstack b12 b9 (1)
put-down b12 (1)
unstack b14 b25 (1)
put-down b14 (1)
unstack b20 b2 (1)
put-down b20 (1)
unstack b2 b17 (1)
put-down b2 (1)
unstack b17 b21 (1)
stack b17 b6 (1)
unstack b21 b22 (1)
put-down b21 (1)
unstack b22 b13 (1)
stack b22 b7 (1)
pick-up b13 (1)
stack b13 b18 (1)
pick-up b2 (1)
stack b2 b17 (1)
pick-up b20 (1)
stack b20 b2 (1)
pick-up b23 (1)
stack b23 b13 (1)
pick-up b10 (1)
stack b10 b23 (1)
pick-up b16 (1)
stack b16 b10 (1)
pick-up b25 (1)
stack b25 b20 (1)
pick-up b14 (1)
stack b14 b25 (1)
pick-up b21 (1)
stack b21 b14 (1)
pick-up b12 (1)
stack b12 b9 (1)
pick-up b24 (1)
stack b24 b12 (1)
unstack b16 b10 (1)
put-down b16 (1)
unstack b10 b23 (1)
put-down b10 (1)
unstack b23 b13 (1)
put-down b23 (1)
pick-up b10 (1)
stack b10 b23 (1)
pick-up b16 (1)
stack b16 b10 (1)
unstack b24 b12 (1)
put-down b24 (1)
unstack b12 b9 (1)
put-down b12 (1)
unstack b13 b18 (1)
put-down b13 (1)
unstack b18 b3 (1)
put-down b18 (1)
pick-up b13 (1)
stack b13 b18 (1)
unstack b3 b5 (1)
put-down b3 (1)
unstack b5 b19 (1)
stack b5 b15 (1)
pick-up b9 (1)
stack b9 b19 (1)
pick-up b12 (1)
stack b12 b9 (1)
pick-up b24 (1)
stack b24 b12 (1)
pick-up b3 (1)
stack b3 b5 (1)
unstack b13 b18 (1)
put-down b13 (1)
pick-up b18 (1)
stack b18 b3 (1)
pick-up b13 (1)
stack b13 b18 (1)
unstack b16 b10 (1)
put-down b16 (1)
unstack b10 b23 (1)
put-down b10 (1)
pick-up b16 (1)
stack b16 b10 (1)
pick-up b23 (1)
stack b23 b13 (1)
unstack b16 b10 (1)
put-down b16 (1)
pick-up b10 (1)
stack b10 b23 (1)
pick-up b16 (1)
stack b16 b10 (1)
[t=0.0526039s, 27060 KB] Plan length: 130 step(s).
[t=0.0526039s, 27060 KB] Plan cost: 130
[t=0.0526039s, 27060 KB] Expanded 868 state(s).
[t=0.0526039s, 27060 KB] Reopened 0 state(s).
[t=0.0526039s, 27060 KB] Evaluated 869 state(s).
[t=0.0526039s, 27060 KB] Evaluations: 1738
[t=0.0526039s, 27060 KB] Generated 8943 state(s).
[t=0.0526039s, 27060 KB] Dead ends: 0 state(s).
[t=0.0526039s, 27060 KB] Number of registered states: 869
[t=0.0526039s, 27060 KB] Int hash set load factor: 869/1024 = 0.848633
[t=0.0526039s, 27060 KB] Int hash set resizes: 10
[t=0.0526039s, 27060 KB] Search time: 0.027372s
[t=0.0526039s, 27060 KB] Total time: 0.0526039s
Solution found.
Peak memory: 27060 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.22s
