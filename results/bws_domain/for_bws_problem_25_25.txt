INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_25/bws_problem_25_25.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
2052 relevant atoms
1375 auxiliary atoms
3427 final queue length
5983 total queue pushes
Completing instantiation... [0.020s CPU, 0.023s wall-clock]
Instantiating: [0.030s CPU, 0.037s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.010s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
26 uncovered facts
Choosing groups: [0.000s CPU, 0.002s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.009s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.040s CPU, 0.034s wall-clock]
1850 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
50 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.021s wall-clock]
Reordering and filtering variables...
51 of 51 variables necessary.
26 of 51 mutex groups necessary.
1250 of 1250 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.008s wall-clock]
Translator variables: 51
Translator derived variables: 0
Translator facts: 702
Translator goal facts: 20
Translator mutex groups: 26
Translator total mutex groups size: 676
Translator operators: 1250
Translator axioms: 0
Translator task size: 10749
Translator peak memory: 38384 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.120s CPU, 0.121s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.371e-05s, 24488 KB] reading input...
[t=0.00386883s, 25632 KB] done reading input!
[t=0.00481816s, 26028 KB] Initializing landmark count heuristic...
[t=0.0048535s, 26028 KB] Generating landmark graph...
[t=0.00492699s, 26160 KB] Building a landmark graph with reasonable orders.
[t=0.00500222s, 26160 KB] Initializing Exploration...
[t=0.00537898s, 26532 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0197171s, 27060 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0200454s, 27060 KB] Landmarks generation time: 0.0151519s
[t=0.020094s, 27060 KB] Discovered 107 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0201399s, 27060 KB] 404 edges
[t=0.0201551s, 27060 KB] approx. reasonable orders
[t=0.0229245s, 27060 KB] approx. obedient reasonable orders
[t=0.0230146s, 27060 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0230262s, 27060 KB] Landmarks generation time: 0.0181729s
[t=0.0230394s, 27060 KB] Discovered 107 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0230481s, 27060 KB] 435 edges
[t=0.0230577s, 27060 KB] Landmark graph generation time: 0.0182115s
[t=0.0230668s, 27060 KB] Landmark graph contains 107 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.023075s, 27060 KB] Landmark graph contains 435 orderings.
[t=0.0235682s, 27060 KB] Simplifying 4950 unary operators... done! [3750 unary operators]
[t=0.0247976s, 27060 KB] time to simplify: 0.00132435s
[t=0.0249804s, 27060 KB] Initializing additive heuristic...
[t=0.0250014s, 27060 KB] Initializing FF heuristic...
[t=0.0250557s, 27060 KB] Building successor generator...done!
[t=0.0253001s, 27060 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0253094s, 27060 KB] time for successor generation creation: 0.000209117s
[t=0.0253221s, 27060 KB] Variables: 51
[t=0.0253305s, 27060 KB] FactPairs: 702
[t=0.0253388s, 27060 KB] Bytes per state: 20
[t=0.0254224s, 27060 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0254555s, 27060 KB] 50 initial landmarks, 20 goal landmarks
[t=0.0255136s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 57
[t=0.0255238s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0255323s, 27060 KB] g=0, 1 evaluated, 0 expanded
[t=0.0255472s, 27060 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 57
[t=0.0255563s, 27060 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0257767s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0257887s, 27060 KB] g=1, 7 evaluated, 6 expanded
[t=0.0258317s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0258408s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0258501s, 27060 KB] g=2, 8 evaluated, 7 expanded
[t=0.02602s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0260292s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0260375s, 27060 KB] g=4, 13 evaluated, 12 expanded
[t=0.0262418s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0262509s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0262592s, 27060 KB] g=6, 19 evaluated, 18 expanded
[t=0.0264601s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0264698s, 27060 KB] g=8, 25 evaluated, 24 expanded
[t=0.0267682s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0267783s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0267893s, 27060 KB] g=10, 34 evaluated, 33 expanded
[t=0.0269896s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.026999s, 27060 KB] g=11, 40 evaluated, 39 expanded
[t=0.027043s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0270523s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0270662s, 27060 KB] g=12, 41 evaluated, 40 expanded
[t=0.0273187s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0273328s, 27060 KB] g=14, 48 evaluated, 47 expanded
[t=0.0278034s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0278137s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0278248s, 27060 KB] g=16, 62 evaluated, 61 expanded
[t=0.0280628s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0280729s, 27060 KB] g=18, 69 evaluated, 68 expanded
[t=0.0283335s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0283429s, 27060 KB] g=19, 77 evaluated, 76 expanded
[t=0.0283865s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0283956s, 27060 KB] g=20, 78 evaluated, 77 expanded
[t=0.0287594s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0287696s, 27060 KB] g=22, 89 evaluated, 88 expanded
[t=0.0291701s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0291969s, 27060 KB] g=24, 98 evaluated, 97 expanded
[t=0.0296778s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0297074s, 27060 KB] g=26, 108 evaluated, 107 expanded
[t=0.0303318s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.030369s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0303826s, 27060 KB] g=28, 124 evaluated, 123 expanded
[t=0.0306767s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.030694s, 27060 KB] g=30, 132 evaluated, 131 expanded
[t=0.0307728s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0307838s, 27060 KB] g=30, 134 evaluated, 133 expanded
[t=0.031177s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0311917s, 27060 KB] g=32, 146 evaluated, 145 expanded
[t=0.0318957s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0319248s, 27060 KB] g=36, 167 evaluated, 166 expanded
[t=0.0320941s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0321116s, 27060 KB] g=37, 171 evaluated, 170 expanded
[t=0.0321639s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0321734s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.032182s, 27060 KB] g=38, 172 evaluated, 171 expanded
[t=0.0324643s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0324774s, 27060 KB] g=40, 180 evaluated, 179 expanded
[t=0.0325241s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0325339s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0325423s, 27060 KB] g=40, 181 evaluated, 180 expanded
[t=0.0328417s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0328524s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0328893s, 27060 KB] g=42, 190 evaluated, 189 expanded
[t=0.0331574s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0331693s, 27060 KB] g=44, 198 evaluated, 197 expanded
[t=0.0332459s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0332558s, 27060 KB] g=44, 200 evaluated, 199 expanded
[t=0.0336246s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.033637s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0336457s, 27060 KB] g=46, 211 evaluated, 210 expanded
[t=0.033843s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0338525s, 27060 KB] g=48, 217 evaluated, 216 expanded
[t=0.0338969s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0339064s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0339148s, 27060 KB] g=48, 218 evaluated, 217 expanded
[t=0.0349882s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0350051s, 27060 KB] g=50, 252 evaluated, 251 expanded
[t=0.0352324s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0352453s, 27060 KB] g=52, 258 evaluated, 257 expanded
[t=0.0361568s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0361678s, 27060 KB] g=56, 287 evaluated, 286 expanded
[t=0.0363349s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0363445s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0363532s, 27060 KB] g=58, 292 evaluated, 291 expanded
[t=0.037009s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0370258s, 27060 KB] g=64, 313 evaluated, 312 expanded
[t=0.0385808s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0386016s, 27060 KB] g=72, 362 evaluated, 361 expanded
[t=0.0389549s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0389658s, 27060 KB] g=74, 373 evaluated, 372 expanded
[t=0.0391927s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0392085s, 27060 KB] g=76, 380 evaluated, 379 expanded
[t=0.039407s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0394168s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0394253s, 27060 KB] g=78, 386 evaluated, 385 expanded
[t=0.0398348s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0398449s, 27060 KB] g=82, 399 evaluated, 398 expanded
[t=0.0400662s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0400757s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0400844s, 27060 KB] g=84, 406 evaluated, 405 expanded
[t=0.0402799s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0402893s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0403015s, 27060 KB] g=86, 412 evaluated, 411 expanded
[t=0.0404702s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0404795s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0404883s, 27060 KB] g=88, 417 evaluated, 416 expanded
[t=0.0407361s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0407457s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0407548s, 27060 KB] g=92, 425 evaluated, 424 expanded
[t=0.0408875s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0408965s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.040905s, 27060 KB] g=94, 429 evaluated, 428 expanded
[t=0.0417383s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0417576s, 27060 KB] g=102, 457 evaluated, 456 expanded
[t=0.0418614s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0418713s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0418799s, 27060 KB] g=104, 460 evaluated, 459 expanded
[t=0.0437452s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0437571s, 27060 KB] g=126, 536 evaluated, 535 expanded
[t=0.0438344s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0438443s, 27060 KB] g=128, 539 evaluated, 538 expanded
[t=0.0440415s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.044051s, 27060 KB] g=136, 550 evaluated, 549 expanded
[t=0.04407s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.044079s, 27060 KB] g=137, 551 evaluated, 550 expanded
[t=0.0441014s, 27060 KB] Solution found!
[t=0.0441187s, 27060 KB] Actual search time: 0.0186608s
unstack b4 b24 (1)
stack b4 b15 (1)
unstack b21 b13 (1)
put-down b21 (1)
unstack b13 b25 (1)
stack b13 b24 (1)
unstack b18 b8 (1)
put-down b18 (1)
unstack b8 b5 (1)
put-down b8 (1)
unstack b5 b7 (1)
stack b5 b13 (1)
unstack b25 b20 (1)
put-down b25 (1)
unstack b20 b3 (1)
stack b20 b7 (1)
unstack b4 b15 (1)
put-down b4 (1)
unstack b15 b12 (1)
stack b15 b19 (1)
unstack b12 b2 (1)
put-down b12 (1)
unstack b2 b9 (1)
put-down b2 (1)
pick-up b18 (1)
stack b18 b3 (1)
pick-up b25 (1)
stack b25 b2 (1)
pick-up b4 (1)
stack b4 b15 (1)
unstack b20 b7 (1)
put-down b20 (1)
unstack b7 b1 (1)
put-down b7 (1)
unstack b1 b23 (1)
stack b1 b20 (1)
unstack b23 b11 (1)
stack b23 b18 (1)
unstack b11 b17 (1)
stack b11 b8 (1)
pick-up b10 (1)
stack b10 b11 (1)
unstack b17 b14 (1)
stack b17 b12 (1)
pick-up b14 (1)
stack b14 b1 (1)
unstack b17 b12 (1)
put-down b17 (1)
pick-up b9 (1)
stack b9 b17 (1)
pick-up b12 (1)
stack b12 b14 (1)
unstack b9 b17 (1)
put-down b9 (1)
pick-up b17 (1)
stack b17 b12 (1)
pick-up b9 (1)
stack b9 b17 (1)
unstack b23 b18 (1)
put-down b23 (1)
unstack b18 b3 (1)
put-down b18 (1)
pick-up b23 (1)
stack b23 b18 (1)
unstack b4 b15 (1)
put-down b4 (1)
unstack b15 b19 (1)
put-down b15 (1)
unstack b19 b6 (1)
put-down b19 (1)
unstack b6 b22 (1)
stack b6 b10 (1)
pick-up b7 (1)
stack b7 b22 (1)
pick-up b15 (1)
stack b15 b19 (1)
pick-up b4 (1)
stack b4 b15 (1)
unstack b7 b22 (1)
put-down b7 (1)
unstack b22 b16 (1)
put-down b22 (1)
pick-up b16 (1)
stack b16 b25 (1)
pick-up b3 (1)
stack b3 b16 (1)
pick-up b7 (1)
stack b7 b22 (1)
unstack b23 b18 (1)
put-down b23 (1)
pick-up b18 (1)
stack b18 b3 (1)
pick-up b23 (1)
stack b23 b18 (1)
unstack b4 b15 (1)
put-down b4 (1)
unstack b15 b19 (1)
put-down b15 (1)
pick-up b19 (1)
stack b19 b6 (1)
pick-up b15 (1)
stack b15 b19 (1)
pick-up b4 (1)
stack b4 b15 (1)
unstack b9 b17 (1)
put-down b9 (1)
unstack b17 b12 (1)
put-down b17 (1)
unstack b12 b14 (1)
put-down b12 (1)
pick-up b17 (1)
stack b17 b12 (1)
pick-up b9 (1)
stack b9 b17 (1)
unstack b14 b1 (1)
put-down b14 (1)
unstack b1 b20 (1)
put-down b1 (1)
pick-up b14 (1)
stack b14 b1 (1)
pick-up b20 (1)
stack b20 b7 (1)
unstack b14 b1 (1)
put-down b14 (1)
pick-up b1 (1)
stack b1 b20 (1)
pick-up b14 (1)
stack b14 b1 (1)
unstack b9 b17 (1)
put-down b9 (1)
unstack b17 b12 (1)
put-down b17 (1)
pick-up b12 (1)
stack b12 b14 (1)
pick-up b17 (1)
stack b17 b12 (1)
pick-up b9 (1)
stack b9 b17 (1)
[t=0.0441292s, 27060 KB] Plan length: 138 step(s).
[t=0.0441292s, 27060 KB] Plan cost: 138
[t=0.0441292s, 27060 KB] Expanded 551 state(s).
[t=0.0441292s, 27060 KB] Reopened 0 state(s).
[t=0.0441292s, 27060 KB] Evaluated 552 state(s).
[t=0.0441292s, 27060 KB] Evaluations: 1104
[t=0.0441292s, 27060 KB] Generated 5632 state(s).
[t=0.0441292s, 27060 KB] Dead ends: 0 state(s).
[t=0.0441292s, 27060 KB] Number of registered states: 552
[t=0.0441292s, 27060 KB] Int hash set load factor: 552/1024 = 0.539062
[t=0.0441292s, 27060 KB] Int hash set resizes: 10
[t=0.0441292s, 27060 KB] Search time: 0.0187072s
[t=0.0441292s, 27060 KB] Total time: 0.0441292s
Solution found.
Peak memory: 27060 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.20s
