INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_30/bws_problem_30_97.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.018s wall-clock]
2912 relevant atoms
1950 auxiliary atoms
4862 final queue length
8525 total queue pushes
Completing instantiation... [0.030s CPU, 0.032s wall-clock]
Instantiating: [0.050s CPU, 0.052s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.002s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
31 uncovered facts
Choosing groups: [0.000s CPU, 0.002s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.010s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.001s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.002s wall-clock]
Translating task: [0.050s CPU, 0.051s wall-clock]
2670 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
60 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.022s wall-clock]
Reordering and filtering variables...
61 of 61 variables necessary.
31 of 61 mutex groups necessary.
1800 of 1800 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.012s wall-clock]
Translator variables: 61
Translator derived variables: 0
Translator facts: 992
Translator goal facts: 25
Translator mutex groups: 31
Translator total mutex groups size: 961
Translator operators: 1800
Translator axioms: 0
Translator task size: 15449
Translator peak memory: 41336 KB
Writing output... [0.010s CPU, 0.010s wall-clock]
Done! [0.170s CPU, 0.167s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.7463e-05s, 24488 KB] reading input...
[t=0.00543648s, 26364 KB] done reading input!
[t=0.00665123s, 26760 KB] Initializing landmark count heuristic...
[t=0.00669459s, 26760 KB] Generating landmark graph...
[t=0.00678959s, 26892 KB] Building a landmark graph with reasonable orders.
[t=0.00688281s, 27024 KB] Initializing Exploration...
[t=0.00743106s, 27316 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0353097s, 28504 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0354489s, 28504 KB] Landmarks generation time: 0.0286696s
[t=0.0354754s, 28504 KB] Discovered 133 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0354957s, 28504 KB] 1036 edges
[t=0.035506s, 28504 KB] approx. reasonable orders
[t=0.0385285s, 28504 KB] approx. obedient reasonable orders
[t=0.0386204s, 28504 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0386312s, 28504 KB] Landmarks generation time: 0.0319345s
[t=0.0386416s, 28504 KB] Discovered 133 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0386499s, 28504 KB] 1066 edges
[t=0.0386584s, 28504 KB] Landmark graph generation time: 0.0319709s
[t=0.038667s, 28504 KB] Landmark graph contains 133 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0386748s, 28504 KB] Landmark graph contains 1066 orderings.
[t=0.0395198s, 28532 KB] Simplifying 7140 unary operators... done! [5400 unary operators]
[t=0.0414163s, 28532 KB] time to simplify: 0.00193465s
[t=0.041644s, 28532 KB] Initializing additive heuristic...
[t=0.0416738s, 28532 KB] Initializing FF heuristic...
[t=0.0417567s, 28532 KB] Building successor generator...done!
[t=0.0421681s, 28720 KB] peak memory difference for successor generator creation: 188 KB
[t=0.0421777s, 28720 KB] time for successor generation creation: 0.000379461s
[t=0.0421959s, 28720 KB] Variables: 61
[t=0.0422047s, 28720 KB] FactPairs: 992
[t=0.0422126s, 28720 KB] Bytes per state: 24
[t=0.0423032s, 28720 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0423391s, 28720 KB] 60 initial landmarks, 25 goal landmarks
[t=0.0424182s, 28720 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 73
[t=0.0424277s, 28720 KB] New best heuristic value for ff(transform = adapt_costs(one)): 52
[t=0.0424366s, 28720 KB] g=0, 1 evaluated, 0 expanded
[t=0.0424503s, 28720 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 73
[t=0.042459s, 28720 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 52
[t=0.042651s, 28720 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 72
[t=0.0426606s, 28720 KB] New best heuristic value for ff(transform = adapt_costs(one)): 51
[t=0.0426688s, 28720 KB] g=2, 5 evaluated, 4 expanded
[t=0.0428504s, 28720 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 71
[t=0.04286s, 28720 KB] New best heuristic value for ff(transform = adapt_costs(one)): 50
[t=0.0428685s, 28720 KB] g=4, 9 evaluated, 8 expanded
[t=0.0429699s, 28720 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 70
[t=0.0429801s, 28720 KB] g=5, 11 evaluated, 10 expanded
[t=0.0431779s, 28720 KB] New best heuristic value for ff(transform = adapt_costs(one)): 49
[t=0.0431876s, 28720 KB] g=6, 15 evaluated, 14 expanded
[t=0.0433169s, 28720 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 69
[t=0.0433257s, 28720 KB] g=7, 18 evaluated, 17 expanded
[t=0.0436189s, 28720 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 68
[t=0.0436356s, 28720 KB] g=10, 24 evaluated, 23 expanded
[t=0.0438923s, 28720 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 67
[t=0.0439016s, 28720 KB] g=12, 30 evaluated, 29 expanded
[t=0.0441931s, 28720 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 66
[t=0.0442026s, 28720 KB] New best heuristic value for ff(transform = adapt_costs(one)): 48
[t=0.0442113s, 28720 KB] g=14, 37 evaluated, 36 expanded
[t=0.044736s, 28720 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 65
[t=0.0447524s, 28720 KB] g=16, 50 evaluated, 49 expanded
[t=0.0448451s, 28720 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 64
[t=0.0448542s, 28720 KB] New best heuristic value for ff(transform = adapt_costs(one)): 46
[t=0.0448626s, 28720 KB] g=16, 52 evaluated, 51 expanded
[t=0.0451093s, 28720 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 63
[t=0.0451184s, 28720 KB] g=18, 58 evaluated, 57 expanded
[t=0.0453694s, 28720 KB] New best heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0453781s, 28720 KB] g=20, 64 evaluated, 63 expanded
[t=0.0454327s, 28720 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 62
[t=0.045442s, 28720 KB] g=20, 65 evaluated, 64 expanded
[t=0.0458466s, 28720 KB] New best heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.0458561s, 28720 KB] g=22, 75 evaluated, 74 expanded
[t=0.0461542s, 28720 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0461639s, 28720 KB] g=24, 82 evaluated, 81 expanded
[t=0.0463365s, 28720 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 61
[t=0.0463457s, 28720 KB] g=26, 86 evaluated, 85 expanded
[t=0.0470198s, 28720 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 60
[t=0.0470697s, 28720 KB] g=30, 102 evaluated, 101 expanded
[t=0.0473678s, 28720 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 58
[t=0.0473772s, 28720 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0473854s, 28720 KB] g=30, 109 evaluated, 108 expanded
[t=0.0476804s, 28720 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 57
[t=0.0476904s, 28720 KB] g=32, 116 evaluated, 115 expanded
[t=0.0477514s, 28720 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0477621s, 28720 KB] g=32, 117 evaluated, 116 expanded
[t=0.0482131s, 28720 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0482225s, 28720 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0482307s, 28720 KB] g=34, 128 evaluated, 127 expanded
[t=0.0484558s, 28720 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0484645s, 28720 KB] g=36, 133 evaluated, 132 expanded
[t=0.0487224s, 28720 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0487315s, 28720 KB] g=38, 139 evaluated, 138 expanded
[t=0.0487849s, 28720 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0487938s, 28720 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0488018s, 28720 KB] g=38, 140 evaluated, 139 expanded
[t=0.049068s, 28720 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0490776s, 28720 KB] g=40, 146 evaluated, 145 expanded
[t=0.0491324s, 28720 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0491414s, 28720 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0491495s, 28720 KB] g=40, 147 evaluated, 146 expanded
[t=0.0494659s, 28720 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0494776s, 28720 KB] g=42, 154 evaluated, 153 expanded
[t=0.0495365s, 28720 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.049554s, 28720 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0495624s, 28720 KB] g=42, 155 evaluated, 154 expanded
[t=0.0498273s, 28720 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0498371s, 28720 KB] g=44, 161 evaluated, 160 expanded
[t=0.0504015s, 28720 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.050412s, 28720 KB] g=45, 174 evaluated, 173 expanded
[t=0.0504706s, 28720 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0504798s, 28720 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0504882s, 28720 KB] g=46, 175 evaluated, 174 expanded
[t=0.0508006s, 28720 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0508104s, 28720 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0508198s, 28720 KB] g=48, 182 evaluated, 181 expanded
[t=0.0510971s, 28720 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0511092s, 28720 KB] g=49, 188 evaluated, 187 expanded
[t=0.0511648s, 28720 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.051174s, 28720 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0511824s, 28720 KB] g=50, 189 evaluated, 188 expanded
[t=0.0514955s, 28720 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0515058s, 28720 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0515184s, 28720 KB] g=52, 196 evaluated, 195 expanded
[t=0.0516687s, 28720 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0516806s, 28720 KB] g=53, 199 evaluated, 198 expanded
[t=0.0517345s, 28720 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0517437s, 28720 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0517528s, 28720 KB] g=54, 200 evaluated, 199 expanded
[t=0.0523616s, 28720 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0523727s, 28720 KB] g=57, 214 evaluated, 213 expanded
[t=0.0524272s, 28720 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0524371s, 28720 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0524455s, 28720 KB] g=58, 215 evaluated, 214 expanded
[t=0.0528413s, 28720 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0528534s, 28720 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.052865s, 28720 KB] g=60, 224 evaluated, 223 expanded
[t=0.0532076s, 28720 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0532214s, 28720 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0532302s, 28720 KB] g=62, 232 evaluated, 231 expanded
[t=0.0532859s, 28720 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0532962s, 28720 KB] g=63, 233 evaluated, 232 expanded
[t=0.0533508s, 28720 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0533694s, 28720 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0533779s, 28720 KB] g=64, 234 evaluated, 233 expanded
[t=0.0536783s, 28720 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0536924s, 28720 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.053704s, 28720 KB] g=66, 241 evaluated, 240 expanded
[t=0.0542549s, 28720 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0542689s, 28720 KB] g=70, 254 evaluated, 253 expanded
[t=0.0545024s, 28720 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0545157s, 28720 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.054524s, 28720 KB] g=72, 259 evaluated, 258 expanded
[t=0.0550112s, 28720 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0550372s, 28720 KB] g=75, 270 evaluated, 269 expanded
[t=0.0558485s, 28720 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.055859s, 28720 KB] g=80, 289 evaluated, 288 expanded
[t=0.0563731s, 28720 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0563834s, 28720 KB] g=84, 301 evaluated, 300 expanded
[t=0.0565573s, 28720 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0565688s, 28720 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0565772s, 28720 KB] g=86, 305 evaluated, 304 expanded
[t=0.0656183s, 28720 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0656779s, 28720 KB] g=101, 518 evaluated, 517 expanded
[t=0.0657349s, 28720 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0657456s, 28720 KB] g=102, 519 evaluated, 518 expanded
[t=0.0660034s, 28720 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0660131s, 28720 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0660228s, 28720 KB] g=104, 525 evaluated, 524 expanded
[t=0.0662333s, 28720 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0662433s, 28720 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0662517s, 28720 KB] g=106, 530 evaluated, 529 expanded
[t=0.0669238s, 28720 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0669419s, 28720 KB] g=110, 546 evaluated, 545 expanded
[t=0.0671038s, 28720 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0671133s, 28720 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0671217s, 28720 KB] g=112, 550 evaluated, 549 expanded
[t=0.0753434s, 28720 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0753759s, 28720 KB] g=130, 760 evaluated, 759 expanded
[t=0.07554s, 28720 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0755503s, 28720 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0755592s, 28720 KB] g=132, 764 evaluated, 763 expanded
[t=0.0766093s, 28720 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0766343s, 28720 KB] g=140, 791 evaluated, 790 expanded
[t=0.0769678s, 28720 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0769775s, 28720 KB] g=144, 800 evaluated, 799 expanded
[t=0.0770971s, 28720 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.077107s, 28720 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0771178s, 28720 KB] g=146, 803 evaluated, 802 expanded
[t=0.0791099s, 28720 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0791306s, 28720 KB] g=164, 866 evaluated, 865 expanded
[t=0.0792375s, 28720 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0792511s, 28720 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0792592s, 28720 KB] g=166, 869 evaluated, 868 expanded
[t=0.0795297s, 28720 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0795402s, 28720 KB] g=174, 880 evaluated, 879 expanded
[t=0.0796309s, 28720 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0796401s, 28720 KB] g=178, 884 evaluated, 883 expanded
[t=0.079662s, 28720 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0796715s, 28720 KB] g=179, 885 evaluated, 884 expanded
[t=0.0796891s, 28720 KB] Solution found!
[t=0.0797027s, 28720 KB] Actual search time: 0.0373609s
unstack b10 b20 (1)
put-down b10 (1)
unstack b20 b25 (1)
put-down b20 (1)
unstack b23 b21 (1)
put-down b23 (1)
unstack b25 b3 (1)
put-down b25 (1)
unstack b29 b6 (1)
put-down b29 (1)
unstack b6 b9 (1)
put-down b6 (1)
unstack b9 b16 (1)
put-down b9 (1)
pick-up b25 (1)
stack b25 b9 (1)
unstack b16 b11 (1)
put-down b16 (1)
unstack b11 b15 (1)
stack b11 b6 (1)
pick-up b15 (1)
stack b15 b16 (1)
pick-up b21 (1)
stack b21 b15 (1)
unstack b3 b12 (1)
put-down b3 (1)
unstack b12 b24 (1)
put-down b12 (1)
unstack b24 b4 (1)
stack b24 b10 (1)
pick-up b3 (1)
stack b3 b12 (1)
unstack b4 b14 (1)
stack b4 b21 (1)
unstack b14 b18 (1)
put-down b14 (1)
unstack b18 b26 (1)
stack b18 b3 (1)
unstack b26 b28 (1)
stack b26 b23 (1)
unstack b28 b27 (1)
stack b28 b29 (1)
unstack b27 b5 (1)
put-down b27 (1)
unstack b5 b17 (1)
stack b5 b11 (1)
unstack b17 b8 (1)
stack b17 b4 (1)
unstack b8 b13 (1)
stack b8 b17 (1)
unstack b13 b22 (1)
stack b13 b28 (1)
unstack b22 b2 (1)
stack b22 b14 (1)
unstack b2 b19 (1)
put-down b2 (1)
unstack b19 b7 (1)
stack b19 b20 (1)
pick-up b2 (1)
stack b2 b19 (1)
unstack b7 b1 (1)
stack b7 b18 (1)
unstack b1 b30 (1)
stack b1 b2 (1)
pick-up b27 (1)
stack b27 b30 (1)
unstack b22 b14 (1)
put-down b22 (1)
pick-up b14 (1)
stack b14 b7 (1)
pick-up b22 (1)
stack b22 b14 (1)
unstack b5 b11 (1)
put-down b5 (1)
unstack b11 b6 (1)
put-down b11 (1)
pick-up b5 (1)
stack b5 b11 (1)
pick-up b6 (1)
stack b6 b13 (1)
unstack b5 b11 (1)
put-down b5 (1)
pick-up b11 (1)
stack b11 b6 (1)
pick-up b5 (1)
stack b5 b11 (1)
unstack b8 b17 (1)
put-down b8 (1)
unstack b17 b4 (1)
put-down b17 (1)
pick-up b8 (1)
stack b8 b17 (1)
unstack b4 b21 (1)
put-down b4 (1)
unstack b21 b15 (1)
put-down b21 (1)
unstack b15 b16 (1)
put-down b15 (1)
pick-up b16 (1)
stack b16 b24 (1)
pick-up b15 (1)
stack b15 b16 (1)
pick-up b21 (1)
stack b21 b15 (1)
pick-up b4 (1)
stack b4 b21 (1)
unstack b8 b17 (1)
put-down b8 (1)
pick-up b17 (1)
stack b17 b4 (1)
pick-up b8 (1)
stack b8 b17 (1)
unstack b22 b14 (1)
put-down b22 (1)
unstack b14 b7 (1)
put-down b14 (1)
unstack b7 b18 (1)
put-down b7 (1)
pick-up b14 (1)
stack b14 b7 (1)
pick-up b22 (1)
stack b22 b14 (1)
unstack b18 b3 (1)
put-down b18 (1)
unstack b3 b12 (1)
put-down b3 (1)
pick-up b12 (1)
stack b12 b27 (1)
pick-up b3 (1)
stack b3 b12 (1)
pick-up b18 (1)
stack b18 b3 (1)
unstack b22 b14 (1)
put-down b22 (1)
unstack b14 b7 (1)
put-down b14 (1)
pick-up b22 (1)
stack b22 b14 (1)
pick-up b7 (1)
stack b7 b18 (1)
unstack b22 b14 (1)
put-down b22 (1)
pick-up b14 (1)
stack b14 b7 (1)
pick-up b22 (1)
stack b22 b14 (1)
unstack b5 b11 (1)
put-down b5 (1)
unstack b11 b6 (1)
put-down b11 (1)
unstack b6 b13 (1)
put-down b6 (1)
pick-up b11 (1)
stack b11 b6 (1)
pick-up b5 (1)
stack b5 b11 (1)
unstack b13 b28 (1)
put-down b13 (1)
unstack b28 b29 (1)
put-down b28 (1)
pick-up b29 (1)
stack b29 b26 (1)
pick-up b28 (1)
stack b28 b29 (1)
pick-up b13 (1)
stack b13 b28 (1)
unstack b5 b11 (1)
put-down b5 (1)
unstack b11 b6 (1)
put-down b11 (1)
pick-up b5 (1)
stack b5 b11 (1)
pick-up b6 (1)
stack b6 b13 (1)
unstack b5 b11 (1)
put-down b5 (1)
pick-up b11 (1)
stack b11 b6 (1)
pick-up b5 (1)
stack b5 b11 (1)
[t=0.0797124s, 28720 KB] Plan length: 180 step(s).
[t=0.0797124s, 28720 KB] Plan cost: 180
[t=0.0797124s, 28720 KB] Expanded 885 state(s).
[t=0.0797124s, 28720 KB] Reopened 0 state(s).
[t=0.0797124s, 28720 KB] Evaluated 886 state(s).
[t=0.0797124s, 28720 KB] Evaluations: 1772
[t=0.0797124s, 28720 KB] Generated 8996 state(s).
[t=0.0797124s, 28720 KB] Dead ends: 0 state(s).
[t=0.0797124s, 28720 KB] Number of registered states: 886
[t=0.0797124s, 28720 KB] Int hash set load factor: 886/1024 = 0.865234
[t=0.0797124s, 28720 KB] Int hash set resizes: 10
[t=0.0797124s, 28720 KB] Search time: 0.0374095s
[t=0.0797124s, 28720 KB] Total time: 0.0797124s
Solution found.
Peak memory: 28720 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.30s
