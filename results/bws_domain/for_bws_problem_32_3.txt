INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_32/bws_problem_32_3.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.019s wall-clock]
3298 relevant atoms
2208 auxiliary atoms
5506 final queue length
9672 total queue pushes
Completing instantiation... [0.050s CPU, 0.042s wall-clock]
Instantiating: [0.070s CPU, 0.063s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.002s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
33 uncovered facts
Choosing groups: [0.010s CPU, 0.002s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.010s CPU, 0.011s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.001s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.002s wall-clock]
Translating task: [0.050s CPU, 0.054s wall-clock]
3040 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
64 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.024s wall-clock]
Reordering and filtering variables...
65 of 65 variables necessary.
33 of 65 mutex groups necessary.
2048 of 2048 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.020s CPU, 0.013s wall-clock]
Translator variables: 65
Translator derived variables: 0
Translator facts: 1122
Translator goal facts: 29
Translator mutex groups: 33
Translator total mutex groups size: 1089
Translator operators: 2048
Translator axioms: 0
Translator task size: 17569
Translator peak memory: 42624 KB
Writing output... [0.020s CPU, 0.016s wall-clock]
Done! [0.190s CPU, 0.190s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.0554e-05s, 24488 KB] reading input...
[t=0.00644119s, 26784 KB] done reading input!
[t=0.00735198s, 27180 KB] Initializing landmark count heuristic...
[t=0.00738579s, 27180 KB] Generating landmark graph...
[t=0.00748868s, 27312 KB] Building a landmark graph with reasonable orders.
[t=0.00759266s, 27312 KB] Initializing Exploration...
[t=0.00816692s, 27768 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0395548s, 28692 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0397209s, 28692 KB] Landmarks generation time: 0.032238s
[t=0.0397472s, 28692 KB] Discovered 146 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.039769s, 28692 KB] 713 edges
[t=0.0397792s, 28692 KB] approx. reasonable orders
[t=0.0479161s, 28692 KB] approx. obedient reasonable orders
[t=0.0480172s, 28692 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0480304s, 28692 KB] Landmarks generation time: 0.0406431s
[t=0.0480412s, 28692 KB] Discovered 146 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0480499s, 28692 KB] 788 edges
[t=0.0480586s, 28692 KB] Landmark graph generation time: 0.0406799s
[t=0.0480672s, 28692 KB] Landmark graph contains 146 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0480753s, 28692 KB] Landmark graph contains 788 orderings.
[t=0.0487863s, 28724 KB] Simplifying 8128 unary operators... done! [6144 unary operators]
[t=0.0508602s, 28856 KB] time to simplify: 0.00209323s
[t=0.0510039s, 28856 KB] Initializing additive heuristic...
[t=0.0510248s, 28856 KB] Initializing FF heuristic...
[t=0.0510871s, 28856 KB] Building successor generator...done!
[t=0.0514611s, 28856 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0514701s, 28856 KB] time for successor generation creation: 0.000337991s
[t=0.0514836s, 28856 KB] Variables: 65
[t=0.0514916s, 28856 KB] FactPairs: 1122
[t=0.0514994s, 28856 KB] Bytes per state: 32
[t=0.0515852s, 28856 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0516187s, 28856 KB] 64 initial landmarks, 29 goal landmarks
[t=0.0516929s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 82
[t=0.0517021s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 59
[t=0.0517107s, 28856 KB] g=0, 1 evaluated, 0 expanded
[t=0.0517253s, 28856 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 82
[t=0.0517337s, 28856 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 59
[t=0.052074s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 81
[t=0.0520837s, 28856 KB] g=2, 8 evaluated, 7 expanded
[t=0.0525257s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 58
[t=0.052537s, 28856 KB] g=2, 17 evaluated, 16 expanded
[t=0.0530138s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 80
[t=0.0530231s, 28856 KB] g=4, 27 evaluated, 26 expanded
[t=0.0535814s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 79
[t=0.0535907s, 28856 KB] g=6, 39 evaluated, 38 expanded
[t=0.0540489s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 78
[t=0.0540584s, 28856 KB] g=8, 49 evaluated, 48 expanded
[t=0.0547053s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 77
[t=0.054715s, 28856 KB] g=10, 63 evaluated, 62 expanded
[t=0.0553343s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 57
[t=0.0553571s, 28856 KB] g=12, 76 evaluated, 75 expanded
[t=0.0554747s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 76
[t=0.0554853s, 28856 KB] g=12, 78 evaluated, 77 expanded
[t=0.0562036s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 75
[t=0.0562253s, 28856 KB] g=14, 93 evaluated, 92 expanded
[t=0.0570614s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 74
[t=0.0570776s, 28856 KB] g=16, 111 evaluated, 110 expanded
[t=0.0580081s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 73
[t=0.058029s, 28856 KB] g=18, 131 evaluated, 130 expanded
[t=0.0582478s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 72
[t=0.058261s, 28856 KB] g=19, 135 evaluated, 134 expanded
[t=0.0583228s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 56
[t=0.0583325s, 28856 KB] g=16, 136 evaluated, 135 expanded
[t=0.059347s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 55
[t=0.059361s, 28856 KB] g=18, 158 evaluated, 157 expanded
[t=0.0595089s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 69
[t=0.0595211s, 28856 KB] g=22, 161 evaluated, 160 expanded
[t=0.0609045s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 68
[t=0.0609291s, 28856 KB] g=24, 188 evaluated, 187 expanded
[t=0.0621667s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 67
[t=0.0621859s, 28856 KB] g=26, 214 evaluated, 213 expanded
[t=0.0629786s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 54
[t=0.0630048s, 28856 KB] g=24, 228 evaluated, 227 expanded
[t=0.0637503s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 66
[t=0.0637613s, 28856 KB] g=28, 244 evaluated, 243 expanded
[t=0.0645262s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 65
[t=0.0645393s, 28856 KB] g=29, 260 evaluated, 259 expanded
[t=0.0654246s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 53
[t=0.0654387s, 28856 KB] g=28, 279 evaluated, 278 expanded
[t=0.0663766s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 64
[t=0.0663903s, 28856 KB] g=32, 299 evaluated, 298 expanded
[t=0.067813s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 52
[t=0.0678235s, 28856 KB] g=30, 330 evaluated, 329 expanded
[t=0.0686303s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 62
[t=0.0686427s, 28856 KB] g=34, 347 evaluated, 346 expanded
[t=0.0709855s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 60
[t=0.0710023s, 28856 KB] g=36, 398 evaluated, 397 expanded
[t=0.0731061s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 58
[t=0.0731224s, 28856 KB] g=38, 444 evaluated, 443 expanded
[t=0.0734107s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 51
[t=0.0734223s, 28856 KB] g=36, 450 evaluated, 449 expanded
[t=0.0746907s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0747134s, 28856 KB] g=40, 477 evaluated, 476 expanded
[t=0.0764968s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.076522s, 28856 KB] g=42, 515 evaluated, 514 expanded
[t=0.0776798s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0776901s, 28856 KB] g=44, 540 evaluated, 539 expanded
[t=0.0787708s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.078783s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 50
[t=0.0788005s, 28856 KB] g=46, 564 evaluated, 563 expanded
[t=0.0792993s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 49
[t=0.0793094s, 28856 KB] g=48, 575 evaluated, 574 expanded
[t=0.0802623s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 48
[t=0.080277s, 28856 KB] g=50, 596 evaluated, 595 expanded
[t=0.0817276s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 47
[t=0.0817412s, 28856 KB] g=52, 628 evaluated, 627 expanded
[t=0.0823022s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.082313s, 28856 KB] g=49, 640 evaluated, 639 expanded
[t=0.0824202s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0824296s, 28856 KB] g=50, 642 evaluated, 641 expanded
[t=0.0833236s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0833373s, 28856 KB] g=52, 661 evaluated, 660 expanded
[t=0.0844899s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0845039s, 28856 KB] g=54, 685 evaluated, 684 expanded
[t=0.0855453s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 46
[t=0.0855597s, 28856 KB] g=56, 707 evaluated, 706 expanded
[t=0.0858457s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0858556s, 28856 KB] g=56, 713 evaluated, 712 expanded
[t=0.0866489s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0866705s, 28856 KB] g=58, 730 evaluated, 729 expanded
[t=0.0871526s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0871621s, 28856 KB] g=58, 740 evaluated, 739 expanded
[t=0.0876845s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.0876942s, 28856 KB] g=60, 751 evaluated, 750 expanded
[t=0.0885714s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.088585s, 28856 KB] g=62, 770 evaluated, 769 expanded
[t=0.0887806s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0887896s, 28856 KB] g=60, 774 evaluated, 773 expanded
[t=0.0893759s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0894005s, 28856 KB] g=64, 787 evaluated, 786 expanded
[t=0.0901569s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0901755s, 28856 KB] g=66, 803 evaluated, 802 expanded
[t=0.0925595s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0925826s, 28856 KB] g=62, 852 evaluated, 851 expanded
[t=0.0937125s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.093726s, 28856 KB] g=64, 876 evaluated, 875 expanded
[t=0.0950149s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0950329s, 28856 KB] g=66, 903 evaluated, 902 expanded
[t=0.105752s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.105821s, 28856 KB] g=68, 1135 evaluated, 1134 expanded
[t=0.105984s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.105998s, 28856 KB] g=76, 1138 evaluated, 1137 expanded
[t=0.106624s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.106636s, 28856 KB] g=78, 1151 evaluated, 1150 expanded
[t=0.110483s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.110506s, 28856 KB] g=86, 1233 evaluated, 1232 expanded
[t=0.115342s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.115368s, 28856 KB] g=90, 1334 evaluated, 1333 expanded
[t=0.115938s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.115948s, 28856 KB] g=92, 1346 evaluated, 1345 expanded
[t=0.117194s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.117209s, 28856 KB] g=96, 1372 evaluated, 1371 expanded
[t=0.117734s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.117744s, 28856 KB] g=98, 1383 evaluated, 1382 expanded
[t=0.118144s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.118155s, 28856 KB] g=100, 1390 evaluated, 1389 expanded
[t=0.11861s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.118621s, 28856 KB] g=102, 1399 evaluated, 1398 expanded
[t=0.119261s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.119271s, 28856 KB] g=106, 1413 evaluated, 1412 expanded
[t=0.119774s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.119783s, 28856 KB] g=108, 1424 evaluated, 1423 expanded
[t=0.120534s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.120572s, 28856 KB] g=110, 1440 evaluated, 1439 expanded
[t=0.121448s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.121468s, 28856 KB] g=112, 1458 evaluated, 1457 expanded
[t=0.122164s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.122181s, 28856 KB] g=110, 1473 evaluated, 1472 expanded
[t=0.122616s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.122631s, 28856 KB] g=114, 1482 evaluated, 1481 expanded
[t=0.123463s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.123479s, 28856 KB] g=116, 1500 evaluated, 1499 expanded
[t=0.125088s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.125117s, 28856 KB] g=118, 1534 evaluated, 1533 expanded
[t=0.125718s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.125736s, 28856 KB] g=114, 1546 evaluated, 1545 expanded
[t=0.126397s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.126422s, 28856 KB] g=116, 1558 evaluated, 1557 expanded
[t=0.126754s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.126767s, 28856 KB] g=120, 1565 evaluated, 1564 expanded
[t=0.127566s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.127584s, 28856 KB] g=122, 1583 evaluated, 1582 expanded
[t=0.128683s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.128718s, 28856 KB] g=124, 1607 evaluated, 1606 expanded
[t=0.129466s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.129492s, 28856 KB] g=126, 1623 evaluated, 1622 expanded
[t=0.130163s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.130173s, 28856 KB] g=128, 1638 evaluated, 1637 expanded
[t=0.130926s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.130945s, 28856 KB] g=130, 1653 evaluated, 1652 expanded
[t=0.131495s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.131508s, 28856 KB] g=132, 1665 evaluated, 1664 expanded
[t=0.131823s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.131834s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.131844s, 28856 KB] g=134, 1672 evaluated, 1671 expanded
[t=0.131987s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.131997s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.132006s, 28856 KB] g=136, 1675 evaluated, 1674 expanded
[t=0.156682s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.15677s, 28856 KB] g=176, 2230 evaluated, 2229 expanded
[t=0.158278s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.158304s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.158312s, 28856 KB] g=194, 2263 evaluated, 2262 expanded
[t=0.419549s, 30364 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.419621s, 30364 KB] g=232, 8043 evaluated, 8042 expanded
[t=0.41976s, 30364 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.419771s, 30364 KB] g=233, 8046 evaluated, 8045 expanded
[t=0.419825s, 30364 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.419833s, 30364 KB] g=234, 8047 evaluated, 8046 expanded
[t=0.42009s, 30364 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.420101s, 30364 KB] g=236, 8053 evaluated, 8052 expanded
[t=0.420286s, 30364 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.420297s, 30364 KB] g=236, 8057 evaluated, 8056 expanded
[t=0.420519s, 30364 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.420528s, 30364 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.420537s, 30364 KB] g=238, 8062 evaluated, 8061 expanded
[t=0.421246s, 30364 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.42126s, 30364 KB] g=242, 8078 evaluated, 8077 expanded
[t=0.421436s, 30364 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.421446s, 30364 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.421454s, 30364 KB] g=244, 8082 evaluated, 8081 expanded
[t=0.426953s, 30496 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.427071s, 30496 KB] g=260, 8222 evaluated, 8221 expanded
[t=0.428284s, 30496 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.4283s, 30496 KB] g=268, 8254 evaluated, 8253 expanded
[t=0.428415s, 30496 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.428427s, 30496 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.428435s, 30496 KB] g=270, 8257 evaluated, 8256 expanded
[t=0.431624s, 30496 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.431661s, 30496 KB] g=300, 8362 evaluated, 8361 expanded
[t=0.431906s, 30496 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.431918s, 30496 KB] g=304, 8371 evaluated, 8370 expanded
[t=0.432005s, 30496 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.432016s, 30496 KB] g=306, 8374 evaluated, 8373 expanded
[t=0.432397s, 30496 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.432408s, 30496 KB] g=318, 8391 evaluated, 8390 expanded
[t=0.43249s, 30496 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.432501s, 30496 KB] g=322, 8395 evaluated, 8394 expanded
[t=0.432523s, 30496 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.432533s, 30496 KB] g=323, 8396 evaluated, 8395 expanded
[t=0.432551s, 30496 KB] Solution found!
[t=0.432595s, 30496 KB] Actual search time: 0.380981s
pick-up b32 (1)
stack b32 b29 (1)
unstack b1 b11 (1)
put-down b1 (1)
unstack b11 b31 (1)
put-down b11 (1)
unstack b16 b18 (1)
put-down b16 (1)
unstack b17 b19 (1)
put-down b17 (1)
unstack b19 b27 (1)
put-down b19 (1)
unstack b22 b26 (1)
put-down b22 (1)
unstack b26 b14 (1)
put-down b26 (1)
unstack b14 b13 (1)
put-down b14 (1)
unstack b13 b15 (1)
put-down b13 (1)
unstack b31 b24 (1)
stack b31 b26 (1)
unstack b24 b25 (1)
put-down b24 (1)
unstack b25 b20 (1)
put-down b25 (1)
unstack b20 b23 (1)
put-down b20 (1)
unstack b23 b21 (1)
put-down b23 (1)
unstack b21 b4 (1)
put-down b21 (1)
pick-up b4 (1)
stack b4 b31 (1)
pick-up b20 (1)
stack b20 b4 (1)
pick-up b17 (1)
stack b17 b20 (1)
pick-up b19 (1)
stack b19 b17 (1)
pick-up b15 (1)
stack b15 b19 (1)
pick-up b1 (1)
stack b1 b15 (1)
pick-up b13 (1)
stack b13 b1 (1)
unstack b32 b29 (1)
put-down b32 (1)
unstack b29 b5 (1)
stack b29 b18 (1)
unstack b5 b10 (1)
put-down b5 (1)
unstack b10 b12 (1)
stack b10 b27 (1)
pick-up b11 (1)
stack b11 b12 (1)
pick-up b16 (1)
stack b16 b14 (1)
pick-up b21 (1)
stack b21 b10 (1)
pick-up b23 (1)
stack b23 b16 (1)
pick-up b24 (1)
stack b24 b11 (1)
pick-up b32 (1)
stack b32 b29 (1)
unstack b24 b11 (1)
put-down b24 (1)
unstack b11 b12 (1)
put-down b11 (1)
unstack b12 b2 (1)
stack b12 b25 (1)
pick-up b11 (1)
stack b11 b12 (1)
pick-up b22 (1)
stack b22 b2 (1)
pick-up b24 (1)
stack b24 b11 (1)
unstack b22 b2 (1)
put-down b22 (1)
unstack b2 b28 (1)
put-down b2 (1)
pick-up b22 (1)
stack b22 b2 (1)
unstack b28 b30 (1)
stack b28 b22 (1)
unstack b30 b3 (1)
put-down b30 (1)
unstack b3 b9 (1)
stack b3 b5 (1)
pick-up b30 (1)
stack b30 b3 (1)
unstack b9 b8 (1)
put-down b9 (1)
unstack b8 b6 (1)
put-down b8 (1)
unstack b6 b7 (1)
stack b6 b21 (1)
pick-up b7 (1)
stack b7 b32 (1)
pick-up b9 (1)
stack b9 b7 (1)
unstack b23 b16 (1)
put-down b23 (1)
unstack b16 b14 (1)
put-down b16 (1)
unstack b24 b11 (1)
put-down b24 (1)
unstack b11 b12 (1)
put-down b11 (1)
unstack b12 b25 (1)
put-down b12 (1)
unstack b28 b22 (1)
put-down b28 (1)
unstack b22 b2 (1)
put-down b22 (1)
pick-up b14 (1)
stack b14 b9 (1)
pick-up b16 (1)
stack b16 b14 (1)
pick-up b23 (1)
stack b23 b16 (1)
pick-up b2 (1)
stack b2 b6 (1)
pick-up b22 (1)
stack b22 b2 (1)
pick-up b28 (1)
stack b28 b22 (1)
pick-up b25 (1)
stack b25 b28 (1)
pick-up b12 (1)
stack b12 b25 (1)
pick-up b11 (1)
stack b11 b12 (1)
pick-up b24 (1)
stack b24 b11 (1)
unstack b13 b1 (1)
put-down b13 (1)
unstack b1 b15 (1)
put-down b1 (1)
pick-up b13 (1)
stack b13 b1 (1)
unstack b15 b19 (1)
put-down b15 (1)
unstack b19 b17 (1)
put-down b19 (1)
pick-up b15 (1)
stack b15 b19 (1)
unstack b13 b1 (1)
put-down b13 (1)
pick-up b1 (1)
stack b1 b15 (1)
pick-up b13 (1)
stack b13 b1 (1)
unstack b17 b20 (1)
put-down b17 (1)
unstack b20 b4 (1)
put-down b20 (1)
pick-up b17 (1)
stack b17 b20 (1)
unstack b4 b31 (1)
put-down b4 (1)
unstack b31 b26 (1)
put-down b31 (1)
pick-up b26 (1)
stack b26 b24 (1)
pick-up b4 (1)
stack b4 b31 (1)
unstack b17 b20 (1)
put-down b17 (1)
pick-up b20 (1)
stack b20 b4 (1)
pick-up b17 (1)
stack b17 b20 (1)
unstack b13 b1 (1)
put-down b13 (1)
unstack b1 b15 (1)
put-down b1 (1)
pick-up b13 (1)
stack b13 b1 (1)
unstack b15 b19 (1)
put-down b15 (1)
pick-up b19 (1)
stack b19 b17 (1)
pick-up b15 (1)
stack b15 b19 (1)
unstack b13 b1 (1)
put-down b13 (1)
pick-up b1 (1)
stack b1 b15 (1)
pick-up b13 (1)
stack b13 b1 (1)
unstack b26 b24 (1)
put-down b26 (1)
unstack b24 b11 (1)
put-down b24 (1)
pick-up b26 (1)
stack b26 b24 (1)
unstack b11 b12 (1)
put-down b11 (1)
unstack b12 b25 (1)
put-down b12 (1)
unstack b25 b28 (1)
put-down b25 (1)
pick-up b12 (1)
stack b12 b25 (1)
pick-up b11 (1)
stack b11 b12 (1)
unstack b26 b24 (1)
put-down b26 (1)
pick-up b24 (1)
stack b24 b11 (1)
pick-up b26 (1)
stack b26 b24 (1)
unstack b28 b22 (1)
put-down b28 (1)
unstack b22 b2 (1)
put-down b22 (1)
pick-up b28 (1)
stack b28 b22 (1)
unstack b2 b6 (1)
put-down b2 (1)
unstack b6 b21 (1)
put-down b6 (1)
unstack b21 b10 (1)
put-down b21 (1)
unstack b10 b27 (1)
put-down b10 (1)
pick-up b27 (1)
stack b27 b30 (1)
pick-up b10 (1)
stack b10 b27 (1)
pick-up b21 (1)
stack b21 b10 (1)
pick-up b6 (1)
stack b6 b21 (1)
pick-up b2 (1)
stack b2 b6 (1)
unstack b28 b22 (1)
put-down b28 (1)
pick-up b22 (1)
stack b22 b2 (1)
pick-up b28 (1)
stack b28 b22 (1)
unstack b26 b24 (1)
put-down b26 (1)
unstack b24 b11 (1)
put-down b24 (1)
unstack b11 b12 (1)
put-down b11 (1)
pick-up b24 (1)
stack b24 b11 (1)
pick-up b26 (1)
stack b26 b24 (1)
unstack b12 b25 (1)
put-down b12 (1)
pick-up b25 (1)
stack b25 b28 (1)
pick-up b12 (1)
stack b12 b25 (1)
unstack b26 b24 (1)
put-down b26 (1)
unstack b24 b11 (1)
put-down b24 (1)
pick-up b11 (1)
stack b11 b12 (1)
pick-up b24 (1)
stack b24 b11 (1)
pick-up b26 (1)
stack b26 b24 (1)
unstack b13 b1 (1)
put-down b13 (1)
unstack b1 b15 (1)
put-down b1 (1)
pick-up b13 (1)
stack b13 b1 (1)
unstack b15 b19 (1)
put-down b15 (1)
unstack b19 b17 (1)
put-down b19 (1)
pick-up b15 (1)
stack b15 b19 (1)
unstack b13 b1 (1)
put-down b13 (1)
pick-up b1 (1)
stack b1 b15 (1)
pick-up b13 (1)
stack b13 b1 (1)
unstack b17 b20 (1)
put-down b17 (1)
unstack b20 b4 (1)
put-down b20 (1)
pick-up b17 (1)
stack b17 b20 (1)
unstack b4 b31 (1)
put-down b4 (1)
pick-up b31 (1)
stack b31 b26 (1)
pick-up b4 (1)
stack b4 b31 (1)
unstack b17 b20 (1)
put-down b17 (1)
pick-up b20 (1)
stack b20 b4 (1)
pick-up b17 (1)
stack b17 b20 (1)
unstack b13 b1 (1)
put-down b13 (1)
unstack b1 b15 (1)
put-down b1 (1)
pick-up b13 (1)
stack b13 b1 (1)
unstack b15 b19 (1)
put-down b15 (1)
pick-up b19 (1)
stack b19 b17 (1)
pick-up b15 (1)
stack b15 b19 (1)
unstack b13 b1 (1)
put-down b13 (1)
pick-up b1 (1)
stack b1 b15 (1)
pick-up b13 (1)
stack b13 b1 (1)
[t=0.432612s, 30496 KB] Plan length: 324 step(s).
[t=0.432612s, 30496 KB] Plan cost: 324
[t=0.432612s, 30496 KB] Expanded 8396 state(s).
[t=0.432612s, 30496 KB] Reopened 0 state(s).
[t=0.432612s, 30496 KB] Evaluated 8397 state(s).
[t=0.432612s, 30496 KB] Evaluations: 16794
[t=0.432612s, 30496 KB] Generated 80813 state(s).
[t=0.432612s, 30496 KB] Dead ends: 0 state(s).
[t=0.432612s, 30496 KB] Number of registered states: 8397
[t=0.432612s, 30496 KB] Int hash set load factor: 8397/16384 = 0.512512
[t=0.432612s, 30496 KB] Int hash set resizes: 14
[t=0.432612s, 30496 KB] Search time: 0.381027s
[t=0.432612s, 30496 KB] Total time: 0.432612s
Solution found.
Peak memory: 30496 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.68s
