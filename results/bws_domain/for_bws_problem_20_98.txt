INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_20/bws_problem_20_98.pddl --sas-file output.sas
Parsing...
Parsing: [0.010s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.008s wall-clock]
1342 relevant atoms
900 auxiliary atoms
2242 final queue length
3886 total queue pushes
Completing instantiation... [0.010s CPU, 0.014s wall-clock]
Instantiating: [0.020s CPU, 0.024s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
21 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.010s CPU, 0.001s wall-clock]
Computing fact groups: [0.010s CPU, 0.006s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.002s wall-clock]
Translating task: [0.020s CPU, 0.021s wall-clock]
1180 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
40 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.010s wall-clock]
Reordering and filtering variables...
41 of 41 variables necessary.
21 of 41 mutex groups necessary.
800 of 800 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.005s wall-clock]
Translator variables: 41
Translator derived variables: 0
Translator facts: 462
Translator goal facts: 15
Translator mutex groups: 21
Translator total mutex groups size: 441
Translator operators: 800
Translator axioms: 0
Translator task size: 6899
Translator peak memory: 35948 KB
Writing output... [0.000s CPU, 0.005s wall-clock]
Done! [0.080s CPU, 0.078s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=1.8658e-05s, 24488 KB] reading input...
[t=0.00219722s, 25180 KB] done reading input!
[t=0.00303079s, 25444 KB] Initializing landmark count heuristic...
[t=0.00305982s, 25444 KB] Generating landmark graph...
[t=0.00311677s, 25576 KB] Building a landmark graph with reasonable orders.
[t=0.00317205s, 25576 KB] Initializing Exploration...
[t=0.00340217s, 25744 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0108556s, 26140 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0109689s, 26140 KB] Landmarks generation time: 0.00785412s
[t=0.0109843s, 26140 KB] Discovered 85 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0110047s, 26140 KB] 332 edges
[t=0.0110164s, 26140 KB] approx. reasonable orders
[t=0.0133664s, 26140 KB] approx. obedient reasonable orders
[t=0.0136875s, 26140 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0137124s, 26140 KB] Landmarks generation time: 0.0106517s
[t=0.0137266s, 26140 KB] Discovered 85 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0137364s, 26140 KB] 396 edges
[t=0.0137485s, 26140 KB] Landmark graph generation time: 0.0106958s
[t=0.0137575s, 26140 KB] Landmark graph contains 85 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0137668s, 26140 KB] Landmark graph contains 396 orderings.
[t=0.014312s, 26312 KB] Simplifying 3160 unary operators... done! [2400 unary operators]
[t=0.0151203s, 26312 KB] time to simplify: 0.00086043s
[t=0.0152262s, 26312 KB] Initializing additive heuristic...
[t=0.0152395s, 26312 KB] Initializing FF heuristic...
[t=0.0153077s, 26312 KB] Building successor generator...done!
[t=0.0154877s, 26312 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0154973s, 26312 KB] time for successor generation creation: 0.000145132s
[t=0.0155096s, 26312 KB] Variables: 41
[t=0.0155179s, 26312 KB] FactPairs: 462
[t=0.0155261s, 26312 KB] Bytes per state: 16
[t=0.0156612s, 26312 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0157147s, 26312 KB] 39 initial landmarks, 15 goal landmarks
[t=0.0157719s, 26312 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0157822s, 26312 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0157911s, 26312 KB] g=0, 1 evaluated, 0 expanded
[t=0.0158056s, 26312 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0158146s, 26312 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0159114s, 26312 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0159238s, 26312 KB] g=1, 4 evaluated, 3 expanded
[t=0.0159579s, 26312 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0159689s, 26312 KB] g=2, 5 evaluated, 4 expanded
[t=0.0161316s, 26312 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0161416s, 26312 KB] g=4, 12 evaluated, 11 expanded
[t=0.0161914s, 26312 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0162012s, 26312 KB] g=5, 14 evaluated, 13 expanded
[t=0.0164568s, 26312 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0164709s, 26312 KB] g=7, 26 evaluated, 25 expanded
[t=0.0167087s, 26312 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0167183s, 26312 KB] g=9, 37 evaluated, 36 expanded
[t=0.0170653s, 26312 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0170749s, 26312 KB] g=8, 53 evaluated, 52 expanded
[t=0.0171048s, 26312 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0171135s, 26312 KB] g=12, 54 evaluated, 53 expanded
[t=0.0173271s, 26312 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0173361s, 26312 KB] g=10, 64 evaluated, 63 expanded
[t=0.0174928s, 26312 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0175018s, 26312 KB] g=14, 71 evaluated, 70 expanded
[t=0.0178152s, 26312 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0178263s, 26312 KB] g=16, 86 evaluated, 85 expanded
[t=0.0181221s, 26312 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0181329s, 26312 KB] g=18, 100 evaluated, 99 expanded
[t=0.0182052s, 26312 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0182141s, 26312 KB] g=16, 103 evaluated, 102 expanded
[t=0.0185874s, 26312 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0185973s, 26312 KB] g=20, 121 evaluated, 120 expanded
[t=0.0191271s, 26312 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0191392s, 26312 KB] g=22, 146 evaluated, 145 expanded
[t=0.0191718s, 26312 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.019181s, 26312 KB] g=22, 147 evaluated, 146 expanded
[t=0.0192535s, 26312 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.019263s, 26312 KB] g=23, 150 evaluated, 149 expanded
[t=0.0193152s, 26312 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0193242s, 26312 KB] g=24, 152 evaluated, 151 expanded
[t=0.0196839s, 26312 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0196939s, 26312 KB] g=26, 169 evaluated, 168 expanded
[t=0.0200095s, 26312 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0200206s, 26312 KB] g=28, 183 evaluated, 182 expanded
[t=0.0201998s, 26312 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0202091s, 26312 KB] g=30, 191 evaluated, 190 expanded
[t=0.0202387s, 26312 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0202477s, 26312 KB] g=28, 192 evaluated, 191 expanded
[t=0.0209609s, 26312 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0209776s, 26312 KB] g=36, 225 evaluated, 224 expanded
[t=0.0212575s, 26312 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0212687s, 26312 KB] g=38, 238 evaluated, 237 expanded
[t=0.0213009s, 26312 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.021313s, 26312 KB] g=30, 239 evaluated, 238 expanded
[t=0.0217391s, 26312 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0217598s, 26312 KB] g=42, 258 evaluated, 257 expanded
[t=0.0219203s, 26312 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0219323s, 26312 KB] g=32, 265 evaluated, 264 expanded
[t=0.0220081s, 26312 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0220181s, 26312 KB] g=44, 268 evaluated, 267 expanded
[t=0.0222174s, 26312 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0222301s, 26312 KB] g=33, 277 evaluated, 276 expanded
[t=0.0223109s, 26312 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.022325s, 26312 KB] g=46, 280 evaluated, 279 expanded
[t=0.0225873s, 26312 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0226046s, 26312 KB] g=48, 292 evaluated, 291 expanded
[t=0.0228354s, 26312 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0228475s, 26312 KB] g=50, 303 evaluated, 302 expanded
[t=0.0237437s, 26312 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0237778s, 26312 KB] g=54, 345 evaluated, 344 expanded
[t=0.0238506s, 26312 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0238964s, 26312 KB] g=36, 347 evaluated, 346 expanded
[t=0.0240529s, 26312 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.024066s, 26312 KB] g=56, 354 evaluated, 353 expanded
[t=0.0242477s, 26312 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0242759s, 26312 KB] g=58, 363 evaluated, 362 expanded
[t=0.0243056s, 26312 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0243154s, 26312 KB] g=59, 364 evaluated, 363 expanded
[t=0.0245012s, 26312 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0245125s, 26312 KB] g=61, 373 evaluated, 372 expanded
[t=0.0247991s, 26312 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0248299s, 26312 KB] g=64, 385 evaluated, 384 expanded
[t=0.0250256s, 26312 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0250397s, 26312 KB] g=66, 394 evaluated, 393 expanded
[t=0.0253143s, 26312 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0253274s, 26312 KB] g=68, 408 evaluated, 407 expanded
[t=0.0258099s, 26312 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0258367s, 26312 KB] g=70, 432 evaluated, 431 expanded
[t=0.0262512s, 26312 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0262755s, 26312 KB] g=64, 451 evaluated, 450 expanded
[t=0.0264584s, 26312 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0264684s, 26312 KB] g=72, 460 evaluated, 459 expanded
[t=0.0267559s, 26312 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0267669s, 26312 KB] g=74, 476 evaluated, 475 expanded
[t=0.0269134s, 26312 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0269239s, 26312 KB] g=68, 484 evaluated, 483 expanded
[t=0.0270685s, 26312 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0270815s, 26312 KB] g=70, 491 evaluated, 490 expanded
[t=0.027231s, 26312 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0272409s, 26312 KB] g=76, 499 evaluated, 498 expanded
[t=0.027527s, 26312 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0275385s, 26312 KB] g=78, 514 evaluated, 513 expanded
[t=0.0276211s, 26312 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0276308s, 26312 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.02764s, 26312 KB] g=80, 519 evaluated, 518 expanded
[t=0.0276767s, 26312 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0276857s, 26312 KB] g=81, 521 evaluated, 520 expanded
[t=0.0277107s, 26312 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0277196s, 26312 KB] g=82, 522 evaluated, 521 expanded
[t=0.0277728s, 26312 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0277818s, 26312 KB] g=84, 525 evaluated, 524 expanded
[t=0.0278032s, 26312 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0278123s, 26312 KB] g=85, 526 evaluated, 525 expanded
[t=0.027877s, 26312 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0278919s, 26312 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0279013s, 26312 KB] g=88, 529 evaluated, 528 expanded
[t=0.0279191s, 26312 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0279285s, 26312 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0279367s, 26312 KB] g=89, 530 evaluated, 529 expanded
[t=0.0279518s, 26312 KB] Solution found!
[t=0.0279642s, 26312 KB] Actual search time: 0.0122462s
unstack b17 b5 (1)
stack b17 b11 (1)
unstack b15 b3 (1)
put-down b15 (1)
unstack b3 b8 (1)
put-down b3 (1)
unstack b8 b4 (1)
stack b8 b6 (1)
unstack b4 b2 (1)
put-down b4 (1)
unstack b5 b16 (1)
put-down b5 (1)
unstack b16 b18 (1)
put-down b16 (1)
pick-up b2 (1)
stack b2 b18 (1)
unstack b17 b11 (1)
put-down b17 (1)
unstack b11 b1 (1)
stack b11 b5 (1)
pick-up b17 (1)
stack b17 b11 (1)
unstack b8 b6 (1)
put-down b8 (1)
unstack b6 b9 (1)
stack b6 b16 (1)
pick-up b3 (1)
stack b3 b9 (1)
pick-up b8 (1)
stack b8 b6 (1)
unstack b3 b9 (1)
put-down b3 (1)
unstack b9 b12 (1)
put-down b9 (1)
unstack b12 b14 (1)
stack b12 b15 (1)
pick-up b3 (1)
stack b3 b9 (1)
unstack b14 b7 (1)
put-down b14 (1)
unstack b7 b13 (1)
stack b7 b14 (1)
unstack b13 b19 (1)
put-down b13 (1)
unstack b19 b20 (1)
stack b19 b1 (1)
unstack b20 b10 (1)
stack b20 b2 (1)
pick-up b10 (1)
stack b10 b3 (1)
unstack b7 b14 (1)
put-down b7 (1)
pick-up b14 (1)
stack b14 b19 (1)
pick-up b7 (1)
stack b7 b14 (1)
unstack b10 b3 (1)
put-down b10 (1)
unstack b17 b11 (1)
put-down b17 (1)
unstack b8 b6 (1)
put-down b8 (1)
unstack b11 b5 (1)
put-down b11 (1)
unstack b3 b9 (1)
put-down b3 (1)
unstack b6 b16 (1)
put-down b6 (1)
pick-up b16 (1)
stack b16 b13 (1)
pick-up b6 (1)
stack b6 b16 (1)
pick-up b8 (1)
stack b8 b6 (1)
pick-up b9 (1)
stack b9 b7 (1)
pick-up b3 (1)
stack b3 b9 (1)
pick-up b10 (1)
stack b10 b3 (1)
pick-up b17 (1)
stack b17 b11 (1)
pick-up b5 (1)
stack b5 b10 (1)
unstack b17 b11 (1)
put-down b17 (1)
pick-up b11 (1)
stack b11 b5 (1)
pick-up b17 (1)
stack b17 b11 (1)
[t=0.0279738s, 26312 KB] Plan length: 90 step(s).
[t=0.0279738s, 26312 KB] Plan cost: 90
[t=0.0279738s, 26312 KB] Expanded 530 state(s).
[t=0.0279738s, 26312 KB] Reopened 0 state(s).
[t=0.0279738s, 26312 KB] Evaluated 531 state(s).
[t=0.0279738s, 26312 KB] Evaluations: 1062
[t=0.0279738s, 26312 KB] Generated 5909 state(s).
[t=0.0279738s, 26312 KB] Dead ends: 0 state(s).
[t=0.0279738s, 26312 KB] Number of registered states: 531
[t=0.0279738s, 26312 KB] Int hash set load factor: 531/1024 = 0.518555
[t=0.0279738s, 26312 KB] Int hash set resizes: 10
[t=0.0279738s, 26312 KB] Search time: 0.0123135s
[t=0.0279738s, 26312 KB] Total time: 0.0279738s
Solution found.
Peak memory: 26312 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.15s
