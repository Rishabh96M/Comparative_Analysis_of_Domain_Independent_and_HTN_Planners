INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_29/bws_problem_29_38.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.016s wall-clock]
2728 relevant atoms
1827 auxiliary atoms
4555 final queue length
7984 total queue pushes
Completing instantiation... [0.020s CPU, 0.029s wall-clock]
Instantiating: [0.040s CPU, 0.046s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
30 uncovered facts
Choosing groups: [0.000s CPU, 0.002s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.001s wall-clock]
Building dictionary for full mutex groups... [0.010s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.001s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.002s wall-clock]
Translating task: [0.050s CPU, 0.050s wall-clock]
2494 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
58 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.021s wall-clock]
Reordering and filtering variables...
59 of 59 variables necessary.
30 of 59 mutex groups necessary.
1682 of 1682 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.011s wall-clock]
Translator variables: 59
Translator derived variables: 0
Translator facts: 930
Translator goal facts: 25
Translator mutex groups: 30
Translator total mutex groups size: 900
Translator operators: 1682
Translator axioms: 0
Translator task size: 14442
Translator peak memory: 40824 KB
Writing output... [0.010s CPU, 0.008s wall-clock]
Done! [0.150s CPU, 0.153s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=4.1262e-05s, 24488 KB] reading input...
[t=0.00524932s, 26220 KB] done reading input!
[t=0.00627926s, 26616 KB] Initializing landmark count heuristic...
[t=0.00632251s, 26616 KB] Generating landmark graph...
[t=0.00641047s, 26748 KB] Building a landmark graph with reasonable orders.
[t=0.00649637s, 26748 KB] Initializing Exploration...
[t=0.00696959s, 27200 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0286201s, 27860 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0287303s, 27860 KB] Landmarks generation time: 0.0223322s
[t=0.0287565s, 27860 KB] Discovered 122 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0287751s, 27860 KB] 446 edges
[t=0.028785s, 27860 KB] approx. reasonable orders
[t=0.0296883s, 27860 KB] approx. obedient reasonable orders
[t=0.0297254s, 27860 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0297348s, 27860 KB] Landmarks generation time: 0.0234092s
[t=0.0297443s, 27860 KB] Discovered 122 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0297521s, 27860 KB] 457 edges
[t=0.0297603s, 27860 KB] Landmark graph generation time: 0.0234445s
[t=0.0297687s, 27860 KB] Landmark graph contains 122 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0297765s, 27860 KB] Landmark graph contains 457 orderings.
[t=0.0303814s, 27884 KB] Simplifying 6670 unary operators... done! [5046 unary operators]
[t=0.0319409s, 28016 KB] time to simplify: 0.00168706s
[t=0.0321936s, 28016 KB] Initializing additive heuristic...
[t=0.0322158s, 28016 KB] Initializing FF heuristic...
[t=0.0322673s, 28016 KB] Building successor generator...done!
[t=0.0325559s, 28016 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0325655s, 28016 KB] time for successor generation creation: 0.000260392s
[t=0.0325784s, 28016 KB] Variables: 59
[t=0.0325867s, 28016 KB] FactPairs: 930
[t=0.0325949s, 28016 KB] Bytes per state: 24
[t=0.0326769s, 28016 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0327095s, 28016 KB] 55 initial landmarks, 25 goal landmarks
[t=0.032775s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 67
[t=0.0327843s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 49
[t=0.0327923s, 28016 KB] g=0, 1 evaluated, 0 expanded
[t=0.0328065s, 28016 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 67
[t=0.0328151s, 28016 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 49
[t=0.0329656s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 66
[t=0.0329793s, 28016 KB] g=1, 4 evaluated, 3 expanded
[t=0.0330324s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 48
[t=0.0330412s, 28016 KB] g=2, 5 evaluated, 4 expanded
[t=0.0334502s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 65
[t=0.0334633s, 28016 KB] g=3, 15 evaluated, 14 expanded
[t=0.0335135s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 47
[t=0.0335223s, 28016 KB] g=4, 16 evaluated, 15 expanded
[t=0.0335743s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 64
[t=0.0335843s, 28016 KB] g=4, 17 evaluated, 16 expanded
[t=0.0342127s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 46
[t=0.0342343s, 28016 KB] g=6, 31 evaluated, 30 expanded
[t=0.0343309s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 63
[t=0.0343408s, 28016 KB] g=7, 33 evaluated, 32 expanded
[t=0.0349643s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 60
[t=0.0349781s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0349897s, 28016 KB] g=10, 48 evaluated, 47 expanded
[t=0.0353245s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 58
[t=0.0353358s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0353498s, 28016 KB] g=12, 56 evaluated, 55 expanded
[t=0.0357069s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0357345s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0357445s, 28016 KB] g=14, 63 evaluated, 62 expanded
[t=0.0360144s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0360256s, 28016 KB] g=16, 69 evaluated, 68 expanded
[t=0.0363993s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0364108s, 28016 KB] g=18, 78 evaluated, 77 expanded
[t=0.0369275s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.036941s, 28016 KB] g=20, 91 evaluated, 90 expanded
[t=0.0375671s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0375783s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0375867s, 28016 KB] g=22, 107 evaluated, 106 expanded
[t=0.0379362s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0379465s, 28016 KB] g=24, 116 evaluated, 115 expanded
[t=0.037996s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0380047s, 28016 KB] g=24, 117 evaluated, 116 expanded
[t=0.0386654s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0386756s, 28016 KB] g=26, 134 evaluated, 133 expanded
[t=0.0391158s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0391291s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0391377s, 28016 KB] g=28, 145 evaluated, 144 expanded
[t=0.0394989s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0395107s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0395199s, 28016 KB] g=30, 154 evaluated, 153 expanded
[t=0.040013s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0400308s, 28016 KB] g=33, 166 evaluated, 165 expanded
[t=0.0401262s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0401371s, 28016 KB] g=34, 168 evaluated, 167 expanded
[t=0.040502s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0405155s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0405234s, 28016 KB] g=36, 177 evaluated, 176 expanded
[t=0.040902s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.040924s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.040933s, 28016 KB] g=38, 186 evaluated, 185 expanded
[t=0.0413086s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0413262s, 28016 KB] g=40, 195 evaluated, 194 expanded
[t=0.0414729s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0414899s, 28016 KB] g=40, 198 evaluated, 197 expanded
[t=0.0421387s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0421573s, 28016 KB] g=42, 213 evaluated, 212 expanded
[t=0.0424779s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0424902s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.042511s, 28016 KB] g=44, 221 evaluated, 220 expanded
[t=0.0442373s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0442579s, 28016 KB] g=50, 265 evaluated, 264 expanded
[t=0.0446216s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0446324s, 28016 KB] g=52, 274 evaluated, 273 expanded
[t=0.0449542s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0449664s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0449777s, 28016 KB] g=54, 282 evaluated, 281 expanded
[t=0.0467444s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0467607s, 28016 KB] g=60, 326 evaluated, 325 expanded
[t=0.0471145s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0471256s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0471337s, 28016 KB] g=62, 335 evaluated, 334 expanded
[t=0.0474085s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0474186s, 28016 KB] g=62, 342 evaluated, 341 expanded
[t=0.0477203s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0477304s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0477395s, 28016 KB] g=64, 350 evaluated, 349 expanded
[t=0.0533566s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.053378s, 28016 KB] g=76, 497 evaluated, 496 expanded
[t=0.053775s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0537853s, 28016 KB] g=78, 507 evaluated, 506 expanded
[t=0.0541614s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0541723s, 28016 KB] g=80, 516 evaluated, 515 expanded
[t=0.0544716s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0544812s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0544896s, 28016 KB] g=82, 524 evaluated, 523 expanded
[t=0.0547932s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0548026s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0548105s, 28016 KB] g=84, 532 evaluated, 531 expanded
[t=0.0550842s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0550932s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0551019s, 28016 KB] g=86, 539 evaluated, 538 expanded
[t=0.0557588s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.055776s, 28016 KB] g=90, 555 evaluated, 554 expanded
[t=0.0560257s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0560373s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0560464s, 28016 KB] g=92, 561 evaluated, 560 expanded
[t=0.0566301s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0566413s, 28016 KB] g=95, 576 evaluated, 575 expanded
[t=0.0566954s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0567046s, 28016 KB] g=96, 577 evaluated, 576 expanded
[t=0.0568997s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.056909s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0569169s, 28016 KB] g=98, 582 evaluated, 581 expanded
[t=0.0577894s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0578113s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0578207s, 28016 KB] g=104, 605 evaluated, 604 expanded
[t=0.0595164s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0595395s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0595482s, 28016 KB] g=116, 650 evaluated, 649 expanded
[t=0.0601531s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.060166s, 28016 KB] g=120, 666 evaluated, 665 expanded
[t=0.0603196s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0603294s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0603373s, 28016 KB] g=122, 670 evaluated, 669 expanded
[t=0.068144s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0681664s, 28016 KB] g=142, 884 evaluated, 883 expanded
[t=0.0692168s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0692278s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0692362s, 28016 KB] g=156, 913 evaluated, 912 expanded
[t=0.116896s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.11699s, 28016 KB] g=228, 2255 evaluated, 2254 expanded
[t=0.11715s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.11716s, 28016 KB] g=230, 2259 evaluated, 2258 expanded
[t=0.118985s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.118996s, 28016 KB] g=242, 2313 evaluated, 2312 expanded
[t=0.119304s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.119314s, 28016 KB] g=246, 2322 evaluated, 2321 expanded
[t=0.119424s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.119433s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.119441s, 28016 KB] g=248, 2325 evaluated, 2324 expanded
[t=0.122205s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.122226s, 28016 KB] g=278, 2425 evaluated, 2424 expanded
[t=0.122439s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.12245s, 28016 KB] g=282, 2434 evaluated, 2433 expanded
[t=0.122525s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.122535s, 28016 KB] g=284, 2437 evaluated, 2436 expanded
[t=0.122849s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.12286s, 28016 KB] g=296, 2453 evaluated, 2452 expanded
[t=0.122933s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.122942s, 28016 KB] g=300, 2457 evaluated, 2456 expanded
[t=0.122961s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.122969s, 28016 KB] g=301, 2458 evaluated, 2457 expanded
[t=0.122986s, 28016 KB] Solution found!
[t=0.123002s, 28016 KB] Actual search time: 0.0902901s
unstack b10 b29 (1)
stack b10 b23 (1)
unstack b27 b3 (1)
put-down b27 (1)
unstack b29 b25 (1)
stack b29 b17 (1)
unstack b10 b23 (1)
put-down b10 (1)
unstack b23 b22 (1)
stack b23 b27 (1)
pick-up b10 (1)
stack b10 b23 (1)
unstack b22 b1 (1)
stack b22 b7 (1)
unstack b1 b13 (1)
put-down b1 (1)
unstack b13 b11 (1)
put-down b13 (1)
unstack b11 b14 (1)
put-down b11 (1)
unstack b3 b21 (1)
stack b3 b14 (1)
unstack b8 b2 (1)
put-down b8 (1)
unstack b2 b12 (1)
stack b2 b11 (1)
pick-up b21 (1)
stack b21 b3 (1)
pick-up b8 (1)
stack b8 b12 (1)
unstack b29 b17 (1)
put-down b29 (1)
unstack b17 b18 (1)
stack b17 b2 (1)
unstack b18 b9 (1)
stack b18 b22 (1)
unstack b9 b16 (1)
stack b9 b8 (1)
pick-up b29 (1)
stack b29 b17 (1)
unstack b16 b20 (1)
put-down b16 (1)
pick-up b20 (1)
stack b20 b9 (1)
unstack b18 b22 (1)
put-down b18 (1)
unstack b22 b7 (1)
put-down b22 (1)
unstack b7 b5 (1)
stack b7 b16 (1)
pick-up b22 (1)
stack b22 b7 (1)
pick-up b18 (1)
stack b18 b22 (1)
unstack b21 b3 (1)
put-down b21 (1)
unstack b3 b14 (1)
put-down b3 (1)
pick-up b14 (1)
stack b14 b26 (1)
pick-up b3 (1)
stack b3 b14 (1)
pick-up b21 (1)
stack b21 b3 (1)
unstack b20 b9 (1)
put-down b20 (1)
unstack b9 b8 (1)
put-down b9 (1)
pick-up b20 (1)
stack b20 b9 (1)
unstack b8 b12 (1)
put-down b8 (1)
unstack b12 b24 (1)
put-down b12 (1)
unstack b24 b4 (1)
stack b24 b1 (1)
unstack b4 b6 (1)
stack b4 b18 (1)
pick-up b12 (1)
stack b12 b24 (1)
unstack b6 b15 (1)
stack b6 b25 (1)
pick-up b13 (1)
stack b13 b4 (1)
pick-up b8 (1)
stack b8 b12 (1)
unstack b15 b28 (1)
put-down b15 (1)
pick-up b28 (1)
stack b28 b13 (1)
pick-up b15 (1)
stack b15 b28 (1)
unstack b6 b25 (1)
put-down b6 (1)
pick-up b25 (1)
stack b25 b15 (1)
pick-up b6 (1)
stack b6 b25 (1)
unstack b20 b9 (1)
put-down b20 (1)
pick-up b9 (1)
stack b9 b8 (1)
pick-up b20 (1)
stack b20 b9 (1)
unstack b29 b17 (1)
put-down b29 (1)
unstack b17 b2 (1)
put-down b17 (1)
pick-up b29 (1)
stack b29 b17 (1)
unstack b2 b11 (1)
put-down b2 (1)
pick-up b11 (1)
stack b11 b21 (1)
pick-up b2 (1)
stack b2 b11 (1)
unstack b29 b17 (1)
put-down b29 (1)
pick-up b17 (1)
stack b17 b2 (1)
pick-up b29 (1)
stack b29 b17 (1)
unstack b20 b9 (1)
put-down b20 (1)
unstack b9 b8 (1)
put-down b9 (1)
unstack b8 b12 (1)
put-down b8 (1)
pick-up b9 (1)
stack b9 b8 (1)
pick-up b20 (1)
stack b20 b9 (1)
unstack b12 b24 (1)
put-down b12 (1)
unstack b24 b1 (1)
put-down b24 (1)
pick-up b1 (1)
stack b1 b6 (1)
pick-up b24 (1)
stack b24 b1 (1)
pick-up b12 (1)
stack b12 b24 (1)
unstack b20 b9 (1)
put-down b20 (1)
unstack b9 b8 (1)
put-down b9 (1)
pick-up b20 (1)
stack b20 b9 (1)
unstack b12 b24 (1)
put-down b12 (1)
pick-up b8 (1)
stack b8 b12 (1)
unstack b20 b9 (1)
put-down b20 (1)
pick-up b9 (1)
stack b9 b8 (1)
pick-up b20 (1)
stack b20 b9 (1)
unstack b24 b1 (1)
put-down b24 (1)
unstack b1 b6 (1)
put-down b1 (1)
pick-up b24 (1)
stack b24 b1 (1)
unstack b6 b25 (1)
put-down b6 (1)
unstack b25 b15 (1)
put-down b25 (1)
pick-up b6 (1)
stack b6 b25 (1)
unstack b24 b1 (1)
put-down b24 (1)
pick-up b1 (1)
stack b1 b6 (1)
pick-up b24 (1)
stack b24 b1 (1)
unstack b20 b9 (1)
put-down b20 (1)
unstack b9 b8 (1)
put-down b9 (1)
pick-up b20 (1)
stack b20 b9 (1)
unstack b8 b12 (1)
put-down b8 (1)
pick-up b12 (1)
stack b12 b24 (1)
pick-up b8 (1)
stack b8 b12 (1)
unstack b20 b9 (1)
put-down b20 (1)
pick-up b9 (1)
stack b9 b8 (1)
pick-up b20 (1)
stack b20 b9 (1)
unstack b15 b28 (1)
put-down b15 (1)
unstack b28 b13 (1)
put-down b28 (1)
pick-up b15 (1)
stack b15 b28 (1)
unstack b13 b4 (1)
put-down b13 (1)
unstack b4 b18 (1)
put-down b4 (1)
pick-up b13 (1)
stack b13 b4 (1)
unstack b15 b28 (1)
put-down b15 (1)
pick-up b28 (1)
stack b28 b13 (1)
pick-up b15 (1)
stack b15 b28 (1)
unstack b18 b22 (1)
put-down b18 (1)
unstack b22 b7 (1)
put-down b22 (1)
pick-up b18 (1)
stack b18 b22 (1)
unstack b7 b16 (1)
put-down b7 (1)
pick-up b16 (1)
stack b16 b5 (1)
pick-up b7 (1)
stack b7 b16 (1)
unstack b18 b22 (1)
put-down b18 (1)
pick-up b22 (1)
stack b22 b7 (1)
pick-up b18 (1)
stack b18 b22 (1)
unstack b15 b28 (1)
put-down b15 (1)
unstack b28 b13 (1)
put-down b28 (1)
pick-up b15 (1)
stack b15 b28 (1)
unstack b13 b4 (1)
put-down b13 (1)
pick-up b4 (1)
stack b4 b18 (1)
pick-up b13 (1)
stack b13 b4 (1)
unstack b15 b28 (1)
put-down b15 (1)
pick-up b28 (1)
stack b28 b13 (1)
pick-up b15 (1)
stack b15 b28 (1)
unstack b20 b9 (1)
put-down b20 (1)
unstack b9 b8 (1)
put-down b9 (1)
pick-up b20 (1)
stack b20 b9 (1)
unstack b8 b12 (1)
put-down b8 (1)
unstack b12 b24 (1)
put-down b12 (1)
pick-up b8 (1)
stack b8 b12 (1)
unstack b20 b9 (1)
put-down b20 (1)
pick-up b9 (1)
stack b9 b8 (1)
pick-up b20 (1)
stack b20 b9 (1)
unstack b24 b1 (1)
put-down b24 (1)
unstack b1 b6 (1)
put-down b1 (1)
pick-up b24 (1)
stack b24 b1 (1)
unstack b6 b25 (1)
put-down b6 (1)
pick-up b25 (1)
stack b25 b15 (1)
pick-up b6 (1)
stack b6 b25 (1)
unstack b24 b1 (1)
put-down b24 (1)
pick-up b1 (1)
stack b1 b6 (1)
pick-up b24 (1)
stack b24 b1 (1)
unstack b20 b9 (1)
put-down b20 (1)
unstack b9 b8 (1)
put-down b9 (1)
pick-up b20 (1)
stack b20 b9 (1)
unstack b8 b12 (1)
put-down b8 (1)
pick-up b12 (1)
stack b12 b24 (1)
pick-up b8 (1)
stack b8 b12 (1)
unstack b20 b9 (1)
put-down b20 (1)
pick-up b9 (1)
stack b9 b8 (1)
pick-up b20 (1)
stack b20 b9 (1)
[t=0.123013s, 28016 KB] Plan length: 302 step(s).
[t=0.123013s, 28016 KB] Plan cost: 302
[t=0.123013s, 28016 KB] Expanded 2458 state(s).
[t=0.123013s, 28016 KB] Reopened 0 state(s).
[t=0.123013s, 28016 KB] Evaluated 2459 state(s).
[t=0.123013s, 28016 KB] Evaluations: 4918
[t=0.123013s, 28016 KB] Generated 21380 state(s).
[t=0.123013s, 28016 KB] Dead ends: 0 state(s).
[t=0.123013s, 28016 KB] Number of registered states: 2459
[t=0.123013s, 28016 KB] Int hash set load factor: 2459/4096 = 0.600342
[t=0.123013s, 28016 KB] Int hash set resizes: 12
[t=0.123013s, 28016 KB] Search time: 0.0903368s
[t=0.123013s, 28016 KB] Total time: 0.123013s
Solution found.
Peak memory: 28016 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.33s
