INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_28/bws_problem_28_78.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.003s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.016s wall-clock]
2550 relevant atoms
1708 auxiliary atoms
4258 final queue length
7455 total queue pushes
Completing instantiation... [0.020s CPU, 0.027s wall-clock]
Instantiating: [0.040s CPU, 0.045s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.001s wall-clock]
Choosing groups...
29 uncovered facts
Choosing groups: [0.000s CPU, 0.002s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.009s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.002s wall-clock]
Translating task: [0.060s CPU, 0.048s wall-clock]
2324 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
56 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.020s wall-clock]
Reordering and filtering variables...
57 of 57 variables necessary.
29 of 57 mutex groups necessary.
1568 of 1568 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.011s wall-clock]
Translator variables: 57
Translator derived variables: 0
Translator facts: 870
Translator goal facts: 24
Translator mutex groups: 29
Translator total mutex groups size: 841
Translator operators: 1568
Translator axioms: 0
Translator task size: 13468
Translator peak memory: 40312 KB
Writing output... [0.010s CPU, 0.008s wall-clock]
Done! [0.150s CPU, 0.149s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.2245e-05s, 24488 KB] reading input...
[t=0.0048063s, 26076 KB] done reading input!
[t=0.0063935s, 26472 KB] Initializing landmark count heuristic...
[t=0.00653286s, 26472 KB] Generating landmark graph...
[t=0.00663813s, 26604 KB] Building a landmark graph with reasonable orders.
[t=0.00677371s, 26604 KB] Initializing Exploration...
[t=0.00729519s, 27016 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0293996s, 27676 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.029509s, 27676 KB] Landmarks generation time: 0.0228527s
[t=0.029534s, 27676 KB] Discovered 128 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0295513s, 27676 KB] 688 edges
[t=0.0295609s, 27676 KB] approx. reasonable orders
[t=0.0361693s, 27676 KB] approx. obedient reasonable orders
[t=0.036589s, 27676 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.036603s, 27676 KB] Landmarks generation time: 0.030068s
[t=0.0366136s, 27676 KB] Discovered 128 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0366219s, 27676 KB] 790 edges
[t=0.0366304s, 27676 KB] Landmark graph generation time: 0.0301051s
[t=0.0366395s, 27676 KB] Landmark graph contains 128 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0366492s, 27676 KB] Landmark graph contains 790 orderings.
[t=0.0373006s, 27700 KB] Simplifying 6216 unary operators... done! [4704 unary operators]
[t=0.0388s, 27832 KB] time to simplify: 0.00159874s
[t=0.0390158s, 27832 KB] Initializing additive heuristic...
[t=0.0390359s, 27832 KB] Initializing FF heuristic...
[t=0.0391064s, 27832 KB] Building successor generator...done!
[t=0.0393812s, 27832 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0393912s, 27832 KB] time for successor generation creation: 0.000239424s
[t=0.039406s, 27832 KB] Variables: 57
[t=0.0394149s, 27832 KB] FactPairs: 870
[t=0.0394236s, 27832 KB] Bytes per state: 24
[t=0.0395394s, 27832 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0395729s, 27832 KB] 57 initial landmarks, 24 goal landmarks
[t=0.0396477s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 71
[t=0.0396576s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 52
[t=0.039666s, 27832 KB] g=0, 1 evaluated, 0 expanded
[t=0.0396806s, 27832 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 71
[t=0.039689s, 27832 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 52
[t=0.0400766s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 70
[t=0.0400946s, 27832 KB] g=2, 10 evaluated, 9 expanded
[t=0.040582s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 69
[t=0.0405945s, 27832 KB] g=3, 23 evaluated, 22 expanded
[t=0.0409671s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 68
[t=0.0409801s, 27832 KB] g=5, 33 evaluated, 32 expanded
[t=0.041029s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 51
[t=0.0410387s, 27832 KB] g=6, 34 evaluated, 33 expanded
[t=0.0416337s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 67
[t=0.0416539s, 27832 KB] g=8, 50 evaluated, 49 expanded
[t=0.042382s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 66
[t=0.0424116s, 27832 KB] g=10, 65 evaluated, 64 expanded
[t=0.0431715s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 50
[t=0.0431835s, 27832 KB] g=10, 84 evaluated, 83 expanded
[t=0.0433091s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 65
[t=0.0433188s, 27832 KB] g=12, 87 evaluated, 86 expanded
[t=0.0438442s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 49
[t=0.0438585s, 27832 KB] g=12, 101 evaluated, 100 expanded
[t=0.044316s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 64
[t=0.0443393s, 27832 KB] g=14, 112 evaluated, 111 expanded
[t=0.0446408s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 47
[t=0.0446536s, 27832 KB] g=14, 120 evaluated, 119 expanded
[t=0.0451497s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 63
[t=0.0451625s, 27832 KB] g=16, 133 evaluated, 132 expanded
[t=0.0452853s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 62
[t=0.0453093s, 27832 KB] g=17, 136 evaluated, 135 expanded
[t=0.0472386s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 61
[t=0.0472511s, 27832 KB] g=20, 187 evaluated, 186 expanded
[t=0.0484058s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 60
[t=0.0484196s, 27832 KB] g=22, 217 evaluated, 216 expanded
[t=0.049261s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 46
[t=0.0492711s, 27832 KB] g=22, 240 evaluated, 239 expanded
[t=0.0504932s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.0505061s, 27832 KB] g=26, 273 evaluated, 272 expanded
[t=0.0506793s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0506889s, 27832 KB] g=26, 277 evaluated, 276 expanded
[t=0.0514394s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.0514499s, 27832 KB] g=28, 297 evaluated, 296 expanded
[t=0.0521849s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 58
[t=0.0522223s, 27832 KB] g=28, 313 evaluated, 312 expanded
[t=0.0530697s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0530797s, 27832 KB] g=32, 335 evaluated, 334 expanded
[t=0.0536372s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0536464s, 27832 KB] g=34, 350 evaluated, 349 expanded
[t=0.0541852s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0541942s, 27832 KB] g=36, 365 evaluated, 364 expanded
[t=0.0549791s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0549884s, 27832 KB] g=38, 387 evaluated, 386 expanded
[t=0.0558045s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0558215s, 27832 KB] g=40, 408 evaluated, 407 expanded
[t=0.0566882s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0567037s, 27832 KB] g=42, 430 evaluated, 429 expanded
[t=0.0574662s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0574765s, 27832 KB] g=44, 450 evaluated, 449 expanded
[t=0.0581461s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0581565s, 27832 KB] g=46, 468 evaluated, 467 expanded
[t=0.0632614s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0633398s, 27832 KB] g=52, 595 evaluated, 594 expanded
[t=0.0748295s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0749144s, 27832 KB] g=66, 905 evaluated, 904 expanded
[t=0.0831383s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.083211s, 27832 KB] g=74, 1122 evaluated, 1121 expanded
[t=0.083556s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0835663s, 27832 KB] g=76, 1131 evaluated, 1130 expanded
[t=0.0838543s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0838641s, 27832 KB] g=78, 1138 evaluated, 1137 expanded
[t=0.0863182s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0863358s, 27832 KB] g=84, 1205 evaluated, 1204 expanded
[t=0.0868424s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0868555s, 27832 KB] g=86, 1218 evaluated, 1217 expanded
[t=0.0873415s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0873686s, 27832 KB] g=88, 1231 evaluated, 1230 expanded
[t=0.0877317s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0877412s, 27832 KB] g=90, 1241 evaluated, 1240 expanded
[t=0.0881282s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0881402s, 27832 KB] g=92, 1251 evaluated, 1250 expanded
[t=0.0898904s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.089915s, 27832 KB] g=98, 1301 evaluated, 1300 expanded
[t=0.0955895s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.095649s, 27832 KB] g=110, 1459 evaluated, 1458 expanded
[t=0.0967582s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0967755s, 27832 KB] g=114, 1488 evaluated, 1487 expanded
[t=0.0970449s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0970546s, 27832 KB] g=116, 1495 evaluated, 1494 expanded
[t=0.105937s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.106049s, 27832 KB] g=132, 1743 evaluated, 1742 expanded
[t=0.108185s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.108199s, 27832 KB] g=140, 1804 evaluated, 1803 expanded
[t=0.108421s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.108431s, 27832 KB] g=142, 1810 evaluated, 1809 expanded
[t=0.11409s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.114129s, 27832 KB] g=164, 1987 evaluated, 1986 expanded
[t=0.114554s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.114583s, 27832 KB] g=168, 2001 evaluated, 2000 expanded
[t=0.114746s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.114757s, 27832 KB] g=170, 2006 evaluated, 2005 expanded
[t=0.115418s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.115428s, 27832 KB] g=178, 2025 evaluated, 2024 expanded
[t=0.115719s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.115728s, 27832 KB] g=182, 2035 evaluated, 2034 expanded
[t=0.115783s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.115792s, 27832 KB] g=183, 2037 evaluated, 2036 expanded
[t=0.115844s, 27832 KB] Solution found!
[t=0.11586s, 27832 KB] Actual search time: 0.0762851s
unstack b18 b24 (1)
put-down b18 (1)
unstack b24 b22 (1)
put-down b24 (1)
unstack b22 b26 (1)
stack b22 b1 (1)
unstack b10 b2 (1)
put-down b10 (1)
unstack b26 b14 (1)
stack b26 b2 (1)
unstack b14 b17 (1)
put-down b14 (1)
pick-up b24 (1)
stack b24 b14 (1)
unstack b22 b1 (1)
put-down b22 (1)
unstack b1 b11 (1)
put-down b1 (1)
unstack b11 b4 (1)
stack b11 b9 (1)
pick-up b22 (1)
stack b22 b1 (1)
unstack b4 b8 (1)
put-down b4 (1)
unstack b8 b13 (1)
stack b8 b26 (1)
unstack b13 b27 (1)
stack b13 b17 (1)
unstack b27 b23 (1)
put-down b27 (1)
unstack b23 b20 (1)
stack b23 b10 (1)
unstack b20 b12 (1)
put-down b20 (1)
unstack b12 b15 (1)
put-down b12 (1)
unstack b15 b7 (1)
stack b15 b23 (1)
pick-up b25 (1)
stack b25 b20 (1)
unstack b7 b28 (1)
stack b7 b11 (1)
unstack b28 b21 (1)
stack b28 b25 (1)
pick-up b21 (1)
stack b21 b12 (1)
unstack b22 b1 (1)
put-down b22 (1)
pick-up b1 (1)
stack b1 b15 (1)
pick-up b22 (1)
stack b22 b1 (1)
unstack b7 b11 (1)
put-down b7 (1)
unstack b11 b9 (1)
put-down b11 (1)
pick-up b7 (1)
stack b7 b11 (1)
pick-up b9 (1)
stack b9 b4 (1)
unstack b7 b11 (1)
put-down b7 (1)
pick-up b11 (1)
stack b11 b9 (1)
pick-up b7 (1)
stack b7 b11 (1)
unstack b8 b26 (1)
put-down b8 (1)
unstack b26 b2 (1)
put-down b26 (1)
unstack b2 b5 (1)
stack b2 b21 (1)
pick-up b26 (1)
stack b26 b2 (1)
pick-up b27 (1)
stack b27 b5 (1)
pick-up b8 (1)
stack b8 b26 (1)
unstack b27 b5 (1)
put-down b27 (1)
unstack b5 b16 (1)
stack b5 b13 (1)
unstack b16 b19 (1)
stack b16 b18 (1)
unstack b19 b3 (1)
put-down b19 (1)
pick-up b27 (1)
stack b27 b5 (1)
unstack b3 b6 (1)
stack b3 b8 (1)
pick-up b6 (1)
stack b6 b27 (1)
unstack b16 b18 (1)
put-down b16 (1)
pick-up b18 (1)
stack b18 b6 (1)
pick-up b16 (1)
stack b16 b18 (1)
unstack b7 b11 (1)
put-down b7 (1)
unstack b11 b9 (1)
put-down b11 (1)
pick-up b7 (1)
stack b7 b11 (1)
unstack b9 b4 (1)
put-down b9 (1)
pick-up b4 (1)
stack b4 b19 (1)
pick-up b9 (1)
stack b9 b4 (1)
unstack b7 b11 (1)
put-down b7 (1)
pick-up b11 (1)
stack b11 b9 (1)
pick-up b7 (1)
stack b7 b11 (1)
unstack b22 b1 (1)
put-down b22 (1)
unstack b1 b15 (1)
put-down b1 (1)
unstack b15 b23 (1)
put-down b15 (1)
pick-up b1 (1)
stack b1 b15 (1)
pick-up b22 (1)
stack b22 b1 (1)
unstack b23 b10 (1)
put-down b23 (1)
pick-up b10 (1)
stack b10 b7 (1)
pick-up b23 (1)
stack b23 b10 (1)
unstack b22 b1 (1)
put-down b22 (1)
unstack b1 b15 (1)
put-down b1 (1)
pick-up b15 (1)
stack b15 b23 (1)
pick-up b1 (1)
stack b1 b15 (1)
pick-up b22 (1)
stack b22 b1 (1)
unstack b16 b18 (1)
put-down b16 (1)
unstack b18 b6 (1)
put-down b18 (1)
unstack b6 b27 (1)
put-down b6 (1)
pick-up b18 (1)
stack b18 b6 (1)
pick-up b16 (1)
stack b16 b18 (1)
unstack b27 b5 (1)
put-down b27 (1)
unstack b5 b13 (1)
put-down b5 (1)
pick-up b27 (1)
stack b27 b5 (1)
unstack b13 b17 (1)
put-down b13 (1)
pick-up b17 (1)
stack b17 b3 (1)
pick-up b13 (1)
stack b13 b17 (1)
unstack b27 b5 (1)
put-down b27 (1)
pick-up b5 (1)
stack b5 b13 (1)
pick-up b27 (1)
stack b27 b5 (1)
unstack b16 b18 (1)
put-down b16 (1)
unstack b18 b6 (1)
put-down b18 (1)
pick-up b16 (1)
stack b16 b18 (1)
pick-up b6 (1)
stack b6 b27 (1)
unstack b16 b18 (1)
put-down b16 (1)
pick-up b18 (1)
stack b18 b6 (1)
pick-up b16 (1)
stack b16 b18 (1)
[t=0.11587s, 27832 KB] Plan length: 184 step(s).
[t=0.11587s, 27832 KB] Plan cost: 184
[t=0.11587s, 27832 KB] Expanded 2038 state(s).
[t=0.11587s, 27832 KB] Reopened 0 state(s).
[t=0.11587s, 27832 KB] Evaluated 2039 state(s).
[t=0.11587s, 27832 KB] Evaluations: 4078
[t=0.11587s, 27832 KB] Generated 25140 state(s).
[t=0.11587s, 27832 KB] Dead ends: 0 state(s).
[t=0.11587s, 27832 KB] Number of registered states: 2039
[t=0.11587s, 27832 KB] Int hash set load factor: 2039/4096 = 0.497803
[t=0.11587s, 27832 KB] Int hash set resizes: 12
[t=0.11587s, 27832 KB] Search time: 0.0763312s
[t=0.11587s, 27832 KB] Total time: 0.11587s
Solution found.
Peak memory: 27832 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.31s
