INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_25/bws_problem_25_90.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.012s wall-clock]
2052 relevant atoms
1375 auxiliary atoms
3427 final queue length
5981 total queue pushes
Completing instantiation... [0.020s CPU, 0.023s wall-clock]
Instantiating: [0.040s CPU, 0.037s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
26 uncovered facts
Choosing groups: [0.000s CPU, 0.002s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.008s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.040s CPU, 0.037s wall-clock]
1850 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
50 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.024s wall-clock]
Reordering and filtering variables...
51 of 51 variables necessary.
26 of 51 mutex groups necessary.
1250 of 1250 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.010s wall-clock]
Translator variables: 51
Translator derived variables: 0
Translator facts: 702
Translator goal facts: 22
Translator mutex groups: 26
Translator total mutex groups size: 676
Translator operators: 1250
Translator axioms: 0
Translator task size: 10751
Translator peak memory: 38388 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.130s CPU, 0.129s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=3.222e-05s, 24488 KB] reading input...
[t=0.00454s, 25632 KB] done reading input!
[t=0.00555743s, 26028 KB] Initializing landmark count heuristic...
[t=0.00559458s, 26028 KB] Generating landmark graph...
[t=0.00567026s, 26160 KB] Building a landmark graph with reasonable orders.
[t=0.00574164s, 26160 KB] Initializing Exploration...
[t=0.00612494s, 26532 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0220416s, 27060 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0221273s, 27060 KB] Landmarks generation time: 0.0164572s
[t=0.0221431s, 27060 KB] Discovered 112 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0221718s, 27060 KB] 558 edges
[t=0.0221813s, 27060 KB] approx. reasonable orders
[t=0.023867s, 27060 KB] approx. obedient reasonable orders
[t=0.023918s, 27060 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0239272s, 27060 KB] Landmarks generation time: 0.0183307s
[t=0.0239373s, 27060 KB] Discovered 112 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0239452s, 27060 KB] 582 edges
[t=0.0239539s, 27060 KB] Landmark graph generation time: 0.0183664s
[t=0.0239626s, 27060 KB] Landmark graph contains 112 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.023971s, 27060 KB] Landmark graph contains 582 orderings.
[t=0.0243571s, 27060 KB] Simplifying 4950 unary operators... done! [3750 unary operators]
[t=0.0257115s, 27192 KB] time to simplify: 0.00146377s
[t=0.0259344s, 27192 KB] Initializing additive heuristic...
[t=0.0259603s, 27192 KB] Initializing FF heuristic...
[t=0.0260388s, 27192 KB] Building successor generator...done!
[t=0.0264017s, 27192 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0264179s, 27192 KB] time for successor generation creation: 0.000299003s
[t=0.0264408s, 27192 KB] Variables: 51
[t=0.0264551s, 27192 KB] FactPairs: 702
[t=0.0264674s, 27192 KB] Bytes per state: 20
[t=0.026595s, 27192 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0266315s, 27192 KB] 51 initial landmarks, 22 goal landmarks
[t=0.0267045s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 61
[t=0.0267197s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0267289s, 27192 KB] g=0, 1 evaluated, 0 expanded
[t=0.0267454s, 27192 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 61
[t=0.0267541s, 27192 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0269252s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 60
[t=0.0269384s, 27192 KB] g=2, 6 evaluated, 5 expanded
[t=0.0271646s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.0271758s, 27192 KB] g=3, 13 evaluated, 12 expanded
[t=0.0272208s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.0272295s, 27192 KB] g=4, 14 evaluated, 13 expanded
[t=0.0275965s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 58
[t=0.0276092s, 27192 KB] g=6, 26 evaluated, 25 expanded
[t=0.0279772s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0279894s, 27192 KB] g=8, 38 evaluated, 37 expanded
[t=0.0281717s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 57
[t=0.0281814s, 27192 KB] g=8, 44 evaluated, 43 expanded
[t=0.0285907s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0286068s, 27192 KB] g=10, 57 evaluated, 56 expanded
[t=0.0292539s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0292727s, 27192 KB] g=12, 77 evaluated, 76 expanded
[t=0.0297774s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0297953s, 27192 KB] g=14, 94 evaluated, 93 expanded
[t=0.0304422s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0304569s, 27192 KB] g=16, 116 evaluated, 115 expanded
[t=0.03054s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0305682s, 27192 KB] g=12, 118 evaluated, 117 expanded
[t=0.0310418s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0310545s, 27192 KB] g=14, 133 evaluated, 132 expanded
[t=0.0311542s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.031164s, 27192 KB] g=18, 136 evaluated, 135 expanded
[t=0.031832s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0318475s, 27192 KB] g=20, 158 evaluated, 157 expanded
[t=0.0326028s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0326165s, 27192 KB] g=22, 183 evaluated, 182 expanded
[t=0.0326891s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0326996s, 27192 KB] g=18, 185 evaluated, 184 expanded
[t=0.0334391s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0334553s, 27192 KB] g=24, 209 evaluated, 208 expanded
[t=0.0342259s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0342375s, 27192 KB] g=26, 235 evaluated, 234 expanded
[t=0.0346546s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0346639s, 27192 KB] g=26, 249 evaluated, 248 expanded
[t=0.0351879s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0351973s, 27192 KB] g=28, 266 evaluated, 265 expanded
[t=0.0355909s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0356056s, 27192 KB] g=30, 279 evaluated, 278 expanded
[t=0.0357373s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0357469s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0357548s, 27192 KB] g=30, 283 evaluated, 282 expanded
[t=0.0361122s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0361221s, 27192 KB] g=32, 295 evaluated, 294 expanded
[t=0.0363685s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0363775s, 27192 KB] g=32, 303 evaluated, 302 expanded
[t=0.0366174s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0366263s, 27192 KB] g=34, 311 evaluated, 310 expanded
[t=0.037152s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0371645s, 27192 KB] g=34, 328 evaluated, 327 expanded
[t=0.0375499s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0375594s, 27192 KB] g=36, 341 evaluated, 340 expanded
[t=0.0377983s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0378072s, 27192 KB] g=36, 349 evaluated, 348 expanded
[t=0.0382272s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0382389s, 27192 KB] g=38, 363 evaluated, 362 expanded
[t=0.0383679s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0383767s, 27192 KB] g=38, 367 evaluated, 366 expanded
[t=0.0386442s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0386534s, 27192 KB] g=40, 376 evaluated, 375 expanded
[t=0.039527s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0395372s, 27192 KB] g=44, 406 evaluated, 405 expanded
[t=0.0395769s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.039592s, 27192 KB] g=45, 407 evaluated, 406 expanded
[t=0.0399212s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0399308s, 27192 KB] g=46, 418 evaluated, 417 expanded
[t=0.0399973s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.040006s, 27192 KB] g=47, 420 evaluated, 419 expanded
[t=0.0438784s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0439156s, 27192 KB] g=60, 550 evaluated, 549 expanded
[t=0.0442217s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0442355s, 27192 KB] g=62, 560 evaluated, 559 expanded
[t=0.0445981s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.044614s, 27192 KB] g=62, 572 evaluated, 571 expanded
[t=0.0446544s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0446648s, 27192 KB] g=64, 573 evaluated, 572 expanded
[t=0.0450361s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0450517s, 27192 KB] g=66, 585 evaluated, 584 expanded
[t=0.0453592s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0453693s, 27192 KB] g=64, 595 evaluated, 594 expanded
[t=0.0454129s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0454217s, 27192 KB] g=68, 596 evaluated, 595 expanded
[t=0.0457682s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0457839s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0457932s, 27192 KB] g=70, 607 evaluated, 606 expanded
[t=0.0458324s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0458416s, 27192 KB] g=71, 608 evaluated, 607 expanded
[t=0.0462127s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0462306s, 27192 KB] g=74, 620 evaluated, 619 expanded
[t=0.0465001s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0465096s, 27192 KB] g=74, 629 evaluated, 628 expanded
[t=0.0466703s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0466823s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0466914s, 27192 KB] g=76, 634 evaluated, 633 expanded
[t=0.0468184s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0468283s, 27192 KB] g=78, 638 evaluated, 637 expanded
[t=0.0477475s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0477577s, 27192 KB] g=83, 669 evaluated, 668 expanded
[t=0.0477978s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0478065s, 27192 KB] g=84, 670 evaluated, 669 expanded
[t=0.0479614s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0479705s, 27192 KB] g=85, 675 evaluated, 674 expanded
[t=0.0480404s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0480498s, 27192 KB] g=86, 677 evaluated, 676 expanded
[t=0.0483104s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0483209s, 27192 KB] g=88, 684 evaluated, 683 expanded
[t=0.0485011s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0485109s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0485187s, 27192 KB] g=90, 690 evaluated, 689 expanded
[t=0.0486814s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.048693s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0487013s, 27192 KB] g=90, 695 evaluated, 694 expanded
[t=0.0488894s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0489001s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0489096s, 27192 KB] g=92, 701 evaluated, 700 expanded
[t=0.0496186s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.049629s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0496377s, 27192 KB] g=96, 724 evaluated, 723 expanded
[t=0.0497922s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0498022s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0498108s, 27192 KB] g=98, 729 evaluated, 728 expanded
[t=0.0502574s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0502673s, 27192 KB] g=102, 745 evaluated, 744 expanded
[t=0.0503839s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0503933s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0504018s, 27192 KB] g=104, 749 evaluated, 748 expanded
[t=0.0537974s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0538231s, 27192 KB] g=120, 878 evaluated, 877 expanded
[t=0.054469s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0544837s, 27192 KB] g=128, 905 evaluated, 904 expanded
[t=0.0546965s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0547075s, 27192 KB] g=132, 914 evaluated, 913 expanded
[t=0.0547831s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0547931s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0548012s, 27192 KB] g=134, 917 evaluated, 916 expanded
[t=0.0559196s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.055939s, 27192 KB] g=152, 973 evaluated, 972 expanded
[t=0.0559989s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0560082s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0560163s, 27192 KB] g=154, 976 evaluated, 975 expanded
[t=0.0562204s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0562306s, 27192 KB] g=162, 987 evaluated, 986 expanded
[t=0.0562941s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0563027s, 27192 KB] g=166, 991 evaluated, 990 expanded
[t=0.0563221s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0563315s, 27192 KB] g=167, 992 evaluated, 991 expanded
[t=0.0563471s, 27192 KB] Solution found!
[t=0.0563601s, 27192 KB] Actual search time: 0.0297235s
unstack b18 b1 (1)
put-down b18 (1)
unstack b1 b8 (1)
put-down b1 (1)
unstack b14 b15 (1)
put-down b14 (1)
unstack b15 b11 (1)
put-down b15 (1)
unstack b21 b3 (1)
put-down b21 (1)
unstack b3 b24 (1)
put-down b3 (1)
unstack b24 b25 (1)
stack b24 b21 (1)
unstack b25 b10 (1)
put-down b25 (1)
unstack b10 b12 (1)
put-down b10 (1)
unstack b12 b4 (1)
put-down b12 (1)
unstack b4 b17 (1)
put-down b4 (1)
unstack b17 b2 (1)
stack b17 b11 (1)
unstack b2 b16 (1)
put-down b2 (1)
pick-up b15 (1)
stack b15 b2 (1)
pick-up b16 (1)
stack b16 b15 (1)
pick-up b25 (1)
stack b25 b17 (1)
pick-up b3 (1)
stack b3 b12 (1)
pick-up b18 (1)
stack b18 b3 (1)
pick-up b8 (1)
stack b8 b25 (1)
pick-up b1 (1)
stack b1 b14 (1)
unstack b24 b21 (1)
put-down b24 (1)
pick-up b21 (1)
stack b21 b16 (1)
pick-up b24 (1)
stack b24 b21 (1)
unstack b8 b25 (1)
put-down b8 (1)
unstack b25 b17 (1)
put-down b25 (1)
pick-up b8 (1)
stack b8 b25 (1)
unstack b1 b14 (1)
put-down b1 (1)
unstack b17 b11 (1)
put-down b17 (1)
unstack b11 b22 (1)
put-down b11 (1)
pick-up b1 (1)
stack b1 b14 (1)
pick-up b17 (1)
stack b17 b11 (1)
unstack b22 b13 (1)
stack b22 b18 (1)
unstack b13 b5 (1)
stack b13 b23 (1)
pick-up b4 (1)
stack b4 b22 (1)
unstack b5 b19 (1)
stack b5 b8 (1)
unstack b1 b14 (1)
put-down b1 (1)
pick-up b14 (1)
stack b14 b5 (1)
pick-up b1 (1)
stack b1 b14 (1)
unstack b19 b7 (1)
put-down b19 (1)
unstack b13 b23 (1)
put-down b13 (1)
unstack b7 b9 (1)
put-down b7 (1)
unstack b9 b20 (1)
stack b9 b13 (1)
unstack b20 b6 (1)
stack b20 b4 (1)
pick-up b19 (1)
stack b19 b7 (1)
pick-up b6 (1)
stack b6 b24 (1)
pick-up b23 (1)
stack b23 b6 (1)
unstack b9 b13 (1)
put-down b9 (1)
pick-up b13 (1)
stack b13 b23 (1)
pick-up b9 (1)
stack b9 b13 (1)
unstack b19 b7 (1)
put-down b19 (1)
pick-up b7 (1)
stack b7 b9 (1)
pick-up b19 (1)
stack b19 b7 (1)
unstack b1 b14 (1)
put-down b1 (1)
unstack b14 b5 (1)
put-down b14 (1)
unstack b5 b8 (1)
put-down b5 (1)
pick-up b14 (1)
stack b14 b5 (1)
pick-up b1 (1)
stack b1 b14 (1)
unstack b8 b25 (1)
put-down b8 (1)
pick-up b25 (1)
stack b25 b17 (1)
pick-up b8 (1)
stack b8 b25 (1)
unstack b1 b14 (1)
put-down b1 (1)
unstack b14 b5 (1)
put-down b14 (1)
pick-up b1 (1)
stack b1 b14 (1)
pick-up b5 (1)
stack b5 b8 (1)
unstack b1 b14 (1)
put-down b1 (1)
pick-up b14 (1)
stack b14 b5 (1)
pick-up b1 (1)
stack b1 b14 (1)
unstack b20 b4 (1)
put-down b20 (1)
unstack b4 b22 (1)
put-down b4 (1)
unstack b22 b18 (1)
put-down b22 (1)
pick-up b4 (1)
stack b4 b22 (1)
pick-up b20 (1)
stack b20 b4 (1)
unstack b18 b3 (1)
put-down b18 (1)
unstack b3 b12 (1)
put-down b3 (1)
pick-up b12 (1)
stack b12 b19 (1)
pick-up b3 (1)
stack b3 b12 (1)
pick-up b18 (1)
stack b18 b3 (1)
unstack b20 b4 (1)
put-down b20 (1)
unstack b4 b22 (1)
put-down b4 (1)
pick-up b20 (1)
stack b20 b4 (1)
pick-up b22 (1)
stack b22 b18 (1)
unstack b20 b4 (1)
put-down b20 (1)
pick-up b4 (1)
stack b4 b22 (1)
pick-up b20 (1)
stack b20 b4 (1)
[t=0.0563697s, 27192 KB] Plan length: 168 step(s).
[t=0.0563697s, 27192 KB] Plan cost: 168
[t=0.0563697s, 27192 KB] Expanded 992 state(s).
[t=0.0563697s, 27192 KB] Reopened 0 state(s).
[t=0.0563697s, 27192 KB] Evaluated 993 state(s).
[t=0.0563697s, 27192 KB] Evaluations: 1986
[t=0.0563697s, 27192 KB] Generated 9059 state(s).
[t=0.0563697s, 27192 KB] Dead ends: 0 state(s).
[t=0.0563697s, 27192 KB] Number of registered states: 993
[t=0.0563697s, 27192 KB] Int hash set load factor: 993/1024 = 0.969727
[t=0.0563697s, 27192 KB] Int hash set resizes: 10
[t=0.0563697s, 27192 KB] Search time: 0.0297753s
[t=0.0563697s, 27192 KB] Total time: 0.0563697s
Solution found.
Peak memory: 27192 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.24s
