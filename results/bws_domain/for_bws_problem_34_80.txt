INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_34/bws_problem_34_80.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.022s wall-clock]
3708 relevant atoms
2482 auxiliary atoms
6190 final queue length
10886 total queue pushes
Completing instantiation... [0.050s CPU, 0.043s wall-clock]
Instantiating: [0.070s CPU, 0.068s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.002s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.001s wall-clock]
Choosing groups...
35 uncovered facts
Choosing groups: [0.000s CPU, 0.002s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.010s CPU, 0.013s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.001s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.001s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.002s wall-clock]
Translating task: [0.060s CPU, 0.059s wall-clock]
3434 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
68 propositions removed
Detecting unreachable propositions: [0.030s CPU, 0.029s wall-clock]
Reordering and filtering variables...
69 of 69 variables necessary.
35 of 69 mutex groups necessary.
2312 of 2312 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.015s wall-clock]
Translator variables: 69
Translator derived variables: 0
Translator facts: 1260
Translator goal facts: 28
Translator mutex groups: 35
Translator total mutex groups size: 1225
Translator operators: 2312
Translator axioms: 0
Translator task size: 19820
Translator peak memory: 44440 KB
Writing output... [0.010s CPU, 0.012s wall-clock]
Done! [0.210s CPU, 0.202s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.8659e-05s, 24488 KB] reading input...
[t=0.00716425s, 27204 KB] done reading input!
[t=0.00811809s, 27600 KB] Initializing landmark count heuristic...
[t=0.00816519s, 27600 KB] Generating landmark graph...
[t=0.00830998s, 27732 KB] Building a landmark graph with reasonable orders.
[t=0.00844622s, 27864 KB] Initializing Exploration...
[t=0.00921845s, 28512 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0457639s, 29572 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0458843s, 29572 KB] Landmarks generation time: 0.0375834s
[t=0.0459087s, 29572 KB] Discovered 148 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0459267s, 29572 KB] 826 edges
[t=0.0459379s, 29572 KB] approx. reasonable orders
[t=0.0490477s, 29572 KB] approx. obedient reasonable orders
[t=0.0492703s, 29572 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0492829s, 29572 KB] Landmarks generation time: 0.0411034s
[t=0.0492941s, 29572 KB] Discovered 148 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0493031s, 29572 KB] 854 edges
[t=0.0493257s, 29572 KB] Landmark graph generation time: 0.041168s
[t=0.0493348s, 29572 KB] Landmark graph contains 148 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0493434s, 29572 KB] Landmark graph contains 854 orderings.
[t=0.0502185s, 29572 KB] Simplifying 9180 unary operators... done! [6936 unary operators]
[t=0.0530138s, 29572 KB] time to simplify: 0.00285551s
[t=0.053273s, 29628 KB] Initializing additive heuristic...
[t=0.0533187s, 29628 KB] Initializing FF heuristic...
[t=0.0534185s, 29628 KB] Building successor generator...done!
[t=0.054085s, 29628 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0540993s, 29628 KB] time for successor generation creation: 0.000619123s
[t=0.0541657s, 29628 KB] Variables: 69
[t=0.0541749s, 29628 KB] FactPairs: 1260
[t=0.0541834s, 29628 KB] Bytes per state: 32
[t=0.0544496s, 29628 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0545113s, 29628 KB] 67 initial landmarks, 28 goal landmarks
[t=0.0547844s, 29628 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 81
[t=0.0547957s, 29628 KB] New best heuristic value for ff(transform = adapt_costs(one)): 59
[t=0.0548072s, 29628 KB] g=0, 1 evaluated, 0 expanded
[t=0.0548319s, 29628 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 81
[t=0.0548415s, 29628 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 59
[t=0.0550624s, 29628 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 80
[t=0.0550864s, 29628 KB] g=1, 4 evaluated, 3 expanded
[t=0.0553652s, 29628 KB] New best heuristic value for ff(transform = adapt_costs(one)): 58
[t=0.0553787s, 29628 KB] g=2, 8 evaluated, 7 expanded
[t=0.0556728s, 29628 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 79
[t=0.055693s, 29628 KB] g=3, 13 evaluated, 12 expanded
[t=0.0562154s, 29628 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 78
[t=0.0562322s, 29628 KB] g=6, 22 evaluated, 21 expanded
[t=0.0566975s, 29628 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 77
[t=0.0567216s, 29628 KB] g=8, 30 evaluated, 29 expanded
[t=0.0574127s, 29628 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 76
[t=0.057423s, 29628 KB] g=10, 43 evaluated, 42 expanded
[t=0.0580061s, 29628 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 75
[t=0.0580262s, 29628 KB] g=12, 54 evaluated, 53 expanded
[t=0.0588039s, 29628 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 72
[t=0.0588345s, 29628 KB] New best heuristic value for ff(transform = adapt_costs(one)): 57
[t=0.0588436s, 29628 KB] g=14, 68 evaluated, 67 expanded
[t=0.0593208s, 29628 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 71
[t=0.059331s, 29628 KB] New best heuristic value for ff(transform = adapt_costs(one)): 56
[t=0.0593395s, 29628 KB] g=16, 77 evaluated, 76 expanded
[t=0.0598755s, 29628 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 70
[t=0.0598918s, 29628 KB] g=18, 87 evaluated, 86 expanded
[t=0.060061s, 29628 KB] New best heuristic value for ff(transform = adapt_costs(one)): 55
[t=0.0600703s, 29628 KB] g=18, 90 evaluated, 89 expanded
[t=0.060932s, 29628 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 69
[t=0.0609486s, 29628 KB] g=20, 106 evaluated, 105 expanded
[t=0.0615158s, 29628 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 66
[t=0.061528s, 29628 KB] New best heuristic value for ff(transform = adapt_costs(one)): 54
[t=0.0615366s, 29628 KB] g=22, 117 evaluated, 116 expanded
[t=0.0620883s, 29628 KB] New best heuristic value for ff(transform = adapt_costs(one)): 53
[t=0.0621056s, 29628 KB] g=24, 127 evaluated, 126 expanded
[t=0.0621773s, 29628 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 65
[t=0.0621878s, 29628 KB] g=24, 128 evaluated, 127 expanded
[t=0.0631724s, 29628 KB] New best heuristic value for ff(transform = adapt_costs(one)): 52
[t=0.0631912s, 29628 KB] g=26, 146 evaluated, 145 expanded
[t=0.0637505s, 29628 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 64
[t=0.0637704s, 29628 KB] g=28, 156 evaluated, 155 expanded
[t=0.0646334s, 29628 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 63
[t=0.0646508s, 29628 KB] g=30, 172 evaluated, 171 expanded
[t=0.0648114s, 29628 KB] New best heuristic value for ff(transform = adapt_costs(one)): 51
[t=0.0648267s, 29628 KB] g=28, 174 evaluated, 173 expanded
[t=0.0655962s, 29628 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 62
[t=0.0656142s, 29628 KB] g=30, 189 evaluated, 188 expanded
[t=0.0662685s, 29628 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 61
[t=0.0662793s, 29628 KB] g=32, 202 evaluated, 201 expanded
[t=0.0672134s, 29628 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.067234s, 29628 KB] g=34, 218 evaluated, 217 expanded
[t=0.0679682s, 29628 KB] New best heuristic value for ff(transform = adapt_costs(one)): 50
[t=0.0679891s, 29628 KB] g=36, 232 evaluated, 231 expanded
[t=0.0684642s, 29628 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 58
[t=0.0684743s, 29628 KB] g=37, 241 evaluated, 240 expanded
[t=0.0692282s, 29628 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0692377s, 29628 KB] g=40, 255 evaluated, 254 expanded
[t=0.0703615s, 29628 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0703778s, 29628 KB] g=42, 276 evaluated, 275 expanded
[t=0.0709499s, 29628 KB] New best heuristic value for ff(transform = adapt_costs(one)): 49
[t=0.0709615s, 29628 KB] g=44, 286 evaluated, 285 expanded
[t=0.0712015s, 29628 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0712115s, 29628 KB] g=44, 290 evaluated, 289 expanded
[t=0.0721281s, 29628 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0721459s, 29628 KB] g=45, 306 evaluated, 305 expanded
[t=0.0722729s, 29628 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0722887s, 29628 KB] New best heuristic value for ff(transform = adapt_costs(one)): 48
[t=0.0722977s, 29628 KB] g=46, 308 evaluated, 307 expanded
[t=0.0728488s, 29628 KB] New best heuristic value for ff(transform = adapt_costs(one)): 47
[t=0.0728592s, 29628 KB] g=48, 318 evaluated, 317 expanded
[t=0.0729246s, 29628 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0729336s, 29628 KB] g=48, 319 evaluated, 318 expanded
[t=0.0738157s, 29628 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0738271s, 29628 KB] g=50, 336 evaluated, 335 expanded
[t=0.0742674s, 29628 KB] New best heuristic value for ff(transform = adapt_costs(one)): 46
[t=0.0742775s, 29628 KB] g=50, 344 evaluated, 343 expanded
[t=0.0745565s, 29628 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0745665s, 29628 KB] g=52, 349 evaluated, 348 expanded
[t=0.0753471s, 29628 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0753641s, 29628 KB] New best heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.075373s, 29628 KB] g=54, 363 evaluated, 362 expanded
[t=0.0759796s, 29628 KB] New best heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.0759911s, 29628 KB] g=56, 374 evaluated, 373 expanded
[t=0.0762162s, 29628 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0762256s, 29628 KB] g=56, 378 evaluated, 377 expanded
[t=0.0769809s, 29628 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0769996s, 29628 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0770102s, 29628 KB] g=58, 392 evaluated, 391 expanded
[t=0.0786372s, 29628 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0786834s, 29628 KB] g=63, 417 evaluated, 416 expanded
[t=0.0787567s, 29628 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0787669s, 29628 KB] g=64, 418 evaluated, 417 expanded
[t=0.079555s, 29628 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0795769s, 29628 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0795937s, 29628 KB] g=66, 432 evaluated, 431 expanded
[t=0.080179s, 29628 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0801925s, 29628 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0802024s, 29628 KB] g=68, 443 evaluated, 442 expanded
[t=0.0806833s, 29628 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0806966s, 29628 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0807049s, 29628 KB] g=70, 452 evaluated, 451 expanded
[t=0.0819429s, 29628 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0819651s, 29628 KB] g=73, 475 evaluated, 474 expanded
[t=0.082033s, 29628 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0820432s, 29628 KB] g=74, 476 evaluated, 475 expanded
[t=0.0822178s, 29628 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.082262s, 29628 KB] g=72, 478 evaluated, 477 expanded
[t=0.0831433s, 29628 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0831887s, 29628 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0831997s, 29628 KB] g=76, 492 evaluated, 491 expanded
[t=0.083781s, 29628 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0837981s, 29628 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0838075s, 29628 KB] g=78, 502 evaluated, 501 expanded
[t=0.0843437s, 29628 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0843651s, 29628 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0843743s, 29628 KB] g=80, 512 evaluated, 511 expanded
[t=0.0849241s, 29628 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.084945s, 29628 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0849554s, 29628 KB] g=82, 522 evaluated, 521 expanded
[t=0.0854981s, 29628 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0855117s, 29628 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0855213s, 29628 KB] g=84, 532 evaluated, 531 expanded
[t=0.0856431s, 29628 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.085654s, 29628 KB] g=85, 534 evaluated, 533 expanded
[t=0.0857163s, 29628 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0857255s, 29628 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0857341s, 29628 KB] g=86, 535 evaluated, 534 expanded
[t=0.0861628s, 29628 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0861791s, 29628 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0861971s, 29628 KB] g=88, 543 evaluated, 542 expanded
[t=0.0877093s, 29628 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0877429s, 29628 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0877524s, 29628 KB] g=92, 571 evaluated, 570 expanded
[t=0.0881282s, 29628 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0881389s, 29628 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0881479s, 29628 KB] g=94, 578 evaluated, 577 expanded
[t=0.090091s, 29628 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0901368s, 29628 KB] g=98, 614 evaluated, 613 expanded
[t=0.0904584s, 29628 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0904687s, 29628 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0904776s, 29628 KB] g=100, 620 evaluated, 619 expanded
[t=0.0998862s, 29628 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.100005s, 29628 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.100025s, 29628 KB] g=112, 799 evaluated, 798 expanded
[t=0.101396s, 29628 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.10145s, 29628 KB] g=116, 824 evaluated, 823 expanded
[t=0.101732s, 29628 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.101748s, 29628 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.101757s, 29628 KB] g=118, 829 evaluated, 828 expanded
[t=0.106768s, 29628 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.106808s, 29628 KB] g=130, 925 evaluated, 924 expanded
[t=0.107482s, 29628 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.107493s, 29628 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.107502s, 29628 KB] g=136, 939 evaluated, 938 expanded
[t=0.117467s, 29628 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.117509s, 29628 KB] g=154, 1140 evaluated, 1139 expanded
[t=0.117725s, 29628 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.117742s, 29628 KB] g=156, 1144 evaluated, 1143 expanded
[t=0.119163s, 29628 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.119182s, 29628 KB] g=164, 1173 evaluated, 1172 expanded
[t=0.119328s, 29628 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.119337s, 29628 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.119346s, 29628 KB] g=166, 1176 evaluated, 1175 expanded
[t=0.128463s, 29628 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.128529s, 29628 KB] g=200, 1399 evaluated, 1398 expanded
[t=0.128847s, 29628 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.128858s, 29628 KB] g=204, 1408 evaluated, 1407 expanded
[t=0.128972s, 29628 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.128982s, 29628 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.128991s, 29628 KB] g=206, 1411 evaluated, 1410 expanded
[t=0.129451s, 29628 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.129464s, 29628 KB] g=218, 1427 evaluated, 1426 expanded
[t=0.129563s, 29628 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.129572s, 29628 KB] g=222, 1431 evaluated, 1430 expanded
[t=0.129596s, 29628 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.129606s, 29628 KB] g=223, 1432 evaluated, 1431 expanded
[t=0.129625s, 29628 KB] Solution found!
[t=0.129656s, 29628 KB] Actual search time: 0.0751412s
unstack b33 b11 (1)
put-down b33 (1)
unstack b24 b8 (1)
put-down b24 (1)
unstack b11 b10 (1)
put-down b11 (1)
unstack b10 b20 (1)
put-down b10 (1)
unstack b22 b3 (1)
put-down b22 (1)
unstack b3 b21 (1)
put-down b3 (1)
unstack b21 b14 (1)
stack b21 b22 (1)
unstack b14 b9 (1)
put-down b14 (1)
unstack b9 b27 (1)
put-down b9 (1)
unstack b27 b31 (1)
put-down b27 (1)
unstack b31 b12 (1)
stack b31 b10 (1)
pick-up b11 (1)
stack b11 b12 (1)
pick-up b9 (1)
stack b9 b31 (1)
unstack b26 b1 (1)
stack b26 b9 (1)
unstack b11 b12 (1)
put-down b11 (1)
unstack b12 b25 (1)
put-down b12 (1)
pick-up b25 (1)
stack b25 b26 (1)
unstack b20 b16 (1)
put-down b20 (1)
unstack b16 b30 (1)
put-down b16 (1)
unstack b30 b29 (1)
stack b30 b20 (1)
unstack b29 b5 (1)
stack b29 b3 (1)
unstack b5 b6 (1)
stack b5 b29 (1)
unstack b6 b34 (1)
stack b6 b8 (1)
pick-up b16 (1)
stack b16 b5 (1)
unstack b34 b32 (1)
put-down b34 (1)
unstack b32 b19 (1)
stack b32 b30 (1)
unstack b19 b2 (1)
put-down b19 (1)
pick-up b12 (1)
stack b12 b32 (1)
pick-up b11 (1)
stack b11 b12 (1)
unstack b6 b8 (1)
put-down b6 (1)
unstack b8 b23 (1)
put-down b8 (1)
unstack b23 b28 (1)
stack b23 b34 (1)
unstack b28 b4 (1)
stack b28 b19 (1)
pick-up b24 (1)
stack b24 b4 (1)
pick-up b6 (1)
stack b6 b8 (1)
unstack b24 b4 (1)
put-down b24 (1)
unstack b4 b7 (1)
stack b4 b21 (1)
unstack b7 b18 (1)
stack b7 b27 (1)
unstack b18 b15 (1)
stack b18 b33 (1)
unstack b15 b17 (1)
put-down b15 (1)
unstack b17 b13 (1)
stack b17 b18 (1)
pick-up b13 (1)
stack b13 b11 (1)
pick-up b2 (1)
stack b2 b17 (1)
pick-up b24 (1)
stack b24 b4 (1)
unstack b23 b34 (1)
put-down b23 (1)
pick-up b34 (1)
stack b34 b15 (1)
pick-up b23 (1)
stack b23 b34 (1)
unstack b6 b8 (1)
put-down b6 (1)
pick-up b8 (1)
stack b8 b23 (1)
pick-up b6 (1)
stack b6 b8 (1)
unstack b16 b5 (1)
put-down b16 (1)
unstack b5 b29 (1)
put-down b5 (1)
pick-up b16 (1)
stack b16 b5 (1)
unstack b29 b3 (1)
put-down b29 (1)
pick-up b3 (1)
stack b3 b28 (1)
pick-up b29 (1)
stack b29 b3 (1)
unstack b16 b5 (1)
put-down b16 (1)
pick-up b5 (1)
stack b5 b29 (1)
pick-up b16 (1)
stack b16 b5 (1)
unstack b24 b4 (1)
put-down b24 (1)
unstack b4 b21 (1)
put-down b4 (1)
pick-up b24 (1)
stack b24 b4 (1)
unstack b21 b22 (1)
put-down b21 (1)
pick-up b22 (1)
stack b22 b25 (1)
pick-up b21 (1)
stack b21 b22 (1)
unstack b24 b4 (1)
put-down b24 (1)
pick-up b4 (1)
stack b4 b21 (1)
pick-up b24 (1)
stack b24 b4 (1)
unstack b13 b11 (1)
put-down b13 (1)
unstack b11 b12 (1)
put-down b11 (1)
unstack b12 b32 (1)
put-down b12 (1)
pick-up b11 (1)
stack b11 b12 (1)
pick-up b13 (1)
stack b13 b11 (1)
unstack b32 b30 (1)
put-down b32 (1)
unstack b30 b20 (1)
put-down b30 (1)
pick-up b20 (1)
stack b20 b16 (1)
pick-up b30 (1)
stack b30 b20 (1)
pick-up b32 (1)
stack b32 b30 (1)
unstack b13 b11 (1)
put-down b13 (1)
unstack b11 b12 (1)
put-down b11 (1)
pick-up b12 (1)
stack b12 b32 (1)
pick-up b11 (1)
stack b11 b12 (1)
pick-up b13 (1)
stack b13 b11 (1)
unstack b24 b4 (1)
put-down b24 (1)
unstack b4 b21 (1)
put-down b4 (1)
pick-up b24 (1)
stack b24 b4 (1)
unstack b21 b22 (1)
put-down b21 (1)
unstack b22 b25 (1)
put-down b22 (1)
pick-up b21 (1)
stack b21 b22 (1)
unstack b24 b4 (1)
put-down b24 (1)
pick-up b4 (1)
stack b4 b21 (1)
pick-up b24 (1)
stack b24 b4 (1)
unstack b25 b26 (1)
put-down b25 (1)
unstack b26 b9 (1)
put-down b26 (1)
pick-up b25 (1)
stack b25 b26 (1)
unstack b9 b31 (1)
put-down b9 (1)
unstack b31 b10 (1)
put-down b31 (1)
pick-up b10 (1)
stack b10 b7 (1)
pick-up b31 (1)
stack b31 b10 (1)
pick-up b9 (1)
stack b9 b31 (1)
unstack b25 b26 (1)
put-down b25 (1)
pick-up b26 (1)
stack b26 b9 (1)
pick-up b25 (1)
stack b25 b26 (1)
unstack b24 b4 (1)
put-down b24 (1)
unstack b4 b21 (1)
put-down b4 (1)
pick-up b24 (1)
stack b24 b4 (1)
unstack b21 b22 (1)
put-down b21 (1)
pick-up b22 (1)
stack b22 b25 (1)
pick-up b21 (1)
stack b21 b22 (1)
unstack b24 b4 (1)
put-down b24 (1)
pick-up b4 (1)
stack b4 b21 (1)
pick-up b24 (1)
stack b24 b4 (1)
[t=0.12967s, 29628 KB] Plan length: 224 step(s).
[t=0.12967s, 29628 KB] Plan cost: 224
[t=0.12967s, 29628 KB] Expanded 1432 state(s).
[t=0.12967s, 29628 KB] Reopened 0 state(s).
[t=0.12967s, 29628 KB] Evaluated 1433 state(s).
[t=0.12967s, 29628 KB] Evaluations: 2866
[t=0.12967s, 29628 KB] Generated 17051 state(s).
[t=0.12967s, 29628 KB] Dead ends: 0 state(s).
[t=0.12967s, 29628 KB] Number of registered states: 1433
[t=0.12967s, 29628 KB] Int hash set load factor: 1433/2048 = 0.699707
[t=0.12967s, 29628 KB] Int hash set resizes: 11
[t=0.12967s, 29628 KB] Search time: 0.0752222s
[t=0.12967s, 29628 KB] Total time: 0.12967s
Solution found.
Peak memory: 29628 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.38s
