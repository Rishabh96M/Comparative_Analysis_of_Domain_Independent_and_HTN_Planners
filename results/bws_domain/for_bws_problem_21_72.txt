INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_21/bws_problem_21_72.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.009s wall-clock]
1472 relevant atoms
987 auxiliary atoms
2459 final queue length
4270 total queue pushes
Completing instantiation... [0.020s CPU, 0.015s wall-clock]
Instantiating: [0.030s CPU, 0.025s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
22 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.006s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.023s wall-clock]
1302 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
42 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.011s wall-clock]
Reordering and filtering variables...
43 of 43 variables necessary.
22 of 43 mutex groups necessary.
882 of 882 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 43
Translator derived variables: 0
Translator facts: 506
Translator goal facts: 15
Translator mutex groups: 22
Translator total mutex groups size: 484
Translator operators: 882
Translator axioms: 0
Translator task size: 7600
Translator peak memory: 36456 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.080s CPU, 0.084s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.3852e-05s, 24488 KB] reading input...
[t=0.00348261s, 25268 KB] done reading input!
[t=0.00486117s, 25664 KB] Initializing landmark count heuristic...
[t=0.00490881s, 25664 KB] Generating landmark graph...
[t=0.00497193s, 25664 KB] Building a landmark graph with reasonable orders.
[t=0.00502795s, 25664 KB] Initializing Exploration...
[t=0.00533194s, 25852 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0139565s, 26380 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0140874s, 26380 KB] Landmarks generation time: 0.00911627s
[t=0.0141029s, 26380 KB] Discovered 85 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0141304s, 26380 KB] 396 edges
[t=0.0141403s, 26380 KB] approx. reasonable orders
[t=0.015183s, 26380 KB] approx. obedient reasonable orders
[t=0.0152218s, 26380 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0152485s, 26380 KB] Landmarks generation time: 0.0103375s
[t=0.0152594s, 26380 KB] Discovered 85 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0152683s, 26380 KB] 411 edges
[t=0.0152773s, 26380 KB] Landmark graph generation time: 0.0103756s
[t=0.0152864s, 26380 KB] Landmark graph contains 85 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0152949s, 26380 KB] Landmark graph contains 411 orderings.
[t=0.0156735s, 26380 KB] Simplifying 3486 unary operators... done! [2646 unary operators]
[t=0.0165028s, 26380 KB] time to simplify: 0.000902777s
[t=0.0166315s, 26380 KB] Initializing additive heuristic...
[t=0.0166461s, 26380 KB] Initializing FF heuristic...
[t=0.0167127s, 26380 KB] Building successor generator...done!
[t=0.0169493s, 26380 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0169582s, 26380 KB] time for successor generation creation: 0.000199474s
[t=0.0169731s, 26380 KB] Variables: 43
[t=0.0169815s, 26380 KB] FactPairs: 506
[t=0.0169894s, 26380 KB] Bytes per state: 16
[t=0.0171889s, 26380 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0172387s, 26380 KB] 41 initial landmarks, 15 goal landmarks
[t=0.0173046s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0173144s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0173226s, 26380 KB] g=0, 1 evaluated, 0 expanded
[t=0.0173392s, 26380 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.017348s, 26380 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0174099s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0174191s, 26380 KB] g=1, 3 evaluated, 2 expanded
[t=0.0176367s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0176469s, 26380 KB] g=3, 11 evaluated, 10 expanded
[t=0.0176802s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0176893s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0176975s, 26380 KB] g=4, 12 evaluated, 11 expanded
[t=0.01782s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.017829s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0178374s, 26380 KB] g=6, 17 evaluated, 16 expanded
[t=0.0179641s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0179743s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0179829s, 26380 KB] g=8, 22 evaluated, 21 expanded
[t=0.018087s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0180962s, 26380 KB] g=10, 26 evaluated, 25 expanded
[t=0.0182211s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.01823s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.018238s, 26380 KB] g=12, 31 evaluated, 30 expanded
[t=0.0183865s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0183961s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.018409s, 26380 KB] g=14, 37 evaluated, 36 expanded
[t=0.0185564s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0185653s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0185736s, 26380 KB] g=16, 43 evaluated, 42 expanded
[t=0.0186949s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0187039s, 26380 KB] g=18, 48 evaluated, 47 expanded
[t=0.0187369s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0187457s, 26380 KB] g=19, 49 evaluated, 48 expanded
[t=0.0187811s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0187896s, 26380 KB] g=18, 50 evaluated, 49 expanded
[t=0.018822s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0188305s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0188385s, 26380 KB] g=20, 51 evaluated, 50 expanded
[t=0.0188714s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0188801s, 26380 KB] g=21, 52 evaluated, 51 expanded
[t=0.0189128s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0189212s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0189292s, 26380 KB] g=22, 53 evaluated, 52 expanded
[t=0.019051s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0190598s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0190677s, 26380 KB] g=24, 58 evaluated, 57 expanded
[t=0.0191652s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0191738s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0191825s, 26380 KB] g=24, 62 evaluated, 61 expanded
[t=0.0192159s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0192246s, 26380 KB] g=25, 63 evaluated, 62 expanded
[t=0.0193734s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0193822s, 26380 KB] g=27, 69 evaluated, 68 expanded
[t=0.019721s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0197392s, 26380 KB] g=26, 81 evaluated, 80 expanded
[t=0.0197722s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0197809s, 26380 KB] g=27, 82 evaluated, 81 expanded
[t=0.0199209s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0199298s, 26380 KB] g=29, 88 evaluated, 87 expanded
[t=0.0201159s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0201248s, 26380 KB] g=28, 96 evaluated, 95 expanded
[t=0.0201768s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0201857s, 26380 KB] g=29, 98 evaluated, 97 expanded
[t=0.0203035s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0203125s, 26380 KB] g=31, 103 evaluated, 102 expanded
[t=0.0204691s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0204817s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0204924s, 26380 KB] g=34, 110 evaluated, 109 expanded
[t=0.0206274s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.020636s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0206439s, 26380 KB] g=36, 116 evaluated, 115 expanded
[t=0.0207749s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0207836s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0207915s, 26380 KB] g=38, 122 evaluated, 121 expanded
[t=0.0209009s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0209099s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0209178s, 26380 KB] g=40, 127 evaluated, 126 expanded
[t=0.0211497s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0211613s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0211704s, 26380 KB] g=44, 137 evaluated, 136 expanded
[t=0.0212681s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0212768s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0212849s, 26380 KB] g=46, 141 evaluated, 140 expanded
[t=0.0215671s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0215767s, 26380 KB] g=52, 155 evaluated, 154 expanded
[t=0.021664s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0216725s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0216803s, 26380 KB] g=54, 159 evaluated, 158 expanded
[t=0.0217281s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0217373s, 26380 KB] g=54, 161 evaluated, 160 expanded
[t=0.0218016s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0218101s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0218178s, 26380 KB] g=56, 164 evaluated, 163 expanded
[t=0.0219376s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0219466s, 26380 KB] g=62, 171 evaluated, 170 expanded
[t=0.0219983s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0220068s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0220147s, 26380 KB] g=64, 174 evaluated, 173 expanded
[t=0.0220383s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0220471s, 26380 KB] g=64, 175 evaluated, 174 expanded
[t=0.022064s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0220727s, 26380 KB] g=65, 176 evaluated, 175 expanded
[t=0.0220868s, 26380 KB] Solution found!
[t=0.0220971s, 26380 KB] Actual search time: 0.0048493s
unstack b13 b14 (1)
put-down b13 (1)
unstack b3 b15 (1)
stack b3 b10 (1)
unstack b14 b6 (1)
put-down b14 (1)
unstack b7 b9 (1)
stack b7 b17 (1)
unstack b9 b11 (1)
put-down b9 (1)
unstack b11 b18 (1)
stack b11 b6 (1)
unstack b18 b4 (1)
put-down b18 (1)
pick-up b13 (1)
stack b13 b18 (1)
unstack b4 b21 (1)
put-down b4 (1)
unstack b21 b12 (1)
stack b21 b15 (1)
unstack b12 b5 (1)
stack b12 b7 (1)
unstack b5 b1 (1)
stack b5 b14 (1)
pick-up b4 (1)
stack b4 b5 (1)
pick-up b9 (1)
stack b9 b4 (1)
unstack b1 b2 (1)
put-down b1 (1)
unstack b2 b19 (1)
put-down b2 (1)
unstack b19 b16 (1)
put-down b19 (1)
unstack b16 b20 (1)
put-down b16 (1)
pick-up b1 (1)
stack b1 b16 (1)
pick-up b2 (1)
stack b2 b20 (1)
unstack b3 b10 (1)
put-down b3 (1)
pick-up b10 (1)
stack b10 b19 (1)
pick-up b3 (1)
stack b3 b10 (1)
unstack b2 b20 (1)
put-down b2 (1)
unstack b20 b8 (1)
put-down b20 (1)
pick-up b8 (1)
stack b8 b11 (1)
pick-up b20 (1)
stack b20 b8 (1)
pick-up b2 (1)
stack b2 b20 (1)
unstack b12 b7 (1)
put-down b12 (1)
unstack b7 b17 (1)
put-down b7 (1)
pick-up b17 (1)
stack b17 b9 (1)
pick-up b7 (1)
stack b7 b17 (1)
pick-up b12 (1)
stack b12 b7 (1)
[t=0.0221066s, 26380 KB] Plan length: 66 step(s).
[t=0.0221066s, 26380 KB] Plan cost: 66
[t=0.0221066s, 26380 KB] Expanded 176 state(s).
[t=0.0221066s, 26380 KB] Reopened 0 state(s).
[t=0.0221066s, 26380 KB] Evaluated 177 state(s).
[t=0.0221066s, 26380 KB] Evaluations: 354
[t=0.0221066s, 26380 KB] Generated 1596 state(s).
[t=0.0221066s, 26380 KB] Dead ends: 0 state(s).
[t=0.0221066s, 26380 KB] Number of registered states: 177
[t=0.0221066s, 26380 KB] Int hash set load factor: 177/256 = 0.691406
[t=0.0221066s, 26380 KB] Int hash set resizes: 8
[t=0.0221066s, 26380 KB] Search time: 0.00491912s
[t=0.0221066s, 26380 KB] Total time: 0.0221066s
Solution found.
Peak memory: 26380 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.16s
