INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_24/bws_problem_24_47.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.011s wall-clock]
1898 relevant atoms
1272 auxiliary atoms
3170 final queue length
5527 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.032s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.001s wall-clock]
Choosing groups...
25 uncovered facts
Choosing groups: [0.000s CPU, 0.002s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.009s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.001s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.002s wall-clock]
Translating task: [0.040s CPU, 0.040s wall-clock]
1704 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
48 propositions removed
Detecting unreachable propositions: [0.030s CPU, 0.027s wall-clock]
Reordering and filtering variables...
49 of 49 variables necessary.
25 of 49 mutex groups necessary.
1152 of 1152 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.010s wall-clock]
Translator variables: 49
Translator derived variables: 0
Translator facts: 650
Translator goal facts: 19
Translator mutex groups: 25
Translator total mutex groups size: 625
Translator operators: 1152
Translator axioms: 0
Translator task size: 9911
Translator peak memory: 37876 KB
Writing output... [0.010s CPU, 0.008s wall-clock]
Done! [0.130s CPU, 0.134s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=1.7733e-05s, 24488 KB] reading input...
[t=0.00333308s, 25532 KB] done reading input!
[t=0.00466907s, 25928 KB] Initializing landmark count heuristic...
[t=0.00472338s, 25928 KB] Generating landmark graph...
[t=0.00482201s, 25928 KB] Building a landmark graph with reasonable orders.
[t=0.00490196s, 26060 KB] Initializing Exploration...
[t=0.00530652s, 26388 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0241144s, 26784 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0242089s, 26784 KB] Landmarks generation time: 0.0193896s
[t=0.0242265s, 26784 KB] Discovered 103 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0242469s, 26784 KB] 423 edges
[t=0.0242595s, 26784 KB] approx. reasonable orders
[t=0.0242714s, 26784 KB] approx. obedient reasonable orders
[t=0.0243018s, 26784 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0243135s, 26784 KB] Landmarks generation time: 0.0195887s
[t=0.0243259s, 26784 KB] Discovered 103 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0243365s, 26784 KB] 423 edges
[t=0.0243473s, 26784 KB] Landmark graph generation time: 0.0196337s
[t=0.0243592s, 26784 KB] Landmark graph contains 103 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0243702s, 26784 KB] Landmark graph contains 423 orderings.
[t=0.0248413s, 26784 KB] Simplifying 4560 unary operators... done! [3456 unary operators]
[t=0.0259432s, 26916 KB] time to simplify: 0.00117928s
[t=0.0260915s, 26916 KB] Initializing additive heuristic...
[t=0.026107s, 26916 KB] Initializing FF heuristic...
[t=0.0261603s, 26916 KB] Building successor generator...done!
[t=0.0263835s, 26916 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0263929s, 26916 KB] time for successor generation creation: 0.000188443s
[t=0.0264055s, 26916 KB] Variables: 49
[t=0.0264155s, 26916 KB] FactPairs: 650
[t=0.0264245s, 26916 KB] Bytes per state: 20
[t=0.0265332s, 26916 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0265701s, 26916 KB] 48 initial landmarks, 19 goal landmarks
[t=0.0266253s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0266349s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0266435s, 26916 KB] g=0, 1 evaluated, 0 expanded
[t=0.0266576s, 26916 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0266662s, 26916 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0268622s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0268717s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.026881s, 26916 KB] g=2, 7 evaluated, 6 expanded
[t=0.0270601s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0270688s, 26916 KB] g=4, 13 evaluated, 12 expanded
[t=0.0271627s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0271721s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0271798s, 26916 KB] g=4, 16 evaluated, 15 expanded
[t=0.0273346s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0273441s, 26916 KB] g=6, 21 evaluated, 20 expanded
[t=0.0274397s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0274487s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0274568s, 26916 KB] g=6, 24 evaluated, 23 expanded
[t=0.0278964s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0279379s, 26916 KB] g=8, 29 evaluated, 28 expanded
[t=0.0282019s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0282387s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0282606s, 26916 KB] g=8, 32 evaluated, 31 expanded
[t=0.0285732s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0285941s, 26916 KB] g=10, 37 evaluated, 36 expanded
[t=0.0286709s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0286805s, 26916 KB] g=10, 39 evaluated, 38 expanded
[t=0.0289041s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0289131s, 26916 KB] g=12, 47 evaluated, 46 expanded
[t=0.0290561s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0290647s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0290726s, 26916 KB] g=14, 52 evaluated, 51 expanded
[t=0.0292188s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0292281s, 26916 KB] g=17, 57 evaluated, 56 expanded
[t=0.0295618s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0295731s, 26916 KB] g=20, 69 evaluated, 68 expanded
[t=0.0297731s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0297821s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0297904s, 26916 KB] g=22, 76 evaluated, 75 expanded
[t=0.0299379s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0299471s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0299554s, 26916 KB] g=24, 81 evaluated, 80 expanded
[t=0.0304955s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0305471s, 26916 KB] g=27, 96 evaluated, 95 expanded
[t=0.0309273s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0309452s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.030958s, 26916 KB] g=30, 105 evaluated, 104 expanded
[t=0.0312658s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.031279s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0312919s, 26916 KB] g=32, 112 evaluated, 111 expanded
[t=0.0315055s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0315183s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0315304s, 26916 KB] g=34, 117 evaluated, 116 expanded
[t=0.0326392s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0326546s, 26916 KB] g=41, 144 evaluated, 143 expanded
[t=0.0327499s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0327628s, 26916 KB] g=42, 146 evaluated, 145 expanded
[t=0.033203s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0332189s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0332313s, 26916 KB] g=44, 154 evaluated, 153 expanded
[t=0.0335208s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0335344s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0335465s, 26916 KB] g=46, 160 evaluated, 159 expanded
[t=0.0348224s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.034839s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0348582s, 26916 KB] g=52, 193 evaluated, 192 expanded
[t=0.0381215s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0382341s, 26916 KB] g=62, 238 evaluated, 237 expanded
[t=0.0385223s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0385433s, 26916 KB] g=63, 246 evaluated, 245 expanded
[t=0.0385866s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0385957s, 26916 KB] g=64, 247 evaluated, 246 expanded
[t=0.0388256s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0388355s, 26916 KB] g=66, 255 evaluated, 254 expanded
[t=0.0390541s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0390635s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0390719s, 26916 KB] g=68, 262 evaluated, 261 expanded
[t=0.039275s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.039284s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.039292s, 26916 KB] g=70, 269 evaluated, 268 expanded
[t=0.039466s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0394751s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.039483s, 26916 KB] g=72, 275 evaluated, 274 expanded
[t=0.0396834s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0396921s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0397002s, 26916 KB] g=74, 282 evaluated, 281 expanded
[t=0.0397906s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0397995s, 26916 KB] g=75, 285 evaluated, 284 expanded
[t=0.0398372s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0398457s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0398542s, 26916 KB] g=76, 286 evaluated, 285 expanded
[t=0.0403198s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0403428s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0403517s, 26916 KB] g=80, 303 evaluated, 302 expanded
[t=0.0405554s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0406142s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0406288s, 26916 KB] g=82, 309 evaluated, 308 expanded
[t=0.0411686s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0411777s, 26916 KB] g=86, 329 evaluated, 328 expanded
[t=0.041292s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0413007s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0413086s, 26916 KB] g=88, 333 evaluated, 332 expanded
[t=0.0421954s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0422055s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0422206s, 26916 KB] g=96, 367 evaluated, 366 expanded
[t=0.0423315s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0423403s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0423484s, 26916 KB] g=98, 371 evaluated, 370 expanded
[t=0.0455864s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0456638s, 26916 KB] g=112, 483 evaluated, 482 expanded
[t=0.0457815s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0457911s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0457992s, 26916 KB] g=114, 487 evaluated, 486 expanded
[t=0.0460484s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0460583s, 26916 KB] g=118, 496 evaluated, 495 expanded
[t=0.0461584s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.04618s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0461884s, 26916 KB] g=120, 499 evaluated, 498 expanded
[t=0.0473839s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0473997s, 26916 KB] g=136, 537 evaluated, 536 expanded
[t=0.0476751s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0476888s, 26916 KB] g=144, 548 evaluated, 547 expanded
[t=0.0477164s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0477287s, 26916 KB] g=145, 549 evaluated, 548 expanded
[t=0.0477519s, 26916 KB] Solution found!
[t=0.0477678s, 26916 KB] Actual search time: 0.021199s
unstack b22 b15 (1)
put-down b22 (1)
unstack b3 b11 (1)
stack b3 b2 (1)
unstack b5 b9 (1)
stack b5 b3 (1)
unstack b9 b20 (1)
stack b9 b11 (1)
unstack b15 b23 (1)
put-down b15 (1)
pick-up b10 (1)
stack b10 b23 (1)
pick-up b20 (1)
stack b20 b15 (1)
unstack b10 b23 (1)
put-down b10 (1)
unstack b23 b4 (1)
put-down b23 (1)
unstack b4 b14 (1)
put-down b4 (1)
pick-up b10 (1)
stack b10 b23 (1)
pick-up b14 (1)
stack b14 b4 (1)
unstack b9 b11 (1)
put-down b9 (1)
unstack b11 b19 (1)
put-down b11 (1)
unstack b19 b1 (1)
stack b19 b14 (1)
pick-up b11 (1)
stack b11 b1 (1)
pick-up b9 (1)
stack b9 b11 (1)
unstack b5 b3 (1)
put-down b5 (1)
unstack b3 b2 (1)
put-down b3 (1)
unstack b2 b16 (1)
put-down b2 (1)
unstack b16 b21 (1)
stack b16 b19 (1)
pick-up b21 (1)
stack b21 b5 (1)
pick-up b3 (1)
stack b3 b2 (1)
unstack b21 b5 (1)
put-down b21 (1)
pick-up b5 (1)
stack b5 b3 (1)
pick-up b21 (1)
stack b21 b5 (1)
unstack b9 b11 (1)
put-down b9 (1)
unstack b11 b1 (1)
put-down b11 (1)
unstack b1 b18 (1)
put-down b1 (1)
unstack b18 b24 (1)
put-down b18 (1)
unstack b24 b7 (1)
put-down b24 (1)
unstack b7 b6 (1)
stack b7 b21 (1)
pick-up b1 (1)
stack b1 b18 (1)
unstack b6 b12 (1)
stack b6 b9 (1)
pick-up b11 (1)
stack b11 b1 (1)
unstack b12 b17 (1)
stack b12 b24 (1)
unstack b17 b13 (1)
put-down b17 (1)
unstack b13 b8 (1)
stack b13 b6 (1)
unstack b10 b23 (1)
put-down b10 (1)
pick-up b23 (1)
stack b23 b8 (1)
pick-up b10 (1)
stack b10 b23 (1)
unstack b20 b15 (1)
put-down b20 (1)
pick-up b15 (1)
stack b15 b13 (1)
pick-up b20 (1)
stack b20 b15 (1)
unstack b11 b1 (1)
put-down b11 (1)
unstack b1 b18 (1)
put-down b1 (1)
pick-up b18 (1)
stack b18 b12 (1)
pick-up b1 (1)
stack b1 b18 (1)
pick-up b11 (1)
stack b11 b1 (1)
unstack b7 b21 (1)
put-down b7 (1)
unstack b21 b5 (1)
put-down b21 (1)
pick-up b7 (1)
stack b7 b21 (1)
unstack b5 b3 (1)
put-down b5 (1)
unstack b3 b2 (1)
put-down b3 (1)
pick-up b2 (1)
stack b2 b17 (1)
pick-up b3 (1)
stack b3 b2 (1)
pick-up b5 (1)
stack b5 b3 (1)
unstack b7 b21 (1)
put-down b7 (1)
pick-up b21 (1)
stack b21 b5 (1)
pick-up b7 (1)
stack b7 b21 (1)
unstack b20 b15 (1)
put-down b20 (1)
unstack b15 b13 (1)
put-down b15 (1)
unstack b13 b6 (1)
put-down b13 (1)
pick-up b15 (1)
stack b15 b13 (1)
pick-up b20 (1)
stack b20 b15 (1)
unstack b6 b9 (1)
put-down b6 (1)
pick-up b9 (1)
stack b9 b11 (1)
pick-up b6 (1)
stack b6 b9 (1)
unstack b20 b15 (1)
put-down b20 (1)
unstack b15 b13 (1)
put-down b15 (1)
pick-up b13 (1)
stack b13 b6 (1)
pick-up b15 (1)
stack b15 b13 (1)
pick-up b20 (1)
stack b20 b15 (1)
[t=0.0477822s, 26916 KB] Plan length: 146 step(s).
[t=0.0477822s, 26916 KB] Plan cost: 146
[t=0.0477822s, 26916 KB] Expanded 549 state(s).
[t=0.0477822s, 26916 KB] Reopened 0 state(s).
[t=0.0477822s, 26916 KB] Evaluated 550 state(s).
[t=0.0477822s, 26916 KB] Evaluations: 1100
[t=0.0477822s, 26916 KB] Generated 4866 state(s).
[t=0.0477822s, 26916 KB] Dead ends: 0 state(s).
[t=0.0477822s, 26916 KB] Number of registered states: 550
[t=0.0477822s, 26916 KB] Int hash set load factor: 550/1024 = 0.537109
[t=0.0477822s, 26916 KB] Int hash set resizes: 10
[t=0.0477822s, 26916 KB] Search time: 0.0212493s
[t=0.0477822s, 26916 KB] Total time: 0.0477822s
Solution found.
Peak memory: 26916 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.24s
