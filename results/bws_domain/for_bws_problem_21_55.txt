INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_21/bws_problem_21_55.pddl --sas-file output.sas
Parsing...
Parsing: [0.010s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.009s wall-clock]
1472 relevant atoms
987 auxiliary atoms
2459 final queue length
4270 total queue pushes
Completing instantiation... [0.010s CPU, 0.016s wall-clock]
Instantiating: [0.020s CPU, 0.026s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
22 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.006s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.022s wall-clock]
1302 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
42 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.011s wall-clock]
Reordering and filtering variables...
43 of 43 variables necessary.
22 of 43 mutex groups necessary.
882 of 882 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 43
Translator derived variables: 0
Translator facts: 506
Translator goal facts: 18
Translator mutex groups: 22
Translator total mutex groups size: 484
Translator operators: 882
Translator axioms: 0
Translator task size: 7603
Translator peak memory: 36460 KB
Writing output... [0.010s CPU, 0.005s wall-clock]
Done! [0.080s CPU, 0.079s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=1.8976e-05s, 24488 KB] reading input...
[t=0.00251302s, 25268 KB] done reading input!
[t=0.00340699s, 25664 KB] Initializing landmark count heuristic...
[t=0.00344959s, 25664 KB] Generating landmark graph...
[t=0.00352526s, 25664 KB] Building a landmark graph with reasonable orders.
[t=0.00359098s, 25664 KB] Initializing Exploration...
[t=0.00387063s, 25852 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0123976s, 26248 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0124693s, 26248 KB] Landmarks generation time: 0.008943s
[t=0.0124837s, 26248 KB] Discovered 91 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0125222s, 26248 KB] 338 edges
[t=0.0125502s, 26248 KB] approx. reasonable orders
[t=0.0125593s, 26248 KB] approx. obedient reasonable orders
[t=0.0125855s, 26248 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0125945s, 26248 KB] Landmarks generation time: 0.00914333s
[t=0.0126053s, 26248 KB] Discovered 91 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0126136s, 26248 KB] 338 edges
[t=0.0126229s, 26248 KB] Landmark graph generation time: 0.00918045s
[t=0.0126317s, 26248 KB] Landmark graph contains 91 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0126454s, 26248 KB] Landmark graph contains 338 orderings.
[t=0.013285s, 26248 KB] Simplifying 3486 unary operators... done! [2646 unary operators]
[t=0.0142879s, 26380 KB] time to simplify: 0.00107754s
[t=0.0144231s, 26380 KB] Initializing additive heuristic...
[t=0.0144405s, 26380 KB] Initializing FF heuristic...
[t=0.0144996s, 26380 KB] Building successor generator...done!
[t=0.0147056s, 26380 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0147148s, 26380 KB] time for successor generation creation: 0.000163571s
[t=0.0147319s, 26380 KB] Variables: 43
[t=0.0147417s, 26380 KB] FactPairs: 506
[t=0.0147508s, 26380 KB] Bytes per state: 16
[t=0.0149362s, 26380 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0149804s, 26380 KB] 41 initial landmarks, 18 goal landmarks
[t=0.0150657s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0150767s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0150865s, 26380 KB] g=0, 1 evaluated, 0 expanded
[t=0.0151049s, 26380 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0151151s, 26380 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0153022s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.015321s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.01533s, 26380 KB] g=2, 7 evaluated, 6 expanded
[t=0.0154625s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0154729s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0154813s, 26380 KB] g=4, 12 evaluated, 11 expanded
[t=0.0156364s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0156489s, 26380 KB] g=6, 17 evaluated, 16 expanded
[t=0.0157066s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0157156s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0157247s, 26380 KB] g=6, 19 evaluated, 18 expanded
[t=0.0158231s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0158331s, 26380 KB] g=7, 22 evaluated, 21 expanded
[t=0.0158687s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0158775s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0158858s, 26380 KB] g=8, 23 evaluated, 22 expanded
[t=0.0160131s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0160235s, 26380 KB] g=10, 28 evaluated, 27 expanded
[t=0.0160627s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0160755s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0160941s, 26380 KB] g=10, 29 evaluated, 28 expanded
[t=0.0162014s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0162128s, 26380 KB] g=12, 33 evaluated, 32 expanded
[t=0.0163414s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0163531s, 26380 KB] g=14, 38 evaluated, 37 expanded
[t=0.0165041s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0165161s, 26380 KB] g=16, 44 evaluated, 43 expanded
[t=0.0166867s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0167017s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0167105s, 26380 KB] g=18, 51 evaluated, 50 expanded
[t=0.0168793s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0168962s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.016905s, 26380 KB] g=20, 58 evaluated, 57 expanded
[t=0.0170748s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0170896s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0170992s, 26380 KB] g=22, 65 evaluated, 64 expanded
[t=0.0172435s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0172599s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0172689s, 26380 KB] g=24, 71 evaluated, 70 expanded
[t=0.0176431s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0176625s, 26380 KB] g=27, 87 evaluated, 86 expanded
[t=0.0177184s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0177275s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0177356s, 26380 KB] g=28, 89 evaluated, 88 expanded
[t=0.0178808s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0178944s, 26380 KB] g=29, 95 evaluated, 94 expanded
[t=0.0179285s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0179374s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0179454s, 26380 KB] g=30, 96 evaluated, 95 expanded
[t=0.0180949s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0181048s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.018113s, 26380 KB] g=32, 102 evaluated, 101 expanded
[t=0.0181461s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0181562s, 26380 KB] g=33, 103 evaluated, 102 expanded
[t=0.0181901s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0181992s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0182075s, 26380 KB] g=34, 104 evaluated, 103 expanded
[t=0.0183713s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0183821s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0183917s, 26380 KB] g=36, 110 evaluated, 109 expanded
[t=0.0185258s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0185359s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0185446s, 26380 KB] g=38, 115 evaluated, 114 expanded
[t=0.0193221s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0193552s, 26380 KB] g=44, 147 evaluated, 146 expanded
[t=0.0194768s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0194862s, 26380 KB] g=46, 152 evaluated, 151 expanded
[t=0.0195844s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0195934s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0196015s, 26380 KB] g=48, 156 evaluated, 155 expanded
[t=0.0208311s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0208444s, 26380 KB] g=58, 211 evaluated, 210 expanded
[t=0.0209471s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0209569s, 26380 KB] g=60, 215 evaluated, 214 expanded
[t=0.0212791s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.02129s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0212984s, 26380 KB] g=66, 229 evaluated, 228 expanded
[t=0.0258775s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0258949s, 26380 KB] g=88, 430 evaluated, 429 expanded
[t=0.0260373s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0260469s, 26380 KB] g=90, 436 evaluated, 435 expanded
[t=0.0261668s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0261765s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.026185s, 26380 KB] g=92, 441 evaluated, 440 expanded
[t=0.0265303s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0265401s, 26380 KB] g=96, 457 evaluated, 456 expanded
[t=0.0266299s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0266386s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0266468s, 26380 KB] g=98, 461 evaluated, 460 expanded
[t=0.0272051s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0272151s, 26380 KB] g=106, 490 evaluated, 489 expanded
[t=0.0272859s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0272969s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0273052s, 26380 KB] g=108, 493 evaluated, 492 expanded
[t=0.0283242s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0283366s, 26380 KB] g=126, 553 evaluated, 552 expanded
[t=0.028393s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0284022s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0284106s, 26380 KB] g=128, 556 evaluated, 555 expanded
[t=0.0285758s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0285946s, 26380 KB] g=136, 567 evaluated, 566 expanded
[t=0.0286497s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0286629s, 26380 KB] g=140, 571 evaluated, 570 expanded
[t=0.0286843s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0286927s, 26380 KB] g=141, 572 evaluated, 571 expanded
[t=0.0287066s, 26380 KB] Solution found!
[t=0.0287178s, 26380 KB] Actual search time: 0.0137333s
unstack b20 b3 (1)
put-down b20 (1)
unstack b21 b10 (1)
stack b21 b20 (1)
unstack b7 b9 (1)
stack b7 b1 (1)
unstack b9 b5 (1)
stack b9 b21 (1)
unstack b5 b2 (1)
stack b5 b8 (1)
unstack b10 b18 (1)
put-down b10 (1)
unstack b18 b17 (1)
put-down b18 (1)
unstack b17 b14 (1)
put-down b17 (1)
unstack b14 b4 (1)
stack b14 b7 (1)
unstack b4 b12 (1)
stack b4 b2 (1)
pick-up b10 (1)
stack b10 b12 (1)
pick-up b18 (1)
stack b18 b4 (1)
unstack b5 b8 (1)
put-down b5 (1)
unstack b8 b6 (1)
stack b8 b3 (1)
unstack b6 b19 (1)
stack b6 b10 (1)
unstack b19 b13 (1)
stack b19 b17 (1)
unstack b13 b15 (1)
stack b13 b18 (1)
pick-up b15 (1)
stack b15 b14 (1)
pick-up b5 (1)
stack b5 b8 (1)
unstack b6 b10 (1)
put-down b6 (1)
unstack b10 b12 (1)
put-down b10 (1)
pick-up b12 (1)
stack b12 b15 (1)
pick-up b10 (1)
stack b10 b12 (1)
pick-up b6 (1)
stack b6 b10 (1)
unstack b13 b18 (1)
put-down b13 (1)
unstack b18 b4 (1)
put-down b18 (1)
pick-up b13 (1)
stack b13 b18 (1)
unstack b4 b2 (1)
put-down b4 (1)
pick-up b2 (1)
stack b2 b19 (1)
pick-up b4 (1)
stack b4 b2 (1)
unstack b13 b18 (1)
put-down b13 (1)
pick-up b18 (1)
stack b18 b4 (1)
pick-up b13 (1)
stack b13 b18 (1)
unstack b6 b10 (1)
put-down b6 (1)
unstack b10 b12 (1)
put-down b10 (1)
unstack b12 b15 (1)
put-down b12 (1)
pick-up b10 (1)
stack b10 b12 (1)
pick-up b6 (1)
stack b6 b10 (1)
unstack b15 b14 (1)
put-down b15 (1)
unstack b14 b7 (1)
put-down b14 (1)
pick-up b15 (1)
stack b15 b14 (1)
unstack b7 b1 (1)
put-down b7 (1)
unstack b1 b16 (1)
put-down b1 (1)
unstack b16 b11 (1)
stack b16 b5 (1)
pick-up b1 (1)
stack b1 b16 (1)
pick-up b7 (1)
stack b7 b1 (1)
unstack b15 b14 (1)
put-down b15 (1)
pick-up b14 (1)
stack b14 b7 (1)
pick-up b15 (1)
stack b15 b14 (1)
unstack b6 b10 (1)
put-down b6 (1)
unstack b10 b12 (1)
put-down b10 (1)
pick-up b12 (1)
stack b12 b15 (1)
pick-up b10 (1)
stack b10 b12 (1)
pick-up b6 (1)
stack b6 b10 (1)
unstack b13 b18 (1)
put-down b13 (1)
unstack b18 b4 (1)
put-down b18 (1)
unstack b4 b2 (1)
put-down b4 (1)
pick-up b18 (1)
stack b18 b4 (1)
pick-up b13 (1)
stack b13 b18 (1)
unstack b2 b19 (1)
put-down b2 (1)
unstack b19 b17 (1)
put-down b19 (1)
pick-up b17 (1)
stack b17 b11 (1)
pick-up b19 (1)
stack b19 b17 (1)
pick-up b2 (1)
stack b2 b19 (1)
unstack b13 b18 (1)
put-down b13 (1)
unstack b18 b4 (1)
put-down b18 (1)
pick-up b13 (1)
stack b13 b18 (1)
pick-up b4 (1)
stack b4 b2 (1)
unstack b13 b18 (1)
put-down b13 (1)
pick-up b18 (1)
stack b18 b4 (1)
pick-up b13 (1)
stack b13 b18 (1)
[t=0.0287276s, 26380 KB] Plan length: 142 step(s).
[t=0.0287276s, 26380 KB] Plan cost: 142
[t=0.0287276s, 26380 KB] Expanded 572 state(s).
[t=0.0287276s, 26380 KB] Reopened 0 state(s).
[t=0.0287276s, 26380 KB] Evaluated 573 state(s).
[t=0.0287276s, 26380 KB] Evaluations: 1146
[t=0.0287276s, 26380 KB] Generated 4139 state(s).
[t=0.0287276s, 26380 KB] Dead ends: 0 state(s).
[t=0.0287276s, 26380 KB] Number of registered states: 573
[t=0.0287276s, 26380 KB] Int hash set load factor: 573/1024 = 0.55957
[t=0.0287276s, 26380 KB] Int hash set resizes: 10
[t=0.0287276s, 26380 KB] Search time: 0.0137923s
[t=0.0287276s, 26380 KB] Total time: 0.0287276s
Solution found.
Peak memory: 26380 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.15s
