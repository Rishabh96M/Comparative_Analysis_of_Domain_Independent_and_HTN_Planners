INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_21/bws_problem_21_87.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.010s wall-clock]
1472 relevant atoms
987 auxiliary atoms
2459 final queue length
4268 total queue pushes
Completing instantiation... [0.010s CPU, 0.015s wall-clock]
Instantiating: [0.020s CPU, 0.026s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.010s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
22 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.006s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.022s wall-clock]
1302 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
42 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.011s wall-clock]
Reordering and filtering variables...
43 of 43 variables necessary.
22 of 43 mutex groups necessary.
882 of 882 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 43
Translator derived variables: 0
Translator facts: 506
Translator goal facts: 17
Translator mutex groups: 22
Translator total mutex groups size: 484
Translator operators: 882
Translator axioms: 0
Translator task size: 7602
Translator peak memory: 36452 KB
Writing output... [0.000s CPU, 0.005s wall-clock]
Done! [0.070s CPU, 0.079s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.4006e-05s, 24488 KB] reading input...
[t=0.00258571s, 25268 KB] done reading input!
[t=0.00342783s, 25664 KB] Initializing landmark count heuristic...
[t=0.00346429s, 25664 KB] Generating landmark graph...
[t=0.00352184s, 25664 KB] Building a landmark graph with reasonable orders.
[t=0.00357821s, 25664 KB] Initializing Exploration...
[t=0.00384627s, 25852 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0136801s, 26380 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0137903s, 26380 KB] Landmarks generation time: 0.0102704s
[t=0.0138225s, 26380 KB] Discovered 95 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0138453s, 26380 KB] 575 edges
[t=0.0138562s, 26380 KB] approx. reasonable orders
[t=0.0167506s, 26380 KB] approx. obedient reasonable orders
[t=0.0172513s, 26380 KB] Removed 1 reasonable or obedient reasonable orders
[t=0.0172751s, 26380 KB] Landmarks generation time: 0.0138073s
[t=0.0172857s, 26380 KB] Discovered 95 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0172951s, 26380 KB] 653 edges
[t=0.0173041s, 26380 KB] Landmark graph generation time: 0.0138483s
[t=0.017314s, 26380 KB] Landmark graph contains 95 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.017338s, 26380 KB] Landmark graph contains 653 orderings.
[t=0.0176881s, 26380 KB] Simplifying 3486 unary operators... done! [2646 unary operators]
[t=0.0185228s, 26380 KB] time to simplify: 0.000912301s
[t=0.0186813s, 26380 KB] Initializing additive heuristic...
[t=0.0187034s, 26380 KB] Initializing FF heuristic...
[t=0.0187797s, 26380 KB] Building successor generator...done!
[t=0.0190254s, 26380 KB] peak memory difference for successor generator creation: 0 KB
[t=0.019035s, 26380 KB] time for successor generation creation: 0.000202927s
[t=0.0190508s, 26380 KB] Variables: 43
[t=0.0190593s, 26380 KB] FactPairs: 506
[t=0.0190676s, 26380 KB] Bytes per state: 16
[t=0.0192117s, 26380 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0193232s, 26380 KB] 43 initial landmarks, 17 goal landmarks
[t=0.0194104s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0194241s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0194326s, 26380 KB] g=0, 1 evaluated, 0 expanded
[t=0.0194473s, 26380 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0194559s, 26380 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0195462s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0195564s, 26380 KB] g=1, 4 evaluated, 3 expanded
[t=0.0195902s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.019599s, 26380 KB] g=2, 5 evaluated, 4 expanded
[t=0.0197829s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0197927s, 26380 KB] g=3, 12 evaluated, 11 expanded
[t=0.0200725s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0200817s, 26380 KB] g=6, 24 evaluated, 23 expanded
[t=0.0201592s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.020169s, 26380 KB] g=6, 27 evaluated, 26 expanded
[t=0.0203565s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0203659s, 26380 KB] g=8, 35 evaluated, 34 expanded
[t=0.0204208s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0204302s, 26380 KB] g=8, 37 evaluated, 36 expanded
[t=0.0206394s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0206485s, 26380 KB] g=9, 46 evaluated, 45 expanded
[t=0.0214316s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0214456s, 26380 KB] g=12, 81 evaluated, 80 expanded
[t=0.0215341s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0215508s, 26380 KB] g=16, 84 evaluated, 83 expanded
[t=0.0218767s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0218897s, 26380 KB] g=18, 98 evaluated, 97 expanded
[t=0.0221654s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0221847s, 26380 KB] g=20, 109 evaluated, 108 expanded
[t=0.0225597s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0225724s, 26380 KB] g=22, 124 evaluated, 123 expanded
[t=0.0229821s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0230018s, 26380 KB] g=24, 140 evaluated, 139 expanded
[t=0.0234002s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.023416s, 26380 KB] g=26, 154 evaluated, 153 expanded
[t=0.0238103s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0238568s, 26380 KB] g=28, 167 evaluated, 166 expanded
[t=0.024141s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0241615s, 26380 KB] g=30, 177 evaluated, 176 expanded
[t=0.0244339s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0244478s, 26380 KB] g=32, 187 evaluated, 186 expanded
[t=0.0250523s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0250674s, 26380 KB] g=34, 212 evaluated, 211 expanded
[t=0.0253349s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0253506s, 26380 KB] g=36, 223 evaluated, 222 expanded
[t=0.0270116s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0270505s, 26380 KB] g=40, 289 evaluated, 288 expanded
[t=0.0272258s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0272358s, 26380 KB] g=42, 296 evaluated, 295 expanded
[t=0.0283105s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0283359s, 26380 KB] g=48, 339 evaluated, 338 expanded
[t=0.028934s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0289778s, 26380 KB] g=52, 360 evaluated, 359 expanded
[t=0.0292137s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0292255s, 26380 KB] g=54, 369 evaluated, 368 expanded
[t=0.0293926s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0294017s, 26380 KB] g=56, 376 evaluated, 375 expanded
[t=0.0295442s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0295538s, 26380 KB] g=58, 382 evaluated, 381 expanded
[t=0.0315756s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0315942s, 26380 KB] g=70, 473 evaluated, 472 expanded
[t=0.0318616s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0318714s, 26380 KB] g=74, 485 evaluated, 484 expanded
[t=0.0319399s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0319488s, 26380 KB] g=76, 488 evaluated, 487 expanded
[t=0.0333555s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0333689s, 26380 KB] g=92, 556 evaluated, 555 expanded
[t=0.0337729s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0337889s, 26380 KB] g=27, 575 evaluated, 574 expanded
[t=0.0338858s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0338953s, 26380 KB] g=100, 580 evaluated, 579 expanded
[t=0.0339351s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0339439s, 26380 KB] g=101, 582 evaluated, 581 expanded
[t=0.0339816s, 26380 KB] Solution found!
[t=0.0339925s, 26380 KB] Actual search time: 0.0146602s
unstack b17 b16 (1)
stack b17 b15 (1)
unstack b10 b3 (1)
put-down b10 (1)
unstack b3 b18 (1)
put-down b3 (1)
unstack b16 b1 (1)
stack b16 b18 (1)
unstack b1 b6 (1)
put-down b1 (1)
unstack b6 b8 (1)
put-down b6 (1)
unstack b8 b5 (1)
put-down b8 (1)
unstack b5 b4 (1)
stack b5 b10 (1)
unstack b4 b12 (1)
put-down b4 (1)
unstack b12 b21 (1)
put-down b12 (1)
unstack b21 b20 (1)
stack b21 b3 (1)
unstack b20 b13 (1)
stack b20 b21 (1)
unstack b13 b2 (1)
put-down b13 (1)
unstack b2 b11 (1)
stack b2 b6 (1)
unstack b11 b19 (1)
stack b11 b8 (1)
unstack b19 b9 (1)
stack b19 b5 (1)
pick-up b1 (1)
stack b1 b19 (1)
pick-up b9 (1)
stack b9 b12 (1)
unstack b11 b8 (1)
put-down b11 (1)
pick-up b8 (1)
stack b8 b13 (1)
pick-up b11 (1)
stack b11 b8 (1)
unstack b16 b18 (1)
put-down b16 (1)
pick-up b18 (1)
stack b18 b2 (1)
pick-up b16 (1)
stack b16 b18 (1)
unstack b17 b15 (1)
put-down b17 (1)
unstack b15 b7 (1)
stack b15 b11 (1)
pick-up b17 (1)
stack b17 b15 (1)
unstack b7 b14 (1)
stack b7 b1 (1)
pick-up b14 (1)
stack b14 b9 (1)
unstack b16 b18 (1)
put-down b16 (1)
unstack b18 b2 (1)
put-down b18 (1)
pick-up b16 (1)
stack b16 b18 (1)
unstack b2 b6 (1)
put-down b2 (1)
pick-up b6 (1)
stack b6 b20 (1)
pick-up b2 (1)
stack b2 b6 (1)
unstack b16 b18 (1)
put-down b16 (1)
pick-up b18 (1)
stack b18 b2 (1)
pick-up b16 (1)
stack b16 b18 (1)
unstack b7 b1 (1)
put-down b7 (1)
unstack b1 b19 (1)
put-down b1 (1)
unstack b19 b5 (1)
put-down b19 (1)
pick-up b1 (1)
stack b1 b19 (1)
pick-up b7 (1)
stack b7 b1 (1)
unstack b5 b10 (1)
put-down b5 (1)
pick-up b10 (1)
stack b10 b14 (1)
pick-up b5 (1)
stack b5 b10 (1)
unstack b7 b1 (1)
put-down b7 (1)
unstack b1 b19 (1)
put-down b1 (1)
pick-up b19 (1)
stack b19 b5 (1)
pick-up b1 (1)
stack b1 b19 (1)
pick-up b7 (1)
stack b7 b1 (1)
[t=0.0340025s, 26380 KB] Plan length: 102 step(s).
[t=0.0340025s, 26380 KB] Plan cost: 102
[t=0.0340025s, 26380 KB] Expanded 583 state(s).
[t=0.0340025s, 26380 KB] Reopened 0 state(s).
[t=0.0340025s, 26380 KB] Evaluated 584 state(s).
[t=0.0340025s, 26380 KB] Evaluations: 1168
[t=0.0340025s, 26380 KB] Generated 5103 state(s).
[t=0.0340025s, 26380 KB] Dead ends: 0 state(s).
[t=0.0340025s, 26380 KB] Number of registered states: 584
[t=0.0340025s, 26380 KB] Int hash set load factor: 584/1024 = 0.570312
[t=0.0340025s, 26380 KB] Int hash set resizes: 10
[t=0.0340025s, 26380 KB] Search time: 0.014792s
[t=0.0340025s, 26380 KB] Total time: 0.0340025s
Solution found.
Peak memory: 26380 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.16s
