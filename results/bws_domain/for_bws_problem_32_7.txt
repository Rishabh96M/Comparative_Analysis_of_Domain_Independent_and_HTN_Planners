INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_32/bws_problem_32_7.pddl --sas-file output.sas
Parsing...
Parsing: [0.010s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.000s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.020s wall-clock]
3298 relevant atoms
2208 auxiliary atoms
5506 final queue length
9672 total queue pushes
Completing instantiation... [0.040s CPU, 0.044s wall-clock]
Instantiating: [0.060s CPU, 0.066s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.010s CPU, 0.002s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
33 uncovered facts
Choosing groups: [0.000s CPU, 0.002s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.010s CPU, 0.011s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.001s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.002s wall-clock]
Translating task: [0.060s CPU, 0.051s wall-clock]
3040 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
64 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.026s wall-clock]
Reordering and filtering variables...
65 of 65 variables necessary.
33 of 65 mutex groups necessary.
2048 of 2048 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.020s CPU, 0.013s wall-clock]
Translator variables: 65
Translator derived variables: 0
Translator facts: 1122
Translator goal facts: 27
Translator mutex groups: 33
Translator total mutex groups size: 1089
Translator operators: 2048
Translator axioms: 0
Translator task size: 17567
Translator peak memory: 42752 KB
Writing output... [0.010s CPU, 0.011s wall-clock]
Done! [0.190s CPU, 0.186s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.2225e-05s, 24488 KB] reading input...
[t=0.00581418s, 26784 KB] done reading input!
[t=0.00683271s, 27180 KB] Initializing landmark count heuristic...
[t=0.00687777s, 27180 KB] Generating landmark graph...
[t=0.00702887s, 27312 KB] Building a landmark graph with reasonable orders.
[t=0.00715237s, 27312 KB] Initializing Exploration...
[t=0.00782326s, 27768 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0403447s, 28692 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0404861s, 28692 KB] Landmarks generation time: 0.03347s
[t=0.0405162s, 28692 KB] Discovered 144 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0405346s, 28692 KB] 696 edges
[t=0.0405452s, 28692 KB] approx. reasonable orders
[t=0.0500015s, 28692 KB] approx. obedient reasonable orders
[t=0.0501766s, 28692 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0502044s, 28692 KB] Landmarks generation time: 0.0433231s
[t=0.0502145s, 28692 KB] Discovered 144 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0502228s, 28692 KB] 793 edges
[t=0.050231s, 28692 KB] Landmark graph generation time: 0.0433602s
[t=0.0502395s, 28692 KB] Landmark graph contains 144 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0502472s, 28692 KB] Landmark graph contains 793 orderings.
[t=0.050985s, 28724 KB] Simplifying 8128 unary operators... done! [6144 unary operators]
[t=0.0531004s, 28856 KB] time to simplify: 0.00213438s
[t=0.0532337s, 28856 KB] Initializing additive heuristic...
[t=0.0532527s, 28856 KB] Initializing FF heuristic...
[t=0.0533054s, 28856 KB] Building successor generator...done!
[t=0.0536486s, 28856 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0536588s, 28856 KB] time for successor generation creation: 0.000313567s
[t=0.0536721s, 28856 KB] Variables: 65
[t=0.0536804s, 28856 KB] FactPairs: 1122
[t=0.0536883s, 28856 KB] Bytes per state: 32
[t=0.0537762s, 28856 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0538097s, 28856 KB] 64 initial landmarks, 27 goal landmarks
[t=0.0538836s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 80
[t=0.0538929s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 58
[t=0.0539011s, 28856 KB] g=0, 1 evaluated, 0 expanded
[t=0.0539159s, 28856 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 80
[t=0.0539243s, 28856 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 58
[t=0.0540834s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 79
[t=0.0540922s, 28856 KB] g=1, 4 evaluated, 3 expanded
[t=0.0547177s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 78
[t=0.054732s, 28856 KB] g=4, 17 evaluated, 16 expanded
[t=0.0550863s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 77
[t=0.0550957s, 28856 KB] g=5, 24 evaluated, 23 expanded
[t=0.0551544s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 57
[t=0.0551634s, 28856 KB] g=2, 25 evaluated, 24 expanded
[t=0.0558859s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 56
[t=0.0558953s, 28856 KB] g=4, 40 evaluated, 39 expanded
[t=0.0561931s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 76
[t=0.0562032s, 28856 KB] g=8, 46 evaluated, 45 expanded
[t=0.0572594s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 75
[t=0.0572782s, 28856 KB] g=10, 68 evaluated, 67 expanded
[t=0.0583057s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 74
[t=0.0583234s, 28856 KB] g=12, 90 evaluated, 89 expanded
[t=0.0594767s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 55
[t=0.0595044s, 28856 KB] g=8, 115 evaluated, 114 expanded
[t=0.0595615s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 73
[t=0.0595705s, 28856 KB] g=14, 116 evaluated, 115 expanded
[t=0.0603722s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 54
[t=0.0603925s, 28856 KB] g=10, 133 evaluated, 132 expanded
[t=0.0608901s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 72
[t=0.0609067s, 28856 KB] g=16, 143 evaluated, 142 expanded
[t=0.0612434s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 71
[t=0.0612564s, 28856 KB] g=17, 150 evaluated, 149 expanded
[t=0.0627972s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 70
[t=0.0628144s, 28856 KB] g=20, 183 evaluated, 182 expanded
[t=0.0639477s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 69
[t=0.0639635s, 28856 KB] g=22, 207 evaluated, 206 expanded
[t=0.0641695s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 68
[t=0.0641808s, 28856 KB] g=23, 211 evaluated, 210 expanded
[t=0.0657637s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 66
[t=0.065777s, 28856 KB] g=26, 244 evaluated, 243 expanded
[t=0.0670005s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 53
[t=0.0670131s, 28856 KB] g=16, 269 evaluated, 268 expanded
[t=0.0672588s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 63
[t=0.0672689s, 28856 KB] g=28, 274 evaluated, 273 expanded
[t=0.068954s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 62
[t=0.0689696s, 28856 KB] g=30, 308 evaluated, 307 expanded
[t=0.0706592s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 61
[t=0.0706713s, 28856 KB] g=32, 344 evaluated, 343 expanded
[t=0.0707854s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 52
[t=0.0707959s, 28856 KB] g=20, 346 evaluated, 345 expanded
[t=0.0723687s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 60
[t=0.0723812s, 28856 KB] g=34, 380 evaluated, 379 expanded
[t=0.0730535s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.0730641s, 28856 KB] g=35, 394 evaluated, 393 expanded
[t=0.0749472s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 51
[t=0.0749601s, 28856 KB] g=24, 435 evaluated, 434 expanded
[t=0.0760085s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 58
[t=0.076021s, 28856 KB] g=38, 457 evaluated, 456 expanded
[t=0.0772395s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 49
[t=0.0772531s, 28856 KB] g=28, 483 evaluated, 482 expanded
[t=0.0780552s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 57
[t=0.0780675s, 28856 KB] g=40, 500 evaluated, 499 expanded
[t=0.0798331s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0798572s, 28856 KB] g=42, 538 evaluated, 537 expanded
[t=0.0821753s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0822093s, 28856 KB] g=44, 587 evaluated, 586 expanded
[t=0.0829945s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 48
[t=0.0830093s, 28856 KB] g=32, 603 evaluated, 602 expanded
[t=0.0840878s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 46
[t=0.0841221s, 28856 KB] g=34, 626 evaluated, 625 expanded
[t=0.0842883s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0842981s, 28856 KB] g=46, 629 evaluated, 628 expanded
[t=0.0853091s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0853224s, 28856 KB] g=36, 650 evaluated, 649 expanded
[t=0.0863575s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0863693s, 28856 KB] g=38, 672 evaluated, 671 expanded
[t=0.0872049s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.087216s, 28856 KB] g=48, 689 evaluated, 688 expanded
[t=0.0874692s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0874789s, 28856 KB] g=40, 694 evaluated, 693 expanded
[t=0.0895144s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0895257s, 28856 KB] g=50, 737 evaluated, 736 expanded
[t=0.091187s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0911997s, 28856 KB] g=44, 771 evaluated, 770 expanded
[t=0.09201s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0920218s, 28856 KB] g=46, 788 evaluated, 787 expanded
[t=0.0925341s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0925441s, 28856 KB] g=52, 799 evaluated, 798 expanded
[t=0.0930662s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0930772s, 28856 KB] g=48, 810 evaluated, 809 expanded
[t=0.0940988s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0941112s, 28856 KB] g=50, 833 evaluated, 832 expanded
[t=0.0948079s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0948172s, 28856 KB] g=52, 848 evaluated, 847 expanded
[t=0.0952726s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0952815s, 28856 KB] g=54, 858 evaluated, 857 expanded
[t=0.0966608s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0966721s, 28856 KB] g=56, 888 evaluated, 887 expanded
[t=0.0983328s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0983422s, 28856 KB] g=58, 925 evaluated, 924 expanded
[t=0.100018s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.100028s, 28856 KB] g=56, 962 evaluated, 961 expanded
[t=0.100511s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.100522s, 28856 KB] g=60, 972 evaluated, 971 expanded
[t=0.101037s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.10105s, 28856 KB] g=58, 982 evaluated, 981 expanded
[t=0.101934s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.101962s, 28856 KB] g=60, 1001 evaluated, 1000 expanded
[t=0.102164s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.102174s, 28856 KB] g=62, 1005 evaluated, 1004 expanded
[t=0.104028s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.104098s, 28856 KB] g=62, 1031 evaluated, 1030 expanded
[t=0.10495s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.104971s, 28856 KB] g=64, 1043 evaluated, 1042 expanded
[t=0.1068s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.106818s, 28856 KB] g=66, 1083 evaluated, 1082 expanded
[t=0.108218s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.108232s, 28856 KB] g=68, 1113 evaluated, 1112 expanded
[t=0.108679s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.108692s, 28856 KB] g=68, 1122 evaluated, 1121 expanded
[t=0.109281s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.109293s, 28856 KB] g=70, 1134 evaluated, 1133 expanded
[t=0.110311s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.110328s, 28856 KB] g=72, 1156 evaluated, 1155 expanded
[t=0.111321s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.11134s, 28856 KB] g=74, 1177 evaluated, 1176 expanded
[t=0.111757s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.111772s, 28856 KB] g=76, 1186 evaluated, 1185 expanded
[t=0.112466s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.112481s, 28856 KB] g=76, 1202 evaluated, 1201 expanded
[t=0.112822s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.11284s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.112848s, 28856 KB] g=78, 1209 evaluated, 1208 expanded
[t=0.113426s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.113439s, 28856 KB] g=82, 1222 evaluated, 1221 expanded
[t=0.113795s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.113806s, 28856 KB] g=84, 1230 evaluated, 1229 expanded
[t=0.114081s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.11409s, 28856 KB] g=84, 1236 evaluated, 1235 expanded
[t=0.114146s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.114156s, 28856 KB] g=86, 1237 evaluated, 1236 expanded
[t=0.11464s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.114655s, 28856 KB] g=86, 1248 evaluated, 1247 expanded
[t=0.114968s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.114982s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.11499s, 28856 KB] g=88, 1255 evaluated, 1254 expanded
[t=0.161467s, 28988 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.161542s, 28988 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.161553s, 28988 KB] g=138, 2299 evaluated, 2298 expanded
[t=0.1619s, 28988 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.161912s, 28988 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.161921s, 28988 KB] g=140, 2307 evaluated, 2306 expanded
[t=0.162278s, 28988 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.162293s, 28988 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.162304s, 28988 KB] g=142, 2315 evaluated, 2314 expanded
[t=0.162607s, 28988 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.162629s, 28988 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.162639s, 28988 KB] g=144, 2322 evaluated, 2321 expanded
[t=0.162896s, 28988 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.162907s, 28988 KB] g=146, 2328 evaluated, 2327 expanded
[t=0.163046s, 28988 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.163064s, 28988 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.163073s, 28988 KB] g=146, 2331 evaluated, 2330 expanded
[t=0.163203s, 28988 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.163215s, 28988 KB] g=147, 2334 evaluated, 2333 expanded
[t=0.163263s, 28988 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.163272s, 28988 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.163281s, 28988 KB] g=148, 2335 evaluated, 2334 expanded
[t=0.163442s, 28988 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.163454s, 28988 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.163462s, 28988 KB] g=150, 2339 evaluated, 2338 expanded
[t=0.164597s, 28988 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.164614s, 28988 KB] g=158, 2370 evaluated, 2369 expanded
[t=0.164964s, 28988 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.164981s, 28988 KB] g=162, 2379 evaluated, 2378 expanded
[t=0.165102s, 28988 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.165111s, 28988 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.16512s, 28988 KB] g=164, 2382 evaluated, 2381 expanded
[t=0.167031s, 28988 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.16705s, 28988 KB] g=182, 2443 evaluated, 2442 expanded
[t=0.167143s, 28988 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.167155s, 28988 KB] g=184, 2446 evaluated, 2445 expanded
[t=0.167435s, 28988 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.167447s, 28988 KB] g=192, 2457 evaluated, 2456 expanded
[t=0.167541s, 28988 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.167552s, 28988 KB] g=196, 2461 evaluated, 2460 expanded
[t=0.167574s, 28988 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.167584s, 28988 KB] g=197, 2462 evaluated, 2461 expanded
[t=0.167602s, 28988 KB] Solution found!
[t=0.167637s, 28988 KB] Actual search time: 0.113825s
unstack b22 b31 (1)
put-down b22 (1)
unstack b14 b7 (1)
put-down b14 (1)
unstack b7 b8 (1)
put-down b7 (1)
unstack b3 b21 (1)
put-down b3 (1)
unstack b21 b23 (1)
put-down b21 (1)
unstack b23 b30 (1)
put-down b23 (1)
unstack b31 b4 (1)
put-down b31 (1)
unstack b4 b15 (1)
put-down b4 (1)
unstack b15 b26 (1)
put-down b15 (1)
unstack b9 b32 (1)
put-down b9 (1)
unstack b8 b13 (1)
put-down b8 (1)
unstack b13 b27 (1)
put-down b13 (1)
unstack b1 b2 (1)
stack b1 b27 (1)
unstack b2 b18 (1)
stack b2 b8 (1)
unstack b18 b17 (1)
put-down b18 (1)
unstack b17 b5 (1)
put-down b17 (1)
unstack b5 b19 (1)
put-down b5 (1)
unstack b19 b20 (1)
put-down b19 (1)
unstack b20 b16 (1)
put-down b20 (1)
unstack b16 b28 (1)
put-down b16 (1)
unstack b28 b29 (1)
put-down b28 (1)
unstack b29 b12 (1)
put-down b29 (1)
pick-up b7 (1)
stack b7 b12 (1)
pick-up b25 (1)
stack b25 b20 (1)
pick-up b21 (1)
stack b21 b25 (1)
pick-up b3 (1)
stack b3 b1 (1)
pick-up b30 (1)
stack b30 b3 (1)
pick-up b14 (1)
stack b14 b30 (1)
pick-up b16 (1)
stack b16 b14 (1)
pick-up b28 (1)
stack b28 b16 (1)
pick-up b17 (1)
stack b17 b28 (1)
pick-up b4 (1)
stack b4 b21 (1)
pick-up b5 (1)
stack b5 b4 (1)
pick-up b26 (1)
stack b26 b5 (1)
pick-up b18 (1)
stack b18 b26 (1)
pick-up b23 (1)
stack b23 b18 (1)
pick-up b31 (1)
stack b31 b23 (1)
pick-up b9 (1)
stack b9 b17 (1)
pick-up b29 (1)
stack b29 b9 (1)
unstack b7 b12 (1)
put-down b7 (1)
unstack b12 b24 (1)
put-down b12 (1)
pick-up b13 (1)
stack b13 b24 (1)
pick-up b7 (1)
stack b7 b12 (1)
unstack b29 b9 (1)
put-down b29 (1)
unstack b13 b24 (1)
put-down b13 (1)
pick-up b24 (1)
stack b24 b29 (1)
pick-up b13 (1)
stack b13 b24 (1)
unstack b9 b17 (1)
put-down b9 (1)
unstack b17 b28 (1)
put-down b17 (1)
unstack b28 b16 (1)
put-down b28 (1)
pick-up b17 (1)
stack b17 b28 (1)
pick-up b9 (1)
stack b9 b17 (1)
unstack b13 b24 (1)
put-down b13 (1)
unstack b24 b29 (1)
put-down b24 (1)
pick-up b13 (1)
stack b13 b24 (1)
pick-up b29 (1)
stack b29 b9 (1)
unstack b13 b24 (1)
put-down b13 (1)
pick-up b24 (1)
stack b24 b29 (1)
pick-up b13 (1)
stack b13 b24 (1)
unstack b16 b14 (1)
put-down b16 (1)
unstack b14 b30 (1)
put-down b14 (1)
unstack b30 b3 (1)
put-down b30 (1)
pick-up b14 (1)
stack b14 b30 (1)
pick-up b16 (1)
stack b16 b14 (1)
unstack b3 b1 (1)
put-down b3 (1)
unstack b1 b27 (1)
put-down b1 (1)
unstack b27 b10 (1)
put-down b27 (1)
pick-up b1 (1)
stack b1 b27 (1)
unstack b10 b11 (1)
stack b10 b32 (1)
unstack b11 b6 (1)
stack b11 b2 (1)
pick-up b15 (1)
stack b15 b11 (1)
pick-up b19 (1)
stack b19 b10 (1)
pick-up b6 (1)
stack b6 b31 (1)
pick-up b22 (1)
stack b22 b6 (1)
pick-up b3 (1)
stack b3 b1 (1)
unstack b16 b14 (1)
put-down b16 (1)
unstack b14 b30 (1)
put-down b14 (1)
pick-up b16 (1)
stack b16 b14 (1)
pick-up b30 (1)
stack b30 b3 (1)
unstack b16 b14 (1)
put-down b16 (1)
pick-up b14 (1)
stack b14 b30 (1)
pick-up b16 (1)
stack b16 b14 (1)
unstack b13 b24 (1)
put-down b13 (1)
unstack b24 b29 (1)
put-down b24 (1)
unstack b29 b9 (1)
put-down b29 (1)
pick-up b24 (1)
stack b24 b29 (1)
pick-up b13 (1)
stack b13 b24 (1)
unstack b9 b17 (1)
put-down b9 (1)
unstack b17 b28 (1)
put-down b17 (1)
pick-up b28 (1)
stack b28 b16 (1)
pick-up b17 (1)
stack b17 b28 (1)
pick-up b9 (1)
stack b9 b17 (1)
unstack b13 b24 (1)
put-down b13 (1)
unstack b24 b29 (1)
put-down b24 (1)
pick-up b13 (1)
stack b13 b24 (1)
pick-up b29 (1)
stack b29 b9 (1)
unstack b13 b24 (1)
put-down b13 (1)
pick-up b24 (1)
stack b24 b29 (1)
pick-up b13 (1)
stack b13 b24 (1)
[t=0.167648s, 28988 KB] Plan length: 198 step(s).
[t=0.167648s, 28988 KB] Plan cost: 198
[t=0.167648s, 28988 KB] Expanded 2462 state(s).
[t=0.167648s, 28988 KB] Reopened 0 state(s).
[t=0.167648s, 28988 KB] Evaluated 2463 state(s).
[t=0.167648s, 28988 KB] Evaluations: 4926
[t=0.167648s, 28988 KB] Generated 32975 state(s).
[t=0.167648s, 28988 KB] Dead ends: 0 state(s).
[t=0.167648s, 28988 KB] Number of registered states: 2463
[t=0.167648s, 28988 KB] Int hash set load factor: 2463/4096 = 0.601318
[t=0.167648s, 28988 KB] Int hash set resizes: 12
[t=0.167648s, 28988 KB] Search time: 0.113872s
[t=0.167648s, 28988 KB] Total time: 0.167648s
Solution found.
Peak memory: 28988 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.39s
