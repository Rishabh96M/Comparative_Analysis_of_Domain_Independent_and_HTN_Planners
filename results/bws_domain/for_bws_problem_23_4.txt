INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_23/bws_problem_23_4.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.011s wall-clock]
1750 relevant atoms
1173 auxiliary atoms
2923 final queue length
5091 total queue pushes
Completing instantiation... [0.010s CPU, 0.018s wall-clock]
Instantiating: [0.030s CPU, 0.031s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.002s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
24 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.008s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.027s wall-clock]
1564 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
46 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
47 of 47 variables necessary.
24 of 47 mutex groups necessary.
1058 of 1058 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 47
Translator derived variables: 0
Translator facts: 600
Translator goal facts: 20
Translator mutex groups: 24
Translator total mutex groups size: 576
Translator operators: 1058
Translator axioms: 0
Translator task size: 9109
Translator peak memory: 37232 KB
Writing output... [0.010s CPU, 0.006s wall-clock]
Done! [0.100s CPU, 0.096s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.4283e-05s, 24488 KB] reading input...
[t=0.00298961s, 25428 KB] done reading input!
[t=0.0039016s, 25824 KB] Initializing landmark count heuristic...
[t=0.00393317s, 25824 KB] Generating landmark graph...
[t=0.00400304s, 25824 KB] Building a landmark graph with reasonable orders.
[t=0.00406866s, 25956 KB] Initializing Exploration...
[t=0.00450048s, 26256 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0164129s, 26652 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0164884s, 26652 KB] Landmarks generation time: 0.0124874s
[t=0.0165051s, 26652 KB] Discovered 100 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0165215s, 26652 KB] 437 edges
[t=0.0165317s, 26652 KB] approx. reasonable orders
[t=0.0172981s, 26652 KB] approx. obedient reasonable orders
[t=0.0173256s, 26652 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0173355s, 26652 KB] Landmarks generation time: 0.013399s
[t=0.0173451s, 26652 KB] Discovered 100 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0173534s, 26652 KB] 447 edges
[t=0.0173617s, 26652 KB] Landmark graph generation time: 0.0134355s
[t=0.0173704s, 26652 KB] Landmark graph contains 100 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0173786s, 26652 KB] Landmark graph contains 447 orderings.
[t=0.017717s, 26652 KB] Simplifying 4186 unary operators... done! [3174 unary operators]
[t=0.0188196s, 26652 KB] time to simplify: 0.0011782s
[t=0.0189672s, 26652 KB] Initializing additive heuristic...
[t=0.0189836s, 26652 KB] Initializing FF heuristic...
[t=0.019058s, 26652 KB] Building successor generator...done!
[t=0.0192889s, 26652 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0192985s, 26652 KB] time for successor generation creation: 0.00019644s
[t=0.019313s, 26652 KB] Variables: 47
[t=0.0193231s, 26652 KB] FactPairs: 600
[t=0.0193315s, 26652 KB] Bytes per state: 20
[t=0.0194433s, 26652 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0194763s, 26652 KB] 45 initial landmarks, 20 goal landmarks
[t=0.0195331s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0195426s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0195513s, 26652 KB] g=0, 1 evaluated, 0 expanded
[t=0.0195656s, 26652 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0195751s, 26652 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0198706s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0198867s, 26652 KB] g=2, 10 evaluated, 9 expanded
[t=0.0199676s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0199794s, 26652 KB] g=2, 12 evaluated, 11 expanded
[t=0.0202727s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0202829s, 26652 KB] g=4, 22 evaluated, 21 expanded
[t=0.0205761s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0205863s, 26652 KB] g=5, 32 evaluated, 31 expanded
[t=0.0206279s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0206368s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0206455s, 26652 KB] g=6, 33 evaluated, 32 expanded
[t=0.0207951s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0208043s, 26652 KB] g=8, 38 evaluated, 37 expanded
[t=0.0209823s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0209917s, 26652 KB] g=10, 44 evaluated, 43 expanded
[t=0.0211984s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0212076s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0212159s, 26652 KB] g=12, 51 evaluated, 50 expanded
[t=0.0217573s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0217699s, 26652 KB] g=15, 70 evaluated, 69 expanded
[t=0.0218105s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0218318s, 26652 KB] g=16, 71 evaluated, 70 expanded
[t=0.0220521s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0220646s, 26652 KB] g=18, 78 evaluated, 77 expanded
[t=0.0222412s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0222515s, 26652 KB] g=20, 84 evaluated, 83 expanded
[t=0.0224001s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.02241s, 26652 KB] g=22, 89 evaluated, 88 expanded
[t=0.0228884s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0229052s, 26652 KB] g=24, 106 evaluated, 105 expanded
[t=0.023091s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0231011s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0231098s, 26652 KB] g=26, 112 evaluated, 111 expanded
[t=0.0232622s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0232728s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0232811s, 26652 KB] g=28, 117 evaluated, 116 expanded
[t=0.0234672s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0234812s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0234909s, 26652 KB] g=30, 123 evaluated, 122 expanded
[t=0.0235936s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0236076s, 26652 KB] g=31, 126 evaluated, 125 expanded
[t=0.0236789s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0237311s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0237766s, 26652 KB] g=32, 127 evaluated, 126 expanded
[t=0.0239742s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0239854s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0239939s, 26652 KB] g=34, 133 evaluated, 132 expanded
[t=0.0241963s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0242166s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0242311s, 26652 KB] g=36, 139 evaluated, 138 expanded
[t=0.0244205s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0244364s, 26652 KB] g=37, 143 evaluated, 142 expanded
[t=0.0244957s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0245106s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0245209s, 26652 KB] g=38, 144 evaluated, 143 expanded
[t=0.0246789s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0246893s, 26652 KB] g=40, 149 evaluated, 148 expanded
[t=0.0248682s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0248808s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0248897s, 26652 KB] g=42, 155 evaluated, 154 expanded
[t=0.0250771s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0250964s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.025105s, 26652 KB] g=44, 161 evaluated, 160 expanded
[t=0.0253172s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0253294s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0253393s, 26652 KB] g=46, 168 evaluated, 167 expanded
[t=0.025518s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.02553s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.025539s, 26652 KB] g=48, 174 evaluated, 173 expanded
[t=0.026319s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0263387s, 26652 KB] g=52, 199 evaluated, 198 expanded
[t=0.0264601s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0264716s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0264813s, 26652 KB] g=54, 203 evaluated, 202 expanded
[t=0.026848s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0268596s, 26652 KB] g=60, 216 evaluated, 215 expanded
[t=0.0270063s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0270163s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0270244s, 26652 KB] g=62, 221 evaluated, 220 expanded
[t=0.027114s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0271241s, 26652 KB] g=62, 224 evaluated, 223 expanded
[t=0.0272421s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0272518s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0272601s, 26652 KB] g=64, 228 evaluated, 227 expanded
[t=0.028574s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0285897s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0285995s, 26652 KB] g=76, 276 evaluated, 275 expanded
[t=0.0288434s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0288534s, 26652 KB] g=80, 285 evaluated, 284 expanded
[t=0.0289357s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.028945s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0289534s, 26652 KB] g=82, 288 evaluated, 287 expanded
[t=0.0304258s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0304407s, 26652 KB] g=102, 355 evaluated, 354 expanded
[t=0.0304701s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.030479s, 26652 KB] g=103, 356 evaluated, 355 expanded
[t=0.0305072s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0305159s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0305241s, 26652 KB] g=104, 357 evaluated, 356 expanded
[t=0.030695s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0307042s, 26652 KB] g=108, 366 evaluated, 365 expanded
[t=0.0307651s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0307826s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0307912s, 26652 KB] g=110, 369 evaluated, 368 expanded
[t=0.0309535s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0309625s, 26652 KB] g=118, 380 evaluated, 379 expanded
[t=0.0309802s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0309889s, 26652 KB] g=119, 381 evaluated, 380 expanded
[t=0.0310039s, 26652 KB] Solution found!
[t=0.0310147s, 26652 KB] Actual search time: 0.0115368s
pick-up b18 (1)
stack b18 b21 (1)
unstack b5 b7 (1)
put-down b5 (1)
unstack b7 b20 (1)
stack b7 b5 (1)
unstack b16 b2 (1)
put-down b16 (1)
unstack b2 b17 (1)
put-down b2 (1)
unstack b17 b9 (1)
stack b17 b14 (1)
unstack b13 b8 (1)
put-down b13 (1)
unstack b8 b10 (1)
stack b8 b16 (1)
pick-up b10 (1)
stack b10 b2 (1)
pick-up b13 (1)
stack b13 b8 (1)
unstack b18 b21 (1)
put-down b18 (1)
unstack b21 b4 (1)
stack b21 b10 (1)
pick-up b18 (1)
stack b18 b21 (1)
unstack b4 b15 (1)
stack b4 b20 (1)
unstack b15 b23 (1)
stack b15 b17 (1)
unstack b23 b19 (1)
stack b23 b4 (1)
unstack b19 b1 (1)
put-down b19 (1)
unstack b1 b6 (1)
stack b1 b9 (1)
unstack b6 b22 (1)
stack b6 b13 (1)
unstack b22 b3 (1)
put-down b22 (1)
unstack b3 b11 (1)
stack b3 b18 (1)
unstack b11 b12 (1)
stack b11 b19 (1)
pick-up b12 (1)
stack b12 b1 (1)
pick-up b22 (1)
stack b22 b12 (1)
unstack b7 b5 (1)
put-down b7 (1)
pick-up b5 (1)
stack b5 b3 (1)
pick-up b7 (1)
stack b7 b5 (1)
unstack b15 b17 (1)
put-down b15 (1)
unstack b17 b14 (1)
put-down b17 (1)
pick-up b14 (1)
stack b14 b11 (1)
pick-up b17 (1)
stack b17 b14 (1)
pick-up b15 (1)
stack b15 b17 (1)
unstack b6 b13 (1)
put-down b6 (1)
unstack b13 b8 (1)
put-down b13 (1)
pick-up b6 (1)
stack b6 b13 (1)
unstack b8 b16 (1)
put-down b8 (1)
pick-up b16 (1)
stack b16 b15 (1)
pick-up b8 (1)
stack b8 b16 (1)
unstack b6 b13 (1)
put-down b6 (1)
pick-up b13 (1)
stack b13 b8 (1)
pick-up b6 (1)
stack b6 b13 (1)
unstack b7 b5 (1)
put-down b7 (1)
unstack b5 b3 (1)
put-down b5 (1)
unstack b3 b18 (1)
put-down b3 (1)
pick-up b5 (1)
stack b5 b3 (1)
pick-up b7 (1)
stack b7 b5 (1)
unstack b18 b21 (1)
put-down b18 (1)
unstack b21 b10 (1)
put-down b21 (1)
unstack b10 b2 (1)
put-down b10 (1)
pick-up b18 (1)
stack b18 b21 (1)
pick-up b2 (1)
stack b2 b22 (1)
pick-up b10 (1)
stack b10 b2 (1)
unstack b18 b21 (1)
put-down b18 (1)
pick-up b21 (1)
stack b21 b10 (1)
pick-up b18 (1)
stack b18 b21 (1)
unstack b7 b5 (1)
put-down b7 (1)
unstack b5 b3 (1)
put-down b5 (1)
pick-up b3 (1)
stack b3 b18 (1)
pick-up b5 (1)
stack b5 b3 (1)
pick-up b7 (1)
stack b7 b5 (1)
[t=0.0310257s, 26652 KB] Plan length: 120 step(s).
[t=0.0310257s, 26652 KB] Plan cost: 120
[t=0.0310257s, 26652 KB] Expanded 381 state(s).
[t=0.0310257s, 26652 KB] Reopened 0 state(s).
[t=0.0310257s, 26652 KB] Evaluated 382 state(s).
[t=0.0310257s, 26652 KB] Evaluations: 764
[t=0.0310257s, 26652 KB] Generated 2885 state(s).
[t=0.0310257s, 26652 KB] Dead ends: 0 state(s).
[t=0.0310257s, 26652 KB] Number of registered states: 382
[t=0.0310257s, 26652 KB] Int hash set load factor: 382/512 = 0.746094
[t=0.0310257s, 26652 KB] Int hash set resizes: 9
[t=0.0310257s, 26652 KB] Search time: 0.0115826s
[t=0.0310257s, 26652 KB] Total time: 0.0310257s
Solution found.
Peak memory: 26652 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.18s
