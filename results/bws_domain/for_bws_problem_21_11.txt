INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_21/bws_problem_21_11.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.010s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.000s CPU, 0.009s wall-clock]
1472 relevant atoms
987 auxiliary atoms
2459 final queue length
4271 total queue pushes
Completing instantiation... [0.020s CPU, 0.015s wall-clock]
Instantiating: [0.030s CPU, 0.026s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
22 uncovered facts
Choosing groups: [0.010s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.006s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.022s wall-clock]
1302 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
42 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.011s wall-clock]
Reordering and filtering variables...
43 of 43 variables necessary.
22 of 43 mutex groups necessary.
882 of 882 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.007s wall-clock]
Translator variables: 43
Translator derived variables: 0
Translator facts: 506
Translator goal facts: 20
Translator mutex groups: 22
Translator total mutex groups size: 484
Translator operators: 882
Translator axioms: 0
Translator task size: 7605
Translator peak memory: 36456 KB
Writing output... [0.000s CPU, 0.004s wall-clock]
Done! [0.080s CPU, 0.081s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.0131e-05s, 24488 KB] reading input...
[t=0.00263464s, 25268 KB] done reading input!
[t=0.00350986s, 25664 KB] Initializing landmark count heuristic...
[t=0.00355259s, 25664 KB] Generating landmark graph...
[t=0.00361219s, 25664 KB] Building a landmark graph with reasonable orders.
[t=0.00366828s, 25664 KB] Initializing Exploration...
[t=0.00394642s, 25852 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.013055s, 26248 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0131568s, 26248 KB] Landmarks generation time: 0.00954583s
[t=0.0131734s, 26248 KB] Discovered 95 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0131986s, 26248 KB] 331 edges
[t=0.0132098s, 26248 KB] approx. reasonable orders
[t=0.0154279s, 26248 KB] approx. obedient reasonable orders
[t=0.0154642s, 26248 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.015474s, 26248 KB] Landmarks generation time: 0.0119167s
[t=0.0154837s, 26248 KB] Discovered 95 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0154922s, 26248 KB] 379 edges
[t=0.0155017s, 26248 KB] Landmark graph generation time: 0.0119573s
[t=0.015511s, 26248 KB] Landmark graph contains 95 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0155192s, 26248 KB] Landmark graph contains 379 orderings.
[t=0.0158938s, 26248 KB] Simplifying 3486 unary operators... done! [2646 unary operators]
[t=0.0167693s, 26380 KB] time to simplify: 0.000941328s
[t=0.0168867s, 26380 KB] Initializing additive heuristic...
[t=0.0169001s, 26380 KB] Initializing FF heuristic...
[t=0.0169705s, 26380 KB] Building successor generator...done!
[t=0.0171452s, 26380 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0171538s, 26380 KB] time for successor generation creation: 0.000143488s
[t=0.0171656s, 26380 KB] Variables: 43
[t=0.0171734s, 26380 KB] FactPairs: 506
[t=0.0171811s, 26380 KB] Bytes per state: 16
[t=0.0172712s, 26380 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0173046s, 26380 KB] 42 initial landmarks, 20 goal landmarks
[t=0.0173516s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0173618s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0173707s, 26380 KB] g=0, 1 evaluated, 0 expanded
[t=0.0173854s, 26380 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0173948s, 26380 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0176092s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0176194s, 26380 KB] g=2, 9 evaluated, 8 expanded
[t=0.0176548s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0176644s, 26380 KB] g=2, 10 evaluated, 9 expanded
[t=0.0179901s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0180002s, 26380 KB] g=4, 23 evaluated, 22 expanded
[t=0.0180343s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0180436s, 26380 KB] g=4, 24 evaluated, 23 expanded
[t=0.0183937s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0184084s, 26380 KB] g=6, 37 evaluated, 36 expanded
[t=0.0188023s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0188132s, 26380 KB] g=8, 52 evaluated, 51 expanded
[t=0.0188494s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0188594s, 26380 KB] g=8, 53 evaluated, 52 expanded
[t=0.0191219s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0191319s, 26380 KB] g=10, 63 evaluated, 62 expanded
[t=0.0192214s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0192314s, 26380 KB] g=9, 66 evaluated, 65 expanded
[t=0.0192924s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.019302s, 26380 KB] g=10, 68 evaluated, 67 expanded
[t=0.0194897s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0194993s, 26380 KB] g=12, 75 evaluated, 74 expanded
[t=0.0197379s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0197531s, 26380 KB] g=12, 84 evaluated, 83 expanded
[t=0.0198168s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0198275s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.019837s, 26380 KB] g=14, 86 evaluated, 85 expanded
[t=0.0199867s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0199995s, 26380 KB] g=16, 91 evaluated, 90 expanded
[t=0.0200372s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0200476s, 26380 KB] g=16, 92 evaluated, 91 expanded
[t=0.0202671s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0202823s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0202966s, 26380 KB] g=16, 100 evaluated, 99 expanded
[t=0.0204691s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0204806s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0204901s, 26380 KB] g=18, 106 evaluated, 105 expanded
[t=0.0206197s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0206413s, 26380 KB] g=20, 111 evaluated, 110 expanded
[t=0.020824s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0208406s, 26380 KB] g=22, 118 evaluated, 117 expanded
[t=0.0215944s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0216241s, 26380 KB] g=26, 144 evaluated, 143 expanded
[t=0.0218005s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0218114s, 26380 KB] g=28, 151 evaluated, 150 expanded
[t=0.0219392s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0219499s, 26380 KB] g=30, 156 evaluated, 155 expanded
[t=0.0220766s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0220873s, 26380 KB] g=32, 161 evaluated, 160 expanded
[t=0.0228383s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0228502s, 26380 KB] g=38, 193 evaluated, 192 expanded
[t=0.0230716s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0230812s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0230895s, 26380 KB] g=40, 202 evaluated, 201 expanded
[t=0.0232601s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0232697s, 26380 KB] g=42, 209 evaluated, 208 expanded
[t=0.0233732s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0233826s, 26380 KB] g=42, 213 evaluated, 212 expanded
[t=0.023482s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0234907s, 26380 KB] g=44, 217 evaluated, 216 expanded
[t=0.023608s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0236171s, 26380 KB] g=46, 222 evaluated, 221 expanded
[t=0.0237148s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0237239s, 26380 KB] g=48, 226 evaluated, 225 expanded
[t=0.0249757s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0249914s, 26380 KB] g=61, 281 evaluated, 280 expanded
[t=0.0250262s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0250356s, 26380 KB] g=62, 282 evaluated, 281 expanded
[t=0.0252789s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0252899s, 26380 KB] g=64, 293 evaluated, 292 expanded
[t=0.0256959s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.025706s, 26380 KB] g=66, 312 evaluated, 311 expanded
[t=0.0260135s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0260243s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0260336s, 26380 KB] g=68, 328 evaluated, 327 expanded
[t=0.0262034s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0262135s, 26380 KB] g=70, 337 evaluated, 336 expanded
[t=0.0262584s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0262676s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0262758s, 26380 KB] g=70, 339 evaluated, 338 expanded
[t=0.0264173s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0264268s, 26380 KB] g=72, 347 evaluated, 346 expanded
[t=0.0264701s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0264792s, 26380 KB] g=72, 349 evaluated, 348 expanded
[t=0.0266184s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0266277s, 26380 KB] g=74, 357 evaluated, 356 expanded
[t=0.0267192s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0267294s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0267375s, 26380 KB] g=74, 362 evaluated, 361 expanded
[t=0.0268398s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0268519s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0268605s, 26380 KB] g=76, 368 evaluated, 367 expanded
[t=0.0269446s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0269559s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0269658s, 26380 KB] g=78, 373 evaluated, 372 expanded
[t=0.0272021s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0272181s, 26380 KB] g=82, 389 evaluated, 388 expanded
[t=0.0272734s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0272827s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0272909s, 26380 KB] g=84, 392 evaluated, 391 expanded
[t=0.0275376s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0275639s, 26380 KB] g=92, 408 evaluated, 407 expanded
[t=0.0276022s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0276117s, 26380 KB] g=92, 410 evaluated, 409 expanded
[t=0.0276628s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0276726s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0276807s, 26380 KB] g=94, 413 evaluated, 412 expanded
[t=0.0280081s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0280219s, 26380 KB] g=108, 438 evaluated, 437 expanded
[t=0.0280549s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0280647s, 26380 KB] g=108, 440 evaluated, 439 expanded
[t=0.0281055s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.028115s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0281237s, 26380 KB] g=110, 443 evaluated, 442 expanded
[t=0.0281714s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0281809s, 26380 KB] g=114, 447 evaluated, 446 expanded
[t=0.0281974s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0282063s, 26380 KB] g=115, 448 evaluated, 447 expanded
[t=0.0282203s, 26380 KB] Solution found!
[t=0.0282315s, 26380 KB] Actual search time: 0.0109234s
pick-up b10 (1)
stack b10 b19 (1)
unstack b12 b17 (1)
stack b12 b15 (1)
unstack b1 b9 (1)
put-down b1 (1)
unstack b2 b7 (1)
stack b2 b9 (1)
unstack b7 b8 (1)
stack b7 b2 (1)
unstack b8 b18 (1)
stack b8 b10 (1)
unstack b18 b3 (1)
stack b18 b8 (1)
unstack b3 b14 (1)
stack b3 b17 (1)
pick-up b1 (1)
stack b1 b3 (1)
unstack b12 b15 (1)
put-down b12 (1)
unstack b15 b4 (1)
put-down b15 (1)
unstack b4 b20 (1)
put-down b4 (1)
pick-up b20 (1)
stack b20 b1 (1)
pick-up b12 (1)
stack b12 b15 (1)
pick-up b4 (1)
stack b4 b20 (1)
unstack b7 b2 (1)
put-down b7 (1)
unstack b2 b9 (1)
put-down b2 (1)
unstack b12 b15 (1)
put-down b12 (1)
unstack b9 b21 (1)
stack b9 b4 (1)
pick-up b2 (1)
stack b2 b9 (1)
pick-up b12 (1)
stack b12 b15 (1)
pick-up b21 (1)
stack b21 b18 (1)
pick-up b7 (1)
stack b7 b2 (1)
unstack b21 b18 (1)
put-down b21 (1)
unstack b18 b8 (1)
put-down b18 (1)
pick-up b21 (1)
stack b21 b18 (1)
unstack b8 b10 (1)
put-down b8 (1)
unstack b10 b19 (1)
put-down b10 (1)
unstack b12 b15 (1)
put-down b12 (1)
unstack b19 b5 (1)
put-down b19 (1)
unstack b5 b16 (1)
stack b5 b12 (1)
unstack b16 b6 (1)
stack b16 b21 (1)
unstack b6 b11 (1)
stack b6 b14 (1)
unstack b11 b13 (1)
stack b11 b7 (1)
pick-up b13 (1)
stack b13 b11 (1)
pick-up b15 (1)
stack b15 b6 (1)
pick-up b19 (1)
stack b19 b13 (1)
pick-up b10 (1)
stack b10 b19 (1)
pick-up b8 (1)
stack b8 b10 (1)
unstack b5 b12 (1)
put-down b5 (1)
pick-up b12 (1)
stack b12 b15 (1)
pick-up b5 (1)
stack b5 b12 (1)
unstack b16 b21 (1)
put-down b16 (1)
unstack b21 b18 (1)
put-down b21 (1)
pick-up b18 (1)
stack b18 b8 (1)
pick-up b21 (1)
stack b21 b18 (1)
pick-up b16 (1)
stack b16 b21 (1)
unstack b5 b12 (1)
put-down b5 (1)
unstack b12 b15 (1)
put-down b12 (1)
pick-up b5 (1)
stack b5 b12 (1)
unstack b15 b6 (1)
put-down b15 (1)
unstack b6 b14 (1)
put-down b6 (1)
pick-up b14 (1)
stack b14 b16 (1)
pick-up b6 (1)
stack b6 b14 (1)
pick-up b15 (1)
stack b15 b6 (1)
unstack b5 b12 (1)
put-down b5 (1)
pick-up b12 (1)
stack b12 b15 (1)
pick-up b5 (1)
stack b5 b12 (1)
[t=0.0282412s, 26380 KB] Plan length: 116 step(s).
[t=0.0282412s, 26380 KB] Plan cost: 116
[t=0.0282412s, 26380 KB] Expanded 448 state(s).
[t=0.0282412s, 26380 KB] Reopened 0 state(s).
[t=0.0282412s, 26380 KB] Evaluated 449 state(s).
[t=0.0282412s, 26380 KB] Evaluations: 898
[t=0.0282412s, 26380 KB] Generated 3091 state(s).
[t=0.0282412s, 26380 KB] Dead ends: 0 state(s).
[t=0.0282412s, 26380 KB] Number of registered states: 449
[t=0.0282412s, 26380 KB] Int hash set load factor: 449/512 = 0.876953
[t=0.0282412s, 26380 KB] Int hash set resizes: 9
[t=0.0282412s, 26380 KB] Search time: 0.0109704s
[t=0.0282412s, 26380 KB] Total time: 0.0282412s
Solution found.
Peak memory: 26380 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.16s
