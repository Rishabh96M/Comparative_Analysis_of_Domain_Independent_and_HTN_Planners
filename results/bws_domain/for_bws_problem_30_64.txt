INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_30/bws_problem_30_64.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.017s wall-clock]
2912 relevant atoms
1950 auxiliary atoms
4862 final queue length
8527 total queue pushes
Completing instantiation... [0.030s CPU, 0.032s wall-clock]
Instantiating: [0.050s CPU, 0.052s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.002s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
31 uncovered facts
Choosing groups: [0.000s CPU, 0.002s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.001s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.002s wall-clock]
Translating task: [0.050s CPU, 0.053s wall-clock]
2670 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
60 propositions removed
Detecting unreachable propositions: [0.030s CPU, 0.021s wall-clock]
Reordering and filtering variables...
61 of 61 variables necessary.
31 of 61 mutex groups necessary.
1800 of 1800 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.012s wall-clock]
Translator variables: 61
Translator derived variables: 0
Translator facts: 992
Translator goal facts: 23
Translator mutex groups: 31
Translator total mutex groups size: 961
Translator operators: 1800
Translator axioms: 0
Translator task size: 15447
Translator peak memory: 41336 KB
Writing output... [0.010s CPU, 0.009s wall-clock]
Done! [0.160s CPU, 0.164s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=1.9068e-05s, 24488 KB] reading input...
[t=0.0052575s, 26364 KB] done reading input!
[t=0.00635267s, 26760 KB] Initializing landmark count heuristic...
[t=0.00642829s, 26760 KB] Generating landmark graph...
[t=0.00656518s, 26892 KB] Building a landmark graph with reasonable orders.
[t=0.00667063s, 27024 KB] Initializing Exploration...
[t=0.00742011s, 27316 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0320639s, 28240 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0321715s, 28240 KB] Landmarks generation time: 0.0256144s
[t=0.0321955s, 28240 KB] Discovered 127 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.032214s, 28240 KB] 709 edges
[t=0.0322293s, 28240 KB] approx. reasonable orders
[t=0.0339357s, 28240 KB] approx. obedient reasonable orders
[t=0.0339784s, 28240 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0339882s, 28240 KB] Landmarks generation time: 0.0275567s
[t=0.0339987s, 28240 KB] Discovered 127 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.034007s, 28240 KB] 728 edges
[t=0.0340155s, 28240 KB] Landmark graph generation time: 0.0275942s
[t=0.0340239s, 28240 KB] Landmark graph contains 127 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0340317s, 28240 KB] Landmark graph contains 728 orderings.
[t=0.034652s, 28268 KB] Simplifying 7140 unary operators... done! [5400 unary operators]
[t=0.0363203s, 28268 KB] time to simplify: 0.00178002s
[t=0.0365363s, 28268 KB] Initializing additive heuristic...
[t=0.036555s, 28268 KB] Initializing FF heuristic...
[t=0.0366077s, 28268 KB] Building successor generator...done!
[t=0.036925s, 28268 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0369349s, 28268 KB] time for successor generation creation: 0.00029064s
[t=0.036948s, 28268 KB] Variables: 61
[t=0.0369563s, 28268 KB] FactPairs: 992
[t=0.0369644s, 28268 KB] Bytes per state: 24
[t=0.0370733s, 28268 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0371075s, 28268 KB] 59 initial landmarks, 23 goal landmarks
[t=0.0371801s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 68
[t=0.0371905s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 51
[t=0.0371999s, 28268 KB] g=0, 1 evaluated, 0 expanded
[t=0.0372145s, 28268 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 68
[t=0.0372235s, 28268 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 51
[t=0.0374155s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 67
[t=0.0374252s, 28268 KB] g=1, 5 evaluated, 4 expanded
[t=0.0376371s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 50
[t=0.0376484s, 28268 KB] g=2, 9 evaluated, 8 expanded
[t=0.0379596s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 66
[t=0.0379693s, 28268 KB] g=3, 16 evaluated, 15 expanded
[t=0.0381429s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 65
[t=0.0381521s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 48
[t=0.0381603s, 28268 KB] g=4, 20 evaluated, 19 expanded
[t=0.0383031s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 64
[t=0.0383121s, 28268 KB] g=5, 23 evaluated, 22 expanded
[t=0.0385284s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 63
[t=0.0385375s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 47
[t=0.0385457s, 28268 KB] g=6, 28 evaluated, 27 expanded
[t=0.0385967s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 62
[t=0.0386059s, 28268 KB] g=7, 29 evaluated, 28 expanded
[t=0.0389026s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 61
[t=0.0389126s, 28268 KB] g=9, 36 evaluated, 35 expanded
[t=0.0391684s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 46
[t=0.0391776s, 28268 KB] g=10, 42 evaluated, 41 expanded
[t=0.0393527s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 60
[t=0.0393665s, 28268 KB] g=12, 46 evaluated, 45 expanded
[t=0.0396635s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0396733s, 28268 KB] g=12, 53 evaluated, 52 expanded
[t=0.0399274s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 57
[t=0.039937s, 28268 KB] g=14, 59 evaluated, 58 expanded
[t=0.0402378s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0402487s, 28268 KB] g=16, 66 evaluated, 65 expanded
[t=0.0403782s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0403873s, 28268 KB] g=17, 69 evaluated, 68 expanded
[t=0.040597s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.0406065s, 28268 KB] g=16, 74 evaluated, 73 expanded
[t=0.0410546s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0410644s, 28268 KB] g=20, 85 evaluated, 84 expanded
[t=0.0416725s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0416937s, 28268 KB] g=22, 100 evaluated, 99 expanded
[t=0.0421423s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0421524s, 28268 KB] g=22, 111 evaluated, 110 expanded
[t=0.0426872s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0426999s, 28268 KB] g=24, 124 evaluated, 123 expanded
[t=0.043126s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0431385s, 28268 KB] g=26, 134 evaluated, 133 expanded
[t=0.0454959s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0455124s, 28268 KB] g=36, 192 evaluated, 191 expanded
[t=0.0460159s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0460294s, 28268 KB] g=38, 204 evaluated, 203 expanded
[t=0.0464799s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0464901s, 28268 KB] g=40, 215 evaluated, 214 expanded
[t=0.0469435s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0469591s, 28268 KB] g=42, 226 evaluated, 225 expanded
[t=0.0472876s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.047303s, 28268 KB] g=42, 234 evaluated, 233 expanded
[t=0.0474807s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.047492s, 28268 KB] g=44, 238 evaluated, 237 expanded
[t=0.0484364s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0484521s, 28268 KB] g=46, 260 evaluated, 259 expanded
[t=0.0490178s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0490287s, 28268 KB] g=48, 274 evaluated, 273 expanded
[t=0.0503012s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.050313s, 28268 KB] g=52, 305 evaluated, 304 expanded
[t=0.0510752s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0510852s, 28268 KB] g=54, 324 evaluated, 323 expanded
[t=0.0513763s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0513929s, 28268 KB] g=55, 331 evaluated, 330 expanded
[t=0.0514478s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0514574s, 28268 KB] g=56, 332 evaluated, 331 expanded
[t=0.0518587s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0518695s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0518793s, 28268 KB] g=58, 342 evaluated, 341 expanded
[t=0.0522418s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0522521s, 28268 KB] g=60, 351 evaluated, 350 expanded
[t=0.0526518s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0526611s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0526692s, 28268 KB] g=62, 361 evaluated, 360 expanded
[t=0.0531244s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0531341s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0531425s, 28268 KB] g=64, 372 evaluated, 371 expanded
[t=0.0531959s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0532049s, 28268 KB] g=65, 373 evaluated, 372 expanded
[t=0.0532578s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0532666s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0532746s, 28268 KB] g=66, 374 evaluated, 373 expanded
[t=0.0537321s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0537426s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0537556s, 28268 KB] g=68, 385 evaluated, 384 expanded
[t=0.0542024s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0542124s, 28268 KB] g=70, 396 evaluated, 395 expanded
[t=0.0543435s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0543527s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0543606s, 28268 KB] g=70, 399 evaluated, 398 expanded
[t=0.0548067s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0548158s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0548244s, 28268 KB] g=72, 410 evaluated, 409 expanded
[t=0.055264s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0552743s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0552821s, 28268 KB] g=74, 421 evaluated, 420 expanded
[t=0.0557204s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0557316s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0557394s, 28268 KB] g=76, 431 evaluated, 430 expanded
[t=0.056091s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0561023s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0561111s, 28268 KB] g=78, 439 evaluated, 438 expanded
[t=0.0564991s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.056515s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0565248s, 28268 KB] g=80, 447 evaluated, 446 expanded
[t=0.0572134s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0572255s, 28268 KB] g=83, 463 evaluated, 462 expanded
[t=0.0573234s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0573336s, 28268 KB] g=84, 465 evaluated, 464 expanded
[t=0.0575933s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0576135s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.057624s, 28268 KB] g=86, 471 evaluated, 470 expanded
[t=0.0582033s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0582133s, 28268 KB] g=90, 485 evaluated, 484 expanded
[t=0.0584219s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0584306s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0584387s, 28268 KB] g=92, 490 evaluated, 489 expanded
[t=0.0606792s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0606948s, 28268 KB] g=92, 546 evaluated, 545 expanded
[t=0.0612172s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0612286s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0612379s, 28268 KB] g=96, 559 evaluated, 558 expanded
[t=0.0614421s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0614514s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0614593s, 28268 KB] g=98, 564 evaluated, 563 expanded
[t=0.0631106s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0631231s, 28268 KB] g=106, 606 evaluated, 605 expanded
[t=0.0633761s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0633862s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0633948s, 28268 KB] g=108, 612 evaluated, 611 expanded
[t=0.0647202s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0647401s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0647486s, 28268 KB] g=120, 645 evaluated, 644 expanded
[t=0.0651203s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0651346s, 28268 KB] g=124, 654 evaluated, 653 expanded
[t=0.0652653s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0652757s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0652841s, 28268 KB] g=126, 657 evaluated, 656 expanded
[t=0.0691458s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0691601s, 28268 KB] g=156, 764 evaluated, 763 expanded
[t=0.0694556s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0694655s, 28268 KB] g=160, 773 evaluated, 772 expanded
[t=0.0695744s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.069585s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0695932s, 28268 KB] g=162, 776 evaluated, 775 expanded
[t=0.0700415s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0700585s, 28268 KB] g=174, 792 evaluated, 791 expanded
[t=0.0701505s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0701597s, 28268 KB] g=178, 796 evaluated, 795 expanded
[t=0.0701814s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0701901s, 28268 KB] g=179, 797 evaluated, 796 expanded
[t=0.0702079s, 28268 KB] Solution found!
[t=0.0702211s, 28268 KB] Actual search time: 0.0331096s
unstack b1 b25 (1)
put-down b1 (1)
pick-up b17 (1)
stack b17 b1 (1)
unstack b30 b18 (1)
stack b30 b7 (1)
unstack b18 b28 (1)
put-down b18 (1)
unstack b4 b20 (1)
put-down b4 (1)
unstack b28 b12 (1)
put-down b28 (1)
unstack b20 b15 (1)
stack b20 b30 (1)
unstack b15 b13 (1)
put-down b15 (1)
unstack b13 b8 (1)
put-down b13 (1)
unstack b8 b3 (1)
put-down b8 (1)
pick-up b18 (1)
stack b18 b8 (1)
pick-up b3 (1)
stack b3 b15 (1)
pick-up b12 (1)
stack b12 b25 (1)
unstack b20 b30 (1)
put-down b20 (1)
unstack b12 b25 (1)
put-down b12 (1)
unstack b30 b7 (1)
put-down b30 (1)
unstack b7 b23 (1)
put-down b7 (1)
unstack b23 b6 (1)
put-down b23 (1)
unstack b6 b24 (1)
put-down b6 (1)
unstack b24 b16 (1)
put-down b24 (1)
pick-up b30 (1)
stack b30 b7 (1)
pick-up b12 (1)
stack b12 b25 (1)
pick-up b20 (1)
stack b20 b30 (1)
unstack b16 b14 (1)
put-down b16 (1)
unstack b14 b27 (1)
put-down b14 (1)
unstack b12 b25 (1)
put-down b12 (1)
unstack b27 b26 (1)
stack b27 b12 (1)
unstack b26 b21 (1)
stack b26 b27 (1)
pick-up b16 (1)
stack b16 b14 (1)
unstack b21 b2 (1)
put-down b21 (1)
unstack b2 b29 (1)
stack b2 b23 (1)
unstack b29 b10 (1)
stack b29 b20 (1)
unstack b10 b5 (1)
stack b10 b6 (1)
unstack b5 b9 (1)
put-down b5 (1)
unstack b9 b11 (1)
stack b9 b24 (1)
unstack b11 b22 (1)
stack b11 b17 (1)
pick-up b13 (1)
stack b13 b9 (1)
pick-up b21 (1)
stack b21 b22 (1)
pick-up b4 (1)
stack b4 b11 (1)
pick-up b25 (1)
stack b25 b29 (1)
unstack b21 b22 (1)
put-down b21 (1)
unstack b22 b19 (1)
stack b22 b3 (1)
pick-up b21 (1)
stack b21 b22 (1)
unstack b16 b14 (1)
put-down b16 (1)
pick-up b14 (1)
stack b14 b2 (1)
pick-up b16 (1)
stack b16 b14 (1)
unstack b18 b8 (1)
put-down b18 (1)
pick-up b8 (1)
stack b8 b16 (1)
pick-up b18 (1)
stack b18 b8 (1)
unstack b26 b27 (1)
put-down b26 (1)
unstack b27 b12 (1)
put-down b27 (1)
pick-up b12 (1)
stack b12 b25 (1)
pick-up b27 (1)
stack b27 b12 (1)
pick-up b26 (1)
stack b26 b27 (1)
unstack b21 b22 (1)
put-down b21 (1)
unstack b22 b3 (1)
put-down b22 (1)
pick-up b21 (1)
stack b21 b22 (1)
unstack b3 b15 (1)
put-down b3 (1)
pick-up b15 (1)
stack b15 b5 (1)
pick-up b3 (1)
stack b3 b15 (1)
unstack b21 b22 (1)
put-down b21 (1)
pick-up b22 (1)
stack b22 b3 (1)
pick-up b21 (1)
stack b21 b22 (1)
unstack b26 b27 (1)
put-down b26 (1)
unstack b27 b12 (1)
put-down b27 (1)
pick-up b26 (1)
stack b26 b27 (1)
unstack b12 b25 (1)
put-down b12 (1)
unstack b25 b29 (1)
put-down b25 (1)
pick-up b12 (1)
stack b12 b25 (1)
unstack b26 b27 (1)
put-down b26 (1)
pick-up b27 (1)
stack b27 b12 (1)
pick-up b26 (1)
stack b26 b27 (1)
unstack b29 b20 (1)
put-down b29 (1)
unstack b20 b30 (1)
put-down b20 (1)
pick-up b29 (1)
stack b29 b20 (1)
unstack b30 b7 (1)
put-down b30 (1)
pick-up b7 (1)
stack b7 b21 (1)
pick-up b30 (1)
stack b30 b7 (1)
unstack b29 b20 (1)
put-down b29 (1)
pick-up b20 (1)
stack b20 b30 (1)
pick-up b29 (1)
stack b29 b20 (1)
unstack b26 b27 (1)
put-down b26 (1)
unstack b27 b12 (1)
put-down b27 (1)
pick-up b26 (1)
stack b26 b27 (1)
unstack b12 b25 (1)
put-down b12 (1)
pick-up b25 (1)
stack b25 b29 (1)
pick-up b12 (1)
stack b12 b25 (1)
unstack b26 b27 (1)
put-down b26 (1)
pick-up b27 (1)
stack b27 b12 (1)
pick-up b26 (1)
stack b26 b27 (1)
[t=0.0702307s, 28268 KB] Plan length: 180 step(s).
[t=0.0702307s, 28268 KB] Plan cost: 180
[t=0.0702307s, 28268 KB] Expanded 797 state(s).
[t=0.0702307s, 28268 KB] Reopened 0 state(s).
[t=0.0702307s, 28268 KB] Evaluated 798 state(s).
[t=0.0702307s, 28268 KB] Evaluations: 1596
[t=0.0702307s, 28268 KB] Generated 9528 state(s).
[t=0.0702307s, 28268 KB] Dead ends: 0 state(s).
[t=0.0702307s, 28268 KB] Number of registered states: 798
[t=0.0702307s, 28268 KB] Int hash set load factor: 798/1024 = 0.779297
[t=0.0702307s, 28268 KB] Int hash set resizes: 10
[t=0.0702307s, 28268 KB] Search time: 0.0331577s
[t=0.0702307s, 28268 KB] Total time: 0.0702307s
Solution found.
Peak memory: 28268 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.28s
