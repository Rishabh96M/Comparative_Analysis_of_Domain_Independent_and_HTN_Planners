INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_23/bws_problem_23_32.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.010s wall-clock]
1750 relevant atoms
1173 auxiliary atoms
2923 final queue length
5093 total queue pushes
Completing instantiation... [0.020s CPU, 0.018s wall-clock]
Instantiating: [0.030s CPU, 0.030s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
24 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.007s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.010s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.026s wall-clock]
1564 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
46 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
47 of 47 variables necessary.
24 of 47 mutex groups necessary.
1058 of 1058 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.007s wall-clock]
Translator variables: 47
Translator derived variables: 0
Translator facts: 600
Translator goal facts: 18
Translator mutex groups: 24
Translator total mutex groups size: 576
Translator operators: 1058
Translator axioms: 0
Translator task size: 9107
Translator peak memory: 37484 KB
Writing output... [0.010s CPU, 0.005s wall-clock]
Done! [0.090s CPU, 0.094s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=1.8251e-05s, 24488 KB] reading input...
[t=0.0031034s, 25428 KB] done reading input!
[t=0.00403543s, 25824 KB] Initializing landmark count heuristic...
[t=0.00406694s, 25824 KB] Generating landmark graph...
[t=0.00413501s, 25824 KB] Building a landmark graph with reasonable orders.
[t=0.00419953s, 25956 KB] Initializing Exploration...
[t=0.00449862s, 26256 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0151104s, 26652 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0152889s, 26652 KB] Landmarks generation time: 0.0111582s
[t=0.015307s, 26652 KB] Discovered 97 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0153346s, 26652 KB] 301 edges
[t=0.015347s, 26652 KB] approx. reasonable orders
[t=0.0188047s, 26652 KB] approx. obedient reasonable orders
[t=0.0188764s, 26652 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.018888s, 26652 KB] Landmarks generation time: 0.0148165s
[t=0.0188991s, 26652 KB] Discovered 97 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0189083s, 26652 KB] 358 edges
[t=0.0189169s, 26652 KB] Landmark graph generation time: 0.0148572s
[t=0.0189263s, 26652 KB] Landmark graph contains 97 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0189347s, 26652 KB] Landmark graph contains 358 orderings.
[t=0.0193059s, 26652 KB] Simplifying 4186 unary operators... done! [3174 unary operators]
[t=0.020335s, 26652 KB] time to simplify: 0.00109842s
[t=0.0204744s, 26652 KB] Initializing additive heuristic...
[t=0.0204902s, 26652 KB] Initializing FF heuristic...
[t=0.0205475s, 26652 KB] Building successor generator...done!
[t=0.0207599s, 26652 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0207685s, 26652 KB] time for successor generation creation: 0.000185373s
[t=0.0207921s, 26652 KB] Variables: 47
[t=0.0208023s, 26652 KB] FactPairs: 600
[t=0.0208105s, 26652 KB] Bytes per state: 20
[t=0.0209594s, 26652 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0210048s, 26652 KB] 46 initial landmarks, 18 goal landmarks
[t=0.0210798s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0210919s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0211012s, 26652 KB] g=0, 1 evaluated, 0 expanded
[t=0.021117s, 26652 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0211261s, 26652 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0213389s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0213544s, 26652 KB] g=1, 7 evaluated, 6 expanded
[t=0.0215344s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0215499s, 26652 KB] g=2, 13 evaluated, 12 expanded
[t=0.0218164s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0218325s, 26652 KB] g=3, 22 evaluated, 21 expanded
[t=0.0220168s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0220454s, 26652 KB] g=4, 28 evaluated, 27 expanded
[t=0.022265s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0222744s, 26652 KB] g=5, 35 evaluated, 34 expanded
[t=0.0225006s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0225111s, 26652 KB] g=6, 43 evaluated, 42 expanded
[t=0.0226687s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0226776s, 26652 KB] g=7, 48 evaluated, 47 expanded
[t=0.0229991s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0230091s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0230169s, 26652 KB] g=8, 59 evaluated, 58 expanded
[t=0.023082s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0231016s, 26652 KB] g=9, 61 evaluated, 60 expanded
[t=0.0234574s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0234674s, 26652 KB] g=11, 73 evaluated, 72 expanded
[t=0.0237297s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0237477s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0237559s, 26652 KB] g=10, 80 evaluated, 79 expanded
[t=0.023822s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0238309s, 26652 KB] g=11, 82 evaluated, 81 expanded
[t=0.0238681s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0238763s, 26652 KB] g=12, 83 evaluated, 82 expanded
[t=0.0242443s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0242545s, 26652 KB] g=13, 96 evaluated, 95 expanded
[t=0.0242941s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0243027s, 26652 KB] g=14, 97 evaluated, 96 expanded
[t=0.0247257s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0247355s, 26652 KB] g=16, 112 evaluated, 111 expanded
[t=0.0253022s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0253116s, 26652 KB] g=18, 132 evaluated, 131 expanded
[t=0.025351s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0253596s, 26652 KB] g=18, 133 evaluated, 132 expanded
[t=0.0257011s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0257102s, 26652 KB] g=20, 145 evaluated, 144 expanded
[t=0.0259109s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0259196s, 26652 KB] g=20, 152 evaluated, 151 expanded
[t=0.0264876s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0264979s, 26652 KB] g=22, 172 evaluated, 171 expanded
[t=0.0268258s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0268372s, 26652 KB] g=26, 183 evaluated, 182 expanded
[t=0.027215s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.027225s, 26652 KB] g=24, 196 evaluated, 195 expanded
[t=0.0273217s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0273307s, 26652 KB] g=28, 199 evaluated, 198 expanded
[t=0.0278448s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0278565s, 26652 KB] g=30, 217 evaluated, 216 expanded
[t=0.0280919s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0281011s, 26652 KB] g=26, 225 evaluated, 224 expanded
[t=0.0287005s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0287102s, 26652 KB] g=28, 246 evaluated, 245 expanded
[t=0.0294007s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0294105s, 26652 KB] g=30, 271 evaluated, 270 expanded
[t=0.0296691s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0296777s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0296862s, 26652 KB] g=32, 281 evaluated, 280 expanded
[t=0.0299279s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0299365s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0299441s, 26652 KB] g=34, 291 evaluated, 290 expanded
[t=0.0301717s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0301836s, 26652 KB] g=36, 301 evaluated, 300 expanded
[t=0.0303091s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.030318s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0303257s, 26652 KB] g=36, 306 evaluated, 305 expanded
[t=0.0305263s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0305354s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0305439s, 26652 KB] g=38, 316 evaluated, 315 expanded
[t=0.0307433s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0307519s, 26652 KB] g=40, 325 evaluated, 324 expanded
[t=0.0308873s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0308964s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0309041s, 26652 KB] g=40, 331 evaluated, 330 expanded
[t=0.0310535s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.031062s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0310696s, 26652 KB] g=42, 339 evaluated, 338 expanded
[t=0.0311994s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0312079s, 26652 KB] g=44, 346 evaluated, 345 expanded
[t=0.0313158s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0313246s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0313329s, 26652 KB] g=44, 351 evaluated, 350 expanded
[t=0.0314396s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0314481s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0314557s, 26652 KB] g=46, 357 evaluated, 356 expanded
[t=0.0315509s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0315608s, 26652 KB] g=48, 362 evaluated, 361 expanded
[t=0.0316502s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.031659s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0316666s, 26652 KB] g=50, 366 evaluated, 365 expanded
[t=0.0316892s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0316979s, 26652 KB] g=51, 367 evaluated, 366 expanded
[t=0.0317579s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0317665s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0317756s, 26652 KB] g=52, 370 evaluated, 369 expanded
[t=0.0318131s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0318289s, 26652 KB] g=53, 371 evaluated, 370 expanded
[t=0.0319057s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0319167s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0319252s, 26652 KB] g=56, 374 evaluated, 373 expanded
[t=0.0319483s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0319574s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0319671s, 26652 KB] g=57, 375 evaluated, 374 expanded
[t=0.03199s, 26652 KB] Solution found!
[t=0.0320032s, 26652 KB] Actual search time: 0.0109983s
unstack b1 b23 (1)
put-down b1 (1)
unstack b23 b20 (1)
put-down b23 (1)
unstack b4 b9 (1)
put-down b4 (1)
pick-up b18 (1)
stack b18 b8 (1)
unstack b2 b3 (1)
stack b2 b18 (1)
unstack b19 b16 (1)
put-down b19 (1)
unstack b9 b14 (1)
put-down b9 (1)
unstack b12 b13 (1)
put-down b12 (1)
unstack b13 b5 (1)
put-down b13 (1)
unstack b14 b17 (1)
put-down b14 (1)
unstack b17 b10 (1)
stack b17 b23 (1)
unstack b10 b11 (1)
stack b10 b4 (1)
unstack b5 b22 (1)
stack b5 b2 (1)
pick-up b21 (1)
stack b21 b5 (1)
pick-up b9 (1)
stack b9 b10 (1)
unstack b22 b15 (1)
put-down b22 (1)
unstack b15 b6 (1)
stack b15 b1 (1)
unstack b6 b7 (1)
stack b6 b15 (1)
pick-up b11 (1)
stack b11 b6 (1)
pick-up b12 (1)
stack b12 b17 (1)
pick-up b13 (1)
stack b13 b12 (1)
pick-up b14 (1)
stack b14 b22 (1)
pick-up b16 (1)
stack b16 b13 (1)
pick-up b19 (1)
stack b19 b3 (1)
pick-up b20 (1)
stack b20 b16 (1)
pick-up b7 (1)
stack b7 b20 (1)
unstack b19 b3 (1)
put-down b19 (1)
pick-up b3 (1)
stack b3 b14 (1)
pick-up b19 (1)
stack b19 b3 (1)
[t=0.0320176s, 26652 KB] Plan length: 58 step(s).
[t=0.0320176s, 26652 KB] Plan cost: 58
[t=0.0320176s, 26652 KB] Expanded 375 state(s).
[t=0.0320176s, 26652 KB] Reopened 0 state(s).
[t=0.0320176s, 26652 KB] Evaluated 376 state(s).
[t=0.0320176s, 26652 KB] Evaluations: 752
[t=0.0320176s, 26652 KB] Generated 4478 state(s).
[t=0.0320176s, 26652 KB] Dead ends: 0 state(s).
[t=0.0320176s, 26652 KB] Number of registered states: 376
[t=0.0320176s, 26652 KB] Int hash set load factor: 376/512 = 0.734375
[t=0.0320176s, 26652 KB] Int hash set resizes: 9
[t=0.0320176s, 26652 KB] Search time: 0.0110589s
[t=0.0320176s, 26652 KB] Total time: 0.0320176s
Solution found.
Peak memory: 26652 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.18s
