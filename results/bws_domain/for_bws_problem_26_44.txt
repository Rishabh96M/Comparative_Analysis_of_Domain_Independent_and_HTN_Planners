INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_26/bws_problem_26_44.pddl --sas-file output.sas
Parsing...
Parsing: [0.010s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
2212 relevant atoms
1482 auxiliary atoms
3694 final queue length
6455 total queue pushes
Completing instantiation... [0.020s CPU, 0.030s wall-clock]
Instantiating: [0.030s CPU, 0.045s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.010s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
27 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.008s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.040s CPU, 0.033s wall-clock]
2002 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
52 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.025s wall-clock]
Reordering and filtering variables...
53 of 53 variables necessary.
27 of 53 mutex groups necessary.
1352 of 1352 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.008s wall-clock]
Translator variables: 53
Translator derived variables: 0
Translator facts: 756
Translator goal facts: 17
Translator mutex groups: 27
Translator total mutex groups size: 729
Translator operators: 1352
Translator axioms: 0
Translator task size: 11617
Translator peak memory: 38900 KB
Writing output... [0.010s CPU, 0.011s wall-clock]
Done! [0.130s CPU, 0.136s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.3864e-05s, 24488 KB] reading input...
[t=0.00394647s, 25744 KB] done reading input!
[t=0.00499762s, 26140 KB] Initializing landmark count heuristic...
[t=0.00504437s, 26140 KB] Generating landmark graph...
[t=0.00514031s, 26272 KB] Building a landmark graph with reasonable orders.
[t=0.00522691s, 26272 KB] Initializing Exploration...
[t=0.00570082s, 26680 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0206437s, 27208 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0207618s, 27208 KB] Landmarks generation time: 0.0156248s
[t=0.0207801s, 27208 KB] Discovered 100 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.020803s, 27208 KB] 422 edges
[t=0.0208159s, 27208 KB] approx. reasonable orders
[t=0.0229832s, 27208 KB] approx. obedient reasonable orders
[t=0.0230495s, 27208 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0230624s, 27208 KB] Landmarks generation time: 0.0180147s
[t=0.0230757s, 27208 KB] Discovered 100 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0230878s, 27208 KB] 455 edges
[t=0.0230991s, 27208 KB] Landmark graph generation time: 0.0180641s
[t=0.0231101s, 27208 KB] Landmark graph contains 100 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0231204s, 27208 KB] Landmark graph contains 455 orderings.
[t=0.0236473s, 27208 KB] Simplifying 5356 unary operators... done! [4056 unary operators]
[t=0.0251147s, 27340 KB] time to simplify: 0.00156817s
[t=0.0253194s, 27340 KB] Initializing additive heuristic...
[t=0.0253448s, 27340 KB] Initializing FF heuristic...
[t=0.0254446s, 27340 KB] Building successor generator...done!
[t=0.0257401s, 27340 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0257492s, 27340 KB] time for successor generation creation: 0.000261344s
[t=0.0257719s, 27340 KB] Variables: 53
[t=0.0257811s, 27340 KB] FactPairs: 756
[t=0.0257917s, 27340 KB] Bytes per state: 20
[t=0.0260922s, 27340 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0261465s, 27340 KB] 49 initial landmarks, 17 goal landmarks
[t=0.026282s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0262947s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0263072s, 27340 KB] g=0, 1 evaluated, 0 expanded
[t=0.0263351s, 27340 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0263456s, 27340 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0265721s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0265827s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0265928s, 27340 KB] g=2, 7 evaluated, 6 expanded
[t=0.0267943s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0268042s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0268143s, 27340 KB] g=4, 13 evaluated, 12 expanded
[t=0.0270203s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.027032s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0270423s, 27340 KB] g=6, 19 evaluated, 18 expanded
[t=0.0272521s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0272676s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0272785s, 27340 KB] g=8, 25 evaluated, 24 expanded
[t=0.0273234s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0273336s, 27340 KB] g=9, 26 evaluated, 25 expanded
[t=0.0276907s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0277014s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0277117s, 27340 KB] g=12, 37 evaluated, 36 expanded
[t=0.0279731s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0279831s, 27340 KB] g=14, 45 evaluated, 44 expanded
[t=0.0280918s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0281018s, 27340 KB] g=14, 48 evaluated, 47 expanded
[t=0.0284599s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0284709s, 27340 KB] g=16, 59 evaluated, 58 expanded
[t=0.0288884s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0288988s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0289091s, 27340 KB] g=18, 72 evaluated, 71 expanded
[t=0.0290184s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0290282s, 27340 KB] g=19, 75 evaluated, 74 expanded
[t=0.0290738s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0290834s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0290934s, 27340 KB] g=20, 76 evaluated, 75 expanded
[t=0.0293598s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.02937s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0293804s, 27340 KB] g=22, 83 evaluated, 82 expanded
[t=0.0297063s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0297243s, 27340 KB] g=24, 92 evaluated, 91 expanded
[t=0.0298032s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0298134s, 27340 KB] g=24, 94 evaluated, 93 expanded
[t=0.030296s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0303063s, 27340 KB] g=26, 109 evaluated, 108 expanded
[t=0.0303514s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.030361s, 27340 KB] g=26, 110 evaluated, 109 expanded
[t=0.0309737s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0309844s, 27340 KB] g=28, 129 evaluated, 128 expanded
[t=0.0314959s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.031507s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0315175s, 27340 KB] g=30, 145 evaluated, 144 expanded
[t=0.031848s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0318641s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0318755s, 27340 KB] g=32, 155 evaluated, 154 expanded
[t=0.0321927s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0322029s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0322131s, 27340 KB] g=34, 165 evaluated, 164 expanded
[t=0.0324711s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0324815s, 27340 KB] g=36, 173 evaluated, 172 expanded
[t=0.0325255s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0325351s, 27340 KB] g=36, 174 evaluated, 173 expanded
[t=0.0329715s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0329842s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0329955s, 27340 KB] g=38, 188 evaluated, 187 expanded
[t=0.0332425s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0332541s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0332709s, 27340 KB] g=40, 196 evaluated, 195 expanded
[t=0.0334903s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0335056s, 27340 KB] g=40, 203 evaluated, 202 expanded
[t=0.0335479s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0335583s, 27340 KB] g=43, 204 evaluated, 203 expanded
[t=0.0336342s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0336459s, 27340 KB] g=44, 206 evaluated, 205 expanded
[t=0.0340281s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0340539s, 27340 KB] g=46, 219 evaluated, 218 expanded
[t=0.0341636s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0341773s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0341876s, 27340 KB] g=46, 222 evaluated, 221 expanded
[t=0.0343953s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0344073s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0344171s, 27340 KB] g=48, 229 evaluated, 228 expanded
[t=0.0345938s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0346064s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0346164s, 27340 KB] g=50, 235 evaluated, 234 expanded
[t=0.0353109s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0353248s, 27340 KB] g=54, 260 evaluated, 259 expanded
[t=0.0354489s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0354595s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0354693s, 27340 KB] g=56, 264 evaluated, 263 expanded
[t=0.0359782s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0359898s, 27340 KB] g=62, 280 evaluated, 279 expanded
[t=0.0361516s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0361626s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0361731s, 27340 KB] g=64, 285 evaluated, 284 expanded
[t=0.036277s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0362869s, 27340 KB] g=64, 288 evaluated, 287 expanded
[t=0.0364176s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0364282s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0364384s, 27340 KB] g=66, 292 evaluated, 291 expanded
[t=0.0368023s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0368207s, 27340 KB] g=72, 303 evaluated, 302 expanded
[t=0.0369299s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0369402s, 27340 KB] g=74, 306 evaluated, 305 expanded
[t=0.0370782s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0370889s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0370995s, 27340 KB] g=76, 310 evaluated, 309 expanded
[t=0.038621s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0386427s, 27340 KB] g=94, 364 evaluated, 363 expanded
[t=0.0387369s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0387466s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0387566s, 27340 KB] g=96, 367 evaluated, 366 expanded
[t=0.039213s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0392309s, 27340 KB] g=108, 385 evaluated, 384 expanded
[t=0.0393244s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0393345s, 27340 KB] g=112, 389 evaluated, 388 expanded
[t=0.0393593s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0393688s, 27340 KB] g=113, 390 evaluated, 389 expanded
[t=0.0393905s, 27340 KB] Solution found!
[t=0.0394033s, 27340 KB] Actual search time: 0.0132509s
unstack b5 b11 (1)
put-down b5 (1)
unstack b11 b22 (1)
put-down b11 (1)
unstack b22 b26 (1)
put-down b22 (1)
unstack b26 b14 (1)
put-down b26 (1)
unstack b14 b7 (1)
put-down b14 (1)
unstack b18 b10 (1)
stack b18 b5 (1)
unstack b8 b20 (1)
put-down b8 (1)
unstack b20 b3 (1)
put-down b20 (1)
unstack b3 b17 (1)
stack b3 b15 (1)
unstack b17 b6 (1)
stack b17 b3 (1)
unstack b6 b16 (1)
put-down b6 (1)
unstack b16 b23 (1)
put-down b16 (1)
unstack b23 b9 (1)
put-down b23 (1)
unstack b9 b12 (1)
stack b9 b10 (1)
unstack b12 b13 (1)
stack b12 b11 (1)
unstack b13 b4 (1)
put-down b13 (1)
pick-up b14 (1)
stack b14 b9 (1)
unstack b4 b2 (1)
stack b4 b16 (1)
pick-up b23 (1)
stack b23 b12 (1)
pick-up b7 (1)
stack b7 b8 (1)
unstack b25 b1 (1)
put-down b25 (1)
unstack b1 b24 (1)
stack b1 b26 (1)
pick-up b24 (1)
stack b24 b18 (1)
pick-up b2 (1)
stack b2 b24 (1)
pick-up b25 (1)
stack b25 b1 (1)
unstack b4 b16 (1)
put-down b4 (1)
pick-up b16 (1)
stack b16 b7 (1)
pick-up b4 (1)
stack b4 b16 (1)
unstack b14 b9 (1)
put-down b14 (1)
unstack b9 b10 (1)
put-down b9 (1)
unstack b10 b19 (1)
stack b10 b13 (1)
pick-up b9 (1)
stack b9 b10 (1)
pick-up b14 (1)
stack b14 b9 (1)
unstack b17 b3 (1)
put-down b17 (1)
unstack b3 b15 (1)
put-down b3 (1)
unstack b15 b21 (1)
stack b15 b4 (1)
pick-up b17 (1)
stack b17 b3 (1)
unstack b15 b4 (1)
put-down b15 (1)
unstack b4 b16 (1)
put-down b4 (1)
pick-up b15 (1)
stack b15 b4 (1)
unstack b17 b3 (1)
put-down b17 (1)
pick-up b3 (1)
stack b3 b15 (1)
pick-up b17 (1)
stack b17 b3 (1)
unstack b16 b7 (1)
put-down b16 (1)
unstack b7 b8 (1)
put-down b7 (1)
pick-up b8 (1)
stack b8 b23 (1)
pick-up b7 (1)
stack b7 b8 (1)
pick-up b16 (1)
stack b16 b7 (1)
unstack b17 b3 (1)
put-down b17 (1)
unstack b3 b15 (1)
put-down b3 (1)
pick-up b17 (1)
stack b17 b3 (1)
unstack b15 b4 (1)
put-down b15 (1)
pick-up b4 (1)
stack b4 b16 (1)
pick-up b15 (1)
stack b15 b4 (1)
unstack b17 b3 (1)
put-down b17 (1)
pick-up b3 (1)
stack b3 b15 (1)
pick-up b17 (1)
stack b17 b3 (1)
[t=0.0394138s, 27340 KB] Plan length: 114 step(s).
[t=0.0394138s, 27340 KB] Plan cost: 114
[t=0.0394138s, 27340 KB] Expanded 390 state(s).
[t=0.0394138s, 27340 KB] Reopened 0 state(s).
[t=0.0394138s, 27340 KB] Evaluated 391 state(s).
[t=0.0394138s, 27340 KB] Evaluations: 782
[t=0.0394138s, 27340 KB] Generated 4921 state(s).
[t=0.0394138s, 27340 KB] Dead ends: 0 state(s).
[t=0.0394138s, 27340 KB] Number of registered states: 391
[t=0.0394138s, 27340 KB] Int hash set load factor: 391/512 = 0.763672
[t=0.0394138s, 27340 KB] Int hash set resizes: 9
[t=0.0394138s, 27340 KB] Search time: 0.0133241s
[t=0.0394138s, 27340 KB] Total time: 0.0394138s
Solution found.
Peak memory: 27340 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.21s
