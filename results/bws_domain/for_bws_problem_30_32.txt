INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_30/bws_problem_30_32.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.023s wall-clock]
2912 relevant atoms
1950 auxiliary atoms
4862 final queue length
8526 total queue pushes
Completing instantiation... [0.040s CPU, 0.035s wall-clock]
Instantiating: [0.060s CPU, 0.060s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.002s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
31 uncovered facts
Choosing groups: [0.010s CPU, 0.002s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.001s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.002s wall-clock]
Translating task: [0.060s CPU, 0.056s wall-clock]
2670 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
60 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.024s wall-clock]
Reordering and filtering variables...
61 of 61 variables necessary.
31 of 61 mutex groups necessary.
1800 of 1800 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.013s wall-clock]
Translator variables: 61
Translator derived variables: 0
Translator facts: 992
Translator goal facts: 24
Translator mutex groups: 31
Translator total mutex groups size: 961
Translator operators: 1800
Translator axioms: 0
Translator task size: 15448
Translator peak memory: 41336 KB
Writing output... [0.000s CPU, 0.009s wall-clock]
Done! [0.170s CPU, 0.179s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=1.8484e-05s, 24488 KB] reading input...
[t=0.00531753s, 26364 KB] done reading input!
[t=0.00699732s, 26760 KB] Initializing landmark count heuristic...
[t=0.00703945s, 26760 KB] Generating landmark graph...
[t=0.00715783s, 26892 KB] Building a landmark graph with reasonable orders.
[t=0.00725943s, 27024 KB] Initializing Exploration...
[t=0.00778132s, 27316 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0325943s, 28240 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0326947s, 28240 KB] Landmarks generation time: 0.0255415s
[t=0.0327186s, 28240 KB] Discovered 127 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0327359s, 28240 KB] 704 edges
[t=0.0327458s, 28240 KB] approx. reasonable orders
[t=0.0349354s, 28240 KB] approx. obedient reasonable orders
[t=0.0349985s, 28240 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0350099s, 28240 KB] Landmarks generation time: 0.0279677s
[t=0.0350201s, 28240 KB] Discovered 127 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0350301s, 28240 KB] 729 edges
[t=0.0350402s, 28240 KB] Landmark graph generation time: 0.0280093s
[t=0.0350516s, 28240 KB] Landmark graph contains 127 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0350609s, 28240 KB] Landmark graph contains 729 orderings.
[t=0.0358101s, 28268 KB] Simplifying 7140 unary operators... done! [5400 unary operators]
[t=0.0375052s, 28268 KB] time to simplify: 0.00181663s
[t=0.0377361s, 28268 KB] Initializing additive heuristic...
[t=0.0377575s, 28268 KB] Initializing FF heuristic...
[t=0.0378435s, 28268 KB] Building successor generator...done!
[t=0.0382373s, 28404 KB] peak memory difference for successor generator creation: 136 KB
[t=0.0382474s, 28404 KB] time for successor generation creation: 0.000357264s
[t=0.0382645s, 28404 KB] Variables: 61
[t=0.0382731s, 28404 KB] FactPairs: 992
[t=0.0382813s, 28404 KB] Bytes per state: 24
[t=0.0386779s, 28404 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0387461s, 28404 KB] 58 initial landmarks, 24 goal landmarks
[t=0.0389166s, 28404 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 69
[t=0.0389266s, 28404 KB] New best heuristic value for ff(transform = adapt_costs(one)): 50
[t=0.0389354s, 28404 KB] g=0, 1 evaluated, 0 expanded
[t=0.0389522s, 28404 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 69
[t=0.0389612s, 28404 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 50
[t=0.0392038s, 28404 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 68
[t=0.0392163s, 28404 KB] New best heuristic value for ff(transform = adapt_costs(one)): 49
[t=0.0392425s, 28404 KB] g=2, 6 evaluated, 5 expanded
[t=0.0392942s, 28404 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 67
[t=0.0393038s, 28404 KB] g=3, 7 evaluated, 6 expanded
[t=0.0396481s, 28404 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 66
[t=0.0396582s, 28404 KB] g=6, 15 evaluated, 14 expanded
[t=0.0398375s, 28404 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 65
[t=0.0398469s, 28404 KB] g=7, 19 evaluated, 18 expanded
[t=0.0402752s, 28404 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 64
[t=0.0402855s, 28404 KB] g=9, 29 evaluated, 28 expanded
[t=0.0408249s, 28404 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 63
[t=0.0408353s, 28404 KB] g=12, 42 evaluated, 41 expanded
[t=0.0412842s, 28404 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 62
[t=0.0412942s, 28404 KB] g=13, 53 evaluated, 52 expanded
[t=0.0419049s, 28404 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 61
[t=0.0419158s, 28404 KB] g=16, 68 evaluated, 67 expanded
[t=0.0426322s, 28404 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 58
[t=0.0426441s, 28404 KB] New best heuristic value for ff(transform = adapt_costs(one)): 47
[t=0.0426527s, 28404 KB] g=18, 85 evaluated, 84 expanded
[t=0.043135s, 28404 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 57
[t=0.0431512s, 28404 KB] g=20, 96 evaluated, 95 expanded
[t=0.0434167s, 28404 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0434351s, 28404 KB] New best heuristic value for ff(transform = adapt_costs(one)): 46
[t=0.0434492s, 28404 KB] g=20, 102 evaluated, 101 expanded
[t=0.0439083s, 28404 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0439263s, 28404 KB] g=22, 112 evaluated, 111 expanded
[t=0.0441899s, 28404 KB] New best heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0442012s, 28404 KB] g=22, 118 evaluated, 117 expanded
[t=0.0449191s, 28404 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0449526s, 28404 KB] g=24, 132 evaluated, 131 expanded
[t=0.0455967s, 28404 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0456084s, 28404 KB] g=27, 147 evaluated, 146 expanded
[t=0.0465146s, 28404 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.046535s, 28404 KB] g=30, 168 evaluated, 167 expanded
[t=0.0471087s, 28404 KB] New best heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.0471181s, 28404 KB] g=32, 181 evaluated, 180 expanded
[t=0.0472567s, 28404 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0472661s, 28404 KB] g=32, 184 evaluated, 183 expanded
[t=0.0484274s, 28404 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0484407s, 28404 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0484496s, 28404 KB] g=34, 212 evaluated, 211 expanded
[t=0.0490303s, 28404 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0490401s, 28404 KB] g=36, 226 evaluated, 225 expanded
[t=0.0490977s, 28404 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0491067s, 28404 KB] g=36, 227 evaluated, 226 expanded
[t=0.0500693s, 28404 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0500796s, 28404 KB] g=36, 250 evaluated, 249 expanded
[t=0.0504161s, 28404 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0504276s, 28404 KB] g=38, 257 evaluated, 256 expanded
[t=0.051012s, 28404 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0510257s, 28404 KB] g=38, 270 evaluated, 269 expanded
[t=0.0513762s, 28404 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0513852s, 28404 KB] g=40, 278 evaluated, 277 expanded
[t=0.0520392s, 28404 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0520507s, 28404 KB] g=40, 294 evaluated, 293 expanded
[t=0.0522301s, 28404 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0522397s, 28404 KB] g=42, 298 evaluated, 297 expanded
[t=0.0531179s, 28404 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0531327s, 28404 KB] g=42, 319 evaluated, 318 expanded
[t=0.0535953s, 28404 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0536126s, 28404 KB] g=44, 330 evaluated, 329 expanded
[t=0.0542036s, 28404 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0542296s, 28404 KB] g=46, 344 evaluated, 343 expanded
[t=0.0549688s, 28404 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0549959s, 28404 KB] g=48, 358 evaluated, 357 expanded
[t=0.0565902s, 28404 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0566025s, 28404 KB] g=52, 395 evaluated, 394 expanded
[t=0.0572068s, 28404 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0572187s, 28404 KB] g=54, 409 evaluated, 408 expanded
[t=0.057689s, 28404 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0577039s, 28404 KB] g=54, 420 evaluated, 419 expanded
[t=0.0584423s, 28404 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0584751s, 28404 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0584862s, 28404 KB] g=56, 437 evaluated, 436 expanded
[t=0.0589683s, 28404 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0589786s, 28404 KB] g=58, 448 evaluated, 447 expanded
[t=0.0590771s, 28404 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0590938s, 28404 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0591021s, 28404 KB] g=58, 450 evaluated, 449 expanded
[t=0.0595519s, 28404 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0595617s, 28404 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0595708s, 28404 KB] g=60, 461 evaluated, 460 expanded
[t=0.0600163s, 28404 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0600266s, 28404 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0600349s, 28404 KB] g=62, 472 evaluated, 471 expanded
[t=0.0604794s, 28404 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.060495s, 28404 KB] g=64, 482 evaluated, 481 expanded
[t=0.0605902s, 28404 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0605997s, 28404 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0606081s, 28404 KB] g=64, 484 evaluated, 483 expanded
[t=0.0610086s, 28404 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.061019s, 28404 KB] g=66, 494 evaluated, 493 expanded
[t=0.0611507s, 28404 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0611602s, 28404 KB] g=66, 497 evaluated, 496 expanded
[t=0.0616926s, 28404 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0617035s, 28404 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0617118s, 28404 KB] g=68, 510 evaluated, 509 expanded
[t=0.0620313s, 28404 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0620423s, 28404 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0620509s, 28404 KB] g=70, 517 evaluated, 516 expanded
[t=0.0633879s, 28404 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0633997s, 28404 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0634081s, 28404 KB] g=74, 550 evaluated, 549 expanded
[t=0.0636965s, 28404 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0637143s, 28404 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0637235s, 28404 KB] g=76, 557 evaluated, 556 expanded
[t=0.0654338s, 28404 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0654539s, 28404 KB] g=82, 596 evaluated, 595 expanded
[t=0.065708s, 28404 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0657176s, 28404 KB] g=84, 602 evaluated, 601 expanded
[t=0.0661305s, 28404 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0661403s, 28404 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0661486s, 28404 KB] g=86, 612 evaluated, 611 expanded
[t=0.0687853s, 28404 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0688013s, 28404 KB] g=94, 675 evaluated, 674 expanded
[t=0.0691601s, 28404 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0691704s, 28404 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0691791s, 28404 KB] g=96, 683 evaluated, 682 expanded
[t=0.0716572s, 28404 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0716898s, 28404 KB] g=110, 740 evaluated, 739 expanded
[t=0.0719651s, 28404 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0719759s, 28404 KB] g=112, 746 evaluated, 745 expanded
[t=0.0721949s, 28404 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0722045s, 28404 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0722128s, 28404 KB] g=114, 751 evaluated, 750 expanded
[t=0.0724238s, 28404 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0724337s, 28404 KB] g=114, 756 evaluated, 755 expanded
[t=0.0727297s, 28404 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0727405s, 28404 KB] g=117, 763 evaluated, 762 expanded
[t=0.0727908s, 28404 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0728001s, 28404 KB] g=116, 764 evaluated, 763 expanded
[t=0.0728517s, 28404 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0728611s, 28404 KB] g=118, 765 evaluated, 764 expanded
[t=0.073236s, 28404 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0732508s, 28404 KB] g=120, 774 evaluated, 773 expanded
[t=0.0742528s, 28404 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0742666s, 28404 KB] g=124, 798 evaluated, 797 expanded
[t=0.0744717s, 28404 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0744876s, 28404 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0745s, 28404 KB] g=126, 802 evaluated, 801 expanded
[t=0.0757011s, 28404 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0757192s, 28404 KB] g=134, 829 evaluated, 828 expanded
[t=0.0760929s, 28404 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0761028s, 28404 KB] g=138, 838 evaluated, 837 expanded
[t=0.0762313s, 28404 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0762488s, 28404 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0762575s, 28404 KB] g=140, 841 evaluated, 840 expanded
[t=0.0799731s, 28404 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0799901s, 28404 KB] g=170, 945 evaluated, 944 expanded
[t=0.0802774s, 28404 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0802874s, 28404 KB] g=174, 954 evaluated, 953 expanded
[t=0.0803893s, 28404 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0803984s, 28404 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0804066s, 28404 KB] g=176, 957 evaluated, 956 expanded
[t=0.0808121s, 28404 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0808219s, 28404 KB] g=188, 973 evaluated, 972 expanded
[t=0.0809137s, 28404 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0809227s, 28404 KB] g=192, 977 evaluated, 976 expanded
[t=0.0809436s, 28404 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0809525s, 28404 KB] g=193, 978 evaluated, 977 expanded
[t=0.08097s, 28404 KB] Solution found!
[t=0.0809836s, 28404 KB] Actual search time: 0.0422313s
unstack b22 b13 (1)
put-down b22 (1)
unstack b13 b11 (1)
put-down b13 (1)
unstack b17 b23 (1)
put-down b17 (1)
unstack b23 b8 (1)
put-down b23 (1)
unstack b8 b29 (1)
put-down b8 (1)
unstack b21 b9 (1)
put-down b21 (1)
unstack b9 b20 (1)
put-down b9 (1)
unstack b29 b2 (1)
put-down b29 (1)
unstack b2 b1 (1)
stack b2 b22 (1)
unstack b6 b18 (1)
stack b6 b1 (1)
unstack b18 b27 (1)
put-down b18 (1)
pick-up b9 (1)
stack b9 b18 (1)
unstack b20 b25 (1)
put-down b20 (1)
unstack b25 b16 (1)
put-down b25 (1)
unstack b16 b19 (1)
put-down b16 (1)
unstack b19 b26 (1)
put-down b19 (1)
unstack b26 b5 (1)
stack b26 b2 (1)
unstack b5 b4 (1)
stack b5 b17 (1)
pick-up b23 (1)
stack b23 b5 (1)
pick-up b25 (1)
stack b25 b4 (1)
pick-up b21 (1)
stack b21 b16 (1)
pick-up b19 (1)
stack b19 b29 (1)
pick-up b20 (1)
stack b20 b25 (1)
unstack b6 b1 (1)
put-down b6 (1)
unstack b1 b30 (1)
put-down b1 (1)
unstack b19 b29 (1)
put-down b19 (1)
unstack b30 b3 (1)
stack b30 b11 (1)
pick-up b13 (1)
stack b13 b30 (1)
unstack b3 b14 (1)
stack b3 b21 (1)
unstack b14 b24 (1)
put-down b14 (1)
unstack b24 b7 (1)
stack b24 b20 (1)
pick-up b8 (1)
stack b8 b14 (1)
pick-up b29 (1)
stack b29 b7 (1)
pick-up b19 (1)
stack b19 b29 (1)
pick-up b6 (1)
stack b6 b1 (1)
unstack b9 b18 (1)
put-down b9 (1)
pick-up b18 (1)
stack b18 b3 (1)
pick-up b9 (1)
stack b9 b18 (1)
unstack b19 b29 (1)
put-down b19 (1)
unstack b29 b7 (1)
put-down b29 (1)
pick-up b7 (1)
stack b7 b6 (1)
pick-up b29 (1)
stack b29 b7 (1)
pick-up b19 (1)
stack b19 b29 (1)
unstack b23 b5 (1)
put-down b23 (1)
unstack b5 b17 (1)
put-down b5 (1)
pick-up b17 (1)
stack b17 b19 (1)
pick-up b5 (1)
stack b5 b17 (1)
pick-up b23 (1)
stack b23 b5 (1)
unstack b24 b20 (1)
put-down b24 (1)
unstack b20 b25 (1)
put-down b20 (1)
pick-up b24 (1)
stack b24 b20 (1)
unstack b25 b4 (1)
put-down b25 (1)
unstack b4 b10 (1)
put-down b4 (1)
unstack b10 b12 (1)
put-down b10 (1)
unstack b12 b28 (1)
stack b12 b24 (1)
pick-up b27 (1)
stack b27 b28 (1)
pick-up b25 (1)
stack b25 b4 (1)
unstack b27 b28 (1)
put-down b27 (1)
unstack b28 b15 (1)
stack b28 b26 (1)
pick-up b27 (1)
stack b27 b28 (1)
unstack b25 b4 (1)
put-down b25 (1)
pick-up b4 (1)
stack b4 b10 (1)
pick-up b25 (1)
stack b25 b4 (1)
unstack b12 b24 (1)
put-down b12 (1)
unstack b24 b20 (1)
put-down b24 (1)
pick-up b12 (1)
stack b12 b24 (1)
pick-up b20 (1)
stack b20 b25 (1)
unstack b12 b24 (1)
put-down b12 (1)
pick-up b24 (1)
stack b24 b20 (1)
pick-up b12 (1)
stack b12 b24 (1)
unstack b23 b5 (1)
put-down b23 (1)
unstack b5 b17 (1)
put-down b5 (1)
pick-up b23 (1)
stack b23 b5 (1)
unstack b17 b19 (1)
put-down b17 (1)
unstack b19 b29 (1)
put-down b19 (1)
pick-up b17 (1)
stack b17 b19 (1)
unstack b23 b5 (1)
put-down b23 (1)
pick-up b5 (1)
stack b5 b17 (1)
pick-up b23 (1)
stack b23 b5 (1)
unstack b29 b7 (1)
put-down b29 (1)
unstack b7 b6 (1)
put-down b7 (1)
pick-up b29 (1)
stack b29 b7 (1)
unstack b6 b1 (1)
put-down b6 (1)
pick-up b1 (1)
stack b1 b12 (1)
pick-up b6 (1)
stack b6 b1 (1)
unstack b29 b7 (1)
put-down b29 (1)
pick-up b7 (1)
stack b7 b6 (1)
pick-up b29 (1)
stack b29 b7 (1)
unstack b23 b5 (1)
put-down b23 (1)
unstack b5 b17 (1)
put-down b5 (1)
pick-up b23 (1)
stack b23 b5 (1)
unstack b17 b19 (1)
put-down b17 (1)
pick-up b19 (1)
stack b19 b29 (1)
pick-up b17 (1)
stack b17 b19 (1)
unstack b23 b5 (1)
put-down b23 (1)
pick-up b5 (1)
stack b5 b17 (1)
pick-up b23 (1)
stack b23 b5 (1)
[t=0.0809933s, 28404 KB] Plan length: 194 step(s).
[t=0.0809933s, 28404 KB] Plan cost: 194
[t=0.0809933s, 28404 KB] Expanded 978 state(s).
[t=0.0809933s, 28404 KB] Reopened 0 state(s).
[t=0.0809933s, 28404 KB] Evaluated 979 state(s).
[t=0.0809933s, 28404 KB] Evaluations: 1958
[t=0.0809933s, 28404 KB] Generated 11252 state(s).
[t=0.0809933s, 28404 KB] Dead ends: 0 state(s).
[t=0.0809933s, 28404 KB] Number of registered states: 979
[t=0.0809933s, 28404 KB] Int hash set load factor: 979/1024 = 0.956055
[t=0.0809933s, 28404 KB] Int hash set resizes: 10
[t=0.0809933s, 28404 KB] Search time: 0.0423171s
[t=0.0809933s, 28404 KB] Total time: 0.0809933s
Solution found.
Peak memory: 28404 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.31s
