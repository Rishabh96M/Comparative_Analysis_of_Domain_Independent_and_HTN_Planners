INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_27/bws_problem_27_41.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.014s wall-clock]
2378 relevant atoms
1593 auxiliary atoms
3971 final queue length
6948 total queue pushes
Completing instantiation... [0.030s CPU, 0.025s wall-clock]
Instantiating: [0.040s CPU, 0.041s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
28 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.010s CPU, 0.009s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.001s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.040s CPU, 0.042s wall-clock]
2160 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
54 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.017s wall-clock]
Reordering and filtering variables...
55 of 55 variables necessary.
28 of 55 mutex groups necessary.
1458 of 1458 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.010s wall-clock]
Translator variables: 55
Translator derived variables: 0
Translator facts: 812
Translator goal facts: 24
Translator mutex groups: 28
Translator total mutex groups size: 784
Translator operators: 1458
Translator axioms: 0
Translator task size: 12529
Translator peak memory: 39544 KB
Writing output... [0.010s CPU, 0.008s wall-clock]
Done! [0.130s CPU, 0.133s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.3965e-05s, 24488 KB] reading input...
[t=0.00425879s, 25936 KB] done reading input!
[t=0.00529541s, 26332 KB] Initializing landmark count heuristic...
[t=0.00534439s, 26332 KB] Generating landmark graph...
[t=0.00544602s, 26332 KB] Building a landmark graph with reasonable orders.
[t=0.00553092s, 26464 KB] Initializing Exploration...
[t=0.0060182s, 26732 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0255227s, 27400 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0256269s, 27400 KB] Landmarks generation time: 0.0201871s
[t=0.0256489s, 27400 KB] Discovered 119 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0256661s, 27400 KB] 453 edges
[t=0.0256773s, 27400 KB] approx. reasonable orders
[t=0.027178s, 27400 KB] approx. obedient reasonable orders
[t=0.0272084s, 27400 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.027218s, 27400 KB] Landmarks generation time: 0.0218704s
[t=0.0272283s, 27400 KB] Discovered 119 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0272369s, 27400 KB] 471 edges
[t=0.0272462s, 27400 KB] Landmark graph generation time: 0.0219092s
[t=0.0272552s, 27400 KB] Landmark graph contains 119 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0272635s, 27400 KB] Landmark graph contains 471 orderings.
[t=0.0277861s, 27412 KB] Simplifying 5778 unary operators... done! [4374 unary operators]
[t=0.0291755s, 27544 KB] time to simplify: 0.00148614s
[t=0.0293581s, 27544 KB] Initializing additive heuristic...
[t=0.0293755s, 27544 KB] Initializing FF heuristic...
[t=0.0294284s, 27544 KB] Building successor generator...done!
[t=0.029686s, 27544 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0296945s, 27544 KB] time for successor generation creation: 0.000222202s
[t=0.0297067s, 27544 KB] Variables: 55
[t=0.029715s, 27544 KB] FactPairs: 812
[t=0.0297228s, 27544 KB] Bytes per state: 24
[t=0.0298128s, 27544 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0298465s, 27544 KB] 53 initial landmarks, 24 goal landmarks
[t=0.0299144s, 27544 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 66
[t=0.029931s, 27544 KB] New best heuristic value for ff(transform = adapt_costs(one)): 48
[t=0.02994s, 27544 KB] g=0, 1 evaluated, 0 expanded
[t=0.0299545s, 27544 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 66
[t=0.0299633s, 27544 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 48
[t=0.0300877s, 27544 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 65
[t=0.0300975s, 27544 KB] g=1, 4 evaluated, 3 expanded
[t=0.0304289s, 27544 KB] New best heuristic value for ff(transform = adapt_costs(one)): 47
[t=0.0304405s, 27544 KB] g=2, 13 evaluated, 12 expanded
[t=0.0305919s, 27544 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 64
[t=0.030601s, 27544 KB] g=3, 17 evaluated, 16 expanded
[t=0.0311427s, 27544 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 63
[t=0.0311527s, 27544 KB] g=6, 32 evaluated, 31 expanded
[t=0.0314536s, 27544 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 62
[t=0.0314649s, 27544 KB] g=7, 40 evaluated, 39 expanded
[t=0.0315108s, 27544 KB] New best heuristic value for ff(transform = adapt_costs(one)): 46
[t=0.0315202s, 27544 KB] g=4, 41 evaluated, 40 expanded
[t=0.0315656s, 27544 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 61
[t=0.0315746s, 27544 KB] g=8, 42 evaluated, 41 expanded
[t=0.0320456s, 27544 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 60
[t=0.0320568s, 27544 KB] g=10, 55 evaluated, 54 expanded
[t=0.0323883s, 27544 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.0324099s, 27544 KB] New best heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.0324193s, 27544 KB] g=10, 64 evaluated, 63 expanded
[t=0.0327267s, 27544 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 58
[t=0.0327473s, 27544 KB] g=12, 72 evaluated, 71 expanded
[t=0.0329524s, 27544 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0329681s, 27544 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0329775s, 27544 KB] g=12, 77 evaluated, 76 expanded
[t=0.0332734s, 27544 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0332838s, 27544 KB] g=14, 85 evaluated, 84 expanded
[t=0.0333309s, 27544 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0333411s, 27544 KB] g=14, 86 evaluated, 85 expanded
[t=0.0338801s, 27544 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0338925s, 27544 KB] g=16, 101 evaluated, 100 expanded
[t=0.0340478s, 27544 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.034057s, 27544 KB] g=17, 105 evaluated, 104 expanded
[t=0.0341397s, 27544 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0341488s, 27544 KB] g=18, 107 evaluated, 106 expanded
[t=0.0347579s, 27544 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0347749s, 27544 KB] g=20, 124 evaluated, 123 expanded
[t=0.0354502s, 27544 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0354652s, 27544 KB] g=22, 141 evaluated, 140 expanded
[t=0.0357241s, 27544 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0357341s, 27544 KB] g=20, 148 evaluated, 147 expanded
[t=0.0360585s, 27544 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0360688s, 27544 KB] g=24, 157 evaluated, 156 expanded
[t=0.0365504s, 27544 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0365599s, 27544 KB] g=22, 170 evaluated, 169 expanded
[t=0.0369209s, 27544 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0369299s, 27544 KB] g=26, 180 evaluated, 179 expanded
[t=0.0374689s, 27544 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0374858s, 27544 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0374953s, 27544 KB] g=28, 195 evaluated, 194 expanded
[t=0.0378764s, 27544 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.037886s, 27544 KB] g=30, 206 evaluated, 205 expanded
[t=0.0379331s, 27544 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.037942s, 27544 KB] g=30, 207 evaluated, 206 expanded
[t=0.0386297s, 27544 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0386405s, 27544 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0386526s, 27544 KB] g=32, 227 evaluated, 226 expanded
[t=0.0390756s, 27544 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0390871s, 27544 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0390958s, 27544 KB] g=34, 239 evaluated, 238 expanded
[t=0.0394406s, 27544 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0394557s, 27544 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0394639s, 27544 KB] g=36, 249 evaluated, 248 expanded
[t=0.0398204s, 27544 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0398302s, 27544 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0398381s, 27544 KB] g=38, 259 evaluated, 258 expanded
[t=0.0401423s, 27544 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0401534s, 27544 KB] g=38, 268 evaluated, 267 expanded
[t=0.0404888s, 27544 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0404985s, 27544 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0405099s, 27544 KB] g=40, 278 evaluated, 277 expanded
[t=0.0408108s, 27544 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0408211s, 27544 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0408318s, 27544 KB] g=42, 287 evaluated, 286 expanded
[t=0.0411676s, 27544 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0411773s, 27544 KB] g=42, 297 evaluated, 296 expanded
[t=0.0415091s, 27544 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0415185s, 27544 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0415265s, 27544 KB] g=44, 307 evaluated, 306 expanded
[t=0.0423813s, 27544 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0423991s, 27544 KB] g=48, 332 evaluated, 331 expanded
[t=0.04264s, 27544 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0426492s, 27544 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0426571s, 27544 KB] g=50, 339 evaluated, 338 expanded
[t=0.0433816s, 27544 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0433934s, 27544 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0434014s, 27544 KB] g=54, 360 evaluated, 359 expanded
[t=0.0436392s, 27544 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0436484s, 27544 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0436564s, 27544 KB] g=56, 367 evaluated, 366 expanded
[t=0.044274s, 27544 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0442848s, 27544 KB] g=61, 385 evaluated, 384 expanded
[t=0.0443668s, 27544 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0443818s, 27544 KB] g=62, 387 evaluated, 386 expanded
[t=0.044653s, 27544 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0446624s, 27544 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0446717s, 27544 KB] g=64, 395 evaluated, 394 expanded
[t=0.0449075s, 27544 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0449163s, 27544 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0449242s, 27544 KB] g=66, 402 evaluated, 401 expanded
[t=0.0450982s, 27544 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.045107s, 27544 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0451148s, 27544 KB] g=68, 407 evaluated, 406 expanded
[t=0.0452932s, 27544 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0453024s, 27544 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0453103s, 27544 KB] g=70, 412 evaluated, 411 expanded
[t=0.0475711s, 27544 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0475901s, 27544 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.047599s, 27544 KB] g=82, 478 evaluated, 477 expanded
[t=0.0481528s, 27544 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0481665s, 27544 KB] g=86, 494 evaluated, 493 expanded
[t=0.0483093s, 27544 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0483222s, 27544 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0483309s, 27544 KB] g=88, 498 evaluated, 497 expanded
[t=0.0539983s, 27544 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0540375s, 27544 KB] g=108, 677 evaluated, 676 expanded
[t=0.0541921s, 27544 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0542018s, 27544 KB] g=110, 682 evaluated, 681 expanded
[t=0.0543574s, 27544 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.054368s, 27544 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0543765s, 27544 KB] g=112, 687 evaluated, 686 expanded
[t=0.0547974s, 27544 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0548068s, 27544 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0548147s, 27544 KB] g=118, 701 evaluated, 700 expanded
[t=0.0553478s, 27544 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0553576s, 27544 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0553656s, 27544 KB] g=128, 718 evaluated, 717 expanded
[t=0.0635156s, 27544 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0636065s, 27544 KB] g=138, 979 evaluated, 978 expanded
[t=0.0638991s, 27544 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0639109s, 27544 KB] g=142, 988 evaluated, 987 expanded
[t=0.0639941s, 27544 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0640036s, 27544 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0640121s, 27544 KB] g=144, 991 evaluated, 990 expanded
[t=0.0648183s, 27544 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0648333s, 27544 KB] g=160, 1029 evaluated, 1028 expanded
[t=0.0650154s, 27544 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0650294s, 27544 KB] g=168, 1040 evaluated, 1039 expanded
[t=0.0650496s, 27544 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0650593s, 27544 KB] g=169, 1041 evaluated, 1040 expanded
[t=0.0650763s, 27544 KB] Solution found!
[t=0.0650999s, 27544 KB] Actual search time: 0.035252s
unstack b27 b26 (1)
put-down b27 (1)
unstack b21 b14 (1)
put-down b21 (1)
unstack b12 b3 (1)
put-down b12 (1)
unstack b3 b19 (1)
stack b3 b23 (1)
pick-up b14 (1)
stack b14 b19 (1)
unstack b26 b6 (1)
stack b26 b27 (1)
unstack b22 b10 (1)
put-down b22 (1)
unstack b10 b16 (1)
put-down b10 (1)
unstack b16 b20 (1)
stack b16 b10 (1)
unstack b20 b13 (1)
put-down b20 (1)
unstack b13 b15 (1)
put-down b13 (1)
unstack b25 b18 (1)
put-down b25 (1)
unstack b18 b9 (1)
stack b18 b26 (1)
unstack b4 b7 (1)
stack b4 b20 (1)
unstack b6 b11 (1)
stack b6 b9 (1)
unstack b11 b17 (1)
stack b11 b7 (1)
pick-up b12 (1)
stack b12 b6 (1)
unstack b17 b8 (1)
stack b17 b15 (1)
unstack b8 b5 (1)
stack b8 b4 (1)
pick-up b21 (1)
stack b21 b8 (1)
pick-up b5 (1)
stack b5 b12 (1)
pick-up b22 (1)
stack b22 b5 (1)
unstack b3 b23 (1)
put-down b3 (1)
pick-up b23 (1)
stack b23 b22 (1)
pick-up b3 (1)
stack b3 b23 (1)
unstack b16 b10 (1)
put-down b16 (1)
pick-up b10 (1)
stack b10 b11 (1)
pick-up b16 (1)
stack b16 b10 (1)
unstack b17 b15 (1)
put-down b17 (1)
unstack b15 b2 (1)
put-down b15 (1)
unstack b2 b24 (1)
stack b2 b14 (1)
pick-up b15 (1)
stack b15 b2 (1)
pick-up b24 (1)
stack b24 b13 (1)
pick-up b17 (1)
stack b17 b15 (1)
pick-up b25 (1)
stack b25 b24 (1)
unstack b21 b8 (1)
put-down b21 (1)
unstack b8 b4 (1)
put-down b8 (1)
pick-up b21 (1)
stack b21 b8 (1)
unstack b4 b20 (1)
put-down b4 (1)
pick-up b20 (1)
stack b20 b18 (1)
pick-up b4 (1)
stack b4 b20 (1)
unstack b21 b8 (1)
put-down b21 (1)
pick-up b8 (1)
stack b8 b4 (1)
pick-up b21 (1)
stack b21 b8 (1)
unstack b3 b23 (1)
put-down b3 (1)
unstack b23 b22 (1)
put-down b23 (1)
unstack b22 b5 (1)
put-down b22 (1)
pick-up b23 (1)
stack b23 b22 (1)
pick-up b3 (1)
stack b3 b23 (1)
unstack b5 b12 (1)
put-down b5 (1)
unstack b12 b6 (1)
put-down b12 (1)
pick-up b5 (1)
stack b5 b12 (1)
unstack b6 b9 (1)
put-down b6 (1)
unstack b9 b1 (1)
stack b9 b25 (1)
pick-up b1 (1)
stack b1 b17 (1)
pick-up b6 (1)
stack b6 b9 (1)
unstack b3 b23 (1)
put-down b3 (1)
unstack b23 b22 (1)
put-down b23 (1)
pick-up b22 (1)
stack b22 b5 (1)
pick-up b23 (1)
stack b23 b22 (1)
pick-up b3 (1)
stack b3 b23 (1)
unstack b6 b9 (1)
put-down b6 (1)
unstack b9 b25 (1)
put-down b9 (1)
pick-up b6 (1)
stack b6 b9 (1)
unstack b25 b24 (1)
put-down b25 (1)
unstack b24 b13 (1)
put-down b24 (1)
pick-up b13 (1)
stack b13 b1 (1)
pick-up b24 (1)
stack b24 b13 (1)
pick-up b25 (1)
stack b25 b24 (1)
unstack b6 b9 (1)
put-down b6 (1)
pick-up b9 (1)
stack b9 b25 (1)
pick-up b6 (1)
stack b6 b9 (1)
unstack b3 b23 (1)
put-down b3 (1)
unstack b23 b22 (1)
put-down b23 (1)
unstack b22 b5 (1)
put-down b22 (1)
pick-up b23 (1)
stack b23 b22 (1)
pick-up b3 (1)
stack b3 b23 (1)
unstack b5 b12 (1)
put-down b5 (1)
pick-up b12 (1)
stack b12 b6 (1)
pick-up b5 (1)
stack b5 b12 (1)
unstack b3 b23 (1)
put-down b3 (1)
unstack b23 b22 (1)
put-down b23 (1)
pick-up b22 (1)
stack b22 b5 (1)
pick-up b23 (1)
stack b23 b22 (1)
pick-up b3 (1)
stack b3 b23 (1)
[t=0.0651112s, 27544 KB] Plan length: 170 step(s).
[t=0.0651112s, 27544 KB] Plan cost: 170
[t=0.0651112s, 27544 KB] Expanded 1041 state(s).
[t=0.0651112s, 27544 KB] Reopened 0 state(s).
[t=0.0651112s, 27544 KB] Evaluated 1042 state(s).
[t=0.0651112s, 27544 KB] Evaluations: 2084
[t=0.0651112s, 27544 KB] Generated 9485 state(s).
[t=0.0651112s, 27544 KB] Dead ends: 0 state(s).
[t=0.0651112s, 27544 KB] Number of registered states: 1042
[t=0.0651112s, 27544 KB] Int hash set load factor: 1042/2048 = 0.508789
[t=0.0651112s, 27544 KB] Int hash set resizes: 11
[t=0.0651112s, 27544 KB] Search time: 0.0352988s
[t=0.0651112s, 27544 KB] Total time: 0.0651112s
Solution found.
Peak memory: 27544 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.24s
