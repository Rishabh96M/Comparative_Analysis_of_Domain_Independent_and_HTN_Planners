INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_20/bws_problem_20_24.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.008s wall-clock]
1342 relevant atoms
900 auxiliary atoms
2242 final queue length
3885 total queue pushes
Completing instantiation... [0.010s CPU, 0.013s wall-clock]
Instantiating: [0.020s CPU, 0.022s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.010s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
21 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.005s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.019s wall-clock]
1180 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
40 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.009s wall-clock]
Reordering and filtering variables...
41 of 41 variables necessary.
21 of 41 mutex groups necessary.
800 of 800 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.005s wall-clock]
Translator variables: 41
Translator derived variables: 0
Translator facts: 462
Translator goal facts: 17
Translator mutex groups: 21
Translator total mutex groups size: 441
Translator operators: 800
Translator axioms: 0
Translator task size: 6901
Translator peak memory: 35940 KB
Writing output... [0.010s CPU, 0.004s wall-clock]
Done! [0.070s CPU, 0.069s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.0136e-05s, 24488 KB] reading input...
[t=0.00216677s, 25180 KB] done reading input!
[t=0.00291249s, 25444 KB] Initializing landmark count heuristic...
[t=0.00293919s, 25444 KB] Generating landmark graph...
[t=0.00299238s, 25576 KB] Building a landmark graph with reasonable orders.
[t=0.00304281s, 25576 KB] Initializing Exploration...
[t=0.00331s, 25744 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0120448s, 26140 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0121255s, 26140 KB] Landmarks generation time: 0.0091347s
[t=0.0121398s, 26140 KB] Discovered 86 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0121574s, 26140 KB] 308 edges
[t=0.0121764s, 26140 KB] approx. reasonable orders
[t=0.0124756s, 26140 KB] approx. obedient reasonable orders
[t=0.0124998s, 26140 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0125095s, 26140 KB] Landmarks generation time: 0.00956811s
[t=0.0125189s, 26140 KB] Discovered 86 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0125277s, 26140 KB] 314 edges
[t=0.012536s, 26140 KB] Landmark graph generation time: 0.00960371s
[t=0.0125445s, 26140 KB] Landmark graph contains 86 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0125525s, 26140 KB] Landmark graph contains 314 orderings.
[t=0.0128566s, 26312 KB] Simplifying 3160 unary operators... done! [2400 unary operators]
[t=0.0136s, 26312 KB] time to simplify: 0.000797532s
[t=0.0137042s, 26312 KB] Initializing additive heuristic...
[t=0.0137252s, 26312 KB] Initializing FF heuristic...
[t=0.0137953s, 26312 KB] Building successor generator...done!
[t=0.0140192s, 26312 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0140459s, 26312 KB] time for successor generation creation: 0.0001752s
[t=0.0140577s, 26312 KB] Variables: 41
[t=0.0140659s, 26312 KB] FactPairs: 462
[t=0.014074s, 26312 KB] Bytes per state: 16
[t=0.0141921s, 26312 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.014227s, 26312 KB] 41 initial landmarks, 17 goal landmarks
[t=0.0142761s, 26312 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0142853s, 26312 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0142945s, 26312 KB] g=0, 1 evaluated, 0 expanded
[t=0.0143074s, 26312 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0143158s, 26312 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0144365s, 26312 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0144461s, 26312 KB] g=2, 6 evaluated, 5 expanded
[t=0.0145194s, 26312 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0145282s, 26312 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.014536s, 26312 KB] g=2, 9 evaluated, 8 expanded
[t=0.0146134s, 26312 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0146223s, 26312 KB] g=4, 12 evaluated, 11 expanded
[t=0.0146525s, 26312 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.014661s, 26312 KB] g=4, 13 evaluated, 12 expanded
[t=0.0148154s, 26312 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0148241s, 26312 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.014832s, 26312 KB] g=6, 20 evaluated, 19 expanded
[t=0.0148831s, 26312 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0148916s, 26312 KB] g=7, 22 evaluated, 21 expanded
[t=0.0149226s, 26312 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.014931s, 26312 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0149389s, 26312 KB] g=8, 23 evaluated, 22 expanded
[t=0.0150137s, 26312 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0150233s, 26312 KB] g=10, 26 evaluated, 25 expanded
[t=0.0151988s, 26312 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.015208s, 26312 KB] g=13, 33 evaluated, 32 expanded
[t=0.0155026s, 26312 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0155176s, 26312 KB] g=16, 43 evaluated, 42 expanded
[t=0.0158058s, 26312 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0158165s, 26312 KB] g=18, 56 evaluated, 55 expanded
[t=0.0160834s, 26312 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0160987s, 26312 KB] g=20, 67 evaluated, 66 expanded
[t=0.0164726s, 26312 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0164855s, 26312 KB] g=22, 84 evaluated, 83 expanded
[t=0.0167172s, 26312 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0167348s, 26312 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0167439s, 26312 KB] g=24, 95 evaluated, 94 expanded
[t=0.01712s, 26312 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.017133s, 26312 KB] g=28, 113 evaluated, 112 expanded
[t=0.0172902s, 26312 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0172994s, 26312 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0173078s, 26312 KB] g=30, 120 evaluated, 119 expanded
[t=0.018669s, 26312 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0186908s, 26312 KB] g=30, 186 evaluated, 185 expanded
[t=0.0188801s, 26312 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0188918s, 26312 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0189s, 26312 KB] g=32, 194 evaluated, 193 expanded
[t=0.0190823s, 26312 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0190939s, 26312 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0191023s, 26312 KB] g=34, 202 evaluated, 201 expanded
[t=0.0196798s, 26312 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0196925s, 26312 KB] g=38, 228 evaluated, 227 expanded
[t=0.0199076s, 26312 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0199298s, 26312 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0199408s, 26312 KB] g=40, 235 evaluated, 234 expanded
[t=0.020307s, 26312 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0203182s, 26312 KB] g=44, 251 evaluated, 250 expanded
[t=0.020513s, 26312 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0205232s, 26312 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.020532s, 26312 KB] g=46, 259 evaluated, 258 expanded
[t=0.0206964s, 26312 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.020706s, 26312 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0207142s, 26312 KB] g=48, 266 evaluated, 265 expanded
[t=0.020873s, 26312 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0208825s, 26312 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0209028s, 26312 KB] g=50, 273 evaluated, 272 expanded
[t=0.0212085s, 26312 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0212186s, 26312 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0212268s, 26312 KB] g=54, 287 evaluated, 286 expanded
[t=0.0213633s, 26312 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0213741s, 26312 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0213823s, 26312 KB] g=56, 293 evaluated, 292 expanded
[t=0.0218162s, 26312 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0218382s, 26312 KB] g=61, 313 evaluated, 312 expanded
[t=0.0218721s, 26312 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0218826s, 26312 KB] g=62, 314 evaluated, 313 expanded
[t=0.0220173s, 26312 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0220298s, 26312 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0220402s, 26312 KB] g=64, 320 evaluated, 319 expanded
[t=0.0221344s, 26312 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0221454s, 26312 KB] g=64, 324 evaluated, 323 expanded
[t=0.0222538s, 26312 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0222681s, 26312 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.022277s, 26312 KB] g=66, 329 evaluated, 328 expanded
[t=0.0224493s, 26312 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0224643s, 26312 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0224737s, 26312 KB] g=70, 337 evaluated, 336 expanded
[t=0.0225629s, 26312 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0225757s, 26312 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0225846s, 26312 KB] g=72, 341 evaluated, 340 expanded
[t=0.023026s, 26312 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.023039s, 26312 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0230483s, 26312 KB] g=80, 363 evaluated, 362 expanded
[t=0.0230935s, 26312 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0231026s, 26312 KB] g=80, 365 evaluated, 364 expanded
[t=0.0231654s, 26312 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0231744s, 26312 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0231822s, 26312 KB] g=82, 368 evaluated, 367 expanded
[t=0.0236458s, 26312 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0236557s, 26312 KB] g=96, 396 evaluated, 395 expanded
[t=0.023703s, 26312 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0237119s, 26312 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.02372s, 26312 KB] g=98, 399 evaluated, 398 expanded
[t=0.0237723s, 26312 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0237815s, 26312 KB] g=102, 403 evaluated, 402 expanded
[t=0.0237977s, 26312 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0238065s, 26312 KB] g=103, 404 evaluated, 403 expanded
[t=0.0238205s, 26312 KB] Solution found!
[t=0.0238328s, 26312 KB] Actual search time: 0.00960647s
unstack b7 b4 (1)
stack b7 b18 (1)
unstack b4 b14 (1)
put-down b4 (1)
unstack b14 b16 (1)
put-down b14 (1)
unstack b16 b15 (1)
stack b16 b1 (1)
unstack b15 b8 (1)
put-down b15 (1)
unstack b16 b1 (1)
put-down b16 (1)
unstack b1 b5 (1)
put-down b1 (1)
unstack b5 b10 (1)
put-down b5 (1)
unstack b10 b9 (1)
put-down b10 (1)
unstack b9 b13 (1)
put-down b9 (1)
pick-up b16 (1)
stack b16 b1 (1)
pick-up b5 (1)
stack b5 b9 (1)
unstack b7 b18 (1)
put-down b7 (1)
unstack b18 b20 (1)
stack b18 b15 (1)
unstack b20 b12 (1)
stack b20 b5 (1)
unstack b12 b11 (1)
stack b12 b10 (1)
pick-up b7 (1)
stack b7 b18 (1)
unstack b8 b17 (1)
put-down b8 (1)
pick-up b17 (1)
stack b17 b7 (1)
pick-up b8 (1)
stack b8 b17 (1)
unstack b11 b3 (1)
put-down b11 (1)
unstack b3 b6 (1)
put-down b3 (1)
pick-up b11 (1)
stack b11 b3 (1)
unstack b6 b2 (1)
stack b6 b14 (1)
pick-up b13 (1)
stack b13 b2 (1)
unstack b12 b10 (1)
put-down b12 (1)
pick-up b10 (1)
stack b10 b11 (1)
pick-up b12 (1)
stack b12 b10 (1)
unstack b13 b2 (1)
put-down b13 (1)
unstack b2 b19 (1)
put-down b2 (1)
pick-up b19 (1)
stack b19 b4 (1)
pick-up b2 (1)
stack b2 b19 (1)
pick-up b13 (1)
stack b13 b2 (1)
unstack b16 b1 (1)
put-down b16 (1)
pick-up b1 (1)
stack b1 b12 (1)
pick-up b16 (1)
stack b16 b1 (1)
unstack b20 b5 (1)
put-down b20 (1)
unstack b5 b9 (1)
put-down b5 (1)
pick-up b9 (1)
stack b9 b6 (1)
pick-up b5 (1)
stack b5 b9 (1)
pick-up b20 (1)
stack b20 b5 (1)
unstack b8 b17 (1)
put-down b8 (1)
unstack b17 b7 (1)
put-down b17 (1)
pick-up b8 (1)
stack b8 b17 (1)
unstack b7 b18 (1)
put-down b7 (1)
unstack b18 b15 (1)
put-down b18 (1)
pick-up b15 (1)
stack b15 b20 (1)
pick-up b18 (1)
stack b18 b15 (1)
pick-up b7 (1)
stack b7 b18 (1)
unstack b8 b17 (1)
put-down b8 (1)
pick-up b17 (1)
stack b17 b7 (1)
pick-up b8 (1)
stack b8 b17 (1)
[t=0.0238501s, 26312 KB] Plan length: 104 step(s).
[t=0.0238501s, 26312 KB] Plan cost: 104
[t=0.0238501s, 26312 KB] Expanded 404 state(s).
[t=0.0238501s, 26312 KB] Reopened 0 state(s).
[t=0.0238501s, 26312 KB] Evaluated 405 state(s).
[t=0.0238501s, 26312 KB] Evaluations: 810
[t=0.0238501s, 26312 KB] Generated 3439 state(s).
[t=0.0238501s, 26312 KB] Dead ends: 0 state(s).
[t=0.0238501s, 26312 KB] Number of registered states: 405
[t=0.0238501s, 26312 KB] Int hash set load factor: 405/512 = 0.791016
[t=0.0238501s, 26312 KB] Int hash set resizes: 9
[t=0.0238501s, 26312 KB] Search time: 0.00965853s
[t=0.0238501s, 26312 KB] Total time: 0.0238501s
Solution found.
Peak memory: 26312 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.14s
