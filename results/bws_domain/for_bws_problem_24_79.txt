INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_24/bws_problem_24_79.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.013s wall-clock]
1898 relevant atoms
1272 auxiliary atoms
3170 final queue length
5526 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
25 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.007s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.029s wall-clock]
1704 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
48 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.022s wall-clock]
Reordering and filtering variables...
49 of 49 variables necessary.
25 of 49 mutex groups necessary.
1152 of 1152 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.008s wall-clock]
Translator variables: 49
Translator derived variables: 0
Translator facts: 650
Translator goal facts: 18
Translator mutex groups: 25
Translator total mutex groups size: 625
Translator operators: 1152
Translator axioms: 0
Translator task size: 9910
Translator peak memory: 37880 KB
Writing output... [0.010s CPU, 0.006s wall-clock]
Done! [0.110s CPU, 0.111s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=4.5985e-05s, 24488 KB] reading input...
[t=0.00388079s, 25532 KB] done reading input!
[t=0.00474024s, 25928 KB] Initializing landmark count heuristic...
[t=0.00477529s, 25928 KB] Generating landmark graph...
[t=0.00484327s, 25928 KB] Building a landmark graph with reasonable orders.
[t=0.00492528s, 26060 KB] Initializing Exploration...
[t=0.00528369s, 26388 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0183539s, 26784 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0184341s, 26784 KB] Landmarks generation time: 0.0135927s
[t=0.0184498s, 26784 KB] Discovered 98 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0184664s, 26784 KB] 412 edges
[t=0.0184769s, 26784 KB] approx. reasonable orders
[t=0.0207109s, 26784 KB] approx. obedient reasonable orders
[t=0.0207405s, 26784 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0207496s, 26784 KB] Landmarks generation time: 0.0159723s
[t=0.0207592s, 26784 KB] Discovered 98 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0207669s, 26784 KB] 448 edges
[t=0.0207751s, 26784 KB] Landmark graph generation time: 0.0160065s
[t=0.0207834s, 26784 KB] Landmark graph contains 98 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0207907s, 26784 KB] Landmark graph contains 448 orderings.
[t=0.0211449s, 26784 KB] Simplifying 4560 unary operators... done! [3456 unary operators]
[t=0.0222685s, 26916 KB] time to simplify: 0.00123673s
[t=0.0224687s, 26916 KB] Initializing additive heuristic...
[t=0.0224923s, 26916 KB] Initializing FF heuristic...
[t=0.0225677s, 26916 KB] Building successor generator...done!
[t=0.0228482s, 26916 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0228599s, 26916 KB] time for successor generation creation: 0.000224498s
[t=0.0228847s, 26916 KB] Variables: 49
[t=0.0228937s, 26916 KB] FactPairs: 650
[t=0.0229024s, 26916 KB] Bytes per state: 20
[t=0.0231401s, 26916 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0231871s, 26916 KB] 47 initial landmarks, 18 goal landmarks
[t=0.0232626s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0232742s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0232845s, 26916 KB] g=0, 1 evaluated, 0 expanded
[t=0.0233021s, 26916 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0233106s, 26916 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0234402s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0234577s, 26916 KB] g=1, 5 evaluated, 4 expanded
[t=0.0237638s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0237745s, 26916 KB] g=3, 16 evaluated, 15 expanded
[t=0.0240246s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0240365s, 26916 KB] g=6, 25 evaluated, 24 expanded
[t=0.0242031s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0242153s, 26916 KB] g=4, 30 evaluated, 29 expanded
[t=0.0245194s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0245334s, 26916 KB] g=8, 41 evaluated, 40 expanded
[t=0.0246239s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0246332s, 26916 KB] g=6, 44 evaluated, 43 expanded
[t=0.0249655s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0249805s, 26916 KB] g=10, 56 evaluated, 55 expanded
[t=0.0251847s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0251972s, 26916 KB] g=10, 62 evaluated, 61 expanded
[t=0.0254087s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0254209s, 26916 KB] g=11, 69 evaluated, 68 expanded
[t=0.0259638s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0259761s, 26916 KB] g=14, 89 evaluated, 88 expanded
[t=0.0266172s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.026653s, 26916 KB] g=16, 113 evaluated, 112 expanded
[t=0.0271556s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0271681s, 26916 KB] g=16, 131 evaluated, 130 expanded
[t=0.0272212s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0272306s, 26916 KB] g=18, 132 evaluated, 131 expanded
[t=0.0275005s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0275107s, 26916 KB] g=18, 142 evaluated, 141 expanded
[t=0.0278046s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0278153s, 26916 KB] g=20, 153 evaluated, 152 expanded
[t=0.029549s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0295811s, 26916 KB] g=26, 215 evaluated, 214 expanded
[t=0.0308394s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0308527s, 26916 KB] g=23, 259 evaluated, 258 expanded
[t=0.0315637s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.031577s, 26916 KB] g=26, 283 evaluated, 282 expanded
[t=0.0322327s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0322481s, 26916 KB] g=28, 304 evaluated, 303 expanded
[t=0.0328935s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0329051s, 26916 KB] g=30, 326 evaluated, 325 expanded
[t=0.0332401s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0332498s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0332576s, 26916 KB] g=32, 338 evaluated, 337 expanded
[t=0.0336196s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0336294s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0336404s, 26916 KB] g=34, 351 evaluated, 350 expanded
[t=0.0339792s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0339888s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0339964s, 26916 KB] g=36, 363 evaluated, 362 expanded
[t=0.0343351s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0343492s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0343574s, 26916 KB] g=38, 374 evaluated, 373 expanded
[t=0.0346397s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0346504s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0346612s, 26916 KB] g=40, 384 evaluated, 383 expanded
[t=0.0349073s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0349162s, 26916 KB] g=42, 393 evaluated, 392 expanded
[t=0.0350155s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0350262s, 26916 KB] g=42, 396 evaluated, 395 expanded
[t=0.0353445s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0353543s, 26916 KB] g=44, 407 evaluated, 406 expanded
[t=0.0354449s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0354541s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0354688s, 26916 KB] g=44, 410 evaluated, 409 expanded
[t=0.0356678s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0356774s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0356858s, 26916 KB] g=46, 417 evaluated, 416 expanded
[t=0.0358576s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0358665s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0358747s, 26916 KB] g=48, 423 evaluated, 422 expanded
[t=0.0363007s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0363124s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0363212s, 26916 KB] g=52, 437 evaluated, 436 expanded
[t=0.0364656s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0364748s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0364827s, 26916 KB] g=54, 442 evaluated, 441 expanded
[t=0.0371989s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0372089s, 26916 KB] g=63, 469 evaluated, 468 expanded
[t=0.0372463s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0372555s, 26916 KB] g=64, 470 evaluated, 469 expanded
[t=0.0374051s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0374138s, 26916 KB] g=66, 476 evaluated, 475 expanded
[t=0.0374744s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0374832s, 26916 KB] g=66, 478 evaluated, 477 expanded
[t=0.0376663s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.037675s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0376828s, 26916 KB] g=68, 485 evaluated, 484 expanded
[t=0.0377923s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.037801s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0378088s, 26916 KB] g=70, 489 evaluated, 488 expanded
[t=0.0378435s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.037852s, 26916 KB] g=71, 490 evaluated, 489 expanded
[t=0.0378866s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.037895s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0379029s, 26916 KB] g=72, 491 evaluated, 490 expanded
[t=0.0380094s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0380178s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0380256s, 26916 KB] g=74, 495 evaluated, 494 expanded
[t=0.0382371s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0382457s, 26916 KB] g=78, 504 evaluated, 503 expanded
[t=0.0383224s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0383307s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0383383s, 26916 KB] g=80, 507 evaluated, 506 expanded
[t=0.0386647s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0386763s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0386874s, 26916 KB] g=92, 523 evaluated, 522 expanded
[t=0.03876s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0387686s, 26916 KB] g=96, 527 evaluated, 526 expanded
[t=0.0387861s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0387943s, 26916 KB] g=97, 528 evaluated, 527 expanded
[t=0.0388089s, 26916 KB] Solution found!
[t=0.0388195s, 26916 KB] Actual search time: 0.0156306s
unstack b11 b23 (1)
put-down b11 (1)
unstack b9 b21 (1)
put-down b9 (1)
unstack b2 b14 (1)
put-down b2 (1)
unstack b21 b12 (1)
put-down b21 (1)
unstack b12 b5 (1)
put-down b12 (1)
unstack b5 b17 (1)
put-down b5 (1)
unstack b23 b24 (1)
put-down b23 (1)
pick-up b9 (1)
stack b9 b12 (1)
unstack b14 b15 (1)
put-down b14 (1)
unstack b17 b4 (1)
put-down b17 (1)
unstack b4 b22 (1)
put-down b4 (1)
unstack b22 b7 (1)
put-down b22 (1)
unstack b7 b6 (1)
stack b7 b17 (1)
unstack b6 b20 (1)
put-down b6 (1)
unstack b20 b18 (1)
stack b20 b8 (1)
unstack b18 b13 (1)
put-down b18 (1)
pick-up b11 (1)
stack b11 b18 (1)
unstack b13 b19 (1)
stack b13 b14 (1)
pick-up b2 (1)
stack b2 b13 (1)
pick-up b21 (1)
stack b21 b11 (1)
pick-up b5 (1)
stack b5 b20 (1)
pick-up b23 (1)
stack b23 b2 (1)
pick-up b24 (1)
stack b24 b23 (1)
pick-up b4 (1)
stack b4 b22 (1)
unstack b9 b12 (1)
put-down b9 (1)
pick-up b12 (1)
stack b12 b7 (1)
pick-up b9 (1)
stack b9 b12 (1)
unstack b5 b20 (1)
put-down b5 (1)
unstack b20 b8 (1)
put-down b20 (1)
pick-up b5 (1)
stack b5 b20 (1)
unstack b8 b3 (1)
put-down b8 (1)
unstack b3 b16 (1)
stack b3 b21 (1)
unstack b16 b10 (1)
stack b16 b4 (1)
pick-up b15 (1)
stack b15 b16 (1)
unstack b10 b1 (1)
put-down b10 (1)
pick-up b1 (1)
stack b1 b6 (1)
pick-up b8 (1)
stack b8 b3 (1)
unstack b5 b20 (1)
put-down b5 (1)
pick-up b20 (1)
stack b20 b8 (1)
pick-up b5 (1)
stack b5 b20 (1)
unstack b15 b16 (1)
put-down b15 (1)
unstack b16 b4 (1)
put-down b16 (1)
pick-up b15 (1)
stack b15 b16 (1)
unstack b4 b22 (1)
put-down b4 (1)
pick-up b22 (1)
stack b22 b10 (1)
pick-up b4 (1)
stack b4 b22 (1)
unstack b15 b16 (1)
put-down b15 (1)
pick-up b16 (1)
stack b16 b4 (1)
pick-up b15 (1)
stack b15 b16 (1)
[t=0.038832s, 26916 KB] Plan length: 98 step(s).
[t=0.038832s, 26916 KB] Plan cost: 98
[t=0.038832s, 26916 KB] Expanded 528 state(s).
[t=0.038832s, 26916 KB] Reopened 0 state(s).
[t=0.038832s, 26916 KB] Evaluated 529 state(s).
[t=0.038832s, 26916 KB] Evaluations: 1058
[t=0.038832s, 26916 KB] Generated 5457 state(s).
[t=0.038832s, 26916 KB] Dead ends: 0 state(s).
[t=0.038832s, 26916 KB] Number of registered states: 529
[t=0.038832s, 26916 KB] Int hash set load factor: 529/1024 = 0.516602
[t=0.038832s, 26916 KB] Int hash set resizes: 10
[t=0.038832s, 26916 KB] Search time: 0.0156931s
[t=0.038832s, 26916 KB] Total time: 0.038832s
Solution found.
Peak memory: 26916 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.20s
