INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_25/bws_problem_25_7.pddl --sas-file output.sas
Parsing...
Parsing: [0.010s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
2052 relevant atoms
1375 auxiliary atoms
3427 final queue length
5983 total queue pushes
Completing instantiation... [0.030s CPU, 0.030s wall-clock]
Instantiating: [0.040s CPU, 0.045s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.004s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.010s CPU, 0.002s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
26 uncovered facts
Choosing groups: [0.000s CPU, 0.002s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.010s CPU, 0.013s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.001s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.001s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.001s wall-clock]
Translating task: [0.040s CPU, 0.038s wall-clock]
1850 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
50 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.021s wall-clock]
Reordering and filtering variables...
51 of 51 variables necessary.
26 of 51 mutex groups necessary.
1250 of 1250 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.009s wall-clock]
Translator variables: 51
Translator derived variables: 0
Translator facts: 702
Translator goal facts: 22
Translator mutex groups: 26
Translator total mutex groups size: 676
Translator operators: 1250
Translator axioms: 0
Translator task size: 10751
Translator peak memory: 38384 KB
Writing output... [0.010s CPU, 0.009s wall-clock]
Done! [0.140s CPU, 0.141s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.0384e-05s, 24488 KB] reading input...
[t=0.00368011s, 25632 KB] done reading input!
[t=0.00466945s, 26028 KB] Initializing landmark count heuristic...
[t=0.00470525s, 26028 KB] Generating landmark graph...
[t=0.00477874s, 26160 KB] Building a landmark graph with reasonable orders.
[t=0.00484938s, 26160 KB] Initializing Exploration...
[t=0.00519674s, 26532 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0197999s, 27060 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0198807s, 27060 KB] Landmarks generation time: 0.0151017s
[t=0.0198948s, 27060 KB] Discovered 111 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0199083s, 27060 KB] 390 edges
[t=0.0199188s, 27060 KB] approx. reasonable orders
[t=0.019928s, 27060 KB] approx. obedient reasonable orders
[t=0.0199575s, 27060 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0199727s, 27060 KB] Landmarks generation time: 0.015265s
[t=0.0199833s, 27060 KB] Discovered 111 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0199917s, 27060 KB] 390 edges
[t=0.0199999s, 27060 KB] Landmark graph generation time: 0.0153021s
[t=0.0200089s, 27060 KB] Landmark graph contains 111 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.020017s, 27060 KB] Landmark graph contains 390 orderings.
[t=0.0205029s, 27060 KB] Simplifying 4950 unary operators... done! [3750 unary operators]
[t=0.0217972s, 27060 KB] time to simplify: 0.00138683s
[t=0.0219656s, 27060 KB] Initializing additive heuristic...
[t=0.0219833s, 27060 KB] Initializing FF heuristic...
[t=0.0220504s, 27060 KB] Building successor generator...done!
[t=0.0222845s, 27060 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0222947s, 27060 KB] time for successor generation creation: 0.000198241s
[t=0.0223091s, 27060 KB] Variables: 51
[t=0.0223185s, 27060 KB] FactPairs: 702
[t=0.0223267s, 27060 KB] Bytes per state: 20
[t=0.0224699s, 27060 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0225312s, 27060 KB] 50 initial landmarks, 22 goal landmarks
[t=0.022608s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 61
[t=0.022619s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0226279s, 27060 KB] g=0, 1 evaluated, 0 expanded
[t=0.0226454s, 27060 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 61
[t=0.0226545s, 27060 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0228645s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 60
[t=0.0228747s, 27060 KB] g=1, 7 evaluated, 6 expanded
[t=0.0229177s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.0229263s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.0229347s, 27060 KB] g=2, 8 evaluated, 7 expanded
[t=0.023137s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 58
[t=0.0231466s, 27060 KB] g=4, 14 evaluated, 13 expanded
[t=0.0231898s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 57
[t=0.0231988s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.023207s, 27060 KB] g=4, 15 evaluated, 14 expanded
[t=0.0234024s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0234114s, 27060 KB] g=6, 21 evaluated, 20 expanded
[t=0.0234585s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0234697s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0234778s, 27060 KB] g=6, 22 evaluated, 21 expanded
[t=0.0236666s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0236784s, 27060 KB] g=8, 27 evaluated, 26 expanded
[t=0.0242505s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0242608s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0242694s, 27060 KB] g=10, 45 evaluated, 44 expanded
[t=0.0244656s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0244752s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0244834s, 27060 KB] g=12, 51 evaluated, 50 expanded
[t=0.0246733s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0246827s, 27060 KB] g=14, 57 evaluated, 56 expanded
[t=0.025165s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.025189s, 27060 KB] g=17, 72 evaluated, 71 expanded
[t=0.0252631s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0252766s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0252867s, 27060 KB] g=18, 73 evaluated, 72 expanded
[t=0.0255686s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0255799s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0255887s, 27060 KB] g=20, 81 evaluated, 80 expanded
[t=0.0257949s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0258043s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0258127s, 27060 KB] g=22, 87 evaluated, 86 expanded
[t=0.0262586s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0262693s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0262776s, 27060 KB] g=26, 101 evaluated, 100 expanded
[t=0.0264687s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0264776s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0264856s, 27060 KB] g=28, 107 evaluated, 106 expanded
[t=0.0273632s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0273734s, 27060 KB] g=35, 135 evaluated, 134 expanded
[t=0.0277948s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0278217s, 27060 KB] g=38, 147 evaluated, 146 expanded
[t=0.0282094s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0282223s, 27060 KB] g=40, 159 evaluated, 158 expanded
[t=0.0286334s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0286436s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0286548s, 27060 KB] g=42, 172 evaluated, 171 expanded
[t=0.028964s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0289741s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0289822s, 27060 KB] g=44, 182 evaluated, 181 expanded
[t=0.0292305s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0292396s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0292479s, 27060 KB] g=46, 190 evaluated, 189 expanded
[t=0.0294672s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0294762s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0294846s, 27060 KB] g=48, 197 evaluated, 196 expanded
[t=0.0299951s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0300125s, 27060 KB] g=52, 213 evaluated, 212 expanded
[t=0.030206s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0302157s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.030224s, 27060 KB] g=54, 219 evaluated, 218 expanded
[t=0.0309164s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0309267s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0309347s, 27060 KB] g=60, 241 evaluated, 240 expanded
[t=0.0314208s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0314324s, 27060 KB] g=66, 256 evaluated, 255 expanded
[t=0.0316804s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0316911s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0317005s, 27060 KB] g=68, 263 evaluated, 262 expanded
[t=0.0319219s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0319314s, 27060 KB] g=70, 270 evaluated, 269 expanded
[t=0.031973s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0319821s, 27060 KB] g=70, 271 evaluated, 270 expanded
[t=0.0322936s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0323036s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0323189s, 27060 KB] g=72, 281 evaluated, 280 expanded
[t=0.0324826s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0324922s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0325005s, 27060 KB] g=74, 286 evaluated, 285 expanded
[t=0.0327484s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0327574s, 27060 KB] g=77, 294 evaluated, 293 expanded
[t=0.0330188s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0330276s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0330356s, 27060 KB] g=80, 303 evaluated, 302 expanded
[t=0.0331274s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.033136s, 27060 KB] g=81, 306 evaluated, 305 expanded
[t=0.0331737s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0331825s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0331906s, 27060 KB] g=82, 307 evaluated, 306 expanded
[t=0.0333567s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0333657s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0333766s, 27060 KB] g=84, 312 evaluated, 311 expanded
[t=0.0335246s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0335332s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0335415s, 27060 KB] g=86, 317 evaluated, 316 expanded
[t=0.0336319s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0336435s, 27060 KB] g=87, 320 evaluated, 319 expanded
[t=0.0336789s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0336877s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0336956s, 27060 KB] g=88, 321 evaluated, 320 expanded
[t=0.0337808s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0337893s, 27060 KB] g=89, 324 evaluated, 323 expanded
[t=0.0338253s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.033834s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.033842s, 27060 KB] g=90, 325 evaluated, 324 expanded
[t=0.03398s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0339885s, 27060 KB] g=94, 330 evaluated, 329 expanded
[t=0.0340817s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0340905s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.034099s, 27060 KB] g=96, 333 evaluated, 332 expanded
[t=0.0357532s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0357714s, 27060 KB] g=118, 408 evaluated, 407 expanded
[t=0.0359414s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0359505s, 27060 KB] g=122, 417 evaluated, 416 expanded
[t=0.0360109s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0360196s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0360276s, 27060 KB] g=124, 420 evaluated, 419 expanded
[t=0.0361946s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0362033s, 27060 KB] g=132, 431 evaluated, 430 expanded
[t=0.0362209s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0362293s, 27060 KB] g=133, 432 evaluated, 431 expanded
[t=0.0362443s, 27060 KB] Solution found!
[t=0.0362552s, 27060 KB] Actual search time: 0.0137114s
unstack b8 b3 (1)
stack b8 b4 (1)
unstack b16 b17 (1)
stack b16 b5 (1)
pick-up b17 (1)
stack b17 b16 (1)
unstack b12 b7 (1)
put-down b12 (1)
unstack b18 b23 (1)
stack b18 b7 (1)
unstack b23 b19 (1)
put-down b23 (1)
unstack b3 b1 (1)
put-down b3 (1)
unstack b8 b4 (1)
put-down b8 (1)
unstack b4 b15 (1)
stack b4 b23 (1)
pick-up b15 (1)
stack b15 b18 (1)
pick-up b8 (1)
stack b8 b4 (1)
unstack b1 b22 (1)
put-down b1 (1)
pick-up b22 (1)
stack b22 b19 (1)
pick-up b1 (1)
stack b1 b22 (1)
unstack b15 b18 (1)
put-down b15 (1)
unstack b18 b7 (1)
put-down b18 (1)
unstack b7 b9 (1)
put-down b7 (1)
unstack b9 b6 (1)
put-down b9 (1)
unstack b6 b11 (1)
put-down b6 (1)
unstack b11 b14 (1)
put-down b11 (1)
unstack b14 b13 (1)
stack b14 b6 (1)
pick-up b7 (1)
stack b7 b13 (1)
pick-up b15 (1)
stack b15 b18 (1)
pick-up b3 (1)
stack b3 b14 (1)
unstack b7 b13 (1)
put-down b7 (1)
pick-up b13 (1)
stack b13 b11 (1)
pick-up b7 (1)
stack b7 b13 (1)
unstack b15 b18 (1)
put-down b15 (1)
pick-up b18 (1)
stack b18 b7 (1)
pick-up b15 (1)
stack b15 b18 (1)
unstack b17 b16 (1)
put-down b17 (1)
unstack b16 b5 (1)
put-down b16 (1)
unstack b5 b10 (1)
stack b5 b1 (1)
unstack b10 b25 (1)
stack b10 b3 (1)
pick-up b12 (1)
stack b12 b25 (1)
pick-up b16 (1)
stack b16 b5 (1)
pick-up b17 (1)
stack b17 b16 (1)
unstack b12 b25 (1)
put-down b12 (1)
unstack b25 b2 (1)
put-down b25 (1)
unstack b2 b20 (1)
stack b2 b17 (1)
unstack b20 b21 (1)
stack b20 b12 (1)
unstack b21 b24 (1)
stack b21 b15 (1)
pick-up b24 (1)
stack b24 b2 (1)
pick-up b25 (1)
stack b25 b24 (1)
pick-up b9 (1)
stack b9 b21 (1)
unstack b20 b12 (1)
put-down b20 (1)
pick-up b12 (1)
stack b12 b25 (1)
pick-up b20 (1)
stack b20 b12 (1)
unstack b9 b21 (1)
put-down b9 (1)
unstack b21 b15 (1)
put-down b21 (1)
unstack b15 b18 (1)
put-down b15 (1)
pick-up b21 (1)
stack b21 b15 (1)
pick-up b9 (1)
stack b9 b21 (1)
unstack b18 b7 (1)
put-down b18 (1)
unstack b7 b13 (1)
put-down b7 (1)
pick-up b18 (1)
stack b18 b7 (1)
unstack b13 b11 (1)
put-down b13 (1)
pick-up b11 (1)
stack b11 b10 (1)
pick-up b13 (1)
stack b13 b11 (1)
unstack b18 b7 (1)
put-down b18 (1)
pick-up b7 (1)
stack b7 b13 (1)
pick-up b18 (1)
stack b18 b7 (1)
unstack b9 b21 (1)
put-down b9 (1)
unstack b21 b15 (1)
put-down b21 (1)
pick-up b15 (1)
stack b15 b18 (1)
pick-up b21 (1)
stack b21 b15 (1)
pick-up b9 (1)
stack b9 b21 (1)
[t=0.0362643s, 27060 KB] Plan length: 134 step(s).
[t=0.0362643s, 27060 KB] Plan cost: 134
[t=0.0362643s, 27060 KB] Expanded 432 state(s).
[t=0.0362643s, 27060 KB] Reopened 0 state(s).
[t=0.0362643s, 27060 KB] Evaluated 433 state(s).
[t=0.0362643s, 27060 KB] Evaluations: 866
[t=0.0362643s, 27060 KB] Generated 3494 state(s).
[t=0.0362643s, 27060 KB] Dead ends: 0 state(s).
[t=0.0362643s, 27060 KB] Number of registered states: 433
[t=0.0362643s, 27060 KB] Int hash set load factor: 433/512 = 0.845703
[t=0.0362643s, 27060 KB] Int hash set resizes: 9
[t=0.0362643s, 27060 KB] Search time: 0.0137959s
[t=0.0362643s, 27060 KB] Total time: 0.0362643s
Solution found.
Peak memory: 27060 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.23s
