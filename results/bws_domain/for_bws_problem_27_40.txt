INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_27/bws_problem_27_40.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.000s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.015s wall-clock]
2378 relevant atoms
1593 auxiliary atoms
3971 final queue length
6947 total queue pushes
Completing instantiation... [0.020s CPU, 0.025s wall-clock]
Instantiating: [0.050s CPU, 0.042s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.002s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
28 uncovered facts
Choosing groups: [0.000s CPU, 0.002s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.009s wall-clock]
Building STRIPS to SAS dictionary... [0.010s CPU, 0.001s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.002s wall-clock]
Translating task: [0.040s CPU, 0.043s wall-clock]
2160 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
54 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.019s wall-clock]
Reordering and filtering variables...
55 of 55 variables necessary.
28 of 55 mutex groups necessary.
1458 of 1458 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.009s wall-clock]
Translator variables: 55
Translator derived variables: 0
Translator facts: 812
Translator goal facts: 23
Translator mutex groups: 28
Translator total mutex groups size: 784
Translator operators: 1458
Translator axioms: 0
Translator task size: 12528
Translator peak memory: 39796 KB
Writing output... [0.000s CPU, 0.008s wall-clock]
Done! [0.130s CPU, 0.136s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.0424e-05s, 24488 KB] reading input...
[t=0.00454259s, 25936 KB] done reading input!
[t=0.00581111s, 26332 KB] Initializing landmark count heuristic...
[t=0.00584705s, 26332 KB] Generating landmark graph...
[t=0.00592588s, 26332 KB] Building a landmark graph with reasonable orders.
[t=0.00600106s, 26464 KB] Initializing Exploration...
[t=0.00640832s, 26732 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0251926s, 27392 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0252662s, 27392 KB] Landmarks generation time: 0.0193486s
[t=0.0252873s, 27392 KB] Discovered 120 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0253029s, 27392 KB] 483 edges
[t=0.0253129s, 27392 KB] approx. reasonable orders
[t=0.030975s, 27392 KB] approx. obedient reasonable orders
[t=0.0313588s, 27392 KB] Removed 1 reasonable or obedient reasonable orders
[t=0.0313843s, 27392 KB] Landmarks generation time: 0.0255364s
[t=0.0313956s, 27392 KB] Discovered 120 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0314042s, 27392 KB] 575 edges
[t=0.0314134s, 27392 KB] Landmark graph generation time: 0.0255735s
[t=0.0314222s, 27392 KB] Landmark graph contains 120 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0314304s, 27392 KB] Landmark graph contains 575 orderings.
[t=0.0319595s, 27456 KB] Simplifying 5778 unary operators... done! [4374 unary operators]
[t=0.0333962s, 27588 KB] time to simplify: 0.00157319s
[t=0.0336587s, 27588 KB] Initializing additive heuristic...
[t=0.0336922s, 27588 KB] Initializing FF heuristic...
[t=0.033775s, 27588 KB] Building successor generator...done!
[t=0.0340674s, 27588 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0340783s, 27588 KB] time for successor generation creation: 0.000251394s
[t=0.0341036s, 27588 KB] Variables: 55
[t=0.0341124s, 27588 KB] FactPairs: 812
[t=0.034121s, 27588 KB] Bytes per state: 24
[t=0.0343409s, 27588 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0344015s, 27588 KB] 53 initial landmarks, 23 goal landmarks
[t=0.034515s, 27588 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 67
[t=0.0345273s, 27588 KB] New best heuristic value for ff(transform = adapt_costs(one)): 48
[t=0.0345358s, 27588 KB] g=0, 1 evaluated, 0 expanded
[t=0.0345558s, 27588 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 67
[t=0.0345648s, 27588 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 48
[t=0.0348062s, 27588 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 66
[t=0.0348191s, 27588 KB] g=1, 7 evaluated, 6 expanded
[t=0.0353982s, 27588 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 65
[t=0.0354127s, 27588 KB] g=3, 22 evaluated, 21 expanded
[t=0.0356062s, 27588 KB] New best heuristic value for ff(transform = adapt_costs(one)): 47
[t=0.0356157s, 27588 KB] g=4, 27 evaluated, 26 expanded
[t=0.0358357s, 27588 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 64
[t=0.035845s, 27588 KB] g=6, 33 evaluated, 32 expanded
[t=0.0363963s, 27588 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 63
[t=0.0364146s, 27588 KB] g=8, 48 evaluated, 47 expanded
[t=0.0370101s, 27588 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 62
[t=0.0370218s, 27588 KB] g=10, 65 evaluated, 64 expanded
[t=0.037717s, 27588 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 61
[t=0.0377278s, 27588 KB] g=12, 85 evaluated, 84 expanded
[t=0.0384015s, 27588 KB] New best heuristic value for ff(transform = adapt_costs(one)): 46
[t=0.0384192s, 27588 KB] g=8, 104 evaluated, 103 expanded
[t=0.0386173s, 27588 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 60
[t=0.03863s, 27588 KB] g=14, 109 evaluated, 108 expanded
[t=0.03901s, 27588 KB] New best heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0390233s, 27588 KB] g=10, 119 evaluated, 118 expanded
[t=0.039571s, 27588 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.0395911s, 27588 KB] g=16, 134 evaluated, 133 expanded
[t=0.03964s, 27588 KB] New best heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.0396497s, 27588 KB] g=12, 135 evaluated, 134 expanded
[t=0.040334s, 27588 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0403437s, 27588 KB] g=14, 155 evaluated, 154 expanded
[t=0.0405259s, 27588 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 58
[t=0.040535s, 27588 KB] g=18, 160 evaluated, 159 expanded
[t=0.0414105s, 27588 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 57
[t=0.0414272s, 27588 KB] g=20, 185 evaluated, 184 expanded
[t=0.0421606s, 27588 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0421707s, 27588 KB] g=18, 206 evaluated, 205 expanded
[t=0.0426351s, 27588 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0426558s, 27588 KB] g=20, 219 evaluated, 218 expanded
[t=0.0428519s, 27588 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0428622s, 27588 KB] g=22, 224 evaluated, 223 expanded
[t=0.0432734s, 27588 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0432884s, 27588 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0432969s, 27588 KB] g=22, 235 evaluated, 234 expanded
[t=0.04361s, 27588 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0436193s, 27588 KB] g=24, 244 evaluated, 243 expanded
[t=0.0437006s, 27588 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0437096s, 27588 KB] g=24, 246 evaluated, 245 expanded
[t=0.044733s, 27588 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0447428s, 27588 KB] g=26, 276 evaluated, 275 expanded
[t=0.0447882s, 27588 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.044797s, 27588 KB] g=28, 277 evaluated, 276 expanded
[t=0.0453725s, 27588 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0453821s, 27588 KB] g=30, 294 evaluated, 293 expanded
[t=0.0454632s, 27588 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0454729s, 27588 KB] g=28, 296 evaluated, 295 expanded
[t=0.0461671s, 27588 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0461845s, 27588 KB] g=30, 315 evaluated, 314 expanded
[t=0.0469688s, 27588 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0469812s, 27588 KB] g=32, 337 evaluated, 336 expanded
[t=0.0479729s, 27588 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.048002s, 27588 KB] g=34, 364 evaluated, 363 expanded
[t=0.0489968s, 27588 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.04901s, 27588 KB] g=36, 391 evaluated, 390 expanded
[t=0.0498427s, 27588 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0498549s, 27588 KB] g=38, 414 evaluated, 413 expanded
[t=0.050049s, 27588 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0500589s, 27588 KB] g=36, 419 evaluated, 418 expanded
[t=0.0507376s, 27588 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0507564s, 27588 KB] g=38, 437 evaluated, 436 expanded
[t=0.0509837s, 27588 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.050994s, 27588 KB] g=40, 443 evaluated, 442 expanded
[t=0.0513438s, 27588 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0513534s, 27588 KB] g=40, 453 evaluated, 452 expanded
[t=0.0518901s, 27588 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0518991s, 27588 KB] g=42, 469 evaluated, 468 expanded
[t=0.0521448s, 27588 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0521546s, 27588 KB] g=42, 476 evaluated, 475 expanded
[t=0.0524914s, 27588 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0525062s, 27588 KB] g=44, 485 evaluated, 484 expanded
[t=0.0530017s, 27588 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0530115s, 27588 KB] g=46, 499 evaluated, 498 expanded
[t=0.0533278s, 27588 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0533375s, 27588 KB] g=44, 508 evaluated, 507 expanded
[t=0.0545573s, 27588 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0545703s, 27588 KB] g=46, 542 evaluated, 541 expanded
[t=0.0549503s, 27588 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0549605s, 27588 KB] g=50, 553 evaluated, 552 expanded
[t=0.05542s, 27588 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0554423s, 27588 KB] g=52, 565 evaluated, 564 expanded
[t=0.055753s, 27588 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0557627s, 27588 KB] g=48, 574 evaluated, 573 expanded
[t=0.0561254s, 27588 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0561352s, 27588 KB] g=49, 585 evaluated, 584 expanded
[t=0.056982s, 27588 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0569937s, 27588 KB] g=56, 611 evaluated, 610 expanded
[t=0.05737s, 27588 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0573866s, 27588 KB] g=58, 622 evaluated, 621 expanded
[t=0.0585733s, 27588 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0585881s, 27588 KB] g=64, 658 evaluated, 657 expanded
[t=0.0589065s, 27588 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0589162s, 27588 KB] g=66, 668 evaluated, 667 expanded
[t=0.0591828s, 27588 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0591927s, 27588 KB] g=52, 676 evaluated, 675 expanded
[t=0.0592401s, 27588 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.059264s, 27588 KB] g=68, 677 evaluated, 676 expanded
[t=0.0595223s, 27588 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0595321s, 27588 KB] g=70, 685 evaluated, 684 expanded
[t=0.0607809s, 27588 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0608003s, 27588 KB] g=54, 726 evaluated, 725 expanded
[t=0.0609063s, 27588 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0609164s, 27588 KB] g=74, 729 evaluated, 728 expanded
[t=0.0610974s, 27588 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0611076s, 27588 KB] g=74, 735 evaluated, 734 expanded
[t=0.061288s, 27588 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0612972s, 27588 KB] g=76, 741 evaluated, 740 expanded
[t=0.061893s, 27588 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0619252s, 27588 KB] g=56, 762 evaluated, 761 expanded
[t=0.0630552s, 27588 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0630817s, 27588 KB] g=58, 804 evaluated, 803 expanded
[t=0.064042s, 27588 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0640563s, 27588 KB] g=60, 842 evaluated, 841 expanded
[t=0.0648579s, 27588 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0648808s, 27588 KB] g=62, 873 evaluated, 872 expanded
[t=0.0658139s, 27588 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0658293s, 27588 KB] g=64, 910 evaluated, 909 expanded
[t=0.0661643s, 27588 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0661757s, 27588 KB] g=98, 924 evaluated, 923 expanded
[t=0.0665661s, 27588 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0665764s, 27588 KB] g=66, 941 evaluated, 940 expanded
[t=0.0666096s, 27588 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0666187s, 27588 KB] g=102, 942 evaluated, 941 expanded
[t=0.0667837s, 27588 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.066802s, 27588 KB] g=104, 948 evaluated, 947 expanded
[t=0.0672346s, 27588 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.067254s, 27588 KB] g=112, 969 evaluated, 968 expanded
[t=0.0673004s, 27588 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0673108s, 27588 KB] g=113, 971 evaluated, 970 expanded
[t=0.0673314s, 27588 KB] Solution found!
[t=0.0673481s, 27588 KB] Actual search time: 0.0329414s
unstack b5 b22 (1)
put-down b5 (1)
unstack b22 b7 (1)
put-down b22 (1)
unstack b11 b20 (1)
put-down b11 (1)
unstack b20 b12 (1)
stack b20 b11 (1)
unstack b12 b26 (1)
stack b12 b20 (1)
unstack b14 b9 (1)
stack b14 b26 (1)
unstack b9 b6 (1)
stack b9 b2 (1)
unstack b13 b10 (1)
put-down b13 (1)
unstack b10 b15 (1)
stack b10 b9 (1)
unstack b15 b23 (1)
stack b15 b7 (1)
unstack b19 b8 (1)
stack b19 b10 (1)
pick-up b5 (1)
stack b5 b8 (1)
unstack b23 b1 (1)
put-down b23 (1)
unstack b1 b17 (1)
stack b1 b23 (1)
unstack b17 b4 (1)
stack b17 b22 (1)
unstack b14 b26 (1)
put-down b14 (1)
unstack b26 b24 (1)
stack b26 b12 (1)
unstack b24 b3 (1)
put-down b24 (1)
pick-up b14 (1)
stack b14 b26 (1)
unstack b3 b21 (1)
stack b3 b17 (1)
unstack b21 b25 (1)
stack b21 b4 (1)
pick-up b25 (1)
stack b25 b14 (1)
pick-up b6 (1)
stack b6 b25 (1)
unstack b1 b23 (1)
put-down b1 (1)
pick-up b23 (1)
stack b23 b21 (1)
pick-up b1 (1)
stack b1 b23 (1)
unstack b15 b7 (1)
put-down b15 (1)
pick-up b7 (1)
stack b7 b1 (1)
pick-up b15 (1)
stack b15 b7 (1)
unstack b5 b8 (1)
put-down b5 (1)
unstack b8 b27 (1)
stack b8 b13 (1)
unstack b27 b16 (1)
stack b27 b19 (1)
unstack b16 b18 (1)
stack b16 b3 (1)
pick-up b18 (1)
stack b18 b15 (1)
unstack b8 b13 (1)
put-down b8 (1)
pick-up b13 (1)
stack b13 b18 (1)
pick-up b8 (1)
stack b8 b13 (1)
pick-up b5 (1)
stack b5 b8 (1)
unstack b6 b25 (1)
put-down b6 (1)
unstack b25 b14 (1)
put-down b25 (1)
unstack b14 b26 (1)
put-down b14 (1)
pick-up b25 (1)
stack b25 b14 (1)
pick-up b6 (1)
stack b6 b25 (1)
unstack b26 b12 (1)
put-down b26 (1)
unstack b12 b20 (1)
put-down b12 (1)
pick-up b26 (1)
stack b26 b12 (1)
unstack b20 b11 (1)
put-down b20 (1)
pick-up b11 (1)
stack b11 b27 (1)
pick-up b20 (1)
stack b20 b11 (1)
unstack b26 b12 (1)
put-down b26 (1)
pick-up b12 (1)
stack b12 b20 (1)
pick-up b26 (1)
stack b26 b12 (1)
unstack b6 b25 (1)
put-down b6 (1)
unstack b25 b14 (1)
put-down b25 (1)
pick-up b14 (1)
stack b14 b26 (1)
pick-up b25 (1)
stack b25 b14 (1)
pick-up b6 (1)
stack b6 b25 (1)
[t=0.067359s, 27588 KB] Plan length: 114 step(s).
[t=0.067359s, 27588 KB] Plan cost: 114
[t=0.067359s, 27588 KB] Expanded 971 state(s).
[t=0.067359s, 27588 KB] Reopened 0 state(s).
[t=0.067359s, 27588 KB] Evaluated 972 state(s).
[t=0.067359s, 27588 KB] Evaluations: 1944
[t=0.067359s, 27588 KB] Generated 12905 state(s).
[t=0.067359s, 27588 KB] Dead ends: 0 state(s).
[t=0.067359s, 27588 KB] Number of registered states: 972
[t=0.067359s, 27588 KB] Int hash set load factor: 972/1024 = 0.949219
[t=0.067359s, 27588 KB] Int hash set resizes: 10
[t=0.067359s, 27588 KB] Search time: 0.0330192s
[t=0.067359s, 27588 KB] Total time: 0.067359s
Solution found.
Peak memory: 27588 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.25s
