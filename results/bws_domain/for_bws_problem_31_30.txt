INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_31/bws_problem_31_30.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.020s wall-clock]
3102 relevant atoms
2077 auxiliary atoms
5179 final queue length
9091 total queue pushes
Completing instantiation... [0.030s CPU, 0.033s wall-clock]
Instantiating: [0.050s CPU, 0.055s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.010s CPU, 0.003s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
32 uncovered facts
Choosing groups: [0.000s CPU, 0.002s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.010s CPU, 0.013s wall-clock]
Building STRIPS to SAS dictionary... [0.010s CPU, 0.006s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.001s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.002s wall-clock]
Translating task: [0.050s CPU, 0.052s wall-clock]
2852 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
62 propositions removed
Detecting unreachable propositions: [0.030s CPU, 0.024s wall-clock]
Reordering and filtering variables...
63 of 63 variables necessary.
32 of 63 mutex groups necessary.
1922 of 1922 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.012s wall-clock]
Translator variables: 63
Translator derived variables: 0
Translator facts: 1056
Translator goal facts: 26
Translator mutex groups: 32
Translator total mutex groups size: 1024
Translator operators: 1922
Translator axioms: 0
Translator task size: 16491
Translator peak memory: 42104 KB
Writing output... [0.010s CPU, 0.010s wall-clock]
Done! [0.170s CPU, 0.179s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.0311e-05s, 24488 KB] reading input...
[t=0.00588581s, 26640 KB] done reading input!
[t=0.00749101s, 26904 KB] Initializing landmark count heuristic...
[t=0.00756875s, 26904 KB] Generating landmark graph...
[t=0.00770249s, 27036 KB] Building a landmark graph with reasonable orders.
[t=0.00781834s, 27172 KB] Initializing Exploration...
[t=0.00840026s, 27620 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0359538s, 28404 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0360807s, 28404 KB] Landmarks generation time: 0.0283875s
[t=0.0361067s, 28404 KB] Discovered 140 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0361276s, 28404 KB] 526 edges
[t=0.0361378s, 28404 KB] approx. reasonable orders
[t=0.0449387s, 28404 KB] approx. obedient reasonable orders
[t=0.0455853s, 28404 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.045611s, 28404 KB] Landmarks generation time: 0.03804s
[t=0.0456227s, 28404 KB] Discovered 140 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0456314s, 28404 KB] 667 edges
[t=0.0456401s, 28404 KB] Landmark graph generation time: 0.0380792s
[t=0.0456487s, 28404 KB] Landmark graph contains 140 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0456568s, 28404 KB] Landmark graph contains 667 orderings.
[t=0.0463228s, 28436 KB] Simplifying 7626 unary operators... done! [5766 unary operators]
[t=0.0481787s, 28568 KB] time to simplify: 0.00197538s
[t=0.0484051s, 28568 KB] Initializing additive heuristic...
[t=0.0484243s, 28568 KB] Initializing FF heuristic...
[t=0.048479s, 28568 KB] Building successor generator...done!
[t=0.048815s, 28568 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0488252s, 28568 KB] time for successor generation creation: 0.000306772s
[t=0.0488396s, 28568 KB] Variables: 63
[t=0.0488486s, 28568 KB] FactPairs: 1056
[t=0.0488571s, 28568 KB] Bytes per state: 24
[t=0.0489459s, 28568 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.048979s, 28568 KB] 63 initial landmarks, 26 goal landmarks
[t=0.0490538s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 77
[t=0.0490635s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 57
[t=0.0490723s, 28568 KB] g=0, 1 evaluated, 0 expanded
[t=0.0490864s, 28568 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 77
[t=0.049095s, 28568 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 57
[t=0.0494495s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 76
[t=0.0494595s, 28568 KB] g=2, 8 evaluated, 7 expanded
[t=0.0495187s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 75
[t=0.0495278s, 28568 KB] g=3, 9 evaluated, 8 expanded
[t=0.049685s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 56
[t=0.0496943s, 28568 KB] g=2, 12 evaluated, 11 expanded
[t=0.0504519s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 74
[t=0.0504683s, 28568 KB] g=6, 27 evaluated, 26 expanded
[t=0.0513877s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 73
[t=0.0514008s, 28568 KB] g=8, 46 evaluated, 45 expanded
[t=0.0524832s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 72
[t=0.0524963s, 28568 KB] g=10, 68 evaluated, 67 expanded
[t=0.0536142s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 71
[t=0.0536402s, 28568 KB] g=12, 91 evaluated, 90 expanded
[t=0.0546047s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 55
[t=0.0546273s, 28568 KB] g=6, 111 evaluated, 110 expanded
[t=0.0548418s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 70
[t=0.0548529s, 28568 KB] g=14, 115 evaluated, 114 expanded
[t=0.0556162s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 54
[t=0.0556482s, 28568 KB] g=8, 130 evaluated, 129 expanded
[t=0.0562337s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 68
[t=0.0562792s, 28568 KB] g=16, 141 evaluated, 140 expanded
[t=0.0574681s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 67
[t=0.0574855s, 28568 KB] g=18, 165 evaluated, 164 expanded
[t=0.0588988s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 66
[t=0.0589114s, 28568 KB] g=20, 194 evaluated, 193 expanded
[t=0.0589742s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 53
[t=0.0589838s, 28568 KB] g=12, 195 evaluated, 194 expanded
[t=0.0602497s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 65
[t=0.0602693s, 28568 KB] g=22, 220 evaluated, 219 expanded
[t=0.0604793s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 64
[t=0.060489s, 28568 KB] g=23, 224 evaluated, 223 expanded
[t=0.0624327s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 63
[t=0.0624532s, 28568 KB] g=26, 263 evaluated, 262 expanded
[t=0.0627622s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 52
[t=0.0627725s, 28568 KB] g=16, 269 evaluated, 268 expanded
[t=0.0637107s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 51
[t=0.0637217s, 28568 KB] g=18, 288 evaluated, 287 expanded
[t=0.0641354s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 62
[t=0.0641468s, 28568 KB] g=28, 296 evaluated, 295 expanded
[t=0.0646173s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 50
[t=0.0646348s, 28568 KB] g=20, 305 evaluated, 304 expanded
[t=0.0655663s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 49
[t=0.065577s, 28568 KB] g=22, 324 evaluated, 323 expanded
[t=0.066324s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 61
[t=0.0663357s, 28568 KB] g=30, 339 evaluated, 338 expanded
[t=0.066748s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 48
[t=0.0667589s, 28568 KB] g=24, 347 evaluated, 346 expanded
[t=0.0682489s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.0682677s, 28568 KB] g=32, 377 evaluated, 376 expanded
[t=0.0688197s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 47
[t=0.0688306s, 28568 KB] g=28, 388 evaluated, 387 expanded
[t=0.0700312s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 58
[t=0.070052s, 28568 KB] g=34, 412 evaluated, 411 expanded
[t=0.0720169s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0720515s, 28568 KB] g=36, 451 evaluated, 450 expanded
[t=0.0741775s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0741995s, 28568 KB] g=38, 494 evaluated, 493 expanded
[t=0.0762307s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0762432s, 28568 KB] g=40, 535 evaluated, 534 expanded
[t=0.0776726s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0776915s, 28568 KB] g=34, 564 evaluated, 563 expanded
[t=0.0787954s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0788113s, 28568 KB] g=36, 586 evaluated, 585 expanded
[t=0.0798161s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0798449s, 28568 KB] g=42, 606 evaluated, 605 expanded
[t=0.0815244s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0815564s, 28568 KB] g=44, 640 evaluated, 639 expanded
[t=0.0845745s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0845966s, 28568 KB] g=46, 701 evaluated, 700 expanded
[t=0.0863269s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0863505s, 28568 KB] g=48, 736 evaluated, 735 expanded
[t=0.0865636s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0865758s, 28568 KB] g=42, 740 evaluated, 739 expanded
[t=0.0875019s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0875153s, 28568 KB] g=44, 759 evaluated, 758 expanded
[t=0.0882063s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0882269s, 28568 KB] g=50, 773 evaluated, 772 expanded
[t=0.0893422s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0893655s, 28568 KB] g=46, 795 evaluated, 794 expanded
[t=0.0901368s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0901482s, 28568 KB] g=48, 811 evaluated, 810 expanded
[t=0.0907393s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0907563s, 28568 KB] g=50, 823 evaluated, 822 expanded
[t=0.0908174s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0908272s, 28568 KB] g=52, 824 evaluated, 823 expanded
[t=0.0930841s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0931032s, 28568 KB] g=54, 871 evaluated, 870 expanded
[t=0.095143s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0951556s, 28568 KB] g=56, 913 evaluated, 912 expanded
[t=0.0965798s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0966089s, 28568 KB] g=58, 942 evaluated, 941 expanded
[t=0.0976741s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0976874s, 28568 KB] g=60, 964 evaluated, 963 expanded
[t=0.0985033s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0985242s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0985331s, 28568 KB] g=62, 981 evaluated, 980 expanded
[t=0.0991053s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0991195s, 28568 KB] g=64, 993 evaluated, 992 expanded
[t=0.100223s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.100243s, 28568 KB] g=66, 1016 evaluated, 1015 expanded
[t=0.100895s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.100907s, 28568 KB] g=68, 1028 evaluated, 1027 expanded
[t=0.102607s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.102619s, 28568 KB] g=70, 1066 evaluated, 1065 expanded
[t=0.105763s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.105788s, 28568 KB] g=76, 1132 evaluated, 1131 expanded
[t=0.110411s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.110434s, 28568 KB] g=70, 1229 evaluated, 1228 expanded
[t=0.111249s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.111261s, 28568 KB] g=72, 1246 evaluated, 1245 expanded
[t=0.112891s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.112916s, 28568 KB] g=74, 1279 evaluated, 1278 expanded
[t=0.11433s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.11436s, 28568 KB] g=76, 1308 evaluated, 1307 expanded
[t=0.115775s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.11586s, 28568 KB] g=78, 1336 evaluated, 1335 expanded
[t=0.116815s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.116838s, 28568 KB] g=82, 1356 evaluated, 1355 expanded
[t=0.117095s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.11715s, 28568 KB] g=80, 1361 evaluated, 1360 expanded
[t=0.117733s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.117763s, 28568 KB] g=84, 1370 evaluated, 1369 expanded
[t=0.118224s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.118244s, 28568 KB] g=82, 1379 evaluated, 1378 expanded
[t=0.118431s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.118448s, 28568 KB] g=84, 1382 evaluated, 1381 expanded
[t=0.119013s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.119024s, 28568 KB] g=84, 1394 evaluated, 1393 expanded
[t=0.119081s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.119092s, 28568 KB] g=86, 1395 evaluated, 1394 expanded
[t=0.121708s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.121751s, 28568 KB] g=92, 1448 evaluated, 1447 expanded
[t=0.122729s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.122743s, 28568 KB] g=90, 1468 evaluated, 1467 expanded
[t=0.123591s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.123604s, 28568 KB] g=94, 1487 evaluated, 1486 expanded
[t=0.404588s, 30160 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.40466s, 30160 KB] g=158, 7384 evaluated, 7383 expanded
[t=0.405313s, 30160 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.405326s, 30160 KB] g=160, 7398 evaluated, 7397 expanded
[t=0.405822s, 30160 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.405834s, 30160 KB] g=162, 7409 evaluated, 7408 expanded
[t=0.405934s, 30160 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.405943s, 30160 KB] g=163, 7411 evaluated, 7410 expanded
[t=0.406046s, 30160 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.406056s, 30160 KB] g=164, 7413 evaluated, 7412 expanded
[t=0.406472s, 30160 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.406494s, 30160 KB] g=166, 7422 evaluated, 7421 expanded
[t=0.406594s, 30160 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.406605s, 30160 KB] g=167, 7423 evaluated, 7422 expanded
[t=0.406887s, 30160 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.406904s, 30160 KB] g=168, 7429 evaluated, 7428 expanded
[t=0.407005s, 30160 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.407014s, 30160 KB] g=169, 7431 evaluated, 7430 expanded
[t=0.407478s, 30160 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.407489s, 30160 KB] g=172, 7441 evaluated, 7440 expanded
[t=0.407545s, 30160 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.407555s, 30160 KB] g=173, 7442 evaluated, 7441 expanded
[t=0.407611s, 30160 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.407621s, 30160 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.40763s, 30160 KB] g=174, 7443 evaluated, 7442 expanded
[t=0.408241s, 30160 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.408253s, 30160 KB] g=178, 7456 evaluated, 7455 expanded
[t=0.408445s, 30160 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.408458s, 30160 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.408466s, 30160 KB] g=180, 7460 evaluated, 7459 expanded
[t=0.411393s, 30372 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.411445s, 30372 KB] g=192, 7514 evaluated, 7513 expanded
[t=0.411959s, 30372 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.411984s, 30372 KB] g=196, 7523 evaluated, 7522 expanded
[t=0.412146s, 30372 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.412158s, 30372 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.412167s, 30372 KB] g=198, 7526 evaluated, 7525 expanded
[t=0.44357s, 30504 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.443632s, 30504 KB] g=240, 8304 evaluated, 8303 expanded
[t=0.444725s, 30504 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.444748s, 30504 KB] g=248, 8335 evaluated, 8334 expanded
[t=0.445031s, 30504 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.445042s, 30504 KB] g=252, 8344 evaluated, 8343 expanded
[t=0.445143s, 30504 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.445152s, 30504 KB] g=254, 8347 evaluated, 8346 expanded
[t=0.446071s, 30504 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.446082s, 30504 KB] g=270, 8382 evaluated, 8381 expanded
[t=0.44631s, 30504 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.446322s, 30504 KB] g=278, 8392 evaluated, 8391 expanded
[t=0.44641s, 30504 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.44642s, 30504 KB] g=282, 8396 evaluated, 8395 expanded
[t=0.446442s, 30504 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.446463s, 30504 KB] g=283, 8397 evaluated, 8396 expanded
[t=0.446482s, 30504 KB] Solution found!
[t=0.446504s, 30504 KB] Actual search time: 0.397523s
unstack b15 b14 (1)
put-down b15 (1)
unstack b14 b7 (1)
put-down b14 (1)
unstack b16 b21 (1)
put-down b16 (1)
unstack b21 b31 (1)
put-down b21 (1)
unstack b24 b9 (1)
put-down b24 (1)
unstack b25 b8 (1)
put-down b25 (1)
unstack b28 b5 (1)
put-down b28 (1)
unstack b31 b12 (1)
stack b31 b8 (1)
unstack b12 b19 (1)
put-down b12 (1)
unstack b19 b26 (1)
put-down b19 (1)
unstack b5 b11 (1)
put-down b5 (1)
unstack b11 b3 (1)
put-down b11 (1)
unstack b6 b2 (1)
put-down b6 (1)
unstack b2 b23 (1)
put-down b2 (1)
unstack b23 b27 (1)
put-down b23 (1)
unstack b7 b20 (1)
stack b7 b26 (1)
unstack b20 b22 (1)
put-down b20 (1)
unstack b22 b4 (1)
stack b22 b31 (1)
pick-up b3 (1)
stack b3 b7 (1)
unstack b9 b1 (1)
put-down b9 (1)
unstack b27 b13 (1)
put-down b27 (1)
unstack b13 b10 (1)
put-down b13 (1)
pick-up b21 (1)
stack b21 b22 (1)
pick-up b20 (1)
stack b20 b21 (1)
pick-up b10 (1)
stack b10 b20 (1)
pick-up b4 (1)
stack b4 b27 (1)
pick-up b5 (1)
stack b5 b10 (1)
pick-up b25 (1)
stack b25 b5 (1)
pick-up b6 (1)
stack b6 b4 (1)
pick-up b19 (1)
stack b19 b6 (1)
pick-up b16 (1)
stack b16 b19 (1)
unstack b3 b7 (1)
put-down b3 (1)
unstack b7 b26 (1)
put-down b7 (1)
unstack b26 b17 (1)
put-down b26 (1)
unstack b17 b30 (1)
stack b17 b25 (1)
pick-up b1 (1)
stack b1 b17 (1)
pick-up b28 (1)
stack b28 b1 (1)
pick-up b24 (1)
stack b24 b28 (1)
pick-up b11 (1)
stack b11 b9 (1)
pick-up b15 (1)
stack b15 b30 (1)
pick-up b23 (1)
stack b23 b15 (1)
pick-up b7 (1)
stack b7 b26 (1)
pick-up b3 (1)
stack b3 b7 (1)
unstack b11 b9 (1)
put-down b11 (1)
pick-up b9 (1)
stack b9 b2 (1)
pick-up b11 (1)
stack b11 b9 (1)
unstack b24 b28 (1)
put-down b24 (1)
unstack b28 b1 (1)
put-down b28 (1)
pick-up b24 (1)
stack b24 b28 (1)
unstack b1 b17 (1)
put-down b1 (1)
unstack b17 b25 (1)
put-down b17 (1)
pick-up b1 (1)
stack b1 b17 (1)
unstack b24 b28 (1)
put-down b24 (1)
pick-up b28 (1)
stack b28 b1 (1)
pick-up b24 (1)
stack b24 b28 (1)
unstack b23 b15 (1)
put-down b23 (1)
unstack b15 b30 (1)
put-down b15 (1)
pick-up b23 (1)
stack b23 b15 (1)
pick-up b30 (1)
stack b30 b24 (1)
unstack b23 b15 (1)
put-down b23 (1)
pick-up b15 (1)
stack b15 b30 (1)
pick-up b23 (1)
stack b23 b15 (1)
unstack b25 b5 (1)
put-down b25 (1)
unstack b5 b10 (1)
put-down b5 (1)
pick-up b25 (1)
stack b25 b5 (1)
unstack b10 b20 (1)
put-down b10 (1)
unstack b20 b21 (1)
put-down b20 (1)
pick-up b10 (1)
stack b10 b20 (1)
unstack b25 b5 (1)
put-down b25 (1)
pick-up b5 (1)
stack b5 b10 (1)
pick-up b25 (1)
stack b25 b5 (1)
unstack b21 b22 (1)
put-down b21 (1)
unstack b22 b31 (1)
put-down b22 (1)
pick-up b21 (1)
stack b21 b22 (1)
unstack b11 b9 (1)
put-down b11 (1)
unstack b9 b2 (1)
put-down b9 (1)
unstack b31 b8 (1)
put-down b31 (1)
unstack b8 b29 (1)
put-down b8 (1)
unstack b29 b18 (1)
stack b29 b16 (1)
pick-up b14 (1)
stack b14 b29 (1)
pick-up b18 (1)
stack b18 b23 (1)
pick-up b11 (1)
stack b11 b9 (1)
pick-up b2 (1)
stack b2 b18 (1)
pick-up b31 (1)
stack b31 b8 (1)
unstack b11 b9 (1)
put-down b11 (1)
pick-up b9 (1)
stack b9 b2 (1)
pick-up b11 (1)
stack b11 b9 (1)
unstack b21 b22 (1)
put-down b21 (1)
pick-up b22 (1)
stack b22 b31 (1)
pick-up b21 (1)
stack b21 b22 (1)
unstack b25 b5 (1)
put-down b25 (1)
unstack b5 b10 (1)
put-down b5 (1)
pick-up b25 (1)
stack b25 b5 (1)
unstack b10 b20 (1)
put-down b10 (1)
pick-up b20 (1)
stack b20 b21 (1)
pick-up b10 (1)
stack b10 b20 (1)
unstack b25 b5 (1)
put-down b25 (1)
pick-up b5 (1)
stack b5 b10 (1)
pick-up b25 (1)
stack b25 b5 (1)
unstack b11 b9 (1)
put-down b11 (1)
unstack b9 b2 (1)
put-down b9 (1)
pick-up b11 (1)
stack b11 b9 (1)
unstack b2 b18 (1)
put-down b2 (1)
unstack b18 b23 (1)
put-down b18 (1)
unstack b23 b15 (1)
put-down b23 (1)
pick-up b18 (1)
stack b18 b23 (1)
pick-up b2 (1)
stack b2 b18 (1)
unstack b11 b9 (1)
put-down b11 (1)
pick-up b9 (1)
stack b9 b2 (1)
pick-up b11 (1)
stack b11 b9 (1)
unstack b15 b30 (1)
put-down b15 (1)
unstack b30 b24 (1)
put-down b30 (1)
unstack b24 b28 (1)
put-down b24 (1)
pick-up b30 (1)
stack b30 b24 (1)
pick-up b15 (1)
stack b15 b30 (1)
unstack b28 b1 (1)
put-down b28 (1)
unstack b1 b17 (1)
put-down b1 (1)
pick-up b17 (1)
stack b17 b25 (1)
pick-up b1 (1)
stack b1 b17 (1)
pick-up b28 (1)
stack b28 b1 (1)
unstack b15 b30 (1)
put-down b15 (1)
unstack b30 b24 (1)
put-down b30 (1)
pick-up b15 (1)
stack b15 b30 (1)
pick-up b24 (1)
stack b24 b28 (1)
unstack b15 b30 (1)
put-down b15 (1)
pick-up b30 (1)
stack b30 b24 (1)
pick-up b15 (1)
stack b15 b30 (1)
unstack b11 b9 (1)
put-down b11 (1)
unstack b9 b2 (1)
put-down b9 (1)
unstack b2 b18 (1)
put-down b2 (1)
pick-up b9 (1)
stack b9 b2 (1)
pick-up b11 (1)
stack b11 b9 (1)
unstack b18 b23 (1)
put-down b18 (1)
pick-up b23 (1)
stack b23 b15 (1)
pick-up b18 (1)
stack b18 b23 (1)
unstack b11 b9 (1)
put-down b11 (1)
unstack b9 b2 (1)
put-down b9 (1)
pick-up b11 (1)
stack b11 b9 (1)
pick-up b2 (1)
stack b2 b18 (1)
unstack b11 b9 (1)
put-down b11 (1)
pick-up b9 (1)
stack b9 b2 (1)
pick-up b11 (1)
stack b11 b9 (1)
[t=0.446514s, 30504 KB] Plan length: 284 step(s).
[t=0.446514s, 30504 KB] Plan cost: 284
[t=0.446514s, 30504 KB] Expanded 8397 state(s).
[t=0.446514s, 30504 KB] Reopened 0 state(s).
[t=0.446514s, 30504 KB] Evaluated 8398 state(s).
[t=0.446514s, 30504 KB] Evaluations: 16796
[t=0.446514s, 30504 KB] Generated 99426 state(s).
[t=0.446514s, 30504 KB] Dead ends: 0 state(s).
[t=0.446514s, 30504 KB] Number of registered states: 8398
[t=0.446514s, 30504 KB] Int hash set load factor: 8398/16384 = 0.512573
[t=0.446514s, 30504 KB] Int hash set resizes: 14
[t=0.446514s, 30504 KB] Search time: 0.397569s
[t=0.446514s, 30504 KB] Total time: 0.446514s
Solution found.
Peak memory: 30504 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.67s
