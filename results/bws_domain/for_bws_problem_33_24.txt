INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_33/bws_problem_33_24.pddl --sas-file output.sas
Parsing...
Parsing: [0.010s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.022s wall-clock]
3500 relevant atoms
2343 auxiliary atoms
5843 final queue length
10268 total queue pushes
Completing instantiation... [0.040s CPU, 0.045s wall-clock]
Instantiating: [0.060s CPU, 0.069s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.003s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.010s CPU, 0.002s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
34 uncovered facts
Choosing groups: [0.000s CPU, 0.002s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.010s CPU, 0.013s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.010s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.001s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.002s wall-clock]
Translating task: [0.050s CPU, 0.058s wall-clock]
3234 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
66 propositions removed
Detecting unreachable propositions: [0.030s CPU, 0.027s wall-clock]
Reordering and filtering variables...
67 of 67 variables necessary.
34 of 67 mutex groups necessary.
2178 of 2178 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.020s CPU, 0.014s wall-clock]
Translator variables: 67
Translator derived variables: 0
Translator facts: 1190
Translator goal facts: 27
Translator mutex groups: 34
Translator total mutex groups size: 1156
Translator operators: 2178
Translator axioms: 0
Translator task size: 18676
Translator peak memory: 43276 KB
Writing output... [0.010s CPU, 0.011s wall-clock]
Done! [0.200s CPU, 0.200s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=7.6465e-05s, 24488 KB] reading input...
[t=0.00704823s, 26928 KB] done reading input!
[t=0.00831132s, 27324 KB] Initializing landmark count heuristic...
[t=0.00838886s, 27324 KB] Generating landmark graph...
[t=0.00856051s, 27456 KB] Building a landmark graph with reasonable orders.
[t=0.00872693s, 27588 KB] Initializing Exploration...
[t=0.0094239s, 28188 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0468242s, 29376 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0470022s, 29376 KB] Landmarks generation time: 0.0384456s
[t=0.0470253s, 29376 KB] Discovered 147 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0470468s, 29376 KB] 863 edges
[t=0.0470569s, 29376 KB] approx. reasonable orders
[t=0.0503733s, 29376 KB] approx. obedient reasonable orders
[t=0.0504331s, 29376 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0504438s, 29376 KB] Landmarks generation time: 0.0420511s
[t=0.0504538s, 29376 KB] Discovered 147 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.050462s, 29376 KB] 893 edges
[t=0.0504707s, 29376 KB] Landmark graph generation time: 0.042089s
[t=0.0504794s, 29376 KB] Landmark graph contains 147 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0504875s, 29376 KB] Landmark graph contains 893 orderings.
[t=0.0511884s, 29376 KB] Simplifying 8646 unary operators... done! [6534 unary operators]
[t=0.0533847s, 29376 KB] time to simplify: 0.00221662s
[t=0.0535603s, 29376 KB] Initializing additive heuristic...
[t=0.0535811s, 29376 KB] Initializing FF heuristic...
[t=0.0536377s, 29376 KB] Building successor generator...done!
[t=0.0540194s, 29376 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0540289s, 29376 KB] time for successor generation creation: 0.000350579s
[t=0.0540435s, 29376 KB] Variables: 67
[t=0.0540518s, 29376 KB] FactPairs: 1190
[t=0.0540604s, 29376 KB] Bytes per state: 32
[t=0.0541479s, 29376 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0541831s, 29376 KB] 67 initial landmarks, 27 goal landmarks
[t=0.0542627s, 29376 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 80
[t=0.0542734s, 29376 KB] New best heuristic value for ff(transform = adapt_costs(one)): 58
[t=0.0542835s, 29376 KB] g=0, 1 evaluated, 0 expanded
[t=0.0542983s, 29376 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 80
[t=0.0543078s, 29376 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 58
[t=0.0543769s, 29376 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 79
[t=0.0543872s, 29376 KB] g=1, 2 evaluated, 1 expanded
[t=0.0546097s, 29376 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 78
[t=0.0546205s, 29376 KB] g=3, 6 evaluated, 5 expanded
[t=0.0549536s, 29376 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 77
[t=0.0549678s, 29376 KB] g=5, 12 evaluated, 11 expanded
[t=0.05529s, 29376 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 76
[t=0.0553009s, 29376 KB] g=7, 18 evaluated, 17 expanded
[t=0.0559118s, 29376 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 75
[t=0.055922s, 29376 KB] g=10, 30 evaluated, 29 expanded
[t=0.056628s, 29376 KB] New best heuristic value for ff(transform = adapt_costs(one)): 57
[t=0.0566388s, 29376 KB] g=12, 44 evaluated, 43 expanded
[t=0.0567938s, 29376 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 74
[t=0.0568035s, 29376 KB] g=12, 47 evaluated, 46 expanded
[t=0.0574839s, 29376 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 73
[t=0.0574937s, 29376 KB] g=14, 61 evaluated, 60 expanded
[t=0.0583957s, 29376 KB] New best heuristic value for ff(transform = adapt_costs(one)): 56
[t=0.0584062s, 29376 KB] g=16, 79 evaluated, 78 expanded
[t=0.0586115s, 29376 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 72
[t=0.0586209s, 29376 KB] g=16, 83 evaluated, 82 expanded
[t=0.0596054s, 29376 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 71
[t=0.059622s, 29376 KB] g=18, 103 evaluated, 102 expanded
[t=0.0609232s, 29376 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 70
[t=0.0609336s, 29376 KB] g=20, 130 evaluated, 129 expanded
[t=0.061932s, 29376 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 69
[t=0.0619446s, 29376 KB] g=22, 150 evaluated, 149 expanded
[t=0.0624978s, 29376 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 68
[t=0.0625094s, 29376 KB] g=23, 161 evaluated, 160 expanded
[t=0.0631669s, 29376 KB] New best heuristic value for ff(transform = adapt_costs(one)): 55
[t=0.0631785s, 29376 KB] g=20, 174 evaluated, 173 expanded
[t=0.0640235s, 29376 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 67
[t=0.0640401s, 29376 KB] g=26, 191 evaluated, 190 expanded
[t=0.065774s, 29376 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 66
[t=0.0657981s, 29376 KB] g=28, 226 evaluated, 225 expanded
[t=0.0673693s, 29376 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 63
[t=0.0673902s, 29376 KB] g=30, 256 evaluated, 255 expanded
[t=0.0677753s, 29376 KB] New best heuristic value for ff(transform = adapt_costs(one)): 54
[t=0.0677872s, 29376 KB] g=24, 263 evaluated, 262 expanded
[t=0.0687727s, 29376 KB] New best heuristic value for ff(transform = adapt_costs(one)): 53
[t=0.0687862s, 29376 KB] g=26, 283 evaluated, 282 expanded
[t=0.0690514s, 29376 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 62
[t=0.0690628s, 29376 KB] g=32, 288 evaluated, 287 expanded
[t=0.0705895s, 29376 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 61
[t=0.070607s, 29376 KB] g=34, 319 evaluated, 318 expanded
[t=0.0708256s, 29376 KB] New best heuristic value for ff(transform = adapt_costs(one)): 52
[t=0.0708358s, 29376 KB] g=30, 323 evaluated, 322 expanded
[t=0.0719674s, 29376 KB] New best heuristic value for ff(transform = adapt_costs(one)): 51
[t=0.0719793s, 29376 KB] g=32, 345 evaluated, 344 expanded
[t=0.0722641s, 29376 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 60
[t=0.0722765s, 29376 KB] g=36, 350 evaluated, 349 expanded
[t=0.073052s, 29376 KB] New best heuristic value for ff(transform = adapt_costs(one)): 50
[t=0.0730629s, 29376 KB] g=34, 365 evaluated, 364 expanded
[t=0.0739985s, 29376 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 57
[t=0.0740097s, 29376 KB] g=38, 383 evaluated, 382 expanded
[t=0.0756894s, 29376 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0757023s, 29376 KB] g=40, 416 evaluated, 415 expanded
[t=0.07776s, 29376 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0777711s, 29376 KB] g=42, 457 evaluated, 456 expanded
[t=0.0807056s, 29376 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0807656s, 29376 KB] g=44, 496 evaluated, 495 expanded
[t=0.081377s, 29376 KB] New best heuristic value for ff(transform = adapt_costs(one)): 49
[t=0.0813877s, 29376 KB] g=38, 508 evaluated, 507 expanded
[t=0.083647s, 29376 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0836923s, 29376 KB] g=47, 551 evaluated, 550 expanded
[t=0.0838147s, 29376 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0838262s, 29376 KB] g=48, 553 evaluated, 552 expanded
[t=0.0859704s, 29376 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0859857s, 29376 KB] g=50, 595 evaluated, 594 expanded
[t=0.0877233s, 29376 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0877353s, 29376 KB] g=52, 629 evaluated, 628 expanded
[t=0.0888588s, 29376 KB] New best heuristic value for ff(transform = adapt_costs(one)): 48
[t=0.08887s, 29376 KB] g=44, 651 evaluated, 650 expanded
[t=0.089646s, 29376 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.089657s, 29376 KB] g=54, 666 evaluated, 665 expanded
[t=0.0899258s, 29376 KB] New best heuristic value for ff(transform = adapt_costs(one)): 47
[t=0.0899357s, 29376 KB] g=46, 671 evaluated, 670 expanded
[t=0.0910437s, 29376 KB] New best heuristic value for ff(transform = adapt_costs(one)): 46
[t=0.0910566s, 29376 KB] g=48, 693 evaluated, 692 expanded
[t=0.0918307s, 29376 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0918585s, 29376 KB] g=56, 706 evaluated, 705 expanded
[t=0.0922729s, 29376 KB] New best heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0922876s, 29376 KB] g=50, 713 evaluated, 712 expanded
[t=0.0933876s, 29376 KB] New best heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.0934005s, 29376 KB] g=52, 735 evaluated, 734 expanded
[t=0.0939228s, 29376 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0939383s, 29376 KB] g=58, 745 evaluated, 744 expanded
[t=0.0943098s, 29376 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0943203s, 29376 KB] g=54, 752 evaluated, 751 expanded
[t=0.0952755s, 29376 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0952878s, 29376 KB] g=54, 771 evaluated, 770 expanded
[t=0.0958734s, 29376 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0958852s, 29376 KB] g=60, 782 evaluated, 781 expanded
[t=0.0962497s, 29376 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0962609s, 29376 KB] g=56, 789 evaluated, 788 expanded
[t=0.0972813s, 29376 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0972925s, 29376 KB] g=58, 809 evaluated, 808 expanded
[t=0.0979489s, 29376 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0979596s, 29376 KB] g=62, 822 evaluated, 821 expanded
[t=0.0994515s, 29376 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0994759s, 29376 KB] g=64, 852 evaluated, 851 expanded
[t=0.101106s, 29376 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.101123s, 29376 KB] g=66, 885 evaluated, 884 expanded
[t=0.103078s, 29376 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.103127s, 29376 KB] g=68, 922 evaluated, 921 expanded
[t=0.103906s, 29376 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.103923s, 29376 KB] g=70, 938 evaluated, 937 expanded
[t=0.103991s, 29376 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.104019s, 29376 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.104028s, 29376 KB] g=70, 939 evaluated, 938 expanded
[t=0.10474s, 29376 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.104751s, 29376 KB] g=72, 954 evaluated, 953 expanded
[t=0.104997s, 29376 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.105007s, 29376 KB] g=72, 959 evaluated, 958 expanded
[t=0.106202s, 29376 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.106215s, 29376 KB] g=74, 985 evaluated, 984 expanded
[t=0.106459s, 29376 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.10647s, 29376 KB] g=74, 990 evaluated, 989 expanded
[t=0.107556s, 29376 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.107568s, 29376 KB] g=76, 1013 evaluated, 1012 expanded
[t=0.107673s, 29376 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.107683s, 29376 KB] g=76, 1015 evaluated, 1014 expanded
[t=0.108627s, 29376 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.108639s, 29376 KB] g=78, 1034 evaluated, 1033 expanded
[t=0.108751s, 29376 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.108761s, 29376 KB] g=78, 1036 evaluated, 1035 expanded
[t=0.10957s, 29376 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.109582s, 29376 KB] g=80, 1053 evaluated, 1052 expanded
[t=0.109689s, 29376 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.109699s, 29376 KB] g=80, 1055 evaluated, 1054 expanded
[t=0.110409s, 29376 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.110421s, 29376 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.110429s, 29376 KB] g=82, 1070 evaluated, 1069 expanded
[t=0.112236s, 29376 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.112278s, 29376 KB] g=86, 1105 evaluated, 1104 expanded
[t=0.11269s, 29376 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.112703s, 29376 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.112712s, 29376 KB] g=88, 1113 evaluated, 1112 expanded
[t=0.115882s, 29376 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.115896s, 29376 KB] g=92, 1177 evaluated, 1176 expanded
[t=0.116256s, 29376 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.116268s, 29376 KB] g=94, 1184 evaluated, 1183 expanded
[t=0.116331s, 29376 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.11634s, 29376 KB] g=94, 1185 evaluated, 1184 expanded
[t=0.117126s, 29376 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.117136s, 29376 KB] g=96, 1201 evaluated, 1200 expanded
[t=0.119791s, 29376 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.119863s, 29376 KB] g=98, 1241 evaluated, 1240 expanded
[t=0.122158s, 29376 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.122182s, 29376 KB] g=102, 1284 evaluated, 1283 expanded
[t=0.122494s, 29376 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.122515s, 29376 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.122525s, 29376 KB] g=104, 1290 evaluated, 1289 expanded
[t=0.124302s, 29376 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.124314s, 29376 KB] g=110, 1326 evaluated, 1325 expanded
[t=0.124654s, 29376 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.124665s, 29376 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.124673s, 29376 KB] g=112, 1333 evaluated, 1332 expanded
[t=0.124927s, 29376 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.124936s, 29376 KB] g=112, 1338 evaluated, 1337 expanded
[t=0.125228s, 29376 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.125238s, 29376 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.125247s, 29376 KB] g=114, 1344 evaluated, 1343 expanded
[t=0.129185s, 29376 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.129204s, 29376 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.129218s, 29376 KB] g=122, 1426 evaluated, 1425 expanded
[t=0.129472s, 29376 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.129488s, 29376 KB] g=122, 1430 evaluated, 1429 expanded
[t=0.1299s, 29376 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.12993s, 29376 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.129948s, 29376 KB] g=124, 1435 evaluated, 1434 expanded
[t=0.13747s, 29376 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.137546s, 29376 KB] g=136, 1549 evaluated, 1548 expanded
[t=0.138225s, 29376 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.138237s, 29376 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.138245s, 29376 KB] g=142, 1563 evaluated, 1562 expanded
[t=0.146122s, 29376 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.146152s, 29376 KB] g=162, 1724 evaluated, 1723 expanded
[t=0.148606s, 29376 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.148676s, 29376 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.148685s, 29376 KB] g=176, 1755 evaluated, 1754 expanded
[t=0.223939s, 29440 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.224018s, 29440 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.224029s, 29440 KB] g=248, 3006 evaluated, 3005 expanded
[t=0.224848s, 29440 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.224864s, 29440 KB] g=252, 3022 evaluated, 3021 expanded
[t=0.22506s, 29440 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.22507s, 29440 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.225079s, 29440 KB] g=254, 3026 evaluated, 3025 expanded
[t=0.22758s, 29440 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.227594s, 29440 KB] g=266, 3080 evaluated, 3079 expanded
[t=0.228013s, 29440 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.228025s, 29440 KB] g=270, 3089 evaluated, 3088 expanded
[t=0.228175s, 29440 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.228187s, 29440 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.228195s, 29440 KB] g=272, 3092 evaluated, 3091 expanded
[t=0.233213s, 29440 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.23325s, 29440 KB] g=302, 3193 evaluated, 3192 expanded
[t=0.23356s, 29440 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.233572s, 29440 KB] g=306, 3202 evaluated, 3201 expanded
[t=0.233684s, 29440 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.233693s, 29440 KB] g=308, 3205 evaluated, 3204 expanded
[t=0.234177s, 29440 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.234188s, 29440 KB] g=320, 3222 evaluated, 3221 expanded
[t=0.234285s, 29440 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.234295s, 29440 KB] g=324, 3226 evaluated, 3225 expanded
[t=0.234318s, 29440 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.234327s, 29440 KB] g=325, 3227 evaluated, 3226 expanded
[t=0.234346s, 29440 KB] Solution found!
[t=0.234367s, 29440 KB] Actual search time: 0.180182s
unstack b1 b27 (1)
put-down b1 (1)
unstack b14 b10 (1)
put-down b14 (1)
unstack b22 b12 (1)
put-down b22 (1)
unstack b12 b32 (1)
put-down b12 (1)
unstack b10 b17 (1)
put-down b10 (1)
unstack b17 b31 (1)
put-down b17 (1)
unstack b31 b5 (1)
put-down b31 (1)
unstack b27 b33 (1)
put-down b27 (1)
unstack b32 b4 (1)
put-down b32 (1)
unstack b33 b25 (1)
put-down b33 (1)
unstack b25 b21 (1)
put-down b25 (1)
unstack b21 b19 (1)
put-down b21 (1)
unstack b19 b30 (1)
put-down b19 (1)
unstack b4 b20 (1)
put-down b4 (1)
unstack b20 b26 (1)
stack b20 b10 (1)
pick-up b22 (1)
stack b22 b26 (1)
unstack b5 b13 (1)
put-down b5 (1)
unstack b13 b23 (1)
put-down b13 (1)
unstack b23 b6 (1)
stack b23 b20 (1)
unstack b30 b15 (1)
put-down b30 (1)
unstack b15 b2 (1)
put-down b15 (1)
pick-up b21 (1)
stack b21 b15 (1)
unstack b22 b26 (1)
put-down b22 (1)
unstack b26 b28 (1)
stack b26 b6 (1)
unstack b28 b3 (1)
stack b28 b27 (1)
pick-up b1 (1)
stack b1 b28 (1)
unstack b3 b16 (1)
put-down b3 (1)
unstack b16 b7 (1)
put-down b16 (1)
unstack b7 b11 (1)
put-down b7 (1)
unstack b11 b29 (1)
put-down b11 (1)
unstack b29 b18 (1)
stack b29 b7 (1)
pick-up b12 (1)
stack b12 b29 (1)
unstack b18 b8 (1)
stack b18 b2 (1)
pick-up b17 (1)
stack b17 b16 (1)
pick-up b14 (1)
stack b14 b17 (1)
pick-up b22 (1)
stack b22 b26 (1)
pick-up b25 (1)
stack b25 b19 (1)
pick-up b32 (1)
stack b32 b18 (1)
pick-up b33 (1)
stack b33 b23 (1)
pick-up b4 (1)
stack b4 b13 (1)
pick-up b5 (1)
stack b5 b8 (1)
unstack b21 b15 (1)
put-down b21 (1)
pick-up b15 (1)
stack b15 b33 (1)
pick-up b21 (1)
stack b21 b15 (1)
unstack b5 b8 (1)
put-down b5 (1)
unstack b8 b24 (1)
put-down b8 (1)
pick-up b24 (1)
stack b24 b32 (1)
pick-up b8 (1)
stack b8 b24 (1)
pick-up b5 (1)
stack b5 b8 (1)
unstack b25 b19 (1)
put-down b25 (1)
pick-up b19 (1)
stack b19 b4 (1)
pick-up b25 (1)
stack b25 b19 (1)
unstack b22 b26 (1)
put-down b22 (1)
unstack b26 b6 (1)
put-down b26 (1)
pick-up b6 (1)
stack b6 b11 (1)
pick-up b26 (1)
stack b26 b6 (1)
pick-up b22 (1)
stack b22 b26 (1)
unstack b1 b28 (1)
put-down b1 (1)
unstack b28 b27 (1)
put-down b28 (1)
pick-up b27 (1)
stack b27 b3 (1)
pick-up b28 (1)
stack b28 b27 (1)
pick-up b1 (1)
stack b1 b28 (1)
unstack b25 b19 (1)
put-down b25 (1)
unstack b19 b4 (1)
put-down b19 (1)
pick-up b25 (1)
stack b25 b19 (1)
unstack b4 b13 (1)
put-down b4 (1)
pick-up b13 (1)
stack b13 b5 (1)
pick-up b4 (1)
stack b4 b13 (1)
unstack b25 b19 (1)
put-down b25 (1)
pick-up b19 (1)
stack b19 b4 (1)
pick-up b25 (1)
stack b25 b19 (1)
unstack b21 b15 (1)
put-down b21 (1)
unstack b15 b33 (1)
put-down b15 (1)
unstack b33 b23 (1)
put-down b33 (1)
pick-up b15 (1)
stack b15 b33 (1)
pick-up b21 (1)
stack b21 b15 (1)
unstack b23 b20 (1)
put-down b23 (1)
unstack b20 b10 (1)
put-down b20 (1)
pick-up b10 (1)
stack b10 b25 (1)
pick-up b20 (1)
stack b20 b10 (1)
pick-up b23 (1)
stack b23 b20 (1)
unstack b21 b15 (1)
put-down b21 (1)
unstack b15 b33 (1)
put-down b15 (1)
pick-up b21 (1)
stack b21 b15 (1)
unstack b23 b20 (1)
put-down b23 (1)
pick-up b33 (1)
stack b33 b23 (1)
unstack b21 b15 (1)
put-down b21 (1)
pick-up b15 (1)
stack b15 b33 (1)
pick-up b21 (1)
stack b21 b15 (1)
unstack b20 b10 (1)
put-down b20 (1)
unstack b10 b25 (1)
put-down b10 (1)
pick-up b20 (1)
stack b20 b10 (1)
unstack b25 b19 (1)
put-down b25 (1)
unstack b19 b4 (1)
put-down b19 (1)
pick-up b25 (1)
stack b25 b19 (1)
unstack b20 b10 (1)
put-down b20 (1)
pick-up b10 (1)
stack b10 b25 (1)
pick-up b20 (1)
stack b20 b10 (1)
unstack b21 b15 (1)
put-down b21 (1)
unstack b15 b33 (1)
put-down b15 (1)
pick-up b21 (1)
stack b21 b15 (1)
unstack b33 b23 (1)
put-down b33 (1)
pick-up b23 (1)
stack b23 b20 (1)
pick-up b33 (1)
stack b33 b23 (1)
unstack b21 b15 (1)
put-down b21 (1)
pick-up b15 (1)
stack b15 b33 (1)
pick-up b21 (1)
stack b21 b15 (1)
unstack b4 b13 (1)
put-down b4 (1)
unstack b13 b5 (1)
put-down b13 (1)
pick-up b4 (1)
stack b4 b13 (1)
unstack b5 b8 (1)
put-down b5 (1)
unstack b8 b24 (1)
put-down b8 (1)
pick-up b5 (1)
stack b5 b8 (1)
unstack b4 b13 (1)
put-down b4 (1)
pick-up b13 (1)
stack b13 b5 (1)
pick-up b4 (1)
stack b4 b13 (1)
unstack b24 b32 (1)
put-down b24 (1)
unstack b32 b18 (1)
put-down b32 (1)
pick-up b24 (1)
stack b24 b32 (1)
unstack b18 b2 (1)
put-down b18 (1)
unstack b2 b9 (1)
put-down b2 (1)
pick-up b9 (1)
stack b9 b30 (1)
pick-up b2 (1)
stack b2 b9 (1)
pick-up b18 (1)
stack b18 b2 (1)
unstack b24 b32 (1)
put-down b24 (1)
pick-up b32 (1)
stack b32 b18 (1)
pick-up b24 (1)
stack b24 b32 (1)
unstack b4 b13 (1)
put-down b4 (1)
unstack b13 b5 (1)
put-down b13 (1)
pick-up b4 (1)
stack b4 b13 (1)
unstack b5 b8 (1)
put-down b5 (1)
pick-up b8 (1)
stack b8 b24 (1)
pick-up b5 (1)
stack b5 b8 (1)
unstack b4 b13 (1)
put-down b4 (1)
pick-up b13 (1)
stack b13 b5 (1)
pick-up b4 (1)
stack b4 b13 (1)
unstack b21 b15 (1)
put-down b21 (1)
unstack b15 b33 (1)
put-down b15 (1)
pick-up b21 (1)
stack b21 b15 (1)
unstack b33 b23 (1)
put-down b33 (1)
unstack b23 b20 (1)
put-down b23 (1)
pick-up b33 (1)
stack b33 b23 (1)
unstack b21 b15 (1)
put-down b21 (1)
pick-up b15 (1)
stack b15 b33 (1)
pick-up b21 (1)
stack b21 b15 (1)
unstack b20 b10 (1)
put-down b20 (1)
unstack b10 b25 (1)
put-down b10 (1)
pick-up b20 (1)
stack b20 b10 (1)
unstack b25 b19 (1)
put-down b25 (1)
pick-up b19 (1)
stack b19 b4 (1)
pick-up b25 (1)
stack b25 b19 (1)
unstack b20 b10 (1)
put-down b20 (1)
pick-up b10 (1)
stack b10 b25 (1)
pick-up b20 (1)
stack b20 b10 (1)
unstack b21 b15 (1)
put-down b21 (1)
unstack b15 b33 (1)
put-down b15 (1)
pick-up b21 (1)
stack b21 b15 (1)
unstack b33 b23 (1)
put-down b33 (1)
pick-up b23 (1)
stack b23 b20 (1)
pick-up b33 (1)
stack b33 b23 (1)
unstack b21 b15 (1)
put-down b21 (1)
pick-up b15 (1)
stack b15 b33 (1)
pick-up b21 (1)
stack b21 b15 (1)
[t=0.234379s, 29440 KB] Plan length: 326 step(s).
[t=0.234379s, 29440 KB] Plan cost: 326
[t=0.234379s, 29440 KB] Expanded 3227 state(s).
[t=0.234379s, 29440 KB] Reopened 0 state(s).
[t=0.234379s, 29440 KB] Evaluated 3228 state(s).
[t=0.234379s, 29440 KB] Evaluations: 6456
[t=0.234379s, 29440 KB] Generated 41259 state(s).
[t=0.234379s, 29440 KB] Dead ends: 0 state(s).
[t=0.234379s, 29440 KB] Number of registered states: 3228
[t=0.234379s, 29440 KB] Int hash set load factor: 3228/4096 = 0.788086
[t=0.234379s, 29440 KB] Int hash set resizes: 12
[t=0.234379s, 29440 KB] Search time: 0.180231s
[t=0.234379s, 29440 KB] Total time: 0.234379s
Solution found.
Peak memory: 29440 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.48s
