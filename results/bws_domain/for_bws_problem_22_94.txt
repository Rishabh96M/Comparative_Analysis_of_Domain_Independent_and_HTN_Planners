INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_22/bws_problem_22_94.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.010s wall-clock]
1608 relevant atoms
1078 auxiliary atoms
2686 final queue length
4670 total queue pushes
Completing instantiation... [0.020s CPU, 0.016s wall-clock]
Instantiating: [0.030s CPU, 0.027s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
23 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.006s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
1430 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
44 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.012s wall-clock]
Reordering and filtering variables...
45 of 45 variables necessary.
23 of 45 mutex groups necessary.
968 of 968 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 45
Translator derived variables: 0
Translator facts: 552
Translator goal facts: 17
Translator mutex groups: 23
Translator total mutex groups size: 529
Translator operators: 968
Translator axioms: 0
Translator task size: 8337
Translator peak memory: 36976 KB
Writing output... [0.000s CPU, 0.005s wall-clock]
Done! [0.080s CPU, 0.085s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.1342e-05s, 24488 KB] reading input...
[t=0.00302058s, 25340 KB] done reading input!
[t=0.00394622s, 25736 KB] Initializing landmark count heuristic...
[t=0.00397551s, 25736 KB] Generating landmark graph...
[t=0.00403738s, 25736 KB] Building a landmark graph with reasonable orders.
[t=0.00409528s, 25736 KB] Initializing Exploration...
[t=0.00437872s, 26000 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.014474s, 26528 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0145739s, 26528 KB] Landmarks generation time: 0.0105552s
[t=0.0146056s, 26528 KB] Discovered 93 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0146219s, 26528 KB] 382 edges
[t=0.0146318s, 26528 KB] approx. reasonable orders
[t=0.0174876s, 26528 KB] approx. obedient reasonable orders
[t=0.0177362s, 26528 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0177503s, 26528 KB] Landmarks generation time: 0.0137727s
[t=0.0177613s, 26528 KB] Discovered 93 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0177705s, 26528 KB] 456 edges
[t=0.01778s, 26528 KB] Landmark graph generation time: 0.0138118s
[t=0.017789s, 26528 KB] Landmark graph contains 93 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0177972s, 26528 KB] Landmark graph contains 456 orderings.
[t=0.018381s, 26528 KB] Simplifying 3828 unary operators... done! [2904 unary operators]
[t=0.0194601s, 26528 KB] time to simplify: 0.00115924s
[t=0.0196175s, 26528 KB] Initializing additive heuristic...
[t=0.0196345s, 26528 KB] Initializing FF heuristic...
[t=0.0197044s, 26528 KB] Building successor generator...done!
[t=0.0199033s, 26528 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0199133s, 26528 KB] time for successor generation creation: 0.000165547s
[t=0.0199278s, 26528 KB] Variables: 45
[t=0.019936s, 26528 KB] FactPairs: 552
[t=0.0199445s, 26528 KB] Bytes per state: 20
[t=0.0200761s, 26528 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0201173s, 26528 KB] 42 initial landmarks, 17 goal landmarks
[t=0.0201787s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0201889s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.020198s, 26528 KB] g=0, 1 evaluated, 0 expanded
[t=0.0202133s, 26528 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0202223s, 26528 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0203914s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0204011s, 26528 KB] g=2, 7 evaluated, 6 expanded
[t=0.0205387s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0205489s, 26528 KB] g=2, 12 evaluated, 11 expanded
[t=0.0208158s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0208269s, 26528 KB] g=4, 22 evaluated, 21 expanded
[t=0.0208614s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0208719s, 26528 KB] g=4, 23 evaluated, 22 expanded
[t=0.0210869s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0210977s, 26528 KB] g=6, 31 evaluated, 30 expanded
[t=0.0211832s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0211925s, 26528 KB] g=6, 34 evaluated, 33 expanded
[t=0.0214436s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0214556s, 26528 KB] g=8, 44 evaluated, 43 expanded
[t=0.0215745s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0215898s, 26528 KB] g=9, 48 evaluated, 47 expanded
[t=0.0219044s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.021916s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0219258s, 26528 KB] g=12, 60 evaluated, 59 expanded
[t=0.0221497s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.022161s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0221691s, 26528 KB] g=14, 68 evaluated, 67 expanded
[t=0.0224073s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0224171s, 26528 KB] g=16, 76 evaluated, 75 expanded
[t=0.0224777s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0224885s, 26528 KB] g=16, 78 evaluated, 77 expanded
[t=0.022779s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0227889s, 26528 KB] g=18, 89 evaluated, 88 expanded
[t=0.0229202s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0229299s, 26528 KB] g=18, 94 evaluated, 93 expanded
[t=0.0232324s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0232418s, 26528 KB] g=20, 106 evaluated, 105 expanded
[t=0.023424s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0234332s, 26528 KB] g=20, 113 evaluated, 112 expanded
[t=0.0235931s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0236023s, 26528 KB] g=22, 119 evaluated, 118 expanded
[t=0.0238684s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0238783s, 26528 KB] g=24, 129 evaluated, 128 expanded
[t=0.0241857s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0241956s, 26528 KB] g=22, 141 evaluated, 140 expanded
[t=0.0242843s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.024294s, 26528 KB] g=23, 144 evaluated, 143 expanded
[t=0.025046s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0250549s, 26528 KB] g=30, 174 evaluated, 173 expanded
[t=0.0253328s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0253415s, 26528 KB] g=32, 185 evaluated, 184 expanded
[t=0.0255444s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0255533s, 26528 KB] g=26, 193 evaluated, 192 expanded
[t=0.0256391s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0256488s, 26528 KB] g=34, 196 evaluated, 195 expanded
[t=0.0259206s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0259297s, 26528 KB] g=36, 207 evaluated, 206 expanded
[t=0.0260671s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0260801s, 26528 KB] g=28, 212 evaluated, 211 expanded
[t=0.0264962s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0265091s, 26528 KB] g=30, 228 evaluated, 227 expanded
[t=0.0266658s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.026676s, 26528 KB] g=31, 234 evaluated, 233 expanded
[t=0.0272528s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.027263s, 26528 KB] g=34, 259 evaluated, 258 expanded
[t=0.0274649s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0274743s, 26528 KB] g=36, 268 evaluated, 267 expanded
[t=0.027788s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0277977s, 26528 KB] g=38, 283 evaluated, 282 expanded
[t=0.0278492s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.027858s, 26528 KB] g=39, 285 evaluated, 284 expanded
[t=0.0280621s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0280735s, 26528 KB] g=41, 295 evaluated, 294 expanded
[t=0.0281053s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0281139s, 26528 KB] g=40, 296 evaluated, 295 expanded
[t=0.0283592s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0283681s, 26528 KB] g=42, 308 evaluated, 307 expanded
[t=0.0285695s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0285783s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0285868s, 26528 KB] g=44, 318 evaluated, 317 expanded
[t=0.0286152s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.028624s, 26528 KB] g=45, 319 evaluated, 318 expanded
[t=0.0287635s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0287723s, 26528 KB] g=47, 326 evaluated, 325 expanded
[t=0.0288723s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.028881s, 26528 KB] g=49, 331 evaluated, 330 expanded
[t=0.0292356s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0292453s, 26528 KB] g=50, 350 evaluated, 349 expanded
[t=0.0292718s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0292807s, 26528 KB] g=52, 351 evaluated, 350 expanded
[t=0.0295965s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0296058s, 26528 KB] g=54, 368 evaluated, 367 expanded
[t=0.0297216s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0297301s, 26528 KB] g=56, 375 evaluated, 374 expanded
[t=0.0298573s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.029866s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.029874s, 26528 KB] g=58, 382 evaluated, 381 expanded
[t=0.0298976s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0299062s, 26528 KB] g=59, 383 evaluated, 382 expanded
[t=0.0300135s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.030022s, 26528 KB] g=60, 389 evaluated, 388 expanded
[t=0.0301699s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0301813s, 26528 KB] g=62, 396 evaluated, 395 expanded
[t=0.0302062s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.030215s, 26528 KB] g=63, 397 evaluated, 396 expanded
[t=0.0302993s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.030308s, 26528 KB] g=65, 402 evaluated, 401 expanded
[t=0.0303891s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0303977s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0304056s, 26528 KB] g=66, 407 evaluated, 406 expanded
[t=0.0304416s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0304501s, 26528 KB] g=67, 409 evaluated, 408 expanded
[t=0.0304742s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0304829s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.030495s, 26528 KB] g=68, 410 evaluated, 409 expanded
[t=0.0305168s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0305252s, 26528 KB] g=69, 411 evaluated, 410 expanded
[t=0.0305735s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0305819s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0305897s, 26528 KB] g=72, 414 evaluated, 413 expanded
[t=0.0306069s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0306151s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0306231s, 26528 KB] g=73, 415 evaluated, 414 expanded
[t=0.0306376s, 26528 KB] Solution found!
[t=0.0306478s, 26528 KB] Actual search time: 0.0105267s
unstack b12 b6 (1)
put-down b12 (1)
unstack b4 b14 (1)
put-down b4 (1)
unstack b6 b3 (1)
put-down b6 (1)
unstack b7 b22 (1)
stack b7 b14 (1)
unstack b22 b19 (1)
put-down b22 (1)
unstack b8 b1 (1)
stack b8 b7 (1)
unstack b19 b18 (1)
put-down b19 (1)
unstack b18 b16 (1)
put-down b18 (1)
unstack b16 b9 (1)
put-down b16 (1)
unstack b9 b13 (1)
put-down b9 (1)
unstack b13 b11 (1)
put-down b13 (1)
unstack b11 b10 (1)
put-down b11 (1)
pick-up b10 (1)
stack b10 b8 (1)
unstack b1 b2 (1)
stack b1 b10 (1)
unstack b2 b21 (1)
stack b2 b19 (1)
unstack b21 b15 (1)
stack b21 b3 (1)
pick-up b11 (1)
stack b11 b18 (1)
pick-up b12 (1)
stack b12 b1 (1)
unstack b15 b5 (1)
stack b15 b2 (1)
pick-up b22 (1)
stack b22 b5 (1)
pick-up b6 (1)
stack b6 b12 (1)
pick-up b9 (1)
stack b9 b6 (1)
unstack b11 b18 (1)
put-down b11 (1)
unstack b21 b3 (1)
put-down b21 (1)
unstack b22 b5 (1)
put-down b22 (1)
unstack b5 b20 (1)
stack b5 b13 (1)
pick-up b22 (1)
stack b22 b5 (1)
pick-up b11 (1)
stack b11 b18 (1)
unstack b20 b17 (1)
stack b20 b15 (1)
pick-up b21 (1)
stack b21 b3 (1)
pick-up b4 (1)
stack b4 b20 (1)
unstack b11 b18 (1)
put-down b11 (1)
pick-up b18 (1)
stack b18 b4 (1)
pick-up b11 (1)
stack b11 b18 (1)
unstack b21 b3 (1)
put-down b21 (1)
pick-up b3 (1)
stack b3 b9 (1)
pick-up b21 (1)
stack b21 b3 (1)
[t=0.0306566s, 26528 KB] Plan length: 74 step(s).
[t=0.0306566s, 26528 KB] Plan cost: 74
[t=0.0306566s, 26528 KB] Expanded 415 state(s).
[t=0.0306566s, 26528 KB] Reopened 0 state(s).
[t=0.0306566s, 26528 KB] Evaluated 416 state(s).
[t=0.0306566s, 26528 KB] Evaluations: 832
[t=0.0306566s, 26528 KB] Generated 4159 state(s).
[t=0.0306566s, 26528 KB] Dead ends: 0 state(s).
[t=0.0306566s, 26528 KB] Number of registered states: 416
[t=0.0306566s, 26528 KB] Int hash set load factor: 416/512 = 0.8125
[t=0.0306566s, 26528 KB] Int hash set resizes: 9
[t=0.0306566s, 26528 KB] Search time: 0.0105811s
[t=0.0306566s, 26528 KB] Total time: 0.0306566s
Solution found.
Peak memory: 26528 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.17s
