INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_24/bws_problem_24_17.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.011s wall-clock]
1898 relevant atoms
1272 auxiliary atoms
3170 final queue length
5525 total queue pushes
Completing instantiation... [0.020s CPU, 0.019s wall-clock]
Instantiating: [0.030s CPU, 0.032s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
25 uncovered facts
Choosing groups: [0.010s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.007s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.029s wall-clock]
1704 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
48 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.019s wall-clock]
Reordering and filtering variables...
49 of 49 variables necessary.
25 of 49 mutex groups necessary.
1152 of 1152 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.007s wall-clock]
Translator variables: 49
Translator derived variables: 0
Translator facts: 650
Translator goal facts: 19
Translator mutex groups: 25
Translator total mutex groups size: 625
Translator operators: 1152
Translator axioms: 0
Translator task size: 9911
Translator peak memory: 37884 KB
Writing output... [0.010s CPU, 0.006s wall-clock]
Done! [0.110s CPU, 0.107s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.2286e-05s, 24488 KB] reading input...
[t=0.00322941s, 25532 KB] done reading input!
[t=0.00405348s, 25928 KB] Initializing landmark count heuristic...
[t=0.00408271s, 25928 KB] Generating landmark graph...
[t=0.00415314s, 25928 KB] Building a landmark graph with reasonable orders.
[t=0.00422001s, 26060 KB] Initializing Exploration...
[t=0.00454647s, 26388 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.017864s, 26916 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0179754s, 26916 KB] Landmarks generation time: 0.0138241s
[t=0.0179898s, 26916 KB] Discovered 101 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0180067s, 26916 KB] 659 edges
[t=0.0180166s, 26916 KB] approx. reasonable orders
[t=0.0185863s, 26916 KB] approx. obedient reasonable orders
[t=0.0186157s, 26916 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0186256s, 26916 KB] Landmarks generation time: 0.0145407s
[t=0.018635s, 26916 KB] Discovered 101 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0186428s, 26916 KB] 668 edges
[t=0.0186507s, 26916 KB] Landmark graph generation time: 0.0145748s
[t=0.0186589s, 26916 KB] Landmark graph contains 101 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0186666s, 26916 KB] Landmark graph contains 668 orderings.
[t=0.0190324s, 26916 KB] Simplifying 4560 unary operators... done! [3456 unary operators]
[t=0.0201134s, 26916 KB] time to simplify: 0.00117237s
[t=0.0202841s, 26916 KB] Initializing additive heuristic...
[t=0.0203019s, 26916 KB] Initializing FF heuristic...
[t=0.0203753s, 26916 KB] Building successor generator...done!
[t=0.02073s, 27080 KB] peak memory difference for successor generator creation: 164 KB
[t=0.0207397s, 27080 KB] time for successor generation creation: 0.000315138s
[t=0.0207563s, 27080 KB] Variables: 49
[t=0.0207653s, 27080 KB] FactPairs: 650
[t=0.020774s, 27080 KB] Bytes per state: 20
[t=0.020887s, 27080 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0209288s, 27080 KB] 47 initial landmarks, 19 goal landmarks
[t=0.0209969s, 27080 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0210078s, 27080 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0210168s, 27080 KB] g=0, 1 evaluated, 0 expanded
[t=0.0210395s, 27080 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0210513s, 27080 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0212145s, 27080 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0212285s, 27080 KB] g=2, 5 evaluated, 4 expanded
[t=0.0214614s, 27080 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0214734s, 27080 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.021482s, 27080 KB] g=4, 13 evaluated, 12 expanded
[t=0.0216046s, 27080 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0216172s, 27080 KB] g=5, 16 evaluated, 15 expanded
[t=0.0216607s, 27080 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0216695s, 27080 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0216776s, 27080 KB] g=6, 17 evaluated, 16 expanded
[t=0.0218011s, 27080 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0218104s, 27080 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0218193s, 27080 KB] g=8, 21 evaluated, 20 expanded
[t=0.0218734s, 27080 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0218831s, 27080 KB] g=9, 22 evaluated, 21 expanded
[t=0.0221464s, 27080 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0221565s, 27080 KB] g=12, 31 evaluated, 30 expanded
[t=0.0223648s, 27080 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0223749s, 27080 KB] g=13, 38 evaluated, 37 expanded
[t=0.0226384s, 27080 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0226528s, 27080 KB] g=16, 47 evaluated, 46 expanded
[t=0.0231025s, 27080 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0231129s, 27080 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0231225s, 27080 KB] g=18, 63 evaluated, 62 expanded
[t=0.0233297s, 27080 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0233394s, 27080 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0233479s, 27080 KB] g=20, 70 evaluated, 69 expanded
[t=0.0235706s, 27080 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0235807s, 27080 KB] g=23, 77 evaluated, 76 expanded
[t=0.0236224s, 27080 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0236317s, 27080 KB] g=24, 78 evaluated, 77 expanded
[t=0.0238606s, 27080 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0238792s, 27080 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0238926s, 27080 KB] g=26, 85 evaluated, 84 expanded
[t=0.0240829s, 27080 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0240984s, 27080 KB] g=28, 91 evaluated, 90 expanded
[t=0.0243099s, 27080 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0243234s, 27080 KB] g=30, 98 evaluated, 97 expanded
[t=0.0245602s, 27080 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0245708s, 27080 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.02458s, 27080 KB] g=32, 106 evaluated, 105 expanded
[t=0.0248392s, 27080 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0248489s, 27080 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0248574s, 27080 KB] g=34, 115 evaluated, 114 expanded
[t=0.0251269s, 27080 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0251407s, 27080 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0251491s, 27080 KB] g=36, 124 evaluated, 123 expanded
[t=0.0253894s, 27080 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0253994s, 27080 KB] g=38, 132 evaluated, 131 expanded
[t=0.0256419s, 27080 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0256515s, 27080 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0256603s, 27080 KB] g=40, 140 evaluated, 139 expanded
[t=0.0259153s, 27080 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0259253s, 27080 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0259337s, 27080 KB] g=42, 148 evaluated, 147 expanded
[t=0.0261511s, 27080 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0261611s, 27080 KB] g=43, 155 evaluated, 154 expanded
[t=0.0262042s, 27080 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0262182s, 27080 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0262413s, 27080 KB] g=44, 156 evaluated, 155 expanded
[t=0.0264859s, 27080 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0264955s, 27080 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0265039s, 27080 KB] g=46, 164 evaluated, 163 expanded
[t=0.0267742s, 27080 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0267882s, 27080 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0267975s, 27080 KB] g=48, 173 evaluated, 172 expanded
[t=0.0270064s, 27080 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0270174s, 27080 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0270259s, 27080 KB] g=50, 180 evaluated, 179 expanded
[t=0.0274298s, 27080 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0274429s, 27080 KB] g=53, 194 evaluated, 193 expanded
[t=0.0275092s, 27080 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0275191s, 27080 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0275279s, 27080 KB] g=54, 196 evaluated, 195 expanded
[t=0.0277285s, 27080 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0277385s, 27080 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0277469s, 27080 KB] g=56, 203 evaluated, 202 expanded
[t=0.028271s, 27080 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0282824s, 27080 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0282917s, 27080 KB] g=60, 222 evaluated, 221 expanded
[t=0.0284668s, 27080 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0284793s, 27080 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0284886s, 27080 KB] g=62, 228 evaluated, 227 expanded
[t=0.0288776s, 27080 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0288993s, 27080 KB] g=66, 242 evaluated, 241 expanded
[t=0.0290304s, 27080 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0290423s, 27080 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.029051s, 27080 KB] g=68, 246 evaluated, 245 expanded
[t=0.0302281s, 27080 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0302479s, 27080 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.030257s, 27080 KB] g=76, 287 evaluated, 286 expanded
[t=0.0303488s, 27080 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0303598s, 27080 KB] g=76, 290 evaluated, 289 expanded
[t=0.0304796s, 27080 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0304908s, 27080 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0304994s, 27080 KB] g=78, 294 evaluated, 293 expanded
[t=0.0311765s, 27080 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0311877s, 27080 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0311957s, 27080 KB] g=86, 320 evaluated, 319 expanded
[t=0.0312995s, 27080 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0313154s, 27080 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0313239s, 27080 KB] g=88, 323 evaluated, 322 expanded
[t=0.0320337s, 27080 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0320482s, 27080 KB] g=102, 354 evaluated, 353 expanded
[t=0.0321127s, 27080 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0321221s, 27080 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0321304s, 27080 KB] g=104, 357 evaluated, 356 expanded
[t=0.0322035s, 27080 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0322126s, 27080 KB] g=108, 361 evaluated, 360 expanded
[t=0.0322316s, 27080 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0322405s, 27080 KB] g=109, 362 evaluated, 361 expanded
[t=0.0322563s, 27080 KB] Solution found!
[t=0.0322688s, 27080 KB] Actual search time: 0.0113337s
unstack b1 b21 (1)
put-down b1 (1)
unstack b21 b19 (1)
put-down b21 (1)
unstack b19 b10 (1)
stack b19 b1 (1)
unstack b10 b16 (1)
stack b10 b21 (1)
unstack b16 b13 (1)
put-down b16 (1)
unstack b17 b4 (1)
put-down b17 (1)
unstack b4 b3 (1)
put-down b4 (1)
unstack b22 b9 (1)
put-down b22 (1)
pick-up b16 (1)
stack b16 b9 (1)
pick-up b3 (1)
stack b3 b17 (1)
unstack b13 b14 (1)
put-down b13 (1)
unstack b14 b24 (1)
stack b14 b22 (1)
pick-up b13 (1)
stack b13 b14 (1)
unstack b24 b2 (1)
put-down b24 (1)
unstack b2 b20 (1)
put-down b2 (1)
unstack b20 b7 (1)
put-down b20 (1)
unstack b7 b8 (1)
put-down b7 (1)
pick-up b4 (1)
stack b4 b7 (1)
unstack b8 b15 (1)
put-down b8 (1)
unstack b15 b5 (1)
stack b15 b2 (1)
unstack b5 b6 (1)
put-down b5 (1)
unstack b6 b11 (1)
stack b6 b3 (1)
unstack b11 b23 (1)
stack b11 b10 (1)
unstack b23 b12 (1)
stack b23 b24 (1)
pick-up b8 (1)
stack b8 b23 (1)
unstack b16 b9 (1)
put-down b16 (1)
pick-up b9 (1)
stack b9 b5 (1)
pick-up b16 (1)
stack b16 b9 (1)
unstack b15 b2 (1)
put-down b15 (1)
pick-up b2 (1)
stack b2 b12 (1)
pick-up b15 (1)
stack b15 b2 (1)
unstack b19 b1 (1)
put-down b19 (1)
pick-up b1 (1)
stack b1 b8 (1)
pick-up b19 (1)
stack b19 b1 (1)
unstack b13 b14 (1)
put-down b13 (1)
unstack b14 b22 (1)
put-down b14 (1)
pick-up b22 (1)
stack b22 b11 (1)
pick-up b14 (1)
stack b14 b22 (1)
pick-up b13 (1)
stack b13 b14 (1)
unstack b6 b3 (1)
put-down b6 (1)
unstack b3 b17 (1)
put-down b3 (1)
pick-up b17 (1)
stack b17 b20 (1)
pick-up b3 (1)
stack b3 b17 (1)
pick-up b6 (1)
stack b6 b3 (1)
unstack b19 b1 (1)
put-down b19 (1)
unstack b1 b8 (1)
put-down b1 (1)
pick-up b19 (1)
stack b19 b1 (1)
unstack b8 b23 (1)
put-down b8 (1)
unstack b23 b24 (1)
put-down b23 (1)
pick-up b24 (1)
stack b24 b15 (1)
pick-up b23 (1)
stack b23 b24 (1)
pick-up b8 (1)
stack b8 b23 (1)
unstack b19 b1 (1)
put-down b19 (1)
pick-up b1 (1)
stack b1 b8 (1)
pick-up b19 (1)
stack b19 b1 (1)
[t=0.0322786s, 27080 KB] Plan length: 110 step(s).
[t=0.0322786s, 27080 KB] Plan cost: 110
[t=0.0322786s, 27080 KB] Expanded 362 state(s).
[t=0.0322786s, 27080 KB] Reopened 0 state(s).
[t=0.0322786s, 27080 KB] Evaluated 363 state(s).
[t=0.0322786s, 27080 KB] Evaluations: 726
[t=0.0322786s, 27080 KB] Generated 3441 state(s).
[t=0.0322786s, 27080 KB] Dead ends: 0 state(s).
[t=0.0322786s, 27080 KB] Number of registered states: 363
[t=0.0322786s, 27080 KB] Int hash set load factor: 363/512 = 0.708984
[t=0.0322786s, 27080 KB] Int hash set resizes: 9
[t=0.0322786s, 27080 KB] Search time: 0.011392s
[t=0.0322786s, 27080 KB] Total time: 0.0322786s
Solution found.
Peak memory: 27080 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.19s
