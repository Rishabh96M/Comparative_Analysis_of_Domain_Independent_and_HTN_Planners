INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_32/bws_problem_32_56.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.003s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.021s wall-clock]
3298 relevant atoms
2208 auxiliary atoms
5506 final queue length
9669 total queue pushes
Completing instantiation... [0.050s CPU, 0.043s wall-clock]
Instantiating: [0.070s CPU, 0.066s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.002s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
33 uncovered facts
Choosing groups: [0.010s CPU, 0.002s wall-clock]
Building translation key... [0.010s CPU, 0.001s wall-clock]
Computing fact groups: [0.020s CPU, 0.011s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.001s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.001s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.003s wall-clock]
Translating task: [0.050s CPU, 0.053s wall-clock]
3040 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
64 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.025s wall-clock]
Reordering and filtering variables...
65 of 65 variables necessary.
33 of 65 mutex groups necessary.
2048 of 2048 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.020s CPU, 0.013s wall-clock]
Translator variables: 65
Translator derived variables: 0
Translator facts: 1122
Translator goal facts: 28
Translator mutex groups: 33
Translator total mutex groups size: 1089
Translator operators: 2048
Translator axioms: 0
Translator task size: 17568
Translator peak memory: 42624 KB
Writing output... [0.010s CPU, 0.012s wall-clock]
Done! [0.190s CPU, 0.189s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=1.7285e-05s, 24488 KB] reading input...
[t=0.00609756s, 26784 KB] done reading input!
[t=0.00718209s, 27180 KB] Initializing landmark count heuristic...
[t=0.00722461s, 27180 KB] Generating landmark graph...
[t=0.00733236s, 27312 KB] Building a landmark graph with reasonable orders.
[t=0.00744269s, 27312 KB] Initializing Exploration...
[t=0.00803024s, 27768 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0422274s, 29220 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0423597s, 29220 KB] Landmarks generation time: 0.0350345s
[t=0.0423829s, 29220 KB] Discovered 147 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0423983s, 29220 KB] 1316 edges
[t=0.0424079s, 29220 KB] approx. reasonable orders
[t=0.0424174s, 29220 KB] approx. obedient reasonable orders
[t=0.0424584s, 29220 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0424676s, 29220 KB] Landmarks generation time: 0.0352388s
[t=0.0424772s, 29220 KB] Discovered 147 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0424851s, 29220 KB] 1316 edges
[t=0.0424929s, 29220 KB] Landmark graph generation time: 0.0352751s
[t=0.0425011s, 29220 KB] Landmark graph contains 147 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0425088s, 29220 KB] Landmark graph contains 1316 orderings.
[t=0.0432291s, 29252 KB] Simplifying 8128 unary operators... done! [6144 unary operators]
[t=0.0452617s, 29252 KB] time to simplify: 0.00205206s
[t=0.045394s, 29252 KB] Initializing additive heuristic...
[t=0.0454154s, 29252 KB] Initializing FF heuristic...
[t=0.0454774s, 29252 KB] Building successor generator...done!
[t=0.0458254s, 29432 KB] peak memory difference for successor generator creation: 180 KB
[t=0.0458345s, 29432 KB] time for successor generation creation: 0.000317507s
[t=0.0458485s, 29432 KB] Variables: 65
[t=0.0458563s, 29432 KB] FactPairs: 1122
[t=0.0458641s, 29432 KB] Bytes per state: 32
[t=0.0459472s, 29432 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0459783s, 29432 KB] 64 initial landmarks, 28 goal landmarks
[t=0.046055s, 29432 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 83
[t=0.0460642s, 29432 KB] New best heuristic value for ff(transform = adapt_costs(one)): 58
[t=0.0460722s, 29432 KB] g=0, 1 evaluated, 0 expanded
[t=0.046085s, 29432 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 83
[t=0.0460933s, 29432 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 58
[t=0.0462958s, 29432 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 82
[t=0.0463047s, 29432 KB] New best heuristic value for ff(transform = adapt_costs(one)): 57
[t=0.0463124s, 29432 KB] g=2, 5 evaluated, 4 expanded
[t=0.0464996s, 29432 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 81
[t=0.0465089s, 29432 KB] g=4, 9 evaluated, 8 expanded
[t=0.0470466s, 29432 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 80
[t=0.0470561s, 29432 KB] g=6, 21 evaluated, 20 expanded
[t=0.0475075s, 29432 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 79
[t=0.04753s, 29432 KB] g=8, 31 evaluated, 30 expanded
[t=0.0478446s, 29432 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 78
[t=0.0478569s, 29432 KB] g=10, 37 evaluated, 36 expanded
[t=0.0483488s, 29432 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 77
[t=0.0483611s, 29432 KB] New best heuristic value for ff(transform = adapt_costs(one)): 56
[t=0.0483746s, 29432 KB] g=12, 47 evaluated, 46 expanded
[t=0.0487651s, 29432 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 74
[t=0.0487764s, 29432 KB] New best heuristic value for ff(transform = adapt_costs(one)): 54
[t=0.0487875s, 29432 KB] g=14, 55 evaluated, 54 expanded
[t=0.0491721s, 29432 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 73
[t=0.0491876s, 29432 KB] New best heuristic value for ff(transform = adapt_costs(one)): 53
[t=0.0491997s, 29432 KB] g=16, 63 evaluated, 62 expanded
[t=0.0494969s, 29432 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 71
[t=0.0495277s, 29432 KB] g=16, 69 evaluated, 68 expanded
[t=0.049859s, 29432 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 69
[t=0.0498698s, 29432 KB] New best heuristic value for ff(transform = adapt_costs(one)): 52
[t=0.0498816s, 29432 KB] g=18, 76 evaluated, 75 expanded
[t=0.0503895s, 29432 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 68
[t=0.0504026s, 29432 KB] g=21, 87 evaluated, 86 expanded
[t=0.0508943s, 29432 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 65
[t=0.0509108s, 29432 KB] g=24, 97 evaluated, 96 expanded
[t=0.051297s, 29432 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 64
[t=0.0513177s, 29432 KB] New best heuristic value for ff(transform = adapt_costs(one)): 51
[t=0.051329s, 29432 KB] g=26, 105 evaluated, 104 expanded
[t=0.051662s, 29432 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 63
[t=0.0516803s, 29432 KB] g=28, 112 evaluated, 111 expanded
[t=0.052084s, 29432 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 62
[t=0.0521035s, 29432 KB] g=30, 120 evaluated, 119 expanded
[t=0.0526039s, 29432 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.0526196s, 29432 KB] New best heuristic value for ff(transform = adapt_costs(one)): 50
[t=0.0526311s, 29432 KB] g=32, 129 evaluated, 128 expanded
[t=0.052956s, 29432 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 58
[t=0.052967s, 29432 KB] g=33, 135 evaluated, 134 expanded
[t=0.0530474s, 29432 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 57
[t=0.053057s, 29432 KB] New best heuristic value for ff(transform = adapt_costs(one)): 49
[t=0.053067s, 29432 KB] g=34, 136 evaluated, 135 expanded
[t=0.0533772s, 29432 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0533951s, 29432 KB] g=35, 142 evaluated, 141 expanded
[t=0.0534636s, 29432 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0534733s, 29432 KB] New best heuristic value for ff(transform = adapt_costs(one)): 48
[t=0.0534839s, 29432 KB] g=36, 143 evaluated, 142 expanded
[t=0.0539222s, 29432 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0539333s, 29432 KB] g=38, 152 evaluated, 151 expanded
[t=0.0540911s, 29432 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0541012s, 29432 KB] New best heuristic value for ff(transform = adapt_costs(one)): 47
[t=0.0541109s, 29432 KB] g=38, 155 evaluated, 154 expanded
[t=0.0544921s, 29432 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0545119s, 29432 KB] g=40, 163 evaluated, 162 expanded
[t=0.0549816s, 29432 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0549917s, 29432 KB] New best heuristic value for ff(transform = adapt_costs(one)): 46
[t=0.0550016s, 29432 KB] g=42, 172 evaluated, 171 expanded
[t=0.0554459s, 29432 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0554567s, 29432 KB] New best heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.0554736s, 29432 KB] g=44, 181 evaluated, 180 expanded
[t=0.0561885s, 29432 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.056222s, 29432 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0562371s, 29432 KB] g=46, 191 evaluated, 190 expanded
[t=0.0563737s, 29432 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0563887s, 29432 KB] g=47, 192 evaluated, 191 expanded
[t=0.0565147s, 29432 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0565303s, 29432 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0565413s, 29432 KB] g=48, 193 evaluated, 192 expanded
[t=0.0572937s, 29432 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0573197s, 29432 KB] g=50, 202 evaluated, 201 expanded
[t=0.0579519s, 29432 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0579739s, 29432 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0579831s, 29432 KB] g=52, 212 evaluated, 211 expanded
[t=0.0584953s, 29432 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0585051s, 29432 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.058513s, 29432 KB] g=54, 222 evaluated, 221 expanded
[t=0.0590711s, 29432 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0590821s, 29432 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0590911s, 29432 KB] g=56, 233 evaluated, 232 expanded
[t=0.0595949s, 29432 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0596049s, 29432 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.059613s, 29432 KB] g=58, 243 evaluated, 242 expanded
[t=0.0600532s, 29432 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0600626s, 29432 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0600711s, 29432 KB] g=60, 252 evaluated, 251 expanded
[t=0.0605588s, 29432 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0605699s, 29432 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0605781s, 29432 KB] g=62, 262 evaluated, 261 expanded
[t=0.0610161s, 29432 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.061026s, 29432 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0610342s, 29432 KB] g=64, 271 evaluated, 270 expanded
[t=0.0611955s, 29432 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0612043s, 29432 KB] g=65, 274 evaluated, 273 expanded
[t=0.0618324s, 29432 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0618412s, 29432 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0618489s, 29432 KB] g=68, 288 evaluated, 287 expanded
[t=0.0622874s, 29432 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0623006s, 29432 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0623092s, 29432 KB] g=70, 297 evaluated, 296 expanded
[t=0.0632903s, 29432 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0632998s, 29432 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0633079s, 29432 KB] g=74, 318 evaluated, 317 expanded
[t=0.0636954s, 29432 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0637055s, 29432 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0637137s, 29432 KB] g=76, 326 evaluated, 325 expanded
[t=0.0660225s, 29432 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0660548s, 29432 KB] g=80, 375 evaluated, 374 expanded
[t=0.0663532s, 29432 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0663647s, 29432 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0663735s, 29432 KB] g=82, 381 evaluated, 380 expanded
[t=0.0677481s, 29432 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0677662s, 29432 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0677756s, 29432 KB] g=86, 410 evaluated, 409 expanded
[t=0.0680808s, 29432 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0680945s, 29432 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0681056s, 29432 KB] g=88, 416 evaluated, 415 expanded
[t=0.0692818s, 29432 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0692983s, 29432 KB] g=92, 441 evaluated, 440 expanded
[t=0.0694942s, 29432 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.069512s, 29432 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0695207s, 29432 KB] g=94, 445 evaluated, 444 expanded
[t=0.0758968s, 29432 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0759235s, 29432 KB] g=110, 584 evaluated, 583 expanded
[t=0.0766284s, 29432 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0766448s, 29432 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0766541s, 29432 KB] g=116, 598 evaluated, 597 expanded
[t=0.0822621s, 29432 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0822819s, 29432 KB] g=134, 717 evaluated, 716 expanded
[t=0.0824326s, 29432 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0824424s, 29432 KB] g=134, 720 evaluated, 719 expanded
[t=0.0826447s, 29432 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0826539s, 29432 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0826659s, 29432 KB] g=136, 724 evaluated, 723 expanded
[t=0.084279s, 29432 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0842933s, 29432 KB] g=144, 758 evaluated, 757 expanded
[t=0.0844631s, 29432 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.084476s, 29432 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0845011s, 29432 KB] g=146, 761 evaluated, 760 expanded
[t=0.123689s, 29432 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.123776s, 29432 KB] g=194, 1712 evaluated, 1711 expanded
[t=0.123956s, 29432 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.12399s, 29432 KB] g=196, 1716 evaluated, 1715 expanded
[t=0.12497s, 29432 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.124984s, 29432 KB] g=204, 1745 evaluated, 1744 expanded
[t=0.125058s, 29432 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.125067s, 29432 KB] g=204, 1747 evaluated, 1746 expanded
[t=0.125169s, 29432 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.125178s, 29432 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.125186s, 29432 KB] g=206, 1750 evaluated, 1749 expanded
[t=0.126361s, 29432 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.126373s, 29432 KB] g=222, 1792 evaluated, 1791 expanded
[t=0.126605s, 29432 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.126615s, 29432 KB] g=230, 1802 evaluated, 1801 expanded
[t=0.126755s, 29432 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.126773s, 29432 KB] g=234, 1806 evaluated, 1805 expanded
[t=0.126808s, 29432 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.126832s, 29432 KB] g=235, 1807 evaluated, 1806 expanded
[t=0.126878s, 29432 KB] Solution found!
[t=0.126894s, 29432 KB] Actual search time: 0.0809137s
unstack b13 b8 (1)
put-down b13 (1)
unstack b10 b1 (1)
put-down b10 (1)
unstack b14 b26 (1)
put-down b14 (1)
unstack b26 b23 (1)
put-down b26 (1)
unstack b8 b2 (1)
put-down b8 (1)
unstack b23 b5 (1)
put-down b23 (1)
unstack b5 b18 (1)
stack b5 b23 (1)
unstack b18 b20 (1)
stack b18 b26 (1)
pick-up b10 (1)
stack b10 b18 (1)
unstack b1 b30 (1)
put-down b1 (1)
unstack b30 b9 (1)
put-down b30 (1)
unstack b9 b22 (1)
stack b9 b14 (1)
pick-up b1 (1)
stack b1 b30 (1)
unstack b22 b12 (1)
put-down b22 (1)
unstack b12 b17 (1)
put-down b12 (1)
unstack b17 b6 (1)
stack b17 b1 (1)
unstack b6 b29 (1)
stack b6 b2 (1)
unstack b29 b19 (1)
stack b29 b12 (1)
pick-up b22 (1)
stack b22 b17 (1)
unstack b19 b4 (1)
put-down b19 (1)
unstack b4 b11 (1)
stack b4 b10 (1)
unstack b11 b32 (1)
stack b11 b13 (1)
unstack b32 b15 (1)
stack b32 b20 (1)
unstack b15 b24 (1)
stack b15 b22 (1)
unstack b24 b25 (1)
put-down b24 (1)
unstack b25 b16 (1)
stack b25 b4 (1)
unstack b16 b31 (1)
stack b16 b11 (1)
unstack b31 b27 (1)
stack b31 b32 (1)
pick-up b19 (1)
stack b19 b31 (1)
unstack b27 b28 (1)
stack b27 b5 (1)
pick-up b24 (1)
stack b24 b16 (1)
unstack b28 b21 (1)
stack b28 b8 (1)
unstack b21 b7 (1)
put-down b21 (1)
unstack b7 b3 (1)
put-down b7 (1)
pick-up b21 (1)
stack b21 b3 (1)
unstack b6 b2 (1)
put-down b6 (1)
pick-up b2 (1)
stack b2 b7 (1)
pick-up b6 (1)
stack b6 b2 (1)
unstack b28 b8 (1)
put-down b28 (1)
pick-up b8 (1)
stack b8 b25 (1)
pick-up b28 (1)
stack b28 b8 (1)
unstack b29 b12 (1)
put-down b29 (1)
pick-up b12 (1)
stack b12 b24 (1)
pick-up b29 (1)
stack b29 b12 (1)
unstack b9 b14 (1)
put-down b9 (1)
pick-up b14 (1)
stack b14 b19 (1)
pick-up b9 (1)
stack b9 b14 (1)
unstack b15 b22 (1)
put-down b15 (1)
unstack b22 b17 (1)
put-down b22 (1)
pick-up b15 (1)
stack b15 b22 (1)
unstack b17 b1 (1)
put-down b17 (1)
unstack b1 b30 (1)
put-down b1 (1)
pick-up b30 (1)
stack b30 b28 (1)
pick-up b1 (1)
stack b1 b30 (1)
pick-up b17 (1)
stack b17 b1 (1)
unstack b15 b22 (1)
put-down b15 (1)
pick-up b22 (1)
stack b22 b17 (1)
pick-up b15 (1)
stack b15 b22 (1)
unstack b9 b14 (1)
put-down b9 (1)
unstack b14 b19 (1)
put-down b14 (1)
unstack b19 b31 (1)
put-down b19 (1)
pick-up b14 (1)
stack b14 b19 (1)
pick-up b9 (1)
stack b9 b14 (1)
unstack b31 b32 (1)
put-down b31 (1)
unstack b32 b20 (1)
put-down b32 (1)
pick-up b20 (1)
stack b20 b27 (1)
pick-up b32 (1)
stack b32 b20 (1)
pick-up b31 (1)
stack b31 b32 (1)
unstack b9 b14 (1)
put-down b9 (1)
unstack b14 b19 (1)
put-down b14 (1)
pick-up b19 (1)
stack b19 b31 (1)
pick-up b14 (1)
stack b14 b19 (1)
pick-up b9 (1)
stack b9 b14 (1)
unstack b15 b22 (1)
put-down b15 (1)
unstack b22 b17 (1)
put-down b22 (1)
pick-up b15 (1)
stack b15 b22 (1)
unstack b17 b1 (1)
put-down b17 (1)
unstack b1 b30 (1)
put-down b1 (1)
unstack b30 b28 (1)
put-down b30 (1)
pick-up b1 (1)
stack b1 b30 (1)
pick-up b17 (1)
stack b17 b1 (1)
unstack b15 b22 (1)
put-down b15 (1)
pick-up b22 (1)
stack b22 b17 (1)
pick-up b15 (1)
stack b15 b22 (1)
unstack b28 b8 (1)
put-down b28 (1)
unstack b8 b25 (1)
put-down b8 (1)
unstack b25 b4 (1)
put-down b25 (1)
pick-up b8 (1)
stack b8 b25 (1)
pick-up b28 (1)
stack b28 b8 (1)
unstack b4 b10 (1)
put-down b4 (1)
unstack b10 b18 (1)
put-down b10 (1)
pick-up b4 (1)
stack b4 b10 (1)
unstack b18 b26 (1)
put-down b18 (1)
pick-up b26 (1)
stack b26 b9 (1)
pick-up b18 (1)
stack b18 b26 (1)
unstack b4 b10 (1)
put-down b4 (1)
pick-up b10 (1)
stack b10 b18 (1)
pick-up b4 (1)
stack b4 b10 (1)
unstack b28 b8 (1)
put-down b28 (1)
unstack b8 b25 (1)
put-down b8 (1)
pick-up b25 (1)
stack b25 b4 (1)
pick-up b8 (1)
stack b8 b25 (1)
pick-up b28 (1)
stack b28 b8 (1)
unstack b15 b22 (1)
put-down b15 (1)
unstack b22 b17 (1)
put-down b22 (1)
unstack b17 b1 (1)
put-down b17 (1)
pick-up b22 (1)
stack b22 b17 (1)
pick-up b15 (1)
stack b15 b22 (1)
unstack b1 b30 (1)
put-down b1 (1)
pick-up b30 (1)
stack b30 b28 (1)
pick-up b1 (1)
stack b1 b30 (1)
unstack b15 b22 (1)
put-down b15 (1)
unstack b22 b17 (1)
put-down b22 (1)
pick-up b15 (1)
stack b15 b22 (1)
pick-up b17 (1)
stack b17 b1 (1)
unstack b15 b22 (1)
put-down b15 (1)
pick-up b22 (1)
stack b22 b17 (1)
pick-up b15 (1)
stack b15 b22 (1)
[t=0.126905s, 29432 KB] Plan length: 236 step(s).
[t=0.126905s, 29432 KB] Plan cost: 236
[t=0.126905s, 29432 KB] Expanded 1807 state(s).
[t=0.126905s, 29432 KB] Reopened 0 state(s).
[t=0.126905s, 29432 KB] Evaluated 1808 state(s).
[t=0.126905s, 29432 KB] Evaluations: 3616
[t=0.126905s, 29432 KB] Generated 16817 state(s).
[t=0.126905s, 29432 KB] Dead ends: 0 state(s).
[t=0.126905s, 29432 KB] Number of registered states: 1808
[t=0.126905s, 29432 KB] Int hash set load factor: 1808/2048 = 0.882812
[t=0.126905s, 29432 KB] Int hash set resizes: 11
[t=0.126905s, 29432 KB] Search time: 0.0809578s
[t=0.126905s, 29432 KB] Total time: 0.126905s
Solution found.
Peak memory: 29432 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.37s
