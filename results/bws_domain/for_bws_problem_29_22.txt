INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_29/bws_problem_29_22.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.000s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.017s wall-clock]
2728 relevant atoms
1827 auxiliary atoms
4555 final queue length
7983 total queue pushes
Completing instantiation... [0.030s CPU, 0.029s wall-clock]
Instantiating: [0.050s CPU, 0.047s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.010s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
30 uncovered facts
Choosing groups: [0.000s CPU, 0.002s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.001s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.001s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.002s wall-clock]
Translating task: [0.050s CPU, 0.049s wall-clock]
2494 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
58 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.020s wall-clock]
Reordering and filtering variables...
59 of 59 variables necessary.
30 of 59 mutex groups necessary.
1682 of 1682 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.011s wall-clock]
Translator variables: 59
Translator derived variables: 0
Translator facts: 930
Translator goal facts: 22
Translator mutex groups: 30
Translator total mutex groups size: 900
Translator operators: 1682
Translator axioms: 0
Translator task size: 14439
Translator peak memory: 40824 KB
Writing output... [0.010s CPU, 0.009s wall-clock]
Done! [0.160s CPU, 0.153s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.3572e-05s, 24488 KB] reading input...
[t=0.00515043s, 26220 KB] done reading input!
[t=0.00612849s, 26616 KB] Initializing landmark count heuristic...
[t=0.00617171s, 26616 KB] Generating landmark graph...
[t=0.00626456s, 26748 KB] Building a landmark graph with reasonable orders.
[t=0.00635626s, 26748 KB] Initializing Exploration...
[t=0.00681883s, 27200 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0287033s, 27860 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0289883s, 27860 KB] Landmarks generation time: 0.0227424s
[t=0.0290235s, 27860 KB] Discovered 119 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0290472s, 27860 KB] 447 edges
[t=0.0290627s, 27860 KB] approx. reasonable orders
[t=0.0312689s, 27860 KB] approx. obedient reasonable orders
[t=0.0313284s, 27860 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0313392s, 27860 KB] Landmarks generation time: 0.0251642s
[t=0.0313493s, 27860 KB] Discovered 119 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0313578s, 27860 KB] 464 edges
[t=0.0313663s, 27860 KB] Landmark graph generation time: 0.0252011s
[t=0.0313743s, 27860 KB] Landmark graph contains 119 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0313819s, 27860 KB] Landmark graph contains 464 orderings.
[t=0.0319771s, 27880 KB] Simplifying 6670 unary operators... done! [5046 unary operators]
[t=0.0335714s, 28012 KB] time to simplify: 0.0016956s
[t=0.0337666s, 28012 KB] Initializing additive heuristic...
[t=0.0337846s, 28012 KB] Initializing FF heuristic...
[t=0.0338373s, 28012 KB] Building successor generator...done!
[t=0.0341553s, 28012 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0341661s, 28012 KB] time for successor generation creation: 0.00028489s
[t=0.034181s, 28012 KB] Variables: 59
[t=0.0341899s, 28012 KB] FactPairs: 930
[t=0.0341981s, 28012 KB] Bytes per state: 24
[t=0.0343162s, 28012 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0343494s, 28012 KB] 58 initial landmarks, 22 goal landmarks
[t=0.0344232s, 28012 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 61
[t=0.0344321s, 28012 KB] New best heuristic value for ff(transform = adapt_costs(one)): 47
[t=0.0344403s, 28012 KB] g=0, 1 evaluated, 0 expanded
[t=0.0344537s, 28012 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 61
[t=0.0344621s, 28012 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 47
[t=0.0347528s, 28012 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 60
[t=0.0347624s, 28012 KB] New best heuristic value for ff(transform = adapt_costs(one)): 46
[t=0.0347704s, 28012 KB] g=2, 8 evaluated, 7 expanded
[t=0.0350088s, 28012 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.0350177s, 28012 KB] New best heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0350256s, 28012 KB] g=4, 14 evaluated, 13 expanded
[t=0.0352645s, 28012 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 58
[t=0.0352736s, 28012 KB] g=6, 20 evaluated, 19 expanded
[t=0.0355946s, 28012 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 57
[t=0.0356054s, 28012 KB] g=8, 28 evaluated, 27 expanded
[t=0.0360404s, 28012 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0360511s, 28012 KB] g=10, 39 evaluated, 38 expanded
[t=0.0366803s, 28012 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0366902s, 28012 KB] New best heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.0367062s, 28012 KB] g=12, 55 evaluated, 54 expanded
[t=0.0370422s, 28012 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0370534s, 28012 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0370626s, 28012 KB] g=14, 63 evaluated, 62 expanded
[t=0.037433s, 28012 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0374445s, 28012 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0374677s, 28012 KB] g=16, 72 evaluated, 71 expanded
[t=0.0378329s, 28012 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0378425s, 28012 KB] g=18, 81 evaluated, 80 expanded
[t=0.0378935s, 28012 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0379029s, 28012 KB] g=18, 82 evaluated, 81 expanded
[t=0.0384615s, 28012 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0384753s, 28012 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0384839s, 28012 KB] g=20, 96 evaluated, 95 expanded
[t=0.0388416s, 28012 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0388573s, 28012 KB] g=22, 105 evaluated, 104 expanded
[t=0.0395593s, 28012 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0395756s, 28012 KB] g=26, 122 evaluated, 121 expanded
[t=0.0399186s, 28012 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0399314s, 28012 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0399402s, 28012 KB] g=28, 130 evaluated, 129 expanded
[t=0.0402608s, 28012 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0402701s, 28012 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0402782s, 28012 KB] g=30, 138 evaluated, 137 expanded
[t=0.0405673s, 28012 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0405784s, 28012 KB] g=33, 145 evaluated, 144 expanded
[t=0.0406331s, 28012 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.040642s, 28012 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0406509s, 28012 KB] g=34, 146 evaluated, 145 expanded
[t=0.0410083s, 28012 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0410198s, 28012 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0410287s, 28012 KB] g=36, 154 evaluated, 153 expanded
[t=0.0413144s, 28012 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0413243s, 28012 KB] g=38, 161 evaluated, 160 expanded
[t=0.0413764s, 28012 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0413856s, 28012 KB] g=38, 162 evaluated, 161 expanded
[t=0.0418905s, 28012 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0419003s, 28012 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0419085s, 28012 KB] g=40, 175 evaluated, 174 expanded
[t=0.0422634s, 28012 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0422724s, 28012 KB] g=43, 184 evaluated, 183 expanded
[t=0.0432059s, 28012 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0432192s, 28012 KB] g=46, 207 evaluated, 206 expanded
[t=0.0444246s, 28012 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0444379s, 28012 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0444479s, 28012 KB] g=48, 238 evaluated, 237 expanded
[t=0.0453647s, 28012 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0453817s, 28012 KB] g=52, 261 evaluated, 260 expanded
[t=0.0455853s, 28012 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0455967s, 28012 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0456054s, 28012 KB] g=54, 266 evaluated, 265 expanded
[t=0.0479757s, 28012 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0479869s, 28012 KB] g=64, 330 evaluated, 329 expanded
[t=0.0542607s, 28012 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0542964s, 28012 KB] g=80, 492 evaluated, 491 expanded
[t=0.0543615s, 28012 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0543728s, 28012 KB] g=81, 493 evaluated, 492 expanded
[t=0.0544279s, 28012 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0544372s, 28012 KB] g=82, 494 evaluated, 493 expanded
[t=0.0548135s, 28012 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0548234s, 28012 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0548319s, 28012 KB] g=84, 503 evaluated, 502 expanded
[t=0.0549219s, 28012 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0549311s, 28012 KB] g=85, 505 evaluated, 504 expanded
[t=0.0549825s, 28012 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0549922s, 28012 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0550005s, 28012 KB] g=86, 506 evaluated, 505 expanded
[t=0.0553652s, 28012 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0553768s, 28012 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0553876s, 28012 KB] g=88, 514 evaluated, 513 expanded
[t=0.0557119s, 28012 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0557228s, 28012 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0557316s, 28012 KB] g=90, 522 evaluated, 521 expanded
[t=0.0560103s, 28012 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0560208s, 28012 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0560303s, 28012 KB] g=92, 529 evaluated, 528 expanded
[t=0.0560821s, 28012 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0560917s, 28012 KB] g=93, 530 evaluated, 529 expanded
[t=0.0561417s, 28012 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0561509s, 28012 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0561591s, 28012 KB] g=94, 531 evaluated, 530 expanded
[t=0.0563976s, 28012 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0564069s, 28012 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0564153s, 28012 KB] g=96, 537 evaluated, 536 expanded
[t=0.0566519s, 28012 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0566618s, 28012 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0566756s, 28012 KB] g=98, 543 evaluated, 542 expanded
[t=0.0576453s, 28012 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0576626s, 28012 KB] g=102, 568 evaluated, 567 expanded
[t=0.0578581s, 28012 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0578692s, 28012 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0578788s, 28012 KB] g=104, 573 evaluated, 572 expanded
[t=0.0601269s, 28012 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0601436s, 28012 KB] g=112, 636 evaluated, 635 expanded
[t=0.0602644s, 28012 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0602772s, 28012 KB] g=112, 639 evaluated, 638 expanded
[t=0.0604173s, 28012 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0604266s, 28012 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0604356s, 28012 KB] g=114, 643 evaluated, 642 expanded
[t=0.0618888s, 28012 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0619016s, 28012 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0619104s, 28012 KB] g=126, 688 evaluated, 687 expanded
[t=0.0621901s, 28012 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0621998s, 28012 KB] g=130, 697 evaluated, 696 expanded
[t=0.062299s, 28012 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0623078s, 28012 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0623159s, 28012 KB] g=132, 700 evaluated, 699 expanded
[t=0.0630951s, 28012 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0631042s, 28012 KB] g=146, 729 evaluated, 728 expanded
[t=0.0631795s, 28012 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0631885s, 28012 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0631966s, 28012 KB] g=148, 732 evaluated, 731 expanded
[t=0.0632812s, 28012 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.06329s, 28012 KB] g=152, 736 evaluated, 735 expanded
[t=0.0633102s, 28012 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0633187s, 28012 KB] g=153, 737 evaluated, 736 expanded
[t=0.0633356s, 28012 KB] Solution found!
[t=0.0633474s, 28012 KB] Actual search time: 0.0289952s
unstack b27 b18 (1)
put-down b27 (1)
unstack b4 b23 (1)
put-down b4 (1)
unstack b23 b14 (1)
put-down b23 (1)
unstack b14 b25 (1)
put-down b14 (1)
unstack b28 b1 (1)
put-down b28 (1)
unstack b9 b11 (1)
stack b9 b25 (1)
unstack b11 b22 (1)
put-down b11 (1)
unstack b22 b26 (1)
stack b22 b11 (1)
unstack b26 b5 (1)
stack b26 b14 (1)
unstack b5 b8 (1)
put-down b5 (1)
pick-up b1 (1)
stack b1 b28 (1)
unstack b18 b29 (1)
put-down b18 (1)
unstack b29 b16 (1)
stack b29 b1 (1)
pick-up b16 (1)
stack b16 b20 (1)
pick-up b18 (1)
stack b18 b29 (1)
unstack b24 b13 (1)
put-down b24 (1)
unstack b13 b21 (1)
stack b13 b5 (1)
unstack b21 b10 (1)
stack b21 b9 (1)
pick-up b23 (1)
stack b23 b10 (1)
pick-up b24 (1)
stack b24 b13 (1)
unstack b23 b10 (1)
put-down b23 (1)
unstack b10 b7 (1)
put-down b10 (1)
pick-up b23 (1)
stack b23 b10 (1)
pick-up b7 (1)
stack b7 b23 (1)
unstack b26 b14 (1)
put-down b26 (1)
pick-up b14 (1)
stack b14 b21 (1)
pick-up b26 (1)
stack b26 b14 (1)
unstack b18 b29 (1)
put-down b18 (1)
unstack b29 b1 (1)
put-down b29 (1)
unstack b1 b28 (1)
put-down b1 (1)
pick-up b29 (1)
stack b29 b1 (1)
pick-up b18 (1)
stack b18 b29 (1)
unstack b26 b14 (1)
put-down b26 (1)
unstack b14 b21 (1)
put-down b14 (1)
pick-up b26 (1)
stack b26 b14 (1)
unstack b21 b9 (1)
put-down b21 (1)
unstack b9 b25 (1)
put-down b9 (1)
pick-up b21 (1)
stack b21 b9 (1)
unstack b25 b6 (1)
put-down b25 (1)
unstack b6 b17 (1)
stack b6 b22 (1)
unstack b17 b19 (1)
stack b17 b24 (1)
unstack b19 b2 (1)
put-down b19 (1)
unstack b2 b12 (1)
stack b2 b26 (1)
unstack b12 b3 (1)
stack b12 b18 (1)
pick-up b8 (1)
stack b8 b12 (1)
unstack b3 b15 (1)
put-down b3 (1)
pick-up b15 (1)
stack b15 b7 (1)
pick-up b25 (1)
stack b25 b6 (1)
pick-up b28 (1)
stack b28 b19 (1)
unstack b21 b9 (1)
put-down b21 (1)
pick-up b9 (1)
stack b9 b25 (1)
pick-up b21 (1)
stack b21 b9 (1)
unstack b2 b26 (1)
put-down b2 (1)
unstack b26 b14 (1)
put-down b26 (1)
pick-up b14 (1)
stack b14 b21 (1)
pick-up b26 (1)
stack b26 b14 (1)
pick-up b2 (1)
stack b2 b26 (1)
unstack b15 b7 (1)
put-down b15 (1)
unstack b7 b23 (1)
put-down b7 (1)
pick-up b15 (1)
stack b15 b7 (1)
unstack b23 b10 (1)
put-down b23 (1)
pick-up b10 (1)
stack b10 b3 (1)
pick-up b23 (1)
stack b23 b10 (1)
unstack b15 b7 (1)
put-down b15 (1)
pick-up b7 (1)
stack b7 b23 (1)
pick-up b15 (1)
stack b15 b7 (1)
unstack b8 b12 (1)
put-down b8 (1)
unstack b12 b18 (1)
put-down b12 (1)
pick-up b8 (1)
stack b8 b12 (1)
unstack b18 b29 (1)
put-down b18 (1)
unstack b29 b1 (1)
put-down b29 (1)
pick-up b1 (1)
stack b1 b28 (1)
pick-up b29 (1)
stack b29 b1 (1)
pick-up b18 (1)
stack b18 b29 (1)
unstack b8 b12 (1)
put-down b8 (1)
pick-up b12 (1)
stack b12 b18 (1)
pick-up b8 (1)
stack b8 b12 (1)
[t=0.0633568s, 28012 KB] Plan length: 154 step(s).
[t=0.0633568s, 28012 KB] Plan cost: 154
[t=0.0633568s, 28012 KB] Expanded 737 state(s).
[t=0.0633568s, 28012 KB] Reopened 0 state(s).
[t=0.0633568s, 28012 KB] Evaluated 738 state(s).
[t=0.0633568s, 28012 KB] Evaluations: 1476
[t=0.0633568s, 28012 KB] Generated 8638 state(s).
[t=0.0633568s, 28012 KB] Dead ends: 0 state(s).
[t=0.0633568s, 28012 KB] Number of registered states: 738
[t=0.0633568s, 28012 KB] Int hash set load factor: 738/1024 = 0.720703
[t=0.0633568s, 28012 KB] Int hash set resizes: 10
[t=0.0633568s, 28012 KB] Search time: 0.0290411s
[t=0.0633568s, 28012 KB] Total time: 0.0633568s
Solution found.
Peak memory: 28012 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.26s
