INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_32/bws_problem_32_61.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.000s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.019s wall-clock]
3298 relevant atoms
2208 auxiliary atoms
5506 final queue length
9673 total queue pushes
Completing instantiation... [0.040s CPU, 0.041s wall-clock]
Instantiating: [0.060s CPU, 0.062s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.002s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
33 uncovered facts
Choosing groups: [0.000s CPU, 0.002s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.010s CPU, 0.011s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.001s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.002s wall-clock]
Translating task: [0.050s CPU, 0.052s wall-clock]
3040 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
64 propositions removed
Detecting unreachable propositions: [0.030s CPU, 0.025s wall-clock]
Reordering and filtering variables...
65 of 65 variables necessary.
33 of 65 mutex groups necessary.
2048 of 2048 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.013s wall-clock]
Translator variables: 65
Translator derived variables: 0
Translator facts: 1122
Translator goal facts: 29
Translator mutex groups: 33
Translator total mutex groups size: 1089
Translator operators: 2048
Translator axioms: 0
Translator task size: 17569
Translator peak memory: 42752 KB
Writing output... [0.020s CPU, 0.011s wall-clock]
Done! [0.180s CPU, 0.179s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=1.8579e-05s, 24488 KB] reading input...
[t=0.00617057s, 26784 KB] done reading input!
[t=0.00733696s, 27180 KB] Initializing landmark count heuristic...
[t=0.00740176s, 27180 KB] Generating landmark graph...
[t=0.00755724s, 27312 KB] Building a landmark graph with reasonable orders.
[t=0.00767954s, 27312 KB] Initializing Exploration...
[t=0.00828875s, 27768 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0396288s, 28692 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0397933s, 28692 KB] Landmarks generation time: 0.0322475s
[t=0.0398205s, 28692 KB] Discovered 143 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0398439s, 28692 KB] 646 edges
[t=0.0398539s, 28692 KB] approx. reasonable orders
[t=0.0406061s, 28692 KB] approx. obedient reasonable orders
[t=0.0406543s, 28692 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0406638s, 28692 KB] Landmarks generation time: 0.0332596s
[t=0.0406735s, 28692 KB] Discovered 143 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0406813s, 28692 KB] 652 edges
[t=0.0406892s, 28692 KB] Landmark graph generation time: 0.0332941s
[t=0.0406974s, 28692 KB] Landmark graph contains 143 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0407051s, 28692 KB] Landmark graph contains 652 orderings.
[t=0.0413682s, 28724 KB] Simplifying 8128 unary operators... done! [6144 unary operators]
[t=0.0434109s, 28856 KB] time to simplify: 0.00206102s
[t=0.0435401s, 28856 KB] Initializing additive heuristic...
[t=0.04356s, 28856 KB] Initializing FF heuristic...
[t=0.0436109s, 28856 KB] Building successor generator...done!
[t=0.043971s, 28856 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0439799s, 28856 KB] time for successor generation creation: 0.000331381s
[t=0.043993s, 28856 KB] Variables: 65
[t=0.0440009s, 28856 KB] FactPairs: 1122
[t=0.0440088s, 28856 KB] Bytes per state: 32
[t=0.0441007s, 28856 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0441343s, 28856 KB] 64 initial landmarks, 29 goal landmarks
[t=0.0442377s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 79
[t=0.0442471s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 58
[t=0.0442589s, 28856 KB] g=0, 1 evaluated, 0 expanded
[t=0.0442735s, 28856 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 79
[t=0.0442817s, 28856 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 58
[t=0.0447459s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 57
[t=0.0447554s, 28856 KB] g=2, 10 evaluated, 9 expanded
[t=0.0448129s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 78
[t=0.044822s, 28856 KB] g=2, 11 evaluated, 10 expanded
[t=0.0453953s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 77
[t=0.045407s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 56
[t=0.0454161s, 28856 KB] g=4, 23 evaluated, 22 expanded
[t=0.0456991s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 76
[t=0.045708s, 28856 KB] g=6, 29 evaluated, 28 expanded
[t=0.0458115s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 75
[t=0.0458202s, 28856 KB] g=7, 31 evaluated, 30 expanded
[t=0.046204s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 74
[t=0.0462137s, 28856 KB] g=9, 39 evaluated, 38 expanded
[t=0.0471117s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 73
[t=0.0471233s, 28856 KB] g=12, 58 evaluated, 57 expanded
[t=0.0480149s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 71
[t=0.0480276s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 55
[t=0.0480364s, 28856 KB] g=14, 77 evaluated, 76 expanded
[t=0.0484589s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 70
[t=0.0484691s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 54
[t=0.048481s, 28856 KB] g=16, 86 evaluated, 85 expanded
[t=0.048944s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 69
[t=0.0489534s, 28856 KB] g=18, 96 evaluated, 95 expanded
[t=0.0491626s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 67
[t=0.0491717s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 53
[t=0.0491797s, 28856 KB] g=18, 100 evaluated, 99 expanded
[t=0.0496077s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 64
[t=0.0496175s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 52
[t=0.0496254s, 28856 KB] g=20, 109 evaluated, 108 expanded
[t=0.0499527s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 63
[t=0.0499622s, 28856 KB] g=21, 116 evaluated, 115 expanded
[t=0.0505329s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 62
[t=0.050544s, 28856 KB] g=24, 128 evaluated, 127 expanded
[t=0.0508909s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 51
[t=0.0509004s, 28856 KB] g=24, 135 evaluated, 134 expanded
[t=0.0515509s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 61
[t=0.0515624s, 28856 KB] g=26, 149 evaluated, 148 expanded
[t=0.0520432s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 60
[t=0.0520538s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 50
[t=0.0520619s, 28856 KB] g=28, 159 evaluated, 158 expanded
[t=0.0531722s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.0531874s, 28856 KB] g=31, 182 evaluated, 181 expanded
[t=0.0540822s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0540971s, 28856 KB] g=34, 201 evaluated, 200 expanded
[t=0.0546341s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0546482s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 49
[t=0.054657s, 28856 KB] g=36, 212 evaluated, 211 expanded
[t=0.0551354s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0551482s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 48
[t=0.0551569s, 28856 KB] g=38, 222 evaluated, 221 expanded
[t=0.0582283s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0582462s, 28856 KB] g=44, 289 evaluated, 288 expanded
[t=0.0588898s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0589072s, 28856 KB] g=46, 302 evaluated, 301 expanded
[t=0.0593897s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0594003s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 47
[t=0.0594088s, 28856 KB] g=48, 312 evaluated, 311 expanded
[t=0.0598435s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0598534s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 46
[t=0.0598614s, 28856 KB] g=50, 321 evaluated, 320 expanded
[t=0.0603077s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0603284s, 28856 KB] g=52, 330 evaluated, 329 expanded
[t=0.0604402s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0604493s, 28856 KB] g=52, 332 evaluated, 331 expanded
[t=0.0611861s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0611959s, 28856 KB] g=54, 348 evaluated, 347 expanded
[t=0.0616115s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0616208s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.0616295s, 28856 KB] g=56, 357 evaluated, 356 expanded
[t=0.0621029s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0621129s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.062122s, 28856 KB] g=58, 367 evaluated, 366 expanded
[t=0.0625643s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0625756s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0625837s, 28856 KB] g=60, 376 evaluated, 375 expanded
[t=0.0642902s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0643035s, 28856 KB] g=64, 413 evaluated, 412 expanded
[t=0.0646764s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0646859s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0646935s, 28856 KB] g=66, 421 evaluated, 420 expanded
[t=0.0666993s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0667113s, 28856 KB] g=71, 464 evaluated, 463 expanded
[t=0.0676003s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0676289s, 28856 KB] g=74, 483 evaluated, 482 expanded
[t=0.0680611s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0680715s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0680798s, 28856 KB] g=76, 492 evaluated, 491 expanded
[t=0.0685075s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0685166s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0685242s, 28856 KB] g=78, 501 evaluated, 500 expanded
[t=0.0708408s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0708552s, 28856 KB] g=84, 551 evaluated, 550 expanded
[t=0.0712805s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0713043s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0713147s, 28856 KB] g=86, 560 evaluated, 559 expanded
[t=0.0716584s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0716721s, 28856 KB] g=86, 567 evaluated, 566 expanded
[t=0.0720559s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0720722s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0720805s, 28856 KB] g=88, 575 evaluated, 574 expanded
[t=0.0850143s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0851009s, 28856 KB] g=100, 827 evaluated, 826 expanded
[t=0.0866385s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0866505s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0866592s, 28856 KB] g=106, 860 evaluated, 859 expanded
[t=0.102442s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.102527s, 28856 KB] g=120, 1205 evaluated, 1204 expanded
[t=0.10287s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.102882s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.102891s, 28856 KB] g=122, 1212 evaluated, 1211 expanded
[t=0.103757s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.10379s, 28856 KB] g=126, 1230 evaluated, 1229 expanded
[t=0.104076s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.104089s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.104097s, 28856 KB] g=128, 1236 evaluated, 1235 expanded
[t=0.155808s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.155974s, 28856 KB] g=166, 2347 evaluated, 2346 expanded
[t=0.156443s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.156454s, 28856 KB] g=168, 2358 evaluated, 2357 expanded
[t=0.156826s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.156837s, 28856 KB] g=170, 2367 evaluated, 2366 expanded
[t=0.157205s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.157217s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.157225s, 28856 KB] g=172, 2376 evaluated, 2375 expanded
[t=0.157501s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.157518s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.157529s, 28856 KB] g=174, 2383 evaluated, 2382 expanded
[t=0.157872s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.157884s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.157892s, 28856 KB] g=176, 2391 evaluated, 2390 expanded
[t=0.158141s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.158151s, 28856 KB] g=176, 2397 evaluated, 2396 expanded
[t=0.158465s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.158482s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.15849s, 28856 KB] g=178, 2404 evaluated, 2403 expanded
[t=0.158655s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.158664s, 28856 KB] g=179, 2408 evaluated, 2407 expanded
[t=0.158712s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.158721s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.158729s, 28856 KB] g=180, 2409 evaluated, 2408 expanded
[t=0.159246s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.159288s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.159297s, 28856 KB] g=184, 2422 evaluated, 2421 expanded
[t=0.159535s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.159545s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.159553s, 28856 KB] g=186, 2428 evaluated, 2427 expanded
[t=0.160646s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.16066s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.160668s, 28856 KB] g=192, 2457 evaluated, 2456 expanded
[t=0.161285s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.161296s, 28856 KB] g=192, 2473 evaluated, 2472 expanded
[t=0.161879s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.161896s, 28856 KB] g=196, 2489 evaluated, 2488 expanded
[t=0.162046s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.162055s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.162063s, 28856 KB] g=198, 2493 evaluated, 2492 expanded
[t=0.166129s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.166144s, 28856 KB] g=214, 2610 evaluated, 2609 expanded
[t=0.166441s, 28856 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.166458s, 28856 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.166474s, 28856 KB] g=220, 2617 evaluated, 2616 expanded
[t=0.18057s, 28992 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.18061s, 28992 KB] g=218, 3048 evaluated, 3047 expanded
[t=0.181792s, 28992 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.181805s, 28992 KB] g=226, 3086 evaluated, 3085 expanded
[t=0.18207s, 28992 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.182081s, 28992 KB] g=230, 3095 evaluated, 3094 expanded
[t=0.182174s, 28992 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.182183s, 28992 KB] g=232, 3098 evaluated, 3097 expanded
[t=0.183102s, 28992 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.183114s, 28992 KB] g=246, 3132 evaluated, 3131 expanded
[t=0.183185s, 28992 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.183211s, 28992 KB] g=248, 3135 evaluated, 3134 expanded
[t=0.183295s, 28992 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.183311s, 28992 KB] g=252, 3139 evaluated, 3138 expanded
[t=0.183332s, 28992 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.183341s, 28992 KB] g=253, 3140 evaluated, 3139 expanded
[t=0.183359s, 28992 KB] Solution found!
[t=0.183381s, 28992 KB] Actual search time: 0.139243s
unstack b10 b7 (1)
stack b10 b27 (1)
pick-up b16 (1)
stack b16 b10 (1)
unstack b17 b14 (1)
put-down b17 (1)
unstack b14 b20 (1)
put-down b14 (1)
unstack b20 b28 (1)
put-down b20 (1)
unstack b29 b26 (1)
put-down b29 (1)
unstack b26 b23 (1)
stack b26 b25 (1)
unstack b28 b8 (1)
put-down b28 (1)
unstack b8 b5 (1)
stack b8 b29 (1)
unstack b5 b30 (1)
stack b5 b8 (1)
unstack b30 b32 (1)
put-down b30 (1)
pick-up b17 (1)
stack b17 b32 (1)
unstack b7 b3 (1)
put-down b7 (1)
pick-up b3 (1)
stack b3 b11 (1)
unstack b17 b32 (1)
put-down b17 (1)
unstack b32 b22 (1)
put-down b32 (1)
unstack b22 b2 (1)
stack b22 b5 (1)
pick-up b17 (1)
stack b17 b32 (1)
pick-up b7 (1)
stack b7 b2 (1)
unstack b16 b10 (1)
put-down b16 (1)
unstack b10 b27 (1)
put-down b10 (1)
unstack b27 b31 (1)
stack b27 b3 (1)
pick-up b10 (1)
stack b10 b27 (1)
pick-up b16 (1)
stack b16 b10 (1)
unstack b31 b18 (1)
stack b31 b16 (1)
unstack b18 b13 (1)
put-down b18 (1)
pick-up b20 (1)
stack b20 b18 (1)
unstack b13 b12 (1)
put-down b13 (1)
unstack b12 b1 (1)
stack b12 b26 (1)
pick-up b1 (1)
stack b1 b17 (1)
unstack b20 b18 (1)
put-down b20 (1)
pick-up b18 (1)
stack b18 b1 (1)
pick-up b20 (1)
stack b20 b18 (1)
unstack b7 b2 (1)
put-down b7 (1)
unstack b2 b4 (1)
put-down b2 (1)
unstack b4 b21 (1)
put-down b4 (1)
pick-up b2 (1)
stack b2 b4 (1)
pick-up b21 (1)
stack b21 b23 (1)
pick-up b7 (1)
stack b7 b2 (1)
unstack b12 b26 (1)
put-down b12 (1)
unstack b26 b25 (1)
put-down b26 (1)
pick-up b25 (1)
stack b25 b21 (1)
pick-up b26 (1)
stack b26 b25 (1)
pick-up b12 (1)
stack b12 b26 (1)
unstack b22 b5 (1)
put-down b22 (1)
unstack b5 b8 (1)
put-down b5 (1)
pick-up b22 (1)
stack b22 b5 (1)
unstack b8 b29 (1)
put-down b8 (1)
pick-up b29 (1)
stack b29 b31 (1)
pick-up b8 (1)
stack b8 b29 (1)
unstack b22 b5 (1)
put-down b22 (1)
pick-up b5 (1)
stack b5 b8 (1)
pick-up b22 (1)
stack b22 b5 (1)
unstack b20 b18 (1)
put-down b20 (1)
unstack b18 b1 (1)
put-down b18 (1)
pick-up b20 (1)
stack b20 b18 (1)
unstack b1 b17 (1)
put-down b1 (1)
unstack b17 b32 (1)
put-down b17 (1)
pick-up b32 (1)
stack b32 b12 (1)
pick-up b17 (1)
stack b17 b32 (1)
pick-up b1 (1)
stack b1 b17 (1)
unstack b20 b18 (1)
put-down b20 (1)
pick-up b18 (1)
stack b18 b1 (1)
pick-up b20 (1)
stack b20 b18 (1)
unstack b22 b5 (1)
put-down b22 (1)
unstack b5 b8 (1)
put-down b5 (1)
pick-up b22 (1)
stack b22 b5 (1)
unstack b8 b29 (1)
put-down b8 (1)
unstack b29 b31 (1)
put-down b29 (1)
unstack b31 b16 (1)
put-down b31 (1)
pick-up b29 (1)
stack b29 b31 (1)
pick-up b8 (1)
stack b8 b29 (1)
unstack b22 b5 (1)
put-down b22 (1)
pick-up b5 (1)
stack b5 b8 (1)
pick-up b22 (1)
stack b22 b5 (1)
unstack b16 b10 (1)
put-down b16 (1)
unstack b10 b27 (1)
put-down b10 (1)
pick-up b16 (1)
stack b16 b10 (1)
unstack b27 b3 (1)
put-down b27 (1)
unstack b3 b11 (1)
put-down b3 (1)
unstack b11 b24 (1)
put-down b11 (1)
unstack b24 b19 (1)
put-down b24 (1)
unstack b19 b9 (1)
stack b19 b13 (1)
pick-up b11 (1)
stack b11 b24 (1)
pick-up b14 (1)
stack b14 b19 (1)
pick-up b27 (1)
stack b27 b3 (1)
unstack b9 b6 (1)
stack b9 b28 (1)
unstack b6 b15 (1)
stack b6 b7 (1)
pick-up b15 (1)
stack b15 b22 (1)
pick-up b30 (1)
stack b30 b6 (1)
unstack b11 b24 (1)
put-down b11 (1)
pick-up b24 (1)
stack b24 b9 (1)
pick-up b11 (1)
stack b11 b24 (1)
unstack b27 b3 (1)
put-down b27 (1)
pick-up b3 (1)
stack b3 b11 (1)
pick-up b27 (1)
stack b27 b3 (1)
unstack b16 b10 (1)
put-down b16 (1)
pick-up b10 (1)
stack b10 b27 (1)
pick-up b16 (1)
stack b16 b10 (1)
unstack b15 b22 (1)
put-down b15 (1)
unstack b22 b5 (1)
put-down b22 (1)
unstack b5 b8 (1)
put-down b5 (1)
pick-up b22 (1)
stack b22 b5 (1)
pick-up b15 (1)
stack b15 b22 (1)
unstack b8 b29 (1)
put-down b8 (1)
unstack b29 b31 (1)
put-down b29 (1)
pick-up b31 (1)
stack b31 b16 (1)
pick-up b29 (1)
stack b29 b31 (1)
pick-up b8 (1)
stack b8 b29 (1)
unstack b15 b22 (1)
put-down b15 (1)
unstack b22 b5 (1)
put-down b22 (1)
pick-up b15 (1)
stack b15 b22 (1)
pick-up b5 (1)
stack b5 b8 (1)
unstack b15 b22 (1)
put-down b15 (1)
pick-up b22 (1)
stack b22 b5 (1)
pick-up b15 (1)
stack b15 b22 (1)
unstack b30 b6 (1)
put-down b30 (1)
unstack b6 b7 (1)
put-down b6 (1)
pick-up b30 (1)
stack b30 b6 (1)
unstack b7 b2 (1)
put-down b7 (1)
unstack b2 b4 (1)
put-down b2 (1)
pick-up b4 (1)
stack b4 b15 (1)
pick-up b2 (1)
stack b2 b4 (1)
pick-up b7 (1)
stack b7 b2 (1)
unstack b30 b6 (1)
put-down b30 (1)
pick-up b6 (1)
stack b6 b7 (1)
pick-up b30 (1)
stack b30 b6 (1)
[t=0.183391s, 28992 KB] Plan length: 254 step(s).
[t=0.183391s, 28992 KB] Plan cost: 254
[t=0.183391s, 28992 KB] Expanded 3140 state(s).
[t=0.183391s, 28992 KB] Reopened 0 state(s).
[t=0.183391s, 28992 KB] Evaluated 3141 state(s).
[t=0.183391s, 28992 KB] Evaluations: 6282
[t=0.183391s, 28992 KB] Generated 31907 state(s).
[t=0.183391s, 28992 KB] Dead ends: 0 state(s).
[t=0.183391s, 28992 KB] Number of registered states: 3141
[t=0.183391s, 28992 KB] Int hash set load factor: 3141/4096 = 0.766846
[t=0.183391s, 28992 KB] Int hash set resizes: 12
[t=0.183391s, 28992 KB] Search time: 0.139291s
[t=0.183391s, 28992 KB] Total time: 0.183391s
Solution found.
Peak memory: 28992 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.41s
