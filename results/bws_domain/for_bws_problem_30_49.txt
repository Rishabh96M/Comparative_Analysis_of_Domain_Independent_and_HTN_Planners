INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_30/bws_problem_30_49.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.017s wall-clock]
2912 relevant atoms
1950 auxiliary atoms
4862 final queue length
8528 total queue pushes
Completing instantiation... [0.030s CPU, 0.029s wall-clock]
Instantiating: [0.050s CPU, 0.048s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.010s CPU, 0.002s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
31 uncovered facts
Choosing groups: [0.000s CPU, 0.002s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.010s CPU, 0.011s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.001s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.002s wall-clock]
Translating task: [0.050s CPU, 0.051s wall-clock]
2670 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
60 propositions removed
Detecting unreachable propositions: [0.030s CPU, 0.020s wall-clock]
Reordering and filtering variables...
61 of 61 variables necessary.
31 of 61 mutex groups necessary.
1800 of 1800 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.012s wall-clock]
Translator variables: 61
Translator derived variables: 0
Translator facts: 992
Translator goal facts: 24
Translator mutex groups: 31
Translator total mutex groups size: 961
Translator operators: 1800
Translator axioms: 0
Translator task size: 15448
Translator peak memory: 41336 KB
Writing output... [0.010s CPU, 0.009s wall-clock]
Done! [0.160s CPU, 0.157s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.0557e-05s, 24488 KB] reading input...
[t=0.00541562s, 26364 KB] done reading input!
[t=0.00652117s, 26760 KB] Initializing landmark count heuristic...
[t=0.00656711s, 26760 KB] Generating landmark graph...
[t=0.0066652s, 26892 KB] Building a landmark graph with reasonable orders.
[t=0.00676162s, 27024 KB] Initializing Exploration...
[t=0.00731366s, 27316 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0329985s, 28372 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0331076s, 28372 KB] Landmarks generation time: 0.0264506s
[t=0.0331317s, 28372 KB] Discovered 127 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.033148s, 28372 KB] 845 edges
[t=0.0331573s, 28372 KB] approx. reasonable orders
[t=0.0405559s, 28372 KB] approx. obedient reasonable orders
[t=0.04133s, 28372 KB] Removed 4 reasonable or obedient reasonable orders
[t=0.0413472s, 28372 KB] Landmarks generation time: 0.0347783s
[t=0.0413584s, 28372 KB] Discovered 127 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0413663s, 28372 KB] 955 edges
[t=0.0413761s, 28372 KB] Landmark graph generation time: 0.0348159s
[t=0.041385s, 28372 KB] Landmark graph contains 127 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0413928s, 28372 KB] Landmark graph contains 955 orderings.
[t=0.0422556s, 28400 KB] Simplifying 7140 unary operators... done! [5400 unary operators]
[t=0.044099s, 28400 KB] time to simplify: 0.00195876s
[t=0.0443115s, 28400 KB] Initializing additive heuristic...
[t=0.0443319s, 28400 KB] Initializing FF heuristic...
[t=0.0443901s, 28400 KB] Building successor generator...done!
[t=0.0447475s, 28400 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0447561s, 28400 KB] time for successor generation creation: 0.00031921s
[t=0.0447699s, 28400 KB] Variables: 61
[t=0.0447781s, 28400 KB] FactPairs: 992
[t=0.0447858s, 28400 KB] Bytes per state: 24
[t=0.044889s, 28400 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0449222s, 28400 KB] 56 initial landmarks, 24 goal landmarks
[t=0.0449928s, 28400 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 71
[t=0.0450017s, 28400 KB] New best heuristic value for ff(transform = adapt_costs(one)): 51
[t=0.0450106s, 28400 KB] g=0, 1 evaluated, 0 expanded
[t=0.0450247s, 28400 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 71
[t=0.0450334s, 28400 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 51
[t=0.0452495s, 28400 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 70
[t=0.0452631s, 28400 KB] g=1, 5 evaluated, 4 expanded
[t=0.0455157s, 28400 KB] New best heuristic value for ff(transform = adapt_costs(one)): 50
[t=0.0455253s, 28400 KB] g=2, 11 evaluated, 10 expanded
[t=0.0456513s, 28400 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 69
[t=0.0456602s, 28400 KB] g=3, 14 evaluated, 13 expanded
[t=0.0461228s, 28400 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 68
[t=0.0461337s, 28400 KB] g=6, 25 evaluated, 24 expanded
[t=0.0464777s, 28400 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 67
[t=0.0464874s, 28400 KB] g=8, 33 evaluated, 32 expanded
[t=0.0471368s, 28400 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 66
[t=0.0471474s, 28400 KB] g=10, 48 evaluated, 47 expanded
[t=0.0475849s, 28400 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 65
[t=0.0475984s, 28400 KB] New best heuristic value for ff(transform = adapt_costs(one)): 49
[t=0.0476082s, 28400 KB] g=12, 58 evaluated, 57 expanded
[t=0.047949s, 28400 KB] New best heuristic value for ff(transform = adapt_costs(one)): 48
[t=0.0479602s, 28400 KB] g=14, 66 evaluated, 65 expanded
[t=0.0480557s, 28400 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 64
[t=0.0480654s, 28400 KB] g=14, 68 evaluated, 67 expanded
[t=0.0486656s, 28400 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 63
[t=0.0486768s, 28400 KB] g=15, 82 evaluated, 81 expanded
[t=0.0489143s, 28400 KB] New best heuristic value for ff(transform = adapt_costs(one)): 47
[t=0.0489251s, 28400 KB] g=16, 87 evaluated, 86 expanded
[t=0.0495629s, 28400 KB] New best heuristic value for ff(transform = adapt_costs(one)): 46
[t=0.0495744s, 28400 KB] g=18, 103 evaluated, 102 expanded
[t=0.0496239s, 28400 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 62
[t=0.0496327s, 28400 KB] g=18, 104 evaluated, 103 expanded
[t=0.0503699s, 28400 KB] New best heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0503863s, 28400 KB] g=20, 122 evaluated, 121 expanded
[t=0.0506422s, 28400 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 61
[t=0.0506527s, 28400 KB] g=20, 128 evaluated, 127 expanded
[t=0.0509122s, 28400 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 60
[t=0.0509236s, 28400 KB] g=21, 134 evaluated, 133 expanded
[t=0.0511595s, 28400 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0511709s, 28400 KB] g=22, 139 evaluated, 138 expanded
[t=0.0518601s, 28400 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0518769s, 28400 KB] g=24, 156 evaluated, 155 expanded
[t=0.0524499s, 28400 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0524634s, 28400 KB] g=26, 170 evaluated, 169 expanded
[t=0.0546999s, 28400 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.054722s, 28400 KB] g=26, 225 evaluated, 224 expanded
[t=0.0547914s, 28400 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 58
[t=0.0548067s, 28400 KB] g=27, 226 evaluated, 225 expanded
[t=0.0560598s, 28400 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 57
[t=0.056085s, 28400 KB] g=30, 254 evaluated, 253 expanded
[t=0.0563792s, 28400 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0563896s, 28400 KB] g=32, 260 evaluated, 259 expanded
[t=0.057515s, 28400 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0575255s, 28400 KB] g=32, 287 evaluated, 286 expanded
[t=0.0589401s, 28400 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0589511s, 28400 KB] g=34, 321 evaluated, 320 expanded
[t=0.0592198s, 28400 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.059231s, 28400 KB] g=40, 327 evaluated, 326 expanded
[t=0.0600407s, 28400 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0600503s, 28400 KB] g=42, 347 evaluated, 346 expanded
[t=0.0603793s, 28400 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0603888s, 28400 KB] g=36, 355 evaluated, 354 expanded
[t=0.0608033s, 28400 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0608128s, 28400 KB] g=44, 365 evaluated, 364 expanded
[t=0.0615218s, 28400 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0615317s, 28400 KB] g=46, 383 evaluated, 382 expanded
[t=0.0619078s, 28400 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0619175s, 28400 KB] g=38, 392 evaluated, 391 expanded
[t=0.0622537s, 28400 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0622634s, 28400 KB] g=48, 400 evaluated, 399 expanded
[t=0.0630208s, 28400 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0630302s, 28400 KB] g=50, 419 evaluated, 418 expanded
[t=0.0635997s, 28400 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.063611s, 28400 KB] g=52, 432 evaluated, 431 expanded
[t=0.0636591s, 28400 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0636678s, 28400 KB] g=40, 433 evaluated, 432 expanded
[t=0.067081s, 28400 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0671015s, 28400 KB] g=42, 515 evaluated, 514 expanded
[t=0.0677171s, 28400 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0677293s, 28400 KB] g=58, 529 evaluated, 528 expanded
[t=0.0695117s, 28400 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0695323s, 28400 KB] g=44, 573 evaluated, 572 expanded
[t=0.0701423s, 28400 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0701568s, 28400 KB] g=62, 587 evaluated, 586 expanded
[t=0.070664s, 28400 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0706752s, 28400 KB] g=64, 599 evaluated, 598 expanded
[t=0.0722723s, 28400 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0722913s, 28400 KB] g=46, 637 evaluated, 636 expanded
[t=0.0735404s, 28400 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0735535s, 28400 KB] g=72, 667 evaluated, 666 expanded
[t=0.073825s, 28400 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0738349s, 28400 KB] g=48, 673 evaluated, 672 expanded
[t=0.0739729s, 28400 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0739825s, 28400 KB] g=74, 676 evaluated, 675 expanded
[t=0.0744437s, 28400 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.074454s, 28400 KB] g=76, 687 evaluated, 686 expanded
[t=0.0749444s, 28400 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0749602s, 28400 KB] g=78, 698 evaluated, 697 expanded
[t=0.0771404s, 28400 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0771536s, 28400 KB] g=84, 750 evaluated, 749 expanded
[t=0.0845045s, 28400 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0845225s, 28400 KB] g=96, 936 evaluated, 935 expanded
[t=0.0860567s, 28400 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0860977s, 28400 KB] g=100, 973 evaluated, 972 expanded
[t=0.0864713s, 28400 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0864929s, 28400 KB] g=102, 980 evaluated, 979 expanded
[t=0.0984629s, 28400 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0985048s, 28400 KB] g=118, 1271 evaluated, 1270 expanded
[t=0.101123s, 28400 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.101135s, 28400 KB] g=126, 1336 evaluated, 1335 expanded
[t=0.101714s, 28400 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.101724s, 28400 KB] g=130, 1350 evaluated, 1349 expanded
[t=0.101929s, 28400 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.101938s, 28400 KB] g=132, 1355 evaluated, 1354 expanded
[t=0.114616s, 28400 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.114667s, 28400 KB] g=166, 1713 evaluated, 1712 expanded
[t=0.11547s, 28400 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.115482s, 28400 KB] g=170, 1733 evaluated, 1732 expanded
[t=0.115663s, 28400 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.115673s, 28400 KB] g=172, 1738 evaluated, 1737 expanded
[t=0.118456s, 28400 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.118467s, 28400 KB] g=188, 1821 evaluated, 1820 expanded
[t=0.119201s, 28400 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.119217s, 28400 KB] g=196, 1842 evaluated, 1841 expanded
[t=0.119554s, 28400 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.119563s, 28400 KB] g=200, 1852 evaluated, 1851 expanded
[t=0.119625s, 28400 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.119635s, 28400 KB] g=201, 1854 evaluated, 1853 expanded
[t=0.11966s, 28400 KB] Solution found!
[t=0.119676s, 28400 KB] Actual search time: 0.0747517s
unstack b27 b7 (1)
put-down b27 (1)
unstack b24 b17 (1)
put-down b24 (1)
unstack b17 b3 (1)
put-down b17 (1)
unstack b18 b5 (1)
put-down b18 (1)
unstack b3 b1 (1)
put-down b3 (1)
pick-up b24 (1)
stack b24 b1 (1)
unstack b5 b9 (1)
stack b5 b17 (1)
unstack b9 b28 (1)
stack b9 b6 (1)
unstack b28 b19 (1)
put-down b28 (1)
unstack b19 b15 (1)
stack b19 b18 (1)
pick-up b30 (1)
stack b30 b28 (1)
unstack b7 b23 (1)
stack b7 b15 (1)
pick-up b23 (1)
stack b23 b5 (1)
unstack b24 b1 (1)
put-down b24 (1)
unstack b1 b13 (1)
put-down b1 (1)
pick-up b24 (1)
stack b24 b1 (1)
unstack b13 b16 (1)
put-down b13 (1)
unstack b16 b29 (1)
put-down b16 (1)
unstack b29 b4 (1)
put-down b29 (1)
unstack b4 b26 (1)
stack b4 b7 (1)
unstack b26 b8 (1)
stack b26 b16 (1)
pick-up b29 (1)
stack b29 b26 (1)
unstack b8 b2 (1)
stack b8 b27 (1)
unstack b2 b10 (1)
stack b2 b4 (1)
pick-up b13 (1)
stack b13 b10 (1)
pick-up b3 (1)
stack b3 b2 (1)
unstack b19 b18 (1)
put-down b19 (1)
pick-up b18 (1)
stack b18 b29 (1)
pick-up b19 (1)
stack b19 b18 (1)
unstack b9 b6 (1)
put-down b9 (1)
pick-up b6 (1)
stack b6 b8 (1)
pick-up b9 (1)
stack b9 b6 (1)
unstack b13 b10 (1)
put-down b13 (1)
unstack b10 b21 (1)
put-down b10 (1)
pick-up b13 (1)
stack b13 b10 (1)
unstack b21 b12 (1)
stack b21 b23 (1)
unstack b12 b14 (1)
stack b12 b3 (1)
unstack b14 b11 (1)
stack b14 b12 (1)
unstack b11 b22 (1)
stack b11 b30 (1)
unstack b13 b10 (1)
put-down b13 (1)
pick-up b10 (1)
stack b10 b14 (1)
pick-up b13 (1)
stack b13 b10 (1)
unstack b21 b23 (1)
put-down b21 (1)
unstack b23 b5 (1)
put-down b23 (1)
pick-up b21 (1)
stack b21 b23 (1)
unstack b5 b17 (1)
put-down b5 (1)
pick-up b17 (1)
stack b17 b22 (1)
pick-up b5 (1)
stack b5 b17 (1)
unstack b21 b23 (1)
put-down b21 (1)
pick-up b23 (1)
stack b23 b5 (1)
pick-up b21 (1)
stack b21 b23 (1)
unstack b19 b18 (1)
put-down b19 (1)
unstack b18 b29 (1)
put-down b18 (1)
unstack b29 b26 (1)
put-down b29 (1)
pick-up b18 (1)
stack b18 b29 (1)
pick-up b19 (1)
stack b19 b18 (1)
unstack b26 b16 (1)
put-down b26 (1)
pick-up b16 (1)
stack b16 b21 (1)
pick-up b26 (1)
stack b26 b16 (1)
unstack b19 b18 (1)
put-down b19 (1)
unstack b18 b29 (1)
put-down b18 (1)
pick-up b19 (1)
stack b19 b18 (1)
pick-up b29 (1)
stack b29 b26 (1)
unstack b19 b18 (1)
put-down b19 (1)
pick-up b18 (1)
stack b18 b29 (1)
pick-up b19 (1)
stack b19 b18 (1)
unstack b13 b10 (1)
put-down b13 (1)
unstack b10 b14 (1)
put-down b10 (1)
pick-up b13 (1)
stack b13 b10 (1)
unstack b14 b12 (1)
put-down b14 (1)
unstack b12 b3 (1)
put-down b12 (1)
unstack b3 b2 (1)
put-down b3 (1)
pick-up b12 (1)
stack b12 b3 (1)
pick-up b14 (1)
stack b14 b12 (1)
unstack b13 b10 (1)
put-down b13 (1)
pick-up b10 (1)
stack b10 b14 (1)
pick-up b13 (1)
stack b13 b10 (1)
unstack b2 b4 (1)
put-down b2 (1)
unstack b4 b7 (1)
put-down b4 (1)
pick-up b2 (1)
stack b2 b4 (1)
unstack b7 b15 (1)
put-down b7 (1)
pick-up b15 (1)
stack b15 b11 (1)
pick-up b7 (1)
stack b7 b15 (1)
unstack b2 b4 (1)
put-down b2 (1)
pick-up b4 (1)
stack b4 b7 (1)
pick-up b2 (1)
stack b2 b4 (1)
unstack b13 b10 (1)
put-down b13 (1)
unstack b10 b14 (1)
put-down b10 (1)
unstack b14 b12 (1)
put-down b14 (1)
pick-up b10 (1)
stack b10 b14 (1)
pick-up b13 (1)
stack b13 b10 (1)
unstack b12 b3 (1)
put-down b12 (1)
pick-up b3 (1)
stack b3 b2 (1)
pick-up b12 (1)
stack b12 b3 (1)
unstack b13 b10 (1)
put-down b13 (1)
unstack b10 b14 (1)
put-down b10 (1)
pick-up b13 (1)
stack b13 b10 (1)
pick-up b14 (1)
stack b14 b12 (1)
unstack b13 b10 (1)
put-down b13 (1)
pick-up b10 (1)
stack b10 b14 (1)
pick-up b13 (1)
stack b13 b10 (1)
[t=0.119686s, 28400 KB] Plan length: 202 step(s).
[t=0.119686s, 28400 KB] Plan cost: 202
[t=0.119686s, 28400 KB] Expanded 1854 state(s).
[t=0.119686s, 28400 KB] Reopened 0 state(s).
[t=0.119686s, 28400 KB] Evaluated 1855 state(s).
[t=0.119686s, 28400 KB] Evaluations: 3710
[t=0.119686s, 28400 KB] Generated 26405 state(s).
[t=0.119686s, 28400 KB] Dead ends: 0 state(s).
[t=0.119686s, 28400 KB] Number of registered states: 1855
[t=0.119686s, 28400 KB] Int hash set load factor: 1855/4096 = 0.452881
[t=0.119686s, 28400 KB] Int hash set resizes: 12
[t=0.119686s, 28400 KB] Search time: 0.074797s
[t=0.119686s, 28400 KB] Total time: 0.119686s
Solution found.
Peak memory: 28400 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.32s
