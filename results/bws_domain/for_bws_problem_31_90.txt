INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_31/bws_problem_31_90.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.019s wall-clock]
3102 relevant atoms
2077 auxiliary atoms
5179 final queue length
9090 total queue pushes
Completing instantiation... [0.030s CPU, 0.033s wall-clock]
Instantiating: [0.050s CPU, 0.055s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.010s CPU, 0.002s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
32 uncovered facts
Choosing groups: [0.000s CPU, 0.002s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.010s CPU, 0.011s wall-clock]
Building STRIPS to SAS dictionary... [0.010s CPU, 0.006s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.001s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.002s wall-clock]
Translating task: [0.050s CPU, 0.051s wall-clock]
2852 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
62 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.024s wall-clock]
Reordering and filtering variables...
63 of 63 variables necessary.
32 of 63 mutex groups necessary.
1922 of 1922 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.020s CPU, 0.012s wall-clock]
Translator variables: 63
Translator derived variables: 0
Translator facts: 1056
Translator goal facts: 24
Translator mutex groups: 32
Translator total mutex groups size: 1024
Translator operators: 1922
Translator axioms: 0
Translator task size: 16489
Translator peak memory: 42104 KB
Writing output... [0.010s CPU, 0.011s wall-clock]
Done! [0.180s CPU, 0.177s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=1.9367e-05s, 24488 KB] reading input...
[t=0.00619433s, 26640 KB] done reading input!
[t=0.00709719s, 26904 KB] Initializing landmark count heuristic...
[t=0.0071322s, 26904 KB] Generating landmark graph...
[t=0.00722948s, 27036 KB] Building a landmark graph with reasonable orders.
[t=0.00732115s, 27172 KB] Initializing Exploration...
[t=0.00786585s, 27620 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0344427s, 28536 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0345452s, 28536 KB] Landmarks generation time: 0.0273245s
[t=0.0345689s, 28536 KB] Discovered 130 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0345876s, 28536 KB] 740 edges
[t=0.0345981s, 28536 KB] approx. reasonable orders
[t=0.0350112s, 28536 KB] approx. obedient reasonable orders
[t=0.0350609s, 28536 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0350718s, 28536 KB] Landmarks generation time: 0.0279372s
[t=0.0350823s, 28536 KB] Discovered 130 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0350904s, 28536 KB] 744 edges
[t=0.0350994s, 28536 KB] Landmark graph generation time: 0.027974s
[t=0.0351099s, 28536 KB] Landmark graph contains 130 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0351186s, 28536 KB] Landmark graph contains 744 orderings.
[t=0.0358009s, 28568 KB] Simplifying 7626 unary operators... done! [5766 unary operators]
[t=0.03768s, 28568 KB] time to simplify: 0.00200171s
[t=0.0379087s, 28568 KB] Initializing additive heuristic...
[t=0.0379301s, 28568 KB] Initializing FF heuristic...
[t=0.0379848s, 28568 KB] Building successor generator...done!
[t=0.0383348s, 28704 KB] peak memory difference for successor generator creation: 136 KB
[t=0.0383449s, 28704 KB] time for successor generation creation: 0.000318639s
[t=0.0383584s, 28704 KB] Variables: 63
[t=0.0383665s, 28704 KB] FactPairs: 1056
[t=0.0383743s, 28704 KB] Bytes per state: 24
[t=0.0384623s, 28704 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0384947s, 28704 KB] 59 initial landmarks, 24 goal landmarks
[t=0.0385647s, 28704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 71
[t=0.038574s, 28704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 51
[t=0.0385822s, 28704 KB] g=0, 1 evaluated, 0 expanded
[t=0.0385963s, 28704 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 71
[t=0.0386049s, 28704 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 51
[t=0.0387935s, 28704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 70
[t=0.0388024s, 28704 KB] g=1, 5 evaluated, 4 expanded
[t=0.0393122s, 28704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 69
[t=0.0393224s, 28704 KB] g=3, 17 evaluated, 16 expanded
[t=0.039901s, 28704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 68
[t=0.0399161s, 28704 KB] g=6, 29 evaluated, 28 expanded
[t=0.0405672s, 28704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 67
[t=0.04058s, 28704 KB] g=8, 44 evaluated, 43 expanded
[t=0.0411612s, 28704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 65
[t=0.0411717s, 28704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 50
[t=0.0411795s, 28704 KB] g=10, 58 evaluated, 57 expanded
[t=0.041369s, 28704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 64
[t=0.0413799s, 28704 KB] g=11, 62 evaluated, 61 expanded
[t=0.0418133s, 28704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 49
[t=0.0418228s, 28704 KB] g=12, 72 evaluated, 71 expanded
[t=0.04208s, 28704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 63
[t=0.0420897s, 28704 KB] g=13, 78 evaluated, 77 expanded
[t=0.0428052s, 28704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 62
[t=0.0428157s, 28704 KB] g=16, 95 evaluated, 94 expanded
[t=0.0433531s, 28704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 61
[t=0.0433755s, 28704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 48
[t=0.0433848s, 28704 KB] g=18, 107 evaluated, 106 expanded
[t=0.0439121s, 28704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 60
[t=0.0439212s, 28704 KB] g=20, 119 evaluated, 118 expanded
[t=0.0441889s, 28704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.0441975s, 28704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 47
[t=0.0442053s, 28704 KB] g=20, 125 evaluated, 124 expanded
[t=0.0446506s, 28704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 58
[t=0.0446647s, 28704 KB] g=22, 135 evaluated, 134 expanded
[t=0.0455344s, 28704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 57
[t=0.0455455s, 28704 KB] g=24, 156 evaluated, 155 expanded
[t=0.0458565s, 28704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0458658s, 28704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0458739s, 28704 KB] g=24, 163 evaluated, 162 expanded
[t=0.0462942s, 28704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0463058s, 28704 KB] g=26, 173 evaluated, 172 expanded
[t=0.0467254s, 28704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0467348s, 28704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.0467429s, 28704 KB] g=28, 183 evaluated, 182 expanded
[t=0.0471864s, 28704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0472017s, 28704 KB] g=30, 193 evaluated, 192 expanded
[t=0.047696s, 28704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0477101s, 28704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0477181s, 28704 KB] g=32, 204 evaluated, 203 expanded
[t=0.0482213s, 28704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0482328s, 28704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0482404s, 28704 KB] g=34, 215 evaluated, 214 expanded
[t=0.0487383s, 28704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0487499s, 28704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0487579s, 28704 KB] g=36, 226 evaluated, 225 expanded
[t=0.0493114s, 28704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0493228s, 28704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0493307s, 28704 KB] g=38, 238 evaluated, 237 expanded
[t=0.0498513s, 28704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0498634s, 28704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0498716s, 28704 KB] g=40, 250 evaluated, 249 expanded
[t=0.0504323s, 28704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0504477s, 28704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0504564s, 28704 KB] g=42, 262 evaluated, 261 expanded
[t=0.0509432s, 28704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0509644s, 28704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0509728s, 28704 KB] g=44, 273 evaluated, 272 expanded
[t=0.0514985s, 28704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0515205s, 28704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0515364s, 28704 KB] g=46, 284 evaluated, 283 expanded
[t=0.0516795s, 28704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0516906s, 28704 KB] g=47, 286 evaluated, 285 expanded
[t=0.0517656s, 28704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0517747s, 28704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.051783s, 28704 KB] g=48, 287 evaluated, 286 expanded
[t=0.0522408s, 28704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.05225s, 28704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.052258s, 28704 KB] g=50, 297 evaluated, 296 expanded
[t=0.0527105s, 28704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0527208s, 28704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.052732s, 28704 KB] g=52, 307 evaluated, 306 expanded
[t=0.0531034s, 28704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0531128s, 28704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0531207s, 28704 KB] g=54, 315 evaluated, 314 expanded
[t=0.054025s, 28704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0540383s, 28704 KB] g=59, 335 evaluated, 334 expanded
[t=0.054097s, 28704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0541075s, 28704 KB] g=60, 336 evaluated, 335 expanded
[t=0.054527s, 28704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.054537s, 28704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0545463s, 28704 KB] g=62, 346 evaluated, 345 expanded
[t=0.0549077s, 28704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0549175s, 28704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0549269s, 28704 KB] g=64, 355 evaluated, 354 expanded
[t=0.0552093s, 28704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0552191s, 28704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0552284s, 28704 KB] g=66, 362 evaluated, 361 expanded
[t=0.0556231s, 28704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.055635s, 28704 KB] g=69, 372 evaluated, 371 expanded
[t=0.0556826s, 28704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0556914s, 28704 KB] g=70, 373 evaluated, 372 expanded
[t=0.0559663s, 28704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0559759s, 28704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0559865s, 28704 KB] g=72, 380 evaluated, 379 expanded
[t=0.0562503s, 28704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0562649s, 28704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.056275s, 28704 KB] g=74, 386 evaluated, 385 expanded
[t=0.057644s, 28704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0576581s, 28704 KB] g=80, 419 evaluated, 418 expanded
[t=0.0579467s, 28704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0579581s, 28704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0579663s, 28704 KB] g=82, 426 evaluated, 425 expanded
[t=0.0581744s, 28704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0581848s, 28704 KB] g=82, 431 evaluated, 430 expanded
[t=0.0584307s, 28704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0584407s, 28704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0584496s, 28704 KB] g=84, 437 evaluated, 436 expanded
[t=0.0606311s, 28704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0606499s, 28704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0606587s, 28704 KB] g=92, 492 evaluated, 491 expanded
[t=0.0608167s, 28704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0608259s, 28704 KB] g=92, 496 evaluated, 495 expanded
[t=0.0610148s, 28704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0610243s, 28704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0610327s, 28704 KB] g=94, 501 evaluated, 500 expanded
[t=0.0626679s, 28704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0626819s, 28704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.062691s, 28704 KB] g=102, 545 evaluated, 544 expanded
[t=0.062841s, 28704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.062851s, 28704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0628597s, 28704 KB] g=104, 549 evaluated, 548 expanded
[t=0.064357s, 28704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0643697s, 28704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0643775s, 28704 KB] g=116, 592 evaluated, 591 expanded
[t=0.0646637s, 28704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0646744s, 28704 KB] g=120, 601 evaluated, 600 expanded
[t=0.0647768s, 28704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0647862s, 28704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0647946s, 28704 KB] g=122, 604 evaluated, 603 expanded
[t=0.0651848s, 28704 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0651962s, 28704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.065204s, 28704 KB] g=134, 619 evaluated, 618 expanded
[t=0.0652914s, 28704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0653123s, 28704 KB] g=138, 623 evaluated, 622 expanded
[t=0.0653343s, 28704 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0653426s, 28704 KB] g=139, 624 evaluated, 623 expanded
[t=0.0653604s, 28704 KB] Solution found!
[t=0.0653713s, 28704 KB] Actual search time: 0.026874s
unstack b26 b4 (1)
put-down b26 (1)
unstack b30 b12 (1)
put-down b30 (1)
unstack b12 b22 (1)
put-down b12 (1)
unstack b28 b27 (1)
put-down b28 (1)
unstack b9 b18 (1)
stack b9 b27 (1)
unstack b22 b24 (1)
put-down b22 (1)
unstack b18 b17 (1)
put-down b18 (1)
unstack b17 b19 (1)
put-down b17 (1)
unstack b19 b20 (1)
put-down b19 (1)
pick-up b28 (1)
stack b28 b17 (1)
unstack b20 b13 (1)
put-down b20 (1)
pick-up b30 (1)
stack b30 b13 (1)
unstack b24 b5 (1)
put-down b24 (1)
unstack b5 b8 (1)
stack b5 b26 (1)
unstack b8 b14 (1)
put-down b8 (1)
unstack b14 b29 (1)
stack b14 b11 (1)
unstack b29 b2 (1)
stack b29 b24 (1)
unstack b2 b15 (1)
stack b2 b22 (1)
unstack b15 b7 (1)
stack b15 b2 (1)
unstack b7 b25 (1)
put-down b7 (1)
unstack b25 b23 (1)
stack b25 b12 (1)
pick-up b20 (1)
stack b20 b7 (1)
unstack b23 b16 (1)
stack b23 b9 (1)
unstack b16 b3 (1)
stack b16 b28 (1)
unstack b3 b1 (1)
put-down b3 (1)
pick-up b4 (1)
stack b4 b25 (1)
pick-up b8 (1)
stack b8 b29 (1)
unstack b14 b11 (1)
put-down b14 (1)
unstack b11 b10 (1)
put-down b11 (1)
unstack b10 b21 (1)
stack b10 b15 (1)
pick-up b11 (1)
stack b11 b10 (1)
pick-up b18 (1)
stack b18 b21 (1)
pick-up b14 (1)
stack b14 b11 (1)
unstack b18 b21 (1)
put-down b18 (1)
unstack b21 b6 (1)
stack b21 b5 (1)
pick-up b18 (1)
stack b18 b21 (1)
pick-up b6 (1)
stack b6 b8 (1)
unstack b23 b9 (1)
put-down b23 (1)
unstack b9 b27 (1)
put-down b9 (1)
pick-up b27 (1)
stack b27 b20 (1)
pick-up b9 (1)
stack b9 b27 (1)
pick-up b23 (1)
stack b23 b9 (1)
unstack b16 b28 (1)
put-down b16 (1)
unstack b28 b17 (1)
put-down b28 (1)
pick-up b17 (1)
stack b17 b23 (1)
pick-up b28 (1)
stack b28 b17 (1)
pick-up b16 (1)
stack b16 b28 (1)
unstack b4 b25 (1)
put-down b4 (1)
unstack b25 b12 (1)
put-down b25 (1)
pick-up b12 (1)
stack b12 b3 (1)
pick-up b25 (1)
stack b25 b12 (1)
pick-up b4 (1)
stack b4 b25 (1)
unstack b18 b21 (1)
put-down b18 (1)
unstack b21 b5 (1)
put-down b21 (1)
pick-up b18 (1)
stack b18 b21 (1)
unstack b5 b26 (1)
put-down b5 (1)
pick-up b26 (1)
stack b26 b1 (1)
pick-up b5 (1)
stack b5 b26 (1)
unstack b18 b21 (1)
put-down b18 (1)
pick-up b21 (1)
stack b21 b5 (1)
pick-up b18 (1)
stack b18 b21 (1)
unstack b6 b8 (1)
put-down b6 (1)
unstack b8 b29 (1)
put-down b8 (1)
pick-up b6 (1)
stack b6 b8 (1)
unstack b29 b24 (1)
put-down b29 (1)
pick-up b24 (1)
stack b24 b14 (1)
pick-up b29 (1)
stack b29 b24 (1)
unstack b6 b8 (1)
put-down b6 (1)
pick-up b8 (1)
stack b8 b29 (1)
pick-up b6 (1)
stack b6 b8 (1)
[t=0.0653896s, 28704 KB] Plan length: 140 step(s).
[t=0.0653896s, 28704 KB] Plan cost: 140
[t=0.0653896s, 28704 KB] Expanded 624 state(s).
[t=0.0653896s, 28704 KB] Reopened 0 state(s).
[t=0.0653896s, 28704 KB] Evaluated 625 state(s).
[t=0.0653896s, 28704 KB] Evaluations: 1250
[t=0.0653896s, 28704 KB] Generated 7516 state(s).
[t=0.0653896s, 28704 KB] Dead ends: 0 state(s).
[t=0.0653896s, 28704 KB] Number of registered states: 625
[t=0.0653896s, 28704 KB] Int hash set load factor: 625/1024 = 0.610352
[t=0.0653896s, 28704 KB] Int hash set resizes: 10
[t=0.0653896s, 28704 KB] Search time: 0.0269278s
[t=0.0653896s, 28704 KB] Total time: 0.0653896s
Solution found.
Peak memory: 28704 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.29s
