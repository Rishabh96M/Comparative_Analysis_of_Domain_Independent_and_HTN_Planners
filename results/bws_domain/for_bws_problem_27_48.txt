INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_27/bws_problem_27_48.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.014s wall-clock]
2378 relevant atoms
1593 auxiliary atoms
3971 final queue length
6945 total queue pushes
Completing instantiation... [0.020s CPU, 0.026s wall-clock]
Instantiating: [0.040s CPU, 0.042s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.010s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
28 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.010s CPU, 0.009s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.001s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.002s wall-clock]
Translating task: [0.050s CPU, 0.044s wall-clock]
2160 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
54 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.019s wall-clock]
Reordering and filtering variables...
55 of 55 variables necessary.
28 of 55 mutex groups necessary.
1458 of 1458 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.010s wall-clock]
Translator variables: 55
Translator derived variables: 0
Translator facts: 812
Translator goal facts: 20
Translator mutex groups: 28
Translator total mutex groups size: 784
Translator operators: 1458
Translator axioms: 0
Translator task size: 12525
Translator peak memory: 39412 KB
Writing output... [0.010s CPU, 0.008s wall-clock]
Done! [0.140s CPU, 0.138s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=1.7551e-05s, 24488 KB] reading input...
[t=0.00538118s, 25936 KB] done reading input!
[t=0.00623134s, 26332 KB] Initializing landmark count heuristic...
[t=0.00626383s, 26332 KB] Generating landmark graph...
[t=0.00634461s, 26332 KB] Building a landmark graph with reasonable orders.
[t=0.00643239s, 26464 KB] Initializing Exploration...
[t=0.0069104s, 26732 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0255073s, 27524 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0257002s, 27524 KB] Landmarks generation time: 0.0193688s
[t=0.0257277s, 27524 KB] Discovered 115 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0257545s, 27524 KB] 586 edges
[t=0.025766s, 27524 KB] approx. reasonable orders
[t=0.0304972s, 27524 KB] approx. obedient reasonable orders
[t=0.0306601s, 27524 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.030673s, 27524 KB] Landmarks generation time: 0.0244066s
[t=0.0306836s, 27524 KB] Discovered 115 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0306927s, 27524 KB] 657 edges
[t=0.0307017s, 27524 KB] Landmark graph generation time: 0.0244452s
[t=0.0307105s, 27524 KB] Landmark graph contains 115 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0307186s, 27524 KB] Landmark graph contains 657 orderings.
[t=0.0312738s, 27544 KB] Simplifying 5778 unary operators... done! [4374 unary operators]
[t=0.0326377s, 27544 KB] time to simplify: 0.00145985s
[t=0.0328451s, 27544 KB] Initializing additive heuristic...
[t=0.0328669s, 27544 KB] Initializing FF heuristic...
[t=0.0329211s, 27544 KB] Building successor generator...done!
[t=0.0331965s, 27544 KB] peak memory difference for successor generator creation: 0 KB
[t=0.033206s, 27544 KB] time for successor generation creation: 0.000239349s
[t=0.0332191s, 27544 KB] Variables: 55
[t=0.0332271s, 27544 KB] FactPairs: 812
[t=0.033235s, 27544 KB] Bytes per state: 24
[t=0.0333247s, 27544 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0333585s, 27544 KB] 53 initial landmarks, 20 goal landmarks
[t=0.033423s, 27544 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 62
[t=0.0334326s, 27544 KB] New best heuristic value for ff(transform = adapt_costs(one)): 46
[t=0.0334407s, 27544 KB] g=0, 1 evaluated, 0 expanded
[t=0.033454s, 27544 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 62
[t=0.0334625s, 27544 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 46
[t=0.0336862s, 27544 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 61
[t=0.0336956s, 27544 KB] g=2, 7 evaluated, 6 expanded
[t=0.0338799s, 27544 KB] New best heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0338891s, 27544 KB] g=2, 12 evaluated, 11 expanded
[t=0.03435s, 27544 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 60
[t=0.0343624s, 27544 KB] g=4, 25 evaluated, 24 expanded
[t=0.0347986s, 27544 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.0348096s, 27544 KB] g=6, 37 evaluated, 36 expanded
[t=0.03511s, 27544 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 58
[t=0.0351193s, 27544 KB] g=7, 46 evaluated, 45 expanded
[t=0.0352351s, 27544 KB] New best heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.0352442s, 27544 KB] g=6, 49 evaluated, 48 expanded
[t=0.0357193s, 27544 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0357283s, 27544 KB] g=8, 63 evaluated, 62 expanded
[t=0.0358455s, 27544 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 57
[t=0.0358561s, 27544 KB] g=10, 66 evaluated, 65 expanded
[t=0.0366089s, 27544 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0366192s, 27544 KB] g=12, 87 evaluated, 86 expanded
[t=0.0370878s, 27544 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0370998s, 27544 KB] g=12, 100 evaluated, 99 expanded
[t=0.0373181s, 27544 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0373271s, 27544 KB] g=14, 106 evaluated, 105 expanded
[t=0.037553s, 27544 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0375707s, 27544 KB] g=14, 112 evaluated, 111 expanded
[t=0.0380113s, 27544 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.038021s, 27544 KB] g=16, 125 evaluated, 124 expanded
[t=0.0383435s, 27544 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0383533s, 27544 KB] g=16, 134 evaluated, 133 expanded
[t=0.0390681s, 27544 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0390777s, 27544 KB] g=20, 155 evaluated, 154 expanded
[t=0.0391213s, 27544 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0391304s, 27544 KB] g=18, 156 evaluated, 155 expanded
[t=0.0399368s, 27544 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0399499s, 27544 KB] g=20, 178 evaluated, 177 expanded
[t=0.0404164s, 27544 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0404273s, 27544 KB] g=24, 191 evaluated, 190 expanded
[t=0.040714s, 27544 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0407444s, 27544 KB] g=22, 199 evaluated, 198 expanded
[t=0.0415931s, 27544 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.041613s, 27544 KB] g=24, 223 evaluated, 222 expanded
[t=0.0419019s, 27544 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0419141s, 27544 KB] g=28, 231 evaluated, 230 expanded
[t=0.0425726s, 27544 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.042587s, 27544 KB] g=30, 250 evaluated, 249 expanded
[t=0.043334s, 27544 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0433502s, 27544 KB] g=32, 271 evaluated, 270 expanded
[t=0.0434618s, 27544 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0434735s, 27544 KB] g=26, 274 evaluated, 273 expanded
[t=0.0441144s, 27544 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0441397s, 27544 KB] g=27, 293 evaluated, 292 expanded
[t=0.0461215s, 27544 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0461792s, 27544 KB] g=30, 346 evaluated, 345 expanded
[t=0.0473203s, 27544 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0473431s, 27544 KB] g=32, 374 evaluated, 373 expanded
[t=0.0480732s, 27544 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0480841s, 27544 KB] g=33, 395 evaluated, 394 expanded
[t=0.048414s, 27544 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0484243s, 27544 KB] g=38, 404 evaluated, 403 expanded
[t=0.0490558s, 27544 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0490671s, 27544 KB] g=40, 422 evaluated, 421 expanded
[t=0.0494286s, 27544 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0494406s, 27544 KB] g=36, 432 evaluated, 431 expanded
[t=0.0496887s, 27544 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0496981s, 27544 KB] g=42, 439 evaluated, 438 expanded
[t=0.0502228s, 27544 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0502325s, 27544 KB] g=44, 454 evaluated, 453 expanded
[t=0.0504477s, 27544 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.050464s, 27544 KB] g=37, 460 evaluated, 459 expanded
[t=0.050705s, 27544 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0507139s, 27544 KB] g=46, 467 evaluated, 466 expanded
[t=0.0511789s, 27544 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0511895s, 27544 KB] g=39, 481 evaluated, 480 expanded
[t=0.052456s, 27544 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0524717s, 27544 KB] g=42, 517 evaluated, 516 expanded
[t=0.0536461s, 27544 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0536665s, 27544 KB] g=50, 550 evaluated, 549 expanded
[t=0.0541383s, 27544 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0541494s, 27544 KB] g=52, 562 evaluated, 561 expanded
[t=0.0545637s, 27544 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0545733s, 27544 KB] g=54, 574 evaluated, 573 expanded
[t=0.0549986s, 27544 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0550081s, 27544 KB] g=56, 587 evaluated, 586 expanded
[t=0.0555029s, 27544 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0555131s, 27544 KB] g=44, 602 evaluated, 601 expanded
[t=0.057129s, 27544 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.057142s, 27544 KB] g=60, 650 evaluated, 649 expanded
[t=0.0572912s, 27544 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0573022s, 27544 KB] g=46, 654 evaluated, 653 expanded
[t=0.0575434s, 27544 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0575539s, 27544 KB] g=62, 661 evaluated, 660 expanded
[t=0.0589008s, 27544 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0589113s, 27544 KB] g=48, 702 evaluated, 701 expanded
[t=0.0589941s, 27544 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0590036s, 27544 KB] g=66, 704 evaluated, 703 expanded
[t=0.0593778s, 27544 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0593887s, 27544 KB] g=68, 715 evaluated, 714 expanded
[t=0.0601213s, 27544 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0601319s, 27544 KB] g=50, 738 evaluated, 737 expanded
[t=0.0615649s, 27544 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0615779s, 27544 KB] g=76, 783 evaluated, 782 expanded
[t=0.0617521s, 27544 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0617616s, 27544 KB] g=52, 788 evaluated, 787 expanded
[t=0.0624187s, 27544 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0624292s, 27544 KB] g=80, 810 evaluated, 809 expanded
[t=0.0626529s, 27544 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0626622s, 27544 KB] g=82, 817 evaluated, 816 expanded
[t=0.0631344s, 27544 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0631452s, 27544 KB] g=54, 832 evaluated, 831 expanded
[t=0.0640791s, 27544 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0640899s, 27544 KB] g=94, 865 evaluated, 864 expanded
[t=0.0642626s, 27544 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0642723s, 27544 KB] g=96, 871 evaluated, 870 expanded
[t=0.0644081s, 27544 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0644213s, 27544 KB] g=56, 876 evaluated, 875 expanded
[t=0.0644599s, 27544 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0644692s, 27544 KB] g=98, 877 evaluated, 876 expanded
[t=0.0646451s, 27544 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0646557s, 27544 KB] g=98, 883 evaluated, 882 expanded
[t=0.0648077s, 27544 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0648165s, 27544 KB] g=100, 889 evaluated, 888 expanded
[t=0.0650597s, 27544 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0650688s, 27544 KB] g=104, 899 evaluated, 898 expanded
[t=0.0651216s, 27544 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0651308s, 27544 KB] g=105, 901 evaluated, 900 expanded
[t=0.065148s, 27544 KB] Solution found!
[t=0.0651594s, 27544 KB] Actual search time: 0.0317978s
unstack b3 b15 (1)
stack b3 b13 (1)
unstack b15 b14 (1)
put-down b15 (1)
unstack b14 b17 (1)
put-down b14 (1)
unstack b17 b1 (1)
stack b17 b16 (1)
unstack b1 b18 (1)
put-down b1 (1)
unstack b18 b9 (1)
stack b18 b2 (1)
unstack b9 b22 (1)
put-down b9 (1)
unstack b22 b6 (1)
put-down b22 (1)
unstack b6 b20 (1)
put-down b6 (1)
unstack b20 b7 (1)
stack b20 b18 (1)
unstack b7 b23 (1)
put-down b7 (1)
unstack b23 b24 (1)
stack b23 b20 (1)
unstack b24 b19 (1)
put-down b24 (1)
unstack b19 b27 (1)
put-down b19 (1)
pick-up b15 (1)
stack b15 b19 (1)
pick-up b7 (1)
stack b7 b27 (1)
unstack b17 b16 (1)
put-down b17 (1)
unstack b16 b12 (1)
stack b16 b24 (1)
unstack b12 b4 (1)
put-down b12 (1)
unstack b4 b5 (1)
put-down b4 (1)
pick-up b1 (1)
stack b1 b12 (1)
pick-up b17 (1)
stack b17 b16 (1)
unstack b5 b11 (1)
stack b5 b15 (1)
unstack b3 b13 (1)
put-down b3 (1)
unstack b13 b21 (1)
stack b13 b14 (1)
unstack b21 b26 (1)
stack b21 b1 (1)
pick-up b11 (1)
stack b11 b26 (1)
pick-up b3 (1)
stack b3 b13 (1)
unstack b11 b26 (1)
put-down b11 (1)
pick-up b26 (1)
stack b26 b9 (1)
pick-up b11 (1)
stack b11 b26 (1)
unstack b7 b27 (1)
put-down b7 (1)
unstack b27 b10 (1)
stack b27 b4 (1)
pick-up b7 (1)
stack b7 b27 (1)
unstack b17 b16 (1)
put-down b17 (1)
unstack b16 b24 (1)
put-down b16 (1)
pick-up b17 (1)
stack b17 b16 (1)
pick-up b24 (1)
stack b24 b11 (1)
unstack b17 b16 (1)
put-down b17 (1)
pick-up b16 (1)
stack b16 b24 (1)
pick-up b17 (1)
stack b17 b16 (1)
unstack b23 b20 (1)
put-down b23 (1)
unstack b20 b18 (1)
put-down b20 (1)
pick-up b23 (1)
stack b23 b20 (1)
unstack b18 b2 (1)
put-down b18 (1)
unstack b2 b25 (1)
stack b2 b21 (1)
pick-up b18 (1)
stack b18 b2 (1)
unstack b25 b8 (1)
stack b25 b3 (1)
pick-up b8 (1)
stack b8 b17 (1)
pick-up b6 (1)
stack b6 b8 (1)
unstack b23 b20 (1)
put-down b23 (1)
pick-up b20 (1)
stack b20 b18 (1)
pick-up b23 (1)
stack b23 b20 (1)
[t=0.0651686s, 27544 KB] Plan length: 106 step(s).
[t=0.0651686s, 27544 KB] Plan cost: 106
[t=0.0651686s, 27544 KB] Expanded 901 state(s).
[t=0.0651686s, 27544 KB] Reopened 0 state(s).
[t=0.0651686s, 27544 KB] Evaluated 902 state(s).
[t=0.0651686s, 27544 KB] Evaluations: 1804
[t=0.0651686s, 27544 KB] Generated 13491 state(s).
[t=0.0651686s, 27544 KB] Dead ends: 0 state(s).
[t=0.0651686s, 27544 KB] Number of registered states: 902
[t=0.0651686s, 27544 KB] Int hash set load factor: 902/1024 = 0.880859
[t=0.0651686s, 27544 KB] Int hash set resizes: 10
[t=0.0651686s, 27544 KB] Search time: 0.0318444s
[t=0.0651686s, 27544 KB] Total time: 0.0651686s
Solution found.
Peak memory: 27544 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.25s
