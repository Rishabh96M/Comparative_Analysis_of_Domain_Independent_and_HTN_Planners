INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_25/bws_problem_25_61.pddl --sas-file output.sas
Parsing...
Parsing: [0.010s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.012s wall-clock]
2052 relevant atoms
1375 auxiliary atoms
3427 final queue length
5981 total queue pushes
Completing instantiation... [0.020s CPU, 0.021s wall-clock]
Instantiating: [0.030s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
26 uncovered facts
Choosing groups: [0.000s CPU, 0.002s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.008s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.001s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.002s wall-clock]
Translating task: [0.030s CPU, 0.030s wall-clock]
1850 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
50 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.021s wall-clock]
Reordering and filtering variables...
51 of 51 variables necessary.
26 of 51 mutex groups necessary.
1250 of 1250 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.008s wall-clock]
Translator variables: 51
Translator derived variables: 0
Translator facts: 702
Translator goal facts: 19
Translator mutex groups: 26
Translator total mutex groups size: 676
Translator operators: 1250
Translator axioms: 0
Translator task size: 10748
Translator peak memory: 38388 KB
Writing output... [0.010s CPU, 0.006s wall-clock]
Done! [0.120s CPU, 0.114s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=4.0115e-05s, 24488 KB] reading input...
[t=0.00373661s, 25632 KB] done reading input!
[t=0.00465651s, 26028 KB] Initializing landmark count heuristic...
[t=0.00468643s, 26028 KB] Generating landmark graph...
[t=0.00476707s, 26160 KB] Building a landmark graph with reasonable orders.
[t=0.00484576s, 26160 KB] Initializing Exploration...
[t=0.00518507s, 26532 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0203373s, 27060 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0204634s, 27060 KB] Landmarks generation time: 0.0156971s
[t=0.0204805s, 27060 KB] Discovered 108 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0205061s, 27060 KB] 604 edges
[t=0.020519s, 27060 KB] approx. reasonable orders
[t=0.0219555s, 27060 KB] approx. obedient reasonable orders
[t=0.0220044s, 27060 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.022016s, 27060 KB] Landmarks generation time: 0.0173241s
[t=0.0220283s, 27060 KB] Discovered 108 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0220392s, 27060 KB] 630 edges
[t=0.0220498s, 27060 KB] Landmark graph generation time: 0.0173719s
[t=0.0220601s, 27060 KB] Landmark graph contains 108 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0220708s, 27060 KB] Landmark graph contains 630 orderings.
[t=0.0225712s, 27060 KB] Simplifying 4950 unary operators... done! [3750 unary operators]
[t=0.0237846s, 27192 KB] time to simplify: 0.00130787s
[t=0.0239569s, 27192 KB] Initializing additive heuristic...
[t=0.0239833s, 27192 KB] Initializing FF heuristic...
[t=0.0240376s, 27192 KB] Building successor generator...done!
[t=0.0243217s, 27192 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0243309s, 27192 KB] time for successor generation creation: 0.000243416s
[t=0.0243473s, 27192 KB] Variables: 51
[t=0.0243567s, 27192 KB] FactPairs: 702
[t=0.0243743s, 27192 KB] Bytes per state: 20
[t=0.0244699s, 27192 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.024505s, 27192 KB] 51 initial landmarks, 19 goal landmarks
[t=0.0245867s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 57
[t=0.0245985s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0246103s, 27192 KB] g=0, 1 evaluated, 0 expanded
[t=0.0246309s, 27192 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 57
[t=0.0246407s, 27192 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0248144s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0248257s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0248361s, 27192 KB] g=2, 6 evaluated, 5 expanded
[t=0.0249893s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.025s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0250107s, 27192 KB] g=4, 11 evaluated, 10 expanded
[t=0.0251622s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0251719s, 27192 KB] g=6, 16 evaluated, 15 expanded
[t=0.0252703s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0252796s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0252898s, 27192 KB] g=6, 19 evaluated, 18 expanded
[t=0.0254225s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0254322s, 27192 KB] g=8, 23 evaluated, 22 expanded
[t=0.0255815s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0255913s, 27192 KB] g=10, 28 evaluated, 27 expanded
[t=0.025695s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0257121s, 27192 KB] g=10, 31 evaluated, 30 expanded
[t=0.0259207s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0259307s, 27192 KB] g=12, 38 evaluated, 37 expanded
[t=0.0261389s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0261541s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0261652s, 27192 KB] g=14, 45 evaluated, 44 expanded
[t=0.0263176s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0263279s, 27192 KB] g=16, 50 evaluated, 49 expanded
[t=0.0273291s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0273475s, 27192 KB] g=26, 84 evaluated, 83 expanded
[t=0.0278627s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0278735s, 27192 KB] g=28, 102 evaluated, 101 expanded
[t=0.0280846s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0280947s, 27192 KB] g=30, 109 evaluated, 108 expanded
[t=0.0283361s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0283461s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0283563s, 27192 KB] g=32, 117 evaluated, 116 expanded
[t=0.028606s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0286162s, 27192 KB] g=34, 125 evaluated, 124 expanded
[t=0.0287249s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0287367s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0287472s, 27192 KB] g=34, 128 evaluated, 127 expanded
[t=0.0289712s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0289816s, 27192 KB] g=36, 135 evaluated, 134 expanded
[t=0.0292279s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.029238s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0292483s, 27192 KB] g=38, 143 evaluated, 142 expanded
[t=0.0295265s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0295366s, 27192 KB] g=40, 152 evaluated, 151 expanded
[t=0.0295801s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0295897s, 27192 KB] g=40, 153 evaluated, 152 expanded
[t=0.0299201s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0299303s, 27192 KB] g=41, 164 evaluated, 163 expanded
[t=0.0300042s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0300142s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0300246s, 27192 KB] g=42, 166 evaluated, 165 expanded
[t=0.0303337s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0303439s, 27192 KB] g=44, 176 evaluated, 175 expanded
[t=0.0303895s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0304002s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0304105s, 27192 KB] g=44, 177 evaluated, 176 expanded
[t=0.0307397s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0307509s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0307612s, 27192 KB] g=46, 187 evaluated, 186 expanded
[t=0.0310636s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.031078s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0310887s, 27192 KB] g=48, 197 evaluated, 196 expanded
[t=0.0313749s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0313909s, 27192 KB] g=50, 206 evaluated, 205 expanded
[t=0.0314936s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0315035s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0315141s, 27192 KB] g=50, 209 evaluated, 208 expanded
[t=0.0317576s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0317675s, 27192 KB] g=52, 217 evaluated, 216 expanded
[t=0.0319044s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0319198s, 27192 KB] g=52, 221 evaluated, 220 expanded
[t=0.0321619s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0321721s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0321824s, 27192 KB] g=54, 229 evaluated, 228 expanded
[t=0.0328299s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.03284s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0328505s, 27192 KB] g=60, 251 evaluated, 250 expanded
[t=0.0340387s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0340496s, 27192 KB] g=70, 290 evaluated, 289 expanded
[t=0.0341298s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.034147s, 27192 KB] g=71, 292 evaluated, 291 expanded
[t=0.0341939s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0342043s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0342165s, 27192 KB] g=72, 293 evaluated, 292 expanded
[t=0.0345284s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0345405s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0345514s, 27192 KB] g=74, 301 evaluated, 300 expanded
[t=0.0347376s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0347479s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0347581s, 27192 KB] g=76, 307 evaluated, 306 expanded
[t=0.0349432s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0349528s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.034963s, 27192 KB] g=78, 313 evaluated, 312 expanded
[t=0.0353206s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0353322s, 27192 KB] g=81, 325 evaluated, 324 expanded
[t=0.0354039s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0354135s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0354247s, 27192 KB] g=82, 327 evaluated, 326 expanded
[t=0.0355815s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0355914s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0356016s, 27192 KB] g=84, 332 evaluated, 331 expanded
[t=0.0360572s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0360726s, 27192 KB] g=88, 348 evaluated, 347 expanded
[t=0.036196s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0362062s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0362164s, 27192 KB] g=90, 352 evaluated, 351 expanded
[t=0.0369889s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0370112s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0370242s, 27192 KB] g=98, 380 evaluated, 379 expanded
[t=0.0370912s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0371023s, 27192 KB] g=98, 382 evaluated, 381 expanded
[t=0.0371918s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0372015s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0372118s, 27192 KB] g=100, 385 evaluated, 384 expanded
[t=0.0376641s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0376852s, 27192 KB] g=112, 404 evaluated, 403 expanded
[t=0.0377196s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0377311s, 27192 KB] g=113, 405 evaluated, 404 expanded
[t=0.0377646s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0377745s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0377846s, 27192 KB] g=114, 406 evaluated, 405 expanded
[t=0.037854s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0378655s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.037876s, 27192 KB] g=116, 409 evaluated, 408 expanded
[t=0.0379584s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0379707s, 27192 KB] g=120, 413 evaluated, 412 expanded
[t=0.037996s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0380059s, 27192 KB] g=121, 414 evaluated, 413 expanded
[t=0.0380279s, 27192 KB] Solution found!
[t=0.0380458s, 27192 KB] Actual search time: 0.0135382s
unstack b21 b7 (1)
put-down b21 (1)
unstack b7 b20 (1)
put-down b7 (1)
unstack b6 b16 (1)
stack b6 b8 (1)
unstack b20 b14 (1)
put-down b20 (1)
unstack b14 b10 (1)
put-down b14 (1)
unstack b10 b5 (1)
put-down b10 (1)
pick-up b5 (1)
stack b5 b6 (1)
pick-up b11 (1)
stack b11 b14 (1)
unstack b5 b6 (1)
put-down b5 (1)
unstack b6 b8 (1)
put-down b6 (1)
pick-up b5 (1)
stack b5 b6 (1)
unstack b8 b19 (1)
put-down b8 (1)
unstack b19 b24 (1)
put-down b19 (1)
unstack b24 b13 (1)
stack b24 b11 (1)
unstack b13 b1 (1)
put-down b13 (1)
unstack b1 b12 (1)
stack b1 b24 (1)
pick-up b19 (1)
stack b19 b1 (1)
unstack b12 b17 (1)
put-down b12 (1)
unstack b17 b25 (1)
put-down b17 (1)
unstack b25 b4 (1)
put-down b25 (1)
unstack b4 b22 (1)
stack b4 b21 (1)
unstack b22 b9 (1)
stack b22 b17 (1)
unstack b9 b18 (1)
put-down b9 (1)
pick-up b12 (1)
stack b12 b22 (1)
pick-up b20 (1)
stack b20 b9 (1)
pick-up b25 (1)
stack b25 b18 (1)
pick-up b13 (1)
stack b13 b25 (1)
unstack b5 b6 (1)
put-down b5 (1)
pick-up b6 (1)
stack b6 b8 (1)
pick-up b5 (1)
stack b5 b6 (1)
unstack b13 b25 (1)
put-down b13 (1)
unstack b25 b18 (1)
put-down b25 (1)
unstack b18 b23 (1)
put-down b18 (1)
unstack b23 b3 (1)
put-down b23 (1)
unstack b3 b15 (1)
stack b3 b16 (1)
unstack b15 b2 (1)
stack b15 b12 (1)
pick-up b13 (1)
stack b13 b25 (1)
pick-up b18 (1)
stack b18 b23 (1)
pick-up b2 (1)
stack b2 b20 (1)
unstack b3 b16 (1)
put-down b3 (1)
pick-up b16 (1)
stack b16 b2 (1)
pick-up b3 (1)
stack b3 b16 (1)
unstack b13 b25 (1)
put-down b13 (1)
pick-up b25 (1)
stack b25 b18 (1)
pick-up b13 (1)
stack b13 b25 (1)
unstack b5 b6 (1)
put-down b5 (1)
unstack b6 b8 (1)
put-down b6 (1)
pick-up b8 (1)
stack b8 b3 (1)
pick-up b6 (1)
stack b6 b8 (1)
pick-up b5 (1)
stack b5 b6 (1)
unstack b19 b1 (1)
put-down b19 (1)
unstack b1 b24 (1)
put-down b1 (1)
pick-up b19 (1)
stack b19 b1 (1)
unstack b24 b11 (1)
put-down b24 (1)
unstack b11 b14 (1)
put-down b11 (1)
pick-up b14 (1)
stack b14 b13 (1)
pick-up b11 (1)
stack b11 b14 (1)
pick-up b24 (1)
stack b24 b11 (1)
unstack b19 b1 (1)
put-down b19 (1)
pick-up b1 (1)
stack b1 b24 (1)
pick-up b19 (1)
stack b19 b1 (1)
[t=0.0380578s, 27192 KB] Plan length: 122 step(s).
[t=0.0380578s, 27192 KB] Plan cost: 122
[t=0.0380578s, 27192 KB] Expanded 414 state(s).
[t=0.0380578s, 27192 KB] Reopened 0 state(s).
[t=0.0380578s, 27192 KB] Evaluated 415 state(s).
[t=0.0380578s, 27192 KB] Evaluations: 830
[t=0.0380578s, 27192 KB] Generated 4399 state(s).
[t=0.0380578s, 27192 KB] Dead ends: 0 state(s).
[t=0.0380578s, 27192 KB] Number of registered states: 415
[t=0.0380578s, 27192 KB] Int hash set load factor: 415/512 = 0.810547
[t=0.0380578s, 27192 KB] Int hash set resizes: 9
[t=0.0380578s, 27192 KB] Search time: 0.0135883s
[t=0.0380578s, 27192 KB] Total time: 0.0380578s
Solution found.
Peak memory: 27192 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.21s
