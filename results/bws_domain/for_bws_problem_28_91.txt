INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_28/bws_problem_28_91.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.016s wall-clock]
2550 relevant atoms
1708 auxiliary atoms
4258 final queue length
7456 total queue pushes
Completing instantiation... [0.030s CPU, 0.027s wall-clock]
Instantiating: [0.050s CPU, 0.045s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.002s wall-clock]
Collecting mutex groups... [0.010s CPU, 0.000s wall-clock]
Choosing groups...
29 uncovered facts
Choosing groups: [0.000s CPU, 0.002s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.002s wall-clock]
Translating task: [0.040s CPU, 0.048s wall-clock]
2324 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
56 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.020s wall-clock]
Reordering and filtering variables...
57 of 57 variables necessary.
29 of 57 mutex groups necessary.
1568 of 1568 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.011s wall-clock]
Translator variables: 57
Translator derived variables: 0
Translator facts: 870
Translator goal facts: 25
Translator mutex groups: 29
Translator total mutex groups size: 841
Translator operators: 1568
Translator axioms: 0
Translator task size: 13469
Translator peak memory: 40312 KB
Writing output... [0.010s CPU, 0.008s wall-clock]
Done! [0.150s CPU, 0.147s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.0809e-05s, 24488 KB] reading input...
[t=0.00470085s, 26076 KB] done reading input!
[t=0.00576055s, 26472 KB] Initializing landmark count heuristic...
[t=0.00579445s, 26472 KB] Generating landmark graph...
[t=0.00587807s, 26604 KB] Building a landmark graph with reasonable orders.
[t=0.00597623s, 26604 KB] Initializing Exploration...
[t=0.00647736s, 27016 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0282031s, 27676 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0283386s, 27676 KB] Landmarks generation time: 0.0224734s
[t=0.0283754s, 27676 KB] Discovered 127 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0283981s, 27676 KB] 622 edges
[t=0.0284091s, 27676 KB] approx. reasonable orders
[t=0.0338419s, 27676 KB] approx. obedient reasonable orders
[t=0.0339025s, 27676 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0339237s, 27676 KB] Landmarks generation time: 0.0281271s
[t=0.033933s, 27676 KB] Discovered 127 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0339406s, 27676 KB] 688 edges
[t=0.0339482s, 27676 KB] Landmark graph generation time: 0.0281602s
[t=0.033956s, 27676 KB] Landmark graph contains 127 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0339635s, 27676 KB] Landmark graph contains 688 orderings.
[t=0.0344813s, 27700 KB] Simplifying 6216 unary operators... done! [4704 unary operators]
[t=0.0360277s, 27832 KB] time to simplify: 0.00164638s
[t=0.0362198s, 27832 KB] Initializing additive heuristic...
[t=0.036238s, 27832 KB] Initializing FF heuristic...
[t=0.0363056s, 27832 KB] Building successor generator...done!
[t=0.0366172s, 27832 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0366276s, 27832 KB] time for successor generation creation: 0.000280076s
[t=0.036644s, 27832 KB] Variables: 57
[t=0.0366525s, 27832 KB] FactPairs: 870
[t=0.0366605s, 27832 KB] Bytes per state: 24
[t=0.0367813s, 27832 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0368159s, 27832 KB] 57 initial landmarks, 25 goal landmarks
[t=0.0368835s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 70
[t=0.0368942s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 52
[t=0.036903s, 27832 KB] g=0, 1 evaluated, 0 expanded
[t=0.0369179s, 27832 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 70
[t=0.0369266s, 27832 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 52
[t=0.0372103s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 69
[t=0.0372262s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 51
[t=0.0372364s, 27832 KB] g=2, 8 evaluated, 7 expanded
[t=0.0372865s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 68
[t=0.0372982s, 27832 KB] g=3, 9 evaluated, 8 expanded
[t=0.0373478s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 66
[t=0.0373591s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 49
[t=0.0373682s, 27832 KB] g=4, 10 evaluated, 9 expanded
[t=0.0376419s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 65
[t=0.0376719s, 27832 KB] g=6, 17 evaluated, 16 expanded
[t=0.0382222s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 64
[t=0.0382344s, 27832 KB] g=8, 31 evaluated, 30 expanded
[t=0.0385442s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 63
[t=0.0386172s, 27832 KB] g=10, 39 evaluated, 38 expanded
[t=0.0389884s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 62
[t=0.0389998s, 27832 KB] g=12, 49 evaluated, 48 expanded
[t=0.0396124s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.0396236s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 48
[t=0.039632s, 27832 KB] g=14, 65 evaluated, 64 expanded
[t=0.0400101s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 58
[t=0.0400347s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 47
[t=0.0400434s, 27832 KB] g=16, 75 evaluated, 74 expanded
[t=0.0404701s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 46
[t=0.0405002s, 27832 KB] g=18, 86 evaluated, 85 expanded
[t=0.0405858s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 57
[t=0.0406136s, 27832 KB] g=18, 88 evaluated, 87 expanded
[t=0.0413142s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0413251s, 27832 KB] g=20, 107 evaluated, 106 expanded
[t=0.0413742s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0413834s, 27832 KB] g=20, 108 evaluated, 107 expanded
[t=0.0420669s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0420779s, 27832 KB] g=22, 127 evaluated, 126 expanded
[t=0.0422039s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.0422127s, 27832 KB] g=22, 130 evaluated, 129 expanded
[t=0.0423607s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0423693s, 27832 KB] g=23, 134 evaluated, 133 expanded
[t=0.0428725s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0428824s, 27832 KB] g=24, 148 evaluated, 147 expanded
[t=0.0432476s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0432575s, 27832 KB] g=26, 158 evaluated, 157 expanded
[t=0.0442211s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0442326s, 27832 KB] g=28, 185 evaluated, 184 expanded
[t=0.0447812s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0447921s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0448s, 27832 KB] g=30, 200 evaluated, 199 expanded
[t=0.045226s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0452412s, 27832 KB] g=32, 212 evaluated, 211 expanded
[t=0.0455845s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0455951s, 27832 KB] g=32, 221 evaluated, 220 expanded
[t=0.0463524s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0463687s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0463774s, 27832 KB] g=34, 241 evaluated, 240 expanded
[t=0.0479267s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0479423s, 27832 KB] g=39, 279 evaluated, 278 expanded
[t=0.0485109s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0485309s, 27832 KB] g=42, 293 evaluated, 292 expanded
[t=0.0493894s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0494095s, 27832 KB] g=44, 315 evaluated, 314 expanded
[t=0.0495321s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0495416s, 27832 KB] g=36, 318 evaluated, 317 expanded
[t=0.0502173s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0502279s, 27832 KB] g=46, 336 evaluated, 335 expanded
[t=0.0510586s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0510716s, 27832 KB] g=48, 358 evaluated, 357 expanded
[t=0.052289s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0523025s, 27832 KB] g=50, 391 evaluated, 390 expanded
[t=0.0531415s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0531715s, 27832 KB] g=52, 414 evaluated, 413 expanded
[t=0.0537309s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0537419s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0537507s, 27832 KB] g=54, 429 evaluated, 428 expanded
[t=0.054341s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0543522s, 27832 KB] g=56, 445 evaluated, 444 expanded
[t=0.0548208s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0548495s, 27832 KB] g=56, 456 evaluated, 455 expanded
[t=0.0553171s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0553357s, 27832 KB] g=58, 468 evaluated, 467 expanded
[t=0.0561228s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0561398s, 27832 KB] g=58, 488 evaluated, 487 expanded
[t=0.0562269s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.056236s, 27832 KB] g=60, 490 evaluated, 489 expanded
[t=0.0571312s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0571472s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0571561s, 27832 KB] g=62, 513 evaluated, 512 expanded
[t=0.0573899s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0574004s, 27832 KB] g=63, 519 evaluated, 518 expanded
[t=0.0577073s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0577208s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0577293s, 27832 KB] g=64, 527 evaluated, 526 expanded
[t=0.0579565s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0579715s, 27832 KB] g=65, 533 evaluated, 532 expanded
[t=0.0583184s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0583308s, 27832 KB] g=66, 542 evaluated, 541 expanded
[t=0.0589183s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0589322s, 27832 KB] g=68, 557 evaluated, 556 expanded
[t=0.0590519s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0590631s, 27832 KB] g=68, 560 evaluated, 559 expanded
[t=0.0597344s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0597476s, 27832 KB] g=70, 577 evaluated, 576 expanded
[t=0.0600166s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0600266s, 27832 KB] g=70, 584 evaluated, 583 expanded
[t=0.0602893s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0602986s, 27832 KB] g=72, 591 evaluated, 590 expanded
[t=0.0607443s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0607554s, 27832 KB] g=72, 603 evaluated, 602 expanded
[t=0.0613765s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0613875s, 27832 KB] g=74, 620 evaluated, 619 expanded
[t=0.0618596s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0618706s, 27832 KB] g=76, 633 evaluated, 632 expanded
[t=0.0623379s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0623479s, 27832 KB] g=78, 646 evaluated, 645 expanded
[t=0.0625336s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0625489s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0625599s, 27832 KB] g=80, 651 evaluated, 650 expanded
[t=0.0636047s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0636157s, 27832 KB] g=84, 680 evaluated, 679 expanded
[t=0.0638437s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0638543s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0638638s, 27832 KB] g=86, 686 evaluated, 685 expanded
[t=0.064349s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0643687s, 27832 KB] g=88, 699 evaluated, 698 expanded
[t=0.0647039s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0647138s, 27832 KB] g=90, 708 evaluated, 707 expanded
[t=0.0655641s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0655743s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0655826s, 27832 KB] g=96, 732 evaluated, 731 expanded
[t=0.0812285s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0812933s, 27832 KB] g=132, 1165 evaluated, 1164 expanded
[t=0.0824561s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.082468s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0824765s, 27832 KB] g=150, 1198 evaluated, 1197 expanded
[t=0.190532s, 28368 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.190651s, 28368 KB] g=202, 4242 evaluated, 4241 expanded
[t=0.190824s, 28368 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.190836s, 28368 KB] g=204, 4246 evaluated, 4245 expanded
[t=0.192627s, 28368 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.192643s, 28368 KB] g=216, 4300 evaluated, 4299 expanded
[t=0.192932s, 28368 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.192942s, 28368 KB] g=220, 4309 evaluated, 4308 expanded
[t=0.193057s, 28368 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.193073s, 28368 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.193081s, 28368 KB] g=222, 4312 evaluated, 4311 expanded
[t=0.199579s, 28368 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.1996s, 28368 KB] g=256, 4560 evaluated, 4559 expanded
[t=0.199827s, 28368 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.199838s, 28368 KB] g=260, 4569 evaluated, 4568 expanded
[t=0.199916s, 28368 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.199925s, 28368 KB] g=262, 4572 evaluated, 4571 expanded
[t=0.200704s, 28368 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.200723s, 28368 KB] g=278, 4609 evaluated, 4608 expanded
[t=0.200928s, 28368 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.200938s, 28368 KB] g=286, 4620 evaluated, 4619 expanded
[t=0.20096s, 28368 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.200985s, 28368 KB] g=287, 4621 evaluated, 4620 expanded
[t=0.201002s, 28368 KB] Solution found!
[t=0.20102s, 28368 KB] Actual search time: 0.16421s
unstack b5 b11 (1)
put-down b5 (1)
unstack b11 b4 (1)
stack b11 b5 (1)
unstack b12 b9 (1)
put-down b12 (1)
unstack b6 b22 (1)
put-down b6 (1)
unstack b22 b19 (1)
put-down b22 (1)
unstack b19 b16 (1)
put-down b19 (1)
unstack b9 b28 (1)
stack b9 b22 (1)
unstack b16 b15 (1)
put-down b16 (1)
unstack b15 b26 (1)
put-down b15 (1)
unstack b28 b17 (1)
stack b28 b4 (1)
unstack b17 b20 (1)
stack b17 b9 (1)
unstack b20 b1 (1)
put-down b20 (1)
unstack b1 b10 (1)
put-down b1 (1)
pick-up b10 (1)
stack b10 b16 (1)
pick-up b20 (1)
stack b20 b10 (1)
pick-up b6 (1)
stack b6 b26 (1)
pick-up b15 (1)
stack b15 b6 (1)
unstack b28 b4 (1)
put-down b28 (1)
unstack b4 b3 (1)
put-down b4 (1)
unstack b3 b8 (1)
put-down b3 (1)
unstack b8 b21 (1)
stack b8 b17 (1)
unstack b21 b14 (1)
put-down b21 (1)
unstack b14 b2 (1)
put-down b14 (1)
unstack b2 b7 (1)
put-down b2 (1)
unstack b7 b23 (1)
stack b7 b12 (1)
unstack b23 b18 (1)
stack b23 b28 (1)
unstack b18 b13 (1)
put-down b18 (1)
pick-up b24 (1)
stack b24 b21 (1)
pick-up b1 (1)
stack b1 b8 (1)
pick-up b13 (1)
stack b13 b1 (1)
pick-up b14 (1)
stack b14 b7 (1)
pick-up b19 (1)
stack b19 b18 (1)
unstack b24 b21 (1)
put-down b24 (1)
pick-up b3 (1)
stack b3 b19 (1)
pick-up b21 (1)
stack b21 b13 (1)
pick-up b24 (1)
stack b24 b21 (1)
pick-up b27 (1)
stack b27 b14 (1)
pick-up b2 (1)
stack b2 b27 (1)
pick-up b25 (1)
stack b25 b2 (1)
pick-up b4 (1)
stack b4 b3 (1)
unstack b15 b6 (1)
put-down b15 (1)
unstack b6 b26 (1)
put-down b6 (1)
pick-up b26 (1)
stack b26 b25 (1)
pick-up b6 (1)
stack b6 b26 (1)
pick-up b15 (1)
stack b15 b6 (1)
unstack b23 b28 (1)
put-down b23 (1)
pick-up b28 (1)
stack b28 b4 (1)
pick-up b23 (1)
stack b23 b28 (1)
unstack b24 b21 (1)
put-down b24 (1)
unstack b21 b13 (1)
put-down b21 (1)
pick-up b24 (1)
stack b24 b21 (1)
unstack b13 b1 (1)
put-down b13 (1)
unstack b1 b8 (1)
put-down b1 (1)
pick-up b13 (1)
stack b13 b1 (1)
unstack b24 b21 (1)
put-down b24 (1)
pick-up b21 (1)
stack b21 b13 (1)
pick-up b24 (1)
stack b24 b21 (1)
unstack b8 b17 (1)
put-down b8 (1)
unstack b17 b9 (1)
put-down b17 (1)
pick-up b8 (1)
stack b8 b17 (1)
unstack b9 b22 (1)
put-down b9 (1)
pick-up b22 (1)
stack b22 b15 (1)
unstack b8 b17 (1)
put-down b8 (1)
pick-up b17 (1)
stack b17 b9 (1)
pick-up b8 (1)
stack b8 b17 (1)
unstack b22 b15 (1)
put-down b22 (1)
unstack b15 b6 (1)
put-down b15 (1)
pick-up b22 (1)
stack b22 b15 (1)
unstack b8 b17 (1)
put-down b8 (1)
unstack b17 b9 (1)
put-down b17 (1)
pick-up b8 (1)
stack b8 b17 (1)
pick-up b9 (1)
stack b9 b22 (1)
unstack b8 b17 (1)
put-down b8 (1)
pick-up b17 (1)
stack b17 b9 (1)
pick-up b8 (1)
stack b8 b17 (1)
unstack b24 b21 (1)
put-down b24 (1)
unstack b21 b13 (1)
put-down b21 (1)
pick-up b24 (1)
stack b24 b21 (1)
unstack b13 b1 (1)
put-down b13 (1)
pick-up b1 (1)
stack b1 b8 (1)
pick-up b13 (1)
stack b13 b1 (1)
unstack b24 b21 (1)
put-down b24 (1)
pick-up b21 (1)
stack b21 b13 (1)
pick-up b24 (1)
stack b24 b21 (1)
unstack b6 b26 (1)
put-down b6 (1)
unstack b26 b25 (1)
put-down b26 (1)
pick-up b6 (1)
stack b6 b26 (1)
unstack b25 b2 (1)
put-down b25 (1)
unstack b2 b27 (1)
put-down b2 (1)
pick-up b25 (1)
stack b25 b2 (1)
unstack b6 b26 (1)
put-down b6 (1)
pick-up b26 (1)
stack b26 b25 (1)
pick-up b6 (1)
stack b6 b26 (1)
unstack b27 b14 (1)
put-down b27 (1)
unstack b14 b7 (1)
put-down b14 (1)
pick-up b27 (1)
stack b27 b14 (1)
unstack b7 b12 (1)
put-down b7 (1)
pick-up b12 (1)
stack b12 b23 (1)
pick-up b7 (1)
stack b7 b12 (1)
unstack b27 b14 (1)
put-down b27 (1)
pick-up b14 (1)
stack b14 b7 (1)
pick-up b27 (1)
stack b27 b14 (1)
unstack b6 b26 (1)
put-down b6 (1)
unstack b26 b25 (1)
put-down b26 (1)
pick-up b6 (1)
stack b6 b26 (1)
unstack b25 b2 (1)
put-down b25 (1)
pick-up b2 (1)
stack b2 b27 (1)
pick-up b25 (1)
stack b25 b2 (1)
unstack b6 b26 (1)
put-down b6 (1)
pick-up b26 (1)
stack b26 b25 (1)
pick-up b6 (1)
stack b6 b26 (1)
unstack b24 b21 (1)
put-down b24 (1)
unstack b21 b13 (1)
put-down b21 (1)
pick-up b24 (1)
stack b24 b21 (1)
unstack b13 b1 (1)
put-down b13 (1)
unstack b1 b8 (1)
put-down b1 (1)
unstack b8 b17 (1)
put-down b8 (1)
pick-up b1 (1)
stack b1 b8 (1)
pick-up b13 (1)
stack b13 b1 (1)
unstack b24 b21 (1)
put-down b24 (1)
pick-up b21 (1)
stack b21 b13 (1)
pick-up b24 (1)
stack b24 b21 (1)
unstack b17 b9 (1)
put-down b17 (1)
unstack b9 b22 (1)
put-down b9 (1)
pick-up b17 (1)
stack b17 b9 (1)
unstack b22 b15 (1)
put-down b22 (1)
pick-up b15 (1)
stack b15 b6 (1)
pick-up b22 (1)
stack b22 b15 (1)
unstack b17 b9 (1)
put-down b17 (1)
pick-up b9 (1)
stack b9 b22 (1)
pick-up b17 (1)
stack b17 b9 (1)
unstack b24 b21 (1)
put-down b24 (1)
unstack b21 b13 (1)
put-down b21 (1)
unstack b13 b1 (1)
put-down b13 (1)
pick-up b21 (1)
stack b21 b13 (1)
pick-up b24 (1)
stack b24 b21 (1)
unstack b1 b8 (1)
put-down b1 (1)
pick-up b8 (1)
stack b8 b17 (1)
pick-up b1 (1)
stack b1 b8 (1)
unstack b24 b21 (1)
put-down b24 (1)
unstack b21 b13 (1)
put-down b21 (1)
pick-up b13 (1)
stack b13 b1 (1)
pick-up b21 (1)
stack b21 b13 (1)
pick-up b24 (1)
stack b24 b21 (1)
[t=0.201038s, 28368 KB] Plan length: 288 step(s).
[t=0.201038s, 28368 KB] Plan cost: 288
[t=0.201038s, 28368 KB] Expanded 4621 state(s).
[t=0.201038s, 28368 KB] Reopened 0 state(s).
[t=0.201038s, 28368 KB] Evaluated 4622 state(s).
[t=0.201038s, 28368 KB] Evaluations: 9244
[t=0.201038s, 28368 KB] Generated 42771 state(s).
[t=0.201038s, 28368 KB] Dead ends: 0 state(s).
[t=0.201038s, 28368 KB] Number of registered states: 4622
[t=0.201038s, 28368 KB] Int hash set load factor: 4622/8192 = 0.564209
[t=0.201038s, 28368 KB] Int hash set resizes: 13
[t=0.201038s, 28368 KB] Search time: 0.164257s
[t=0.201038s, 28368 KB] Total time: 0.201038s
Solution found.
Peak memory: 28368 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.39s
