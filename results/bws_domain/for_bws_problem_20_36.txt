INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_20/bws_problem_20_36.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.008s wall-clock]
1342 relevant atoms
900 auxiliary atoms
2242 final queue length
3888 total queue pushes
Completing instantiation... [0.010s CPU, 0.015s wall-clock]
Instantiating: [0.020s CPU, 0.025s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
21 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.006s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.024s wall-clock]
1180 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
40 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.010s wall-clock]
Reordering and filtering variables...
41 of 41 variables necessary.
21 of 41 mutex groups necessary.
800 of 800 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.005s wall-clock]
Translator variables: 41
Translator derived variables: 0
Translator facts: 462
Translator goal facts: 16
Translator mutex groups: 21
Translator total mutex groups size: 441
Translator operators: 800
Translator axioms: 0
Translator task size: 6900
Translator peak memory: 35944 KB
Writing output... [0.000s CPU, 0.004s wall-clock]
Done! [0.070s CPU, 0.080s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.0266e-05s, 24488 KB] reading input...
[t=0.00215708s, 25180 KB] done reading input!
[t=0.00323465s, 25444 KB] Initializing landmark count heuristic...
[t=0.00327435s, 25444 KB] Generating landmark graph...
[t=0.00333853s, 25576 KB] Building a landmark graph with reasonable orders.
[t=0.00339537s, 25576 KB] Initializing Exploration...
[t=0.00367335s, 25744 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0104964s, 26140 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0105968s, 26140 KB] Landmarks generation time: 0.00725988s
[t=0.0106127s, 26140 KB] Discovered 82 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0106456s, 26140 KB] 234 edges
[t=0.0106563s, 26140 KB] approx. reasonable orders
[t=0.0112339s, 26140 KB] approx. obedient reasonable orders
[t=0.0112602s, 26140 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0112692s, 26140 KB] Landmarks generation time: 0.00799195s
[t=0.0112785s, 26140 KB] Discovered 82 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0112867s, 26140 KB] 245 edges
[t=0.0112952s, 26140 KB] Landmark graph generation time: 0.00802816s
[t=0.0113041s, 26140 KB] Landmark graph contains 82 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0113123s, 26140 KB] Landmark graph contains 245 orderings.
[t=0.0116693s, 26284 KB] Simplifying 3160 unary operators... done! [2400 unary operators]
[t=0.0124601s, 26284 KB] time to simplify: 0.000877485s
[t=0.0125971s, 26284 KB] Initializing additive heuristic...
[t=0.0126108s, 26284 KB] Initializing FF heuristic...
[t=0.012672s, 26284 KB] Building successor generator...done!
[t=0.0128604s, 26284 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0128691s, 26284 KB] time for successor generation creation: 0.000141001s
[t=0.0128805s, 26284 KB] Variables: 41
[t=0.0128892s, 26284 KB] FactPairs: 462
[t=0.0128975s, 26284 KB] Bytes per state: 16
[t=0.012983s, 26284 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0130158s, 26284 KB] 40 initial landmarks, 16 goal landmarks
[t=0.013059s, 26284 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0130682s, 26284 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0130766s, 26284 KB] g=0, 1 evaluated, 0 expanded
[t=0.0130905s, 26284 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0130993s, 26284 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0132644s, 26284 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0132739s, 26284 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.013282s, 26284 KB] g=2, 8 evaluated, 7 expanded
[t=0.0134391s, 26284 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0134491s, 26284 KB] g=4, 15 evaluated, 14 expanded
[t=0.0134811s, 26284 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.01349s, 26284 KB] g=4, 16 evaluated, 15 expanded
[t=0.0137495s, 26284 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0137605s, 26284 KB] g=6, 28 evaluated, 27 expanded
[t=0.0140611s, 26284 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0140707s, 26284 KB] g=8, 42 evaluated, 41 expanded
[t=0.0145254s, 26284 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0145568s, 26284 KB] g=10, 60 evaluated, 59 expanded
[t=0.014944s, 26284 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0149669s, 26284 KB] g=8, 73 evaluated, 72 expanded
[t=0.0150015s, 26284 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0150109s, 26284 KB] g=12, 74 evaluated, 73 expanded
[t=0.0153585s, 26284 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.015371s, 26284 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0153794s, 26284 KB] g=14, 89 evaluated, 88 expanded
[t=0.015586s, 26284 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0156041s, 26284 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0156133s, 26284 KB] g=16, 98 evaluated, 97 expanded
[t=0.015835s, 26284 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0158445s, 26284 KB] g=18, 108 evaluated, 107 expanded
[t=0.0158781s, 26284 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0158882s, 26284 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0158974s, 26284 KB] g=18, 109 evaluated, 108 expanded
[t=0.0160764s, 26284 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0160854s, 26284 KB] g=20, 117 evaluated, 116 expanded
[t=0.0161182s, 26284 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.016127s, 26284 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0161352s, 26284 KB] g=20, 118 evaluated, 117 expanded
[t=0.016292s, 26284 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0163022s, 26284 KB] g=22, 125 evaluated, 124 expanded
[t=0.0164711s, 26284 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0164802s, 26284 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0164882s, 26284 KB] g=24, 132 evaluated, 131 expanded
[t=0.0168143s, 26284 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0168241s, 26284 KB] g=27, 147 evaluated, 146 expanded
[t=0.0168552s, 26284 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0168639s, 26284 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0168718s, 26284 KB] g=28, 148 evaluated, 147 expanded
[t=0.017045s, 26284 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.017054s, 26284 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0170623s, 26284 KB] g=30, 156 evaluated, 155 expanded
[t=0.0172335s, 26284 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0172478s, 26284 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0172558s, 26284 KB] g=32, 164 evaluated, 163 expanded
[t=0.0174188s, 26284 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0174277s, 26284 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0174355s, 26284 KB] g=34, 171 evaluated, 170 expanded
[t=0.0175459s, 26284 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0175547s, 26284 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0175625s, 26284 KB] g=36, 176 evaluated, 175 expanded
[t=0.0178587s, 26284 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0178719s, 26284 KB] g=39, 190 evaluated, 189 expanded
[t=0.0179041s, 26284 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0179137s, 26284 KB] g=40, 191 evaluated, 190 expanded
[t=0.0180089s, 26284 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0180211s, 26284 KB] g=41, 195 evaluated, 194 expanded
[t=0.0180533s, 26284 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0180623s, 26284 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0180706s, 26284 KB] g=42, 196 evaluated, 195 expanded
[t=0.0181647s, 26284 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0181742s, 26284 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0181828s, 26284 KB] g=44, 200 evaluated, 199 expanded
[t=0.0188964s, 26284 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0189065s, 26284 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0189147s, 26284 KB] g=52, 234 evaluated, 233 expanded
[t=0.0189895s, 26284 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.019001s, 26284 KB] g=52, 237 evaluated, 236 expanded
[t=0.0190912s, 26284 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0191005s, 26284 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0191402s, 26284 KB] g=54, 241 evaluated, 240 expanded
[t=0.0200674s, 26284 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0200867s, 26284 KB] g=66, 286 evaluated, 285 expanded
[t=0.0202374s, 26284 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0202476s, 26284 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0202558s, 26284 KB] g=72, 293 evaluated, 292 expanded
[t=0.0227831s, 26284 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0228019s, 26284 KB] g=98, 425 evaluated, 424 expanded
[t=0.0229755s, 26284 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0229853s, 26284 KB] g=102, 434 evaluated, 433 expanded
[t=0.0230456s, 26284 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0230544s, 26284 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0230624s, 26284 KB] g=104, 437 evaluated, 436 expanded
[t=0.0236398s, 26284 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0236515s, 26284 KB] g=120, 474 evaluated, 473 expanded
[t=0.0237911s, 26284 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0238s, 26284 KB] g=128, 485 evaluated, 484 expanded
[t=0.0238164s, 26284 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0238249s, 26284 KB] g=129, 486 evaluated, 485 expanded
[t=0.0238392s, 26284 KB] Solution found!
[t=0.0238506s, 26284 KB] Actual search time: 0.0108326s
unstack b3 b4 (1)
put-down b3 (1)
unstack b1 b5 (1)
put-down b1 (1)
unstack b2 b17 (1)
put-down b2 (1)
unstack b4 b16 (1)
put-down b4 (1)
unstack b7 b18 (1)
stack b7 b4 (1)
unstack b18 b6 (1)
stack b18 b2 (1)
unstack b6 b15 (1)
stack b6 b1 (1)
unstack b16 b10 (1)
put-down b16 (1)
pick-up b12 (1)
stack b12 b7 (1)
pick-up b5 (1)
stack b5 b6 (1)
unstack b10 b13 (1)
put-down b10 (1)
pick-up b9 (1)
stack b9 b13 (1)
unstack b17 b20 (1)
put-down b17 (1)
unstack b20 b14 (1)
stack b20 b16 (1)
unstack b14 b11 (1)
put-down b14 (1)
pick-up b10 (1)
stack b10 b14 (1)
pick-up b11 (1)
stack b11 b18 (1)
pick-up b17 (1)
stack b17 b20 (1)
unstack b15 b19 (1)
put-down b15 (1)
unstack b19 b8 (1)
stack b19 b12 (1)
pick-up b8 (1)
stack b8 b5 (1)
pick-up b15 (1)
stack b15 b19 (1)
unstack b11 b18 (1)
put-down b11 (1)
unstack b18 b2 (1)
put-down b18 (1)
pick-up b2 (1)
stack b2 b10 (1)
pick-up b18 (1)
stack b18 b2 (1)
pick-up b11 (1)
stack b11 b18 (1)
unstack b8 b5 (1)
put-down b8 (1)
unstack b5 b6 (1)
put-down b5 (1)
pick-up b8 (1)
stack b8 b5 (1)
unstack b6 b1 (1)
put-down b6 (1)
pick-up b1 (1)
stack b1 b15 (1)
unstack b8 b5 (1)
put-down b8 (1)
pick-up b5 (1)
stack b5 b6 (1)
pick-up b8 (1)
stack b8 b5 (1)
unstack b1 b15 (1)
put-down b1 (1)
unstack b15 b19 (1)
put-down b15 (1)
pick-up b1 (1)
stack b1 b15 (1)
unstack b8 b5 (1)
put-down b8 (1)
unstack b5 b6 (1)
put-down b5 (1)
pick-up b6 (1)
stack b6 b1 (1)
pick-up b5 (1)
stack b5 b6 (1)
pick-up b8 (1)
stack b8 b5 (1)
unstack b19 b12 (1)
put-down b19 (1)
unstack b12 b7 (1)
put-down b12 (1)
pick-up b19 (1)
stack b19 b12 (1)
unstack b7 b4 (1)
put-down b7 (1)
pick-up b4 (1)
stack b4 b11 (1)
pick-up b7 (1)
stack b7 b4 (1)
unstack b19 b12 (1)
put-down b19 (1)
pick-up b12 (1)
stack b12 b7 (1)
pick-up b19 (1)
stack b19 b12 (1)
unstack b8 b5 (1)
put-down b8 (1)
unstack b5 b6 (1)
put-down b5 (1)
unstack b6 b1 (1)
put-down b6 (1)
pick-up b5 (1)
stack b5 b6 (1)
pick-up b8 (1)
stack b8 b5 (1)
unstack b1 b15 (1)
put-down b1 (1)
pick-up b15 (1)
stack b15 b19 (1)
pick-up b1 (1)
stack b1 b15 (1)
unstack b8 b5 (1)
put-down b8 (1)
unstack b5 b6 (1)
put-down b5 (1)
pick-up b6 (1)
stack b6 b1 (1)
pick-up b5 (1)
stack b5 b6 (1)
pick-up b8 (1)
stack b8 b5 (1)
[t=0.0238604s, 26284 KB] Plan length: 130 step(s).
[t=0.0238604s, 26284 KB] Plan cost: 130
[t=0.0238604s, 26284 KB] Expanded 486 state(s).
[t=0.0238604s, 26284 KB] Reopened 0 state(s).
[t=0.0238604s, 26284 KB] Evaluated 487 state(s).
[t=0.0238604s, 26284 KB] Evaluations: 974
[t=0.0238604s, 26284 KB] Generated 4230 state(s).
[t=0.0238604s, 26284 KB] Dead ends: 0 state(s).
[t=0.0238604s, 26284 KB] Number of registered states: 487
[t=0.0238604s, 26284 KB] Int hash set load factor: 487/512 = 0.951172
[t=0.0238604s, 26284 KB] Int hash set resizes: 9
[t=0.0238604s, 26284 KB] Search time: 0.0108779s
[t=0.0238604s, 26284 KB] Total time: 0.0238604s
Solution found.
Peak memory: 26284 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.15s
