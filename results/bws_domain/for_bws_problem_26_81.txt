INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_26/bws_problem_26_81.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.014s wall-clock]
2212 relevant atoms
1482 auxiliary atoms
3694 final queue length
6456 total queue pushes
Completing instantiation... [0.020s CPU, 0.024s wall-clock]
Instantiating: [0.040s CPU, 0.039s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
27 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.008s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.040s CPU, 0.035s wall-clock]
2002 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
52 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.022s wall-clock]
Reordering and filtering variables...
53 of 53 variables necessary.
27 of 53 mutex groups necessary.
1352 of 1352 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.009s wall-clock]
Translator variables: 53
Translator derived variables: 0
Translator facts: 756
Translator goal facts: 22
Translator mutex groups: 27
Translator total mutex groups size: 729
Translator operators: 1352
Translator axioms: 0
Translator task size: 11622
Translator peak memory: 38896 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.120s CPU, 0.126s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.0448e-05s, 24488 KB] reading input...
[t=0.00381957s, 25744 KB] done reading input!
[t=0.00477017s, 26140 KB] Initializing landmark count heuristic...
[t=0.0048116s, 26140 KB] Generating landmark graph...
[t=0.00489256s, 26272 KB] Building a landmark graph with reasonable orders.
[t=0.00496519s, 26272 KB] Initializing Exploration...
[t=0.00536688s, 26680 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0212639s, 27208 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0213461s, 27208 KB] Landmarks generation time: 0.0164545s
[t=0.02136s, 27208 KB] Discovered 113 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0213757s, 27208 KB] 405 edges
[t=0.0213857s, 27208 KB] approx. reasonable orders
[t=0.0218975s, 27208 KB] approx. obedient reasonable orders
[t=0.0219245s, 27208 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0219335s, 27208 KB] Landmarks generation time: 0.0171186s
[t=0.0219425s, 27208 KB] Discovered 113 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0219501s, 27208 KB] 412 edges
[t=0.0219767s, 27208 KB] Landmark graph generation time: 0.0171721s
[t=0.0219853s, 27208 KB] Landmark graph contains 113 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0219934s, 27208 KB] Landmark graph contains 412 orderings.
[t=0.0226098s, 27208 KB] Simplifying 5356 unary operators... done! [4056 unary operators]
[t=0.0239345s, 27340 KB] time to simplify: 0.0014167s
[t=0.0241101s, 27340 KB] Initializing additive heuristic...
[t=0.0241276s, 27340 KB] Initializing FF heuristic...
[t=0.0242056s, 27340 KB] Building successor generator...done!
[t=0.0245592s, 27340 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0245708s, 27340 KB] time for successor generation creation: 0.000307291s
[t=0.024589s, 27340 KB] Variables: 53
[t=0.0245977s, 27340 KB] FactPairs: 756
[t=0.024606s, 27340 KB] Bytes per state: 20
[t=0.0247734s, 27340 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0248282s, 27340 KB] 51 initial landmarks, 22 goal landmarks
[t=0.0249072s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 62
[t=0.0249171s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0249258s, 27340 KB] g=0, 1 evaluated, 0 expanded
[t=0.0249429s, 27340 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 62
[t=0.0249517s, 27340 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0250375s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 61
[t=0.0250511s, 27340 KB] g=1, 3 evaluated, 2 expanded
[t=0.0254271s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 60
[t=0.0254387s, 27340 KB] g=3, 14 evaluated, 13 expanded
[t=0.0258897s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 58
[t=0.0259003s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.0259084s, 27340 KB] g=6, 27 evaluated, 26 expanded
[t=0.0261774s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 57
[t=0.0261879s, 27340 KB] g=8, 35 evaluated, 34 expanded
[t=0.0263614s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0263724s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0263806s, 27340 KB] g=8, 40 evaluated, 39 expanded
[t=0.0266497s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0266646s, 27340 KB] g=10, 48 evaluated, 47 expanded
[t=0.0267067s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0267171s, 27340 KB] g=10, 49 evaluated, 48 expanded
[t=0.027289s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0273091s, 27340 KB] g=12, 66 evaluated, 65 expanded
[t=0.0279197s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0279412s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.027974s, 27340 KB] g=14, 84 evaluated, 83 expanded
[t=0.0282984s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0283111s, 27340 KB] g=16, 93 evaluated, 92 expanded
[t=0.0284222s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0284329s, 27340 KB] g=16, 96 evaluated, 95 expanded
[t=0.029215s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0292374s, 27340 KB] g=18, 121 evaluated, 120 expanded
[t=0.0296917s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0297046s, 27340 KB] g=20, 133 evaluated, 132 expanded
[t=0.029992s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0300017s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0300099s, 27340 KB] g=22, 142 evaluated, 141 expanded
[t=0.030353s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0303637s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0303742s, 27340 KB] g=24, 152 evaluated, 151 expanded
[t=0.0306908s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0307029s, 27340 KB] g=26, 160 evaluated, 159 expanded
[t=0.0310038s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.031014s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0310229s, 27340 KB] g=28, 169 evaluated, 168 expanded
[t=0.0315818s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0315925s, 27340 KB] g=31, 185 evaluated, 184 expanded
[t=0.0322536s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0322643s, 27340 KB] g=34, 205 evaluated, 204 expanded
[t=0.0325791s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0325889s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.032597s, 27340 KB] g=36, 215 evaluated, 214 expanded
[t=0.032886s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0328958s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0329038s, 27340 KB] g=38, 224 evaluated, 223 expanded
[t=0.0331649s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0331742s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0331819s, 27340 KB] g=40, 232 evaluated, 231 expanded
[t=0.0334447s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0334536s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0334612s, 27340 KB] g=42, 240 evaluated, 239 expanded
[t=0.0340191s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0340278s, 27340 KB] g=45, 257 evaluated, 256 expanded
[t=0.0341077s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0341163s, 27340 KB] g=46, 259 evaluated, 258 expanded
[t=0.0343742s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.034396s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0344047s, 27340 KB] g=48, 266 evaluated, 265 expanded
[t=0.0345409s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.03455s, 27340 KB] g=49, 270 evaluated, 269 expanded
[t=0.0345935s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0346022s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0346101s, 27340 KB] g=50, 271 evaluated, 270 expanded
[t=0.0348427s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0348518s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0348598s, 27340 KB] g=52, 278 evaluated, 277 expanded
[t=0.0350592s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0350702s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0350785s, 27340 KB] g=54, 284 evaluated, 283 expanded
[t=0.0355335s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0355453s, 27340 KB] g=57, 298 evaluated, 297 expanded
[t=0.0355884s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0356066s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0356147s, 27340 KB] g=58, 299 evaluated, 298 expanded
[t=0.0358118s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0358211s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0358295s, 27340 KB] g=60, 305 evaluated, 304 expanded
[t=0.0360014s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0360117s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0360202s, 27340 KB] g=62, 310 evaluated, 309 expanded
[t=0.0362042s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0362132s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0362214s, 27340 KB] g=64, 315 evaluated, 314 expanded
[t=0.036354s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.036363s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0363711s, 27340 KB] g=66, 319 evaluated, 318 expanded
[t=0.0396077s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0396373s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0396475s, 27340 KB] g=80, 426 evaluated, 425 expanded
[t=0.039806s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.039816s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0398246s, 27340 KB] g=82, 431 evaluated, 430 expanded
[t=0.0403278s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.040344s, 27340 KB] g=86, 447 evaluated, 446 expanded
[t=0.040471s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0404819s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0404989s, 27340 KB] g=88, 451 evaluated, 450 expanded
[t=0.0421508s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0421669s, 27340 KB] g=102, 511 evaluated, 510 expanded
[t=0.0422838s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0422958s, 27340 KB] g=102, 514 evaluated, 513 expanded
[t=0.042408s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0424208s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0424296s, 27340 KB] g=104, 518 evaluated, 517 expanded
[t=0.042655s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0426717s, 27340 KB] g=108, 527 evaluated, 526 expanded
[t=0.0427502s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0427627s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0427716s, 27340 KB] g=110, 530 evaluated, 529 expanded
[t=0.043383s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0434015s, 27340 KB] g=124, 560 evaluated, 559 expanded
[t=0.0434644s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0434756s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0434843s, 27340 KB] g=126, 563 evaluated, 562 expanded
[t=0.0435533s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0435639s, 27340 KB] g=130, 567 evaluated, 566 expanded
[t=0.0435823s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0435908s, 27340 KB] g=131, 568 evaluated, 567 expanded
[t=0.0436065s, 27340 KB] Solution found!
[t=0.0436203s, 27340 KB] Actual search time: 0.0187771s
unstack b13 b23 (1)
put-down b13 (1)
unstack b23 b22 (1)
put-down b23 (1)
unstack b12 b2 (1)
stack b12 b22 (1)
unstack b2 b1 (1)
stack b2 b17 (1)
unstack b1 b11 (1)
stack b1 b16 (1)
unstack b5 b9 (1)
put-down b5 (1)
unstack b9 b24 (1)
stack b9 b18 (1)
pick-up b5 (1)
stack b5 b24 (1)
unstack b1 b16 (1)
put-down b1 (1)
unstack b16 b26 (1)
stack b16 b9 (1)
unstack b26 b6 (1)
put-down b26 (1)
pick-up b1 (1)
stack b1 b16 (1)
unstack b6 b8 (1)
put-down b6 (1)
unstack b8 b20 (1)
stack b8 b12 (1)
unstack b11 b4 (1)
put-down b11 (1)
unstack b4 b10 (1)
put-down b4 (1)
unstack b10 b15 (1)
stack b10 b8 (1)
pick-up b11 (1)
stack b11 b4 (1)
pick-up b23 (1)
stack b23 b10 (1)
pick-up b15 (1)
stack b15 b26 (1)
pick-up b6 (1)
stack b6 b15 (1)
unstack b2 b17 (1)
put-down b2 (1)
unstack b17 b21 (1)
stack b17 b11 (1)
unstack b21 b19 (1)
put-down b21 (1)
unstack b19 b25 (1)
stack b19 b21 (1)
pick-up b13 (1)
stack b13 b25 (1)
pick-up b2 (1)
stack b2 b17 (1)
unstack b5 b24 (1)
put-down b5 (1)
unstack b24 b7 (1)
stack b24 b20 (1)
pick-up b5 (1)
stack b5 b24 (1)
unstack b7 b14 (1)
stack b7 b5 (1)
unstack b14 b3 (1)
stack b14 b1 (1)
pick-up b3 (1)
stack b3 b2 (1)
unstack b23 b10 (1)
put-down b23 (1)
unstack b10 b8 (1)
put-down b10 (1)
pick-up b23 (1)
stack b23 b10 (1)
unstack b8 b12 (1)
put-down b8 (1)
unstack b12 b22 (1)
put-down b12 (1)
pick-up b22 (1)
stack b22 b6 (1)
pick-up b12 (1)
stack b12 b22 (1)
pick-up b8 (1)
stack b8 b12 (1)
unstack b23 b10 (1)
put-down b23 (1)
pick-up b10 (1)
stack b10 b8 (1)
pick-up b23 (1)
stack b23 b10 (1)
unstack b14 b1 (1)
put-down b14 (1)
unstack b1 b16 (1)
put-down b1 (1)
pick-up b14 (1)
stack b14 b1 (1)
unstack b16 b9 (1)
put-down b16 (1)
unstack b9 b18 (1)
put-down b9 (1)
pick-up b18 (1)
stack b18 b7 (1)
pick-up b9 (1)
stack b9 b18 (1)
pick-up b16 (1)
stack b16 b9 (1)
unstack b14 b1 (1)
put-down b14 (1)
pick-up b1 (1)
stack b1 b16 (1)
pick-up b14 (1)
stack b14 b1 (1)
unstack b3 b2 (1)
put-down b3 (1)
unstack b2 b17 (1)
put-down b2 (1)
pick-up b3 (1)
stack b3 b2 (1)
unstack b17 b11 (1)
put-down b17 (1)
unstack b11 b4 (1)
put-down b11 (1)
pick-up b4 (1)
stack b4 b14 (1)
pick-up b11 (1)
stack b11 b4 (1)
pick-up b17 (1)
stack b17 b11 (1)
unstack b3 b2 (1)
put-down b3 (1)
pick-up b2 (1)
stack b2 b17 (1)
pick-up b3 (1)
stack b3 b2 (1)
[t=0.0436305s, 27340 KB] Plan length: 132 step(s).
[t=0.0436305s, 27340 KB] Plan cost: 132
[t=0.0436305s, 27340 KB] Expanded 568 state(s).
[t=0.0436305s, 27340 KB] Reopened 0 state(s).
[t=0.0436305s, 27340 KB] Evaluated 569 state(s).
[t=0.0436305s, 27340 KB] Evaluations: 1138
[t=0.0436305s, 27340 KB] Generated 5263 state(s).
[t=0.0436305s, 27340 KB] Dead ends: 0 state(s).
[t=0.0436305s, 27340 KB] Number of registered states: 569
[t=0.0436305s, 27340 KB] Int hash set load factor: 569/1024 = 0.555664
[t=0.0436305s, 27340 KB] Int hash set resizes: 10
[t=0.0436305s, 27340 KB] Search time: 0.018858s
[t=0.0436305s, 27340 KB] Total time: 0.0436305s
Solution found.
Peak memory: 27340 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.22s
