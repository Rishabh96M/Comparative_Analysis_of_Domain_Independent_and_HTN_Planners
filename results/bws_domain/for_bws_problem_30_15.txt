INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_30/bws_problem_30_15.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.017s wall-clock]
2912 relevant atoms
1950 auxiliary atoms
4862 final queue length
8527 total queue pushes
Completing instantiation... [0.030s CPU, 0.029s wall-clock]
Instantiating: [0.050s CPU, 0.048s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
31 uncovered facts
Choosing groups: [0.000s CPU, 0.002s wall-clock]
Building translation key... [0.010s CPU, 0.001s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.001s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.002s wall-clock]
Translating task: [0.050s CPU, 0.050s wall-clock]
2670 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
60 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.022s wall-clock]
Reordering and filtering variables...
61 of 61 variables necessary.
31 of 61 mutex groups necessary.
1800 of 1800 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.011s wall-clock]
Translator variables: 61
Translator derived variables: 0
Translator facts: 992
Translator goal facts: 26
Translator mutex groups: 31
Translator total mutex groups size: 961
Translator operators: 1800
Translator axioms: 0
Translator task size: 15450
Translator peak memory: 41336 KB
Writing output... [0.010s CPU, 0.009s wall-clock]
Done! [0.150s CPU, 0.156s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=1.9367e-05s, 24488 KB] reading input...
[t=0.00532165s, 26364 KB] done reading input!
[t=0.00614869s, 26760 KB] Initializing landmark count heuristic...
[t=0.00617791s, 26760 KB] Generating landmark graph...
[t=0.00626668s, 26892 KB] Building a landmark graph with reasonable orders.
[t=0.00635245s, 27024 KB] Initializing Exploration...
[t=0.00683s, 27316 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0324081s, 28240 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0327072s, 28240 KB] Landmarks generation time: 0.0264586s
[t=0.0327396s, 28240 KB] Discovered 131 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0327614s, 28240 KB] 702 edges
[t=0.0327777s, 28240 KB] approx. reasonable orders
[t=0.0371681s, 28240 KB] approx. obedient reasonable orders
[t=0.0372327s, 28240 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0372436s, 28240 KB] Landmarks generation time: 0.0310637s
[t=0.0372537s, 28240 KB] Discovered 131 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0372619s, 28240 KB] 752 edges
[t=0.0372702s, 28240 KB] Landmark graph generation time: 0.0310992s
[t=0.0372785s, 28240 KB] Landmark graph contains 131 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0372961s, 28240 KB] Landmark graph contains 752 orderings.
[t=0.0379471s, 28268 KB] Simplifying 7140 unary operators... done! [5400 unary operators]
[t=0.0397018s, 28268 KB] time to simplify: 0.00187231s
[t=0.0399346s, 28268 KB] Initializing additive heuristic...
[t=0.0399729s, 28268 KB] Initializing FF heuristic...
[t=0.040048s, 28268 KB] Building successor generator...done!
[t=0.0403844s, 28268 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0403943s, 28268 KB] time for successor generation creation: 0.000295946s
[t=0.04041s, 28268 KB] Variables: 61
[t=0.0404185s, 28268 KB] FactPairs: 992
[t=0.0404266s, 28268 KB] Bytes per state: 24
[t=0.0405521s, 28268 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.04059s, 28268 KB] 60 initial landmarks, 26 goal landmarks
[t=0.0406715s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 71
[t=0.0406809s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 52
[t=0.0406898s, 28268 KB] g=0, 1 evaluated, 0 expanded
[t=0.0407042s, 28268 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 71
[t=0.0407126s, 28268 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 52
[t=0.0409431s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 70
[t=0.040954s, 28268 KB] g=1, 6 evaluated, 5 expanded
[t=0.0414332s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 69
[t=0.0414452s, 28268 KB] g=3, 17 evaluated, 16 expanded
[t=0.0418416s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 68
[t=0.0418512s, 28268 KB] g=6, 26 evaluated, 25 expanded
[t=0.0420279s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 67
[t=0.042037s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 50
[t=0.0420452s, 28268 KB] g=4, 30 evaluated, 29 expanded
[t=0.0423026s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 66
[t=0.0423116s, 28268 KB] g=6, 36 evaluated, 35 expanded
[t=0.042849s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 65
[t=0.0428602s, 28268 KB] g=8, 49 evaluated, 48 expanded
[t=0.0432444s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 64
[t=0.0432556s, 28268 KB] g=10, 58 evaluated, 57 expanded
[t=0.0437623s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 63
[t=0.0437716s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 49
[t=0.0437799s, 28268 KB] g=8, 70 evaluated, 69 expanded
[t=0.0440316s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 48
[t=0.0440403s, 28268 KB] g=10, 76 evaluated, 75 expanded
[t=0.0440897s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 62
[t=0.0441035s, 28268 KB] g=10, 77 evaluated, 76 expanded
[t=0.0447157s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 61
[t=0.044726s, 28268 KB] g=12, 92 evaluated, 91 expanded
[t=0.0453662s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 60
[t=0.0453764s, 28268 KB] g=14, 108 evaluated, 107 expanded
[t=0.046056s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.0460656s, 28268 KB] g=16, 125 evaluated, 124 expanded
[t=0.0463625s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 47
[t=0.0463721s, 28268 KB] g=14, 132 evaluated, 131 expanded
[t=0.0468767s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 58
[t=0.0468865s, 28268 KB] g=18, 144 evaluated, 143 expanded
[t=0.047575s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0475852s, 28268 KB] g=18, 161 evaluated, 160 expanded
[t=0.0477113s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 57
[t=0.0477199s, 28268 KB] g=20, 164 evaluated, 163 expanded
[t=0.0487415s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0487509s, 28268 KB] g=22, 190 evaluated, 189 expanded
[t=0.0497855s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0497957s, 28268 KB] g=24, 215 evaluated, 214 expanded
[t=0.0503271s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.0503386s, 28268 KB] g=24, 228 evaluated, 227 expanded
[t=0.0507469s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0507567s, 28268 KB] g=26, 238 evaluated, 237 expanded
[t=0.0508062s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.050815s, 28268 KB] g=26, 239 evaluated, 238 expanded
[t=0.0519155s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0519258s, 28268 KB] g=30, 266 evaluated, 265 expanded
[t=0.0522549s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0522643s, 28268 KB] g=29, 274 evaluated, 273 expanded
[t=0.0529202s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0529294s, 28268 KB] g=32, 290 evaluated, 289 expanded
[t=0.0537402s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0537499s, 28268 KB] g=34, 310 evaluated, 309 expanded
[t=0.0544699s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0544848s, 28268 KB] g=35, 327 evaluated, 326 expanded
[t=0.0545515s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0545605s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0545689s, 28268 KB] g=36, 328 evaluated, 327 expanded
[t=0.0550928s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0551031s, 28268 KB] g=38, 340 evaluated, 339 expanded
[t=0.0555297s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0555448s, 28268 KB] g=38, 350 evaluated, 349 expanded
[t=0.0557607s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0557702s, 28268 KB] g=40, 355 evaluated, 354 expanded
[t=0.0564681s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0564809s, 28268 KB] g=42, 372 evaluated, 371 expanded
[t=0.0569497s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.056969s, 28268 KB] g=44, 383 evaluated, 382 expanded
[t=0.0587588s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0587812s, 28268 KB] g=50, 427 evaluated, 426 expanded
[t=0.0612332s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0612538s, 28268 KB] g=51, 486 evaluated, 485 expanded
[t=0.0613547s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0613674s, 28268 KB] g=52, 488 evaluated, 487 expanded
[t=0.0621858s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0622002s, 28268 KB] g=54, 507 evaluated, 506 expanded
[t=0.0628648s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0628759s, 28268 KB] g=56, 522 evaluated, 521 expanded
[t=0.0633246s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0633372s, 28268 KB] g=58, 532 evaluated, 531 expanded
[t=0.0638172s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0638282s, 28268 KB] g=60, 543 evaluated, 542 expanded
[t=0.0640096s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0640211s, 28268 KB] g=60, 547 evaluated, 546 expanded
[t=0.0644584s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0644684s, 28268 KB] g=62, 557 evaluated, 556 expanded
[t=0.0653987s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0654087s, 28268 KB] g=63, 579 evaluated, 578 expanded
[t=0.0655056s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.065515s, 28268 KB] g=64, 581 evaluated, 580 expanded
[t=0.0663597s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.06637s, 28268 KB] g=66, 601 evaluated, 600 expanded
[t=0.0668112s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0668207s, 28268 KB] g=68, 611 evaluated, 610 expanded
[t=0.0668742s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0668839s, 28268 KB] g=68, 612 evaluated, 611 expanded
[t=0.0675964s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0676084s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.067617s, 28268 KB] g=70, 629 evaluated, 628 expanded
[t=0.0680036s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0680156s, 28268 KB] g=72, 638 evaluated, 637 expanded
[t=0.0680706s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0680808s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0680891s, 28268 KB] g=72, 639 evaluated, 638 expanded
[t=0.0685146s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.068548s, 28268 KB] g=74, 649 evaluated, 648 expanded
[t=0.0686067s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0686195s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.068628s, 28268 KB] g=74, 650 evaluated, 649 expanded
[t=0.069014s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0690241s, 28268 KB] g=76, 659 evaluated, 658 expanded
[t=0.0691169s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0691267s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.069135s, 28268 KB] g=76, 661 evaluated, 660 expanded
[t=0.0694701s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0694843s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0694937s, 28268 KB] g=78, 669 evaluated, 668 expanded
[t=0.0697851s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.069796s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.069805s, 28268 KB] g=80, 676 evaluated, 675 expanded
[t=0.0706115s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.070624s, 28268 KB] g=84, 696 evaluated, 695 expanded
[t=0.0708326s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0708415s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0708499s, 28268 KB] g=86, 701 evaluated, 700 expanded
[t=0.0730988s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0731184s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0731276s, 28268 KB] g=94, 757 evaluated, 756 expanded
[t=0.0732949s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0733081s, 28268 KB] g=94, 761 evaluated, 760 expanded
[t=0.0735132s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0735273s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0735359s, 28268 KB] g=96, 766 evaluated, 765 expanded
[t=0.075666s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0756822s, 28268 KB] g=104, 819 evaluated, 818 expanded
[t=0.0757325s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0757414s, 28268 KB] g=105, 820 evaluated, 819 expanded
[t=0.0757912s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0757999s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.075808s, 28268 KB] g=106, 821 evaluated, 820 expanded
[t=0.0760026s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0760118s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0760198s, 28268 KB] g=108, 826 evaluated, 825 expanded
[t=0.0761756s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0761846s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0761933s, 28268 KB] g=110, 830 evaluated, 829 expanded
[t=0.0796764s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0796902s, 28268 KB] g=124, 925 evaluated, 924 expanded
[t=0.0798419s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0798511s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0798596s, 28268 KB] g=126, 929 evaluated, 928 expanded
[t=0.0801748s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0801862s, 28268 KB] g=130, 938 evaluated, 937 expanded
[t=0.0802926s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0803023s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0803106s, 28268 KB] g=132, 941 evaluated, 940 expanded
[t=0.0820774s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0820876s, 28268 KB] g=150, 1006 evaluated, 1005 expanded
[t=0.0821654s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0821745s, 28268 KB] g=152, 1009 evaluated, 1008 expanded
[t=0.0824214s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0824306s, 28268 KB] g=160, 1021 evaluated, 1020 expanded
[t=0.0824516s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0824606s, 28268 KB] g=161, 1022 evaluated, 1021 expanded
[t=0.0824818s, 28268 KB] Solution found!
[t=0.0824944s, 28268 KB] Actual search time: 0.0419011s
unstack b6 b5 (1)
put-down b6 (1)
unstack b5 b22 (1)
stack b5 b26 (1)
unstack b13 b3 (1)
put-down b13 (1)
unstack b3 b14 (1)
stack b3 b13 (1)
unstack b11 b15 (1)
put-down b11 (1)
unstack b14 b17 (1)
put-down b14 (1)
unstack b15 b20 (1)
put-down b15 (1)
unstack b20 b9 (1)
put-down b20 (1)
unstack b9 b25 (1)
put-down b9 (1)
unstack b22 b2 (1)
put-down b22 (1)
pick-up b6 (1)
stack b6 b20 (1)
pick-up b17 (1)
stack b17 b3 (1)
pick-up b2 (1)
stack b2 b5 (1)
unstack b27 b12 (1)
put-down b27 (1)
unstack b12 b18 (1)
put-down b12 (1)
unstack b18 b10 (1)
stack b18 b2 (1)
unstack b10 b8 (1)
put-down b10 (1)
unstack b8 b23 (1)
stack b8 b18 (1)
pick-up b12 (1)
stack b12 b10 (1)
pick-up b11 (1)
stack b11 b14 (1)
pick-up b15 (1)
stack b15 b23 (1)
pick-up b27 (1)
stack b27 b12 (1)
unstack b15 b23 (1)
put-down b15 (1)
unstack b11 b14 (1)
put-down b11 (1)
unstack b23 b7 (1)
put-down b23 (1)
unstack b7 b4 (1)
stack b7 b11 (1)
unstack b4 b1 (1)
put-down b4 (1)
unstack b1 b28 (1)
stack b1 b15 (1)
unstack b28 b29 (1)
put-down b28 (1)
pick-up b23 (1)
stack b23 b7 (1)
unstack b29 b24 (1)
put-down b29 (1)
unstack b24 b16 (1)
stack b24 b1 (1)
unstack b16 b30 (1)
stack b16 b17 (1)
pick-up b25 (1)
stack b25 b16 (1)
unstack b30 b21 (1)
stack b30 b27 (1)
unstack b21 b19 (1)
stack b21 b28 (1)
pick-up b19 (1)
stack b19 b4 (1)
pick-up b22 (1)
stack b22 b21 (1)
pick-up b14 (1)
stack b14 b22 (1)
pick-up b29 (1)
stack b29 b24 (1)
unstack b6 b20 (1)
put-down b6 (1)
pick-up b20 (1)
stack b20 b29 (1)
pick-up b6 (1)
stack b6 b20 (1)
unstack b23 b7 (1)
put-down b23 (1)
unstack b7 b11 (1)
put-down b7 (1)
pick-up b11 (1)
stack b11 b14 (1)
pick-up b7 (1)
stack b7 b11 (1)
pick-up b23 (1)
stack b23 b7 (1)
unstack b30 b27 (1)
put-down b30 (1)
unstack b27 b12 (1)
put-down b27 (1)
unstack b12 b10 (1)
put-down b12 (1)
pick-up b10 (1)
stack b10 b19 (1)
pick-up b12 (1)
stack b12 b10 (1)
pick-up b27 (1)
stack b27 b12 (1)
pick-up b30 (1)
stack b30 b27 (1)
unstack b25 b16 (1)
put-down b25 (1)
unstack b16 b17 (1)
put-down b16 (1)
pick-up b25 (1)
stack b25 b16 (1)
unstack b17 b3 (1)
put-down b17 (1)
unstack b3 b13 (1)
put-down b3 (1)
pick-up b13 (1)
stack b13 b30 (1)
pick-up b3 (1)
stack b3 b13 (1)
pick-up b17 (1)
stack b17 b3 (1)
unstack b25 b16 (1)
put-down b25 (1)
pick-up b16 (1)
stack b16 b17 (1)
pick-up b25 (1)
stack b25 b16 (1)
unstack b6 b20 (1)
put-down b6 (1)
unstack b20 b29 (1)
put-down b20 (1)
unstack b29 b24 (1)
put-down b29 (1)
pick-up b20 (1)
stack b20 b29 (1)
pick-up b6 (1)
stack b6 b20 (1)
unstack b24 b1 (1)
put-down b24 (1)
unstack b1 b15 (1)
put-down b1 (1)
pick-up b15 (1)
stack b15 b23 (1)
pick-up b1 (1)
stack b1 b15 (1)
pick-up b24 (1)
stack b24 b1 (1)
unstack b6 b20 (1)
put-down b6 (1)
unstack b20 b29 (1)
put-down b20 (1)
pick-up b29 (1)
stack b29 b24 (1)
pick-up b20 (1)
stack b20 b29 (1)
pick-up b6 (1)
stack b6 b20 (1)
[t=0.0825037s, 28268 KB] Plan length: 162 step(s).
[t=0.0825037s, 28268 KB] Plan cost: 162
[t=0.0825037s, 28268 KB] Expanded 1022 state(s).
[t=0.0825037s, 28268 KB] Reopened 0 state(s).
[t=0.0825037s, 28268 KB] Evaluated 1023 state(s).
[t=0.0825037s, 28268 KB] Evaluations: 2046
[t=0.0825037s, 28268 KB] Generated 10353 state(s).
[t=0.0825037s, 28268 KB] Dead ends: 0 state(s).
[t=0.0825037s, 28268 KB] Number of registered states: 1023
[t=0.0825037s, 28268 KB] Int hash set load factor: 1023/1024 = 0.999023
[t=0.0825037s, 28268 KB] Int hash set resizes: 10
[t=0.0825037s, 28268 KB] Search time: 0.0419525s
[t=0.0825037s, 28268 KB] Total time: 0.0825037s
Solution found.
Peak memory: 28268 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.29s
