INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_22/bws_problem_22_83.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.010s wall-clock]
1608 relevant atoms
1078 auxiliary atoms
2686 final queue length
4671 total queue pushes
Completing instantiation... [0.010s CPU, 0.017s wall-clock]
Instantiating: [0.020s CPU, 0.028s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
23 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.006s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.026s wall-clock]
1430 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
44 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.011s wall-clock]
Reordering and filtering variables...
45 of 45 variables necessary.
23 of 45 mutex groups necessary.
968 of 968 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 45
Translator derived variables: 0
Translator facts: 552
Translator goal facts: 16
Translator mutex groups: 23
Translator total mutex groups size: 529
Translator operators: 968
Translator axioms: 0
Translator task size: 8336
Translator peak memory: 36976 KB
Writing output... [0.000s CPU, 0.005s wall-clock]
Done! [0.090s CPU, 0.087s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.1565e-05s, 24488 KB] reading input...
[t=0.00275377s, 25340 KB] done reading input!
[t=0.00365326s, 25736 KB] Initializing landmark count heuristic...
[t=0.00368377s, 25736 KB] Generating landmark graph...
[t=0.00374795s, 25736 KB] Building a landmark graph with reasonable orders.
[t=0.00380535s, 25736 KB] Initializing Exploration...
[t=0.00411242s, 26000 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0135546s, 26528 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.013606s, 26528 KB] Landmarks generation time: 0.00985774s
[t=0.0136187s, 26528 KB] Discovered 90 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0136355s, 26528 KB] 373 edges
[t=0.0136454s, 26528 KB] approx. reasonable orders
[t=0.0138209s, 26528 KB] approx. obedient reasonable orders
[t=0.013843s, 26528 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.013857s, 26528 KB] Landmarks generation time: 0.0101705s
[t=0.013867s, 26528 KB] Discovered 90 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0138751s, 26528 KB] 376 edges
[t=0.0138832s, 26528 KB] Landmark graph generation time: 0.0102064s
[t=0.0138918s, 26528 KB] Landmark graph contains 90 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0139054s, 26528 KB] Landmark graph contains 376 orderings.
[t=0.0142208s, 26528 KB] Simplifying 3828 unary operators... done! [2904 unary operators]
[t=0.0151103s, 26528 KB] time to simplify: 0.000951521s
[t=0.015236s, 26528 KB] Initializing additive heuristic...
[t=0.0152507s, 26528 KB] Initializing FF heuristic...
[t=0.0152993s, 26528 KB] Building successor generator...done!
[t=0.0154935s, 26528 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0155023s, 26528 KB] time for successor generation creation: 0.000162507s
[t=0.015514s, 26528 KB] Variables: 45
[t=0.0155226s, 26528 KB] FactPairs: 552
[t=0.0155309s, 26528 KB] Bytes per state: 20
[t=0.0156057s, 26528 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0156385s, 26528 KB] 45 initial landmarks, 16 goal landmarks
[t=0.0156898s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0157035s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0157125s, 26528 KB] g=0, 1 evaluated, 0 expanded
[t=0.0157265s, 26528 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0157354s, 26528 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0159028s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0159124s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0159213s, 26528 KB] g=2, 7 evaluated, 6 expanded
[t=0.0160773s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0160863s, 26528 KB] g=4, 13 evaluated, 12 expanded
[t=0.0161203s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0161292s, 26528 KB] g=4, 14 evaluated, 13 expanded
[t=0.0163745s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0163843s, 26528 KB] g=5, 24 evaluated, 23 expanded
[t=0.0164219s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0164321s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0164403s, 26528 KB] g=6, 25 evaluated, 24 expanded
[t=0.0165656s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0165747s, 26528 KB] g=7, 30 evaluated, 29 expanded
[t=0.0167745s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0167848s, 26528 KB] g=10, 38 evaluated, 37 expanded
[t=0.0168419s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0168509s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0168615s, 26528 KB] g=10, 40 evaluated, 39 expanded
[t=0.0170196s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0170333s, 26528 KB] g=12, 46 evaluated, 45 expanded
[t=0.0173231s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0173329s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0173409s, 26528 KB] g=14, 58 evaluated, 57 expanded
[t=0.0174619s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0174707s, 26528 KB] g=16, 63 evaluated, 62 expanded
[t=0.0177869s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.017797s, 26528 KB] g=21, 76 evaluated, 75 expanded
[t=0.0180801s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0180911s, 26528 KB] g=24, 87 evaluated, 86 expanded
[t=0.018355s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0183641s, 26528 KB] g=26, 98 evaluated, 97 expanded
[t=0.0186275s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0186367s, 26528 KB] g=26, 109 evaluated, 108 expanded
[t=0.0188563s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0188655s, 26528 KB] g=30, 118 evaluated, 117 expanded
[t=0.0190866s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0190959s, 26528 KB] g=28, 127 evaluated, 126 expanded
[t=0.019231s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.01924s, 26528 KB] g=32, 132 evaluated, 131 expanded
[t=0.0194615s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0194704s, 26528 KB] g=30, 141 evaluated, 140 expanded
[t=0.0196973s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0197071s, 26528 KB] g=32, 150 evaluated, 149 expanded
[t=0.0198833s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0199049s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0199131s, 26528 KB] g=34, 157 evaluated, 156 expanded
[t=0.0200654s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0200742s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0200822s, 26528 KB] g=36, 163 evaluated, 162 expanded
[t=0.0206413s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0206533s, 26528 KB] g=42, 186 evaluated, 185 expanded
[t=0.020852s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0208613s, 26528 KB] g=44, 194 evaluated, 193 expanded
[t=0.0210675s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0210767s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0210849s, 26528 KB] g=46, 202 evaluated, 201 expanded
[t=0.021263s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0212725s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0212809s, 26528 KB] g=48, 209 evaluated, 208 expanded
[t=0.0214811s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0214931s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0215024s, 26528 KB] g=50, 217 evaluated, 216 expanded
[t=0.021706s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0217167s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.021725s, 26528 KB] g=52, 225 evaluated, 224 expanded
[t=0.0218835s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0218941s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0219043s, 26528 KB] g=54, 231 evaluated, 230 expanded
[t=0.0220496s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0220591s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0220707s, 26528 KB] g=56, 236 evaluated, 235 expanded
[t=0.0222702s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0222793s, 26528 KB] g=59, 244 evaluated, 243 expanded
[t=0.0223136s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0223227s, 26528 KB] g=60, 245 evaluated, 244 expanded
[t=0.0224516s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0224604s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0224684s, 26528 KB] g=62, 250 evaluated, 249 expanded
[t=0.0225712s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.02258s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0225881s, 26528 KB] g=64, 254 evaluated, 253 expanded
[t=0.0238373s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0238494s, 26528 KB] g=72, 306 evaluated, 305 expanded
[t=0.0239275s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0239364s, 26528 KB] g=72, 309 evaluated, 308 expanded
[t=0.0240362s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0240451s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0240531s, 26528 KB] g=74, 313 evaluated, 312 expanded
[t=0.0251608s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0251749s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0251836s, 26528 KB] g=86, 359 evaluated, 358 expanded
[t=0.0253928s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0254023s, 26528 KB] g=90, 368 evaluated, 367 expanded
[t=0.0254766s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0254855s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0254939s, 26528 KB] g=92, 371 evaluated, 370 expanded
[t=0.0260742s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0260934s, 26528 KB] g=106, 400 evaluated, 399 expanded
[t=0.0261512s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0261611s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.02617s, 26528 KB] g=108, 403 evaluated, 402 expanded
[t=0.0262333s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0262456s, 26528 KB] g=112, 407 evaluated, 406 expanded
[t=0.026264s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0262731s, 26528 KB] g=113, 408 evaluated, 407 expanded
[t=0.0262882s, 26528 KB] Solution found!
[t=0.0262996s, 26528 KB] Actual search time: 0.0106582s
unstack b13 b10 (1)
put-down b13 (1)
unstack b10 b9 (1)
stack b10 b2 (1)
unstack b6 b19 (1)
stack b6 b13 (1)
unstack b9 b16 (1)
put-down b9 (1)
pick-up b16 (1)
stack b16 b6 (1)
unstack b22 b11 (1)
put-down b22 (1)
pick-up b9 (1)
stack b9 b11 (1)
unstack b10 b2 (1)
put-down b10 (1)
unstack b9 b11 (1)
put-down b9 (1)
unstack b11 b12 (1)
put-down b11 (1)
unstack b12 b14 (1)
put-down b12 (1)
unstack b14 b7 (1)
put-down b14 (1)
unstack b7 b8 (1)
stack b7 b10 (1)
pick-up b12 (1)
stack b12 b7 (1)
unstack b8 b20 (1)
stack b8 b22 (1)
pick-up b11 (1)
stack b11 b12 (1)
pick-up b19 (1)
stack b19 b20 (1)
pick-up b9 (1)
stack b9 b11 (1)
unstack b19 b20 (1)
put-down b19 (1)
unstack b20 b1 (1)
put-down b20 (1)
unstack b1 b5 (1)
put-down b1 (1)
unstack b5 b4 (1)
put-down b5 (1)
unstack b4 b3 (1)
stack b4 b19 (1)
unstack b3 b15 (1)
put-down b3 (1)
unstack b15 b21 (1)
put-down b15 (1)
pick-up b17 (1)
stack b17 b21 (1)
pick-up b2 (1)
stack b2 b4 (1)
pick-up b20 (1)
stack b20 b1 (1)
unstack b17 b21 (1)
put-down b17 (1)
unstack b21 b18 (1)
stack b21 b8 (1)
pick-up b17 (1)
stack b17 b21 (1)
pick-up b18 (1)
stack b18 b15 (1)
unstack b2 b4 (1)
put-down b2 (1)
unstack b4 b19 (1)
put-down b4 (1)
pick-up b19 (1)
stack b19 b20 (1)
pick-up b4 (1)
stack b4 b19 (1)
pick-up b2 (1)
stack b2 b4 (1)
unstack b17 b21 (1)
put-down b17 (1)
unstack b21 b8 (1)
put-down b21 (1)
pick-up b17 (1)
stack b17 b21 (1)
unstack b8 b22 (1)
put-down b8 (1)
pick-up b22 (1)
stack b22 b18 (1)
pick-up b8 (1)
stack b8 b22 (1)
unstack b17 b21 (1)
put-down b17 (1)
pick-up b21 (1)
stack b21 b8 (1)
pick-up b17 (1)
stack b17 b21 (1)
unstack b9 b11 (1)
put-down b9 (1)
unstack b11 b12 (1)
put-down b11 (1)
pick-up b9 (1)
stack b9 b11 (1)
unstack b12 b7 (1)
put-down b12 (1)
unstack b7 b10 (1)
put-down b7 (1)
pick-up b10 (1)
stack b10 b2 (1)
pick-up b7 (1)
stack b7 b10 (1)
pick-up b12 (1)
stack b12 b7 (1)
unstack b9 b11 (1)
put-down b9 (1)
pick-up b11 (1)
stack b11 b12 (1)
pick-up b9 (1)
stack b9 b11 (1)
[t=0.0263092s, 26528 KB] Plan length: 114 step(s).
[t=0.0263092s, 26528 KB] Plan cost: 114
[t=0.0263092s, 26528 KB] Expanded 408 state(s).
[t=0.0263092s, 26528 KB] Reopened 0 state(s).
[t=0.0263092s, 26528 KB] Evaluated 409 state(s).
[t=0.0263092s, 26528 KB] Evaluations: 818
[t=0.0263092s, 26528 KB] Generated 3908 state(s).
[t=0.0263092s, 26528 KB] Dead ends: 0 state(s).
[t=0.0263092s, 26528 KB] Number of registered states: 409
[t=0.0263092s, 26528 KB] Int hash set load factor: 409/512 = 0.798828
[t=0.0263092s, 26528 KB] Int hash set resizes: 9
[t=0.0263092s, 26528 KB] Search time: 0.0107039s
[t=0.0263092s, 26528 KB] Total time: 0.0263092s
Solution found.
Peak memory: 26528 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.17s
