INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_24/bws_problem_24_69.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.011s wall-clock]
1898 relevant atoms
1272 auxiliary atoms
3170 final queue length
5526 total queue pushes
Completing instantiation... [0.020s CPU, 0.019s wall-clock]
Instantiating: [0.040s CPU, 0.032s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
25 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.007s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.002s wall-clock]
Translating task: [0.030s CPU, 0.029s wall-clock]
1704 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
48 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.019s wall-clock]
Reordering and filtering variables...
49 of 49 variables necessary.
25 of 49 mutex groups necessary.
1152 of 1152 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.007s wall-clock]
Translator variables: 49
Translator derived variables: 0
Translator facts: 650
Translator goal facts: 19
Translator mutex groups: 25
Translator total mutex groups size: 625
Translator operators: 1152
Translator axioms: 0
Translator task size: 9911
Translator peak memory: 37884 KB
Writing output... [0.010s CPU, 0.006s wall-clock]
Done! [0.110s CPU, 0.108s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.3322e-05s, 24488 KB] reading input...
[t=0.00324305s, 25532 KB] done reading input!
[t=0.00431308s, 25928 KB] Initializing landmark count heuristic...
[t=0.00434954s, 25928 KB] Generating landmark graph...
[t=0.00443104s, 25928 KB] Building a landmark graph with reasonable orders.
[t=0.00450553s, 26060 KB] Initializing Exploration...
[t=0.00488419s, 26388 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0187834s, 26916 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0188932s, 26916 KB] Landmarks generation time: 0.0144642s
[t=0.0189095s, 26916 KB] Discovered 105 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0189281s, 26916 KB] 459 edges
[t=0.0189487s, 26916 KB] approx. reasonable orders
[t=0.0209654s, 26916 KB] approx. obedient reasonable orders
[t=0.0209951s, 26916 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.021004s, 26916 KB] Landmarks generation time: 0.0166492s
[t=0.0210133s, 26916 KB] Discovered 105 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0210214s, 26916 KB] 496 edges
[t=0.0210297s, 26916 KB] Landmark graph generation time: 0.0166868s
[t=0.021038s, 26916 KB] Landmark graph contains 105 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.021046s, 26916 KB] Landmark graph contains 496 orderings.
[t=0.0214156s, 26916 KB] Simplifying 4560 unary operators... done! [3456 unary operators]
[t=0.0224514s, 26916 KB] time to simplify: 0.00110536s
[t=0.0225906s, 26916 KB] Initializing additive heuristic...
[t=0.0226051s, 26916 KB] Initializing FF heuristic...
[t=0.0226538s, 26916 KB] Building successor generator...done!
[t=0.0229273s, 26916 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0229418s, 26916 KB] time for successor generation creation: 0.000236399s
[t=0.022954s, 26916 KB] Variables: 49
[t=0.0229621s, 26916 KB] FactPairs: 650
[t=0.0229703s, 26916 KB] Bytes per state: 20
[t=0.0230792s, 26916 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.023113s, 26916 KB] 49 initial landmarks, 19 goal landmarks
[t=0.0231757s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.023185s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0231932s, 26916 KB] g=0, 1 evaluated, 0 expanded
[t=0.0232123s, 26916 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0232207s, 26916 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0232618s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0232729s, 26916 KB] g=1, 2 evaluated, 1 expanded
[t=0.0235556s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0235648s, 26916 KB] g=4, 11 evaluated, 10 expanded
[t=0.0236467s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0236558s, 26916 KB] g=5, 13 evaluated, 12 expanded
[t=0.0236956s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0237046s, 26916 KB] g=6, 14 evaluated, 13 expanded
[t=0.0240127s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0240224s, 26916 KB] g=8, 25 evaluated, 24 expanded
[t=0.0241634s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0241725s, 26916 KB] g=9, 30 evaluated, 29 expanded
[t=0.0243701s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0243788s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0243864s, 26916 KB] g=10, 37 evaluated, 36 expanded
[t=0.0244466s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0244551s, 26916 KB] g=11, 39 evaluated, 38 expanded
[t=0.0247725s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.024783s, 26916 KB] g=13, 51 evaluated, 50 expanded
[t=0.0251347s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0251449s, 26916 KB] g=16, 64 evaluated, 63 expanded
[t=0.0253783s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0253885s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0253963s, 26916 KB] g=16, 72 evaluated, 71 expanded
[t=0.0254887s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0254974s, 26916 KB] g=17, 75 evaluated, 74 expanded
[t=0.0257257s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0257351s, 26916 KB] g=18, 83 evaluated, 82 expanded
[t=0.0259025s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0259112s, 26916 KB] g=19, 89 evaluated, 88 expanded
[t=0.0261312s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0261409s, 26916 KB] g=20, 97 evaluated, 96 expanded
[t=0.0262546s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0262641s, 26916 KB] g=21, 101 evaluated, 100 expanded
[t=0.0266218s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0266324s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0266418s, 26916 KB] g=22, 114 evaluated, 113 expanded
[t=0.0267101s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.02672s, 26916 KB] g=23, 116 evaluated, 115 expanded
[t=0.0270512s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0270721s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0270803s, 26916 KB] g=24, 127 evaluated, 126 expanded
[t=0.0271518s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0271606s, 26916 KB] g=25, 129 evaluated, 128 expanded
[t=0.0274912s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0275042s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.027514s, 26916 KB] g=26, 140 evaluated, 139 expanded
[t=0.0275779s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0275872s, 26916 KB] g=27, 142 evaluated, 141 expanded
[t=0.0279877s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0280032s, 26916 KB] g=29, 152 evaluated, 151 expanded
[t=0.0283176s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0283278s, 26916 KB] g=30, 163 evaluated, 162 expanded
[t=0.0284181s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.028435s, 26916 KB] g=31, 166 evaluated, 165 expanded
[t=0.0287738s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.028794s, 26916 KB] g=34, 178 evaluated, 177 expanded
[t=0.0291229s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0291345s, 26916 KB] g=36, 190 evaluated, 189 expanded
[t=0.0297176s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0297301s, 26916 KB] g=38, 211 evaluated, 210 expanded
[t=0.0297953s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0298252s, 26916 KB] g=38, 213 evaluated, 212 expanded
[t=0.0301888s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0301985s, 26916 KB] g=40, 226 evaluated, 225 expanded
[t=0.0302371s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0302458s, 26916 KB] g=40, 227 evaluated, 226 expanded
[t=0.0306345s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0306454s, 26916 KB] g=42, 241 evaluated, 240 expanded
[t=0.0307139s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0307232s, 26916 KB] g=42, 243 evaluated, 242 expanded
[t=0.0311213s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0311336s, 26916 KB] g=44, 256 evaluated, 255 expanded
[t=0.031211s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0312207s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0312285s, 26916 KB] g=44, 258 evaluated, 257 expanded
[t=0.0314918s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0315029s, 26916 KB] g=46, 267 evaluated, 266 expanded
[t=0.0316526s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0316627s, 26916 KB] g=46, 272 evaluated, 271 expanded
[t=0.031874s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0318844s, 26916 KB] g=48, 279 evaluated, 278 expanded
[t=0.0321338s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0321428s, 26916 KB] g=48, 288 evaluated, 287 expanded
[t=0.0322335s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0322422s, 26916 KB] g=50, 291 evaluated, 290 expanded
[t=0.0325713s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0325803s, 26916 KB] g=50, 303 evaluated, 302 expanded
[t=0.0328547s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0328632s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0328714s, 26916 KB] g=52, 313 evaluated, 312 expanded
[t=0.0331007s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0331168s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0331404s, 26916 KB] g=54, 318 evaluated, 317 expanded
[t=0.0336823s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.033692s, 26916 KB] g=58, 336 evaluated, 335 expanded
[t=0.033814s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0338383s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0338463s, 26916 KB] g=60, 340 evaluated, 339 expanded
[t=0.0346764s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0346981s, 26916 KB] g=70, 369 evaluated, 368 expanded
[t=0.034873s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0348821s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0348903s, 26916 KB] g=72, 375 evaluated, 374 expanded
[t=0.0350468s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0350606s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0350686s, 26916 KB] g=74, 380 evaluated, 379 expanded
[t=0.0354801s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0354895s, 26916 KB] g=78, 396 evaluated, 395 expanded
[t=0.0355983s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0356065s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0356138s, 26916 KB] g=80, 400 evaluated, 399 expanded
[t=0.0361131s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0361219s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0361296s, 26916 KB] g=88, 420 evaluated, 419 expanded
[t=0.0361853s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0361936s, 26916 KB] g=88, 422 evaluated, 421 expanded
[t=0.0362701s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0362783s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0362857s, 26916 KB] g=90, 425 evaluated, 424 expanded
[t=0.0368873s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0368959s, 26916 KB] g=104, 455 evaluated, 454 expanded
[t=0.0369544s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0369626s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0369706s, 26916 KB] g=106, 458 evaluated, 457 expanded
[t=0.0370348s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0370431s, 26916 KB] g=110, 462 evaluated, 461 expanded
[t=0.0370605s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0370685s, 26916 KB] g=111, 463 evaluated, 462 expanded
[t=0.0370829s, 26916 KB] Solution found!
[t=0.037094s, 26916 KB] Actual search time: 0.0139701s
unstack b11 b5 (1)
put-down b11 (1)
unstack b18 b12 (1)
put-down b18 (1)
unstack b12 b2 (1)
stack b12 b23 (1)
unstack b2 b1 (1)
put-down b2 (1)
pick-up b1 (1)
stack b1 b2 (1)
unstack b5 b13 (1)
put-down b5 (1)
unstack b13 b10 (1)
put-down b13 (1)
unstack b10 b16 (1)
stack b10 b1 (1)
unstack b16 b6 (1)
put-down b16 (1)
unstack b6 b21 (1)
put-down b6 (1)
pick-up b20 (1)
stack b20 b10 (1)
unstack b21 b8 (1)
stack b21 b6 (1)
pick-up b5 (1)
stack b5 b21 (1)
unstack b8 b17 (1)
put-down b8 (1)
unstack b17 b7 (1)
put-down b17 (1)
unstack b12 b23 (1)
put-down b12 (1)
unstack b23 b15 (1)
put-down b23 (1)
unstack b15 b9 (1)
put-down b15 (1)
pick-up b8 (1)
stack b8 b15 (1)
unstack b9 b14 (1)
stack b9 b18 (1)
unstack b14 b19 (1)
stack b14 b16 (1)
unstack b19 b24 (1)
stack b19 b5 (1)
unstack b24 b22 (1)
stack b24 b13 (1)
pick-up b11 (1)
stack b11 b24 (1)
pick-up b23 (1)
stack b23 b22 (1)
pick-up b12 (1)
stack b12 b23 (1)
pick-up b7 (1)
stack b7 b9 (1)
unstack b8 b15 (1)
put-down b8 (1)
pick-up b15 (1)
stack b15 b7 (1)
pick-up b8 (1)
stack b8 b15 (1)
unstack b12 b23 (1)
put-down b12 (1)
unstack b23 b22 (1)
put-down b23 (1)
pick-up b12 (1)
stack b12 b23 (1)
unstack b22 b3 (1)
put-down b22 (1)
unstack b3 b4 (1)
put-down b3 (1)
pick-up b22 (1)
stack b22 b3 (1)
pick-up b4 (1)
stack b4 b19 (1)
unstack b12 b23 (1)
put-down b12 (1)
pick-up b23 (1)
stack b23 b22 (1)
pick-up b12 (1)
stack b12 b23 (1)
unstack b11 b24 (1)
put-down b11 (1)
unstack b24 b13 (1)
put-down b24 (1)
pick-up b13 (1)
stack b13 b4 (1)
pick-up b24 (1)
stack b24 b13 (1)
pick-up b11 (1)
stack b11 b24 (1)
unstack b8 b15 (1)
put-down b8 (1)
unstack b15 b7 (1)
put-down b15 (1)
pick-up b8 (1)
stack b8 b15 (1)
unstack b7 b9 (1)
put-down b7 (1)
unstack b9 b18 (1)
put-down b9 (1)
pick-up b18 (1)
stack b18 b14 (1)
pick-up b9 (1)
stack b9 b18 (1)
pick-up b7 (1)
stack b7 b9 (1)
unstack b8 b15 (1)
put-down b8 (1)
pick-up b15 (1)
stack b15 b7 (1)
pick-up b8 (1)
stack b8 b15 (1)
[t=0.0371032s, 26916 KB] Plan length: 112 step(s).
[t=0.0371032s, 26916 KB] Plan cost: 112
[t=0.0371032s, 26916 KB] Expanded 463 state(s).
[t=0.0371032s, 26916 KB] Reopened 0 state(s).
[t=0.0371032s, 26916 KB] Evaluated 464 state(s).
[t=0.0371032s, 26916 KB] Evaluations: 928
[t=0.0371032s, 26916 KB] Generated 4428 state(s).
[t=0.0371032s, 26916 KB] Dead ends: 0 state(s).
[t=0.0371032s, 26916 KB] Number of registered states: 464
[t=0.0371032s, 26916 KB] Int hash set load factor: 464/512 = 0.90625
[t=0.0371032s, 26916 KB] Int hash set resizes: 9
[t=0.0371032s, 26916 KB] Search time: 0.0140245s
[t=0.0371032s, 26916 KB] Total time: 0.0371032s
Solution found.
Peak memory: 26916 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.19s
