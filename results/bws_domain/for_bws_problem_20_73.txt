INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_20/bws_problem_20_73.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.010s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.000s CPU, 0.008s wall-clock]
1342 relevant atoms
900 auxiliary atoms
2242 final queue length
3884 total queue pushes
Completing instantiation... [0.020s CPU, 0.014s wall-clock]
Instantiating: [0.030s CPU, 0.023s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
21 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.006s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.020s wall-clock]
1180 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
40 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.012s wall-clock]
Reordering and filtering variables...
41 of 41 variables necessary.
21 of 41 mutex groups necessary.
800 of 800 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 41
Translator derived variables: 0
Translator facts: 462
Translator goal facts: 15
Translator mutex groups: 21
Translator total mutex groups size: 441
Translator operators: 800
Translator axioms: 0
Translator task size: 6899
Translator peak memory: 35948 KB
Writing output... [0.000s CPU, 0.005s wall-clock]
Done! [0.070s CPU, 0.076s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.4445e-05s, 24488 KB] reading input...
[t=0.002393s, 25180 KB] done reading input!
[t=0.00338664s, 25444 KB] Initializing landmark count heuristic...
[t=0.00344724s, 25444 KB] Generating landmark graph...
[t=0.00351993s, 25576 KB] Building a landmark graph with reasonable orders.
[t=0.00357238s, 25576 KB] Initializing Exploration...
[t=0.00385949s, 25744 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0124879s, 26272 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0126774s, 26272 KB] Landmarks generation time: 0.00916091s
[t=0.0126947s, 26272 KB] Discovered 88 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0127192s, 26272 KB] 586 edges
[t=0.0127291s, 26272 KB] approx. reasonable orders
[t=0.0156439s, 26272 KB] approx. obedient reasonable orders
[t=0.0157674s, 26272 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0157843s, 26272 KB] Landmarks generation time: 0.0123349s
[t=0.0158107s, 26272 KB] Discovered 88 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0158191s, 26272 KB] 636 edges
[t=0.0158276s, 26272 KB] Landmark graph generation time: 0.0123873s
[t=0.0158362s, 26272 KB] Landmark graph contains 88 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0158442s, 26272 KB] Landmark graph contains 636 orderings.
[t=0.0161824s, 26420 KB] Simplifying 3160 unary operators... done! [2400 unary operators]
[t=0.0169379s, 26420 KB] time to simplify: 0.000806919s
[t=0.0170388s, 26420 KB] Initializing additive heuristic...
[t=0.0170516s, 26420 KB] Initializing FF heuristic...
[t=0.0171028s, 26420 KB] Building successor generator...done!
[t=0.0172731s, 26420 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0172827s, 26420 KB] time for successor generation creation: 0.000139125s
[t=0.0172955s, 26420 KB] Variables: 41
[t=0.0173041s, 26420 KB] FactPairs: 462
[t=0.0173118s, 26420 KB] Bytes per state: 16
[t=0.0174009s, 26420 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.017437s, 26420 KB] 40 initial landmarks, 15 goal landmarks
[t=0.0174911s, 26420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0175008s, 26420 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0175095s, 26420 KB] g=0, 1 evaluated, 0 expanded
[t=0.0175225s, 26420 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.017531s, 26420 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0176198s, 26420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.017629s, 26420 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0176371s, 26420 KB] g=2, 4 evaluated, 3 expanded
[t=0.0177099s, 26420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0177188s, 26420 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0177269s, 26420 KB] g=4, 7 evaluated, 6 expanded
[t=0.0177571s, 26420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0177659s, 26420 KB] g=5, 8 evaluated, 7 expanded
[t=0.017797s, 26420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0178063s, 26420 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0178147s, 26420 KB] g=6, 9 evaluated, 8 expanded
[t=0.0178852s, 26420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0178938s, 26420 KB] g=8, 12 evaluated, 11 expanded
[t=0.0179871s, 26420 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0179958s, 26420 KB] g=10, 16 evaluated, 15 expanded
[t=0.0180487s, 26420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0180575s, 26420 KB] g=10, 18 evaluated, 17 expanded
[t=0.0181709s, 26420 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0181796s, 26420 KB] g=12, 23 evaluated, 22 expanded
[t=0.0182657s, 26420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0182777s, 26420 KB] g=12, 26 evaluated, 25 expanded
[t=0.018486s, 26420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0185024s, 26420 KB] g=14, 35 evaluated, 34 expanded
[t=0.0187777s, 26420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0187867s, 26420 KB] g=16, 48 evaluated, 47 expanded
[t=0.0190632s, 26420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0190732s, 26420 KB] g=18, 61 evaluated, 60 expanded
[t=0.0191489s, 26420 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0191593s, 26420 KB] g=18, 64 evaluated, 63 expanded
[t=0.0193999s, 26420 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0194096s, 26420 KB] g=20, 75 evaluated, 74 expanded
[t=0.0194397s, 26420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0194483s, 26420 KB] g=20, 76 evaluated, 75 expanded
[t=0.0196784s, 26420 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0196876s, 26420 KB] g=22, 87 evaluated, 86 expanded
[t=0.0197755s, 26420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0197844s, 26420 KB] g=21, 91 evaluated, 90 expanded
[t=0.0199873s, 26420 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0199975s, 26420 KB] g=24, 100 evaluated, 99 expanded
[t=0.0201511s, 26420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0201608s, 26420 KB] g=24, 107 evaluated, 106 expanded
[t=0.0202545s, 26420 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0202639s, 26420 KB] g=26, 111 evaluated, 110 expanded
[t=0.0205265s, 26420 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0205356s, 26420 KB] g=28, 123 evaluated, 122 expanded
[t=0.020565s, 26420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0205739s, 26420 KB] g=26, 124 evaluated, 123 expanded
[t=0.020823s, 26420 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0208378s, 26420 KB] g=30, 135 evaluated, 134 expanded
[t=0.0208672s, 26420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0208765s, 26420 KB] g=27, 136 evaluated, 135 expanded
[t=0.0211163s, 26420 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0211264s, 26420 KB] g=32, 147 evaluated, 146 expanded
[t=0.0211782s, 26420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0211875s, 26420 KB] g=33, 149 evaluated, 148 expanded
[t=0.021323s, 26420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0213321s, 26420 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.02134s, 26420 KB] g=34, 155 evaluated, 154 expanded
[t=0.02137s, 26420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0213789s, 26420 KB] g=35, 156 evaluated, 155 expanded
[t=0.0215601s, 26420 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0215713s, 26420 KB] g=36, 164 evaluated, 163 expanded
[t=0.0216023s, 26420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0216123s, 26420 KB] g=37, 165 evaluated, 164 expanded
[t=0.0217534s, 26420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0217755s, 26420 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0217846s, 26420 KB] g=38, 171 evaluated, 170 expanded
[t=0.0218374s, 26420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0218472s, 26420 KB] g=39, 173 evaluated, 172 expanded
[t=0.0219404s, 26420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.021951s, 26420 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0219602s, 26420 KB] g=40, 176 evaluated, 175 expanded
[t=0.0219927s, 26420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0220051s, 26420 KB] g=41, 177 evaluated, 176 expanded
[t=0.0221409s, 26420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0221532s, 26420 KB] g=43, 183 evaluated, 182 expanded
[t=0.0223989s, 26420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0224112s, 26420 KB] g=47, 194 evaluated, 193 expanded
[t=0.0225766s, 26420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0225861s, 26420 KB] g=49, 202 evaluated, 201 expanded
[t=0.0226742s, 26420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0226836s, 26420 KB] g=49, 206 evaluated, 205 expanded
[t=0.0230926s, 26420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0231022s, 26420 KB] g=53, 228 evaluated, 227 expanded
[t=0.0232854s, 26420 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0232949s, 26420 KB] g=48, 237 evaluated, 236 expanded
[t=0.0233441s, 26420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0233529s, 26420 KB] g=49, 239 evaluated, 238 expanded
[t=0.0234213s, 26420 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0234303s, 26420 KB] g=50, 242 evaluated, 241 expanded
[t=0.0234578s, 26420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0234664s, 26420 KB] g=51, 243 evaluated, 242 expanded
[t=0.0235472s, 26420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0235557s, 26420 KB] g=55, 247 evaluated, 246 expanded
[t=0.0236455s, 26420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0236544s, 26420 KB] g=57, 252 evaluated, 251 expanded
[t=0.0237831s, 26420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0237923s, 26420 KB] g=59, 259 evaluated, 258 expanded
[t=0.0238674s, 26420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0238765s, 26420 KB] g=60, 263 evaluated, 262 expanded
[t=0.0239271s, 26420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0239358s, 26420 KB] g=61, 266 evaluated, 265 expanded
[t=0.0240217s, 26420 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0240302s, 26420 KB] g=64, 271 evaluated, 270 expanded
[t=0.024052s, 26420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0240699s, 26420 KB] g=65, 272 evaluated, 271 expanded
[t=0.0241318s, 26420 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0241418s, 26420 KB] g=66, 275 evaluated, 274 expanded
[t=0.0241629s, 26420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0241716s, 26420 KB] g=67, 276 evaluated, 275 expanded
[t=0.0242212s, 26420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0242297s, 26420 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0242375s, 26420 KB] g=70, 279 evaluated, 278 expanded
[t=0.0242548s, 26420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0242635s, 26420 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0242717s, 26420 KB] g=71, 280 evaluated, 279 expanded
[t=0.0242859s, 26420 KB] Solution found!
[t=0.0242958s, 26420 KB] Actual search time: 0.00685227s
unstack b6 b2 (1)
put-down b6 (1)
unstack b2 b18 (1)
put-down b2 (1)
unstack b18 b16 (1)
stack b18 b2 (1)
unstack b16 b14 (1)
put-down b16 (1)
unstack b14 b10 (1)
stack b14 b16 (1)
unstack b7 b9 (1)
stack b7 b14 (1)
unstack b10 b12 (1)
put-down b10 (1)
unstack b12 b17 (1)
put-down b12 (1)
unstack b17 b1 (1)
stack b17 b7 (1)
unstack b1 b3 (1)
stack b1 b6 (1)
unstack b3 b20 (1)
put-down b3 (1)
unstack b20 b19 (1)
stack b20 b10 (1)
unstack b19 b15 (1)
stack b19 b17 (1)
unstack b15 b13 (1)
stack b15 b3 (1)
unstack b13 b4 (1)
put-down b13 (1)
pick-up b12 (1)
stack b12 b13 (1)
unstack b4 b5 (1)
stack b4 b15 (1)
unstack b9 b8 (1)
stack b9 b20 (1)
unstack b5 b11 (1)
stack b5 b8 (1)
pick-up b11 (1)
stack b11 b1 (1)
unstack b9 b20 (1)
put-down b9 (1)
unstack b20 b10 (1)
put-down b20 (1)
pick-up b10 (1)
stack b10 b11 (1)
pick-up b20 (1)
stack b20 b10 (1)
pick-up b9 (1)
stack b9 b20 (1)
unstack b19 b17 (1)
put-down b19 (1)
unstack b17 b7 (1)
put-down b17 (1)
unstack b7 b14 (1)
put-down b7 (1)
unstack b14 b16 (1)
put-down b14 (1)
pick-up b16 (1)
stack b16 b12 (1)
pick-up b19 (1)
stack b19 b17 (1)
pick-up b14 (1)
stack b14 b16 (1)
pick-up b7 (1)
stack b7 b14 (1)
unstack b19 b17 (1)
put-down b19 (1)
pick-up b17 (1)
stack b17 b7 (1)
pick-up b19 (1)
stack b19 b17 (1)
[t=0.0243055s, 26420 KB] Plan length: 72 step(s).
[t=0.0243055s, 26420 KB] Plan cost: 72
[t=0.0243055s, 26420 KB] Expanded 280 state(s).
[t=0.0243055s, 26420 KB] Reopened 0 state(s).
[t=0.0243055s, 26420 KB] Evaluated 281 state(s).
[t=0.0243055s, 26420 KB] Evaluations: 562
[t=0.0243055s, 26420 KB] Generated 2518 state(s).
[t=0.0243055s, 26420 KB] Dead ends: 0 state(s).
[t=0.0243055s, 26420 KB] Number of registered states: 281
[t=0.0243055s, 26420 KB] Int hash set load factor: 281/512 = 0.548828
[t=0.0243055s, 26420 KB] Int hash set resizes: 9
[t=0.0243055s, 26420 KB] Search time: 0.00690488s
[t=0.0243055s, 26420 KB] Total time: 0.0243055s
Solution found.
Peak memory: 26420 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.15s
