INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_26/bws_problem_26_25.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.015s wall-clock]
2212 relevant atoms
1482 auxiliary atoms
3694 final queue length
6457 total queue pushes
Completing instantiation... [0.020s CPU, 0.022s wall-clock]
Instantiating: [0.040s CPU, 0.039s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
27 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.010s CPU, 0.009s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.040s CPU, 0.036s wall-clock]
2002 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
52 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.022s wall-clock]
Reordering and filtering variables...
53 of 53 variables necessary.
27 of 53 mutex groups necessary.
1352 of 1352 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.008s wall-clock]
Translator variables: 53
Translator derived variables: 0
Translator facts: 756
Translator goal facts: 22
Translator mutex groups: 27
Translator total mutex groups size: 729
Translator operators: 1352
Translator axioms: 0
Translator task size: 11622
Translator peak memory: 38900 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.130s CPU, 0.128s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=1.9304e-05s, 24488 KB] reading input...
[t=0.00455598s, 25744 KB] done reading input!
[t=0.00552097s, 26140 KB] Initializing landmark count heuristic...
[t=0.00555437s, 26140 KB] Generating landmark graph...
[t=0.00563722s, 26272 KB] Building a landmark graph with reasonable orders.
[t=0.00572106s, 26272 KB] Initializing Exploration...
[t=0.0060876s, 26680 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0224852s, 27208 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0226174s, 27208 KB] Landmarks generation time: 0.0169814s
[t=0.0226327s, 27208 KB] Discovered 115 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0226524s, 27208 KB] 577 edges
[t=0.0226637s, 27208 KB] approx. reasonable orders
[t=0.0280169s, 27208 KB] approx. obedient reasonable orders
[t=0.0285041s, 27208 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0285277s, 27208 KB] Landmarks generation time: 0.0229713s
[t=0.0285395s, 27208 KB] Discovered 115 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0285487s, 27208 KB] 664 edges
[t=0.0285693s, 27208 KB] Landmark graph generation time: 0.0230218s
[t=0.0285777s, 27208 KB] Landmark graph contains 115 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0285854s, 27208 KB] Landmark graph contains 664 orderings.
[t=0.0292042s, 27208 KB] Simplifying 5356 unary operators... done! [4056 unary operators]
[t=0.0304313s, 27340 KB] time to simplify: 0.00130524s
[t=0.0305878s, 27340 KB] Initializing additive heuristic...
[t=0.0306035s, 27340 KB] Initializing FF heuristic...
[t=0.0306563s, 27340 KB] Building successor generator...done!
[t=0.0308966s, 27340 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0309053s, 27340 KB] time for successor generation creation: 0.000214696s
[t=0.0309181s, 27340 KB] Variables: 53
[t=0.0309262s, 27340 KB] FactPairs: 756
[t=0.0309341s, 27340 KB] Bytes per state: 20
[t=0.0310251s, 27340 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.031057s, 27340 KB] 52 initial landmarks, 22 goal landmarks
[t=0.0311211s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 63
[t=0.0311318s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 47
[t=0.0311402s, 27340 KB] g=0, 1 evaluated, 0 expanded
[t=0.0311547s, 27340 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 63
[t=0.0311633s, 27340 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 47
[t=0.0314798s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 62
[t=0.0314896s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 46
[t=0.0314983s, 27340 KB] g=2, 9 evaluated, 8 expanded
[t=0.031758s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 61
[t=0.0317668s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0317749s, 27340 KB] g=4, 17 evaluated, 16 expanded
[t=0.0320368s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 60
[t=0.0320461s, 27340 KB] g=6, 25 evaluated, 24 expanded
[t=0.0321338s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.0321444s, 27340 KB] g=6, 26 evaluated, 25 expanded
[t=0.0326986s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0327097s, 27340 KB] g=8, 42 evaluated, 41 expanded
[t=0.0329046s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.0329136s, 27340 KB] g=8, 48 evaluated, 47 expanded
[t=0.0330891s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0330981s, 27340 KB] g=10, 53 evaluated, 52 expanded
[t=0.0334525s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 58
[t=0.0334622s, 27340 KB] g=10, 64 evaluated, 63 expanded
[t=0.0335736s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0335823s, 27340 KB] g=12, 67 evaluated, 66 expanded
[t=0.0338089s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 57
[t=0.0338177s, 27340 KB] g=11, 74 evaluated, 73 expanded
[t=0.0345482s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0345628s, 27340 KB] g=14, 97 evaluated, 96 expanded
[t=0.0347689s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0347777s, 27340 KB] g=16, 103 evaluated, 102 expanded
[t=0.0351229s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0351321s, 27340 KB] g=18, 114 evaluated, 113 expanded
[t=0.0352398s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0352491s, 27340 KB] g=16, 117 evaluated, 116 expanded
[t=0.0358882s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0358985s, 27340 KB] g=22, 137 evaluated, 136 expanded
[t=0.0362528s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0362747s, 27340 KB] g=24, 145 evaluated, 144 expanded
[t=0.0366959s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0367081s, 27340 KB] g=26, 157 evaluated, 156 expanded
[t=0.0371509s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0371605s, 27340 KB] g=28, 170 evaluated, 169 expanded
[t=0.0380338s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0380463s, 27340 KB] g=30, 196 evaluated, 195 expanded
[t=0.0384504s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0384596s, 27340 KB] g=32, 208 evaluated, 207 expanded
[t=0.0387487s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0387633s, 27340 KB] g=34, 216 evaluated, 215 expanded
[t=0.0394347s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0394483s, 27340 KB] g=38, 236 evaluated, 235 expanded
[t=0.0412149s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0412411s, 27340 KB] g=44, 289 evaluated, 288 expanded
[t=0.0419926s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0420097s, 27340 KB] g=46, 312 evaluated, 311 expanded
[t=0.0581474s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0582664s, 27340 KB] g=52, 792 evaluated, 791 expanded
[t=0.0604397s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0604557s, 27340 KB] g=56, 856 evaluated, 855 expanded
[t=0.0608482s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0608586s, 27340 KB] g=58, 867 evaluated, 866 expanded
[t=0.0687118s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0687356s, 27340 KB] g=72, 1107 evaluated, 1106 expanded
[t=0.0690903s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0691012s, 27340 KB] g=74, 1118 evaluated, 1117 expanded
[t=0.0693065s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0693186s, 27340 KB] g=74, 1124 evaluated, 1123 expanded
[t=0.0695093s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0695192s, 27340 KB] g=76, 1130 evaluated, 1129 expanded
[t=0.0707732s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0707838s, 27340 KB] g=82, 1171 evaluated, 1170 expanded
[t=0.0720721s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.072088s, 27340 KB] g=90, 1209 evaluated, 1208 expanded
[t=0.0724465s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0724576s, 27340 KB] g=94, 1220 evaluated, 1219 expanded
[t=0.072615s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0726264s, 27340 KB] g=96, 1224 evaluated, 1223 expanded
[t=0.0782497s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0783262s, 27340 KB] g=126, 1414 evaluated, 1413 expanded
[t=0.0787195s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.07876s, 27340 KB] g=130, 1428 evaluated, 1427 expanded
[t=0.0788813s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.078891s, 27340 KB] g=132, 1432 evaluated, 1431 expanded
[t=0.0796777s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0796882s, 27340 KB] g=144, 1462 evaluated, 1461 expanded
[t=0.0799191s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0799292s, 27340 KB] g=148, 1471 evaluated, 1470 expanded
[t=0.0799809s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.07999s, 27340 KB] g=149, 1473 evaluated, 1472 expanded
[t=0.0800384s, 27340 KB] Solution found!
[t=0.0800544s, 27340 KB] Actual search time: 0.0489979s
unstack b13 b17 (1)
put-down b13 (1)
unstack b17 b4 (1)
put-down b17 (1)
unstack b4 b6 (1)
put-down b4 (1)
pick-up b10 (1)
stack b10 b6 (1)
pick-up b19 (1)
stack b19 b11 (1)
pick-up b25 (1)
stack b25 b17 (1)
unstack b24 b20 (1)
put-down b24 (1)
unstack b20 b18 (1)
stack b20 b10 (1)
unstack b1 b12 (1)
stack b1 b18 (1)
unstack b12 b2 (1)
put-down b12 (1)
unstack b2 b23 (1)
stack b2 b1 (1)
unstack b23 b14 (1)
stack b23 b4 (1)
unstack b14 b7 (1)
stack b14 b13 (1)
unstack b7 b8 (1)
stack b7 b19 (1)
pick-up b12 (1)
stack b12 b7 (1)
unstack b8 b16 (1)
stack b8 b2 (1)
unstack b16 b15 (1)
stack b16 b23 (1)
unstack b15 b22 (1)
put-down b15 (1)
unstack b22 b9 (1)
put-down b22 (1)
pick-up b24 (1)
stack b24 b22 (1)
unstack b9 b21 (1)
put-down b9 (1)
unstack b21 b26 (1)
put-down b21 (1)
pick-up b15 (1)
stack b15 b21 (1)
unstack b24 b22 (1)
put-down b24 (1)
pick-up b22 (1)
stack b22 b26 (1)
pick-up b24 (1)
stack b24 b22 (1)
unstack b15 b21 (1)
put-down b15 (1)
pick-up b21 (1)
stack b21 b24 (1)
pick-up b15 (1)
stack b15 b21 (1)
unstack b12 b7 (1)
put-down b12 (1)
unstack b7 b19 (1)
put-down b7 (1)
pick-up b12 (1)
stack b12 b7 (1)
unstack b19 b11 (1)
put-down b19 (1)
unstack b11 b3 (1)
stack b11 b8 (1)
pick-up b19 (1)
stack b19 b11 (1)
unstack b3 b5 (1)
stack b3 b16 (1)
pick-up b9 (1)
stack b9 b3 (1)
pick-up b5 (1)
stack b5 b9 (1)
unstack b12 b7 (1)
put-down b12 (1)
pick-up b7 (1)
stack b7 b19 (1)
pick-up b12 (1)
stack b12 b7 (1)
unstack b20 b10 (1)
put-down b20 (1)
unstack b10 b6 (1)
put-down b10 (1)
pick-up b20 (1)
stack b20 b10 (1)
pick-up b6 (1)
stack b6 b5 (1)
unstack b20 b10 (1)
put-down b20 (1)
pick-up b10 (1)
stack b10 b6 (1)
pick-up b20 (1)
stack b20 b10 (1)
unstack b12 b7 (1)
put-down b12 (1)
unstack b7 b19 (1)
put-down b7 (1)
pick-up b12 (1)
stack b12 b7 (1)
unstack b19 b11 (1)
put-down b19 (1)
unstack b11 b8 (1)
put-down b11 (1)
pick-up b19 (1)
stack b19 b11 (1)
unstack b12 b7 (1)
put-down b12 (1)
pick-up b7 (1)
stack b7 b19 (1)
pick-up b12 (1)
stack b12 b7 (1)
unstack b8 b2 (1)
put-down b8 (1)
unstack b2 b1 (1)
put-down b2 (1)
pick-up b8 (1)
stack b8 b2 (1)
unstack b1 b18 (1)
put-down b1 (1)
pick-up b18 (1)
stack b18 b15 (1)
pick-up b1 (1)
stack b1 b18 (1)
unstack b8 b2 (1)
put-down b8 (1)
pick-up b2 (1)
stack b2 b1 (1)
pick-up b8 (1)
stack b8 b2 (1)
unstack b12 b7 (1)
put-down b12 (1)
unstack b7 b19 (1)
put-down b7 (1)
pick-up b12 (1)
stack b12 b7 (1)
unstack b19 b11 (1)
put-down b19 (1)
pick-up b11 (1)
stack b11 b8 (1)
pick-up b19 (1)
stack b19 b11 (1)
unstack b12 b7 (1)
put-down b12 (1)
pick-up b7 (1)
stack b7 b19 (1)
pick-up b12 (1)
stack b12 b7 (1)
[t=0.0800669s, 27340 KB] Plan length: 150 step(s).
[t=0.0800669s, 27340 KB] Plan cost: 150
[t=0.0800669s, 27340 KB] Expanded 1474 state(s).
[t=0.0800669s, 27340 KB] Reopened 0 state(s).
[t=0.0800669s, 27340 KB] Evaluated 1475 state(s).
[t=0.0800669s, 27340 KB] Evaluations: 2950
[t=0.0800669s, 27340 KB] Generated 17053 state(s).
[t=0.0800669s, 27340 KB] Dead ends: 0 state(s).
[t=0.0800669s, 27340 KB] Number of registered states: 1475
[t=0.0800669s, 27340 KB] Int hash set load factor: 1475/2048 = 0.720215
[t=0.0800669s, 27340 KB] Int hash set resizes: 11
[t=0.0800669s, 27340 KB] Search time: 0.0490423s
[t=0.0800669s, 27340 KB] Total time: 0.0800669s
Solution found.
Peak memory: 27340 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.26s
