INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_27/bws_problem_27_2.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.014s wall-clock]
2378 relevant atoms
1593 auxiliary atoms
3971 final queue length
6944 total queue pushes
Completing instantiation... [0.020s CPU, 0.025s wall-clock]
Instantiating: [0.050s CPU, 0.041s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
28 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.000s CPU, 0.008s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.001s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.001s wall-clock]
Translating task: [0.050s CPU, 0.043s wall-clock]
2160 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
54 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.019s wall-clock]
Reordering and filtering variables...
55 of 55 variables necessary.
28 of 55 mutex groups necessary.
1458 of 1458 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.010s wall-clock]
Translator variables: 55
Translator derived variables: 0
Translator facts: 812
Translator goal facts: 22
Translator mutex groups: 28
Translator total mutex groups size: 784
Translator operators: 1458
Translator axioms: 0
Translator task size: 12527
Translator peak memory: 39668 KB
Writing output... [0.000s CPU, 0.007s wall-clock]
Done! [0.130s CPU, 0.135s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.0263e-05s, 24488 KB] reading input...
[t=0.00428304s, 25936 KB] done reading input!
[t=0.00526941s, 26332 KB] Initializing landmark count heuristic...
[t=0.00531394s, 26332 KB] Generating landmark graph...
[t=0.00540538s, 26332 KB] Building a landmark graph with reasonable orders.
[t=0.00549036s, 26464 KB] Initializing Exploration...
[t=0.0059215s, 26732 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0255934s, 27524 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.025723s, 27524 KB] Landmarks generation time: 0.0203427s
[t=0.0257635s, 27524 KB] Discovered 120 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0257848s, 27524 KB] 659 edges
[t=0.0257973s, 27524 KB] approx. reasonable orders
[t=0.0275024s, 27524 KB] approx. obedient reasonable orders
[t=0.0275467s, 27524 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0275583s, 27524 KB] Landmarks generation time: 0.0222386s
[t=0.0275706s, 27524 KB] Discovered 120 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0275811s, 27524 KB] 684 edges
[t=0.027592s, 27524 KB] Landmark graph generation time: 0.0222873s
[t=0.0276028s, 27524 KB] Landmark graph contains 120 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0276136s, 27524 KB] Landmark graph contains 684 orderings.
[t=0.028234s, 27572 KB] Simplifying 5778 unary operators... done! [4374 unary operators]
[t=0.029759s, 27572 KB] time to simplify: 0.00163639s
[t=0.0299584s, 27572 KB] Initializing additive heuristic...
[t=0.0299788s, 27572 KB] Initializing FF heuristic...
[t=0.0300379s, 27572 KB] Building successor generator...done!
[t=0.0303296s, 27572 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0303398s, 27572 KB] time for successor generation creation: 0.000249611s
[t=0.0303585s, 27572 KB] Variables: 55
[t=0.0303674s, 27572 KB] FactPairs: 812
[t=0.0303779s, 27572 KB] Bytes per state: 24
[t=0.0304929s, 27572 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0305287s, 27572 KB] 54 initial landmarks, 22 goal landmarks
[t=0.0305964s, 27572 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 66
[t=0.0306072s, 27572 KB] New best heuristic value for ff(transform = adapt_costs(one)): 47
[t=0.0306175s, 27572 KB] g=0, 1 evaluated, 0 expanded
[t=0.030634s, 27572 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 66
[t=0.0306447s, 27572 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 47
[t=0.030809s, 27572 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 65
[t=0.0308206s, 27572 KB] g=2, 5 evaluated, 4 expanded
[t=0.0311137s, 27572 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 64
[t=0.0311243s, 27572 KB] New best heuristic value for ff(transform = adapt_costs(one)): 46
[t=0.0311349s, 27572 KB] g=4, 13 evaluated, 12 expanded
[t=0.0313194s, 27572 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 63
[t=0.0313295s, 27572 KB] g=6, 18 evaluated, 17 expanded
[t=0.031445s, 27572 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 62
[t=0.0314549s, 27572 KB] g=7, 21 evaluated, 20 expanded
[t=0.0315032s, 27572 KB] New best heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0315127s, 27572 KB] g=6, 22 evaluated, 21 expanded
[t=0.0315967s, 27572 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 61
[t=0.031607s, 27572 KB] g=8, 23 evaluated, 22 expanded
[t=0.0318939s, 27572 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 58
[t=0.0319038s, 27572 KB] New best heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.0319141s, 27572 KB] g=10, 31 evaluated, 30 expanded
[t=0.0321018s, 27572 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 57
[t=0.0321114s, 27572 KB] g=12, 36 evaluated, 35 expanded
[t=0.0322714s, 27572 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0322855s, 27572 KB] g=13, 40 evaluated, 39 expanded
[t=0.0326114s, 27572 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0326273s, 27572 KB] g=16, 49 evaluated, 48 expanded
[t=0.0328123s, 27572 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0328226s, 27572 KB] g=16, 54 evaluated, 53 expanded
[t=0.0330738s, 27572 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0330837s, 27572 KB] g=18, 61 evaluated, 60 expanded
[t=0.0334746s, 27572 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0334852s, 27572 KB] g=20, 72 evaluated, 71 expanded
[t=0.0338114s, 27572 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0338281s, 27572 KB] g=21, 81 evaluated, 80 expanded
[t=0.0345559s, 27572 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0345699s, 27572 KB] g=24, 102 evaluated, 101 expanded
[t=0.0351677s, 27572 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.035189s, 27572 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0352054s, 27572 KB] g=26, 119 evaluated, 118 expanded
[t=0.0356154s, 27572 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0356397s, 27572 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0356535s, 27572 KB] g=28, 130 evaluated, 129 expanded
[t=0.0361467s, 27572 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0361653s, 27572 KB] g=30, 142 evaluated, 141 expanded
[t=0.036255s, 27572 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0362657s, 27572 KB] g=30, 144 evaluated, 143 expanded
[t=0.0369317s, 27572 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0369437s, 27572 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0369562s, 27572 KB] g=32, 163 evaluated, 162 expanded
[t=0.0373871s, 27572 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0373985s, 27572 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0374099s, 27572 KB] g=34, 175 evaluated, 174 expanded
[t=0.0378019s, 27572 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0378125s, 27572 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.037823s, 27572 KB] g=36, 186 evaluated, 185 expanded
[t=0.038179s, 27572 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.03819s, 27572 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0382007s, 27572 KB] g=38, 196 evaluated, 195 expanded
[t=0.0385442s, 27572 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0385641s, 27572 KB] g=40, 205 evaluated, 204 expanded
[t=0.0386513s, 27572 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0386615s, 27572 KB] g=40, 207 evaluated, 206 expanded
[t=0.0390782s, 27572 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0390894s, 27572 KB] g=42, 219 evaluated, 218 expanded
[t=0.0394429s, 27572 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0394531s, 27572 KB] g=43, 229 evaluated, 228 expanded
[t=0.03952s, 27572 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0395311s, 27572 KB] g=44, 230 evaluated, 229 expanded
[t=0.0398597s, 27572 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0398701s, 27572 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0398811s, 27572 KB] g=46, 239 evaluated, 238 expanded
[t=0.0402331s, 27572 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0402457s, 27572 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0402579s, 27572 KB] g=48, 248 evaluated, 247 expanded
[t=0.0404489s, 27572 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0404588s, 27572 KB] g=49, 253 evaluated, 252 expanded
[t=0.0405118s, 27572 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0405216s, 27572 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0405323s, 27572 KB] g=50, 254 evaluated, 253 expanded
[t=0.04084s, 27572 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0408498s, 27572 KB] g=52, 262 evaluated, 261 expanded
[t=0.0409351s, 27572 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0409453s, 27572 KB] g=52, 264 evaluated, 263 expanded
[t=0.0413902s, 27572 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0414004s, 27572 KB] g=54, 277 evaluated, 276 expanded
[t=0.0415494s, 27572 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0415589s, 27572 KB] g=54, 281 evaluated, 280 expanded
[t=0.0419123s, 27572 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0419222s, 27572 KB] g=56, 291 evaluated, 290 expanded
[t=0.0422239s, 27572 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0422343s, 27572 KB] g=56, 299 evaluated, 298 expanded
[t=0.0424634s, 27572 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0424733s, 27572 KB] g=58, 305 evaluated, 304 expanded
[t=0.0429179s, 27572 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0429277s, 27572 KB] g=58, 318 evaluated, 317 expanded
[t=0.0434444s, 27572 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0434625s, 27572 KB] g=60, 331 evaluated, 330 expanded
[t=0.0437181s, 27572 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0437285s, 27572 KB] g=62, 338 evaluated, 337 expanded
[t=0.0438121s, 27572 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0438219s, 27572 KB] g=62, 340 evaluated, 339 expanded
[t=0.0441086s, 27572 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0441204s, 27572 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0441323s, 27572 KB] g=64, 348 evaluated, 347 expanded
[t=0.0444798s, 27572 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0444898s, 27572 KB] g=68, 358 evaluated, 357 expanded
[t=0.0446388s, 27572 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0446522s, 27572 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0446632s, 27572 KB] g=70, 362 evaluated, 361 expanded
[t=0.0456962s, 27572 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0457071s, 27572 KB] g=78, 392 evaluated, 391 expanded
[t=0.0459226s, 27572 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0459329s, 27572 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0459434s, 27572 KB] g=80, 398 evaluated, 397 expanded
[t=0.0498147s, 27572 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.04984s, 27572 KB] g=98, 509 evaluated, 508 expanded
[t=0.0499608s, 27572 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0499722s, 27572 KB] g=98, 512 evaluated, 511 expanded
[t=0.0501496s, 27572 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0501607s, 27572 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0501725s, 27572 KB] g=100, 516 evaluated, 515 expanded
[t=0.0512039s, 27572 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0512177s, 27572 KB] g=108, 546 evaluated, 545 expanded
[t=0.0513325s, 27572 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0513433s, 27572 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0513538s, 27572 KB] g=110, 549 evaluated, 548 expanded
[t=0.0625273s, 27572 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0625767s, 27572 KB] g=148, 903 evaluated, 902 expanded
[t=0.0628494s, 27572 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.062861s, 27572 KB] g=152, 912 evaluated, 911 expanded
[t=0.0629568s, 27572 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0629677s, 27572 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0629794s, 27572 KB] g=154, 915 evaluated, 914 expanded
[t=0.0639423s, 27572 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0639637s, 27572 KB] g=170, 953 evaluated, 952 expanded
[t=0.0642384s, 27572 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0642493s, 27572 KB] g=178, 964 evaluated, 963 expanded
[t=0.0642819s, 27572 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0642918s, 27572 KB] g=178, 965 evaluated, 964 expanded
[t=0.0643168s, 27572 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0643265s, 27572 KB] g=179, 966 evaluated, 965 expanded
[t=0.064347s, 27572 KB] Solution found!
[t=0.0643604s, 27572 KB] Actual search time: 0.0338282s
unstack b11 b23 (1)
put-down b11 (1)
unstack b23 b14 (1)
put-down b23 (1)
unstack b14 b21 (1)
put-down b14 (1)
unstack b21 b20 (1)
stack b21 b5 (1)
unstack b7 b2 (1)
stack b7 b14 (1)
unstack b2 b4 (1)
put-down b2 (1)
unstack b4 b24 (1)
put-down b4 (1)
unstack b24 b26 (1)
put-down b24 (1)
unstack b26 b10 (1)
put-down b26 (1)
unstack b10 b6 (1)
put-down b10 (1)
unstack b6 b12 (1)
put-down b6 (1)
unstack b12 b3 (1)
put-down b12 (1)
unstack b3 b27 (1)
stack b3 b26 (1)
unstack b27 b9 (1)
stack b27 b23 (1)
unstack b9 b1 (1)
stack b9 b20 (1)
unstack b1 b15 (1)
put-down b1 (1)
unstack b15 b17 (1)
stack b15 b27 (1)
pick-up b4 (1)
stack b4 b15 (1)
pick-up b6 (1)
stack b6 b17 (1)
pick-up b2 (1)
stack b2 b3 (1)
unstack b21 b5 (1)
put-down b21 (1)
unstack b5 b8 (1)
stack b5 b1 (1)
unstack b8 b22 (1)
put-down b8 (1)
unstack b22 b25 (1)
stack b22 b2 (1)
unstack b25 b18 (1)
stack b25 b7 (1)
unstack b18 b13 (1)
put-down b18 (1)
unstack b13 b19 (1)
stack b13 b22 (1)
pick-up b10 (1)
stack b10 b13 (1)
pick-up b18 (1)
stack b18 b10 (1)
pick-up b21 (1)
stack b21 b5 (1)
pick-up b24 (1)
stack b24 b9 (1)
pick-up b11 (1)
stack b11 b24 (1)
unstack b19 b16 (1)
put-down b19 (1)
pick-up b16 (1)
stack b16 b11 (1)
pick-up b19 (1)
stack b19 b16 (1)
unstack b25 b7 (1)
put-down b25 (1)
unstack b7 b14 (1)
put-down b7 (1)
pick-up b14 (1)
stack b14 b18 (1)
pick-up b7 (1)
stack b7 b14 (1)
pick-up b25 (1)
stack b25 b7 (1)
unstack b19 b16 (1)
put-down b19 (1)
unstack b16 b11 (1)
put-down b16 (1)
unstack b11 b24 (1)
put-down b11 (1)
pick-up b16 (1)
stack b16 b11 (1)
pick-up b19 (1)
stack b19 b16 (1)
unstack b24 b9 (1)
put-down b24 (1)
unstack b9 b20 (1)
put-down b9 (1)
pick-up b20 (1)
stack b20 b8 (1)
pick-up b9 (1)
stack b9 b20 (1)
pick-up b24 (1)
stack b24 b9 (1)
unstack b19 b16 (1)
put-down b19 (1)
unstack b16 b11 (1)
put-down b16 (1)
pick-up b11 (1)
stack b11 b24 (1)
pick-up b16 (1)
stack b16 b11 (1)
pick-up b19 (1)
stack b19 b16 (1)
unstack b25 b7 (1)
put-down b25 (1)
unstack b7 b14 (1)
put-down b7 (1)
pick-up b25 (1)
stack b25 b7 (1)
unstack b14 b18 (1)
put-down b14 (1)
unstack b18 b10 (1)
put-down b18 (1)
unstack b10 b13 (1)
put-down b10 (1)
pick-up b18 (1)
stack b18 b10 (1)
pick-up b14 (1)
stack b14 b18 (1)
unstack b25 b7 (1)
put-down b25 (1)
pick-up b7 (1)
stack b7 b14 (1)
pick-up b25 (1)
stack b25 b7 (1)
unstack b13 b22 (1)
put-down b13 (1)
unstack b22 b2 (1)
put-down b22 (1)
pick-up b13 (1)
stack b13 b22 (1)
unstack b2 b3 (1)
put-down b2 (1)
unstack b3 b26 (1)
put-down b3 (1)
pick-up b26 (1)
stack b26 b19 (1)
pick-up b3 (1)
stack b3 b26 (1)
pick-up b2 (1)
stack b2 b3 (1)
unstack b13 b22 (1)
put-down b13 (1)
pick-up b22 (1)
stack b22 b2 (1)
pick-up b13 (1)
stack b13 b22 (1)
unstack b25 b7 (1)
put-down b25 (1)
unstack b7 b14 (1)
put-down b7 (1)
unstack b14 b18 (1)
put-down b14 (1)
pick-up b7 (1)
stack b7 b14 (1)
pick-up b25 (1)
stack b25 b7 (1)
unstack b18 b10 (1)
put-down b18 (1)
pick-up b10 (1)
stack b10 b13 (1)
pick-up b18 (1)
stack b18 b10 (1)
unstack b25 b7 (1)
put-down b25 (1)
unstack b7 b14 (1)
put-down b7 (1)
pick-up b14 (1)
stack b14 b18 (1)
pick-up b7 (1)
stack b7 b14 (1)
pick-up b25 (1)
stack b25 b7 (1)
[t=0.0643707s, 27572 KB] Plan length: 180 step(s).
[t=0.0643707s, 27572 KB] Plan cost: 180
[t=0.0643707s, 27572 KB] Expanded 966 state(s).
[t=0.0643707s, 27572 KB] Reopened 0 state(s).
[t=0.0643707s, 27572 KB] Evaluated 967 state(s).
[t=0.0643707s, 27572 KB] Evaluations: 1934
[t=0.0643707s, 27572 KB] Generated 9851 state(s).
[t=0.0643707s, 27572 KB] Dead ends: 0 state(s).
[t=0.0643707s, 27572 KB] Number of registered states: 967
[t=0.0643707s, 27572 KB] Int hash set load factor: 967/2048 = 0.472168
[t=0.0643707s, 27572 KB] Int hash set resizes: 11
[t=0.0643707s, 27572 KB] Search time: 0.0338786s
[t=0.0643707s, 27572 KB] Total time: 0.0643707s
Solution found.
Peak memory: 27572 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.24s
