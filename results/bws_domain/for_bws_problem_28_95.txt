INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_28/bws_problem_28_95.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.016s wall-clock]
2550 relevant atoms
1708 auxiliary atoms
4258 final queue length
7454 total queue pushes
Completing instantiation... [0.020s CPU, 0.028s wall-clock]
Instantiating: [0.040s CPU, 0.046s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.002s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
29 uncovered facts
Choosing groups: [0.000s CPU, 0.002s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.002s wall-clock]
Translating task: [0.050s CPU, 0.050s wall-clock]
2324 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
56 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.019s wall-clock]
Reordering and filtering variables...
57 of 57 variables necessary.
29 of 57 mutex groups necessary.
1568 of 1568 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.011s wall-clock]
Translator variables: 57
Translator derived variables: 0
Translator facts: 870
Translator goal facts: 22
Translator mutex groups: 29
Translator total mutex groups size: 841
Translator operators: 1568
Translator axioms: 0
Translator task size: 13466
Translator peak memory: 40312 KB
Writing output... [0.010s CPU, 0.008s wall-clock]
Done! [0.140s CPU, 0.148s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=1.9489e-05s, 24488 KB] reading input...
[t=0.00510001s, 26076 KB] done reading input!
[t=0.00692123s, 26472 KB] Initializing landmark count heuristic...
[t=0.00711593s, 26472 KB] Generating landmark graph...
[t=0.00743924s, 26604 KB] Building a landmark graph with reasonable orders.
[t=0.00762566s, 26604 KB] Initializing Exploration...
[t=0.00808187s, 27016 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0296636s, 27808 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0298994s, 27808 KB] Landmarks generation time: 0.022436s
[t=0.0299287s, 27808 KB] Discovered 124 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0299574s, 27808 KB] 802 edges
[t=0.0299696s, 27808 KB] approx. reasonable orders
[t=0.0361234s, 27808 KB] approx. obedient reasonable orders
[t=0.0365255s, 27808 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0365397s, 27808 KB] Landmarks generation time: 0.0293756s
[t=0.0365496s, 27808 KB] Discovered 124 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0365575s, 27808 KB] 897 edges
[t=0.036566s, 27808 KB] Landmark graph generation time: 0.029458s
[t=0.0365742s, 27808 KB] Landmark graph contains 124 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0365825s, 27808 KB] Landmark graph contains 897 orderings.
[t=0.0374063s, 27832 KB] Simplifying 6216 unary operators... done! [4704 unary operators]
[t=0.0390555s, 27832 KB] time to simplify: 0.00174681s
[t=0.0392557s, 28012 KB] Initializing additive heuristic...
[t=0.039274s, 28012 KB] Initializing FF heuristic...
[t=0.0393304s, 28012 KB] Building successor generator...done!
[t=0.039605s, 28012 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0396131s, 28012 KB] time for successor generation creation: 0.000241s
[t=0.0396268s, 28012 KB] Variables: 57
[t=0.0396356s, 28012 KB] FactPairs: 870
[t=0.0396434s, 28012 KB] Bytes per state: 24
[t=0.0397383s, 28012 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0397702s, 28012 KB] 56 initial landmarks, 22 goal landmarks
[t=0.0398356s, 28012 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 68
[t=0.0398447s, 28012 KB] New best heuristic value for ff(transform = adapt_costs(one)): 49
[t=0.0398528s, 28012 KB] g=0, 1 evaluated, 0 expanded
[t=0.0398654s, 28012 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 68
[t=0.0398735s, 28012 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 49
[t=0.0400698s, 28012 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 67
[t=0.0400793s, 28012 KB] New best heuristic value for ff(transform = adapt_costs(one)): 48
[t=0.040087s, 28012 KB] g=2, 6 evaluated, 5 expanded
[t=0.0402407s, 28012 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 66
[t=0.0402501s, 28012 KB] g=4, 10 evaluated, 9 expanded
[t=0.040359s, 28012 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 64
[t=0.0403731s, 28012 KB] New best heuristic value for ff(transform = adapt_costs(one)): 46
[t=0.040448s, 28012 KB] g=4, 12 evaluated, 11 expanded
[t=0.0406106s, 28012 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 63
[t=0.0406202s, 28012 KB] g=6, 16 evaluated, 15 expanded
[t=0.0407365s, 28012 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 62
[t=0.0407452s, 28012 KB] g=7, 19 evaluated, 18 expanded
[t=0.0411356s, 28012 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 61
[t=0.0411458s, 28012 KB] g=10, 29 evaluated, 28 expanded
[t=0.0412685s, 28012 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 60
[t=0.0412782s, 28012 KB] g=11, 32 evaluated, 31 expanded
[t=0.0417161s, 28012 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.0417285s, 28012 KB] g=14, 43 evaluated, 42 expanded
[t=0.0421149s, 28012 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 58
[t=0.0421327s, 28012 KB] g=16, 53 evaluated, 52 expanded
[t=0.042404s, 28012 KB] New best heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0424145s, 28012 KB] g=14, 59 evaluated, 58 expanded
[t=0.0427735s, 28012 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 57
[t=0.0427843s, 28012 KB] g=18, 68 evaluated, 67 expanded
[t=0.043121s, 28012 KB] New best heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.0431384s, 28012 KB] g=16, 73 evaluated, 72 expanded
[t=0.0437354s, 28012 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0437493s, 28012 KB] g=20, 88 evaluated, 87 expanded
[t=0.0439871s, 28012 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0439971s, 28012 KB] g=18, 94 evaluated, 93 expanded
[t=0.0445455s, 28012 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0445555s, 28012 KB] g=22, 109 evaluated, 108 expanded
[t=0.04525s, 28012 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.04526s, 28012 KB] g=24, 128 evaluated, 127 expanded
[t=0.0454287s, 28012 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.045438s, 28012 KB] g=24, 132 evaluated, 131 expanded
[t=0.0459306s, 28012 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0459448s, 28012 KB] g=26, 144 evaluated, 143 expanded
[t=0.0463812s, 28012 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0463908s, 28012 KB] g=26, 156 evaluated, 155 expanded
[t=0.0466185s, 28012 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0466276s, 28012 KB] g=28, 162 evaluated, 161 expanded
[t=0.047314s, 28012 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0473241s, 28012 KB] g=28, 181 evaluated, 180 expanded
[t=0.0474104s, 28012 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0474194s, 28012 KB] g=30, 183 evaluated, 182 expanded
[t=0.0481201s, 28012 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0481328s, 28012 KB] g=32, 202 evaluated, 201 expanded
[t=0.0484296s, 28012 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0484393s, 28012 KB] g=30, 210 evaluated, 209 expanded
[t=0.0489033s, 28012 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0489132s, 28012 KB] g=31, 223 evaluated, 222 expanded
[t=0.0489614s, 28012 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0489702s, 28012 KB] g=34, 224 evaluated, 223 expanded
[t=0.0497036s, 28012 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0497143s, 28012 KB] g=36, 244 evaluated, 243 expanded
[t=0.0503022s, 28012 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0503122s, 28012 KB] g=34, 260 evaluated, 259 expanded
[t=0.0504332s, 28012 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0504423s, 28012 KB] g=38, 263 evaluated, 262 expanded
[t=0.0511918s, 28012 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0512057s, 28012 KB] g=40, 282 evaluated, 281 expanded
[t=0.0514726s, 28012 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0514817s, 28012 KB] g=36, 289 evaluated, 288 expanded
[t=0.0518639s, 28012 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0518741s, 28012 KB] g=42, 299 evaluated, 298 expanded
[t=0.0524659s, 28012 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0524811s, 28012 KB] g=44, 315 evaluated, 314 expanded
[t=0.0529963s, 28012 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0530108s, 28012 KB] g=38, 327 evaluated, 326 expanded
[t=0.0531423s, 28012 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.053152s, 28012 KB] g=46, 330 evaluated, 329 expanded
[t=0.0537901s, 28012 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0538042s, 28012 KB] g=48, 346 evaluated, 345 expanded
[t=0.0543787s, 28012 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0543908s, 28012 KB] g=50, 361 evaluated, 360 expanded
[t=0.0544873s, 28012 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.054497s, 28012 KB] g=40, 363 evaluated, 362 expanded
[t=0.0555782s, 28012 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.055602s, 28012 KB] g=54, 390 evaluated, 389 expanded
[t=0.0561316s, 28012 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0561484s, 28012 KB] g=56, 402 evaluated, 401 expanded
[t=0.0564423s, 28012 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0564558s, 28012 KB] g=42, 410 evaluated, 409 expanded
[t=0.0565764s, 28012 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0565878s, 28012 KB] g=58, 413 evaluated, 412 expanded
[t=0.0570122s, 28012 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0570233s, 28012 KB] g=60, 425 evaluated, 424 expanded
[t=0.0580504s, 28012 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0580665s, 28012 KB] g=44, 452 evaluated, 451 expanded
[t=0.0588644s, 28012 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0588765s, 28012 KB] g=64, 475 evaluated, 474 expanded
[t=0.0591618s, 28012 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0591716s, 28012 KB] g=66, 483 evaluated, 482 expanded
[t=0.0595565s, 28012 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0595694s, 28012 KB] g=46, 493 evaluated, 492 expanded
[t=0.0602988s, 28012 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0603096s, 28012 KB] g=70, 514 evaluated, 513 expanded
[t=0.060587s, 28012 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0606003s, 28012 KB] g=72, 521 evaluated, 520 expanded
[t=0.0606789s, 28012 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0606884s, 28012 KB] g=48, 523 evaluated, 522 expanded
[t=0.0608273s, 28012 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0608367s, 28012 KB] g=74, 527 evaluated, 526 expanded
[t=0.0614937s, 28012 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0615184s, 28012 KB] g=78, 547 evaluated, 546 expanded
[t=0.0616698s, 28012 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0616816s, 28012 KB] g=80, 551 evaluated, 550 expanded
[t=0.0617716s, 28012 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0617807s, 28012 KB] g=50, 553 evaluated, 552 expanded
[t=0.0623624s, 28012 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0623726s, 28012 KB] g=52, 571 evaluated, 570 expanded
[t=0.0627876s, 28012 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0628051s, 28012 KB] g=92, 585 evaluated, 584 expanded
[t=0.0630765s, 28012 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.06309s, 28012 KB] g=96, 592 evaluated, 591 expanded
[t=0.0631176s, 28012 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0631264s, 28012 KB] g=97, 593 evaluated, 592 expanded
[t=0.0631437s, 28012 KB] Solution found!
[t=0.0631563s, 28012 KB] Actual search time: 0.0233843s
unstack b27 b25 (1)
put-down b27 (1)
unstack b26 b8 (1)
stack b26 b27 (1)
unstack b25 b7 (1)
put-down b25 (1)
unstack b7 b11 (1)
put-down b7 (1)
unstack b11 b28 (1)
put-down b11 (1)
unstack b28 b1 (1)
put-down b28 (1)
unstack b8 b2 (1)
put-down b8 (1)
unstack b2 b21 (1)
put-down b2 (1)
unstack b21 b14 (1)
put-down b21 (1)
unstack b14 b16 (1)
stack b14 b26 (1)
unstack b16 b17 (1)
put-down b16 (1)
pick-up b15 (1)
stack b15 b21 (1)
unstack b1 b13 (1)
stack b1 b25 (1)
unstack b13 b24 (1)
put-down b13 (1)
unstack b17 b12 (1)
stack b17 b1 (1)
unstack b12 b18 (1)
put-down b12 (1)
pick-up b2 (1)
stack b2 b16 (1)
unstack b24 b20 (1)
stack b24 b2 (1)
unstack b20 b3 (1)
stack b20 b11 (1)
pick-up b28 (1)
stack b28 b17 (1)
unstack b3 b19 (1)
stack b3 b23 (1)
unstack b19 b4 (1)
put-down b19 (1)
unstack b4 b6 (1)
stack b4 b12 (1)
unstack b18 b5 (1)
stack b18 b6 (1)
pick-up b8 (1)
stack b8 b24 (1)
unstack b5 b10 (1)
put-down b5 (1)
unstack b10 b22 (1)
stack b10 b8 (1)
pick-up b22 (1)
stack b22 b14 (1)
pick-up b5 (1)
stack b5 b22 (1)
pick-up b7 (1)
stack b7 b10 (1)
unstack b15 b21 (1)
put-down b15 (1)
pick-up b21 (1)
stack b21 b5 (1)
pick-up b15 (1)
stack b15 b21 (1)
unstack b18 b6 (1)
put-down b18 (1)
unstack b6 b9 (1)
stack b6 b3 (1)
pick-up b18 (1)
stack b18 b6 (1)
pick-up b9 (1)
stack b9 b18 (1)
unstack b20 b11 (1)
put-down b20 (1)
pick-up b11 (1)
stack b11 b9 (1)
pick-up b20 (1)
stack b20 b11 (1)
unstack b28 b17 (1)
put-down b28 (1)
unstack b17 b1 (1)
put-down b17 (1)
pick-up b28 (1)
stack b28 b17 (1)
unstack b1 b25 (1)
put-down b1 (1)
pick-up b25 (1)
stack b25 b4 (1)
pick-up b1 (1)
stack b1 b25 (1)
unstack b28 b17 (1)
put-down b28 (1)
pick-up b17 (1)
stack b17 b1 (1)
pick-up b28 (1)
stack b28 b17 (1)
[t=0.0631661s, 28012 KB] Plan length: 98 step(s).
[t=0.0631661s, 28012 KB] Plan cost: 98
[t=0.0631661s, 28012 KB] Expanded 593 state(s).
[t=0.0631661s, 28012 KB] Reopened 0 state(s).
[t=0.0631661s, 28012 KB] Evaluated 594 state(s).
[t=0.0631661s, 28012 KB] Evaluations: 1188
[t=0.0631661s, 28012 KB] Generated 7911 state(s).
[t=0.0631661s, 28012 KB] Dead ends: 0 state(s).
[t=0.0631661s, 28012 KB] Number of registered states: 594
[t=0.0631661s, 28012 KB] Int hash set load factor: 594/1024 = 0.580078
[t=0.0631661s, 28012 KB] Int hash set resizes: 10
[t=0.0631661s, 28012 KB] Search time: 0.0234286s
[t=0.0631661s, 28012 KB] Total time: 0.0631661s
Solution found.
Peak memory: 28012 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.25s
