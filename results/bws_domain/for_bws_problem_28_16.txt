INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_28/bws_problem_28_16.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.015s wall-clock]
2550 relevant atoms
1708 auxiliary atoms
4258 final queue length
7456 total queue pushes
Completing instantiation... [0.030s CPU, 0.030s wall-clock]
Instantiating: [0.050s CPU, 0.047s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.010s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
29 uncovered facts
Choosing groups: [0.000s CPU, 0.002s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.009s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.002s wall-clock]
Translating task: [0.050s CPU, 0.055s wall-clock]
2324 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
56 propositions removed
Detecting unreachable propositions: [0.030s CPU, 0.024s wall-clock]
Reordering and filtering variables...
57 of 57 variables necessary.
29 of 57 mutex groups necessary.
1568 of 1568 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.010s wall-clock]
Translator variables: 57
Translator derived variables: 0
Translator facts: 870
Translator goal facts: 24
Translator mutex groups: 29
Translator total mutex groups size: 841
Translator operators: 1568
Translator axioms: 0
Translator task size: 13468
Translator peak memory: 40312 KB
Writing output... [0.010s CPU, 0.009s wall-clock]
Done! [0.160s CPU, 0.161s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=4.1674e-05s, 24488 KB] reading input...
[t=0.00491305s, 26076 KB] done reading input!
[t=0.00578448s, 26472 KB] Initializing landmark count heuristic...
[t=0.00581751s, 26472 KB] Generating landmark graph...
[t=0.00590209s, 26604 KB] Building a landmark graph with reasonable orders.
[t=0.00601694s, 26604 KB] Initializing Exploration...
[t=0.00647032s, 27016 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0286175s, 27676 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0289146s, 27676 KB] Landmarks generation time: 0.0230184s
[t=0.0289499s, 27676 KB] Discovered 125 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0289875s, 27676 KB] 570 edges
[t=0.0290027s, 27676 KB] approx. reasonable orders
[t=0.0295046s, 27676 KB] approx. obedient reasonable orders
[t=0.029558s, 27676 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0295677s, 27676 KB] Landmarks generation time: 0.0237453s
[t=0.0295783s, 27676 KB] Discovered 125 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0295867s, 27676 KB] 574 edges
[t=0.0295959s, 27676 KB] Landmark graph generation time: 0.0237857s
[t=0.0296048s, 27676 KB] Landmark graph contains 125 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0296144s, 27676 KB] Landmark graph contains 574 orderings.
[t=0.0304451s, 27700 KB] Simplifying 6216 unary operators... done! [4704 unary operators]
[t=0.0320112s, 27832 KB] time to simplify: 0.00167016s
[t=0.0322318s, 27832 KB] Initializing additive heuristic...
[t=0.0322513s, 27832 KB] Initializing FF heuristic...
[t=0.0323666s, 27832 KB] Building successor generator...done!
[t=0.0327394s, 27832 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0327495s, 27832 KB] time for successor generation creation: 0.000329902s
[t=0.032766s, 27832 KB] Variables: 57
[t=0.0327744s, 27832 KB] FactPairs: 870
[t=0.0327824s, 27832 KB] Bytes per state: 24
[t=0.0329294s, 27832 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.03299s, 27832 KB] 57 initial landmarks, 24 goal landmarks
[t=0.033089s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 68
[t=0.0330987s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 51
[t=0.0331068s, 27832 KB] g=0, 1 evaluated, 0 expanded
[t=0.0331222s, 27832 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 68
[t=0.0331307s, 27832 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 51
[t=0.0332325s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 67
[t=0.0332418s, 27832 KB] g=1, 3 evaluated, 2 expanded
[t=0.0337114s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 65
[t=0.0337217s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 50
[t=0.0337299s, 27832 KB] g=4, 15 evaluated, 14 expanded
[t=0.0340151s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 64
[t=0.0340268s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 49
[t=0.0340354s, 27832 KB] g=6, 22 evaluated, 21 expanded
[t=0.0343947s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 63
[t=0.0344071s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 48
[t=0.0344174s, 27832 KB] g=8, 30 evaluated, 29 expanded
[t=0.0346991s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 62
[t=0.0347092s, 27832 KB] g=9, 37 evaluated, 36 expanded
[t=0.0348825s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 61
[t=0.0348934s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 47
[t=0.034902s, 27832 KB] g=10, 41 evaluated, 40 expanded
[t=0.0351369s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 60
[t=0.0351462s, 27832 KB] g=11, 47 evaluated, 46 expanded
[t=0.0353504s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 58
[t=0.03536s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 46
[t=0.0353753s, 27832 KB] g=12, 52 evaluated, 51 expanded
[t=0.0356132s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 57
[t=0.0356226s, 27832 KB] g=13, 58 evaluated, 57 expanded
[t=0.0358255s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0358352s, 27832 KB] g=14, 63 evaluated, 62 expanded
[t=0.0362156s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0362254s, 27832 KB] g=15, 73 evaluated, 72 expanded
[t=0.0363479s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0363574s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0363661s, 27832 KB] g=16, 76 evaluated, 75 expanded
[t=0.0365952s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0366041s, 27832 KB] g=17, 82 evaluated, 81 expanded
[t=0.0369154s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0369248s, 27832 KB] g=20, 90 evaluated, 89 expanded
[t=0.0370491s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0370581s, 27832 KB] g=21, 93 evaluated, 92 expanded
[t=0.0371069s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0371162s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0371252s, 27832 KB] g=22, 94 evaluated, 93 expanded
[t=0.0374555s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0374682s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0374772s, 27832 KB] g=24, 102 evaluated, 101 expanded
[t=0.0377961s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0378068s, 27832 KB] g=26, 110 evaluated, 109 expanded
[t=0.0381946s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0382181s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0382276s, 27832 KB] g=28, 119 evaluated, 118 expanded
[t=0.0386393s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0386513s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0386609s, 27832 KB] g=30, 129 evaluated, 128 expanded
[t=0.0395433s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0395582s, 27832 KB] g=32, 151 evaluated, 150 expanded
[t=0.0399532s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.039971s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0399796s, 27832 KB] g=34, 160 evaluated, 159 expanded
[t=0.0403729s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.040384s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0403924s, 27832 KB] g=36, 170 evaluated, 169 expanded
[t=0.0407364s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0407463s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0407611s, 27832 KB] g=38, 179 evaluated, 178 expanded
[t=0.041102s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0411121s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.041121s, 27832 KB] g=40, 188 evaluated, 187 expanded
[t=0.0416126s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0416254s, 27832 KB] g=43, 200 evaluated, 199 expanded
[t=0.0417155s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.041726s, 27832 KB] g=44, 202 evaluated, 201 expanded
[t=0.0420439s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0420546s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0420629s, 27832 KB] g=46, 210 evaluated, 209 expanded
[t=0.042335s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0423441s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0423529s, 27832 KB] g=48, 217 evaluated, 216 expanded
[t=0.0438231s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0438354s, 27832 KB] g=52, 257 evaluated, 256 expanded
[t=0.044073s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0440849s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0440933s, 27832 KB] g=54, 263 evaluated, 262 expanded
[t=0.0454298s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0454439s, 27832 KB] g=60, 299 evaluated, 298 expanded
[t=0.0711933s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0712593s, 27832 KB] g=72, 947 evaluated, 946 expanded
[t=0.0716608s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0716742s, 27832 KB] g=74, 957 evaluated, 956 expanded
[t=0.072051s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0720608s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0720688s, 27832 KB] g=76, 967 evaluated, 966 expanded
[t=0.0724047s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0724144s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0724232s, 27832 KB] g=78, 976 evaluated, 975 expanded
[t=0.0727429s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0727528s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0727617s, 27832 KB] g=80, 985 evaluated, 984 expanded
[t=0.0730974s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0731098s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0731209s, 27832 KB] g=82, 994 evaluated, 993 expanded
[t=0.0733775s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0733871s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0734021s, 27832 KB] g=84, 1001 evaluated, 1000 expanded
[t=0.0736503s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0736602s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0736694s, 27832 KB] g=86, 1008 evaluated, 1007 expanded
[t=0.0752474s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0752871s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0753021s, 27832 KB] g=90, 1044 evaluated, 1043 expanded
[t=0.0756005s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0756225s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0756329s, 27832 KB] g=92, 1050 evaluated, 1049 expanded
[t=0.0764989s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0765127s, 27832 KB] g=96, 1075 evaluated, 1074 expanded
[t=0.0766817s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0766913s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0766992s, 27832 KB] g=98, 1080 evaluated, 1079 expanded
[t=0.0772075s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0772173s, 27832 KB] g=102, 1096 evaluated, 1095 expanded
[t=0.0773495s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0773585s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0773664s, 27832 KB] g=104, 1100 evaluated, 1099 expanded
[t=0.0785051s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0785181s, 27832 KB] g=114, 1136 evaluated, 1135 expanded
[t=0.0786311s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0786446s, 27832 KB] g=116, 1139 evaluated, 1138 expanded
[t=0.0788884s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0789175s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0789282s, 27832 KB] g=122, 1146 evaluated, 1145 expanded
[t=0.0818709s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0818901s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0818992s, 27832 KB] g=140, 1246 evaluated, 1245 expanded
[t=0.0826443s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0826717s, 27832 KB] g=148, 1274 evaluated, 1273 expanded
[t=0.0828881s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0828991s, 27832 KB] g=152, 1283 evaluated, 1282 expanded
[t=0.0829787s, 27832 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0829881s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0829964s, 27832 KB] g=154, 1286 evaluated, 1285 expanded
[t=0.083204s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0832139s, 27832 KB] g=162, 1297 evaluated, 1296 expanded
[t=0.0832333s, 27832 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0832459s, 27832 KB] g=163, 1298 evaluated, 1297 expanded
[t=0.0832621s, 27832 KB] Solution found!
[t=0.0832778s, 27832 KB] Actual search time: 0.0502846s
unstack b16 b24 (1)
put-down b16 (1)
unstack b17 b22 (1)
stack b17 b21 (1)
unstack b24 b20 (1)
put-down b24 (1)
unstack b20 b9 (1)
put-down b20 (1)
unstack b18 b4 (1)
stack b18 b12 (1)
unstack b4 b28 (1)
stack b4 b18 (1)
pick-up b28 (1)
stack b28 b22 (1)
unstack b6 b26 (1)
stack b6 b24 (1)
unstack b9 b14 (1)
put-down b9 (1)
unstack b14 b2 (1)
put-down b14 (1)
unstack b2 b11 (1)
stack b2 b14 (1)
unstack b11 b13 (1)
stack b11 b26 (1)
unstack b13 b3 (1)
put-down b13 (1)
unstack b3 b27 (1)
stack b3 b20 (1)
unstack b27 b19 (1)
put-down b27 (1)
pick-up b16 (1)
stack b16 b27 (1)
unstack b19 b7 (1)
put-down b19 (1)
unstack b7 b8 (1)
stack b7 b4 (1)
pick-up b13 (1)
stack b13 b19 (1)
pick-up b8 (1)
stack b8 b17 (1)
unstack b28 b22 (1)
put-down b28 (1)
unstack b22 b10 (1)
stack b22 b11 (1)
pick-up b28 (1)
stack b28 b22 (1)
pick-up b9 (1)
stack b9 b10 (1)
unstack b16 b27 (1)
put-down b16 (1)
pick-up b27 (1)
stack b27 b8 (1)
pick-up b16 (1)
stack b16 b27 (1)
unstack b9 b10 (1)
put-down b9 (1)
unstack b10 b5 (1)
put-down b10 (1)
pick-up b9 (1)
stack b9 b10 (1)
unstack b16 b27 (1)
put-down b16 (1)
unstack b27 b8 (1)
put-down b27 (1)
pick-up b16 (1)
stack b16 b27 (1)
unstack b8 b17 (1)
put-down b8 (1)
unstack b17 b21 (1)
put-down b17 (1)
unstack b21 b1 (1)
stack b21 b13 (1)
unstack b1 b23 (1)
stack b1 b3 (1)
pick-up b5 (1)
stack b5 b1 (1)
unstack b23 b25 (1)
put-down b23 (1)
unstack b25 b15 (1)
stack b25 b6 (1)
pick-up b15 (1)
stack b15 b7 (1)
pick-up b17 (1)
stack b17 b21 (1)
pick-up b8 (1)
stack b8 b17 (1)
unstack b2 b14 (1)
put-down b2 (1)
pick-up b14 (1)
stack b14 b23 (1)
pick-up b2 (1)
stack b2 b14 (1)
unstack b16 b27 (1)
put-down b16 (1)
pick-up b27 (1)
stack b27 b8 (1)
pick-up b16 (1)
stack b16 b27 (1)
unstack b9 b10 (1)
put-down b9 (1)
pick-up b10 (1)
stack b10 b5 (1)
pick-up b9 (1)
stack b9 b10 (1)
unstack b28 b22 (1)
put-down b28 (1)
unstack b22 b11 (1)
put-down b22 (1)
pick-up b28 (1)
stack b28 b22 (1)
unstack b11 b26 (1)
put-down b11 (1)
pick-up b26 (1)
stack b26 b15 (1)
unstack b28 b22 (1)
put-down b28 (1)
pick-up b22 (1)
stack b22 b11 (1)
pick-up b28 (1)
stack b28 b22 (1)
unstack b26 b15 (1)
put-down b26 (1)
unstack b15 b7 (1)
put-down b15 (1)
unstack b7 b4 (1)
put-down b7 (1)
pick-up b15 (1)
stack b15 b7 (1)
pick-up b26 (1)
stack b26 b15 (1)
unstack b4 b18 (1)
put-down b4 (1)
unstack b18 b12 (1)
put-down b18 (1)
pick-up b12 (1)
stack b12 b25 (1)
pick-up b18 (1)
stack b18 b12 (1)
pick-up b4 (1)
stack b4 b18 (1)
unstack b26 b15 (1)
put-down b26 (1)
unstack b15 b7 (1)
put-down b15 (1)
pick-up b26 (1)
stack b26 b15 (1)
pick-up b7 (1)
stack b7 b4 (1)
unstack b26 b15 (1)
put-down b26 (1)
pick-up b15 (1)
stack b15 b7 (1)
pick-up b26 (1)
stack b26 b15 (1)
unstack b28 b22 (1)
put-down b28 (1)
unstack b22 b11 (1)
put-down b22 (1)
pick-up b11 (1)
stack b11 b26 (1)
pick-up b22 (1)
stack b22 b11 (1)
pick-up b28 (1)
stack b28 b22 (1)
[t=0.0832876s, 27832 KB] Plan length: 164 step(s).
[t=0.0832876s, 27832 KB] Plan cost: 164
[t=0.0832876s, 27832 KB] Expanded 1298 state(s).
[t=0.0832876s, 27832 KB] Reopened 0 state(s).
[t=0.0832876s, 27832 KB] Evaluated 1299 state(s).
[t=0.0832876s, 27832 KB] Evaluations: 2598
[t=0.0832876s, 27832 KB] Generated 13639 state(s).
[t=0.0832876s, 27832 KB] Dead ends: 0 state(s).
[t=0.0832876s, 27832 KB] Number of registered states: 1299
[t=0.0832876s, 27832 KB] Int hash set load factor: 1299/2048 = 0.634277
[t=0.0832876s, 27832 KB] Int hash set resizes: 11
[t=0.0832876s, 27832 KB] Search time: 0.0503588s
[t=0.0832876s, 27832 KB] Total time: 0.0832876s
Solution found.
Peak memory: 27832 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.29s
