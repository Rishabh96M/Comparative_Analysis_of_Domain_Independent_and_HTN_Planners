INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_21/bws_problem_21_86.pddl --sas-file output.sas
Parsing...
Parsing: [0.010s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.011s wall-clock]
1472 relevant atoms
987 auxiliary atoms
2459 final queue length
4269 total queue pushes
Completing instantiation... [0.010s CPU, 0.015s wall-clock]
Instantiating: [0.020s CPU, 0.028s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
22 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.006s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.023s wall-clock]
1302 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
42 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.010s wall-clock]
Reordering and filtering variables...
43 of 43 variables necessary.
22 of 43 mutex groups necessary.
882 of 882 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 43
Translator derived variables: 0
Translator facts: 506
Translator goal facts: 17
Translator mutex groups: 22
Translator total mutex groups size: 484
Translator operators: 882
Translator axioms: 0
Translator task size: 7602
Translator peak memory: 36456 KB
Writing output... [0.000s CPU, 0.005s wall-clock]
Done! [0.080s CPU, 0.081s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=3.0424e-05s, 24488 KB] reading input...
[t=0.00325928s, 25268 KB] done reading input!
[t=0.00427187s, 25664 KB] Initializing landmark count heuristic...
[t=0.00430816s, 25664 KB] Generating landmark graph...
[t=0.00436643s, 25664 KB] Building a landmark graph with reasonable orders.
[t=0.00444477s, 25664 KB] Initializing Exploration...
[t=0.0047137s, 25852 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0133951s, 26248 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.013455s, 26248 KB] Landmarks generation time: 0.00908998s
[t=0.0134702s, 26248 KB] Discovered 94 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0134864s, 26248 KB] 324 edges
[t=0.0134968s, 26248 KB] approx. reasonable orders
[t=0.0163004s, 26248 KB] approx. obedient reasonable orders
[t=0.0165289s, 26248 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0165437s, 26248 KB] Landmarks generation time: 0.0122329s
[t=0.0165552s, 26248 KB] Discovered 94 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0165666s, 26248 KB] 398 edges
[t=0.0165822s, 26248 KB] Landmark graph generation time: 0.0122925s
[t=0.0166043s, 26248 KB] Landmark graph contains 94 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0166222s, 26248 KB] Landmark graph contains 398 orderings.
[t=0.0171764s, 26248 KB] Simplifying 3486 unary operators... done! [2646 unary operators]
[t=0.0181383s, 26380 KB] time to simplify: 0.00103256s
[t=0.0182672s, 26380 KB] Initializing additive heuristic...
[t=0.0182844s, 26380 KB] Initializing FF heuristic...
[t=0.0183671s, 26380 KB] Building successor generator...done!
[t=0.0185958s, 26380 KB] peak memory difference for successor generator creation: 0 KB
[t=0.018606s, 26380 KB] time for successor generation creation: 0.000189505s
[t=0.0186214s, 26380 KB] Variables: 43
[t=0.0186301s, 26380 KB] FactPairs: 506
[t=0.018638s, 26380 KB] Bytes per state: 16
[t=0.0188251s, 26380 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.018878s, 26380 KB] 43 initial landmarks, 17 goal landmarks
[t=0.0189684s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0189786s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0189958s, 26380 KB] g=0, 1 evaluated, 0 expanded
[t=0.019012s, 26380 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0190211s, 26380 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.019173s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0191835s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0191989s, 26380 KB] g=2, 6 evaluated, 5 expanded
[t=0.01935s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0193597s, 26380 KB] g=4, 12 evaluated, 11 expanded
[t=0.0195769s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.019587s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0195951s, 26380 KB] g=6, 21 evaluated, 20 expanded
[t=0.0197665s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0197764s, 26380 KB] g=8, 28 evaluated, 27 expanded
[t=0.0199012s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0199105s, 26380 KB] g=8, 33 evaluated, 32 expanded
[t=0.0202666s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0202805s, 26380 KB] g=10, 48 evaluated, 47 expanded
[t=0.0205909s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0206017s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0206097s, 26380 KB] g=12, 61 evaluated, 60 expanded
[t=0.0208147s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0208247s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0208331s, 26380 KB] g=14, 69 evaluated, 68 expanded
[t=0.0210367s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0210603s, 26380 KB] g=16, 77 evaluated, 76 expanded
[t=0.0211451s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0211557s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0211655s, 26380 KB] g=16, 80 evaluated, 79 expanded
[t=0.0213493s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0213594s, 26380 KB] g=18, 87 evaluated, 86 expanded
[t=0.0214405s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.02145s, 26380 KB] g=19, 90 evaluated, 89 expanded
[t=0.0214848s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0214937s, 26380 KB] g=20, 91 evaluated, 90 expanded
[t=0.0218718s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0218838s, 26380 KB] g=22, 106 evaluated, 105 expanded
[t=0.0220087s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0220178s, 26380 KB] g=22, 111 evaluated, 110 expanded
[t=0.0223196s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0223299s, 26380 KB] g=24, 124 evaluated, 123 expanded
[t=0.0225286s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0225375s, 26380 KB] g=24, 132 evaluated, 131 expanded
[t=0.0230672s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0230788s, 26380 KB] g=26, 156 evaluated, 155 expanded
[t=0.0231332s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0231426s, 26380 KB] g=27, 158 evaluated, 157 expanded
[t=0.0232865s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0232954s, 26380 KB] g=28, 164 evaluated, 163 expanded
[t=0.0236451s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0236544s, 26380 KB] g=30, 180 evaluated, 179 expanded
[t=0.0239268s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0239355s, 26380 KB] g=30, 192 evaluated, 191 expanded
[t=0.0240135s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0240219s, 26380 KB] g=32, 195 evaluated, 194 expanded
[t=0.0243737s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.024383s, 26380 KB] g=34, 211 evaluated, 210 expanded
[t=0.0246179s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0246263s, 26380 KB] g=36, 221 evaluated, 220 expanded
[t=0.0246575s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0246658s, 26380 KB] g=32, 222 evaluated, 221 expanded
[t=0.0249496s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0249644s, 26380 KB] g=36, 234 evaluated, 233 expanded
[t=0.0252933s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0253047s, 26380 KB] g=38, 248 evaluated, 247 expanded
[t=0.025537s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.025546s, 26380 KB] g=40, 257 evaluated, 256 expanded
[t=0.0260373s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0260489s, 26380 KB] g=34, 278 evaluated, 277 expanded
[t=0.026588s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0266004s, 26380 KB] g=44, 303 evaluated, 302 expanded
[t=0.0267919s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0268026s, 26380 KB] g=46, 311 evaluated, 310 expanded
[t=0.0268774s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0268863s, 26380 KB] g=36, 314 evaluated, 313 expanded
[t=0.0280688s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0280794s, 26380 KB] g=38, 369 evaluated, 368 expanded
[t=0.028626s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0286365s, 26380 KB] g=56, 394 evaluated, 393 expanded
[t=0.0287118s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0287208s, 26380 KB] g=40, 397 evaluated, 396 expanded
[t=0.0288353s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0288444s, 26380 KB] g=58, 402 evaluated, 401 expanded
[t=0.0297276s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0298364s, 26380 KB] g=64, 440 evaluated, 439 expanded
[t=0.0299128s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0299398s, 26380 KB] g=42, 442 evaluated, 441 expanded
[t=0.0307706s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0308077s, 26380 KB] g=70, 474 evaluated, 473 expanded
[t=0.0308963s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0309073s, 26380 KB] g=44, 476 evaluated, 475 expanded
[t=0.0312147s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0312257s, 26380 KB] g=46, 491 evaluated, 490 expanded
[t=0.0320043s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0320166s, 26380 KB] g=48, 528 evaluated, 527 expanded
[t=0.0327632s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0327927s, 26380 KB] g=50, 560 evaluated, 559 expanded
[t=0.033022s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0330341s, 26380 KB] g=51, 572 evaluated, 571 expanded
[t=0.0330649s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0330739s, 26380 KB] g=76, 573 evaluated, 572 expanded
[t=0.0333316s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0333411s, 26380 KB] g=52, 587 evaluated, 586 expanded
[t=0.0334252s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0334366s, 26380 KB] g=80, 591 evaluated, 590 expanded
[t=0.0335394s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.033553s, 26380 KB] g=53, 596 evaluated, 595 expanded
[t=0.0336832s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0337103s, 26380 KB] g=82, 597 evaluated, 596 expanded
[t=0.0338915s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0339012s, 26380 KB] g=54, 604 evaluated, 603 expanded
[t=0.0339828s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0339916s, 26380 KB] g=55, 609 evaluated, 608 expanded
[t=0.0343079s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0343246s, 26380 KB] g=94, 630 evaluated, 629 expanded
[t=0.0343467s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.034355s, 26380 KB] g=56, 631 evaluated, 630 expanded
[t=0.0344502s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0344591s, 26380 KB] g=57, 638 evaluated, 637 expanded
[t=0.0344951s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0345036s, 26380 KB] g=98, 640 evaluated, 639 expanded
[t=0.03452s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0345285s, 26380 KB] g=99, 641 evaluated, 640 expanded
[t=0.0345549s, 26380 KB] Solution found!
[t=0.0345662s, 26380 KB] Actual search time: 0.0156846s
unstack b11 b17 (1)
put-down b11 (1)
unstack b13 b18 (1)
put-down b13 (1)
unstack b18 b6 (1)
put-down b18 (1)
unstack b16 b8 (1)
put-down b16 (1)
unstack b17 b4 (1)
put-down b17 (1)
unstack b4 b5 (1)
stack b4 b11 (1)
unstack b8 b19 (1)
put-down b8 (1)
pick-up b13 (1)
stack b13 b8 (1)
unstack b19 b12 (1)
put-down b19 (1)
unstack b12 b15 (1)
stack b12 b16 (1)
unstack b15 b20 (1)
stack b15 b6 (1)
pick-up b20 (1)
stack b20 b15 (1)
unstack b10 b1 (1)
put-down b10 (1)
unstack b1 b14 (1)
put-down b1 (1)
unstack b14 b3 (1)
stack b14 b19 (1)
pick-up b3 (1)
stack b3 b13 (1)
unstack b5 b21 (1)
stack b5 b14 (1)
unstack b21 b9 (1)
stack b21 b3 (1)
pick-up b10 (1)
stack b10 b21 (1)
pick-up b9 (1)
stack b9 b4 (1)
unstack b12 b16 (1)
put-down b12 (1)
pick-up b16 (1)
stack b16 b1 (1)
pick-up b12 (1)
stack b12 b16 (1)
unstack b20 b15 (1)
put-down b20 (1)
unstack b15 b6 (1)
put-down b15 (1)
pick-up b20 (1)
stack b20 b15 (1)
unstack b6 b2 (1)
stack b6 b17 (1)
unstack b2 b7 (1)
stack b2 b5 (1)
pick-up b7 (1)
stack b7 b9 (1)
unstack b20 b15 (1)
put-down b20 (1)
pick-up b15 (1)
stack b15 b6 (1)
pick-up b20 (1)
stack b20 b15 (1)
unstack b2 b5 (1)
put-down b2 (1)
unstack b5 b14 (1)
put-down b5 (1)
pick-up b2 (1)
stack b2 b5 (1)
unstack b14 b19 (1)
put-down b14 (1)
pick-up b19 (1)
stack b19 b7 (1)
pick-up b14 (1)
stack b14 b19 (1)
unstack b2 b5 (1)
put-down b2 (1)
pick-up b5 (1)
stack b5 b14 (1)
pick-up b2 (1)
stack b2 b5 (1)
unstack b20 b15 (1)
put-down b20 (1)
unstack b15 b6 (1)
put-down b15 (1)
pick-up b20 (1)
stack b20 b15 (1)
unstack b6 b17 (1)
put-down b6 (1)
pick-up b17 (1)
stack b17 b2 (1)
pick-up b6 (1)
stack b6 b17 (1)
unstack b20 b15 (1)
put-down b20 (1)
pick-up b15 (1)
stack b15 b6 (1)
pick-up b20 (1)
stack b20 b15 (1)
[t=0.0345751s, 26380 KB] Plan length: 100 step(s).
[t=0.0345751s, 26380 KB] Plan cost: 100
[t=0.0345751s, 26380 KB] Expanded 642 state(s).
[t=0.0345751s, 26380 KB] Reopened 0 state(s).
[t=0.0345751s, 26380 KB] Evaluated 643 state(s).
[t=0.0345751s, 26380 KB] Evaluations: 1286
[t=0.0345751s, 26380 KB] Generated 7431 state(s).
[t=0.0345751s, 26380 KB] Dead ends: 0 state(s).
[t=0.0345751s, 26380 KB] Number of registered states: 643
[t=0.0345751s, 26380 KB] Int hash set load factor: 643/1024 = 0.62793
[t=0.0345751s, 26380 KB] Int hash set resizes: 10
[t=0.0345751s, 26380 KB] Search time: 0.0157519s
[t=0.0345751s, 26380 KB] Total time: 0.0345751s
Solution found.
Peak memory: 26380 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.16s
