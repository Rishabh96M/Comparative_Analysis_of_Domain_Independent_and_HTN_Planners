INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_24/bws_problem_24_32.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.011s wall-clock]
1898 relevant atoms
1272 auxiliary atoms
3170 final queue length
5528 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.032s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.010s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
25 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.007s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.029s wall-clock]
1704 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
48 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.021s wall-clock]
Reordering and filtering variables...
49 of 49 variables necessary.
25 of 49 mutex groups necessary.
1152 of 1152 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.007s wall-clock]
Translator variables: 49
Translator derived variables: 0
Translator facts: 650
Translator goal facts: 17
Translator mutex groups: 25
Translator total mutex groups size: 625
Translator operators: 1152
Translator axioms: 0
Translator task size: 9909
Translator peak memory: 37872 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.110s CPU, 0.108s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.0088e-05s, 24488 KB] reading input...
[t=0.00318804s, 25532 KB] done reading input!
[t=0.00419605s, 25928 KB] Initializing landmark count heuristic...
[t=0.00423928s, 25928 KB] Generating landmark graph...
[t=0.00431808s, 25928 KB] Building a landmark graph with reasonable orders.
[t=0.00438581s, 26060 KB] Initializing Exploration...
[t=0.00472026s, 26388 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0164536s, 26784 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0165757s, 26784 KB] Landmarks generation time: 0.0122605s
[t=0.0165926s, 26784 KB] Discovered 97 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0166112s, 26784 KB] 291 edges
[t=0.016622s, 26784 KB] approx. reasonable orders
[t=0.0189521s, 26784 KB] approx. obedient reasonable orders
[t=0.0189875s, 26784 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0189973s, 26784 KB] Landmarks generation time: 0.0147558s
[t=0.0190065s, 26784 KB] Discovered 97 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0190142s, 26784 KB] 324 edges
[t=0.0190222s, 26784 KB] Landmark graph generation time: 0.0147898s
[t=0.0190303s, 26784 KB] Landmark graph contains 97 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0190387s, 26784 KB] Landmark graph contains 324 orderings.
[t=0.0194444s, 26784 KB] Simplifying 4560 unary operators... done! [3456 unary operators]
[t=0.0205379s, 26916 KB] time to simplify: 0.00116841s
[t=0.0206838s, 26916 KB] Initializing additive heuristic...
[t=0.0206991s, 26916 KB] Initializing FF heuristic...
[t=0.020752s, 26916 KB] Building successor generator...done!
[t=0.0209973s, 26916 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0210062s, 26916 KB] time for successor generation creation: 0.000198244s
[t=0.0210188s, 26916 KB] Variables: 49
[t=0.0210267s, 26916 KB] FactPairs: 650
[t=0.0210347s, 26916 KB] Bytes per state: 20
[t=0.0211325s, 26916 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0211663s, 26916 KB] 47 initial landmarks, 17 goal landmarks
[t=0.0212223s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0212321s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0212415s, 26916 KB] g=0, 1 evaluated, 0 expanded
[t=0.0212562s, 26916 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0212656s, 26916 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0214893s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.021499s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0215077s, 26916 KB] g=2, 8 evaluated, 7 expanded
[t=0.0216543s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0216746s, 26916 KB] g=3, 12 evaluated, 11 expanded
[t=0.0217157s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0217248s, 26916 KB] g=4, 13 evaluated, 12 expanded
[t=0.0222633s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0222792s, 26916 KB] g=6, 27 evaluated, 26 expanded
[t=0.022319s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0223287s, 26916 KB] g=6, 28 evaluated, 27 expanded
[t=0.0227357s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0227457s, 26916 KB] g=8, 42 evaluated, 41 expanded
[t=0.0230005s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.02301s, 26916 KB] g=10, 51 evaluated, 50 expanded
[t=0.0232686s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0232779s, 26916 KB] g=10, 60 evaluated, 59 expanded
[t=0.0237652s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0237751s, 26916 KB] g=12, 77 evaluated, 76 expanded
[t=0.0239517s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0239606s, 26916 KB] g=14, 83 evaluated, 82 expanded
[t=0.0243641s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0243849s, 26916 KB] g=14, 94 evaluated, 93 expanded
[t=0.0249948s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0250049s, 26916 KB] g=16, 115 evaluated, 114 expanded
[t=0.0251785s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0251871s, 26916 KB] g=17, 121 evaluated, 120 expanded
[t=0.0259457s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0259603s, 26916 KB] g=20, 146 evaluated, 145 expanded
[t=0.0270186s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0270345s, 26916 KB] g=22, 181 evaluated, 180 expanded
[t=0.0272587s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0272694s, 26916 KB] g=20, 188 evaluated, 187 expanded
[t=0.0275088s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.027519s, 26916 KB] g=23, 196 evaluated, 195 expanded
[t=0.0275895s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0275994s, 26916 KB] g=24, 198 evaluated, 197 expanded
[t=0.0277359s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0277472s, 26916 KB] g=22, 202 evaluated, 201 expanded
[t=0.0281654s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0281826s, 26916 KB] g=24, 216 evaluated, 215 expanded
[t=0.028431s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0284485s, 26916 KB] g=26, 224 evaluated, 223 expanded
[t=0.0291295s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0291517s, 26916 KB] g=28, 247 evaluated, 246 expanded
[t=0.030047s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0300702s, 26916 KB] g=30, 274 evaluated, 273 expanded
[t=0.0303898s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0304047s, 26916 KB] g=32, 285 evaluated, 284 expanded
[t=0.0308575s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0308867s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0308957s, 26916 KB] g=34, 301 evaluated, 300 expanded
[t=0.030938s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0309474s, 26916 KB] g=35, 302 evaluated, 301 expanded
[t=0.0313293s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0313428s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0313515s, 26916 KB] g=36, 315 evaluated, 314 expanded
[t=0.0313919s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0314026s, 26916 KB] g=37, 316 evaluated, 315 expanded
[t=0.0317322s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0317485s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0317958s, 26916 KB] g=38, 327 evaluated, 326 expanded
[t=0.0318565s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0319564s, 26916 KB] g=39, 328 evaluated, 327 expanded
[t=0.0323746s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0323894s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0324024s, 26916 KB] g=40, 340 evaluated, 339 expanded
[t=0.032451s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0324614s, 26916 KB] g=41, 341 evaluated, 340 expanded
[t=0.0327867s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0328026s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0328131s, 26916 KB] g=42, 351 evaluated, 350 expanded
[t=0.0328594s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.032869s, 26916 KB] g=43, 352 evaluated, 351 expanded
[t=0.0331364s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0331517s, 26916 KB] g=46, 361 evaluated, 360 expanded
[t=0.0333049s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.033315s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0333248s, 26916 KB] g=48, 366 evaluated, 365 expanded
[t=0.0485635s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0485987s, 26916 KB] g=90, 909 evaluated, 908 expanded
[t=0.0490335s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0490443s, 26916 KB] g=93, 925 evaluated, 924 expanded
[t=0.049211s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0492245s, 26916 KB] g=95, 928 evaluated, 927 expanded
[t=0.0492763s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0492856s, 26916 KB] g=96, 929 evaluated, 928 expanded
[t=0.0494059s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0494155s, 26916 KB] g=97, 933 evaluated, 932 expanded
[t=0.0494529s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0494622s, 26916 KB] g=98, 934 evaluated, 933 expanded
[t=0.049717s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0497278s, 26916 KB] g=98, 943 evaluated, 942 expanded
[t=0.0498175s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0498273s, 26916 KB] g=99, 946 evaluated, 945 expanded
[t=0.0498642s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0498733s, 26916 KB] g=100, 947 evaluated, 946 expanded
[t=0.050096s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0501056s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0501144s, 26916 KB] g=100, 955 evaluated, 954 expanded
[t=0.050202s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0502115s, 26916 KB] g=101, 958 evaluated, 957 expanded
[t=0.0502473s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0502651s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.050274s, 26916 KB] g=102, 959 evaluated, 958 expanded
[t=0.0509315s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0509432s, 26916 KB] g=106, 984 evaluated, 983 expanded
[t=0.0511357s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0511457s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0511548s, 26916 KB] g=108, 989 evaluated, 988 expanded
[t=0.0516902s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.051747s, 26916 KB] g=112, 1005 evaluated, 1004 expanded
[t=0.0518831s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0518957s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0519042s, 26916 KB] g=114, 1009 evaluated, 1008 expanded
[t=0.0521218s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0521354s, 26916 KB] g=118, 1018 evaluated, 1017 expanded
[t=0.052215s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0522263s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.052235s, 26916 KB] g=120, 1021 evaluated, 1020 expanded
[t=0.0525682s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0525823s, 26916 KB] g=132, 1037 evaluated, 1036 expanded
[t=0.0526555s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0526646s, 26916 KB] g=136, 1041 evaluated, 1040 expanded
[t=0.0526834s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.052694s, 26916 KB] g=137, 1042 evaluated, 1041 expanded
[t=0.05271s, 26916 KB] Solution found!
[t=0.0527242s, 26916 KB] Actual search time: 0.0315552s
unstack b6 b21 (1)
put-down b6 (1)
unstack b21 b14 (1)
put-down b21 (1)
unstack b1 b22 (1)
put-down b1 (1)
unstack b22 b5 (1)
put-down b22 (1)
unstack b10 b8 (1)
put-down b10 (1)
unstack b8 b19 (1)
put-down b8 (1)
unstack b19 b3 (1)
put-down b19 (1)
unstack b3 b13 (1)
put-down b3 (1)
unstack b13 b11 (1)
put-down b13 (1)
unstack b11 b2 (1)
put-down b11 (1)
unstack b4 b23 (1)
stack b4 b1 (1)
unstack b23 b12 (1)
stack b23 b6 (1)
unstack b12 b16 (1)
stack b12 b24 (1)
pick-up b20 (1)
stack b20 b4 (1)
pick-up b13 (1)
stack b13 b19 (1)
pick-up b10 (1)
stack b10 b16 (1)
pick-up b11 (1)
stack b11 b12 (1)
pick-up b2 (1)
stack b2 b11 (1)
pick-up b21 (1)
stack b21 b10 (1)
unstack b5 b17 (1)
stack b5 b2 (1)
pick-up b17 (1)
stack b17 b5 (1)
unstack b13 b19 (1)
put-down b13 (1)
pick-up b19 (1)
stack b19 b17 (1)
pick-up b13 (1)
stack b13 b19 (1)
unstack b20 b4 (1)
put-down b20 (1)
unstack b4 b1 (1)
put-down b4 (1)
pick-up b20 (1)
stack b20 b4 (1)
unstack b13 b19 (1)
put-down b13 (1)
unstack b19 b17 (1)
put-down b19 (1)
pick-up b13 (1)
stack b13 b19 (1)
unstack b17 b5 (1)
put-down b17 (1)
unstack b5 b2 (1)
put-down b5 (1)
pick-up b17 (1)
stack b17 b5 (1)
unstack b13 b19 (1)
put-down b13 (1)
pick-up b19 (1)
stack b19 b17 (1)
pick-up b13 (1)
stack b13 b19 (1)
unstack b2 b11 (1)
put-down b2 (1)
unstack b11 b12 (1)
put-down b11 (1)
pick-up b2 (1)
stack b2 b11 (1)
unstack b12 b24 (1)
put-down b12 (1)
unstack b24 b15 (1)
put-down b24 (1)
unstack b15 b18 (1)
put-down b15 (1)
unstack b18 b7 (1)
put-down b18 (1)
pick-up b14 (1)
stack b14 b7 (1)
pick-up b12 (1)
stack b12 b24 (1)
unstack b14 b7 (1)
put-down b14 (1)
unstack b7 b9 (1)
put-down b7 (1)
pick-up b1 (1)
stack b1 b9 (1)
pick-up b14 (1)
stack b14 b7 (1)
pick-up b3 (1)
stack b3 b18 (1)
pick-up b15 (1)
stack b15 b3 (1)
unstack b12 b24 (1)
put-down b12 (1)
pick-up b24 (1)
stack b24 b15 (1)
pick-up b12 (1)
stack b12 b24 (1)
unstack b2 b11 (1)
put-down b2 (1)
pick-up b11 (1)
stack b11 b12 (1)
pick-up b2 (1)
stack b2 b11 (1)
unstack b20 b4 (1)
put-down b20 (1)
pick-up b4 (1)
stack b4 b1 (1)
pick-up b20 (1)
stack b20 b4 (1)
unstack b13 b19 (1)
put-down b13 (1)
unstack b19 b17 (1)
put-down b19 (1)
pick-up b13 (1)
stack b13 b19 (1)
unstack b17 b5 (1)
put-down b17 (1)
pick-up b5 (1)
stack b5 b2 (1)
pick-up b17 (1)
stack b17 b5 (1)
unstack b13 b19 (1)
put-down b13 (1)
pick-up b19 (1)
stack b19 b17 (1)
pick-up b13 (1)
stack b13 b19 (1)
[t=0.0527347s, 26916 KB] Plan length: 138 step(s).
[t=0.0527347s, 26916 KB] Plan cost: 138
[t=0.0527347s, 26916 KB] Expanded 1042 state(s).
[t=0.0527347s, 26916 KB] Reopened 0 state(s).
[t=0.0527347s, 26916 KB] Evaluated 1043 state(s).
[t=0.0527347s, 26916 KB] Evaluations: 2086
[t=0.0527347s, 26916 KB] Generated 12245 state(s).
[t=0.0527347s, 26916 KB] Dead ends: 0 state(s).
[t=0.0527347s, 26916 KB] Number of registered states: 1043
[t=0.0527347s, 26916 KB] Int hash set load factor: 1043/2048 = 0.509277
[t=0.0527347s, 26916 KB] Int hash set resizes: 11
[t=0.0527347s, 26916 KB] Search time: 0.0316029s
[t=0.0527347s, 26916 KB] Total time: 0.0527347s
Solution found.
Peak memory: 26916 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.21s
