INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_21/bws_problem_21_66.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.009s wall-clock]
1472 relevant atoms
987 auxiliary atoms
2459 final queue length
4268 total queue pushes
Completing instantiation... [0.010s CPU, 0.016s wall-clock]
Instantiating: [0.020s CPU, 0.026s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.010s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
22 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.006s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.022s wall-clock]
1302 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
42 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.011s wall-clock]
Reordering and filtering variables...
43 of 43 variables necessary.
22 of 43 mutex groups necessary.
882 of 882 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.005s wall-clock]
Translator variables: 43
Translator derived variables: 0
Translator facts: 506
Translator goal facts: 13
Translator mutex groups: 22
Translator total mutex groups size: 484
Translator operators: 882
Translator axioms: 0
Translator task size: 7598
Translator peak memory: 36456 KB
Writing output... [0.000s CPU, 0.004s wall-clock]
Done! [0.070s CPU, 0.079s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=5.5029e-05s, 24488 KB] reading input...
[t=0.00269131s, 25268 KB] done reading input!
[t=0.00378677s, 25664 KB] Initializing landmark count heuristic...
[t=0.00382277s, 25664 KB] Generating landmark graph...
[t=0.00387648s, 25664 KB] Building a landmark graph with reasonable orders.
[t=0.0039294s, 25664 KB] Initializing Exploration...
[t=0.00417783s, 25852 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0120601s, 26248 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0121787s, 26248 KB] Landmarks generation time: 0.0083035s
[t=0.0121932s, 26248 KB] Discovered 80 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.012216s, 26248 KB] 336 edges
[t=0.0122426s, 26248 KB] approx. reasonable orders
[t=0.013989s, 26248 KB] approx. obedient reasonable orders
[t=0.0140933s, 26248 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0141058s, 26248 KB] Landmarks generation time: 0.0102805s
[t=0.0141149s, 26248 KB] Discovered 80 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0141231s, 26248 KB] 381 edges
[t=0.0141315s, 26248 KB] Landmark graph generation time: 0.0103157s
[t=0.01414s, 26248 KB] Landmark graph contains 80 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0141491s, 26248 KB] Landmark graph contains 381 orderings.
[t=0.0145809s, 26248 KB] Simplifying 3486 unary operators... done! [2646 unary operators]
[t=0.0156475s, 26380 KB] time to simplify: 0.00114452s
[t=0.0157854s, 26380 KB] Initializing additive heuristic...
[t=0.0158026s, 26380 KB] Initializing FF heuristic...
[t=0.015911s, 26380 KB] Building successor generator...done!
[t=0.0162566s, 26380 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0162757s, 26380 KB] time for successor generation creation: 0.000283243s
[t=0.0163135s, 26380 KB] Variables: 43
[t=0.0163264s, 26380 KB] FactPairs: 506
[t=0.0163403s, 26380 KB] Bytes per state: 16
[t=0.0166434s, 26380 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0167019s, 26380 KB] 38 initial landmarks, 13 goal landmarks
[t=0.0168024s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0168199s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0168336s, 26380 KB] g=0, 1 evaluated, 0 expanded
[t=0.0168698s, 26380 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0168842s, 26380 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0170298s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0170449s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0170549s, 26380 KB] g=2, 5 evaluated, 4 expanded
[t=0.0171943s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0172064s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0172152s, 26380 KB] g=4, 9 evaluated, 8 expanded
[t=0.0173212s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0173304s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0173391s, 26380 KB] g=6, 13 evaluated, 12 expanded
[t=0.017421s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0174309s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0174391s, 26380 KB] g=8, 16 evaluated, 15 expanded
[t=0.017544s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0175529s, 26380 KB] g=10, 20 evaluated, 19 expanded
[t=0.0176102s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0176191s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0176275s, 26380 KB] g=10, 22 evaluated, 21 expanded
[t=0.0176827s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0176938s, 26380 KB] g=12, 24 evaluated, 23 expanded
[t=0.0177743s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0177958s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0178056s, 26380 KB] g=14, 27 evaluated, 26 expanded
[t=0.0179073s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0179163s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0179243s, 26380 KB] g=16, 31 evaluated, 30 expanded
[t=0.0180094s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0180181s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0180278s, 26380 KB] g=18, 34 evaluated, 33 expanded
[t=0.0181444s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0181586s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0181669s, 26380 KB] g=20, 38 evaluated, 37 expanded
[t=0.0182252s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0182349s, 26380 KB] g=21, 40 evaluated, 39 expanded
[t=0.0182692s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0182781s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0182861s, 26380 KB] g=22, 41 evaluated, 40 expanded
[t=0.0183439s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0183526s, 26380 KB] g=23, 43 evaluated, 42 expanded
[t=0.0183856s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0183942s, 26380 KB] g=24, 44 evaluated, 43 expanded
[t=0.018544s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0185534s, 26380 KB] g=25, 50 evaluated, 49 expanded
[t=0.0187265s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0187355s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0187446s, 26380 KB] g=28, 57 evaluated, 56 expanded
[t=0.0188228s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.018832s, 26380 KB] g=29, 60 evaluated, 59 expanded
[t=0.0189111s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0189205s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0189293s, 26380 KB] g=30, 63 evaluated, 62 expanded
[t=0.0189888s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0189974s, 26380 KB] g=31, 65 evaluated, 64 expanded
[t=0.0191446s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0191541s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0191622s, 26380 KB] g=34, 71 evaluated, 70 expanded
[t=0.0192762s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0192923s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0193049s, 26380 KB] g=36, 75 evaluated, 74 expanded
[t=0.0202963s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0203222s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0203324s, 26380 KB] g=52, 109 evaluated, 108 expanded
[t=0.0204447s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0204549s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.020463s, 26380 KB] g=54, 114 evaluated, 113 expanded
[t=0.0205301s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.020539s, 26380 KB] g=55, 117 evaluated, 116 expanded
[t=0.020566s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0205748s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0205828s, 26380 KB] g=56, 118 evaluated, 117 expanded
[t=0.0207489s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0207583s, 26380 KB] g=60, 127 evaluated, 126 expanded
[t=0.0208252s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0208342s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.020842s, 26380 KB] g=62, 130 evaluated, 129 expanded
[t=0.0209105s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0209192s, 26380 KB] g=66, 134 evaluated, 133 expanded
[t=0.0209367s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0209452s, 26380 KB] g=67, 135 evaluated, 134 expanded
[t=0.0209602s, 26380 KB] Solution found!
[t=0.0209709s, 26380 KB] Actual search time: 0.00425801s
unstack b10 b2 (1)
put-down b10 (1)
unstack b16 b9 (1)
put-down b16 (1)
unstack b9 b12 (1)
stack b9 b2 (1)
unstack b3 b11 (1)
put-down b3 (1)
unstack b12 b6 (1)
stack b12 b9 (1)
unstack b11 b4 (1)
put-down b11 (1)
unstack b4 b8 (1)
put-down b4 (1)
unstack b8 b14 (1)
stack b8 b12 (1)
unstack b14 b7 (1)
stack b14 b10 (1)
unstack b7 b17 (1)
stack b7 b6 (1)
unstack b17 b21 (1)
stack b17 b7 (1)
unstack b21 b19 (1)
stack b21 b11 (1)
unstack b19 b1 (1)
put-down b19 (1)
unstack b1 b13 (1)
stack b1 b3 (1)
unstack b13 b18 (1)
stack b13 b8 (1)
unstack b21 b11 (1)
put-down b21 (1)
pick-up b11 (1)
stack b11 b1 (1)
pick-up b21 (1)
stack b21 b11 (1)
unstack b13 b8 (1)
put-down b13 (1)
unstack b8 b12 (1)
put-down b8 (1)
pick-up b13 (1)
stack b13 b8 (1)
unstack b12 b9 (1)
put-down b12 (1)
unstack b9 b2 (1)
put-down b9 (1)
unstack b2 b20 (1)
put-down b2 (1)
pick-up b12 (1)
stack b12 b9 (1)
unstack b20 b15 (1)
stack b20 b14 (1)
unstack b15 b5 (1)
stack b15 b20 (1)
pick-up b19 (1)
stack b19 b15 (1)
unstack b12 b9 (1)
put-down b12 (1)
pick-up b9 (1)
stack b9 b2 (1)
pick-up b12 (1)
stack b12 b9 (1)
unstack b13 b8 (1)
put-down b13 (1)
pick-up b8 (1)
stack b8 b12 (1)
pick-up b13 (1)
stack b13 b8 (1)
[t=0.0209798s, 26380 KB] Plan length: 68 step(s).
[t=0.0209798s, 26380 KB] Plan cost: 68
[t=0.0209798s, 26380 KB] Expanded 135 state(s).
[t=0.0209798s, 26380 KB] Reopened 0 state(s).
[t=0.0209798s, 26380 KB] Evaluated 136 state(s).
[t=0.0209798s, 26380 KB] Evaluations: 272
[t=0.0209798s, 26380 KB] Generated 1247 state(s).
[t=0.0209798s, 26380 KB] Dead ends: 0 state(s).
[t=0.0209798s, 26380 KB] Number of registered states: 136
[t=0.0209798s, 26380 KB] Int hash set load factor: 136/256 = 0.53125
[t=0.0209798s, 26380 KB] Int hash set resizes: 8
[t=0.0209798s, 26380 KB] Search time: 0.0043379s
[t=0.0209798s, 26380 KB] Total time: 0.0209798s
Solution found.
Peak memory: 26380 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.14s
