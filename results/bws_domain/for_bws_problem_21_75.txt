INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_21/bws_problem_21_75.pddl --sas-file output.sas
Parsing...
Parsing: [0.010s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.009s wall-clock]
1472 relevant atoms
987 auxiliary atoms
2459 final queue length
4268 total queue pushes
Completing instantiation... [0.010s CPU, 0.015s wall-clock]
Instantiating: [0.020s CPU, 0.025s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
22 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.006s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.023s wall-clock]
1302 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
42 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.010s wall-clock]
Reordering and filtering variables...
43 of 43 variables necessary.
22 of 43 mutex groups necessary.
882 of 882 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 43
Translator derived variables: 0
Translator facts: 506
Translator goal facts: 18
Translator mutex groups: 22
Translator total mutex groups size: 484
Translator operators: 882
Translator axioms: 0
Translator task size: 7603
Translator peak memory: 36452 KB
Writing output... [0.000s CPU, 0.004s wall-clock]
Done! [0.080s CPU, 0.078s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.8795e-05s, 24488 KB] reading input...
[t=0.00268562s, 25268 KB] done reading input!
[t=0.00375509s, 25664 KB] Initializing landmark count heuristic...
[t=0.00381864s, 25664 KB] Generating landmark graph...
[t=0.00389656s, 25664 KB] Building a landmark graph with reasonable orders.
[t=0.00396778s, 25664 KB] Initializing Exploration...
[t=0.00428881s, 25852 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0143469s, 26380 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0144215s, 26380 KB] Landmarks generation time: 0.0105347s
[t=0.0144502s, 26380 KB] Discovered 95 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0144661s, 26380 KB] 510 edges
[t=0.0144759s, 26380 KB] approx. reasonable orders
[t=0.0165924s, 26380 KB] approx. obedient reasonable orders
[t=0.0166237s, 26380 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.016638s, 26380 KB] Landmarks generation time: 0.0128211s
[t=0.0166536s, 26380 KB] Discovered 95 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0166621s, 26380 KB] 556 edges
[t=0.0166721s, 26380 KB] Landmark graph generation time: 0.0128613s
[t=0.0166816s, 26380 KB] Landmark graph contains 95 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0166901s, 26380 KB] Landmark graph contains 556 orderings.
[t=0.0170171s, 26380 KB] Simplifying 3486 unary operators... done! [2646 unary operators]
[t=0.0178747s, 26380 KB] time to simplify: 0.000926557s
[t=0.017999s, 26380 KB] Initializing additive heuristic...
[t=0.0180131s, 26380 KB] Initializing FF heuristic...
[t=0.0180659s, 26380 KB] Building successor generator...done!
[t=0.018259s, 26380 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0182691s, 26380 KB] time for successor generation creation: 0.000157702s
[t=0.018282s, 26380 KB] Variables: 43
[t=0.0182906s, 26380 KB] FactPairs: 506
[t=0.0182989s, 26380 KB] Bytes per state: 16
[t=0.0183898s, 26380 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0184244s, 26380 KB] 43 initial landmarks, 18 goal landmarks
[t=0.0184751s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.018485s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.018494s, 26380 KB] g=0, 1 evaluated, 0 expanded
[t=0.0185068s, 26380 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0185159s, 26380 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0186596s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0186712s, 26380 KB] g=2, 5 evaluated, 4 expanded
[t=0.0188073s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0188169s, 26380 KB] g=3, 10 evaluated, 9 expanded
[t=0.0188767s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0188859s, 26380 KB] g=4, 12 evaluated, 11 expanded
[t=0.0191122s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0191215s, 26380 KB] g=6, 21 evaluated, 20 expanded
[t=0.0191552s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0191643s, 26380 KB] g=7, 22 evaluated, 21 expanded
[t=0.0191987s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0192076s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0192159s, 26380 KB] g=6, 23 evaluated, 22 expanded
[t=0.0193232s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0193323s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0193405s, 26380 KB] g=8, 27 evaluated, 26 expanded
[t=0.0194723s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0194821s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0194907s, 26380 KB] g=10, 32 evaluated, 31 expanded
[t=0.019625s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0196343s, 26380 KB] g=12, 37 evaluated, 36 expanded
[t=0.0196939s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0197068s, 26380 KB] g=12, 39 evaluated, 38 expanded
[t=0.0198369s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.019846s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0198543s, 26380 KB] g=14, 44 evaluated, 43 expanded
[t=0.0199597s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0199689s, 26380 KB] g=16, 48 evaluated, 47 expanded
[t=0.0201225s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0201319s, 26380 KB] g=18, 54 evaluated, 53 expanded
[t=0.0201665s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0201757s, 26380 KB] g=19, 55 evaluated, 54 expanded
[t=0.0205532s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0205631s, 26380 KB] g=22, 70 evaluated, 69 expanded
[t=0.0209125s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.020923s, 26380 KB] g=25, 84 evaluated, 83 expanded
[t=0.021214s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0212239s, 26380 KB] g=26, 96 evaluated, 95 expanded
[t=0.0214237s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0214333s, 26380 KB] g=28, 104 evaluated, 103 expanded
[t=0.021635s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0216444s, 26380 KB] g=28, 112 evaluated, 111 expanded
[t=0.0219824s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0219929s, 26380 KB] g=30, 126 evaluated, 125 expanded
[t=0.0220283s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0220374s, 26380 KB] g=30, 127 evaluated, 126 expanded
[t=0.0224937s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0225054s, 26380 KB] g=32, 145 evaluated, 144 expanded
[t=0.0225426s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0225517s, 26380 KB] g=33, 146 evaluated, 145 expanded
[t=0.0226125s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0226263s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0226344s, 26380 KB] g=34, 148 evaluated, 147 expanded
[t=0.0229143s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0229242s, 26380 KB] g=36, 159 evaluated, 158 expanded
[t=0.0230358s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0230455s, 26380 KB] g=36, 163 evaluated, 162 expanded
[t=0.0233704s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0233805s, 26380 KB] g=38, 176 evaluated, 175 expanded
[t=0.0237312s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0237411s, 26380 KB] g=38, 190 evaluated, 189 expanded
[t=0.023778s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0237871s, 26380 KB] g=40, 191 evaluated, 190 expanded
[t=0.0241565s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0241693s, 26380 KB] g=42, 206 evaluated, 205 expanded
[t=0.0244463s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0244557s, 26380 KB] g=44, 217 evaluated, 216 expanded
[t=0.0244904s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0244995s, 26380 KB] g=45, 218 evaluated, 217 expanded
[t=0.0247261s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0247354s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.024744s, 26380 KB] g=46, 227 evaluated, 226 expanded
[t=0.024778s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.024787s, 26380 KB] g=47, 228 evaluated, 227 expanded
[t=0.0250088s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0250181s, 26380 KB] g=48, 237 evaluated, 236 expanded
[t=0.0250749s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0250844s, 26380 KB] g=49, 239 evaluated, 238 expanded
[t=0.02524s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0252491s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0252573s, 26380 KB] g=50, 245 evaluated, 244 expanded
[t=0.0252908s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0252999s, 26380 KB] g=51, 246 evaluated, 245 expanded
[t=0.0255455s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0255547s, 26380 KB] g=54, 256 evaluated, 255 expanded
[t=0.0258124s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0258221s, 26380 KB] g=56, 266 evaluated, 265 expanded
[t=0.0259462s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.025956s, 26380 KB] g=56, 271 evaluated, 270 expanded
[t=0.0262235s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0262324s, 26380 KB] g=58, 282 evaluated, 281 expanded
[t=0.0265405s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.02655s, 26380 KB] g=60, 295 evaluated, 294 expanded
[t=0.0268883s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0268991s, 26380 KB] g=62, 309 evaluated, 308 expanded
[t=0.0271152s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0271247s, 26380 KB] g=64, 318 evaluated, 317 expanded
[t=0.0272023s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0272112s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0272194s, 26380 KB] g=66, 321 evaluated, 320 expanded
[t=0.0274111s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0274204s, 26380 KB] g=71, 329 evaluated, 328 expanded
[t=0.0274528s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0274618s, 26380 KB] g=72, 330 evaluated, 329 expanded
[t=0.0275615s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0275731s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0275818s, 26380 KB] g=74, 334 evaluated, 333 expanded
[t=0.0276364s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0276456s, 26380 KB] g=74, 336 evaluated, 335 expanded
[t=0.0277217s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0277308s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.027739s, 26380 KB] g=76, 339 evaluated, 338 expanded
[t=0.0476342s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0477124s, 26380 KB] g=124, 1234 evaluated, 1233 expanded
[t=0.0478172s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0478282s, 26380 KB] g=126, 1238 evaluated, 1237 expanded
[t=0.0483593s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0483716s, 26380 KB] g=134, 1267 evaluated, 1266 expanded
[t=0.0484317s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0484436s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0484521s, 26380 KB] g=136, 1270 evaluated, 1269 expanded
[t=0.0491248s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0491357s, 26380 KB] g=152, 1313 evaluated, 1312 expanded
[t=0.049271s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0492802s, 26380 KB] g=160, 1323 evaluated, 1322 expanded
[t=0.0493346s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0493448s, 26380 KB] g=164, 1327 evaluated, 1326 expanded
[t=0.049362s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0493711s, 26380 KB] g=165, 1328 evaluated, 1327 expanded
[t=0.0493856s, 26380 KB] Solution found!
[t=0.0493984s, 26380 KB] Actual search time: 0.0309723s
unstack b18 b10 (1)
put-down b18 (1)
unstack b10 b7 (1)
put-down b10 (1)
unstack b7 b6 (1)
stack b7 b18 (1)
unstack b6 b4 (1)
put-down b6 (1)
unstack b4 b14 (1)
put-down b4 (1)
unstack b14 b12 (1)
stack b14 b2 (1)
unstack b12 b5 (1)
stack b12 b7 (1)
unstack b14 b2 (1)
put-down b14 (1)
unstack b2 b11 (1)
put-down b2 (1)
unstack b11 b17 (1)
stack b11 b14 (1)
unstack b17 b16 (1)
put-down b17 (1)
unstack b16 b13 (1)
put-down b16 (1)
unstack b11 b14 (1)
put-down b11 (1)
unstack b13 b20 (1)
put-down b13 (1)
unstack b20 b9 (1)
stack b20 b12 (1)
unstack b9 b1 (1)
stack b9 b4 (1)
unstack b1 b21 (1)
stack b1 b10 (1)
pick-up b11 (1)
stack b11 b14 (1)
pick-up b13 (1)
stack b13 b17 (1)
pick-up b16 (1)
stack b16 b20 (1)
pick-up b2 (1)
stack b2 b13 (1)
unstack b21 b3 (1)
stack b21 b16 (1)
unstack b3 b15 (1)
stack b3 b21 (1)
pick-up b15 (1)
stack b15 b5 (1)
pick-up b8 (1)
stack b8 b9 (1)
unstack b11 b14 (1)
put-down b11 (1)
unstack b2 b13 (1)
put-down b2 (1)
unstack b13 b17 (1)
put-down b13 (1)
pick-up b17 (1)
stack b17 b3 (1)
pick-up b13 (1)
stack b13 b17 (1)
pick-up b2 (1)
stack b2 b13 (1)
pick-up b14 (1)
stack b14 b2 (1)
pick-up b11 (1)
stack b11 b14 (1)
unstack b15 b5 (1)
put-down b15 (1)
unstack b5 b19 (1)
put-down b5 (1)
pick-up b19 (1)
stack b19 b8 (1)
pick-up b5 (1)
stack b5 b19 (1)
pick-up b15 (1)
stack b15 b5 (1)
unstack b11 b14 (1)
put-down b11 (1)
unstack b14 b2 (1)
put-down b14 (1)
pick-up b11 (1)
stack b11 b14 (1)
unstack b2 b13 (1)
put-down b2 (1)
unstack b13 b17 (1)
put-down b13 (1)
unstack b17 b3 (1)
put-down b17 (1)
pick-up b13 (1)
stack b13 b17 (1)
pick-up b2 (1)
stack b2 b13 (1)
unstack b11 b14 (1)
put-down b11 (1)
pick-up b14 (1)
stack b14 b2 (1)
pick-up b11 (1)
stack b11 b14 (1)
unstack b3 b21 (1)
put-down b3 (1)
unstack b21 b16 (1)
put-down b21 (1)
unstack b16 b20 (1)
put-down b16 (1)
pick-up b21 (1)
stack b21 b16 (1)
pick-up b3 (1)
stack b3 b21 (1)
unstack b20 b12 (1)
put-down b20 (1)
unstack b12 b7 (1)
put-down b12 (1)
pick-up b20 (1)
stack b20 b12 (1)
unstack b7 b18 (1)
put-down b7 (1)
pick-up b18 (1)
stack b18 b15 (1)
pick-up b7 (1)
stack b7 b18 (1)
unstack b20 b12 (1)
put-down b20 (1)
pick-up b12 (1)
stack b12 b7 (1)
pick-up b20 (1)
stack b20 b12 (1)
unstack b3 b21 (1)
put-down b3 (1)
unstack b21 b16 (1)
put-down b21 (1)
pick-up b16 (1)
stack b16 b20 (1)
pick-up b21 (1)
stack b21 b16 (1)
pick-up b3 (1)
stack b3 b21 (1)
unstack b11 b14 (1)
put-down b11 (1)
unstack b14 b2 (1)
put-down b14 (1)
unstack b2 b13 (1)
put-down b2 (1)
pick-up b14 (1)
stack b14 b2 (1)
pick-up b11 (1)
stack b11 b14 (1)
unstack b13 b17 (1)
put-down b13 (1)
pick-up b17 (1)
stack b17 b3 (1)
pick-up b13 (1)
stack b13 b17 (1)
unstack b11 b14 (1)
put-down b11 (1)
unstack b14 b2 (1)
put-down b14 (1)
pick-up b11 (1)
stack b11 b14 (1)
pick-up b2 (1)
stack b2 b13 (1)
unstack b11 b14 (1)
put-down b11 (1)
pick-up b14 (1)
stack b14 b2 (1)
pick-up b11 (1)
stack b11 b14 (1)
[t=0.0494093s, 26380 KB] Plan length: 166 step(s).
[t=0.0494093s, 26380 KB] Plan cost: 166
[t=0.0494093s, 26380 KB] Expanded 1328 state(s).
[t=0.0494093s, 26380 KB] Reopened 0 state(s).
[t=0.0494093s, 26380 KB] Evaluated 1329 state(s).
[t=0.0494093s, 26380 KB] Evaluations: 2658
[t=0.0494093s, 26380 KB] Generated 11020 state(s).
[t=0.0494093s, 26380 KB] Dead ends: 0 state(s).
[t=0.0494093s, 26380 KB] Number of registered states: 1329
[t=0.0494093s, 26380 KB] Int hash set load factor: 1329/2048 = 0.648926
[t=0.0494093s, 26380 KB] Int hash set resizes: 11
[t=0.0494093s, 26380 KB] Search time: 0.0310199s
[t=0.0494093s, 26380 KB] Total time: 0.0494093s
Solution found.
Peak memory: 26380 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.18s
