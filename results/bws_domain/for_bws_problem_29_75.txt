INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_29/bws_problem_29_75.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.030s CPU, 0.019s wall-clock]
2728 relevant atoms
1827 auxiliary atoms
4555 final queue length
7981 total queue pushes
Completing instantiation... [0.030s CPU, 0.028s wall-clock]
Instantiating: [0.060s CPU, 0.049s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.002s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.001s wall-clock]
Choosing groups...
30 uncovered facts
Choosing groups: [0.010s CPU, 0.002s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.010s CPU, 0.012s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.001s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.002s wall-clock]
Translating task: [0.040s CPU, 0.048s wall-clock]
2494 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
58 propositions removed
Detecting unreachable propositions: [0.030s CPU, 0.021s wall-clock]
Reordering and filtering variables...
59 of 59 variables necessary.
30 of 59 mutex groups necessary.
1682 of 1682 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.012s wall-clock]
Translator variables: 59
Translator derived variables: 0
Translator facts: 930
Translator goal facts: 25
Translator mutex groups: 30
Translator total mutex groups size: 900
Translator operators: 1682
Translator axioms: 0
Translator task size: 14442
Translator peak memory: 40824 KB
Writing output... [0.010s CPU, 0.009s wall-clock]
Done! [0.160s CPU, 0.157s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.338e-05s, 24488 KB] reading input...
[t=0.00500018s, 26220 KB] done reading input!
[t=0.00602084s, 26616 KB] Initializing landmark count heuristic...
[t=0.00605551s, 26616 KB] Generating landmark graph...
[t=0.00614169s, 26748 KB] Building a landmark graph with reasonable orders.
[t=0.00623208s, 26748 KB] Initializing Exploration...
[t=0.0067136s, 27200 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0323643s, 28256 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0325087s, 28256 KB] Landmarks generation time: 0.0263856s
[t=0.0325417s, 28256 KB] Discovered 128 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0325585s, 28256 KB] 1074 edges
[t=0.032568s, 28256 KB] approx. reasonable orders
[t=0.0328963s, 28256 KB] approx. obedient reasonable orders
[t=0.0329418s, 28256 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0329629s, 28256 KB] Landmarks generation time: 0.0269051s
[t=0.0329728s, 28256 KB] Discovered 128 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0329811s, 28256 KB] 1077 edges
[t=0.0329895s, 28256 KB] Landmark graph generation time: 0.0269411s
[t=0.0329981s, 28256 KB] Landmark graph contains 128 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0330067s, 28256 KB] Landmark graph contains 1077 orderings.
[t=0.0337063s, 28280 KB] Simplifying 6670 unary operators... done! [5046 unary operators]
[t=0.0352761s, 28280 KB] time to simplify: 0.00169285s
[t=0.0355239s, 28280 KB] Initializing additive heuristic...
[t=0.0355487s, 28280 KB] Initializing FF heuristic...
[t=0.0356384s, 28280 KB] Building successor generator...done!
[t=0.0359632s, 28280 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0359737s, 28280 KB] time for successor generation creation: 0.00027876s
[t=0.035996s, 28280 KB] Variables: 59
[t=0.0360089s, 28280 KB] FactPairs: 930
[t=0.0360183s, 28280 KB] Bytes per state: 24
[t=0.0363394s, 28280 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0364032s, 28280 KB] 57 initial landmarks, 25 goal landmarks
[t=0.0366645s, 28280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 71
[t=0.0366903s, 28280 KB] New best heuristic value for ff(transform = adapt_costs(one)): 51
[t=0.0367021s, 28280 KB] g=0, 1 evaluated, 0 expanded
[t=0.0367288s, 28280 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 71
[t=0.0367412s, 28280 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 51
[t=0.0370183s, 28280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 70
[t=0.0370328s, 28280 KB] New best heuristic value for ff(transform = adapt_costs(one)): 50
[t=0.0370414s, 28280 KB] g=2, 6 evaluated, 5 expanded
[t=0.0371371s, 28280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 69
[t=0.0371469s, 28280 KB] g=3, 8 evaluated, 7 expanded
[t=0.0374247s, 28280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 68
[t=0.0374458s, 28280 KB] g=6, 14 evaluated, 13 expanded
[t=0.0377644s, 28280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 67
[t=0.0377804s, 28280 KB] New best heuristic value for ff(transform = adapt_costs(one)): 49
[t=0.0377907s, 28280 KB] g=8, 21 evaluated, 20 expanded
[t=0.037954s, 28280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 66
[t=0.0379658s, 28280 KB] g=10, 25 evaluated, 24 expanded
[t=0.0381727s, 28280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 65
[t=0.0381831s, 28280 KB] New best heuristic value for ff(transform = adapt_costs(one)): 48
[t=0.0381914s, 28280 KB] g=12, 30 evaluated, 29 expanded
[t=0.0384433s, 28280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 62
[t=0.038454s, 28280 KB] New best heuristic value for ff(transform = adapt_costs(one)): 46
[t=0.0384621s, 28280 KB] g=14, 36 evaluated, 35 expanded
[t=0.0387199s, 28280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 61
[t=0.0387371s, 28280 KB] g=16, 42 evaluated, 41 expanded
[t=0.038959s, 28280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 60
[t=0.0389692s, 28280 KB] g=17, 47 evaluated, 46 expanded
[t=0.0393159s, 28280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.0393339s, 28280 KB] g=20, 55 evaluated, 54 expanded
[t=0.0396627s, 28280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0396733s, 28280 KB] New best heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.0396815s, 28280 KB] g=22, 63 evaluated, 62 expanded
[t=0.0398942s, 28280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0399033s, 28280 KB] g=23, 68 evaluated, 67 expanded
[t=0.039956s, 28280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0399645s, 28280 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0399723s, 28280 KB] g=24, 69 evaluated, 68 expanded
[t=0.0403428s, 28280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0403552s, 28280 KB] g=26, 78 evaluated, 77 expanded
[t=0.0405514s, 28280 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0405696s, 28280 KB] g=26, 82 evaluated, 81 expanded
[t=0.0413762s, 28280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0413964s, 28280 KB] g=29, 101 evaluated, 100 expanded
[t=0.0414939s, 28280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0415035s, 28280 KB] g=30, 103 evaluated, 102 expanded
[t=0.0422433s, 28280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0422582s, 28280 KB] g=32, 121 evaluated, 120 expanded
[t=0.0429972s, 28280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0430097s, 28280 KB] g=34, 139 evaluated, 138 expanded
[t=0.0435318s, 28280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0435427s, 28280 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0435531s, 28280 KB] g=36, 151 evaluated, 150 expanded
[t=0.0440102s, 28280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0440201s, 28280 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0440278s, 28280 KB] g=38, 161 evaluated, 160 expanded
[t=0.0443734s, 28280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0443952s, 28280 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0444031s, 28280 KB] g=40, 170 evaluated, 169 expanded
[t=0.0452758s, 28280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0452916s, 28280 KB] g=43, 191 evaluated, 190 expanded
[t=0.0453508s, 28280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0453599s, 28280 KB] g=44, 192 evaluated, 191 expanded
[t=0.0457626s, 28280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0457831s, 28280 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0457924s, 28280 KB] g=46, 201 evaluated, 200 expanded
[t=0.0461843s, 28280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0461949s, 28280 KB] g=48, 210 evaluated, 209 expanded
[t=0.0462474s, 28280 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0462563s, 28280 KB] g=48, 211 evaluated, 210 expanded
[t=0.0469234s, 28280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0469347s, 28280 KB] g=50, 228 evaluated, 227 expanded
[t=0.0472535s, 28280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0472683s, 28280 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0472769s, 28280 KB] g=52, 236 evaluated, 235 expanded
[t=0.0476589s, 28280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0476723s, 28280 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0476804s, 28280 KB] g=54, 245 evaluated, 244 expanded
[t=0.0480522s, 28280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0480616s, 28280 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0480693s, 28280 KB] g=56, 254 evaluated, 253 expanded
[t=0.0484812s, 28280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0485026s, 28280 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0485141s, 28280 KB] g=58, 263 evaluated, 262 expanded
[t=0.0488824s, 28280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0488922s, 28280 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0489s, 28280 KB] g=60, 272 evaluated, 271 expanded
[t=0.0492275s, 28280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0492378s, 28280 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0492458s, 28280 KB] g=62, 280 evaluated, 279 expanded
[t=0.0499842s, 28280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0499964s, 28280 KB] g=65, 298 evaluated, 297 expanded
[t=0.0500874s, 28280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.050096s, 28280 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0501037s, 28280 KB] g=66, 300 evaluated, 299 expanded
[t=0.0504688s, 28280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0504814s, 28280 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0504897s, 28280 KB] g=68, 309 evaluated, 308 expanded
[t=0.050812s, 28280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0508238s, 28280 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0508314s, 28280 KB] g=70, 317 evaluated, 316 expanded
[t=0.0527169s, 28280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0527362s, 28280 KB] g=74, 366 evaluated, 365 expanded
[t=0.0529759s, 28280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0529859s, 28280 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0529939s, 28280 KB] g=76, 372 evaluated, 371 expanded
[t=0.0555543s, 28280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0555789s, 28280 KB] g=80, 440 evaluated, 439 expanded
[t=0.0558105s, 28280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0558226s, 28280 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0558309s, 28280 KB] g=82, 445 evaluated, 444 expanded
[t=0.0585211s, 28280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0585401s, 28280 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0585508s, 28280 KB] g=90, 513 evaluated, 512 expanded
[t=0.0587337s, 28280 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0587433s, 28280 KB] g=90, 517 evaluated, 516 expanded
[t=0.0589399s, 28280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0589486s, 28280 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0589563s, 28280 KB] g=92, 522 evaluated, 521 expanded
[t=0.0619785s, 28280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0620019s, 28280 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0620116s, 28280 KB] g=104, 599 evaluated, 598 expanded
[t=0.0625409s, 28280 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0625508s, 28280 KB] g=108, 613 evaluated, 612 expanded
[t=0.062749s, 28280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0627583s, 28280 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0627663s, 28280 KB] g=110, 618 evaluated, 617 expanded
[t=0.0646091s, 28280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0646323s, 28280 KB] g=122, 668 evaluated, 667 expanded
[t=0.0648684s, 28280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0648776s, 28280 KB] g=124, 674 evaluated, 673 expanded
[t=0.0650006s, 28280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0650094s, 28280 KB] g=126, 677 evaluated, 676 expanded
[t=0.0652949s, 28280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0653241s, 28280 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0653328s, 28280 KB] g=132, 684 evaluated, 683 expanded
[t=0.0875119s, 28280 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.087957s, 28280 KB] g=162, 1319 evaluated, 1318 expanded
[t=0.0889461s, 28280 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0889736s, 28280 KB] g=170, 1346 evaluated, 1345 expanded
[t=0.0892553s, 28280 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0892654s, 28280 KB] g=174, 1355 evaluated, 1354 expanded
[t=0.0893648s, 28280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0893744s, 28280 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0893828s, 28280 KB] g=176, 1358 evaluated, 1357 expanded
[t=0.0915867s, 28280 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0916312s, 28280 KB] g=198, 1436 evaluated, 1435 expanded
[t=0.091712s, 28280 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0917213s, 28280 KB] g=200, 1439 evaluated, 1438 expanded
[t=0.0919534s, 28280 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0919636s, 28280 KB] g=208, 1450 evaluated, 1449 expanded
[t=0.0919848s, 28280 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0919938s, 28280 KB] g=209, 1451 evaluated, 1450 expanded
[t=0.0920112s, 28280 KB] Solution found!
[t=0.0920264s, 28280 KB] Actual search time: 0.0556083s
unstack b25 b12 (1)
put-down b25 (1)
unstack b12 b24 (1)
put-down b12 (1)
unstack b14 b23 (1)
put-down b14 (1)
pick-up b12 (1)
stack b12 b23 (1)
unstack b24 b19 (1)
put-down b24 (1)
unstack b19 b8 (1)
put-down b19 (1)
unstack b8 b22 (1)
stack b8 b25 (1)
unstack b22 b3 (1)
put-down b22 (1)
unstack b3 b13 (1)
put-down b3 (1)
unstack b13 b1 (1)
put-down b13 (1)
unstack b1 b21 (1)
stack b1 b8 (1)
unstack b21 b17 (1)
stack b21 b1 (1)
unstack b17 b2 (1)
put-down b17 (1)
unstack b12 b23 (1)
put-down b12 (1)
unstack b23 b16 (1)
stack b23 b22 (1)
unstack b16 b6 (1)
put-down b16 (1)
unstack b6 b26 (1)
put-down b6 (1)
pick-up b12 (1)
stack b12 b23 (1)
pick-up b24 (1)
stack b24 b17 (1)
pick-up b26 (1)
stack b26 b14 (1)
unstack b2 b11 (1)
put-down b2 (1)
unstack b11 b28 (1)
stack b11 b13 (1)
unstack b28 b29 (1)
stack b28 b10 (1)
pick-up b2 (1)
stack b2 b11 (1)
unstack b29 b5 (1)
put-down b29 (1)
unstack b5 b15 (1)
stack b5 b29 (1)
unstack b15 b20 (1)
stack b15 b28 (1)
unstack b20 b18 (1)
stack b20 b2 (1)
unstack b18 b7 (1)
stack b18 b26 (1)
pick-up b16 (1)
stack b16 b7 (1)
pick-up b3 (1)
stack b3 b15 (1)
unstack b16 b7 (1)
put-down b16 (1)
unstack b7 b27 (1)
stack b7 b19 (1)
pick-up b16 (1)
stack b16 b7 (1)
pick-up b27 (1)
stack b27 b16 (1)
unstack b5 b29 (1)
put-down b5 (1)
pick-up b29 (1)
stack b29 b18 (1)
pick-up b5 (1)
stack b5 b29 (1)
unstack b24 b17 (1)
put-down b24 (1)
pick-up b17 (1)
stack b17 b5 (1)
pick-up b24 (1)
stack b24 b17 (1)
unstack b12 b23 (1)
put-down b12 (1)
unstack b23 b22 (1)
put-down b23 (1)
pick-up b22 (1)
stack b22 b6 (1)
pick-up b23 (1)
stack b23 b22 (1)
pick-up b12 (1)
stack b12 b23 (1)
unstack b20 b2 (1)
put-down b20 (1)
unstack b2 b11 (1)
put-down b2 (1)
pick-up b20 (1)
stack b20 b2 (1)
unstack b11 b13 (1)
put-down b11 (1)
pick-up b13 (1)
stack b13 b27 (1)
pick-up b11 (1)
stack b11 b13 (1)
unstack b20 b2 (1)
put-down b20 (1)
pick-up b2 (1)
stack b2 b11 (1)
pick-up b20 (1)
stack b20 b2 (1)
unstack b3 b15 (1)
put-down b3 (1)
unstack b15 b28 (1)
put-down b15 (1)
pick-up b3 (1)
stack b3 b15 (1)
unstack b28 b10 (1)
put-down b28 (1)
unstack b10 b4 (1)
put-down b10 (1)
pick-up b4 (1)
stack b4 b24 (1)
pick-up b28 (1)
stack b28 b10 (1)
unstack b4 b24 (1)
put-down b4 (1)
unstack b24 b17 (1)
put-down b24 (1)
pick-up b4 (1)
stack b4 b24 (1)
unstack b28 b10 (1)
put-down b28 (1)
pick-up b10 (1)
stack b10 b4 (1)
pick-up b28 (1)
stack b28 b10 (1)
unstack b3 b15 (1)
put-down b3 (1)
pick-up b15 (1)
stack b15 b28 (1)
pick-up b3 (1)
stack b3 b15 (1)
unstack b17 b5 (1)
put-down b17 (1)
unstack b5 b29 (1)
put-down b5 (1)
unstack b29 b18 (1)
put-down b29 (1)
pick-up b5 (1)
stack b5 b29 (1)
pick-up b17 (1)
stack b17 b5 (1)
unstack b18 b26 (1)
put-down b18 (1)
unstack b26 b14 (1)
put-down b26 (1)
pick-up b14 (1)
stack b14 b20 (1)
pick-up b26 (1)
stack b26 b14 (1)
pick-up b18 (1)
stack b18 b26 (1)
unstack b17 b5 (1)
put-down b17 (1)
unstack b5 b29 (1)
put-down b5 (1)
pick-up b17 (1)
stack b17 b5 (1)
pick-up b29 (1)
stack b29 b18 (1)
unstack b17 b5 (1)
put-down b17 (1)
pick-up b5 (1)
stack b5 b29 (1)
pick-up b17 (1)
stack b17 b5 (1)
unstack b3 b15 (1)
put-down b3 (1)
unstack b15 b28 (1)
put-down b15 (1)
unstack b28 b10 (1)
put-down b28 (1)
pick-up b15 (1)
stack b15 b28 (1)
pick-up b3 (1)
stack b3 b15 (1)
unstack b10 b4 (1)
put-down b10 (1)
unstack b4 b24 (1)
put-down b4 (1)
pick-up b10 (1)
stack b10 b4 (1)
pick-up b24 (1)
stack b24 b17 (1)
unstack b10 b4 (1)
put-down b10 (1)
pick-up b4 (1)
stack b4 b24 (1)
pick-up b10 (1)
stack b10 b4 (1)
unstack b3 b15 (1)
put-down b3 (1)
unstack b15 b28 (1)
put-down b15 (1)
pick-up b28 (1)
stack b28 b10 (1)
pick-up b15 (1)
stack b15 b28 (1)
pick-up b3 (1)
stack b3 b15 (1)
[t=0.0920367s, 28280 KB] Plan length: 210 step(s).
[t=0.0920367s, 28280 KB] Plan cost: 210
[t=0.0920367s, 28280 KB] Expanded 1451 state(s).
[t=0.0920367s, 28280 KB] Reopened 0 state(s).
[t=0.0920367s, 28280 KB] Evaluated 1452 state(s).
[t=0.0920367s, 28280 KB] Evaluations: 2904
[t=0.0920367s, 28280 KB] Generated 14149 state(s).
[t=0.0920367s, 28280 KB] Dead ends: 0 state(s).
[t=0.0920367s, 28280 KB] Number of registered states: 1452
[t=0.0920367s, 28280 KB] Int hash set load factor: 1452/2048 = 0.708984
[t=0.0920367s, 28280 KB] Int hash set resizes: 11
[t=0.0920367s, 28280 KB] Search time: 0.0556991s
[t=0.0920367s, 28280 KB] Total time: 0.0920367s
Solution found.
Peak memory: 28280 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.29s
