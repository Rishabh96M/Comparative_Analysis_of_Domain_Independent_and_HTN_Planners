INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_23/bws_problem_23_28.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.010s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.011s wall-clock]
1750 relevant atoms
1173 auxiliary atoms
2923 final queue length
5091 total queue pushes
Completing instantiation... [0.010s CPU, 0.018s wall-clock]
Instantiating: [0.040s CPU, 0.031s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
24 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.007s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.026s wall-clock]
1564 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
46 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
47 of 47 variables necessary.
24 of 47 mutex groups necessary.
1058 of 1058 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.007s wall-clock]
Translator variables: 47
Translator derived variables: 0
Translator facts: 600
Translator goal facts: 21
Translator mutex groups: 24
Translator total mutex groups size: 576
Translator operators: 1058
Translator axioms: 0
Translator task size: 9110
Translator peak memory: 37484 KB
Writing output... [0.010s CPU, 0.006s wall-clock]
Done! [0.100s CPU, 0.094s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=1.6854e-05s, 24488 KB] reading input...
[t=0.0031665s, 25428 KB] done reading input!
[t=0.00409611s, 25824 KB] Initializing landmark count heuristic...
[t=0.0041424s, 25824 KB] Generating landmark graph...
[t=0.00421576s, 25824 KB] Building a landmark graph with reasonable orders.
[t=0.00428313s, 25956 KB] Initializing Exploration...
[t=0.004588s, 26256 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0176652s, 26652 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0177643s, 26652 KB] Landmarks generation time: 0.0135543s
[t=0.0177826s, 26652 KB] Discovered 103 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0178004s, 26652 KB] 358 edges
[t=0.0178103s, 26652 KB] approx. reasonable orders
[t=0.0201509s, 26652 KB] approx. obedient reasonable orders
[t=0.0202058s, 26652 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.020217s, 26652 KB] Landmarks generation time: 0.0160732s
[t=0.0202276s, 26652 KB] Discovered 103 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0202366s, 26652 KB] 396 edges
[t=0.0202459s, 26652 KB] Landmark graph generation time: 0.0161108s
[t=0.0202547s, 26652 KB] Landmark graph contains 103 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.020263s, 26652 KB] Landmark graph contains 396 orderings.
[t=0.0206557s, 26652 KB] Simplifying 4186 unary operators... done! [3174 unary operators]
[t=0.0217018s, 26652 KB] time to simplify: 0.00113929s
[t=0.0218658s, 26652 KB] Initializing additive heuristic...
[t=0.0218807s, 26652 KB] Initializing FF heuristic...
[t=0.0219496s, 26652 KB] Building successor generator...done!
[t=0.0221713s, 26652 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0221798s, 26652 KB] time for successor generation creation: 0.000195305s
[t=0.0221913s, 26652 KB] Variables: 47
[t=0.0221996s, 26652 KB] FactPairs: 600
[t=0.0222077s, 26652 KB] Bytes per state: 20
[t=0.022293s, 26652 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0223258s, 26652 KB] 46 initial landmarks, 21 goal landmarks
[t=0.0223787s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 57
[t=0.022389s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0223977s, 26652 KB] g=0, 1 evaluated, 0 expanded
[t=0.0224118s, 26652 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 57
[t=0.0224209s, 26652 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.02252s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0225303s, 26652 KB] g=1, 4 evaluated, 3 expanded
[t=0.0227362s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0227458s, 26652 KB] g=2, 11 evaluated, 10 expanded
[t=0.0228607s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0228703s, 26652 KB] g=3, 15 evaluated, 14 expanded
[t=0.0232363s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0232518s, 26652 KB] g=4, 28 evaluated, 27 expanded
[t=0.0234522s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0234616s, 26652 KB] g=6, 35 evaluated, 34 expanded
[t=0.0239403s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0239497s, 26652 KB] g=8, 53 evaluated, 52 expanded
[t=0.0245713s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.024581s, 26652 KB] g=10, 76 evaluated, 75 expanded
[t=0.0251445s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0251552s, 26652 KB] g=12, 97 evaluated, 96 expanded
[t=0.0252819s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0252971s, 26652 KB] g=8, 101 evaluated, 100 expanded
[t=0.0258032s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0258145s, 26652 KB] g=10, 119 evaluated, 118 expanded
[t=0.0258515s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0258602s, 26652 KB] g=14, 120 evaluated, 119 expanded
[t=0.0265033s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0265141s, 26652 KB] g=13, 144 evaluated, 143 expanded
[t=0.0269177s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0269334s, 26652 KB] g=15, 158 evaluated, 157 expanded
[t=0.0275245s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0275356s, 26652 KB] g=18, 180 evaluated, 179 expanded
[t=0.027603s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0276123s, 26652 KB] g=18, 182 evaluated, 181 expanded
[t=0.0280724s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0280885s, 26652 KB] g=20, 199 evaluated, 198 expanded
[t=0.0282823s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0282955s, 26652 KB] g=20, 206 evaluated, 205 expanded
[t=0.0286446s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0286587s, 26652 KB] g=22, 219 evaluated, 218 expanded
[t=0.0290009s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0290184s, 26652 KB] g=22, 232 evaluated, 231 expanded
[t=0.0291883s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0292009s, 26652 KB] g=24, 238 evaluated, 237 expanded
[t=0.0297099s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0297235s, 26652 KB] g=24, 256 evaluated, 255 expanded
[t=0.0302463s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0302672s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0302774s, 26652 KB] g=28, 274 evaluated, 273 expanded
[t=0.03053s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0305418s, 26652 KB] g=30, 282 evaluated, 281 expanded
[t=0.0308733s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0308845s, 26652 KB] g=32, 294 evaluated, 293 expanded
[t=0.0313368s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0313468s, 26652 KB] g=34, 311 evaluated, 310 expanded
[t=0.03145s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0314592s, 26652 KB] g=34, 314 evaluated, 313 expanded
[t=0.0318066s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0318176s, 26652 KB] g=36, 327 evaluated, 326 expanded
[t=0.0324517s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0324675s, 26652 KB] g=36, 351 evaluated, 350 expanded
[t=0.0345771s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0345903s, 26652 KB] g=40, 433 evaluated, 432 expanded
[t=0.0355251s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0355411s, 26652 KB] g=44, 469 evaluated, 468 expanded
[t=0.035731s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0357403s, 26652 KB] g=42, 476 evaluated, 475 expanded
[t=0.0358518s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.035861s, 26652 KB] g=46, 480 evaluated, 479 expanded
[t=0.0375827s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0376012s, 26652 KB] g=45, 544 evaluated, 543 expanded
[t=0.0376655s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.037675s, 26652 KB] g=46, 546 evaluated, 545 expanded
[t=0.0381999s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.038211s, 26652 KB] g=48, 566 evaluated, 565 expanded
[t=0.0386094s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.03862s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0386289s, 26652 KB] g=50, 581 evaluated, 580 expanded
[t=0.038867s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0388764s, 26652 KB] g=52, 590 evaluated, 589 expanded
[t=0.0392397s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0392501s, 26652 KB] g=54, 604 evaluated, 603 expanded
[t=0.0394455s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0394549s, 26652 KB] g=56, 611 evaluated, 610 expanded
[t=0.0400005s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0400163s, 26652 KB] g=60, 631 evaluated, 630 expanded
[t=0.0410761s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0410894s, 26652 KB] g=62, 671 evaluated, 670 expanded
[t=0.0412036s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0412127s, 26652 KB] g=64, 675 evaluated, 674 expanded
[t=0.0413989s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0414082s, 26652 KB] g=66, 682 evaluated, 681 expanded
[t=0.0431084s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0431324s, 26652 KB] g=72, 746 evaluated, 745 expanded
[t=0.0434528s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0434637s, 26652 KB] g=74, 758 evaluated, 757 expanded
[t=0.0436524s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.043662s, 26652 KB] g=76, 765 evaluated, 764 expanded
[t=0.043823s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.043833s, 26652 KB] g=78, 771 evaluated, 770 expanded
[t=0.0439467s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0439565s, 26652 KB] g=80, 775 evaluated, 774 expanded
[t=0.0443136s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.044324s, 26652 KB] g=84, 789 evaluated, 788 expanded
[t=0.0536979s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0537817s, 26652 KB] g=114, 1105 evaluated, 1104 expanded
[t=0.0552889s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0553058s, 26652 KB] g=114, 1162 evaluated, 1161 expanded
[t=0.0660716s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0661417s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.066152s, 26652 KB] g=134, 1582 evaluated, 1581 expanded
[t=0.0662635s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0662834s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0662921s, 26652 KB] g=136, 1586 evaluated, 1585 expanded
[t=0.0669306s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0669417s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.06695s, 26652 KB] g=146, 1612 evaluated, 1611 expanded
[t=0.074206s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0742277s, 26652 KB] g=167, 1908 evaluated, 1907 expanded
[t=0.0747884s, 26800 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0748012s, 26800 KB] g=169, 1926 evaluated, 1925 expanded
[t=0.0753714s, 26800 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0753899s, 26800 KB] g=170, 1949 evaluated, 1948 expanded
[t=0.0754249s, 26800 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0754342s, 26800 KB] g=171, 1950 evaluated, 1949 expanded
[t=0.0757898s, 26800 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0758047s, 26800 KB] g=172, 1965 evaluated, 1964 expanded
[t=0.075836s, 26800 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0758451s, 26800 KB] g=173, 1966 evaluated, 1965 expanded
[t=0.0760561s, 26800 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0760656s, 26800 KB] g=177, 1976 evaluated, 1975 expanded
[t=0.0762673s, 26800 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0762764s, 26800 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0762845s, 26800 KB] g=180, 1986 evaluated, 1985 expanded
[t=0.0763123s, 26800 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.076322s, 26800 KB] g=181, 1987 evaluated, 1986 expanded
[t=0.0763492s, 26800 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.076358s, 26800 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0763662s, 26800 KB] g=182, 1988 evaluated, 1987 expanded
[t=0.0766532s, 26800 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0766649s, 26800 KB] g=186, 2004 evaluated, 2003 expanded
[t=0.076741s, 26800 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0767499s, 26800 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0767581s, 26800 KB] g=188, 2008 evaluated, 2007 expanded
[t=0.0769108s, 26800 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0769215s, 26800 KB] g=192, 2017 evaluated, 2016 expanded
[t=0.0769758s, 26800 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0769848s, 26800 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0769928s, 26800 KB] g=194, 2020 evaluated, 2019 expanded
[t=0.0776211s, 26800 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0776324s, 26800 KB] g=210, 2061 evaluated, 2060 expanded
[t=0.0777594s, 26800 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0777709s, 26800 KB] g=218, 2071 evaluated, 2070 expanded
[t=0.0777958s, 26800 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0778055s, 26800 KB] g=218, 2072 evaluated, 2071 expanded
[t=0.0778221s, 26800 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0778313s, 26800 KB] g=219, 2073 evaluated, 2072 expanded
[t=0.0778464s, 26800 KB] Solution found!
[t=0.0778608s, 26800 KB] Actual search time: 0.055533s
unstack b12 b2 (1)
stack b12 b19 (1)
unstack b2 b11 (1)
stack b2 b15 (1)
unstack b11 b14 (1)
put-down b11 (1)
unstack b7 b3 (1)
stack b7 b14 (1)
unstack b3 b10 (1)
stack b3 b12 (1)
unstack b10 b13 (1)
put-down b10 (1)
unstack b17 b23 (1)
put-down b17 (1)
unstack b5 b16 (1)
put-down b5 (1)
unstack b13 b9 (1)
stack b13 b11 (1)
unstack b16 b18 (1)
put-down b16 (1)
pick-up b10 (1)
stack b10 b18 (1)
pick-up b23 (1)
stack b23 b10 (1)
unstack b9 b4 (1)
put-down b9 (1)
pick-up b4 (1)
stack b4 b13 (1)
unstack b2 b15 (1)
put-down b2 (1)
unstack b15 b6 (1)
put-down b15 (1)
unstack b6 b21 (1)
put-down b6 (1)
pick-up b5 (1)
stack b5 b6 (1)
unstack b21 b1 (1)
put-down b21 (1)
pick-up b1 (1)
stack b1 b16 (1)
pick-up b21 (1)
stack b21 b1 (1)
unstack b7 b14 (1)
put-down b7 (1)
unstack b14 b20 (1)
stack b14 b3 (1)
unstack b20 b8 (1)
stack b20 b23 (1)
pick-up b17 (1)
stack b17 b8 (1)
pick-up b15 (1)
stack b15 b9 (1)
pick-up b2 (1)
stack b2 b15 (1)
pick-up b7 (1)
stack b7 b14 (1)
unstack b5 b6 (1)
put-down b5 (1)
pick-up b6 (1)
stack b6 b20 (1)
pick-up b5 (1)
stack b5 b6 (1)
unstack b2 b15 (1)
put-down b2 (1)
unstack b4 b13 (1)
put-down b4 (1)
unstack b13 b11 (1)
put-down b13 (1)
unstack b15 b9 (1)
put-down b15 (1)
pick-up b11 (1)
stack b11 b21 (1)
pick-up b13 (1)
stack b13 b11 (1)
pick-up b15 (1)
stack b15 b9 (1)
pick-up b2 (1)
stack b2 b15 (1)
pick-up b4 (1)
stack b4 b13 (1)
unstack b7 b14 (1)
put-down b7 (1)
unstack b14 b3 (1)
put-down b14 (1)
pick-up b7 (1)
stack b7 b14 (1)
unstack b2 b15 (1)
put-down b2 (1)
unstack b15 b9 (1)
put-down b15 (1)
unstack b3 b12 (1)
put-down b3 (1)
unstack b12 b19 (1)
put-down b12 (1)
pick-up b3 (1)
stack b3 b12 (1)
pick-up b15 (1)
stack b15 b9 (1)
pick-up b2 (1)
stack b2 b15 (1)
pick-up b19 (1)
stack b19 b2 (1)
unstack b3 b12 (1)
put-down b3 (1)
pick-up b12 (1)
stack b12 b19 (1)
pick-up b3 (1)
stack b3 b12 (1)
unstack b7 b14 (1)
put-down b7 (1)
pick-up b14 (1)
stack b14 b3 (1)
pick-up b7 (1)
stack b7 b14 (1)
unstack b5 b6 (1)
put-down b5 (1)
unstack b6 b20 (1)
put-down b6 (1)
unstack b20 b23 (1)
put-down b20 (1)
pick-up b6 (1)
stack b6 b20 (1)
pick-up b5 (1)
stack b5 b6 (1)
unstack b23 b10 (1)
put-down b23 (1)
unstack b10 b18 (1)
put-down b10 (1)
unstack b18 b22 (1)
stack b18 b7 (1)
pick-up b10 (1)
stack b10 b18 (1)
pick-up b22 (1)
stack b22 b4 (1)
unstack b10 b18 (1)
put-down b10 (1)
pick-up b23 (1)
stack b23 b10 (1)
unstack b5 b6 (1)
put-down b5 (1)
unstack b6 b20 (1)
put-down b6 (1)
pick-up b20 (1)
stack b20 b23 (1)
pick-up b6 (1)
stack b6 b20 (1)
pick-up b5 (1)
stack b5 b6 (1)
unstack b18 b7 (1)
put-down b18 (1)
unstack b7 b14 (1)
put-down b7 (1)
pick-up b18 (1)
stack b18 b7 (1)
unstack b14 b3 (1)
put-down b14 (1)
unstack b3 b12 (1)
put-down b3 (1)
unstack b12 b19 (1)
put-down b12 (1)
unstack b19 b2 (1)
put-down b19 (1)
unstack b2 b15 (1)
put-down b2 (1)
unstack b15 b9 (1)
put-down b15 (1)
pick-up b14 (1)
stack b14 b3 (1)
pick-up b9 (1)
stack b9 b22 (1)
pick-up b15 (1)
stack b15 b9 (1)
pick-up b12 (1)
stack b12 b19 (1)
pick-up b2 (1)
stack b2 b15 (1)
unstack b12 b19 (1)
put-down b12 (1)
pick-up b19 (1)
stack b19 b2 (1)
pick-up b12 (1)
stack b12 b19 (1)
unstack b14 b3 (1)
put-down b14 (1)
pick-up b3 (1)
stack b3 b12 (1)
pick-up b14 (1)
stack b14 b3 (1)
unstack b18 b7 (1)
put-down b18 (1)
pick-up b7 (1)
stack b7 b14 (1)
pick-up b18 (1)
stack b18 b7 (1)
unstack b5 b6 (1)
put-down b5 (1)
unstack b6 b20 (1)
put-down b6 (1)
unstack b20 b23 (1)
put-down b20 (1)
pick-up b6 (1)
stack b6 b20 (1)
pick-up b5 (1)
stack b5 b6 (1)
unstack b23 b10 (1)
put-down b23 (1)
pick-up b10 (1)
stack b10 b18 (1)
pick-up b23 (1)
stack b23 b10 (1)
unstack b5 b6 (1)
put-down b5 (1)
unstack b6 b20 (1)
put-down b6 (1)
pick-up b20 (1)
stack b20 b23 (1)
pick-up b6 (1)
stack b6 b20 (1)
pick-up b5 (1)
stack b5 b6 (1)
[t=0.077871s, 26800 KB] Plan length: 220 step(s).
[t=0.077871s, 26800 KB] Plan cost: 220
[t=0.077871s, 26800 KB] Expanded 2073 state(s).
[t=0.077871s, 26800 KB] Reopened 0 state(s).
[t=0.077871s, 26800 KB] Evaluated 2074 state(s).
[t=0.077871s, 26800 KB] Evaluations: 4148
[t=0.077871s, 26800 KB] Generated 17569 state(s).
[t=0.077871s, 26800 KB] Dead ends: 0 state(s).
[t=0.077871s, 26800 KB] Number of registered states: 2074
[t=0.077871s, 26800 KB] Int hash set load factor: 2074/4096 = 0.506348
[t=0.077871s, 26800 KB] Int hash set resizes: 12
[t=0.077871s, 26800 KB] Search time: 0.0555783s
[t=0.077871s, 26800 KB] Total time: 0.077871s
Solution found.
Peak memory: 26800 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.22s
