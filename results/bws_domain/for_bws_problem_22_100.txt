INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_22/bws_problem_22_100.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.012s wall-clock]
1608 relevant atoms
1078 auxiliary atoms
2686 final queue length
4670 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.033s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
23 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.006s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.001s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.002s wall-clock]
Translating task: [0.030s CPU, 0.029s wall-clock]
1430 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
44 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.014s wall-clock]
Reordering and filtering variables...
45 of 45 variables necessary.
23 of 45 mutex groups necessary.
968 of 968 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 45
Translator derived variables: 0
Translator facts: 552
Translator goal facts: 20
Translator mutex groups: 23
Translator total mutex groups size: 529
Translator operators: 968
Translator axioms: 0
Translator task size: 8340
Translator peak memory: 36976 KB
Writing output... [0.010s CPU, 0.006s wall-clock]
Done! [0.100s CPU, 0.099s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.0044e-05s, 24488 KB] reading input...
[t=0.0027617s, 25340 KB] done reading input!
[t=0.00362208s, 25736 KB] Initializing landmark count heuristic...
[t=0.00365263s, 25736 KB] Generating landmark graph...
[t=0.00371018s, 25736 KB] Building a landmark graph with reasonable orders.
[t=0.00376573s, 25736 KB] Initializing Exploration...
[t=0.00407182s, 26000 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.014572s, 26528 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0146368s, 26528 KB] Landmarks generation time: 0.0109276s
[t=0.0146504s, 26528 KB] Discovered 100 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0146653s, 26528 KB] 476 edges
[t=0.0146752s, 26528 KB] approx. reasonable orders
[t=0.0177925s, 26528 KB] approx. obedient reasonable orders
[t=0.0178213s, 26528 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0178308s, 26528 KB] Landmarks generation time: 0.0141755s
[t=0.0178402s, 26528 KB] Discovered 100 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0178486s, 26528 KB] 541 edges
[t=0.0178578s, 26528 KB] Landmark graph generation time: 0.0142128s
[t=0.0178666s, 26528 KB] Landmark graph contains 100 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0178752s, 26528 KB] Landmark graph contains 541 orderings.
[t=0.0181959s, 26528 KB] Simplifying 3828 unary operators... done! [2904 unary operators]
[t=0.0191154s, 26528 KB] time to simplify: 0.00099829s
[t=0.019263s, 26528 KB] Initializing additive heuristic...
[t=0.0192822s, 26528 KB] Initializing FF heuristic...
[t=0.0193921s, 26528 KB] Building successor generator...done!
[t=0.0196422s, 26528 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0196543s, 26528 KB] time for successor generation creation: 0.000210959s
[t=0.0196685s, 26528 KB] Variables: 45
[t=0.0196771s, 26528 KB] FactPairs: 552
[t=0.0196852s, 26528 KB] Bytes per state: 20
[t=0.0197976s, 26528 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0198382s, 26528 KB] 44 initial landmarks, 20 goal landmarks
[t=0.0199028s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0199158s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0199245s, 26528 KB] g=0, 1 evaluated, 0 expanded
[t=0.0199401s, 26528 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0199495s, 26528 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0200985s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0201144s, 26528 KB] g=2, 6 evaluated, 5 expanded
[t=0.02016s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0201734s, 26528 KB] g=2, 7 evaluated, 6 expanded
[t=0.0204098s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0204279s, 26528 KB] g=4, 15 evaluated, 14 expanded
[t=0.0206378s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0206508s, 26528 KB] g=6, 23 evaluated, 22 expanded
[t=0.0209257s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0209443s, 26528 KB] g=8, 33 evaluated, 32 expanded
[t=0.0210111s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.021021s, 26528 KB] g=8, 35 evaluated, 34 expanded
[t=0.0212049s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0212178s, 26528 KB] g=10, 42 evaluated, 41 expanded
[t=0.0213273s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0213372s, 26528 KB] g=10, 46 evaluated, 45 expanded
[t=0.0214041s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.021416s, 26528 KB] g=11, 48 evaluated, 47 expanded
[t=0.0218064s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0218332s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0218416s, 26528 KB] g=12, 62 evaluated, 61 expanded
[t=0.0219335s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0219743s, 26528 KB] g=14, 65 evaluated, 64 expanded
[t=0.0220837s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0220967s, 26528 KB] g=16, 69 evaluated, 68 expanded
[t=0.0221319s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0221417s, 26528 KB] g=17, 70 evaluated, 69 expanded
[t=0.0224085s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0224247s, 26528 KB] g=20, 80 evaluated, 79 expanded
[t=0.0226189s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0226407s, 26528 KB] g=22, 87 evaluated, 86 expanded
[t=0.0228321s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0228533s, 26528 KB] g=24, 94 evaluated, 93 expanded
[t=0.0229233s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0229382s, 26528 KB] g=24, 96 evaluated, 95 expanded
[t=0.0232412s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0232578s, 26528 KB] g=26, 108 evaluated, 107 expanded
[t=0.0233152s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0233264s, 26528 KB] g=26, 110 evaluated, 109 expanded
[t=0.0236995s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0237207s, 26528 KB] g=28, 124 evaluated, 123 expanded
[t=0.0240855s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0241045s, 26528 KB] g=30, 138 evaluated, 137 expanded
[t=0.024192s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0242035s, 26528 KB] g=30, 141 evaluated, 140 expanded
[t=0.0244901s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0245232s, 26528 KB] g=32, 152 evaluated, 151 expanded
[t=0.0247596s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0247752s, 26528 KB] g=32, 161 evaluated, 160 expanded
[t=0.0253533s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.025366s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0253741s, 26528 KB] g=34, 184 evaluated, 183 expanded
[t=0.0256215s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0256315s, 26528 KB] g=36, 194 evaluated, 193 expanded
[t=0.0259134s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0259228s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.025931s, 26528 KB] g=36, 205 evaluated, 204 expanded
[t=0.0261556s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0261654s, 26528 KB] g=38, 214 evaluated, 213 expanded
[t=0.0265516s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0265614s, 26528 KB] g=40, 230 evaluated, 229 expanded
[t=0.0267128s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0267218s, 26528 KB] g=42, 236 evaluated, 235 expanded
[t=0.026973s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0269845s, 26528 KB] g=44, 246 evaluated, 245 expanded
[t=0.0387935s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0388441s, 26528 KB] g=68, 734 evaluated, 733 expanded
[t=0.0390544s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0390642s, 26528 KB] g=69, 742 evaluated, 741 expanded
[t=0.0391255s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0391345s, 26528 KB] g=70, 744 evaluated, 743 expanded
[t=0.0397229s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.039733s, 26528 KB] g=72, 768 evaluated, 767 expanded
[t=0.0403555s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0403651s, 26528 KB] g=74, 795 evaluated, 794 expanded
[t=0.0408741s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0408864s, 26528 KB] g=78, 816 evaluated, 815 expanded
[t=0.0412011s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0412126s, 26528 KB] g=80, 828 evaluated, 827 expanded
[t=0.0414428s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0414525s, 26528 KB] g=82, 837 evaluated, 836 expanded
[t=0.0415572s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0415675s, 26528 KB] g=76, 841 evaluated, 840 expanded
[t=0.0423894s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0424007s, 26528 KB] g=78, 875 evaluated, 874 expanded
[t=0.0432377s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0432493s, 26528 KB] g=80, 910 evaluated, 909 expanded
[t=0.0434258s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0434352s, 26528 KB] g=88, 917 evaluated, 916 expanded
[t=0.043679s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0436888s, 26528 KB] g=90, 927 evaluated, 926 expanded
[t=0.0437945s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0438035s, 26528 KB] g=82, 931 evaluated, 930 expanded
[t=0.0438372s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0438462s, 26528 KB] g=83, 932 evaluated, 931 expanded
[t=0.0439497s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0439584s, 26528 KB] g=92, 936 evaluated, 935 expanded
[t=0.0443694s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0443802s, 26528 KB] g=84, 953 evaluated, 952 expanded
[t=0.0444404s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0444496s, 26528 KB] g=85, 955 evaluated, 954 expanded
[t=0.0448747s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0448873s, 26528 KB] g=86, 972 evaluated, 971 expanded
[t=0.0449465s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0449557s, 26528 KB] g=87, 974 evaluated, 973 expanded
[t=0.044989s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0450042s, 26528 KB] g=96, 975 evaluated, 974 expanded
[t=0.0451974s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0452118s, 26528 KB] g=98, 983 evaluated, 982 expanded
[t=0.0453817s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0453913s, 26528 KB] g=88, 990 evaluated, 989 expanded
[t=0.0454481s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0454572s, 26528 KB] g=89, 992 evaluated, 991 expanded
[t=0.0456707s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0456795s, 26528 KB] g=90, 1001 evaluated, 1000 expanded
[t=0.0457343s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0457431s, 26528 KB] g=91, 1003 evaluated, 1002 expanded
[t=0.045796s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0458046s, 26528 KB] g=92, 1005 evaluated, 1004 expanded
[t=0.0459976s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0460063s, 26528 KB] g=94, 1011 evaluated, 1010 expanded
[t=0.0463922s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0464022s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0464108s, 26528 KB] g=100, 1028 evaluated, 1027 expanded
[t=0.0520934s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0521146s, 26528 KB] g=108, 1277 evaluated, 1276 expanded
[t=0.0533215s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0533599s, 26528 KB] g=120, 1334 evaluated, 1333 expanded
[t=0.0537136s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0537235s, 26528 KB] g=124, 1351 evaluated, 1350 expanded
[t=0.0538061s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0538153s, 26528 KB] g=126, 1355 evaluated, 1354 expanded
[t=0.0551095s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0551206s, 26528 KB] g=142, 1421 evaluated, 1420 expanded
[t=0.0554728s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0554831s, 26528 KB] g=150, 1440 evaluated, 1439 expanded
[t=0.0555912s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0556001s, 26528 KB] g=154, 1446 evaluated, 1445 expanded
[t=0.0556162s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0556248s, 26528 KB] g=155, 1447 evaluated, 1446 expanded
[t=0.0556394s, 26528 KB] Solution found!
[t=0.0556536s, 26528 KB] Actual search time: 0.0358064s
unstack b17 b1 (1)
put-down b17 (1)
unstack b22 b9 (1)
put-down b22 (1)
unstack b6 b3 (1)
stack b6 b9 (1)
unstack b3 b14 (1)
stack b3 b8 (1)
pick-up b22 (1)
stack b22 b6 (1)
pick-up b14 (1)
stack b14 b22 (1)
unstack b3 b8 (1)
put-down b3 (1)
unstack b8 b10 (1)
put-down b8 (1)
unstack b10 b7 (1)
put-down b10 (1)
unstack b7 b13 (1)
put-down b7 (1)
unstack b13 b12 (1)
stack b13 b14 (1)
unstack b12 b21 (1)
put-down b12 (1)
unstack b21 b5 (1)
put-down b21 (1)
unstack b5 b2 (1)
put-down b5 (1)
unstack b2 b19 (1)
put-down b2 (1)
unstack b19 b4 (1)
stack b19 b1 (1)
pick-up b4 (1)
stack b4 b21 (1)
pick-up b7 (1)
stack b7 b19 (1)
pick-up b12 (1)
stack b12 b2 (1)
pick-up b17 (1)
stack b17 b12 (1)
pick-up b3 (1)
stack b3 b8 (1)
pick-up b5 (1)
stack b5 b3 (1)
unstack b13 b14 (1)
put-down b13 (1)
unstack b14 b22 (1)
put-down b14 (1)
pick-up b13 (1)
stack b13 b14 (1)
unstack b17 b12 (1)
put-down b17 (1)
unstack b12 b2 (1)
put-down b12 (1)
unstack b5 b3 (1)
put-down b5 (1)
unstack b3 b8 (1)
put-down b3 (1)
unstack b22 b6 (1)
put-down b22 (1)
unstack b6 b9 (1)
put-down b6 (1)
pick-up b22 (1)
stack b22 b6 (1)
unstack b9 b16 (1)
put-down b9 (1)
unstack b16 b18 (1)
stack b16 b4 (1)
unstack b18 b11 (1)
stack b18 b7 (1)
pick-up b10 (1)
stack b10 b11 (1)
pick-up b12 (1)
stack b12 b2 (1)
pick-up b17 (1)
stack b17 b12 (1)
pick-up b3 (1)
stack b3 b8 (1)
pick-up b5 (1)
stack b5 b3 (1)
pick-up b9 (1)
stack b9 b16 (1)
unstack b10 b11 (1)
put-down b10 (1)
unstack b11 b20 (1)
stack b11 b17 (1)
pick-up b10 (1)
stack b10 b11 (1)
unstack b20 b15 (1)
stack b20 b13 (1)
pick-up b15 (1)
stack b15 b5 (1)
unstack b22 b6 (1)
put-down b22 (1)
pick-up b6 (1)
stack b6 b9 (1)
pick-up b22 (1)
stack b22 b6 (1)
unstack b20 b13 (1)
put-down b20 (1)
unstack b13 b14 (1)
put-down b13 (1)
pick-up b14 (1)
stack b14 b22 (1)
pick-up b13 (1)
stack b13 b14 (1)
pick-up b20 (1)
stack b20 b13 (1)
unstack b15 b5 (1)
put-down b15 (1)
unstack b5 b3 (1)
put-down b5 (1)
pick-up b15 (1)
stack b15 b5 (1)
unstack b3 b8 (1)
put-down b3 (1)
pick-up b8 (1)
stack b8 b20 (1)
pick-up b3 (1)
stack b3 b8 (1)
unstack b15 b5 (1)
put-down b15 (1)
pick-up b5 (1)
stack b5 b3 (1)
pick-up b15 (1)
stack b15 b5 (1)
unstack b10 b11 (1)
put-down b10 (1)
unstack b11 b17 (1)
put-down b11 (1)
unstack b17 b12 (1)
put-down b17 (1)
pick-up b11 (1)
stack b11 b17 (1)
pick-up b10 (1)
stack b10 b11 (1)
unstack b12 b2 (1)
put-down b12 (1)
pick-up b2 (1)
stack b2 b15 (1)
pick-up b12 (1)
stack b12 b2 (1)
unstack b10 b11 (1)
put-down b10 (1)
unstack b11 b17 (1)
put-down b11 (1)
pick-up b10 (1)
stack b10 b11 (1)
pick-up b17 (1)
stack b17 b12 (1)
unstack b10 b11 (1)
put-down b10 (1)
pick-up b11 (1)
stack b11 b17 (1)
pick-up b10 (1)
stack b10 b11 (1)
[t=0.0556627s, 26528 KB] Plan length: 156 step(s).
[t=0.0556627s, 26528 KB] Plan cost: 156
[t=0.0556627s, 26528 KB] Expanded 1447 state(s).
[t=0.0556627s, 26528 KB] Reopened 0 state(s).
[t=0.0556627s, 26528 KB] Evaluated 1448 state(s).
[t=0.0556627s, 26528 KB] Evaluations: 2896
[t=0.0556627s, 26528 KB] Generated 12439 state(s).
[t=0.0556627s, 26528 KB] Dead ends: 0 state(s).
[t=0.0556627s, 26528 KB] Number of registered states: 1448
[t=0.0556627s, 26528 KB] Int hash set load factor: 1448/2048 = 0.707031
[t=0.0556627s, 26528 KB] Int hash set resizes: 11
[t=0.0556627s, 26528 KB] Search time: 0.0358656s
[t=0.0556627s, 26528 KB] Total time: 0.0556627s
Solution found.
Peak memory: 26528 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.21s
