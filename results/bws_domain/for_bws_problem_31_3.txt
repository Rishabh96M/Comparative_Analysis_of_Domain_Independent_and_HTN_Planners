INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_31/bws_problem_31_3.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.010s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.018s wall-clock]
3102 relevant atoms
2077 auxiliary atoms
5179 final queue length
9090 total queue pushes
Completing instantiation... [0.040s CPU, 0.033s wall-clock]
Instantiating: [0.060s CPU, 0.054s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.002s wall-clock]
Collecting mutex groups... [0.010s CPU, 0.000s wall-clock]
Choosing groups...
32 uncovered facts
Choosing groups: [0.000s CPU, 0.003s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.010s CPU, 0.012s wall-clock]
Building STRIPS to SAS dictionary... [0.010s CPU, 0.006s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.001s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.002s wall-clock]
Translating task: [0.050s CPU, 0.049s wall-clock]
2852 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
62 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.024s wall-clock]
Reordering and filtering variables...
63 of 63 variables necessary.
32 of 63 mutex groups necessary.
1922 of 1922 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.012s wall-clock]
Translator variables: 63
Translator derived variables: 0
Translator facts: 1056
Translator goal facts: 25
Translator mutex groups: 32
Translator total mutex groups size: 1024
Translator operators: 1922
Translator axioms: 0
Translator task size: 16490
Translator peak memory: 42104 KB
Writing output... [0.010s CPU, 0.010s wall-clock]
Done! [0.180s CPU, 0.173s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.0251e-05s, 24488 KB] reading input...
[t=0.00916682s, 26640 KB] done reading input!
[t=0.0109145s, 26904 KB] Initializing landmark count heuristic...
[t=0.0109915s, 26904 KB] Generating landmark graph...
[t=0.0110933s, 27036 KB] Building a landmark graph with reasonable orders.
[t=0.0111942s, 27168 KB] Initializing Exploration...
[t=0.0117386s, 27612 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0479142s, 28404 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0480705s, 28404 KB] Landmarks generation time: 0.036992s
[t=0.0481012s, 28404 KB] Discovered 139 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0481227s, 28404 KB] 689 edges
[t=0.0481392s, 28404 KB] approx. reasonable orders
[t=0.0568362s, 28404 KB] approx. obedient reasonable orders
[t=0.0576568s, 28404 KB] Removed 2 reasonable or obedient reasonable orders
[t=0.0577062s, 28404 KB] Landmarks generation time: 0.0467241s
[t=0.0577314s, 28404 KB] Discovered 139 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0577615s, 28404 KB] 794 edges
[t=0.0577778s, 28404 KB] Landmark graph generation time: 0.0468003s
[t=0.0577951s, 28404 KB] Landmark graph contains 139 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0578104s, 28404 KB] Landmark graph contains 794 orderings.
[t=0.059951s, 28436 KB] Simplifying 7626 unary operators... done! [5766 unary operators]
[t=0.0617814s, 28568 KB] time to simplify: 0.00196212s
[t=0.0620462s, 28568 KB] Initializing additive heuristic...
[t=0.0620657s, 28568 KB] Initializing FF heuristic...
[t=0.0621561s, 28568 KB] Building successor generator...done!
[t=0.062648s, 28568 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0626617s, 28568 KB] time for successor generation creation: 0.000457763s
[t=0.0626825s, 28568 KB] Variables: 63
[t=0.0626948s, 28568 KB] FactPairs: 1056
[t=0.0627071s, 28568 KB] Bytes per state: 24
[t=0.0628243s, 28568 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0628721s, 28568 KB] 63 initial landmarks, 25 goal landmarks
[t=0.0629729s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 76
[t=0.0629867s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 56
[t=0.0629994s, 28568 KB] g=0, 1 evaluated, 0 expanded
[t=0.06302s, 28568 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 76
[t=0.0630325s, 28568 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 56
[t=0.0634438s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 75
[t=0.0634576s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 55
[t=0.0634704s, 28568 KB] g=2, 7 evaluated, 6 expanded
[t=0.0638021s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 74
[t=0.0638155s, 28568 KB] g=3, 12 evaluated, 11 expanded
[t=0.0639557s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 54
[t=0.0639817s, 28568 KB] g=4, 14 evaluated, 13 expanded
[t=0.0646295s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 73
[t=0.0646433s, 28568 KB] g=5, 24 evaluated, 23 expanded
[t=0.0649812s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 53
[t=0.0649941s, 28568 KB] g=6, 29 evaluated, 28 expanded
[t=0.0654455s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 72
[t=0.0654587s, 28568 KB] g=8, 36 evaluated, 35 expanded
[t=0.065597s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 71
[t=0.0656104s, 28568 KB] g=9, 38 evaluated, 37 expanded
[t=0.0667815s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 70
[t=0.0667975s, 28568 KB] g=12, 56 evaluated, 55 expanded
[t=0.0676799s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 69
[t=0.0676937s, 28568 KB] g=13, 70 evaluated, 69 expanded
[t=0.0697397s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 68
[t=0.0697946s, 28568 KB] g=16, 95 evaluated, 94 expanded
[t=0.0703296s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 52
[t=0.070352s, 28568 KB] g=10, 101 evaluated, 100 expanded
[t=0.0710933s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 67
[t=0.0711054s, 28568 KB] g=18, 118 evaluated, 117 expanded
[t=0.0737576s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 66
[t=0.0738175s, 28568 KB] g=20, 144 evaluated, 143 expanded
[t=0.0748462s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 51
[t=0.0748599s, 28568 KB] g=14, 167 evaluated, 166 expanded
[t=0.0749613s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 65
[t=0.0749707s, 28568 KB] g=22, 169 evaluated, 168 expanded
[t=0.0767879s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 64
[t=0.0768172s, 28568 KB] g=24, 198 evaluated, 197 expanded
[t=0.0782701s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 50
[t=0.0782873s, 28568 KB] g=18, 229 evaluated, 228 expanded
[t=0.0783686s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 63
[t=0.0783826s, 28568 KB] g=26, 230 evaluated, 229 expanded
[t=0.0800031s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 49
[t=0.0800484s, 28568 KB] g=22, 261 evaluated, 260 expanded
[t=0.0802452s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 62
[t=0.0802569s, 28568 KB] g=28, 265 evaluated, 264 expanded
[t=0.0818043s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 61
[t=0.0818301s, 28568 KB] g=30, 293 evaluated, 292 expanded
[t=0.0836045s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 60
[t=0.083647s, 28568 KB] g=32, 329 evaluated, 328 expanded
[t=0.0852489s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.0852944s, 28568 KB] g=34, 360 evaluated, 359 expanded
[t=0.089129s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 48
[t=0.089206s, 28568 KB] g=34, 443 evaluated, 442 expanded
[t=0.0894169s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 57
[t=0.0894284s, 28568 KB] g=36, 447 evaluated, 446 expanded
[t=0.0900581s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 47
[t=0.0900695s, 28568 KB] g=36, 461 evaluated, 460 expanded
[t=0.0910378s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 46
[t=0.0910538s, 28568 KB] g=38, 483 evaluated, 482 expanded
[t=0.0916838s, 28568 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0917179s, 28568 KB] g=38, 493 evaluated, 492 expanded
[t=0.0921851s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.0922045s, 28568 KB] g=40, 501 evaluated, 500 expanded
[t=0.0933798s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0934015s, 28568 KB] g=42, 524 evaluated, 523 expanded
[t=0.0945019s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0945154s, 28568 KB] g=46, 549 evaluated, 548 expanded
[t=0.0954154s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0954274s, 28568 KB] g=48, 569 evaluated, 568 expanded
[t=0.0971357s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0971559s, 28568 KB] g=52, 608 evaluated, 607 expanded
[t=0.0979958s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0980087s, 28568 KB] g=54, 627 evaluated, 626 expanded
[t=0.1037s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.103779s, 28568 KB] g=58, 749 evaluated, 748 expanded
[t=0.104741s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.104763s, 28568 KB] g=60, 770 evaluated, 769 expanded
[t=0.105605s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.105621s, 28568 KB] g=62, 789 evaluated, 788 expanded
[t=0.106345s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.106358s, 28568 KB] g=64, 805 evaluated, 804 expanded
[t=0.111418s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.11147s, 28568 KB] g=68, 917 evaluated, 916 expanded
[t=0.112075s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.112094s, 28568 KB] g=70, 928 evaluated, 927 expanded
[t=0.117857s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.117898s, 28568 KB] g=76, 1055 evaluated, 1054 expanded
[t=0.118518s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.118532s, 28568 KB] g=78, 1069 evaluated, 1068 expanded
[t=0.119161s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.119177s, 28568 KB] g=80, 1083 evaluated, 1082 expanded
[t=0.119808s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.119823s, 28568 KB] g=82, 1097 evaluated, 1096 expanded
[t=0.125054s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.125188s, 28568 KB] g=88, 1212 evaluated, 1211 expanded
[t=0.133983s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.134101s, 28568 KB] g=96, 1402 evaluated, 1401 expanded
[t=0.136396s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.136416s, 28568 KB] g=100, 1455 evaluated, 1454 expanded
[t=0.136936s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.136953s, 28568 KB] g=102, 1466 evaluated, 1465 expanded
[t=0.145908s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.14594s, 28568 KB] g=110, 1680 evaluated, 1679 expanded
[t=0.146372s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.146384s, 28568 KB] g=112, 1690 evaluated, 1689 expanded
[t=0.156826s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.156913s, 28568 KB] g=124, 1923 evaluated, 1922 expanded
[t=0.158388s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.158426s, 28568 KB] g=128, 1958 evaluated, 1957 expanded
[t=0.15879s, 28568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.158824s, 28568 KB] g=130, 1966 evaluated, 1965 expanded
[t=0.163498s, 28712 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.163577s, 28712 KB] g=142, 2070 evaluated, 2069 expanded
[t=0.164253s, 28712 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.16427s, 28712 KB] g=146, 2085 evaluated, 2084 expanded
[t=0.164433s, 28712 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.164445s, 28712 KB] g=148, 2089 evaluated, 2088 expanded
[t=0.166791s, 28712 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.166812s, 28712 KB] g=164, 2153 evaluated, 2152 expanded
[t=0.167311s, 28712 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.167325s, 28712 KB] g=172, 2168 evaluated, 2167 expanded
[t=0.167556s, 28712 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.167567s, 28712 KB] g=176, 2175 evaluated, 2174 expanded
[t=0.167634s, 28712 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.167646s, 28712 KB] g=177, 2177 evaluated, 2176 expanded
[t=0.16771s, 28712 KB] Solution found!
[t=0.167729s, 28712 KB] Actual search time: 0.104849s
unstack b15 b9 (1)
put-down b15 (1)
unstack b21 b17 (1)
put-down b21 (1)
unstack b19 b25 (1)
stack b19 b17 (1)
unstack b25 b20 (1)
put-down b25 (1)
unstack b18 b6 (1)
stack b18 b20 (1)
unstack b9 b14 (1)
put-down b9 (1)
unstack b14 b11 (1)
stack b14 b25 (1)
unstack b11 b13 (1)
put-down b11 (1)
pick-up b13 (1)
stack b13 b2 (1)
unstack b6 b30 (1)
put-down b6 (1)
pick-up b11 (1)
stack b11 b30 (1)
unstack b13 b2 (1)
put-down b13 (1)
unstack b2 b1 (1)
put-down b2 (1)
pick-up b13 (1)
stack b13 b2 (1)
unstack b1 b16 (1)
put-down b1 (1)
unstack b16 b5 (1)
put-down b16 (1)
unstack b5 b24 (1)
stack b5 b13 (1)
unstack b24 b7 (1)
put-down b24 (1)
unstack b7 b28 (1)
put-down b7 (1)
pick-up b16 (1)
stack b16 b7 (1)
pick-up b6 (1)
stack b6 b5 (1)
unstack b28 b10 (1)
put-down b28 (1)
unstack b10 b23 (1)
put-down b10 (1)
pick-up b9 (1)
stack b9 b10 (1)
unstack b23 b26 (1)
put-down b23 (1)
unstack b26 b22 (1)
stack b26 b14 (1)
pick-up b22 (1)
stack b22 b21 (1)
unstack b18 b20 (1)
put-down b18 (1)
unstack b20 b27 (1)
stack b20 b24 (1)
pick-up b18 (1)
stack b18 b20 (1)
unstack b27 b31 (1)
stack b27 b28 (1)
unstack b31 b3 (1)
put-down b31 (1)
unstack b3 b4 (1)
put-down b3 (1)
pick-up b1 (1)
stack b1 b4 (1)
pick-up b23 (1)
stack b23 b31 (1)
unstack b1 b4 (1)
put-down b1 (1)
unstack b4 b12 (1)
stack b4 b19 (1)
pick-up b1 (1)
stack b1 b4 (1)
unstack b12 b29 (1)
stack b12 b23 (1)
unstack b29 b8 (1)
stack b29 b27 (1)
pick-up b8 (1)
stack b8 b18 (1)
unstack b11 b30 (1)
put-down b11 (1)
pick-up b30 (1)
stack b30 b29 (1)
pick-up b11 (1)
stack b11 b30 (1)
unstack b12 b23 (1)
put-down b12 (1)
unstack b23 b31 (1)
put-down b23 (1)
pick-up b12 (1)
stack b12 b23 (1)
pick-up b31 (1)
stack b31 b8 (1)
unstack b12 b23 (1)
put-down b12 (1)
pick-up b23 (1)
stack b23 b31 (1)
pick-up b12 (1)
stack b12 b23 (1)
unstack b26 b14 (1)
put-down b26 (1)
unstack b14 b25 (1)
put-down b14 (1)
pick-up b25 (1)
stack b25 b3 (1)
pick-up b14 (1)
stack b14 b25 (1)
pick-up b26 (1)
stack b26 b14 (1)
unstack b1 b4 (1)
put-down b1 (1)
unstack b4 b19 (1)
put-down b4 (1)
pick-up b1 (1)
stack b1 b4 (1)
unstack b19 b17 (1)
put-down b19 (1)
pick-up b17 (1)
stack b17 b16 (1)
pick-up b19 (1)
stack b19 b17 (1)
unstack b1 b4 (1)
put-down b1 (1)
pick-up b4 (1)
stack b4 b19 (1)
pick-up b1 (1)
stack b1 b4 (1)
unstack b6 b5 (1)
put-down b6 (1)
unstack b5 b13 (1)
put-down b5 (1)
pick-up b6 (1)
stack b6 b5 (1)
unstack b13 b2 (1)
put-down b13 (1)
pick-up b2 (1)
stack b2 b22 (1)
pick-up b13 (1)
stack b13 b2 (1)
unstack b6 b5 (1)
put-down b6 (1)
pick-up b5 (1)
stack b5 b13 (1)
pick-up b6 (1)
stack b6 b5 (1)
unstack b11 b30 (1)
put-down b11 (1)
unstack b30 b29 (1)
put-down b30 (1)
unstack b29 b27 (1)
put-down b29 (1)
pick-up b30 (1)
stack b30 b29 (1)
pick-up b11 (1)
stack b11 b30 (1)
unstack b27 b28 (1)
put-down b27 (1)
pick-up b28 (1)
stack b28 b12 (1)
pick-up b27 (1)
stack b27 b28 (1)
unstack b11 b30 (1)
put-down b11 (1)
unstack b30 b29 (1)
put-down b30 (1)
pick-up b11 (1)
stack b11 b30 (1)
pick-up b29 (1)
stack b29 b27 (1)
unstack b11 b30 (1)
put-down b11 (1)
pick-up b30 (1)
stack b30 b29 (1)
pick-up b11 (1)
stack b11 b30 (1)
[t=0.167739s, 28712 KB] Plan length: 178 step(s).
[t=0.167739s, 28712 KB] Plan cost: 178
[t=0.167739s, 28712 KB] Expanded 2178 state(s).
[t=0.167739s, 28712 KB] Reopened 0 state(s).
[t=0.167739s, 28712 KB] Evaluated 2179 state(s).
[t=0.167739s, 28712 KB] Evaluations: 4358
[t=0.167739s, 28712 KB] Generated 34045 state(s).
[t=0.167739s, 28712 KB] Dead ends: 0 state(s).
[t=0.167739s, 28712 KB] Number of registered states: 2179
[t=0.167739s, 28712 KB] Int hash set load factor: 2179/4096 = 0.531982
[t=0.167739s, 28712 KB] Int hash set resizes: 12
[t=0.167739s, 28712 KB] Search time: 0.104915s
[t=0.167739s, 28712 KB] Total time: 0.167739s
Solution found.
Peak memory: 28712 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.39s
