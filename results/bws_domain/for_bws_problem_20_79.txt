INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_20/bws_problem_20_79.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.009s wall-clock]
1342 relevant atoms
900 auxiliary atoms
2242 final queue length
3884 total queue pushes
Completing instantiation... [0.020s CPU, 0.013s wall-clock]
Instantiating: [0.030s CPU, 0.024s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
21 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.006s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.021s wall-clock]
1180 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
40 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.010s wall-clock]
Reordering and filtering variables...
41 of 41 variables necessary.
21 of 41 mutex groups necessary.
800 of 800 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.005s wall-clock]
Translator variables: 41
Translator derived variables: 0
Translator facts: 462
Translator goal facts: 19
Translator mutex groups: 21
Translator total mutex groups size: 441
Translator operators: 800
Translator axioms: 0
Translator task size: 6903
Translator peak memory: 35940 KB
Writing output... [0.000s CPU, 0.005s wall-clock]
Done! [0.070s CPU, 0.075s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=4.9901e-05s, 24488 KB] reading input...
[t=0.00235783s, 25180 KB] done reading input!
[t=0.00328437s, 25444 KB] Initializing landmark count heuristic...
[t=0.00332096s, 25444 KB] Generating landmark graph...
[t=0.00338168s, 25576 KB] Building a landmark graph with reasonable orders.
[t=0.00343368s, 25576 KB] Initializing Exploration...
[t=0.00367231s, 25744 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0124874s, 26272 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.01257s, 26272 KB] Landmarks generation time: 0.00920259s
[t=0.0125989s, 26272 KB] Discovered 97 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0126192s, 26272 KB] 649 edges
[t=0.0126301s, 26272 KB] approx. reasonable orders
[t=0.0171406s, 26272 KB] approx. obedient reasonable orders
[t=0.0176774s, 26272 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0177286s, 26272 KB] Landmarks generation time: 0.0144065s
[t=0.0177434s, 26272 KB] Discovered 97 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0177559s, 26272 KB] 742 edges
[t=0.0177675s, 26272 KB] Landmark graph generation time: 0.0144538s
[t=0.0177769s, 26272 KB] Landmark graph contains 97 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0177853s, 26272 KB] Landmark graph contains 742 orderings.
[t=0.0186103s, 26420 KB] Simplifying 3160 unary operators... done! [2400 unary operators]
[t=0.0194975s, 26420 KB] time to simplify: 0.000942718s
[t=0.0196033s, 26420 KB] Initializing additive heuristic...
[t=0.0196171s, 26420 KB] Initializing FF heuristic...
[t=0.0196741s, 26420 KB] Building successor generator...done!
[t=0.0198758s, 26420 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0198853s, 26420 KB] time for successor generation creation: 0.000167136s
[t=0.0198985s, 26420 KB] Variables: 41
[t=0.0199078s, 26420 KB] FactPairs: 462
[t=0.0199166s, 26420 KB] Bytes per state: 16
[t=0.0200132s, 26420 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0200481s, 26420 KB] 41 initial landmarks, 19 goal landmarks
[t=0.0200971s, 26420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0201068s, 26420 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0201155s, 26420 KB] g=0, 1 evaluated, 0 expanded
[t=0.0201289s, 26420 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0201382s, 26420 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0201749s, 26420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0201846s, 26420 KB] g=1, 2 evaluated, 1 expanded
[t=0.0203096s, 26420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0203193s, 26420 KB] g=4, 7 evaluated, 6 expanded
[t=0.0204591s, 26420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0204682s, 26420 KB] g=6, 13 evaluated, 12 expanded
[t=0.0206298s, 26420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0206389s, 26420 KB] g=8, 20 evaluated, 19 expanded
[t=0.0208205s, 26420 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0208297s, 26420 KB] g=6, 28 evaluated, 27 expanded
[t=0.0208611s, 26420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0208699s, 26420 KB] g=10, 29 evaluated, 28 expanded
[t=0.0211176s, 26420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0211272s, 26420 KB] g=12, 40 evaluated, 39 expanded
[t=0.021349s, 26420 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0213585s, 26420 KB] g=10, 50 evaluated, 49 expanded
[t=0.0214947s, 26420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0215037s, 26420 KB] g=14, 56 evaluated, 55 expanded
[t=0.0218799s, 26420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0218896s, 26420 KB] g=16, 73 evaluated, 72 expanded
[t=0.0222896s, 26420 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0223065s, 26420 KB] g=16, 91 evaluated, 90 expanded
[t=0.0223378s, 26420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0223466s, 26420 KB] g=18, 92 evaluated, 91 expanded
[t=0.0226832s, 26420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0226924s, 26420 KB] g=20, 108 evaluated, 107 expanded
[t=0.0232522s, 26420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0232629s, 26420 KB] g=22, 134 evaluated, 133 expanded
[t=0.0236995s, 26420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0237096s, 26420 KB] g=24, 154 evaluated, 153 expanded
[t=0.0238498s, 26420 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0238587s, 26420 KB] g=22, 160 evaluated, 159 expanded
[t=0.0242173s, 26420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0242262s, 26420 KB] g=26, 177 evaluated, 176 expanded
[t=0.024845s, 26420 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0248546s, 26420 KB] g=28, 206 evaluated, 205 expanded
[t=0.0250855s, 26420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0250955s, 26420 KB] g=28, 216 evaluated, 215 expanded
[t=0.0251949s, 26420 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0252049s, 26420 KB] g=30, 220 evaluated, 219 expanded
[t=0.0255322s, 26420 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0255415s, 26420 KB] g=32, 235 evaluated, 234 expanded
[t=0.0260665s, 26420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0260774s, 26420 KB] g=30, 258 evaluated, 257 expanded
[t=0.0271536s, 26420 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.027166s, 26420 KB] g=38, 307 evaluated, 306 expanded
[t=0.029136s, 26420 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0291531s, 26420 KB] g=46, 401 evaluated, 400 expanded
[t=0.0294766s, 26420 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0294862s, 26420 KB] g=48, 416 evaluated, 415 expanded
[t=0.0300776s, 26420 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0300909s, 26420 KB] g=52, 443 evaluated, 442 expanded
[t=0.0304197s, 26420 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0304295s, 26420 KB] g=54, 457 evaluated, 456 expanded
[t=0.0306823s, 26420 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0306913s, 26420 KB] g=56, 468 evaluated, 467 expanded
[t=0.0308973s, 26420 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0309075s, 26420 KB] g=58, 477 evaluated, 476 expanded
[t=0.0323198s, 26420 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0323388s, 26420 KB] g=64, 539 evaluated, 538 expanded
[t=0.0392321s, 26420 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0392712s, 26420 KB] g=78, 858 evaluated, 857 expanded
[t=0.0432456s, 26420 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0432614s, 26420 KB] g=88, 1043 evaluated, 1042 expanded
[t=0.0559049s, 26420 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.055935s, 26420 KB] g=106, 1639 evaluated, 1638 expanded
[t=0.064514s, 26420 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0645309s, 26420 KB] g=124, 2046 evaluated, 2045 expanded
[t=0.0646938s, 26420 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.064705s, 26420 KB] g=126, 2053 evaluated, 2052 expanded
[t=0.0656729s, 26420 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0656844s, 26420 KB] g=134, 2098 evaluated, 2097 expanded
[t=0.0657829s, 26420 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0657947s, 26420 KB] g=134, 2102 evaluated, 2101 expanded
[t=0.0658676s, 26420 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0658779s, 26420 KB] g=136, 2105 evaluated, 2104 expanded
[t=0.0659312s, 26420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0659415s, 26420 KB] g=137, 2107 evaluated, 2106 expanded
[t=0.066037s, 26420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0660546s, 26420 KB] g=141, 2111 evaluated, 2110 expanded
[t=0.0661065s, 26420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0661164s, 26420 KB] g=143, 2113 evaluated, 2112 expanded
[t=0.0662675s, 26420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0662777s, 26420 KB] g=145, 2120 evaluated, 2119 expanded
[t=0.0665388s, 26420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0665483s, 26420 KB] g=147, 2132 evaluated, 2131 expanded
[t=0.0666822s, 26420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0666921s, 26420 KB] g=149, 2138 evaluated, 2137 expanded
[t=0.0668321s, 26420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0668416s, 26420 KB] g=151, 2144 evaluated, 2143 expanded
[t=0.0669772s, 26420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0669889s, 26420 KB] g=153, 2150 evaluated, 2149 expanded
[t=0.0672184s, 26420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0672335s, 26420 KB] g=155, 2161 evaluated, 2160 expanded
[t=0.0675339s, 26420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0675447s, 26420 KB] g=157, 2176 evaluated, 2175 expanded
[t=0.0677543s, 26420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0677648s, 26420 KB] g=159, 2187 evaluated, 2186 expanded
[t=0.0682622s, 26420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.068273s, 26420 KB] g=161, 2214 evaluated, 2213 expanded
[t=0.0686355s, 26420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0686477s, 26420 KB] g=162, 2233 evaluated, 2232 expanded
[t=0.0688437s, 26420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0688538s, 26420 KB] g=163, 2244 evaluated, 2243 expanded
[t=0.0694688s, 26420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0694806s, 26420 KB] g=164, 2277 evaluated, 2276 expanded
[t=0.0697068s, 26420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0697173s, 26420 KB] g=165, 2290 evaluated, 2289 expanded
[t=0.0699316s, 26420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0699453s, 26420 KB] g=166, 2302 evaluated, 2301 expanded
[t=0.0701385s, 26420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0701487s, 26420 KB] g=167, 2312 evaluated, 2311 expanded
[t=0.070402s, 26420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0704122s, 26420 KB] g=168, 2327 evaluated, 2326 expanded
[t=0.0705568s, 26420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0705672s, 26420 KB] g=169, 2336 evaluated, 2335 expanded
[t=0.0707857s, 26420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0707952s, 26420 KB] g=170, 2351 evaluated, 2350 expanded
[t=0.0709675s, 26420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0709772s, 26420 KB] g=171, 2363 evaluated, 2362 expanded
[t=0.0710907s, 26420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0711008s, 26420 KB] g=172, 2371 evaluated, 2370 expanded
[t=0.0711717s, 26420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0711804s, 26420 KB] g=173, 2376 evaluated, 2375 expanded
[t=0.0712024s, 26420 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.071211s, 26420 KB] g=174, 2377 evaluated, 2376 expanded
[t=0.0713332s, 26420 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0713431s, 26420 KB] g=176, 2386 evaluated, 2385 expanded
[t=0.0714552s, 26420 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0714638s, 26420 KB] g=178, 2394 evaluated, 2393 expanded
[t=0.0714864s, 26420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0714956s, 26420 KB] g=174, 2395 evaluated, 2394 expanded
[t=0.0716049s, 26420 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0716145s, 26420 KB] g=180, 2403 evaluated, 2402 expanded
[t=0.0716348s, 26420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0716438s, 26420 KB] g=175, 2404 evaluated, 2403 expanded
[t=0.0717276s, 26420 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0717376s, 26420 KB] g=180, 2410 evaluated, 2409 expanded
[t=0.0718217s, 26420 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0718318s, 26420 KB] g=182, 2416 evaluated, 2415 expanded
[t=0.0718785s, 26420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0718872s, 26420 KB] g=176, 2418 evaluated, 2417 expanded
[t=0.0719675s, 26420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0719775s, 26420 KB] g=177, 2424 evaluated, 2423 expanded
[t=0.0721446s, 26420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0721534s, 26420 KB] g=178, 2437 evaluated, 2436 expanded
[t=0.072176s, 26420 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0721861s, 26420 KB] g=188, 2438 evaluated, 2437 expanded
[t=0.0722372s, 26420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0722456s, 26420 KB] g=179, 2442 evaluated, 2441 expanded
[t=0.0722983s, 26420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0723103s, 26420 KB] g=180, 2446 evaluated, 2445 expanded
[t=0.0723502s, 26420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0723587s, 26420 KB] g=181, 2449 evaluated, 2448 expanded
[t=0.072378s, 26420 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0723866s, 26420 KB] g=182, 2450 evaluated, 2449 expanded
[t=0.0724173s, 26420 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0724273s, 26420 KB] g=184, 2452 evaluated, 2451 expanded
[t=0.0724458s, 26420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0724543s, 26420 KB] g=185, 2453 evaluated, 2452 expanded
[t=0.0725033s, 26420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.072512s, 26420 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0725203s, 26420 KB] g=188, 2456 evaluated, 2455 expanded
[t=0.0725367s, 26420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0725468s, 26420 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0725553s, 26420 KB] g=189, 2457 evaluated, 2456 expanded
[t=0.0725696s, 26420 KB] Solution found!
[t=0.0725838s, 26420 KB] Actual search time: 0.0525325s
unstack b3 b6 (1)
put-down b3 (1)
unstack b6 b19 (1)
put-down b6 (1)
unstack b9 b18 (1)
stack b9 b19 (1)
unstack b18 b7 (1)
put-down b18 (1)
unstack b7 b11 (1)
stack b7 b18 (1)
unstack b11 b5 (1)
put-down b11 (1)
unstack b5 b17 (1)
put-down b5 (1)
pick-up b3 (1)
stack b3 b17 (1)
unstack b9 b19 (1)
put-down b9 (1)
unstack b19 b15 (1)
stack b19 b11 (1)
pick-up b9 (1)
stack b9 b19 (1)
unstack b15 b13 (1)
put-down b15 (1)
unstack b13 b20 (1)
put-down b13 (1)
unstack b20 b4 (1)
stack b20 b5 (1)
pick-up b15 (1)
stack b15 b4 (1)
pick-up b6 (1)
stack b6 b20 (1)
unstack b3 b17 (1)
put-down b3 (1)
pick-up b17 (1)
stack b17 b13 (1)
pick-up b3 (1)
stack b3 b17 (1)
unstack b15 b4 (1)
put-down b15 (1)
unstack b4 b12 (1)
put-down b4 (1)
unstack b12 b16 (1)
stack b12 b6 (1)
unstack b16 b8 (1)
put-down b16 (1)
pick-up b15 (1)
stack b15 b4 (1)
unstack b8 b2 (1)
put-down b8 (1)
unstack b2 b10 (1)
stack b2 b7 (1)
unstack b10 b14 (1)
stack b10 b15 (1)
unstack b14 b1 (1)
stack b14 b8 (1)
pick-up b1 (1)
stack b1 b9 (1)
unstack b14 b8 (1)
put-down b14 (1)
pick-up b8 (1)
stack b8 b1 (1)
pick-up b14 (1)
stack b14 b8 (1)
unstack b10 b15 (1)
put-down b10 (1)
unstack b15 b4 (1)
put-down b15 (1)
pick-up b10 (1)
stack b10 b15 (1)
pick-up b4 (1)
stack b4 b2 (1)
unstack b10 b15 (1)
put-down b10 (1)
pick-up b15 (1)
stack b15 b4 (1)
pick-up b10 (1)
stack b10 b15 (1)
unstack b12 b6 (1)
put-down b12 (1)
unstack b6 b20 (1)
put-down b6 (1)
pick-up b12 (1)
stack b12 b6 (1)
unstack b20 b5 (1)
put-down b20 (1)
pick-up b5 (1)
stack b5 b10 (1)
pick-up b20 (1)
stack b20 b5 (1)
unstack b12 b6 (1)
put-down b12 (1)
pick-up b6 (1)
stack b6 b20 (1)
pick-up b12 (1)
stack b12 b6 (1)
unstack b3 b17 (1)
put-down b3 (1)
unstack b17 b13 (1)
put-down b17 (1)
pick-up b13 (1)
stack b13 b12 (1)
pick-up b17 (1)
stack b17 b13 (1)
pick-up b3 (1)
stack b3 b17 (1)
unstack b14 b8 (1)
put-down b14 (1)
unstack b8 b1 (1)
put-down b8 (1)
unstack b1 b9 (1)
put-down b1 (1)
pick-up b8 (1)
stack b8 b1 (1)
pick-up b14 (1)
stack b14 b8 (1)
unstack b9 b19 (1)
put-down b9 (1)
unstack b19 b11 (1)
put-down b19 (1)
pick-up b11 (1)
stack b11 b16 (1)
pick-up b19 (1)
stack b19 b11 (1)
pick-up b9 (1)
stack b9 b19 (1)
unstack b14 b8 (1)
put-down b14 (1)
unstack b8 b1 (1)
put-down b8 (1)
pick-up b1 (1)
stack b1 b9 (1)
pick-up b8 (1)
stack b8 b1 (1)
pick-up b14 (1)
stack b14 b8 (1)
unstack b3 b17 (1)
put-down b3 (1)
unstack b17 b13 (1)
put-down b17 (1)
unstack b13 b12 (1)
put-down b13 (1)
unstack b12 b6 (1)
put-down b12 (1)
unstack b6 b20 (1)
put-down b6 (1)
unstack b20 b5 (1)
put-down b20 (1)
unstack b5 b10 (1)
put-down b5 (1)
unstack b10 b15 (1)
put-down b10 (1)
unstack b15 b4 (1)
put-down b15 (1)
unstack b4 b2 (1)
put-down b4 (1)
unstack b2 b7 (1)
put-down b2 (1)
unstack b7 b18 (1)
put-down b7 (1)
pick-up b18 (1)
stack b18 b14 (1)
pick-up b7 (1)
stack b7 b18 (1)
pick-up b2 (1)
stack b2 b7 (1)
pick-up b4 (1)
stack b4 b2 (1)
pick-up b15 (1)
stack b15 b4 (1)
pick-up b10 (1)
stack b10 b15 (1)
pick-up b5 (1)
stack b5 b10 (1)
pick-up b20 (1)
stack b20 b5 (1)
pick-up b6 (1)
stack b6 b20 (1)
pick-up b12 (1)
stack b12 b6 (1)
pick-up b3 (1)
stack b3 b17 (1)
pick-up b13 (1)
stack b13 b12 (1)
unstack b3 b17 (1)
put-down b3 (1)
pick-up b17 (1)
stack b17 b13 (1)
pick-up b3 (1)
stack b3 b17 (1)
[t=0.0725932s, 26420 KB] Plan length: 190 step(s).
[t=0.0725932s, 26420 KB] Plan cost: 190
[t=0.0725932s, 26420 KB] Expanded 2457 state(s).
[t=0.0725932s, 26420 KB] Reopened 0 state(s).
[t=0.0725932s, 26420 KB] Evaluated 2458 state(s).
[t=0.0725932s, 26420 KB] Evaluations: 4916
[t=0.0725932s, 26420 KB] Generated 20805 state(s).
[t=0.0725932s, 26420 KB] Dead ends: 0 state(s).
[t=0.0725932s, 26420 KB] Number of registered states: 2458
[t=0.0725932s, 26420 KB] Int hash set load factor: 2458/4096 = 0.600098
[t=0.0725932s, 26420 KB] Int hash set resizes: 12
[t=0.0725932s, 26420 KB] Search time: 0.0525804s
[t=0.0725932s, 26420 KB] Total time: 0.0725932s
Solution found.
Peak memory: 26420 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.20s
