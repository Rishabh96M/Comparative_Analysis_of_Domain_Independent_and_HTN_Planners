INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_21/bws_problem_21_3.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.009s wall-clock]
1472 relevant atoms
987 auxiliary atoms
2459 final queue length
4268 total queue pushes
Completing instantiation... [0.010s CPU, 0.015s wall-clock]
Instantiating: [0.020s CPU, 0.026s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
22 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.006s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.023s wall-clock]
1302 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
42 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.011s wall-clock]
Reordering and filtering variables...
43 of 43 variables necessary.
22 of 43 mutex groups necessary.
882 of 882 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.005s wall-clock]
Translator variables: 43
Translator derived variables: 0
Translator facts: 506
Translator goal facts: 18
Translator mutex groups: 22
Translator total mutex groups size: 484
Translator operators: 882
Translator axioms: 0
Translator task size: 7603
Translator peak memory: 36452 KB
Writing output... [0.010s CPU, 0.005s wall-clock]
Done! [0.080s CPU, 0.083s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=1.8744e-05s, 24488 KB] reading input...
[t=0.00246995s, 25268 KB] done reading input!
[t=0.00335857s, 25664 KB] Initializing landmark count heuristic...
[t=0.00339037s, 25664 KB] Generating landmark graph...
[t=0.00344733s, 25664 KB] Building a landmark graph with reasonable orders.
[t=0.00350136s, 25664 KB] Initializing Exploration...
[t=0.00375807s, 25852 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0127457s, 26384 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0128231s, 26384 KB] Landmarks generation time: 0.00937747s
[t=0.0128386s, 26384 KB] Discovered 91 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0128546s, 26384 KB] 401 edges
[t=0.0128648s, 26384 KB] approx. reasonable orders
[t=0.0151853s, 26384 KB] approx. obedient reasonable orders
[t=0.0152162s, 26384 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0152269s, 26384 KB] Landmarks generation time: 0.0118431s
[t=0.0152461s, 26384 KB] Discovered 91 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0152537s, 26384 KB] 455 edges
[t=0.0152616s, 26384 KB] Landmark graph generation time: 0.0118781s
[t=0.0152699s, 26384 KB] Landmark graph contains 91 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0152784s, 26384 KB] Landmark graph contains 455 orderings.
[t=0.0155788s, 26384 KB] Simplifying 3486 unary operators... done! [2646 unary operators]
[t=0.0164326s, 26384 KB] time to simplify: 0.000913173s
[t=0.0165473s, 26384 KB] Initializing additive heuristic...
[t=0.0165612s, 26384 KB] Initializing FF heuristic...
[t=0.0166154s, 26384 KB] Building successor generator...done!
[t=0.0168011s, 26384 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0168107s, 26384 KB] time for successor generation creation: 0.000152982s
[t=0.0168241s, 26384 KB] Variables: 43
[t=0.0168325s, 26384 KB] FactPairs: 506
[t=0.0168412s, 26384 KB] Bytes per state: 16
[t=0.0169663s, 26384 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0170088s, 26384 KB] 40 initial landmarks, 18 goal landmarks
[t=0.017078s, 26384 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0170876s, 26384 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0170958s, 26384 KB] g=0, 1 evaluated, 0 expanded
[t=0.0171092s, 26384 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0171179s, 26384 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0172267s, 26384 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.017237s, 26384 KB] g=2, 5 evaluated, 4 expanded
[t=0.0172929s, 26384 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.017302s, 26384 KB] g=2, 7 evaluated, 6 expanded
[t=0.0174226s, 26384 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0174322s, 26384 KB] g=4, 12 evaluated, 11 expanded
[t=0.017555s, 26384 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0175648s, 26384 KB] g=5, 17 evaluated, 16 expanded
[t=0.0178595s, 26384 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0178884s, 26384 KB] g=8, 30 evaluated, 29 expanded
[t=0.0180132s, 26384 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0180248s, 26384 KB] g=6, 35 evaluated, 34 expanded
[t=0.0183907s, 26384 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0184119s, 26384 KB] g=10, 47 evaluated, 46 expanded
[t=0.0187278s, 26384 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0187406s, 26384 KB] g=12, 60 evaluated, 59 expanded
[t=0.0192166s, 26384 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0192481s, 26384 KB] g=14, 78 evaluated, 77 expanded
[t=0.0197619s, 26384 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0197798s, 26384 KB] g=16, 100 evaluated, 99 expanded
[t=0.020156s, 26384 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0201939s, 26384 KB] g=18, 116 evaluated, 115 expanded
[t=0.0203943s, 26384 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0204059s, 26384 KB] g=19, 124 evaluated, 123 expanded
[t=0.0210018s, 26384 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0210197s, 26384 KB] g=22, 149 evaluated, 148 expanded
[t=0.0213179s, 26384 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0213287s, 26384 KB] g=12, 162 evaluated, 161 expanded
[t=0.0216886s, 26384 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0216991s, 26384 KB] g=24, 178 evaluated, 177 expanded
[t=0.0222454s, 26384 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0222592s, 26384 KB] g=26, 203 evaluated, 202 expanded
[t=0.0227623s, 26384 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0227752s, 26384 KB] g=28, 226 evaluated, 225 expanded
[t=0.0234455s, 26384 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0234622s, 26384 KB] g=30, 251 evaluated, 250 expanded
[t=0.0239994s, 26384 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0240149s, 26384 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0240235s, 26384 KB] g=32, 274 evaluated, 273 expanded
[t=0.0243257s, 26384 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0243378s, 26384 KB] g=34, 287 evaluated, 286 expanded
[t=0.0247614s, 26384 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0247747s, 26384 KB] g=36, 304 evaluated, 303 expanded
[t=0.0252435s, 26384 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.025255s, 26384 KB] g=38, 324 evaluated, 323 expanded
[t=0.0254495s, 26384 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0254592s, 26384 KB] g=34, 332 evaluated, 331 expanded
[t=0.0256168s, 26384 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0256262s, 26384 KB] g=40, 339 evaluated, 338 expanded
[t=0.0259917s, 26384 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0260041s, 26384 KB] g=36, 355 evaluated, 354 expanded
[t=0.0260793s, 26384 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.026088s, 26384 KB] g=42, 358 evaluated, 357 expanded
[t=0.0264779s, 26384 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0264901s, 26384 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.026498s, 26384 KB] g=38, 375 evaluated, 374 expanded
[t=0.0267349s, 26384 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0267488s, 26384 KB] g=40, 385 evaluated, 384 expanded
[t=0.0270437s, 26384 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0270535s, 26384 KB] g=42, 398 evaluated, 397 expanded
[t=0.0273746s, 26384 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0273837s, 26384 KB] g=44, 412 evaluated, 411 expanded
[t=0.0282576s, 26384 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.028271s, 26384 KB] g=43, 447 evaluated, 446 expanded
[t=0.0283284s, 26384 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0283451s, 26384 KB] g=44, 449 evaluated, 448 expanded
[t=0.0288242s, 26384 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0288956s, 26384 KB] g=46, 470 evaluated, 469 expanded
[t=0.0292345s, 26384 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0292445s, 26384 KB] g=50, 484 evaluated, 483 expanded
[t=0.0299109s, 26384 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.029921s, 26384 KB] g=50, 514 evaluated, 513 expanded
[t=0.0305583s, 26384 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0305694s, 26384 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0305781s, 26384 KB] g=52, 544 evaluated, 543 expanded
[t=0.0307973s, 26384 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.030806s, 26384 KB] g=54, 554 evaluated, 553 expanded
[t=0.0311341s, 26384 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0311429s, 26384 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0311505s, 26384 KB] g=54, 570 evaluated, 569 expanded
[t=0.0313329s, 26384 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0313413s, 26384 KB] g=56, 579 evaluated, 578 expanded
[t=0.0313957s, 26384 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0314044s, 26384 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0314122s, 26384 KB] g=56, 581 evaluated, 580 expanded
[t=0.0315607s, 26384 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0315694s, 26384 KB] g=58, 589 evaluated, 588 expanded
[t=0.0317205s, 26384 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0317296s, 26384 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0317377s, 26384 KB] g=58, 597 evaluated, 596 expanded
[t=0.0318669s, 26384 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0318756s, 26384 KB] g=60, 604 evaluated, 603 expanded
[t=0.0320226s, 26384 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.032032s, 26384 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0320404s, 26384 KB] g=60, 612 evaluated, 611 expanded
[t=0.0321479s, 26384 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0321567s, 26384 KB] g=62, 618 evaluated, 617 expanded
[t=0.0321984s, 26384 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0322072s, 26384 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0322152s, 26384 KB] g=62, 620 evaluated, 619 expanded
[t=0.0323028s, 26384 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0323117s, 26384 KB] g=64, 625 evaluated, 624 expanded
[t=0.0323513s, 26384 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0323599s, 26384 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0323678s, 26384 KB] g=64, 627 evaluated, 626 expanded
[t=0.0324362s, 26384 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0324448s, 26384 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0324528s, 26384 KB] g=66, 631 evaluated, 630 expanded
[t=0.0325951s, 26384 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0326046s, 26384 KB] g=70, 640 evaluated, 639 expanded
[t=0.0326551s, 26384 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0326639s, 26384 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0326722s, 26384 KB] g=72, 643 evaluated, 642 expanded
[t=0.0328151s, 26384 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0328244s, 26384 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0328378s, 26384 KB] g=80, 654 evaluated, 653 expanded
[t=0.0328592s, 26384 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0328684s, 26384 KB] g=80, 655 evaluated, 654 expanded
[t=0.032885s, 26384 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0328936s, 26384 KB] g=81, 656 evaluated, 655 expanded
[t=0.0329083s, 26384 KB] Solution found!
[t=0.0329207s, 26384 KB] Actual search time: 0.015926s
unstack b10 b1 (1)
put-down b10 (1)
unstack b1 b19 (1)
put-down b1 (1)
unstack b19 b20 (1)
put-down b19 (1)
unstack b20 b8 (1)
put-down b20 (1)
unstack b5 b16 (1)
put-down b5 (1)
unstack b16 b12 (1)
put-down b16 (1)
unstack b12 b3 (1)
put-down b12 (1)
unstack b6 b15 (1)
put-down b6 (1)
unstack b15 b13 (1)
put-down b15 (1)
unstack b13 b18 (1)
put-down b13 (1)
unstack b18 b21 (1)
put-down b18 (1)
unstack b21 b7 (1)
put-down b21 (1)
pick-up b13 (1)
stack b13 b7 (1)
unstack b8 b11 (1)
stack b8 b5 (1)
pick-up b19 (1)
stack b19 b8 (1)
unstack b11 b4 (1)
put-down b11 (1)
pick-up b3 (1)
stack b3 b4 (1)
pick-up b1 (1)
stack b1 b3 (1)
pick-up b12 (1)
stack b12 b1 (1)
unstack b13 b7 (1)
put-down b13 (1)
unstack b7 b17 (1)
put-down b7 (1)
unstack b17 b2 (1)
stack b17 b11 (1)
unstack b2 b14 (1)
stack b2 b12 (1)
unstack b14 b9 (1)
put-down b14 (1)
pick-up b13 (1)
stack b13 b7 (1)
pick-up b18 (1)
stack b18 b2 (1)
pick-up b6 (1)
stack b6 b18 (1)
pick-up b14 (1)
stack b14 b6 (1)
pick-up b20 (1)
stack b20 b14 (1)
pick-up b21 (1)
stack b21 b20 (1)
pick-up b15 (1)
stack b15 b21 (1)
pick-up b16 (1)
stack b16 b15 (1)
pick-up b10 (1)
stack b10 b16 (1)
unstack b13 b7 (1)
put-down b13 (1)
pick-up b7 (1)
stack b7 b17 (1)
pick-up b13 (1)
stack b13 b7 (1)
unstack b19 b8 (1)
put-down b19 (1)
unstack b8 b5 (1)
put-down b8 (1)
pick-up b5 (1)
stack b5 b10 (1)
pick-up b8 (1)
stack b8 b5 (1)
pick-up b19 (1)
stack b19 b8 (1)
[t=0.0329471s, 26384 KB] Plan length: 82 step(s).
[t=0.0329471s, 26384 KB] Plan cost: 82
[t=0.0329471s, 26384 KB] Expanded 656 state(s).
[t=0.0329471s, 26384 KB] Reopened 0 state(s).
[t=0.0329471s, 26384 KB] Evaluated 657 state(s).
[t=0.0329471s, 26384 KB] Evaluations: 1314
[t=0.0329471s, 26384 KB] Generated 6724 state(s).
[t=0.0329471s, 26384 KB] Dead ends: 0 state(s).
[t=0.0329471s, 26384 KB] Number of registered states: 657
[t=0.0329471s, 26384 KB] Int hash set load factor: 657/1024 = 0.641602
[t=0.0329471s, 26384 KB] Int hash set resizes: 10
[t=0.0329471s, 26384 KB] Search time: 0.0159813s
[t=0.0329471s, 26384 KB] Total time: 0.0329471s
Solution found.
Peak memory: 26384 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.16s
