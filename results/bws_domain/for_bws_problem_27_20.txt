INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_27/bws_problem_27_20.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.014s wall-clock]
2378 relevant atoms
1593 auxiliary atoms
3971 final queue length
6948 total queue pushes
Completing instantiation... [0.030s CPU, 0.024s wall-clock]
Instantiating: [0.040s CPU, 0.040s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
28 uncovered facts
Choosing groups: [0.000s CPU, 0.002s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.009s wall-clock]
Building STRIPS to SAS dictionary... [0.010s CPU, 0.001s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.040s CPU, 0.041s wall-clock]
2160 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
54 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.018s wall-clock]
Reordering and filtering variables...
55 of 55 variables necessary.
28 of 55 mutex groups necessary.
1458 of 1458 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.009s wall-clock]
Translator variables: 55
Translator derived variables: 0
Translator facts: 812
Translator goal facts: 22
Translator mutex groups: 28
Translator total mutex groups size: 784
Translator operators: 1458
Translator axioms: 0
Translator task size: 12527
Translator peak memory: 39544 KB
Writing output... [0.010s CPU, 0.011s wall-clock]
Done! [0.130s CPU, 0.133s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=3.4764e-05s, 24488 KB] reading input...
[t=0.00456251s, 25936 KB] done reading input!
[t=0.00544226s, 26332 KB] Initializing landmark count heuristic...
[t=0.00547432s, 26332 KB] Generating landmark graph...
[t=0.00558591s, 26332 KB] Building a landmark graph with reasonable orders.
[t=0.00567131s, 26464 KB] Initializing Exploration...
[t=0.00609615s, 26732 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0229684s, 27392 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.023059s, 27392 KB] Landmarks generation time: 0.0174775s
[t=0.0230805s, 27392 KB] Discovered 114 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0230967s, 27392 KB] 363 edges
[t=0.0231063s, 27392 KB] approx. reasonable orders
[t=0.0251567s, 27392 KB] approx. obedient reasonable orders
[t=0.0251953s, 27392 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0252062s, 27392 KB] Landmarks generation time: 0.0197258s
[t=0.0252156s, 27392 KB] Discovered 114 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0252237s, 27392 KB] 389 edges
[t=0.0252338s, 27392 KB] Landmark graph generation time: 0.0197793s
[t=0.0252553s, 27392 KB] Landmark graph contains 114 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0252638s, 27392 KB] Landmark graph contains 389 orderings.
[t=0.0258532s, 27576 KB] Simplifying 5778 unary operators... done! [4374 unary operators]
[t=0.0272773s, 27576 KB] time to simplify: 0.00152293s
[t=0.0274798s, 27576 KB] Initializing additive heuristic...
[t=0.0274984s, 27576 KB] Initializing FF heuristic...
[t=0.0275711s, 27576 KB] Building successor generator...done!
[t=0.0278627s, 27576 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0278729s, 27576 KB] time for successor generation creation: 0.000252405s
[t=0.027891s, 27576 KB] Variables: 55
[t=0.0278994s, 27576 KB] FactPairs: 812
[t=0.0279083s, 27576 KB] Bytes per state: 24
[t=0.028036s, 27576 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0280732s, 27576 KB] 52 initial landmarks, 22 goal landmarks
[t=0.0281447s, 27576 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 62
[t=0.0281551s, 27576 KB] New best heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0281634s, 27576 KB] g=0, 1 evaluated, 0 expanded
[t=0.028179s, 27576 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 62
[t=0.0281875s, 27576 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0282354s, 27576 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 61
[t=0.0282449s, 27576 KB] g=1, 2 evaluated, 1 expanded
[t=0.0284629s, 27576 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 60
[t=0.0284758s, 27576 KB] g=3, 8 evaluated, 7 expanded
[t=0.0288702s, 27576 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.0288815s, 27576 KB] g=5, 19 evaluated, 18 expanded
[t=0.029315s, 27576 KB] New best heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.0293456s, 27576 KB] g=4, 30 evaluated, 29 expanded
[t=0.0297968s, 27576 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 58
[t=0.0298095s, 27576 KB] g=8, 43 evaluated, 42 expanded
[t=0.0305611s, 27576 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 57
[t=0.0305745s, 27576 KB] g=10, 64 evaluated, 63 expanded
[t=0.031378s, 27576 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0313933s, 27576 KB] g=12, 87 evaluated, 86 expanded
[t=0.031613s, 27576 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0316241s, 27576 KB] g=13, 93 evaluated, 92 expanded
[t=0.032513s, 27576 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0325267s, 27576 KB] g=16, 119 evaluated, 118 expanded
[t=0.0332927s, 27576 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0333052s, 27576 KB] g=18, 141 evaluated, 140 expanded
[t=0.033755s, 27576 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0337656s, 27576 KB] g=8, 153 evaluated, 152 expanded
[t=0.0342461s, 27576 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0342631s, 27576 KB] g=20, 166 evaluated, 165 expanded
[t=0.0348833s, 27576 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0348941s, 27576 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0349021s, 27576 KB] g=22, 184 evaluated, 183 expanded
[t=0.035379s, 27576 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0353925s, 27576 KB] g=24, 197 evaluated, 196 expanded
[t=0.0355011s, 27576 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0355105s, 27576 KB] g=24, 200 evaluated, 199 expanded
[t=0.0362369s, 27576 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0362482s, 27576 KB] g=26, 222 evaluated, 221 expanded
[t=0.0363267s, 27576 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0363358s, 27576 KB] g=26, 224 evaluated, 223 expanded
[t=0.037065s, 27576 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0370755s, 27576 KB] g=28, 246 evaluated, 245 expanded
[t=0.0371219s, 27576 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0371308s, 27576 KB] g=28, 247 evaluated, 246 expanded
[t=0.0379638s, 27576 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0379776s, 27576 KB] g=30, 271 evaluated, 270 expanded
[t=0.0380249s, 27576 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0380341s, 27576 KB] g=30, 272 evaluated, 271 expanded
[t=0.0380767s, 27576 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0380853s, 27576 KB] g=31, 273 evaluated, 272 expanded
[t=0.0387846s, 27576 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0387941s, 27576 KB] g=32, 294 evaluated, 293 expanded
[t=0.0392152s, 27576 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0392281s, 27576 KB] g=34, 306 evaluated, 305 expanded
[t=0.0395345s, 27576 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0395444s, 27576 KB] g=34, 315 evaluated, 314 expanded
[t=0.0402095s, 27576 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0402209s, 27576 KB] g=36, 335 evaluated, 334 expanded
[t=0.041154s, 27576 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0411656s, 27576 KB] g=38, 363 evaluated, 362 expanded
[t=0.0422071s, 27576 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.042219s, 27576 KB] g=40, 393 evaluated, 392 expanded
[t=0.0434648s, 27576 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0434747s, 27576 KB] g=42, 431 evaluated, 430 expanded
[t=0.0439329s, 27576 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0439436s, 27576 KB] g=44, 445 evaluated, 444 expanded
[t=0.0443807s, 27576 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0443931s, 27576 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0444195s, 27576 KB] g=44, 457 evaluated, 456 expanded
[t=0.0448593s, 27576 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0448695s, 27576 KB] g=46, 470 evaluated, 469 expanded
[t=0.044957s, 27576 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0449695s, 27576 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0449781s, 27576 KB] g=46, 472 evaluated, 471 expanded
[t=0.0454219s, 27576 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0454355s, 27576 KB] g=48, 484 evaluated, 483 expanded
[t=0.0457453s, 27576 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0457554s, 27576 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.04577s, 27576 KB] g=48, 493 evaluated, 492 expanded
[t=0.0461747s, 27576 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0461865s, 27576 KB] g=50, 504 evaluated, 503 expanded
[t=0.0464013s, 27576 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0464107s, 27576 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0464196s, 27576 KB] g=50, 510 evaluated, 509 expanded
[t=0.0467929s, 27576 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0468046s, 27576 KB] g=52, 520 evaluated, 519 expanded
[t=0.0470177s, 27576 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0470335s, 27576 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0470429s, 27576 KB] g=52, 526 evaluated, 525 expanded
[t=0.0473546s, 27576 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0473666s, 27576 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0473751s, 27576 KB] g=54, 535 evaluated, 534 expanded
[t=0.0476401s, 27576 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0476539s, 27576 KB] g=56, 543 evaluated, 542 expanded
[t=0.0477391s, 27576 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0477498s, 27576 KB] g=56, 545 evaluated, 544 expanded
[t=0.0480817s, 27576 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0480935s, 27576 KB] g=58, 555 evaluated, 554 expanded
[t=0.0486097s, 27576 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0486239s, 27576 KB] g=61, 571 evaluated, 570 expanded
[t=0.0487003s, 27576 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0487099s, 27576 KB] g=62, 573 evaluated, 572 expanded
[t=0.0492229s, 27576 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0492597s, 27576 KB] g=64, 588 evaluated, 587 expanded
[t=0.0496332s, 27576 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0496484s, 27576 KB] g=64, 599 evaluated, 598 expanded
[t=0.0498214s, 27576 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0498319s, 27576 KB] g=66, 604 evaluated, 603 expanded
[t=0.0501465s, 27576 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0501583s, 27576 KB] g=66, 613 evaluated, 612 expanded
[t=0.050295s, 27576 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0503044s, 27576 KB] g=67, 617 evaluated, 616 expanded
[t=0.0503541s, 27576 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0503632s, 27576 KB] g=68, 618 evaluated, 617 expanded
[t=0.0505621s, 27576 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0505711s, 27576 KB] g=70, 624 evaluated, 623 expanded
[t=0.0506447s, 27576 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.050654s, 27576 KB] g=70, 626 evaluated, 625 expanded
[t=0.0509477s, 27576 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0509791s, 27576 KB] g=72, 634 evaluated, 633 expanded
[t=0.0510329s, 27576 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0510444s, 27576 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0510529s, 27576 KB] g=72, 635 evaluated, 634 expanded
[t=0.0512264s, 27576 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0512358s, 27576 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0512437s, 27576 KB] g=74, 640 evaluated, 639 expanded
[t=0.0513819s, 27576 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0513908s, 27576 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.051399s, 27576 KB] g=76, 644 evaluated, 643 expanded
[t=0.0524409s, 27576 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0524525s, 27576 KB] g=88, 676 evaluated, 675 expanded
[t=0.0526984s, 27576 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.052708s, 27576 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0527163s, 27576 KB] g=94, 683 evaluated, 682 expanded
[t=0.0661925s, 27576 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.066444s, 27576 KB] g=132, 1090 evaluated, 1089 expanded
[t=0.0668801s, 27576 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0669128s, 27576 KB] g=136, 1099 evaluated, 1098 expanded
[t=0.0670841s, 27576 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0671053s, 27576 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.06712s, 27576 KB] g=138, 1102 evaluated, 1101 expanded
[t=0.0695456s, 27576 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0695983s, 27576 KB] g=156, 1166 evaluated, 1165 expanded
[t=0.0696766s, 27576 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0696884s, 27576 KB] g=158, 1169 evaluated, 1168 expanded
[t=0.0699129s, 27576 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.069922s, 27576 KB] g=166, 1180 evaluated, 1179 expanded
[t=0.0699968s, 27576 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0700058s, 27576 KB] g=170, 1184 evaluated, 1183 expanded
[t=0.0700249s, 27576 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0700339s, 27576 KB] g=171, 1185 evaluated, 1184 expanded
[t=0.0700504s, 27576 KB] Solution found!
[t=0.0700726s, 27576 KB] Actual search time: 0.0419965s
unstack b12 b11 (1)
put-down b12 (1)
unstack b2 b25 (1)
put-down b2 (1)
unstack b26 b19 (1)
put-down b26 (1)
unstack b11 b9 (1)
put-down b11 (1)
unstack b21 b13 (1)
put-down b21 (1)
unstack b13 b17 (1)
put-down b13 (1)
unstack b17 b8 (1)
put-down b17 (1)
pick-up b12 (1)
stack b12 b8 (1)
unstack b23 b27 (1)
put-down b23 (1)
unstack b27 b3 (1)
stack b27 b13 (1)
unstack b5 b7 (1)
stack b5 b27 (1)
unstack b6 b4 (1)
put-down b6 (1)
unstack b7 b22 (1)
stack b7 b23 (1)
unstack b22 b15 (1)
stack b22 b19 (1)
unstack b15 b10 (1)
put-down b15 (1)
unstack b10 b20 (1)
put-down b10 (1)
pick-up b26 (1)
stack b26 b20 (1)
unstack b12 b8 (1)
put-down b12 (1)
unstack b8 b18 (1)
put-down b8 (1)
unstack b18 b16 (1)
stack b18 b9 (1)
pick-up b12 (1)
stack b12 b8 (1)
pick-up b16 (1)
stack b16 b4 (1)
pick-up b17 (1)
stack b17 b16 (1)
pick-up b21 (1)
stack b21 b18 (1)
pick-up b15 (1)
stack b15 b21 (1)
pick-up b25 (1)
stack b25 b15 (1)
pick-up b10 (1)
stack b10 b25 (1)
pick-up b3 (1)
stack b3 b5 (1)
unstack b22 b19 (1)
put-down b22 (1)
unstack b19 b1 (1)
put-down b19 (1)
unstack b1 b14 (1)
stack b1 b3 (1)
unstack b14 b24 (1)
put-down b14 (1)
pick-up b24 (1)
stack b24 b7 (1)
pick-up b2 (1)
stack b2 b24 (1)
pick-up b19 (1)
stack b19 b1 (1)
pick-up b6 (1)
stack b6 b14 (1)
pick-up b11 (1)
stack b11 b6 (1)
pick-up b22 (1)
stack b22 b19 (1)
unstack b2 b24 (1)
put-down b2 (1)
unstack b24 b7 (1)
put-down b24 (1)
pick-up b2 (1)
stack b2 b24 (1)
unstack b7 b23 (1)
put-down b7 (1)
pick-up b23 (1)
stack b23 b22 (1)
unstack b2 b24 (1)
put-down b2 (1)
pick-up b24 (1)
stack b24 b7 (1)
pick-up b2 (1)
stack b2 b24 (1)
unstack b23 b22 (1)
put-down b23 (1)
unstack b22 b19 (1)
put-down b22 (1)
unstack b19 b1 (1)
put-down b19 (1)
pick-up b22 (1)
stack b22 b19 (1)
pick-up b23 (1)
stack b23 b22 (1)
unstack b2 b24 (1)
put-down b2 (1)
unstack b24 b7 (1)
put-down b24 (1)
pick-up b2 (1)
stack b2 b24 (1)
pick-up b7 (1)
stack b7 b23 (1)
unstack b2 b24 (1)
put-down b2 (1)
pick-up b24 (1)
stack b24 b7 (1)
pick-up b2 (1)
stack b2 b24 (1)
unstack b1 b3 (1)
put-down b1 (1)
unstack b3 b5 (1)
put-down b3 (1)
pick-up b1 (1)
stack b1 b3 (1)
unstack b5 b27 (1)
put-down b5 (1)
unstack b27 b13 (1)
put-down b27 (1)
pick-up b13 (1)
stack b13 b11 (1)
pick-up b27 (1)
stack b27 b13 (1)
pick-up b5 (1)
stack b5 b27 (1)
unstack b1 b3 (1)
put-down b1 (1)
pick-up b3 (1)
stack b3 b5 (1)
pick-up b1 (1)
stack b1 b3 (1)
unstack b2 b24 (1)
put-down b2 (1)
unstack b24 b7 (1)
put-down b24 (1)
unstack b7 b23 (1)
put-down b7 (1)
pick-up b24 (1)
stack b24 b7 (1)
pick-up b2 (1)
stack b2 b24 (1)
unstack b23 b22 (1)
put-down b23 (1)
unstack b22 b19 (1)
put-down b22 (1)
pick-up b19 (1)
stack b19 b1 (1)
pick-up b22 (1)
stack b22 b19 (1)
pick-up b23 (1)
stack b23 b22 (1)
unstack b2 b24 (1)
put-down b2 (1)
unstack b24 b7 (1)
put-down b24 (1)
pick-up b2 (1)
stack b2 b24 (1)
pick-up b7 (1)
stack b7 b23 (1)
unstack b2 b24 (1)
put-down b2 (1)
pick-up b24 (1)
stack b24 b7 (1)
pick-up b2 (1)
stack b2 b24 (1)
[t=0.0700826s, 27576 KB] Plan length: 172 step(s).
[t=0.0700826s, 27576 KB] Plan cost: 172
[t=0.0700826s, 27576 KB] Expanded 1185 state(s).
[t=0.0700826s, 27576 KB] Reopened 0 state(s).
[t=0.0700826s, 27576 KB] Evaluated 1186 state(s).
[t=0.0700826s, 27576 KB] Evaluations: 2372
[t=0.0700826s, 27576 KB] Generated 13581 state(s).
[t=0.0700826s, 27576 KB] Dead ends: 0 state(s).
[t=0.0700826s, 27576 KB] Number of registered states: 1186
[t=0.0700826s, 27576 KB] Int hash set load factor: 1186/2048 = 0.579102
[t=0.0700826s, 27576 KB] Int hash set resizes: 11
[t=0.0700826s, 27576 KB] Search time: 0.0420473s
[t=0.0700826s, 27576 KB] Total time: 0.0700826s
Solution found.
Peak memory: 27576 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.25s
