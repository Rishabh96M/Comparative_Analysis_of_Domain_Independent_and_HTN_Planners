INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_23/bws_problem_23_39.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.010s wall-clock]
1750 relevant atoms
1173 auxiliary atoms
2923 final queue length
5090 total queue pushes
Completing instantiation... [0.020s CPU, 0.018s wall-clock]
Instantiating: [0.030s CPU, 0.030s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
24 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.007s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.026s wall-clock]
1564 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
46 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.012s wall-clock]
Reordering and filtering variables...
47 of 47 variables necessary.
24 of 47 mutex groups necessary.
1058 of 1058 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 47
Translator derived variables: 0
Translator facts: 600
Translator goal facts: 17
Translator mutex groups: 24
Translator total mutex groups size: 576
Translator operators: 1058
Translator axioms: 0
Translator task size: 9106
Translator peak memory: 37488 KB
Writing output... [0.000s CPU, 0.006s wall-clock]
Done! [0.090s CPU, 0.092s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=3.0721e-05s, 24488 KB] reading input...
[t=0.00343124s, 25428 KB] done reading input!
[t=0.0042996s, 25824 KB] Initializing landmark count heuristic...
[t=0.00433419s, 25824 KB] Generating landmark graph...
[t=0.00440052s, 25824 KB] Building a landmark graph with reasonable orders.
[t=0.00446453s, 25956 KB] Initializing Exploration...
[t=0.00478523s, 26256 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0159107s, 26652 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.016106s, 26652 KB] Landmarks generation time: 0.0117118s
[t=0.0161258s, 26652 KB] Discovered 96 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.016155s, 26652 KB] 399 edges
[t=0.0161676s, 26652 KB] approx. reasonable orders
[t=0.0196037s, 26652 KB] approx. obedient reasonable orders
[t=0.0197615s, 26652 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0197729s, 26652 KB] Landmarks generation time: 0.0154386s
[t=0.0197854s, 26652 KB] Discovered 96 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0197949s, 26652 KB] 466 edges
[t=0.0198049s, 26652 KB] Landmark graph generation time: 0.0154786s
[t=0.0198146s, 26652 KB] Landmark graph contains 96 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0198238s, 26652 KB] Landmark graph contains 466 orderings.
[t=0.0203885s, 26652 KB] Simplifying 4186 unary operators... done! [3174 unary operators]
[t=0.0215237s, 26652 KB] time to simplify: 0.00121677s
[t=0.0216762s, 26652 KB] Initializing additive heuristic...
[t=0.0216922s, 26652 KB] Initializing FF heuristic...
[t=0.0217876s, 26652 KB] Building successor generator...done!
[t=0.0220095s, 26652 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0220188s, 26652 KB] time for successor generation creation: 0.000188142s
[t=0.0220318s, 26652 KB] Variables: 47
[t=0.0220401s, 26652 KB] FactPairs: 600
[t=0.0220484s, 26652 KB] Bytes per state: 20
[t=0.022172s, 26652 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0222066s, 26652 KB] 44 initial landmarks, 17 goal landmarks
[t=0.0222633s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0222736s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0222826s, 26652 KB] g=0, 1 evaluated, 0 expanded
[t=0.022297s, 26652 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.022306s, 26652 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0223781s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0223877s, 26652 KB] g=1, 3 evaluated, 2 expanded
[t=0.0225934s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0226032s, 26652 KB] g=3, 10 evaluated, 9 expanded
[t=0.0228375s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0228478s, 26652 KB] g=4, 18 evaluated, 17 expanded
[t=0.0229392s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0229486s, 26652 KB] g=6, 21 evaluated, 20 expanded
[t=0.0231499s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0231598s, 26652 KB] g=6, 28 evaluated, 27 expanded
[t=0.0233017s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0233118s, 26652 KB] g=8, 33 evaluated, 32 expanded
[t=0.0234291s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0234382s, 26652 KB] g=8, 37 evaluated, 36 expanded
[t=0.0236533s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0236632s, 26652 KB] g=10, 45 evaluated, 44 expanded
[t=0.0238814s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0238909s, 26652 KB] g=12, 53 evaluated, 52 expanded
[t=0.0240318s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0240415s, 26652 KB] g=12, 58 evaluated, 57 expanded
[t=0.0243854s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0243974s, 26652 KB] g=16, 70 evaluated, 69 expanded
[t=0.0246838s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0247021s, 26652 KB] g=18, 80 evaluated, 79 expanded
[t=0.0248518s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0248615s, 26652 KB] g=20, 85 evaluated, 84 expanded
[t=0.0251442s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0251559s, 26652 KB] g=22, 95 evaluated, 94 expanded
[t=0.0253206s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0253297s, 26652 KB] g=24, 101 evaluated, 100 expanded
[t=0.025367s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0253763s, 26652 KB] g=24, 102 evaluated, 101 expanded
[t=0.0256685s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0256787s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.025687s, 26652 KB] g=26, 113 evaluated, 112 expanded
[t=0.0258226s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0258318s, 26652 KB] g=28, 118 evaluated, 117 expanded
[t=0.0260931s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0261017s, 26652 KB] g=30, 128 evaluated, 127 expanded
[t=0.0262704s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0262802s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0262881s, 26652 KB] g=30, 134 evaluated, 133 expanded
[t=0.02634s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0263488s, 26652 KB] g=31, 135 evaluated, 134 expanded
[t=0.0263907s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0264115s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.026423s, 26652 KB] g=32, 136 evaluated, 135 expanded
[t=0.0266391s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0266547s, 26652 KB] g=34, 141 evaluated, 140 expanded
[t=0.0266984s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0267076s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0267157s, 26652 KB] g=34, 142 evaluated, 141 expanded
[t=0.0268684s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0268789s, 26652 KB] g=36, 147 evaluated, 146 expanded
[t=0.0269147s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0269244s, 26652 KB] g=36, 148 evaluated, 147 expanded
[t=0.0271431s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0271539s, 26652 KB] g=38, 156 evaluated, 155 expanded
[t=0.0272975s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0273079s, 26652 KB] g=38, 161 evaluated, 160 expanded
[t=0.0274774s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0274885s, 26652 KB] g=40, 167 evaluated, 166 expanded
[t=0.0275258s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0275353s, 26652 KB] g=41, 168 evaluated, 167 expanded
[t=0.0278142s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0278277s, 26652 KB] g=43, 178 evaluated, 177 expanded
[t=0.0282054s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0282162s, 26652 KB] g=46, 192 evaluated, 191 expanded
[t=0.0285079s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0285184s, 26652 KB] g=47, 203 evaluated, 202 expanded
[t=0.0285616s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0285739s, 26652 KB] g=48, 204 evaluated, 203 expanded
[t=0.0288653s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.028875s, 26652 KB] g=50, 216 evaluated, 215 expanded
[t=0.0293624s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0293715s, 26652 KB] g=54, 236 evaluated, 235 expanded
[t=0.0296482s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0296576s, 26652 KB] g=56, 247 evaluated, 246 expanded
[t=0.0298416s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0298513s, 26652 KB] g=58, 254 evaluated, 253 expanded
[t=0.0301324s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0301421s, 26652 KB] g=60, 264 evaluated, 263 expanded
[t=0.0314278s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0314385s, 26652 KB] g=66, 316 evaluated, 315 expanded
[t=0.0316457s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.031655s, 26652 KB] g=68, 324 evaluated, 323 expanded
[t=0.0317392s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0317482s, 26652 KB] g=69, 327 evaluated, 326 expanded
[t=0.032053s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0320625s, 26652 KB] g=73, 339 evaluated, 338 expanded
[t=0.0323059s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0323148s, 26652 KB] g=75, 349 evaluated, 348 expanded
[t=0.0324454s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0324551s, 26652 KB] g=74, 354 evaluated, 353 expanded
[t=0.0325308s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0325666s, 26652 KB] g=77, 357 evaluated, 356 expanded
[t=0.0328003s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0328138s, 26652 KB] g=78, 366 evaluated, 365 expanded
[t=0.0328865s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0328978s, 26652 KB] g=79, 369 evaluated, 368 expanded
[t=0.0329838s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0329939s, 26652 KB] g=80, 372 evaluated, 371 expanded
[t=0.0331458s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0331551s, 26652 KB] g=85, 378 evaluated, 377 expanded
[t=0.0332981s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0333087s, 26652 KB] g=87, 384 evaluated, 383 expanded
[t=0.03342s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0334329s, 26652 KB] g=89, 389 evaluated, 388 expanded
[t=0.0335849s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0335958s, 26652 KB] g=91, 396 evaluated, 395 expanded
[t=0.0337274s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.033738s, 26652 KB] g=92, 402 evaluated, 401 expanded
[t=0.0338907s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0339061s, 26652 KB] g=93, 409 evaluated, 408 expanded
[t=0.0341155s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.034131s, 26652 KB] g=94, 416 evaluated, 415 expanded
[t=0.0342073s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.034218s, 26652 KB] g=95, 419 evaluated, 418 expanded
[t=0.0343249s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0343354s, 26652 KB] g=98, 424 evaluated, 423 expanded
[t=0.0343691s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0343782s, 26652 KB] g=99, 425 evaluated, 424 expanded
[t=0.0344549s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0344645s, 26652 KB] g=100, 428 evaluated, 427 expanded
[t=0.0344915s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0345007s, 26652 KB] g=101, 429 evaluated, 428 expanded
[t=0.034556s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0345648s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0345731s, 26652 KB] g=104, 432 evaluated, 431 expanded
[t=0.0345918s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0346005s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0346087s, 26652 KB] g=105, 433 evaluated, 432 expanded
[t=0.0346251s, 26652 KB] Solution found!
[t=0.0346376s, 26652 KB] Actual search time: 0.0124281s
unstack b15 b10 (1)
put-down b15 (1)
unstack b10 b2 (1)
stack b10 b8 (1)
unstack b18 b14 (1)
stack b18 b2 (1)
pick-up b15 (1)
stack b15 b14 (1)
unstack b19 b13 (1)
put-down b19 (1)
unstack b13 b23 (1)
put-down b13 (1)
unstack b23 b1 (1)
put-down b23 (1)
unstack b1 b3 (1)
put-down b1 (1)
pick-up b19 (1)
stack b19 b1 (1)
unstack b3 b17 (1)
put-down b3 (1)
unstack b17 b20 (1)
put-down b17 (1)
unstack b20 b7 (1)
stack b20 b18 (1)
pick-up b23 (1)
stack b23 b7 (1)
unstack b10 b8 (1)
put-down b10 (1)
unstack b8 b9 (1)
stack b8 b23 (1)
pick-up b10 (1)
stack b10 b8 (1)
unstack b9 b6 (1)
stack b9 b13 (1)
unstack b20 b18 (1)
put-down b20 (1)
unstack b18 b2 (1)
put-down b18 (1)
unstack b2 b11 (1)
put-down b2 (1)
unstack b11 b5 (1)
put-down b11 (1)
unstack b5 b16 (1)
put-down b5 (1)
unstack b16 b4 (1)
put-down b16 (1)
unstack b4 b21 (1)
stack b4 b12 (1)
pick-up b11 (1)
stack b11 b21 (1)
pick-up b5 (1)
stack b5 b17 (1)
pick-up b18 (1)
stack b18 b2 (1)
pick-up b20 (1)
stack b20 b18 (1)
pick-up b3 (1)
stack b3 b16 (1)
pick-up b6 (1)
stack b6 b20 (1)
unstack b11 b21 (1)
put-down b11 (1)
unstack b21 b22 (1)
put-down b21 (1)
pick-up b11 (1)
stack b11 b21 (1)
pick-up b22 (1)
stack b22 b9 (1)
unstack b5 b17 (1)
put-down b5 (1)
pick-up b17 (1)
stack b17 b6 (1)
pick-up b5 (1)
stack b5 b17 (1)
unstack b3 b16 (1)
put-down b3 (1)
pick-up b16 (1)
stack b16 b22 (1)
pick-up b3 (1)
stack b3 b16 (1)
unstack b5 b17 (1)
put-down b5 (1)
unstack b17 b6 (1)
put-down b17 (1)
unstack b6 b20 (1)
put-down b6 (1)
unstack b20 b18 (1)
put-down b20 (1)
unstack b18 b2 (1)
put-down b18 (1)
pick-up b2 (1)
stack b2 b3 (1)
pick-up b18 (1)
stack b18 b2 (1)
pick-up b5 (1)
stack b5 b17 (1)
pick-up b20 (1)
stack b20 b18 (1)
pick-up b6 (1)
stack b6 b20 (1)
unstack b5 b17 (1)
put-down b5 (1)
pick-up b17 (1)
stack b17 b6 (1)
pick-up b5 (1)
stack b5 b17 (1)
[t=0.0346473s, 26652 KB] Plan length: 106 step(s).
[t=0.0346473s, 26652 KB] Plan cost: 106
[t=0.0346473s, 26652 KB] Expanded 433 state(s).
[t=0.0346473s, 26652 KB] Reopened 0 state(s).
[t=0.0346473s, 26652 KB] Evaluated 434 state(s).
[t=0.0346473s, 26652 KB] Evaluations: 868
[t=0.0346473s, 26652 KB] Generated 4577 state(s).
[t=0.0346473s, 26652 KB] Dead ends: 0 state(s).
[t=0.0346473s, 26652 KB] Number of registered states: 434
[t=0.0346473s, 26652 KB] Int hash set load factor: 434/512 = 0.847656
[t=0.0346473s, 26652 KB] Int hash set resizes: 9
[t=0.0346473s, 26652 KB] Search time: 0.0124758s
[t=0.0346473s, 26652 KB] Total time: 0.0346473s
Solution found.
Peak memory: 26652 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.17s
