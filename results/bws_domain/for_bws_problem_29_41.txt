INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_29/bws_problem_29_41.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.020s wall-clock]
2728 relevant atoms
1827 auxiliary atoms
4555 final queue length
7981 total queue pushes
Completing instantiation... [0.030s CPU, 0.031s wall-clock]
Instantiating: [0.050s CPU, 0.052s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.002s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
30 uncovered facts
Choosing groups: [0.000s CPU, 0.002s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.001s wall-clock]
Building dictionary for full mutex groups... [0.010s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.001s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.002s wall-clock]
Translating task: [0.040s CPU, 0.047s wall-clock]
2494 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
58 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.022s wall-clock]
Reordering and filtering variables...
59 of 59 variables necessary.
30 of 59 mutex groups necessary.
1682 of 1682 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.020s CPU, 0.011s wall-clock]
Translator variables: 59
Translator derived variables: 0
Translator facts: 930
Translator goal facts: 23
Translator mutex groups: 30
Translator total mutex groups size: 900
Translator operators: 1682
Translator axioms: 0
Translator task size: 14440
Translator peak memory: 40824 KB
Writing output... [0.010s CPU, 0.009s wall-clock]
Done! [0.160s CPU, 0.158s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=7.8839e-05s, 24488 KB] reading input...
[t=0.00573576s, 26220 KB] done reading input!
[t=0.00710356s, 26616 KB] Initializing landmark count heuristic...
[t=0.00717312s, 26616 KB] Generating landmark graph...
[t=0.00727768s, 26748 KB] Building a landmark graph with reasonable orders.
[t=0.00736431s, 26748 KB] Initializing Exploration...
[t=0.00785602s, 27200 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0311993s, 28124 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.031346s, 28124 KB] Landmarks generation time: 0.0240819s
[t=0.0313745s, 28124 KB] Discovered 127 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0313954s, 28124 KB] 783 edges
[t=0.0314057s, 28124 KB] approx. reasonable orders
[t=0.0364491s, 28124 KB] approx. obedient reasonable orders
[t=0.0364961s, 28124 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0365066s, 28124 KB] Landmarks generation time: 0.0293299s
[t=0.036516s, 28124 KB] Discovered 127 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0365239s, 28124 KB] 846 edges
[t=0.0365318s, 28124 KB] Landmark graph generation time: 0.0293655s
[t=0.03654s, 28124 KB] Landmark graph contains 127 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0365477s, 28124 KB] Landmark graph contains 846 orderings.
[t=0.037099s, 28148 KB] Simplifying 6670 unary operators... done! [5046 unary operators]
[t=0.0386343s, 28148 KB] time to simplify: 0.00163397s
[t=0.0388383s, 28148 KB] Initializing additive heuristic...
[t=0.0388795s, 28148 KB] Initializing FF heuristic...
[t=0.0389385s, 28148 KB] Building successor generator...done!
[t=0.0393285s, 28148 KB] peak memory difference for successor generator creation: 0 KB
[t=0.039341s, 28148 KB] time for successor generation creation: 0.000347129s
[t=0.0393581s, 28148 KB] Variables: 59
[t=0.0393667s, 28148 KB] FactPairs: 930
[t=0.039376s, 28148 KB] Bytes per state: 24
[t=0.0395736s, 28148 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0396191s, 28148 KB] 58 initial landmarks, 23 goal landmarks
[t=0.0397688s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 69
[t=0.0397897s, 28148 KB] New best heuristic value for ff(transform = adapt_costs(one)): 50
[t=0.0397989s, 28148 KB] g=0, 1 evaluated, 0 expanded
[t=0.039822s, 28148 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 69
[t=0.0398312s, 28148 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 50
[t=0.0400641s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 68
[t=0.0400746s, 28148 KB] g=2, 6 evaluated, 5 expanded
[t=0.0401883s, 28148 KB] New best heuristic value for ff(transform = adapt_costs(one)): 49
[t=0.040201s, 28148 KB] g=2, 8 evaluated, 7 expanded
[t=0.0405483s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 67
[t=0.0405788s, 28148 KB] g=4, 15 evaluated, 14 expanded
[t=0.0408676s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 66
[t=0.0408772s, 28148 KB] g=5, 22 evaluated, 21 expanded
[t=0.041483s, 28148 KB] New best heuristic value for ff(transform = adapt_costs(one)): 48
[t=0.0414995s, 28148 KB] g=6, 37 evaluated, 36 expanded
[t=0.0415813s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 65
[t=0.0416037s, 28148 KB] g=8, 38 evaluated, 37 expanded
[t=0.0422s, 28148 KB] New best heuristic value for ff(transform = adapt_costs(one)): 47
[t=0.0422153s, 28148 KB] g=8, 52 evaluated, 51 expanded
[t=0.042347s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 64
[t=0.0423566s, 28148 KB] g=10, 55 evaluated, 54 expanded
[t=0.0433079s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 63
[t=0.043318s, 28148 KB] g=12, 79 evaluated, 78 expanded
[t=0.0433693s, 28148 KB] New best heuristic value for ff(transform = adapt_costs(one)): 46
[t=0.0433812s, 28148 KB] g=12, 80 evaluated, 79 expanded
[t=0.0436905s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 62
[t=0.0437038s, 28148 KB] g=13, 88 evaluated, 87 expanded
[t=0.04443s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 61
[t=0.0444412s, 28148 KB] g=16, 107 evaluated, 106 expanded
[t=0.0450329s, 28148 KB] New best heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0450433s, 28148 KB] g=16, 122 evaluated, 121 expanded
[t=0.0450907s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 60
[t=0.0450995s, 28148 KB] g=18, 123 evaluated, 122 expanded
[t=0.0455618s, 28148 KB] New best heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.0455714s, 28148 KB] g=18, 135 evaluated, 134 expanded
[t=0.0459183s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.0459317s, 28148 KB] g=20, 143 evaluated, 142 expanded
[t=0.0460966s, 28148 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0461057s, 28148 KB] g=20, 147 evaluated, 146 expanded
[t=0.0471178s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 58
[t=0.0471327s, 28148 KB] g=22, 169 evaluated, 168 expanded
[t=0.0474118s, 28148 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0474226s, 28148 KB] g=24, 175 evaluated, 174 expanded
[t=0.0480343s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 57
[t=0.0480468s, 28148 KB] g=24, 190 evaluated, 189 expanded
[t=0.0485255s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.048536s, 28148 KB] g=25, 202 evaluated, 201 expanded
[t=0.0497878s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0498201s, 28148 KB] g=28, 233 evaluated, 232 expanded
[t=0.0509427s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0509641s, 28148 KB] g=30, 261 evaluated, 260 expanded
[t=0.052061s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0520791s, 28148 KB] g=32, 288 evaluated, 287 expanded
[t=0.052594s, 28148 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0526052s, 28148 KB] g=30, 301 evaluated, 300 expanded
[t=0.0533464s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0533576s, 28148 KB] g=34, 320 evaluated, 319 expanded
[t=0.0541345s, 28148 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0541514s, 28148 KB] g=34, 339 evaluated, 338 expanded
[t=0.0547709s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.054788s, 28148 KB] g=36, 354 evaluated, 353 expanded
[t=0.0549278s, 28148 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0549401s, 28148 KB] g=36, 357 evaluated, 356 expanded
[t=0.0558455s, 28148 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0558679s, 28148 KB] g=38, 377 evaluated, 376 expanded
[t=0.0563775s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0563893s, 28148 KB] g=38, 389 evaluated, 388 expanded
[t=0.0566356s, 28148 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0566454s, 28148 KB] g=40, 395 evaluated, 394 expanded
[t=0.057074s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0570923s, 28148 KB] g=39, 406 evaluated, 405 expanded
[t=0.0571849s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0571942s, 28148 KB] g=40, 408 evaluated, 407 expanded
[t=0.0574251s, 28148 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0574364s, 28148 KB] g=42, 413 evaluated, 412 expanded
[t=0.0586383s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0586504s, 28148 KB] g=42, 443 evaluated, 442 expanded
[t=0.0602155s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.060231s, 28148 KB] g=44, 482 evaluated, 481 expanded
[t=0.0615491s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0615602s, 28148 KB] g=46, 516 evaluated, 515 expanded
[t=0.0616144s, 28148 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0616237s, 28148 KB] g=46, 517 evaluated, 516 expanded
[t=0.0623169s, 28148 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0623277s, 28148 KB] g=48, 535 evaluated, 534 expanded
[t=0.0629609s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0629716s, 28148 KB] g=48, 551 evaluated, 550 expanded
[t=0.0630248s, 28148 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0630342s, 28148 KB] g=50, 552 evaluated, 551 expanded
[t=0.0637431s, 28148 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.063765s, 28148 KB] g=52, 570 evaluated, 569 expanded
[t=0.0649924s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0650068s, 28148 KB] g=56, 601 evaluated, 600 expanded
[t=0.0653498s, 28148 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0653617s, 28148 KB] g=58, 610 evaluated, 609 expanded
[t=0.065672s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0656828s, 28148 KB] g=58, 618 evaluated, 617 expanded
[t=0.0662139s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0662249s, 28148 KB] g=60, 631 evaluated, 630 expanded
[t=0.0670294s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.067047s, 28148 KB] g=62, 652 evaluated, 651 expanded
[t=0.0677874s, 28148 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0678093s, 28148 KB] g=64, 670 evaluated, 669 expanded
[t=0.067946s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0679567s, 28148 KB] g=64, 673 evaluated, 672 expanded
[t=0.0681654s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.068175s, 28148 KB] g=65, 678 evaluated, 677 expanded
[t=0.0682296s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0682408s, 28148 KB] g=66, 679 evaluated, 678 expanded
[t=0.0692532s, 28148 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0692647s, 28148 KB] g=68, 704 evaluated, 703 expanded
[t=0.0694729s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0694827s, 28148 KB] g=68, 709 evaluated, 708 expanded
[t=0.0696839s, 28148 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0697219s, 28148 KB] g=70, 713 evaluated, 712 expanded
[t=0.0706521s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0706656s, 28148 KB] g=70, 736 evaluated, 735 expanded
[t=0.0715178s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0715305s, 28148 KB] g=72, 757 evaluated, 756 expanded
[t=0.072354s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0723673s, 28148 KB] g=74, 777 evaluated, 776 expanded
[t=0.0729746s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0729846s, 28148 KB] g=76, 792 evaluated, 791 expanded
[t=0.0735017s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.073512s, 28148 KB] g=78, 805 evaluated, 804 expanded
[t=0.0738028s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0738138s, 28148 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.073823s, 28148 KB] g=80, 812 evaluated, 811 expanded
[t=0.0741033s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0741126s, 28148 KB] g=83, 819 evaluated, 818 expanded
[t=0.0742037s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0742124s, 28148 KB] g=84, 821 evaluated, 820 expanded
[t=0.0744192s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0744281s, 28148 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0744361s, 28148 KB] g=86, 826 evaluated, 825 expanded
[t=0.0746599s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0746706s, 28148 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0746787s, 28148 KB] g=88, 831 evaluated, 830 expanded
[t=0.0763421s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0763535s, 28148 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.076362s, 28148 KB] g=96, 874 evaluated, 873 expanded
[t=0.0764858s, 28148 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0764987s, 28148 KB] g=96, 877 evaluated, 876 expanded
[t=0.07666s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.076669s, 28148 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0766769s, 28148 KB] g=98, 881 evaluated, 880 expanded
[t=0.078106s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0781206s, 28148 KB] g=108, 918 evaluated, 917 expanded
[t=0.0782831s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0782934s, 28148 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0783013s, 28148 KB] g=110, 922 evaluated, 921 expanded
[t=0.0786458s, 28148 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0786557s, 28148 KB] g=114, 931 evaluated, 930 expanded
[t=0.078776s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0787888s, 28148 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0787974s, 28148 KB] g=116, 934 evaluated, 933 expanded
[t=0.082771s, 28148 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0828225s, 28148 KB] g=146, 1040 evaluated, 1039 expanded
[t=0.0830991s, 28148 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0831092s, 28148 KB] g=150, 1049 evaluated, 1048 expanded
[t=0.0832065s, 28148 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0832166s, 28148 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0832253s, 28148 KB] g=152, 1052 evaluated, 1051 expanded
[t=0.0836858s, 28148 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0837142s, 28148 KB] g=164, 1070 evaluated, 1069 expanded
[t=0.0838041s, 28148 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0838135s, 28148 KB] g=168, 1074 evaluated, 1073 expanded
[t=0.083835s, 28148 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.083844s, 28148 KB] g=169, 1075 evaluated, 1074 expanded
[t=0.0838613s, 28148 KB] Solution found!
[t=0.083876s, 28148 KB] Actual search time: 0.0442545s
unstack b23 b12 (1)
stack b23 b9 (1)
unstack b12 b8 (1)
put-down b12 (1)
unstack b8 b7 (1)
put-down b8 (1)
unstack b7 b20 (1)
stack b7 b22 (1)
unstack b19 b10 (1)
put-down b19 (1)
pick-up b12 (1)
stack b12 b10 (1)
unstack b20 b2 (1)
put-down b20 (1)
unstack b2 b28 (1)
stack b2 b19 (1)
unstack b28 b15 (1)
stack b28 b23 (1)
unstack b15 b27 (1)
put-down b15 (1)
unstack b27 b26 (1)
put-down b27 (1)
unstack b26 b16 (1)
put-down b26 (1)
pick-up b20 (1)
stack b20 b26 (1)
unstack b16 b17 (1)
put-down b16 (1)
unstack b17 b13 (1)
stack b17 b8 (1)
unstack b13 b24 (1)
put-down b13 (1)
unstack b24 b29 (1)
put-down b24 (1)
unstack b29 b11 (1)
put-down b29 (1)
unstack b11 b4 (1)
stack b11 b29 (1)
unstack b4 b14 (1)
put-down b4 (1)
pick-up b13 (1)
stack b13 b11 (1)
unstack b12 b10 (1)
put-down b12 (1)
unstack b10 b25 (1)
stack b10 b24 (1)
pick-up b12 (1)
stack b12 b10 (1)
unstack b25 b6 (1)
stack b25 b12 (1)
pick-up b6 (1)
stack b6 b16 (1)
unstack b2 b19 (1)
put-down b2 (1)
unstack b20 b26 (1)
put-down b20 (1)
unstack b28 b23 (1)
put-down b28 (1)
unstack b23 b9 (1)
put-down b23 (1)
unstack b9 b1 (1)
stack b9 b20 (1)
unstack b1 b21 (1)
put-down b1 (1)
unstack b21 b5 (1)
stack b21 b17 (1)
pick-up b23 (1)
stack b23 b9 (1)
pick-up b26 (1)
stack b26 b6 (1)
pick-up b28 (1)
stack b28 b23 (1)
pick-up b19 (1)
stack b19 b28 (1)
pick-up b2 (1)
stack b2 b19 (1)
pick-up b1 (1)
stack b1 b2 (1)
pick-up b27 (1)
stack b27 b1 (1)
unstack b5 b3 (1)
put-down b5 (1)
unstack b3 b18 (1)
stack b3 b7 (1)
pick-up b18 (1)
stack b18 b13 (1)
pick-up b5 (1)
stack b5 b3 (1)
unstack b26 b6 (1)
put-down b26 (1)
unstack b6 b16 (1)
put-down b6 (1)
pick-up b16 (1)
stack b16 b18 (1)
pick-up b6 (1)
stack b6 b16 (1)
pick-up b26 (1)
stack b26 b6 (1)
unstack b5 b3 (1)
put-down b5 (1)
unstack b3 b7 (1)
put-down b3 (1)
pick-up b5 (1)
stack b5 b3 (1)
unstack b7 b22 (1)
put-down b7 (1)
pick-up b22 (1)
stack b22 b14 (1)
pick-up b7 (1)
stack b7 b22 (1)
unstack b5 b3 (1)
put-down b5 (1)
pick-up b3 (1)
stack b3 b7 (1)
pick-up b5 (1)
stack b5 b3 (1)
unstack b27 b1 (1)
put-down b27 (1)
unstack b1 b2 (1)
put-down b1 (1)
pick-up b27 (1)
stack b27 b1 (1)
unstack b2 b19 (1)
put-down b2 (1)
unstack b19 b28 (1)
put-down b19 (1)
pick-up b2 (1)
stack b2 b19 (1)
unstack b27 b1 (1)
put-down b27 (1)
pick-up b1 (1)
stack b1 b2 (1)
pick-up b27 (1)
stack b27 b1 (1)
unstack b28 b23 (1)
put-down b28 (1)
unstack b23 b9 (1)
put-down b23 (1)
pick-up b28 (1)
stack b28 b23 (1)
unstack b9 b20 (1)
put-down b9 (1)
pick-up b20 (1)
stack b20 b26 (1)
pick-up b9 (1)
stack b9 b20 (1)
unstack b28 b23 (1)
put-down b28 (1)
pick-up b23 (1)
stack b23 b9 (1)
pick-up b28 (1)
stack b28 b23 (1)
unstack b27 b1 (1)
put-down b27 (1)
unstack b1 b2 (1)
put-down b1 (1)
pick-up b27 (1)
stack b27 b1 (1)
unstack b2 b19 (1)
put-down b2 (1)
pick-up b19 (1)
stack b19 b28 (1)
pick-up b2 (1)
stack b2 b19 (1)
unstack b27 b1 (1)
put-down b27 (1)
pick-up b1 (1)
stack b1 b2 (1)
pick-up b27 (1)
stack b27 b1 (1)
[t=0.0838881s, 28148 KB] Plan length: 170 step(s).
[t=0.0838881s, 28148 KB] Plan cost: 170
[t=0.0838881s, 28148 KB] Expanded 1075 state(s).
[t=0.0838881s, 28148 KB] Reopened 0 state(s).
[t=0.0838881s, 28148 KB] Evaluated 1076 state(s).
[t=0.0838881s, 28148 KB] Evaluations: 2152
[t=0.0838881s, 28148 KB] Generated 13575 state(s).
[t=0.0838881s, 28148 KB] Dead ends: 0 state(s).
[t=0.0838881s, 28148 KB] Number of registered states: 1076
[t=0.0838881s, 28148 KB] Int hash set load factor: 1076/2048 = 0.525391
[t=0.0838881s, 28148 KB] Int hash set resizes: 11
[t=0.0838881s, 28148 KB] Search time: 0.0443151s
[t=0.0838881s, 28148 KB] Total time: 0.0838881s
Solution found.
Peak memory: 28148 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.29s
