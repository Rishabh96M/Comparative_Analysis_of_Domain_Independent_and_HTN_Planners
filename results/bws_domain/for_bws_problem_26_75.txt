INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_26/bws_problem_26_75.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
2212 relevant atoms
1482 auxiliary atoms
3694 final queue length
6458 total queue pushes
Completing instantiation... [0.030s CPU, 0.023s wall-clock]
Instantiating: [0.040s CPU, 0.037s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
27 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.008s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.001s wall-clock]
Translating task: [0.040s CPU, 0.034s wall-clock]
2002 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
52 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.023s wall-clock]
Reordering and filtering variables...
53 of 53 variables necessary.
27 of 53 mutex groups necessary.
1352 of 1352 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.009s wall-clock]
Translator variables: 53
Translator derived variables: 0
Translator facts: 756
Translator goal facts: 20
Translator mutex groups: 27
Translator total mutex groups size: 729
Translator operators: 1352
Translator axioms: 0
Translator task size: 11620
Translator peak memory: 38896 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.120s CPU, 0.124s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.0052e-05s, 24488 KB] reading input...
[t=0.00385958s, 25744 KB] done reading input!
[t=0.00571276s, 26140 KB] Initializing landmark count heuristic...
[t=0.00583299s, 26140 KB] Generating landmark graph...
[t=0.00600722s, 26272 KB] Building a landmark graph with reasonable orders.
[t=0.00614305s, 26272 KB] Initializing Exploration...
[t=0.00696339s, 26680 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0221706s, 27208 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0222515s, 27208 KB] Landmarks generation time: 0.0162489s
[t=0.0222827s, 27208 KB] Discovered 106 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0222994s, 27208 KB] 391 edges
[t=0.0223094s, 27208 KB] approx. reasonable orders
[t=0.0255739s, 27208 KB] approx. obedient reasonable orders
[t=0.0257193s, 27208 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0257317s, 27208 KB] Landmarks generation time: 0.0198903s
[t=0.025744s, 27208 KB] Discovered 106 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0257537s, 27208 KB] 439 edges
[t=0.0257632s, 27208 KB] Landmark graph generation time: 0.0199392s
[t=0.0257733s, 27208 KB] Landmark graph contains 106 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0257817s, 27208 KB] Landmark graph contains 439 orderings.
[t=0.0265811s, 27208 KB] Simplifying 5356 unary operators... done! [4056 unary operators]
[t=0.0279275s, 27340 KB] time to simplify: 0.00143375s
[t=0.0281312s, 27340 KB] Initializing additive heuristic...
[t=0.0281574s, 27340 KB] Initializing FF heuristic...
[t=0.0282335s, 27340 KB] Building successor generator...done!
[t=0.0285147s, 27340 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0285239s, 27340 KB] time for successor generation creation: 0.000245781s
[t=0.0285365s, 27340 KB] Variables: 53
[t=0.0285449s, 27340 KB] FactPairs: 756
[t=0.0285523s, 27340 KB] Bytes per state: 20
[t=0.0286654s, 27340 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0286996s, 27340 KB] 50 initial landmarks, 20 goal landmarks
[t=0.0287616s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0287709s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0287789s, 27340 KB] g=0, 1 evaluated, 0 expanded
[t=0.0287933s, 27340 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0288015s, 27340 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0291039s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0291131s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0291209s, 27340 KB] g=2, 10 evaluated, 9 expanded
[t=0.0293547s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0293638s, 27340 KB] g=4, 17 evaluated, 16 expanded
[t=0.0294058s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0294155s, 27340 KB] g=4, 18 evaluated, 17 expanded
[t=0.0298373s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0298761s, 27340 KB] g=6, 31 evaluated, 30 expanded
[t=0.0301868s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.030198s, 27340 KB] g=6, 39 evaluated, 38 expanded
[t=0.0305292s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0305391s, 27340 KB] g=8, 49 evaluated, 48 expanded
[t=0.0308028s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0308116s, 27340 KB] g=9, 57 evaluated, 56 expanded
[t=0.0312032s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0312131s, 27340 KB] g=12, 69 evaluated, 68 expanded
[t=0.0312867s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0313021s, 27340 KB] g=12, 71 evaluated, 70 expanded
[t=0.0316898s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0316991s, 27340 KB] g=14, 83 evaluated, 82 expanded
[t=0.0318951s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0319098s, 27340 KB] g=14, 89 evaluated, 88 expanded
[t=0.03241s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.03242s, 27340 KB] g=16, 105 evaluated, 104 expanded
[t=0.0329209s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.03293s, 27340 KB] g=18, 121 evaluated, 120 expanded
[t=0.0334842s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0334945s, 27340 KB] g=20, 138 evaluated, 137 expanded
[t=0.0338672s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0338791s, 27340 KB] g=22, 149 evaluated, 148 expanded
[t=0.0339532s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0339627s, 27340 KB] g=22, 151 evaluated, 150 expanded
[t=0.0345304s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0345415s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0345498s, 27340 KB] g=24, 169 evaluated, 168 expanded
[t=0.0348753s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0348851s, 27340 KB] g=26, 179 evaluated, 178 expanded
[t=0.0349275s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0349362s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0349437s, 27340 KB] g=26, 180 evaluated, 179 expanded
[t=0.0352176s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0352287s, 27340 KB] g=28, 188 evaluated, 187 expanded
[t=0.0352862s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0352959s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.035304s, 27340 KB] g=28, 189 evaluated, 188 expanded
[t=0.0355784s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0355899s, 27340 KB] g=30, 197 evaluated, 196 expanded
[t=0.0356346s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0356441s, 27340 KB] g=30, 198 evaluated, 197 expanded
[t=0.0361026s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0361201s, 27340 KB] g=32, 212 evaluated, 211 expanded
[t=0.0367883s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0368018s, 27340 KB] g=34, 232 evaluated, 231 expanded
[t=0.0370096s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0370197s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0370289s, 27340 KB] g=36, 238 evaluated, 237 expanded
[t=0.0374764s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0374866s, 27340 KB] g=40, 251 evaluated, 250 expanded
[t=0.0376s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.03761s, 27340 KB] g=41, 254 evaluated, 253 expanded
[t=0.0376578s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0376712s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0376805s, 27340 KB] g=42, 255 evaluated, 254 expanded
[t=0.0379092s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0379203s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0379284s, 27340 KB] g=44, 261 evaluated, 260 expanded
[t=0.0381318s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0381408s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.038149s, 27340 KB] g=46, 267 evaluated, 266 expanded
[t=0.0383847s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0383945s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0384024s, 27340 KB] g=48, 274 evaluated, 273 expanded
[t=0.038443s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.038452s, 27340 KB] g=49, 275 evaluated, 274 expanded
[t=0.0384948s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0385034s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0385113s, 27340 KB] g=50, 276 evaluated, 275 expanded
[t=0.0387095s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0387189s, 27340 KB] g=52, 282 evaluated, 281 expanded
[t=0.0388217s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0388304s, 27340 KB] g=52, 285 evaluated, 284 expanded
[t=0.0390568s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0390666s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0390745s, 27340 KB] g=54, 292 evaluated, 291 expanded
[t=0.0398069s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0398228s, 27340 KB] g=58, 315 evaluated, 314 expanded
[t=0.0398673s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0398767s, 27340 KB] g=60, 316 evaluated, 315 expanded
[t=0.0401742s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0401843s, 27340 KB] g=60, 325 evaluated, 324 expanded
[t=0.0403458s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0403551s, 27340 KB] g=62, 330 evaluated, 329 expanded
[t=0.0406452s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0406544s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0406625s, 27340 KB] g=64, 339 evaluated, 338 expanded
[t=0.040822s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0408308s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0408389s, 27340 KB] g=66, 344 evaluated, 343 expanded
[t=0.0413189s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0413295s, 27340 KB] g=70, 360 evaluated, 359 expanded
[t=0.0414734s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0414916s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0415002s, 27340 KB] g=72, 364 evaluated, 363 expanded
[t=0.0433501s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0433672s, 27340 KB] g=86, 426 evaluated, 425 expanded
[t=0.0434636s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0434731s, 27340 KB] g=86, 429 evaluated, 428 expanded
[t=0.043591s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0436003s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0436084s, 27340 KB] g=88, 433 evaluated, 432 expanded
[t=0.0438453s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0438542s, 27340 KB] g=92, 442 evaluated, 441 expanded
[t=0.043935s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0439442s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0439527s, 27340 KB] g=94, 445 evaluated, 444 expanded
[t=0.0446792s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0446898s, 27340 KB] g=108, 477 evaluated, 476 expanded
[t=0.044753s, 27340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0447616s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0447693s, 27340 KB] g=110, 480 evaluated, 479 expanded
[t=0.0448422s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0448504s, 27340 KB] g=114, 484 evaluated, 483 expanded
[t=0.0448687s, 27340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0448769s, 27340 KB] g=115, 485 evaluated, 484 expanded
[t=0.0448924s, 27340 KB] Solution found!
[t=0.0449209s, 27340 KB] Actual search time: 0.0162183s
unstack b9 b1 (1)
put-down b9 (1)
unstack b1 b8 (1)
put-down b1 (1)
pick-up b8 (1)
stack b8 b12 (1)
unstack b21 b16 (1)
put-down b21 (1)
unstack b16 b7 (1)
put-down b16 (1)
unstack b18 b19 (1)
put-down b18 (1)
unstack b19 b13 (1)
put-down b19 (1)
unstack b23 b3 (1)
put-down b23 (1)
unstack b7 b20 (1)
stack b7 b23 (1)
unstack b20 b25 (1)
put-down b20 (1)
unstack b25 b15 (1)
stack b25 b19 (1)
pick-up b15 (1)
stack b15 b2 (1)
pick-up b18 (1)
stack b18 b7 (1)
pick-up b21 (1)
stack b21 b20 (1)
pick-up b6 (1)
stack b6 b13 (1)
unstack b25 b19 (1)
put-down b25 (1)
pick-up b19 (1)
stack b19 b6 (1)
pick-up b25 (1)
stack b25 b19 (1)
unstack b3 b14 (1)
put-down b3 (1)
unstack b14 b24 (1)
put-down b14 (1)
unstack b24 b11 (1)
stack b24 b3 (1)
unstack b11 b4 (1)
stack b11 b8 (1)
unstack b4 b17 (1)
stack b4 b21 (1)
unstack b17 b10 (1)
stack b17 b1 (1)
unstack b10 b26 (1)
stack b10 b25 (1)
pick-up b26 (1)
stack b26 b18 (1)
pick-up b16 (1)
stack b16 b26 (1)
unstack b11 b8 (1)
put-down b11 (1)
unstack b8 b12 (1)
put-down b8 (1)
unstack b12 b22 (1)
stack b12 b4 (1)
pick-up b22 (1)
stack b22 b17 (1)
pick-up b8 (1)
stack b8 b12 (1)
pick-up b11 (1)
stack b11 b8 (1)
unstack b24 b3 (1)
put-down b24 (1)
pick-up b3 (1)
stack b3 b14 (1)
pick-up b24 (1)
stack b24 b3 (1)
unstack b10 b25 (1)
put-down b10 (1)
unstack b25 b19 (1)
put-down b25 (1)
pick-up b10 (1)
stack b10 b25 (1)
unstack b19 b6 (1)
put-down b19 (1)
unstack b6 b13 (1)
put-down b6 (1)
pick-up b13 (1)
stack b13 b11 (1)
pick-up b6 (1)
stack b6 b13 (1)
pick-up b19 (1)
stack b19 b6 (1)
unstack b10 b25 (1)
put-down b10 (1)
pick-up b25 (1)
stack b25 b19 (1)
pick-up b10 (1)
stack b10 b25 (1)
unstack b16 b26 (1)
put-down b16 (1)
unstack b26 b18 (1)
put-down b26 (1)
pick-up b16 (1)
stack b16 b26 (1)
unstack b18 b7 (1)
put-down b18 (1)
unstack b7 b23 (1)
put-down b7 (1)
pick-up b23 (1)
stack b23 b15 (1)
pick-up b7 (1)
stack b7 b23 (1)
pick-up b18 (1)
stack b18 b7 (1)
unstack b16 b26 (1)
put-down b16 (1)
pick-up b26 (1)
stack b26 b18 (1)
pick-up b16 (1)
stack b16 b26 (1)
[t=0.0449299s, 27340 KB] Plan length: 116 step(s).
[t=0.0449299s, 27340 KB] Plan cost: 116
[t=0.0449299s, 27340 KB] Expanded 485 state(s).
[t=0.0449299s, 27340 KB] Reopened 0 state(s).
[t=0.0449299s, 27340 KB] Evaluated 486 state(s).
[t=0.0449299s, 27340 KB] Evaluations: 972
[t=0.0449299s, 27340 KB] Generated 5610 state(s).
[t=0.0449299s, 27340 KB] Dead ends: 0 state(s).
[t=0.0449299s, 27340 KB] Number of registered states: 486
[t=0.0449299s, 27340 KB] Int hash set load factor: 486/512 = 0.949219
[t=0.0449299s, 27340 KB] Int hash set resizes: 9
[t=0.0449299s, 27340 KB] Search time: 0.016265s
[t=0.0449299s, 27340 KB] Total time: 0.0449299s
Solution found.
Peak memory: 27340 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.21s
