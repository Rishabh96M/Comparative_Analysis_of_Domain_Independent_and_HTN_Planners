INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_20/bws_problem_20_57.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.010s wall-clock]
1342 relevant atoms
900 auxiliary atoms
2242 final queue length
3886 total queue pushes
Completing instantiation... [0.010s CPU, 0.014s wall-clock]
Instantiating: [0.020s CPU, 0.025s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
21 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.006s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.021s wall-clock]
1180 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
40 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.010s wall-clock]
Reordering and filtering variables...
41 of 41 variables necessary.
21 of 41 mutex groups necessary.
800 of 800 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.005s wall-clock]
Translator variables: 41
Translator derived variables: 0
Translator facts: 462
Translator goal facts: 14
Translator mutex groups: 21
Translator total mutex groups size: 441
Translator operators: 800
Translator axioms: 0
Translator task size: 6898
Translator peak memory: 35948 KB
Writing output... [0.000s CPU, 0.005s wall-clock]
Done! [0.070s CPU, 0.078s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.2853e-05s, 24488 KB] reading input...
[t=0.00235532s, 25180 KB] done reading input!
[t=0.00344497s, 25444 KB] Initializing landmark count heuristic...
[t=0.00352118s, 25444 KB] Generating landmark graph...
[t=0.00360662s, 25576 KB] Building a landmark graph with reasonable orders.
[t=0.00368633s, 25576 KB] Initializing Exploration...
[t=0.00404823s, 25744 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0110048s, 26140 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.011091s, 26140 KB] Landmarks generation time: 0.00748054s
[t=0.011106s, 26140 KB] Discovered 80 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0111263s, 26140 KB] 262 edges
[t=0.0111375s, 26140 KB] approx. reasonable orders
[t=0.0125279s, 26140 KB] approx. obedient reasonable orders
[t=0.0125625s, 26140 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0125731s, 26140 KB] Landmarks generation time: 0.00904825s
[t=0.0125897s, 26140 KB] Discovered 80 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0125989s, 26140 KB] 292 edges
[t=0.0126081s, 26140 KB] Landmark graph generation time: 0.00909412s
[t=0.0126169s, 26140 KB] Landmark graph contains 80 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0126254s, 26140 KB] Landmark graph contains 292 orderings.
[t=0.0129626s, 26288 KB] Simplifying 3160 unary operators... done! [2400 unary operators]
[t=0.0137428s, 26288 KB] time to simplify: 0.000837474s
[t=0.0138518s, 26288 KB] Initializing additive heuristic...
[t=0.0138666s, 26288 KB] Initializing FF heuristic...
[t=0.0139285s, 26288 KB] Building successor generator...done!
[t=0.0141296s, 26288 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0141494s, 26288 KB] time for successor generation creation: 0.00015806s
[t=0.0141824s, 26288 KB] Variables: 41
[t=0.014191s, 26288 KB] FactPairs: 462
[t=0.0142023s, 26288 KB] Bytes per state: 16
[t=0.0144143s, 26288 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0144598s, 26288 KB] 39 initial landmarks, 14 goal landmarks
[t=0.0145193s, 26288 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0145295s, 26288 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0145386s, 26288 KB] g=0, 1 evaluated, 0 expanded
[t=0.0145535s, 26288 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0145622s, 26288 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0146873s, 26288 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0146964s, 26288 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0147045s, 26288 KB] g=2, 6 evaluated, 5 expanded
[t=0.014797s, 26288 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0148063s, 26288 KB] g=3, 10 evaluated, 9 expanded
[t=0.0148583s, 26288 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0148676s, 26288 KB] g=4, 12 evaluated, 11 expanded
[t=0.0150519s, 26288 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0150617s, 26288 KB] g=5, 20 evaluated, 19 expanded
[t=0.0151162s, 26288 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0151283s, 26288 KB] g=6, 22 evaluated, 21 expanded
[t=0.0152656s, 26288 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0152749s, 26288 KB] g=7, 28 evaluated, 27 expanded
[t=0.0154624s, 26288 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0154714s, 26288 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0154801s, 26288 KB] g=10, 36 evaluated, 35 expanded
[t=0.0156133s, 26288 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0156227s, 26288 KB] g=12, 42 evaluated, 41 expanded
[t=0.0156748s, 26288 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0156841s, 26288 KB] g=12, 44 evaluated, 43 expanded
[t=0.0158339s, 26288 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.015844s, 26288 KB] g=14, 51 evaluated, 50 expanded
[t=0.0159725s, 26288 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0159991s, 26288 KB] g=14, 57 evaluated, 56 expanded
[t=0.0161341s, 26288 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0161439s, 26288 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0161517s, 26288 KB] g=16, 63 evaluated, 62 expanded
[t=0.0162457s, 26288 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0162547s, 26288 KB] g=17, 67 evaluated, 66 expanded
[t=0.016433s, 26288 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0164698s, 26288 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.01648s, 26288 KB] g=18, 70 evaluated, 69 expanded
[t=0.0165794s, 26288 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0165894s, 26288 KB] g=19, 74 evaluated, 73 expanded
[t=0.0166219s, 26288 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0166312s, 26288 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0166389s, 26288 KB] g=20, 75 evaluated, 74 expanded
[t=0.0167318s, 26288 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0167408s, 26288 KB] g=22, 79 evaluated, 78 expanded
[t=0.0169111s, 26288 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0169199s, 26288 KB] g=24, 87 evaluated, 86 expanded
[t=0.0171014s, 26288 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0171111s, 26288 KB] g=26, 95 evaluated, 94 expanded
[t=0.0172479s, 26288 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0172658s, 26288 KB] g=26, 100 evaluated, 99 expanded
[t=0.0173819s, 26288 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0173915s, 26288 KB] g=28, 105 evaluated, 104 expanded
[t=0.0176012s, 26288 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0176118s, 26288 KB] g=30, 115 evaluated, 114 expanded
[t=0.0177624s, 26288 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0177735s, 26288 KB] g=30, 122 evaluated, 121 expanded
[t=0.0178922s, 26288 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0179021s, 26288 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0179122s, 26288 KB] g=32, 127 evaluated, 126 expanded
[t=0.0180265s, 26288 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0180372s, 26288 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0180451s, 26288 KB] g=34, 131 evaluated, 130 expanded
[t=0.0181348s, 26288 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0181439s, 26288 KB] g=36, 135 evaluated, 134 expanded
[t=0.018287s, 26288 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0182966s, 26288 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0183046s, 26288 KB] g=38, 141 evaluated, 140 expanded
[t=0.0183953s, 26288 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0184187s, 26288 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0184275s, 26288 KB] g=40, 145 evaluated, 144 expanded
[t=0.0186589s, 26288 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0186849s, 26288 KB] g=45, 156 evaluated, 155 expanded
[t=0.0187156s, 26288 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.018725s, 26288 KB] g=46, 157 evaluated, 156 expanded
[t=0.0187789s, 26288 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0187896s, 26288 KB] g=47, 159 evaluated, 158 expanded
[t=0.01882s, 26288 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0188295s, 26288 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0188377s, 26288 KB] g=48, 160 evaluated, 159 expanded
[t=0.0189316s, 26288 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0189415s, 26288 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0189497s, 26288 KB] g=50, 164 evaluated, 163 expanded
[t=0.0190158s, 26288 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0190247s, 26288 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0190329s, 26288 KB] g=52, 167 evaluated, 166 expanded
[t=0.0192331s, 26288 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0192422s, 26288 KB] g=59, 178 evaluated, 177 expanded
[t=0.0193151s, 26288 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0193239s, 26288 KB] g=62, 182 evaluated, 181 expanded
[t=0.0193506s, 26288 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0193592s, 26288 KB] g=63, 183 evaluated, 182 expanded
[t=0.0193838s, 26288 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0193927s, 26288 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0194006s, 26288 KB] g=64, 184 evaluated, 183 expanded
[t=0.0194634s, 26288 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0194723s, 26288 KB] g=68, 188 evaluated, 187 expanded
[t=0.0194891s, 26288 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0194974s, 26288 KB] g=69, 189 evaluated, 188 expanded
[t=0.0195118s, 26288 KB] Solution found!
[t=0.0195223s, 26288 KB] Actual search time: 0.00505713s
unstack b12 b4 (1)
put-down b12 (1)
unstack b14 b15 (1)
put-down b14 (1)
unstack b2 b5 (1)
put-down b2 (1)
unstack b4 b13 (1)
put-down b4 (1)
unstack b13 b3 (1)
stack b13 b12 (1)
unstack b17 b8 (1)
stack b17 b3 (1)
unstack b8 b7 (1)
put-down b8 (1)
pick-up b4 (1)
stack b4 b8 (1)
unstack b5 b6 (1)
stack b5 b14 (1)
unstack b7 b1 (1)
stack b7 b6 (1)
unstack b17 b3 (1)
put-down b17 (1)
unstack b3 b11 (1)
stack b3 b1 (1)
unstack b11 b10 (1)
stack b11 b17 (1)
unstack b10 b9 (1)
put-down b10 (1)
unstack b9 b20 (1)
stack b9 b11 (1)
pick-up b15 (1)
stack b15 b9 (1)
unstack b20 b18 (1)
stack b20 b5 (1)
unstack b3 b1 (1)
put-down b3 (1)
pick-up b1 (1)
stack b1 b10 (1)
pick-up b3 (1)
stack b3 b1 (1)
unstack b7 b6 (1)
put-down b7 (1)
unstack b6 b19 (1)
put-down b6 (1)
unstack b19 b16 (1)
stack b19 b2 (1)
pick-up b16 (1)
stack b16 b13 (1)
pick-up b6 (1)
stack b6 b19 (1)
pick-up b7 (1)
stack b7 b6 (1)
unstack b15 b9 (1)
put-down b15 (1)
unstack b9 b11 (1)
put-down b9 (1)
pick-up b15 (1)
stack b15 b9 (1)
unstack b11 b17 (1)
put-down b11 (1)
pick-up b17 (1)
stack b17 b3 (1)
pick-up b11 (1)
stack b11 b17 (1)
unstack b15 b9 (1)
put-down b15 (1)
pick-up b9 (1)
stack b9 b11 (1)
pick-up b15 (1)
stack b15 b9 (1)
[t=0.0195318s, 26288 KB] Plan length: 70 step(s).
[t=0.0195318s, 26288 KB] Plan cost: 70
[t=0.0195318s, 26288 KB] Expanded 189 state(s).
[t=0.0195318s, 26288 KB] Reopened 0 state(s).
[t=0.0195318s, 26288 KB] Evaluated 190 state(s).
[t=0.0195318s, 26288 KB] Evaluations: 380
[t=0.0195318s, 26288 KB] Generated 1694 state(s).
[t=0.0195318s, 26288 KB] Dead ends: 0 state(s).
[t=0.0195318s, 26288 KB] Number of registered states: 190
[t=0.0195318s, 26288 KB] Int hash set load factor: 190/256 = 0.742188
[t=0.0195318s, 26288 KB] Int hash set resizes: 8
[t=0.0195318s, 26288 KB] Search time: 0.00511904s
[t=0.0195318s, 26288 KB] Total time: 0.0195318s
Solution found.
Peak memory: 26288 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.14s
