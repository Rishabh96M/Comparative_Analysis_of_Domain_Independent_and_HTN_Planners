INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_33/bws_problem_33_19.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.022s wall-clock]
3500 relevant atoms
2343 auxiliary atoms
5843 final queue length
10272 total queue pushes
Completing instantiation... [0.050s CPU, 0.041s wall-clock]
Instantiating: [0.070s CPU, 0.065s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.002s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
34 uncovered facts
Choosing groups: [0.000s CPU, 0.002s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.010s CPU, 0.012s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.001s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.002s wall-clock]
Translating task: [0.060s CPU, 0.058s wall-clock]
3234 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
66 propositions removed
Detecting unreachable propositions: [0.030s CPU, 0.028s wall-clock]
Reordering and filtering variables...
67 of 67 variables necessary.
34 of 67 mutex groups necessary.
2178 of 2178 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.014s wall-clock]
Translator variables: 67
Translator derived variables: 0
Translator facts: 1190
Translator goal facts: 27
Translator mutex groups: 34
Translator total mutex groups size: 1156
Translator operators: 2178
Translator axioms: 0
Translator task size: 18676
Translator peak memory: 43276 KB
Writing output... [0.010s CPU, 0.012s wall-clock]
Done! [0.200s CPU, 0.196s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.2967e-05s, 24488 KB] reading input...
[t=0.00797733s, 26928 KB] done reading input!
[t=0.00891872s, 27324 KB] Initializing landmark count heuristic...
[t=0.00896897s, 27324 KB] Generating landmark graph...
[t=0.00911512s, 27456 KB] Building a landmark graph with reasonable orders.
[t=0.00923813s, 27588 KB] Initializing Exploration...
[t=0.00991183s, 28188 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0433544s, 29112 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0434621s, 29112 KB] Landmarks generation time: 0.0343484s
[t=0.0434825s, 29112 KB] Discovered 140 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0434985s, 29112 KB] 498 edges
[t=0.0435087s, 29112 KB] approx. reasonable orders
[t=0.0530282s, 29112 KB] approx. obedient reasonable orders
[t=0.0532598s, 29112 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0533088s, 29112 KB] Landmarks generation time: 0.0443519s
[t=0.0533387s, 29112 KB] Discovered 140 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0533606s, 29112 KB] 550 edges
[t=0.0533805s, 29112 KB] Landmark graph generation time: 0.0444276s
[t=0.0534013s, 29112 KB] Landmark graph contains 140 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0534347s, 29112 KB] Landmark graph contains 550 orderings.
[t=0.0542676s, 29112 KB] Simplifying 8646 unary operators... done! [6534 unary operators]
[t=0.0586492s, 29112 KB] time to simplify: 0.00444203s
[t=0.0588339s, 29112 KB] Initializing additive heuristic...
[t=0.0588559s, 29112 KB] Initializing FF heuristic...
[t=0.0589267s, 29112 KB] Building successor generator...done!
[t=0.0593189s, 29112 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0593297s, 29112 KB] time for successor generation creation: 0.00036234s
[t=0.0593722s, 29112 KB] Variables: 67
[t=0.059411s, 29112 KB] FactPairs: 1190
[t=0.0594307s, 29112 KB] Bytes per state: 32
[t=0.0596056s, 29112 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0597021s, 29112 KB] 65 initial landmarks, 27 goal landmarks
[t=0.0600211s, 29112 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 75
[t=0.0600425s, 29112 KB] New best heuristic value for ff(transform = adapt_costs(one)): 57
[t=0.0600559s, 29112 KB] g=0, 1 evaluated, 0 expanded
[t=0.0600778s, 29112 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 75
[t=0.060091s, 29112 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 57
[t=0.0604089s, 29112 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 74
[t=0.0604195s, 29112 KB] g=1, 7 evaluated, 6 expanded
[t=0.0606282s, 29112 KB] New best heuristic value for ff(transform = adapt_costs(one)): 56
[t=0.0606374s, 29112 KB] g=2, 11 evaluated, 10 expanded
[t=0.060892s, 29112 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 73
[t=0.0609013s, 29112 KB] g=3, 16 evaluated, 15 expanded
[t=0.0614597s, 29112 KB] New best heuristic value for ff(transform = adapt_costs(one)): 55
[t=0.0614695s, 29112 KB] g=4, 27 evaluated, 26 expanded
[t=0.0619397s, 29112 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 72
[t=0.0619625s, 29112 KB] g=5, 34 evaluated, 33 expanded
[t=0.0623519s, 29112 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 71
[t=0.0623667s, 29112 KB] g=7, 39 evaluated, 38 expanded
[t=0.0626068s, 29112 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 70
[t=0.0626205s, 29112 KB] New best heuristic value for ff(transform = adapt_costs(one)): 53
[t=0.0626339s, 29112 KB] g=6, 42 evaluated, 41 expanded
[t=0.0628709s, 29112 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 69
[t=0.0628855s, 29112 KB] g=7, 45 evaluated, 44 expanded
[t=0.0631241s, 29112 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 68
[t=0.0631377s, 29112 KB] g=9, 48 evaluated, 47 expanded
[t=0.0644254s, 29112 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 66
[t=0.0644441s, 29112 KB] New best heuristic value for ff(transform = adapt_costs(one)): 52
[t=0.0644651s, 29112 KB] g=12, 66 evaluated, 65 expanded
[t=0.0651176s, 29112 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 65
[t=0.0651312s, 29112 KB] g=14, 75 evaluated, 74 expanded
[t=0.0655034s, 29112 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 64
[t=0.0655174s, 29112 KB] New best heuristic value for ff(transform = adapt_costs(one)): 50
[t=0.0655309s, 29112 KB] g=14, 80 evaluated, 79 expanded
[t=0.0661885s, 29112 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 63
[t=0.0662302s, 29112 KB] g=16, 89 evaluated, 88 expanded
[t=0.0669411s, 29112 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 62
[t=0.0669747s, 29112 KB] New best heuristic value for ff(transform = adapt_costs(one)): 49
[t=0.0669941s, 29112 KB] g=16, 96 evaluated, 95 expanded
[t=0.0676767s, 29112 KB] New best heuristic value for ff(transform = adapt_costs(one)): 48
[t=0.0677126s, 29112 KB] g=18, 104 evaluated, 103 expanded
[t=0.0679178s, 29112 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 61
[t=0.0679556s, 29112 KB] g=18, 106 evaluated, 105 expanded
[t=0.0701899s, 29112 KB] New best heuristic value for ff(transform = adapt_costs(one)): 47
[t=0.0702611s, 29112 KB] g=20, 119 evaluated, 118 expanded
[t=0.0706238s, 29112 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 60
[t=0.0706346s, 29112 KB] g=20, 126 evaluated, 125 expanded
[t=0.0726689s, 29112 KB] New best heuristic value for ff(transform = adapt_costs(one)): 46
[t=0.0727168s, 29112 KB] g=24, 167 evaluated, 166 expanded
[t=0.0729337s, 29112 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.0729475s, 29112 KB] g=22, 170 evaluated, 169 expanded
[t=0.0737468s, 29112 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 58
[t=0.0737728s, 29112 KB] New best heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0737824s, 29112 KB] g=26, 185 evaluated, 184 expanded
[t=0.0742006s, 29112 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 57
[t=0.0742159s, 29112 KB] g=28, 193 evaluated, 192 expanded
[t=0.0751809s, 29112 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0752195s, 29112 KB] New best heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.0752285s, 29112 KB] g=30, 211 evaluated, 210 expanded
[t=0.0757223s, 29112 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0757323s, 29112 KB] g=32, 221 evaluated, 220 expanded
[t=0.0758169s, 29112 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0758328s, 29112 KB] g=32, 222 evaluated, 221 expanded
[t=0.0768932s, 29112 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0769109s, 29112 KB] g=34, 239 evaluated, 238 expanded
[t=0.0777163s, 29112 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0777418s, 29112 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0777541s, 29112 KB] g=36, 250 evaluated, 249 expanded
[t=0.0785143s, 29112 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0785348s, 29112 KB] g=38, 260 evaluated, 259 expanded
[t=0.0786289s, 29112 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0786422s, 29112 KB] g=38, 261 evaluated, 260 expanded
[t=0.0796823s, 29112 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0796961s, 29112 KB] g=40, 276 evaluated, 275 expanded
[t=0.080059s, 29112 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0800732s, 29112 KB] g=40, 281 evaluated, 280 expanded
[t=0.0807772s, 29112 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0807964s, 29112 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0808101s, 29112 KB] g=42, 291 evaluated, 290 expanded
[t=0.0812241s, 29112 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0812473s, 29112 KB] g=44, 297 evaluated, 296 expanded
[t=0.0816849s, 29112 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0816947s, 29112 KB] g=46, 306 evaluated, 305 expanded
[t=0.0821178s, 29112 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0821275s, 29112 KB] g=48, 315 evaluated, 314 expanded
[t=0.0833746s, 29112 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.083392s, 29112 KB] g=50, 342 evaluated, 341 expanded
[t=0.0841964s, 29112 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0842057s, 29112 KB] g=50, 359 evaluated, 358 expanded
[t=0.0903721s, 29112 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0904678s, 29112 KB] g=56, 485 evaluated, 484 expanded
[t=0.0907579s, 29112 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0907697s, 29112 KB] g=56, 491 evaluated, 490 expanded
[t=0.0914702s, 29112 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0914817s, 29112 KB] g=58, 506 evaluated, 505 expanded
[t=0.0924871s, 29112 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0925032s, 29112 KB] g=60, 526 evaluated, 525 expanded
[t=0.09321s, 29112 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0932224s, 29112 KB] g=62, 541 evaluated, 540 expanded
[t=0.0942463s, 29112 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0942562s, 29112 KB] g=64, 563 evaluated, 562 expanded
[t=0.0949829s, 29112 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0949969s, 29112 KB] g=62, 577 evaluated, 576 expanded
[t=0.0952896s, 29112 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0952998s, 29112 KB] g=66, 583 evaluated, 582 expanded
[t=0.0955804s, 29112 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0955895s, 29112 KB] g=64, 589 evaluated, 588 expanded
[t=0.101972s, 29112 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.102027s, 29112 KB] g=68, 723 evaluated, 722 expanded
[t=0.102468s, 29112 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.102484s, 29112 KB] g=70, 731 evaluated, 730 expanded
[t=0.104654s, 29112 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.104689s, 29112 KB] g=72, 779 evaluated, 778 expanded
[t=0.105141s, 29112 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.105157s, 29112 KB] g=74, 787 evaluated, 786 expanded
[t=0.10549s, 29112 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.1055s, 29112 KB] g=76, 794 evaluated, 793 expanded
[t=0.113288s, 29112 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.11333s, 29112 KB] g=88, 955 evaluated, 954 expanded
[t=0.113995s, 29112 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.114007s, 29112 KB] g=90, 969 evaluated, 968 expanded
[t=0.115379s, 29112 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.115395s, 29112 KB] g=92, 997 evaluated, 996 expanded
[t=0.115586s, 29112 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.115596s, 29112 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.115604s, 29112 KB] g=92, 1001 evaluated, 1000 expanded
[t=0.115967s, 29112 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.115977s, 29112 KB] g=94, 1009 evaluated, 1008 expanded
[t=0.117445s, 29112 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.11746s, 29112 KB] g=98, 1039 evaluated, 1038 expanded
[t=0.117774s, 29112 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.117784s, 29112 KB] g=100, 1046 evaluated, 1045 expanded
[t=0.118047s, 29112 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.118056s, 29112 KB] g=102, 1052 evaluated, 1051 expanded
[t=0.124518s, 29112 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.124541s, 29112 KB] g=118, 1202 evaluated, 1201 expanded
[t=0.1251s, 29112 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.125116s, 29112 KB] g=120, 1213 evaluated, 1212 expanded
[t=0.125493s, 29112 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.125507s, 29112 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.125516s, 29112 KB] g=122, 1223 evaluated, 1222 expanded
[t=0.125876s, 29112 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.125886s, 29112 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.125894s, 29112 KB] g=124, 1233 evaluated, 1232 expanded
[t=0.12621s, 29112 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.12622s, 29112 KB] g=126, 1242 evaluated, 1241 expanded
[t=0.126266s, 29112 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.126276s, 29112 KB] g=126, 1243 evaluated, 1242 expanded
[t=0.126761s, 29112 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.126778s, 29112 KB] g=128, 1257 evaluated, 1256 expanded
[t=0.126891s, 29112 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.1269s, 29112 KB] g=128, 1260 evaluated, 1259 expanded
[t=0.12721s, 29112 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.12722s, 29112 KB] g=130, 1269 evaluated, 1268 expanded
[t=0.127407s, 29112 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.127419s, 29112 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.127434s, 29112 KB] g=130, 1273 evaluated, 1272 expanded
[t=0.127546s, 29112 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.127556s, 29112 KB] g=131, 1276 evaluated, 1275 expanded
[t=0.127598s, 29112 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.127607s, 29112 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.127615s, 29112 KB] g=132, 1277 evaluated, 1276 expanded
[t=0.127818s, 29112 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.127826s, 29112 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.127834s, 29112 KB] g=134, 1283 evaluated, 1282 expanded
[t=0.128105s, 29112 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.128116s, 29112 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.128127s, 29112 KB] g=136, 1291 evaluated, 1290 expanded
[t=0.129227s, 29112 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.129238s, 29112 KB] g=140, 1323 evaluated, 1322 expanded
[t=0.129763s, 29112 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.129773s, 29112 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.129783s, 29112 KB] g=146, 1337 evaluated, 1336 expanded
[t=0.130633s, 29112 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.13065s, 29112 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.130659s, 29112 KB] g=156, 1354 evaluated, 1353 expanded
[t=0.134834s, 29112 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.134864s, 29112 KB] g=146, 1467 evaluated, 1466 expanded
[t=0.135963s, 29112 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.135976s, 29112 KB] g=156, 1502 evaluated, 1501 expanded
[t=0.13655s, 29112 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.136568s, 29112 KB] g=158, 1521 evaluated, 1520 expanded
[t=0.136811s, 29112 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.136825s, 29112 KB] g=162, 1530 evaluated, 1529 expanded
[t=0.136949s, 29112 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.136963s, 29112 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.136972s, 29112 KB] g=164, 1533 evaluated, 1532 expanded
[t=0.137219s, 29112 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.137229s, 29112 KB] g=172, 1544 evaluated, 1543 expanded
[t=0.137251s, 29112 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.13726s, 29112 KB] g=173, 1545 evaluated, 1544 expanded
[t=0.137279s, 29112 KB] Solution found!
[t=0.137295s, 29112 KB] Actual search time: 0.0775758s
unstack b1 b4 (1)
put-down b1 (1)
unstack b21 b5 (1)
put-down b21 (1)
unstack b19 b33 (1)
stack b19 b21 (1)
unstack b31 b26 (1)
put-down b31 (1)
unstack b26 b23 (1)
put-down b26 (1)
unstack b23 b18 (1)
stack b23 b29 (1)
pick-up b33 (1)
stack b33 b19 (1)
unstack b5 b2 (1)
stack b5 b28 (1)
unstack b18 b9 (1)
stack b18 b2 (1)
unstack b9 b11 (1)
put-down b9 (1)
unstack b11 b12 (1)
put-down b11 (1)
unstack b12 b3 (1)
stack b12 b4 (1)
pick-up b3 (1)
stack b3 b23 (1)
unstack b8 b25 (1)
put-down b8 (1)
unstack b25 b16 (1)
put-down b25 (1)
unstack b12 b4 (1)
put-down b12 (1)
unstack b16 b15 (1)
stack b16 b33 (1)
pick-up b11 (1)
stack b11 b16 (1)
pick-up b12 (1)
stack b12 b4 (1)
pick-up b15 (1)
stack b15 b3 (1)
pick-up b31 (1)
stack b31 b15 (1)
unstack b5 b28 (1)
put-down b5 (1)
unstack b28 b27 (1)
put-down b28 (1)
pick-up b5 (1)
stack b5 b28 (1)
unstack b27 b17 (1)
put-down b27 (1)
unstack b17 b24 (1)
put-down b17 (1)
unstack b24 b30 (1)
put-down b24 (1)
pick-up b27 (1)
stack b27 b30 (1)
unstack b12 b4 (1)
put-down b12 (1)
unstack b4 b20 (1)
stack b4 b27 (1)
pick-up b12 (1)
stack b12 b4 (1)
unstack b5 b28 (1)
put-down b5 (1)
pick-up b20 (1)
stack b20 b5 (1)
pick-up b28 (1)
stack b28 b24 (1)
unstack b20 b5 (1)
put-down b20 (1)
pick-up b5 (1)
stack b5 b28 (1)
pick-up b20 (1)
stack b20 b5 (1)
unstack b12 b4 (1)
put-down b12 (1)
unstack b4 b27 (1)
put-down b4 (1)
pick-up b12 (1)
stack b12 b4 (1)
unstack b18 b2 (1)
put-down b18 (1)
unstack b27 b30 (1)
put-down b27 (1)
unstack b30 b7 (1)
put-down b30 (1)
pick-up b7 (1)
stack b7 b11 (1)
pick-up b30 (1)
stack b30 b7 (1)
pick-up b27 (1)
stack b27 b30 (1)
pick-up b18 (1)
stack b18 b2 (1)
unstack b12 b4 (1)
put-down b12 (1)
pick-up b4 (1)
stack b4 b27 (1)
pick-up b12 (1)
stack b12 b4 (1)
unstack b31 b15 (1)
put-down b31 (1)
unstack b15 b3 (1)
put-down b15 (1)
unstack b3 b23 (1)
put-down b3 (1)
pick-up b15 (1)
stack b15 b3 (1)
pick-up b31 (1)
stack b31 b15 (1)
unstack b18 b2 (1)
put-down b18 (1)
unstack b23 b29 (1)
put-down b23 (1)
unstack b29 b6 (1)
put-down b29 (1)
unstack b6 b14 (1)
stack b6 b18 (1)
unstack b14 b10 (1)
stack b14 b20 (1)
unstack b10 b32 (1)
stack b10 b9 (1)
pick-up b17 (1)
stack b17 b10 (1)
unstack b32 b22 (1)
stack b32 b8 (1)
pick-up b2 (1)
stack b2 b32 (1)
unstack b22 b13 (1)
stack b22 b12 (1)
pick-up b26 (1)
stack b26 b22 (1)
pick-up b29 (1)
stack b29 b6 (1)
pick-up b23 (1)
stack b23 b29 (1)
unstack b2 b32 (1)
put-down b2 (1)
unstack b32 b8 (1)
put-down b32 (1)
pick-up b8 (1)
stack b8 b14 (1)
pick-up b32 (1)
stack b32 b8 (1)
pick-up b2 (1)
stack b2 b32 (1)
unstack b23 b29 (1)
put-down b23 (1)
unstack b29 b6 (1)
put-down b29 (1)
pick-up b23 (1)
stack b23 b29 (1)
unstack b6 b18 (1)
put-down b6 (1)
pick-up b18 (1)
stack b18 b2 (1)
pick-up b6 (1)
stack b6 b18 (1)
unstack b23 b29 (1)
put-down b23 (1)
pick-up b29 (1)
stack b29 b6 (1)
pick-up b23 (1)
stack b23 b29 (1)
unstack b31 b15 (1)
put-down b31 (1)
unstack b15 b3 (1)
put-down b15 (1)
pick-up b3 (1)
stack b3 b23 (1)
pick-up b15 (1)
stack b15 b3 (1)
pick-up b31 (1)
stack b31 b15 (1)
[t=0.137306s, 29112 KB] Plan length: 174 step(s).
[t=0.137306s, 29112 KB] Plan cost: 174
[t=0.137306s, 29112 KB] Expanded 1545 state(s).
[t=0.137306s, 29112 KB] Reopened 0 state(s).
[t=0.137306s, 29112 KB] Evaluated 1546 state(s).
[t=0.137306s, 29112 KB] Evaluations: 3092
[t=0.137306s, 29112 KB] Generated 19254 state(s).
[t=0.137306s, 29112 KB] Dead ends: 0 state(s).
[t=0.137306s, 29112 KB] Number of registered states: 1546
[t=0.137306s, 29112 KB] Int hash set load factor: 1546/2048 = 0.754883
[t=0.137306s, 29112 KB] Int hash set resizes: 11
[t=0.137306s, 29112 KB] Search time: 0.0777019s
[t=0.137306s, 29112 KB] Total time: 0.137306s
Solution found.
Peak memory: 29112 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.39s
