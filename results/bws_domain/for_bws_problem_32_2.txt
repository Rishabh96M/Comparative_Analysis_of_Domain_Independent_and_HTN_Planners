INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_32/bws_problem_32_2.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.000s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.019s wall-clock]
3298 relevant atoms
2208 auxiliary atoms
5506 final queue length
9671 total queue pushes
Completing instantiation... [0.050s CPU, 0.044s wall-clock]
Instantiating: [0.070s CPU, 0.065s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.003s wall-clock]
Collecting mutex groups... [0.010s CPU, 0.000s wall-clock]
Choosing groups...
33 uncovered facts
Choosing groups: [0.000s CPU, 0.002s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.010s CPU, 0.012s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.001s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.003s wall-clock]
Translating task: [0.050s CPU, 0.054s wall-clock]
3040 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
64 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.028s wall-clock]
Reordering and filtering variables...
65 of 65 variables necessary.
33 of 65 mutex groups necessary.
2048 of 2048 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.013s wall-clock]
Translator variables: 65
Translator derived variables: 0
Translator facts: 1122
Translator goal facts: 27
Translator mutex groups: 33
Translator total mutex groups size: 1089
Translator operators: 2048
Translator axioms: 0
Translator task size: 17567
Translator peak memory: 42624 KB
Writing output... [0.010s CPU, 0.012s wall-clock]
Done! [0.190s CPU, 0.190s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=1.9975e-05s, 24488 KB] reading input...
[t=0.00621561s, 26784 KB] done reading input!
[t=0.00749982s, 27180 KB] Initializing landmark count heuristic...
[t=0.00756432s, 27180 KB] Generating landmark graph...
[t=0.00771744s, 27312 KB] Building a landmark graph with reasonable orders.
[t=0.00782391s, 27312 KB] Initializing Exploration...
[t=0.00847152s, 27768 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0404752s, 28956 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0406285s, 28956 KB] Landmarks generation time: 0.0329208s
[t=0.0406544s, 28956 KB] Discovered 144 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0406727s, 28956 KB] 931 edges
[t=0.0406827s, 28956 KB] approx. reasonable orders
[t=0.0421542s, 28956 KB] approx. obedient reasonable orders
[t=0.0422536s, 28956 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.042269s, 28956 KB] Landmarks generation time: 0.0347027s
[t=0.0422803s, 28956 KB] Discovered 144 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0422889s, 28956 KB] 946 edges
[t=0.0422983s, 28956 KB] Landmark graph generation time: 0.0347411s
[t=0.0423069s, 28956 KB] Landmark graph contains 144 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0423151s, 28956 KB] Landmark graph contains 946 orderings.
[t=0.0432689s, 28988 KB] Simplifying 8128 unary operators... done! [6144 unary operators]
[t=0.0455946s, 28988 KB] time to simplify: 0.00235455s
[t=0.0457511s, 29132 KB] Initializing additive heuristic...
[t=0.0457729s, 29132 KB] Initializing FF heuristic...
[t=0.0458303s, 29132 KB] Building successor generator...done!
[t=0.0461815s, 29132 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0461925s, 29132 KB] time for successor generation creation: 0.000315994s
[t=0.0462076s, 29132 KB] Variables: 65
[t=0.0462155s, 29132 KB] FactPairs: 1122
[t=0.0462232s, 29132 KB] Bytes per state: 32
[t=0.0463068s, 29132 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0463412s, 29132 KB] 65 initial landmarks, 27 goal landmarks
[t=0.0464216s, 29132 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 79
[t=0.0464314s, 29132 KB] New best heuristic value for ff(transform = adapt_costs(one)): 58
[t=0.04644s, 29132 KB] g=0, 1 evaluated, 0 expanded
[t=0.0464548s, 29132 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 79
[t=0.0464639s, 29132 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 58
[t=0.0467485s, 29132 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 78
[t=0.0467707s, 29132 KB] g=1, 6 evaluated, 5 expanded
[t=0.0468752s, 29132 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 77
[t=0.0468845s, 29132 KB] New best heuristic value for ff(transform = adapt_costs(one)): 57
[t=0.0468926s, 29132 KB] g=2, 8 evaluated, 7 expanded
[t=0.047081s, 29132 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 76
[t=0.0470902s, 29132 KB] g=3, 12 evaluated, 11 expanded
[t=0.04788s, 29132 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 75
[t=0.0478942s, 29132 KB] g=5, 25 evaluated, 24 expanded
[t=0.0484322s, 29132 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 74
[t=0.0484424s, 29132 KB] g=8, 37 evaluated, 36 expanded
[t=0.0490066s, 29132 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 73
[t=0.0490158s, 29132 KB] g=10, 49 evaluated, 48 expanded
[t=0.049527s, 29132 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 72
[t=0.0495361s, 29132 KB] g=12, 60 evaluated, 59 expanded
[t=0.0501674s, 29132 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 71
[t=0.0501797s, 29132 KB] g=14, 73 evaluated, 72 expanded
[t=0.0510652s, 29132 KB] New best heuristic value for ff(transform = adapt_costs(one)): 56
[t=0.0510766s, 29132 KB] g=16, 93 evaluated, 92 expanded
[t=0.0513845s, 29132 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 70
[t=0.0514002s, 29132 KB] g=16, 100 evaluated, 99 expanded
[t=0.0519702s, 29132 KB] New best heuristic value for ff(transform = adapt_costs(one)): 55
[t=0.0519804s, 29132 KB] g=18, 113 evaluated, 112 expanded
[t=0.0527449s, 29132 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 69
[t=0.0527596s, 29132 KB] g=19, 128 evaluated, 127 expanded
[t=0.0543948s, 29132 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 67
[t=0.0544055s, 29132 KB] g=22, 164 evaluated, 163 expanded
[t=0.0557021s, 29132 KB] New best heuristic value for ff(transform = adapt_costs(one)): 54
[t=0.0557172s, 29132 KB] g=26, 191 evaluated, 190 expanded
[t=0.0561178s, 29132 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 66
[t=0.0561286s, 29132 KB] g=28, 200 evaluated, 199 expanded
[t=0.0569457s, 29132 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 65
[t=0.0569565s, 29132 KB] g=31, 218 evaluated, 217 expanded
[t=0.0570159s, 29132 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 63
[t=0.0570253s, 29132 KB] g=32, 219 evaluated, 218 expanded
[t=0.0576463s, 29132 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 60
[t=0.0576694s, 29132 KB] New best heuristic value for ff(transform = adapt_costs(one)): 53
[t=0.0576801s, 29132 KB] g=34, 230 evaluated, 229 expanded
[t=0.0581868s, 29132 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.0582047s, 29132 KB] g=36, 241 evaluated, 240 expanded
[t=0.0582627s, 29132 KB] New best heuristic value for ff(transform = adapt_costs(one)): 52
[t=0.0582725s, 29132 KB] g=36, 242 evaluated, 241 expanded
[t=0.0586154s, 29132 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 58
[t=0.0586302s, 29132 KB] g=37, 249 evaluated, 248 expanded
[t=0.058738s, 29132 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0587486s, 29132 KB] g=38, 251 evaluated, 250 expanded
[t=0.0595459s, 29132 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0595586s, 29132 KB] g=40, 268 evaluated, 267 expanded
[t=0.0601867s, 29132 KB] New best heuristic value for ff(transform = adapt_costs(one)): 51
[t=0.060202s, 29132 KB] g=40, 280 evaluated, 279 expanded
[t=0.0607932s, 29132 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0608042s, 29132 KB] g=42, 293 evaluated, 292 expanded
[t=0.0613228s, 29132 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0613343s, 29132 KB] New best heuristic value for ff(transform = adapt_costs(one)): 50
[t=0.0613433s, 29132 KB] g=44, 304 evaluated, 303 expanded
[t=0.0619828s, 29132 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0620011s, 29132 KB] New best heuristic value for ff(transform = adapt_costs(one)): 49
[t=0.0620118s, 29132 KB] g=46, 317 evaluated, 316 expanded
[t=0.0628003s, 29132 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0628604s, 29132 KB] New best heuristic value for ff(transform = adapt_costs(one)): 48
[t=0.0628798s, 29132 KB] g=48, 330 evaluated, 329 expanded
[t=0.0635314s, 29132 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0635594s, 29132 KB] New best heuristic value for ff(transform = adapt_costs(one)): 47
[t=0.0635847s, 29132 KB] g=50, 342 evaluated, 341 expanded
[t=0.0642515s, 29132 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0642702s, 29132 KB] g=52, 354 evaluated, 353 expanded
[t=0.0650026s, 29132 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0650184s, 29132 KB] New best heuristic value for ff(transform = adapt_costs(one)): 46
[t=0.0650277s, 29132 KB] g=54, 367 evaluated, 366 expanded
[t=0.0662767s, 29132 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0662886s, 29132 KB] New best heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0662973s, 29132 KB] g=56, 393 evaluated, 392 expanded
[t=0.0670037s, 29132 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0670182s, 29132 KB] New best heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.0670264s, 29132 KB] g=58, 407 evaluated, 406 expanded
[t=0.0676208s, 29132 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.067642s, 29132 KB] g=60, 420 evaluated, 419 expanded
[t=0.0677007s, 29132 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0677099s, 29132 KB] g=60, 421 evaluated, 420 expanded
[t=0.0688031s, 29132 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.068816s, 29132 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.068825s, 29132 KB] g=62, 445 evaluated, 444 expanded
[t=0.0695375s, 29132 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0695644s, 29132 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.069574s, 29132 KB] g=64, 458 evaluated, 457 expanded
[t=0.0701246s, 29132 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0701389s, 29132 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0701473s, 29132 KB] g=66, 469 evaluated, 468 expanded
[t=0.0706712s, 29132 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0706831s, 29132 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0706909s, 29132 KB] g=68, 480 evaluated, 479 expanded
[t=0.0711769s, 29132 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0711876s, 29132 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0711954s, 29132 KB] g=70, 491 evaluated, 490 expanded
[t=0.0717236s, 29132 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0717337s, 29132 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0717416s, 29132 KB] g=72, 503 evaluated, 502 expanded
[t=0.0722729s, 29132 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0722869s, 29132 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0722953s, 29132 KB] g=74, 513 evaluated, 512 expanded
[t=0.072699s, 29132 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0727188s, 29132 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0727272s, 29132 KB] g=76, 522 evaluated, 521 expanded
[t=0.0769858s, 29132 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0770482s, 29132 KB] g=80, 613 evaluated, 612 expanded
[t=0.0774311s, 29132 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0774445s, 29132 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0774535s, 29132 KB] g=82, 621 evaluated, 620 expanded
[t=0.0806546s, 29132 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0806769s, 29132 KB] g=88, 685 evaluated, 684 expanded
[t=0.0810953s, 29132 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0811056s, 29132 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0811136s, 29132 KB] g=90, 694 evaluated, 693 expanded
[t=0.0814747s, 29132 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0814843s, 29132 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0814928s, 29132 KB] g=92, 702 evaluated, 701 expanded
[t=0.0839785s, 29132 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0839956s, 29132 KB] g=98, 756 evaluated, 755 expanded
[t=0.0844205s, 29132 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0844352s, 29132 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0844441s, 29132 KB] g=100, 764 evaluated, 763 expanded
[t=0.0847445s, 29132 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0847536s, 29132 KB] g=100, 770 evaluated, 769 expanded
[t=0.0850702s, 29132 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0850804s, 29132 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0850882s, 29132 KB] g=102, 777 evaluated, 776 expanded
[t=0.0887693s, 29132 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0887867s, 29132 KB] g=110, 858 evaluated, 857 expanded
[t=0.0890135s, 29132 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0890236s, 29132 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0890319s, 29132 KB] g=112, 863 evaluated, 862 expanded
[t=0.0927243s, 29132 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0927423s, 29132 KB] g=120, 943 evaluated, 942 expanded
[t=0.0929271s, 29132 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0929365s, 29132 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0929442s, 29132 KB] g=122, 947 evaluated, 946 expanded
[t=0.0961608s, 29132 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.096182s, 29132 KB] g=134, 1018 evaluated, 1017 expanded
[t=0.0969101s, 29132 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0969237s, 29132 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.096932s, 29132 KB] g=140, 1032 evaluated, 1031 expanded
[t=0.105423s, 29132 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.10549s, 29132 KB] g=158, 1212 evaluated, 1211 expanded
[t=0.105679s, 29132 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.10569s, 29132 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.105698s, 29132 KB] g=160, 1216 evaluated, 1215 expanded
[t=0.10722s, 29132 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.107241s, 29132 KB] g=168, 1248 evaluated, 1247 expanded
[t=0.107336s, 29132 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.107345s, 29132 KB] g=168, 1250 evaluated, 1249 expanded
[t=0.107479s, 29132 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.107489s, 29132 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.107496s, 29132 KB] g=170, 1253 evaluated, 1252 expanded
[t=0.169112s, 29132 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.169182s, 29132 KB] g=226, 2554 evaluated, 2553 expanded
[t=0.169332s, 29132 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.169355s, 29132 KB] g=228, 2558 evaluated, 2557 expanded
[t=0.171347s, 29132 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.171365s, 29132 KB] g=240, 2612 evaluated, 2611 expanded
[t=0.171669s, 29132 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.171679s, 29132 KB] g=244, 2621 evaluated, 2620 expanded
[t=0.171783s, 29132 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.171792s, 29132 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.1718s, 29132 KB] g=246, 2624 evaluated, 2623 expanded
[t=0.172705s, 29132 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.172718s, 29132 KB] g=262, 2657 evaluated, 2656 expanded
[t=0.172961s, 29132 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.17297s, 29132 KB] g=270, 2668 evaluated, 2667 expanded
[t=0.172998s, 29132 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.173007s, 29132 KB] g=270, 2669 evaluated, 2668 expanded
[t=0.173027s, 29132 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.173036s, 29132 KB] g=271, 2670 evaluated, 2669 expanded
[t=0.173053s, 29132 KB] Solution found!
[t=0.173069s, 29132 KB] Actual search time: 0.126725s
unstack b27 b21 (1)
stack b27 b28 (1)
unstack b21 b19 (1)
put-down b21 (1)
unstack b8 b31 (1)
put-down b8 (1)
unstack b19 b2 (1)
put-down b19 (1)
unstack b2 b10 (1)
put-down b2 (1)
unstack b31 b7 (1)
put-down b31 (1)
unstack b5 b22 (1)
put-down b5 (1)
pick-up b7 (1)
stack b7 b22 (1)
unstack b13 b25 (1)
put-down b13 (1)
unstack b25 b29 (1)
put-down b25 (1)
pick-up b29 (1)
stack b29 b21 (1)
pick-up b10 (1)
stack b10 b2 (1)
pick-up b13 (1)
stack b13 b25 (1)
unstack b27 b28 (1)
put-down b27 (1)
unstack b28 b12 (1)
put-down b28 (1)
unstack b12 b26 (1)
stack b12 b7 (1)
unstack b26 b32 (1)
stack b26 b10 (1)
unstack b32 b24 (1)
put-down b32 (1)
unstack b24 b4 (1)
stack b24 b5 (1)
pick-up b27 (1)
stack b27 b28 (1)
unstack b4 b23 (1)
put-down b4 (1)
unstack b23 b20 (1)
put-down b23 (1)
unstack b20 b16 (1)
put-down b20 (1)
unstack b16 b30 (1)
stack b16 b19 (1)
unstack b30 b1 (1)
stack b30 b16 (1)
unstack b1 b6 (1)
put-down b1 (1)
unstack b6 b18 (1)
put-down b6 (1)
unstack b18 b15 (1)
put-down b18 (1)
unstack b15 b11 (1)
stack b15 b31 (1)
unstack b11 b9 (1)
stack b11 b29 (1)
pick-up b8 (1)
stack b8 b6 (1)
pick-up b1 (1)
stack b1 b11 (1)
unstack b9 b14 (1)
stack b9 b27 (1)
unstack b14 b3 (1)
stack b14 b13 (1)
unstack b3 b17 (1)
put-down b3 (1)
pick-up b17 (1)
stack b17 b30 (1)
pick-up b32 (1)
stack b32 b15 (1)
pick-up b4 (1)
stack b4 b18 (1)
unstack b24 b5 (1)
put-down b24 (1)
pick-up b5 (1)
stack b5 b1 (1)
pick-up b24 (1)
stack b24 b5 (1)
unstack b26 b10 (1)
put-down b26 (1)
unstack b10 b2 (1)
put-down b10 (1)
pick-up b2 (1)
stack b2 b4 (1)
pick-up b10 (1)
stack b10 b2 (1)
pick-up b26 (1)
stack b26 b10 (1)
unstack b12 b7 (1)
put-down b12 (1)
unstack b7 b22 (1)
put-down b7 (1)
pick-up b22 (1)
stack b22 b23 (1)
pick-up b7 (1)
stack b7 b22 (1)
pick-up b12 (1)
stack b12 b7 (1)
unstack b14 b13 (1)
put-down b14 (1)
unstack b13 b25 (1)
put-down b13 (1)
pick-up b25 (1)
stack b25 b32 (1)
pick-up b13 (1)
stack b13 b25 (1)
pick-up b14 (1)
stack b14 b13 (1)
unstack b9 b27 (1)
put-down b9 (1)
unstack b27 b28 (1)
put-down b27 (1)
pick-up b28 (1)
stack b28 b14 (1)
pick-up b27 (1)
stack b27 b28 (1)
pick-up b9 (1)
stack b9 b27 (1)
unstack b17 b30 (1)
put-down b17 (1)
unstack b30 b16 (1)
put-down b30 (1)
pick-up b17 (1)
stack b17 b30 (1)
unstack b16 b19 (1)
put-down b16 (1)
pick-up b19 (1)
stack b19 b9 (1)
pick-up b16 (1)
stack b16 b19 (1)
unstack b17 b30 (1)
put-down b17 (1)
pick-up b30 (1)
stack b30 b16 (1)
pick-up b17 (1)
stack b17 b30 (1)
unstack b24 b5 (1)
put-down b24 (1)
unstack b5 b1 (1)
put-down b5 (1)
unstack b1 b11 (1)
put-down b1 (1)
pick-up b5 (1)
stack b5 b1 (1)
pick-up b24 (1)
stack b24 b5 (1)
unstack b11 b29 (1)
put-down b11 (1)
unstack b29 b21 (1)
put-down b29 (1)
pick-up b21 (1)
stack b21 b26 (1)
pick-up b29 (1)
stack b29 b21 (1)
pick-up b11 (1)
stack b11 b29 (1)
unstack b24 b5 (1)
put-down b24 (1)
unstack b5 b1 (1)
put-down b5 (1)
pick-up b1 (1)
stack b1 b11 (1)
pick-up b5 (1)
stack b5 b1 (1)
pick-up b24 (1)
stack b24 b5 (1)
unstack b17 b30 (1)
put-down b17 (1)
unstack b30 b16 (1)
put-down b30 (1)
pick-up b17 (1)
stack b17 b30 (1)
unstack b16 b19 (1)
put-down b16 (1)
unstack b19 b9 (1)
put-down b19 (1)
unstack b9 b27 (1)
put-down b9 (1)
pick-up b19 (1)
stack b19 b9 (1)
pick-up b16 (1)
stack b16 b19 (1)
unstack b17 b30 (1)
put-down b17 (1)
pick-up b30 (1)
stack b30 b16 (1)
pick-up b17 (1)
stack b17 b30 (1)
unstack b27 b28 (1)
put-down b27 (1)
unstack b28 b14 (1)
put-down b28 (1)
pick-up b27 (1)
stack b27 b28 (1)
unstack b14 b13 (1)
put-down b14 (1)
unstack b13 b25 (1)
put-down b13 (1)
pick-up b14 (1)
stack b14 b13 (1)
unstack b27 b28 (1)
put-down b27 (1)
pick-up b28 (1)
stack b28 b14 (1)
pick-up b27 (1)
stack b27 b28 (1)
unstack b25 b32 (1)
put-down b25 (1)
unstack b32 b15 (1)
put-down b32 (1)
pick-up b25 (1)
stack b25 b32 (1)
unstack b15 b31 (1)
put-down b15 (1)
pick-up b31 (1)
stack b31 b3 (1)
pick-up b15 (1)
stack b15 b31 (1)
unstack b25 b32 (1)
put-down b25 (1)
pick-up b32 (1)
stack b32 b15 (1)
pick-up b25 (1)
stack b25 b32 (1)
unstack b27 b28 (1)
put-down b27 (1)
unstack b28 b14 (1)
put-down b28 (1)
pick-up b27 (1)
stack b27 b28 (1)
unstack b14 b13 (1)
put-down b14 (1)
pick-up b13 (1)
stack b13 b25 (1)
pick-up b14 (1)
stack b14 b13 (1)
unstack b27 b28 (1)
put-down b27 (1)
pick-up b28 (1)
stack b28 b14 (1)
pick-up b27 (1)
stack b27 b28 (1)
unstack b17 b30 (1)
put-down b17 (1)
unstack b30 b16 (1)
put-down b30 (1)
unstack b16 b19 (1)
put-down b16 (1)
pick-up b30 (1)
stack b30 b16 (1)
pick-up b17 (1)
stack b17 b30 (1)
unstack b19 b9 (1)
put-down b19 (1)
pick-up b9 (1)
stack b9 b27 (1)
pick-up b19 (1)
stack b19 b9 (1)
unstack b17 b30 (1)
put-down b17 (1)
unstack b30 b16 (1)
put-down b30 (1)
pick-up b16 (1)
stack b16 b19 (1)
pick-up b30 (1)
stack b30 b16 (1)
pick-up b17 (1)
stack b17 b30 (1)
[t=0.173078s, 29132 KB] Plan length: 272 step(s).
[t=0.173078s, 29132 KB] Plan cost: 272
[t=0.173078s, 29132 KB] Expanded 2670 state(s).
[t=0.173078s, 29132 KB] Reopened 0 state(s).
[t=0.173078s, 29132 KB] Evaluated 2671 state(s).
[t=0.173078s, 29132 KB] Evaluations: 5342
[t=0.173078s, 29132 KB] Generated 29090 state(s).
[t=0.173078s, 29132 KB] Dead ends: 0 state(s).
[t=0.173078s, 29132 KB] Number of registered states: 2671
[t=0.173078s, 29132 KB] Int hash set load factor: 2671/4096 = 0.6521
[t=0.173078s, 29132 KB] Int hash set resizes: 12
[t=0.173078s, 29132 KB] Search time: 0.126772s
[t=0.173078s, 29132 KB] Total time: 0.173078s
Solution found.
Peak memory: 29132 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.41s
