INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_21/bws_problem_21_32.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.010s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.000s CPU, 0.010s wall-clock]
1472 relevant atoms
987 auxiliary atoms
2459 final queue length
4270 total queue pushes
Completing instantiation... [0.010s CPU, 0.016s wall-clock]
Instantiating: [0.030s CPU, 0.027s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
22 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.006s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.023s wall-clock]
1302 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
42 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.011s wall-clock]
Reordering and filtering variables...
43 of 43 variables necessary.
22 of 43 mutex groups necessary.
882 of 882 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 43
Translator derived variables: 0
Translator facts: 506
Translator goal facts: 19
Translator mutex groups: 22
Translator total mutex groups size: 484
Translator operators: 882
Translator axioms: 0
Translator task size: 7604
Translator peak memory: 36456 KB
Writing output... [0.010s CPU, 0.005s wall-clock]
Done! [0.080s CPU, 0.082s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.9671e-05s, 24488 KB] reading input...
[t=0.00268268s, 25268 KB] done reading input!
[t=0.00360547s, 25664 KB] Initializing landmark count heuristic...
[t=0.00364072s, 25664 KB] Generating landmark graph...
[t=0.00371229s, 25664 KB] Building a landmark graph with reasonable orders.
[t=0.00376842s, 25664 KB] Initializing Exploration...
[t=0.00407909s, 25852 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0129418s, 26380 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0130294s, 26380 KB] Landmarks generation time: 0.00933356s
[t=0.0130611s, 26380 KB] Discovered 94 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0130786s, 26380 KB] 390 edges
[t=0.0130895s, 26380 KB] approx. reasonable orders
[t=0.0141996s, 26380 KB] approx. obedient reasonable orders
[t=0.0142325s, 26380 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0142433s, 26380 KB] Landmarks generation time: 0.0105996s
[t=0.0142531s, 26380 KB] Discovered 94 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0142616s, 26380 KB] 412 edges
[t=0.01427s, 26380 KB] Landmark graph generation time: 0.0106364s
[t=0.0142792s, 26380 KB] Landmark graph contains 94 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0142888s, 26380 KB] Landmark graph contains 412 orderings.
[t=0.0146124s, 26380 KB] Simplifying 3486 unary operators... done! [2646 unary operators]
[t=0.0155273s, 26380 KB] time to simplify: 0.00098479s
[t=0.0156512s, 26380 KB] Initializing additive heuristic...
[t=0.0156655s, 26380 KB] Initializing FF heuristic...
[t=0.015729s, 26380 KB] Building successor generator...done!
[t=0.0159193s, 26380 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0159293s, 26380 KB] time for successor generation creation: 0.000157202s
[t=0.0159518s, 26380 KB] Variables: 43
[t=0.0159603s, 26380 KB] FactPairs: 506
[t=0.0159686s, 26380 KB] Bytes per state: 16
[t=0.0161099s, 26380 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0161428s, 26380 KB] 42 initial landmarks, 19 goal landmarks
[t=0.0162099s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0162197s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0162361s, 26380 KB] g=0, 1 evaluated, 0 expanded
[t=0.016266s, 26380 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0162746s, 26380 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0164243s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0164342s, 26380 KB] g=1, 6 evaluated, 5 expanded
[t=0.0165646s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0165741s, 26380 KB] g=3, 11 evaluated, 10 expanded
[t=0.0168248s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0168422s, 26380 KB] g=6, 21 evaluated, 20 expanded
[t=0.0171926s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0172054s, 26380 KB] g=8, 35 evaluated, 34 expanded
[t=0.0175581s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0175699s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0175782s, 26380 KB] g=10, 49 evaluated, 48 expanded
[t=0.0177692s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0177785s, 26380 KB] g=12, 57 evaluated, 56 expanded
[t=0.0180439s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0180537s, 26380 KB] g=14, 68 evaluated, 67 expanded
[t=0.0181121s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0181217s, 26380 KB] g=14, 70 evaluated, 69 expanded
[t=0.0184637s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0184743s, 26380 KB] g=16, 85 evaluated, 84 expanded
[t=0.0185953s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0186046s, 26380 KB] g=16, 90 evaluated, 89 expanded
[t=0.0189377s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0189483s, 26380 KB] g=18, 104 evaluated, 103 expanded
[t=0.019185s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0191953s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0192037s, 26380 KB] g=20, 114 evaluated, 113 expanded
[t=0.0196396s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0196556s, 26380 KB] g=24, 132 evaluated, 131 expanded
[t=0.0198687s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0198783s, 26380 KB] g=26, 141 evaluated, 140 expanded
[t=0.0199118s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0199207s, 26380 KB] g=26, 142 evaluated, 141 expanded
[t=0.0202869s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0202969s, 26380 KB] g=28, 158 evaluated, 157 expanded
[t=0.0204848s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0204943s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0205027s, 26380 KB] g=30, 166 evaluated, 165 expanded
[t=0.0206698s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0206789s, 26380 KB] g=30, 173 evaluated, 172 expanded
[t=0.0208722s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0208812s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0208894s, 26380 KB] g=32, 181 evaluated, 180 expanded
[t=0.021061s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0210702s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0210782s, 26380 KB] g=34, 188 evaluated, 187 expanded
[t=0.021252s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.021261s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0212691s, 26380 KB] g=36, 195 evaluated, 194 expanded
[t=0.021423s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.021434s, 26380 KB] g=36, 201 evaluated, 200 expanded
[t=0.0216089s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.021618s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0216262s, 26380 KB] g=38, 208 evaluated, 207 expanded
[t=0.0218287s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0218441s, 26380 KB] g=40, 216 evaluated, 215 expanded
[t=0.0218782s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0218873s, 26380 KB] g=40, 217 evaluated, 216 expanded
[t=0.0221465s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0221565s, 26380 KB] g=42, 228 evaluated, 227 expanded
[t=0.0222121s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0222211s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0222291s, 26380 KB] g=42, 230 evaluated, 229 expanded
[t=0.0223758s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0223882s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.022397s, 26380 KB] g=44, 236 evaluated, 235 expanded
[t=0.0231157s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0231272s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0231365s, 26380 KB] g=48, 267 evaluated, 266 expanded
[t=0.0232573s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0232672s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0232754s, 26380 KB] g=50, 272 evaluated, 271 expanded
[t=0.0237688s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0237809s, 26380 KB] g=56, 294 evaluated, 293 expanded
[t=0.0239032s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0239124s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0239205s, 26380 KB] g=58, 299 evaluated, 298 expanded
[t=0.0240157s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0240246s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0240328s, 26380 KB] g=60, 303 evaluated, 302 expanded
[t=0.02514s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0251674s, 26380 KB] g=72, 354 evaluated, 353 expanded
[t=0.025291s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0253016s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0253104s, 26380 KB] g=74, 360 evaluated, 359 expanded
[t=0.0254019s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0254132s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0254214s, 26380 KB] g=76, 365 evaluated, 364 expanded
[t=0.0255546s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0255641s, 26380 KB] g=79, 373 evaluated, 372 expanded
[t=0.025606s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.025615s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0256232s, 26380 KB] g=80, 375 evaluated, 374 expanded
[t=0.0256923s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0257013s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0257095s, 26380 KB] g=82, 379 evaluated, 378 expanded
[t=0.0258419s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0258509s, 26380 KB] g=86, 388 evaluated, 387 expanded
[t=0.0258993s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0259082s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0259162s, 26380 KB] g=88, 391 evaluated, 390 expanded
[t=0.0260526s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0260617s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0260701s, 26380 KB] g=96, 402 evaluated, 401 expanded
[t=0.0260945s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0261035s, 26380 KB] g=96, 403 evaluated, 402 expanded
[t=0.0261198s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0261286s, 26380 KB] g=97, 404 evaluated, 403 expanded
[t=0.0261429s, 26380 KB] Solution found!
[t=0.0261545s, 26380 KB] Actual search time: 0.0100091s
unstack b4 b19 (1)
put-down b4 (1)
unstack b19 b6 (1)
put-down b19 (1)
unstack b1 b14 (1)
put-down b1 (1)
unstack b14 b17 (1)
put-down b14 (1)
unstack b20 b10 (1)
stack b20 b17 (1)
unstack b10 b11 (1)
put-down b10 (1)
unstack b11 b13 (1)
stack b11 b3 (1)
pick-up b1 (1)
stack b1 b13 (1)
unstack b6 b2 (1)
stack b6 b11 (1)
pick-up b2 (1)
stack b2 b1 (1)
unstack b20 b17 (1)
put-down b20 (1)
unstack b17 b8 (1)
put-down b17 (1)
pick-up b20 (1)
stack b20 b17 (1)
unstack b8 b5 (1)
put-down b8 (1)
unstack b5 b21 (1)
stack b5 b8 (1)
pick-up b19 (1)
stack b19 b5 (1)
unstack b21 b7 (1)
stack b21 b14 (1)
unstack b7 b15 (1)
stack b7 b6 (1)
unstack b15 b12 (1)
stack b15 b20 (1)
pick-up b4 (1)
stack b4 b7 (1)
pick-up b12 (1)
stack b12 b16 (1)
pick-up b10 (1)
stack b10 b12 (1)
unstack b21 b14 (1)
put-down b21 (1)
pick-up b14 (1)
stack b14 b15 (1)
pick-up b21 (1)
stack b21 b14 (1)
unstack b2 b1 (1)
put-down b2 (1)
unstack b1 b13 (1)
put-down b1 (1)
pick-up b13 (1)
stack b13 b21 (1)
pick-up b1 (1)
stack b1 b13 (1)
pick-up b2 (1)
stack b2 b1 (1)
unstack b4 b7 (1)
put-down b4 (1)
unstack b7 b6 (1)
put-down b7 (1)
pick-up b4 (1)
stack b4 b7 (1)
unstack b6 b11 (1)
put-down b6 (1)
unstack b11 b3 (1)
put-down b11 (1)
unstack b3 b18 (1)
stack b3 b2 (1)
pick-up b11 (1)
stack b11 b3 (1)
pick-up b6 (1)
stack b6 b11 (1)
unstack b18 b9 (1)
put-down b18 (1)
pick-up b9 (1)
stack b9 b10 (1)
pick-up b18 (1)
stack b18 b9 (1)
unstack b4 b7 (1)
put-down b4 (1)
pick-up b7 (1)
stack b7 b6 (1)
pick-up b4 (1)
stack b4 b7 (1)
unstack b19 b5 (1)
put-down b19 (1)
unstack b5 b8 (1)
put-down b5 (1)
pick-up b8 (1)
stack b8 b18 (1)
pick-up b5 (1)
stack b5 b8 (1)
pick-up b19 (1)
stack b19 b5 (1)
[t=0.0261642s, 26380 KB] Plan length: 98 step(s).
[t=0.0261642s, 26380 KB] Plan cost: 98
[t=0.0261642s, 26380 KB] Expanded 404 state(s).
[t=0.0261642s, 26380 KB] Reopened 0 state(s).
[t=0.0261642s, 26380 KB] Evaluated 405 state(s).
[t=0.0261642s, 26380 KB] Evaluations: 810
[t=0.0261642s, 26380 KB] Generated 3267 state(s).
[t=0.0261642s, 26380 KB] Dead ends: 0 state(s).
[t=0.0261642s, 26380 KB] Number of registered states: 405
[t=0.0261642s, 26380 KB] Int hash set load factor: 405/512 = 0.791016
[t=0.0261642s, 26380 KB] Int hash set resizes: 9
[t=0.0261642s, 26380 KB] Search time: 0.0100545s
[t=0.0261642s, 26380 KB] Total time: 0.0261642s
Solution found.
Peak memory: 26380 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.15s
