INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_23/bws_problem_23_58.pddl --sas-file output.sas
Parsing...
Parsing: [0.010s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.000s CPU, 0.010s wall-clock]
1750 relevant atoms
1173 auxiliary atoms
2923 final queue length
5088 total queue pushes
Completing instantiation... [0.020s CPU, 0.019s wall-clock]
Instantiating: [0.020s CPU, 0.031s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
24 uncovered facts
Choosing groups: [0.010s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.007s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.027s wall-clock]
1564 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
46 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.012s wall-clock]
Reordering and filtering variables...
47 of 47 variables necessary.
24 of 47 mutex groups necessary.
1058 of 1058 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.007s wall-clock]
Translator variables: 47
Translator derived variables: 0
Translator facts: 600
Translator goal facts: 16
Translator mutex groups: 24
Translator total mutex groups size: 576
Translator operators: 1058
Translator axioms: 0
Translator task size: 9105
Translator peak memory: 37488 KB
Writing output... [0.000s CPU, 0.005s wall-clock]
Done! [0.090s CPU, 0.095s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=4.0447e-05s, 24488 KB] reading input...
[t=0.00320898s, 25428 KB] done reading input!
[t=0.00407619s, 25824 KB] Initializing landmark count heuristic...
[t=0.00410997s, 25824 KB] Generating landmark graph...
[t=0.0041806s, 25824 KB] Building a landmark graph with reasonable orders.
[t=0.00426298s, 25956 KB] Initializing Exploration...
[t=0.00459686s, 26256 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0158984s, 26652 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0159834s, 26652 KB] Landmarks generation time: 0.0118048s
[t=0.0160026s, 26652 KB] Discovered 97 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0160194s, 26652 KB] 379 edges
[t=0.0160291s, 26652 KB] approx. reasonable orders
[t=0.016038s, 26652 KB] approx. obedient reasonable orders
[t=0.0160619s, 26652 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.016071s, 26652 KB] Landmarks generation time: 0.0119578s
[t=0.0160804s, 26652 KB] Discovered 97 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0160888s, 26652 KB] 379 edges
[t=0.0160972s, 26652 KB] Landmark graph generation time: 0.0119941s
[t=0.0161058s, 26652 KB] Landmark graph contains 97 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0161143s, 26652 KB] Landmark graph contains 379 orderings.
[t=0.0164913s, 26652 KB] Simplifying 4186 unary operators... done! [3174 unary operators]
[t=0.0174533s, 26652 KB] time to simplify: 0.00103321s
[t=0.0175968s, 26652 KB] Initializing additive heuristic...
[t=0.0176188s, 26652 KB] Initializing FF heuristic...
[t=0.0176696s, 26652 KB] Building successor generator...done!
[t=0.0178761s, 26652 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0178851s, 26652 KB] time for successor generation creation: 0.000174433s
[t=0.0178968s, 26652 KB] Variables: 47
[t=0.0179046s, 26652 KB] FactPairs: 600
[t=0.0179123s, 26652 KB] Bytes per state: 20
[t=0.0180004s, 26652 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0180323s, 26652 KB] 47 initial landmarks, 16 goal landmarks
[t=0.0180821s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0180913s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0181001s, 26652 KB] g=0, 1 evaluated, 0 expanded
[t=0.0181129s, 26652 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0181212s, 26652 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0181585s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0181671s, 26652 KB] g=1, 2 evaluated, 1 expanded
[t=0.0183115s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0183203s, 26652 KB] g=3, 7 evaluated, 6 expanded
[t=0.0185909s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0186006s, 26652 KB] g=6, 17 evaluated, 16 expanded
[t=0.018742s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0187514s, 26652 KB] g=6, 22 evaluated, 21 expanded
[t=0.0188652s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0188742s, 26652 KB] g=8, 26 evaluated, 25 expanded
[t=0.0191341s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0191507s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0191604s, 26652 KB] g=8, 35 evaluated, 34 expanded
[t=0.019299s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.019308s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0193161s, 26652 KB] g=10, 40 evaluated, 39 expanded
[t=0.0194261s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0194354s, 26652 KB] g=11, 44 evaluated, 43 expanded
[t=0.019623s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.019633s, 26652 KB] g=13, 51 evaluated, 50 expanded
[t=0.0196687s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0196809s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0196897s, 26652 KB] g=14, 52 evaluated, 51 expanded
[t=0.0199291s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0199388s, 26652 KB] g=12, 61 evaluated, 60 expanded
[t=0.0200354s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0200545s, 26652 KB] g=13, 64 evaluated, 63 expanded
[t=0.020281s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0202908s, 26652 KB] g=15, 72 evaluated, 71 expanded
[t=0.0204585s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0204677s, 26652 KB] g=16, 78 evaluated, 77 expanded
[t=0.0205821s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0205912s, 26652 KB] g=17, 82 evaluated, 81 expanded
[t=0.0206557s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0206647s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0206731s, 26652 KB] g=18, 84 evaluated, 83 expanded
[t=0.0208836s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0208928s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0209008s, 26652 KB] g=20, 92 evaluated, 91 expanded
[t=0.0210855s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0210952s, 26652 KB] g=21, 99 evaluated, 98 expanded
[t=0.021133s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0211416s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0211502s, 26652 KB] g=22, 100 evaluated, 99 expanded
[t=0.0213865s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0214025s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0214112s, 26652 KB] g=24, 108 evaluated, 107 expanded
[t=0.0216287s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0216383s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0216467s, 26652 KB] g=26, 116 evaluated, 115 expanded
[t=0.0218671s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.021876s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0218839s, 26652 KB] g=28, 124 evaluated, 123 expanded
[t=0.0220773s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.022087s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0220956s, 26652 KB] g=30, 131 evaluated, 130 expanded
[t=0.0222559s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0222657s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0222765s, 26652 KB] g=32, 137 evaluated, 136 expanded
[t=0.0224491s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0224582s, 26652 KB] g=35, 143 evaluated, 142 expanded
[t=0.0224938s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0225215s, 26652 KB] g=36, 144 evaluated, 143 expanded
[t=0.0226748s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0227041s, 26652 KB] g=38, 149 evaluated, 148 expanded
[t=0.0228121s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0228259s, 26652 KB] g=38, 151 evaluated, 150 expanded
[t=0.0230581s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0230678s, 26652 KB] g=40, 159 evaluated, 158 expanded
[t=0.0231816s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0231906s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0231989s, 26652 KB] g=42, 163 evaluated, 162 expanded
[t=0.023366s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.023375s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0233837s, 26652 KB] g=44, 169 evaluated, 168 expanded
[t=0.0235013s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0235201s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0235323s, 26652 KB] g=44, 173 evaluated, 172 expanded
[t=0.0237076s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0237173s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0237322s, 26652 KB] g=46, 179 evaluated, 178 expanded
[t=0.024026s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0240357s, 26652 KB] g=50, 190 evaluated, 189 expanded
[t=0.0241938s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0242028s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0242107s, 26652 KB] g=52, 196 evaluated, 195 expanded
[t=0.0243647s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0243741s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0243826s, 26652 KB] g=54, 202 evaluated, 201 expanded
[t=0.0244857s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0244945s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0245022s, 26652 KB] g=56, 206 evaluated, 205 expanded
[t=0.0246045s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0246127s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0246203s, 26652 KB] g=58, 210 evaluated, 209 expanded
[t=0.0247908s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0247992s, 26652 KB] g=62, 217 evaluated, 216 expanded
[t=0.0248573s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0248655s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0248737s, 26652 KB] g=64, 219 evaluated, 218 expanded
[t=0.0254245s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0254395s, 26652 KB] g=74, 242 evaluated, 241 expanded
[t=0.0254933s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.025503s, 26652 KB] g=74, 244 evaluated, 243 expanded
[t=0.0255763s, 26652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0255851s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0255931s, 26652 KB] g=76, 247 evaluated, 246 expanded
[t=0.0258163s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0258253s, 26652 KB] g=84, 258 evaluated, 257 expanded
[t=0.0259108s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.025925s, 26652 KB] g=88, 262 evaluated, 261 expanded
[t=0.0259443s, 26652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0259529s, 26652 KB] g=89, 263 evaluated, 262 expanded
[t=0.0259694s, 26652 KB] Solution found!
[t=0.0259872s, 26652 KB] Actual search time: 0.00795288s
unstack b11 b12 (1)
put-down b11 (1)
unstack b20 b4 (1)
put-down b20 (1)
unstack b4 b16 (1)
put-down b4 (1)
unstack b16 b22 (1)
stack b16 b12 (1)
unstack b22 b21 (1)
put-down b22 (1)
unstack b5 b17 (1)
stack b5 b22 (1)
unstack b17 b18 (1)
put-down b17 (1)
unstack b21 b7 (1)
put-down b21 (1)
unstack b7 b23 (1)
stack b7 b5 (1)
unstack b18 b8 (1)
put-down b18 (1)
unstack b8 b10 (1)
stack b8 b4 (1)
unstack b10 b13 (1)
put-down b10 (1)
unstack b13 b3 (1)
put-down b13 (1)
pick-up b17 (1)
stack b17 b10 (1)
pick-up b21 (1)
stack b21 b13 (1)
pick-up b3 (1)
stack b3 b23 (1)
unstack b16 b12 (1)
put-down b16 (1)
unstack b12 b14 (1)
stack b12 b3 (1)
pick-up b16 (1)
stack b16 b12 (1)
unstack b14 b15 (1)
put-down b14 (1)
unstack b15 b9 (1)
stack b15 b18 (1)
unstack b9 b1 (1)
stack b9 b15 (1)
pick-up b20 (1)
stack b20 b9 (1)
unstack b1 b2 (1)
put-down b1 (1)
unstack b2 b6 (1)
put-down b2 (1)
unstack b6 b19 (1)
put-down b6 (1)
pick-up b11 (1)
stack b11 b19 (1)
pick-up b1 (1)
stack b1 b2 (1)
pick-up b14 (1)
stack b14 b6 (1)
unstack b16 b12 (1)
put-down b16 (1)
unstack b11 b19 (1)
put-down b11 (1)
pick-up b19 (1)
stack b19 b16 (1)
pick-up b11 (1)
stack b11 b19 (1)
unstack b12 b3 (1)
put-down b12 (1)
unstack b3 b23 (1)
put-down b3 (1)
pick-up b23 (1)
stack b23 b14 (1)
pick-up b3 (1)
stack b3 b23 (1)
pick-up b12 (1)
stack b12 b3 (1)
unstack b11 b19 (1)
put-down b11 (1)
unstack b19 b16 (1)
put-down b19 (1)
pick-up b11 (1)
stack b11 b19 (1)
pick-up b16 (1)
stack b16 b12 (1)
unstack b11 b19 (1)
put-down b11 (1)
pick-up b19 (1)
stack b19 b16 (1)
pick-up b11 (1)
stack b11 b19 (1)
[t=0.0259973s, 26652 KB] Plan length: 90 step(s).
[t=0.0259973s, 26652 KB] Plan cost: 90
[t=0.0259973s, 26652 KB] Expanded 263 state(s).
[t=0.0259973s, 26652 KB] Reopened 0 state(s).
[t=0.0259973s, 26652 KB] Evaluated 264 state(s).
[t=0.0259973s, 26652 KB] Evaluations: 528
[t=0.0259973s, 26652 KB] Generated 2461 state(s).
[t=0.0259973s, 26652 KB] Dead ends: 0 state(s).
[t=0.0259973s, 26652 KB] Number of registered states: 264
[t=0.0259973s, 26652 KB] Int hash set load factor: 264/512 = 0.515625
[t=0.0259973s, 26652 KB] Int hash set resizes: 9
[t=0.0259973s, 26652 KB] Search time: 0.00799739s
[t=0.0259973s, 26652 KB] Total time: 0.0259973s
Solution found.
Peak memory: 26652 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.16s
