INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_24/bws_problem_24_59.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.015s wall-clock]
1898 relevant atoms
1272 auxiliary atoms
3170 final queue length
5525 total queue pushes
Completing instantiation... [0.020s CPU, 0.025s wall-clock]
Instantiating: [0.040s CPU, 0.042s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
25 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.007s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.029s wall-clock]
1704 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
48 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.020s wall-clock]
Reordering and filtering variables...
49 of 49 variables necessary.
25 of 49 mutex groups necessary.
1152 of 1152 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.008s wall-clock]
Translator variables: 49
Translator derived variables: 0
Translator facts: 650
Translator goal facts: 21
Translator mutex groups: 25
Translator total mutex groups size: 625
Translator operators: 1152
Translator axioms: 0
Translator task size: 9913
Translator peak memory: 37880 KB
Writing output... [0.010s CPU, 0.013s wall-clock]
Done! [0.120s CPU, 0.125s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.8685e-05s, 24488 KB] reading input...
[t=0.00328486s, 25532 KB] done reading input!
[t=0.0041077s, 25928 KB] Initializing landmark count heuristic...
[t=0.00413361s, 25928 KB] Generating landmark graph...
[t=0.00420208s, 25928 KB] Building a landmark graph with reasonable orders.
[t=0.00426716s, 26060 KB] Initializing Exploration...
[t=0.00458664s, 26388 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0178454s, 26916 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0179986s, 26916 KB] Landmarks generation time: 0.0137991s
[t=0.0180317s, 26916 KB] Discovered 108 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0180496s, 26916 KB] 525 edges
[t=0.0180602s, 26916 KB] approx. reasonable orders
[t=0.019155s, 26916 KB] approx. obedient reasonable orders
[t=0.0192169s, 26916 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0192269s, 26916 KB] Landmarks generation time: 0.0150905s
[t=0.0192362s, 26916 KB] Discovered 108 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.019244s, 26916 KB] 543 edges
[t=0.0192519s, 26916 KB] Landmark graph generation time: 0.0151251s
[t=0.01926s, 26916 KB] Landmark graph contains 108 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0192681s, 26916 KB] Landmark graph contains 543 orderings.
[t=0.019756s, 26916 KB] Simplifying 4560 unary operators... done! [3456 unary operators]
[t=0.0208378s, 26916 KB] time to simplify: 0.00115587s
[t=0.0210106s, 26916 KB] Initializing additive heuristic...
[t=0.0210308s, 26916 KB] Initializing FF heuristic...
[t=0.0210965s, 26916 KB] Building successor generator...done!
[t=0.0213152s, 26916 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0213236s, 26916 KB] time for successor generation creation: 0.000185597s
[t=0.0213362s, 26916 KB] Variables: 49
[t=0.0213444s, 26916 KB] FactPairs: 650
[t=0.0213523s, 26916 KB] Bytes per state: 20
[t=0.0214537s, 26916 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0214865s, 26916 KB] 49 initial landmarks, 21 goal landmarks
[t=0.0215452s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.0215546s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0215637s, 26916 KB] g=0, 1 evaluated, 0 expanded
[t=0.0215773s, 26916 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.0215858s, 26916 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0217256s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 58
[t=0.0217359s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0217451s, 26916 KB] g=2, 5 evaluated, 4 expanded
[t=0.0218736s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 57
[t=0.0218829s, 26916 KB] g=4, 9 evaluated, 8 expanded
[t=0.0220081s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0220174s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0220258s, 26916 KB] g=6, 13 evaluated, 12 expanded
[t=0.0221824s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0221921s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0222002s, 26916 KB] g=8, 18 evaluated, 17 expanded
[t=0.0223275s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.022337s, 26916 KB] g=10, 22 evaluated, 21 expanded
[t=0.0224919s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.022501s, 26916 KB] g=12, 27 evaluated, 26 expanded
[t=0.0230797s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0230896s, 26916 KB] g=15, 47 evaluated, 46 expanded
[t=0.0231321s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0231411s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0231491s, 26916 KB] g=16, 48 evaluated, 47 expanded
[t=0.0233953s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0234177s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0234337s, 26916 KB] g=18, 56 evaluated, 55 expanded
[t=0.023655s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0236662s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0236747s, 26916 KB] g=20, 63 evaluated, 62 expanded
[t=0.0239132s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0239223s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0239304s, 26916 KB] g=22, 71 evaluated, 70 expanded
[t=0.0243916s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0244016s, 26916 KB] g=27, 87 evaluated, 86 expanded
[t=0.0244452s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0244541s, 26916 KB] g=28, 88 evaluated, 87 expanded
[t=0.0246996s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0247107s, 26916 KB] g=30, 96 evaluated, 95 expanded
[t=0.0249607s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.024971s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0249792s, 26916 KB] g=32, 104 evaluated, 103 expanded
[t=0.0252495s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0252591s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0252672s, 26916 KB] g=34, 113 evaluated, 112 expanded
[t=0.0254477s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0254566s, 26916 KB] g=35, 119 evaluated, 118 expanded
[t=0.0254966s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0255053s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0255131s, 26916 KB] g=36, 120 evaluated, 119 expanded
[t=0.0257541s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.025763s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0257711s, 26916 KB] g=38, 128 evaluated, 127 expanded
[t=0.0260177s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0260271s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0260347s, 26916 KB] g=40, 136 evaluated, 135 expanded
[t=0.026301s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0263111s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0263206s, 26916 KB] g=42, 145 evaluated, 144 expanded
[t=0.0265499s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0265601s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0265687s, 26916 KB] g=44, 152 evaluated, 151 expanded
[t=0.0267913s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0268009s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0268125s, 26916 KB] g=46, 159 evaluated, 158 expanded
[t=0.0270046s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0270146s, 26916 KB] g=47, 165 evaluated, 164 expanded
[t=0.0270557s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0270697s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0270811s, 26916 KB] g=48, 166 evaluated, 165 expanded
[t=0.0273078s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0273173s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0273261s, 26916 KB] g=50, 173 evaluated, 172 expanded
[t=0.0277333s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0277444s, 26916 KB] g=53, 186 evaluated, 185 expanded
[t=0.0277859s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0277955s, 26916 KB] g=54, 187 evaluated, 186 expanded
[t=0.0279849s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0279948s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0280037s, 26916 KB] g=56, 193 evaluated, 192 expanded
[t=0.0284805s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0284988s, 26916 KB] g=60, 208 evaluated, 207 expanded
[t=0.0286531s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.028663s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0286714s, 26916 KB] g=62, 213 evaluated, 212 expanded
[t=0.0291048s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0291286s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0291424s, 26916 KB] g=66, 226 evaluated, 225 expanded
[t=0.0293324s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0293576s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0293719s, 26916 KB] g=68, 231 evaluated, 230 expanded
[t=0.0306786s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.030721s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0307365s, 26916 KB] g=76, 263 evaluated, 262 expanded
[t=0.0308619s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0308829s, 26916 KB] g=76, 266 evaluated, 265 expanded
[t=0.0310491s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0310721s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0310852s, 26916 KB] g=78, 270 evaluated, 269 expanded
[t=0.0320372s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0320606s, 26916 KB] g=86, 302 evaluated, 301 expanded
[t=0.0321526s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0321625s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0321707s, 26916 KB] g=88, 305 evaluated, 304 expanded
[t=0.0433997s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0434648s, 26916 KB] g=126, 766 evaluated, 765 expanded
[t=0.0440506s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0440615s, 26916 KB] g=134, 793 evaluated, 792 expanded
[t=0.0442568s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.044266s, 26916 KB] g=138, 802 evaluated, 801 expanded
[t=0.0443363s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0443454s, 26916 KB] g=140, 805 evaluated, 804 expanded
[t=0.0450065s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0450175s, 26916 KB] g=156, 842 evaluated, 841 expanded
[t=0.0451641s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0451729s, 26916 KB] g=164, 852 evaluated, 851 expanded
[t=0.0452319s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0452408s, 26916 KB] g=168, 856 evaluated, 855 expanded
[t=0.0452585s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0452674s, 26916 KB] g=169, 857 evaluated, 856 expanded
[t=0.0452827s, 26916 KB] Solution found!
[t=0.0452939s, 26916 KB] Actual search time: 0.0238055s
unstack b12 b6 (1)
put-down b12 (1)
unstack b11 b24 (1)
put-down b11 (1)
unstack b24 b20 (1)
stack b24 b12 (1)
unstack b20 b22 (1)
stack b20 b15 (1)
unstack b22 b2 (1)
put-down b22 (1)
unstack b2 b1 (1)
put-down b2 (1)
unstack b6 b14 (1)
put-down b6 (1)
unstack b14 b18 (1)
stack b14 b24 (1)
unstack b18 b17 (1)
stack b18 b6 (1)
unstack b17 b23 (1)
put-down b17 (1)
pick-up b23 (1)
stack b23 b18 (1)
unstack b20 b15 (1)
put-down b20 (1)
unstack b15 b19 (1)
put-down b15 (1)
unstack b19 b5 (1)
stack b19 b2 (1)
unstack b5 b10 (1)
stack b5 b22 (1)
unstack b10 b4 (1)
stack b10 b17 (1)
unstack b4 b3 (1)
stack b4 b1 (1)
unstack b3 b13 (1)
stack b3 b11 (1)
unstack b13 b7 (1)
stack b13 b23 (1)
unstack b7 b8 (1)
put-down b7 (1)
pick-up b15 (1)
stack b15 b19 (1)
unstack b8 b16 (1)
stack b8 b20 (1)
unstack b16 b9 (1)
stack b16 b13 (1)
unstack b9 b21 (1)
stack b9 b8 (1)
pick-up b21 (1)
stack b21 b16 (1)
unstack b4 b1 (1)
put-down b4 (1)
pick-up b1 (1)
stack b1 b21 (1)
pick-up b4 (1)
stack b4 b1 (1)
unstack b3 b11 (1)
put-down b3 (1)
pick-up b11 (1)
stack b11 b4 (1)
pick-up b3 (1)
stack b3 b11 (1)
unstack b5 b22 (1)
put-down b5 (1)
pick-up b22 (1)
stack b22 b10 (1)
pick-up b5 (1)
stack b5 b22 (1)
unstack b15 b19 (1)
put-down b15 (1)
unstack b19 b2 (1)
put-down b19 (1)
pick-up b2 (1)
stack b2 b5 (1)
pick-up b19 (1)
stack b19 b2 (1)
pick-up b15 (1)
stack b15 b19 (1)
unstack b9 b8 (1)
put-down b9 (1)
unstack b8 b20 (1)
put-down b8 (1)
pick-up b20 (1)
stack b20 b15 (1)
pick-up b8 (1)
stack b8 b20 (1)
pick-up b9 (1)
stack b9 b8 (1)
unstack b3 b11 (1)
put-down b3 (1)
unstack b11 b4 (1)
put-down b11 (1)
pick-up b3 (1)
stack b3 b11 (1)
unstack b4 b1 (1)
put-down b4 (1)
unstack b1 b21 (1)
put-down b1 (1)
unstack b21 b16 (1)
put-down b21 (1)
pick-up b1 (1)
stack b1 b21 (1)
pick-up b4 (1)
stack b4 b1 (1)
unstack b3 b11 (1)
put-down b3 (1)
pick-up b11 (1)
stack b11 b4 (1)
pick-up b3 (1)
stack b3 b11 (1)
unstack b16 b13 (1)
put-down b16 (1)
unstack b13 b23 (1)
put-down b13 (1)
unstack b23 b18 (1)
put-down b23 (1)
pick-up b13 (1)
stack b13 b23 (1)
pick-up b16 (1)
stack b16 b13 (1)
unstack b18 b6 (1)
put-down b18 (1)
pick-up b6 (1)
stack b6 b14 (1)
pick-up b18 (1)
stack b18 b6 (1)
unstack b16 b13 (1)
put-down b16 (1)
unstack b13 b23 (1)
put-down b13 (1)
pick-up b16 (1)
stack b16 b13 (1)
pick-up b23 (1)
stack b23 b18 (1)
unstack b16 b13 (1)
put-down b16 (1)
pick-up b13 (1)
stack b13 b23 (1)
pick-up b16 (1)
stack b16 b13 (1)
unstack b3 b11 (1)
put-down b3 (1)
unstack b11 b4 (1)
put-down b11 (1)
unstack b4 b1 (1)
put-down b4 (1)
pick-up b11 (1)
stack b11 b4 (1)
pick-up b3 (1)
stack b3 b11 (1)
unstack b1 b21 (1)
put-down b1 (1)
pick-up b21 (1)
stack b21 b16 (1)
pick-up b1 (1)
stack b1 b21 (1)
unstack b3 b11 (1)
put-down b3 (1)
unstack b11 b4 (1)
put-down b11 (1)
pick-up b3 (1)
stack b3 b11 (1)
pick-up b4 (1)
stack b4 b1 (1)
unstack b3 b11 (1)
put-down b3 (1)
pick-up b11 (1)
stack b11 b4 (1)
pick-up b3 (1)
stack b3 b11 (1)
[t=0.0453043s, 26916 KB] Plan length: 170 step(s).
[t=0.0453043s, 26916 KB] Plan cost: 170
[t=0.0453043s, 26916 KB] Expanded 857 state(s).
[t=0.0453043s, 26916 KB] Reopened 0 state(s).
[t=0.0453043s, 26916 KB] Evaluated 858 state(s).
[t=0.0453043s, 26916 KB] Evaluations: 1716
[t=0.0453043s, 26916 KB] Generated 6811 state(s).
[t=0.0453043s, 26916 KB] Dead ends: 0 state(s).
[t=0.0453043s, 26916 KB] Number of registered states: 858
[t=0.0453043s, 26916 KB] Int hash set load factor: 858/1024 = 0.837891
[t=0.0453043s, 26916 KB] Int hash set resizes: 10
[t=0.0453043s, 26916 KB] Search time: 0.0238511s
[t=0.0453043s, 26916 KB] Total time: 0.0453043s
Solution found.
Peak memory: 26916 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.21s
