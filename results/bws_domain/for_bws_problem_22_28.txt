INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_22/bws_problem_22_28.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.010s wall-clock]
1608 relevant atoms
1078 auxiliary atoms
2686 final queue length
4670 total queue pushes
Completing instantiation... [0.010s CPU, 0.017s wall-clock]
Instantiating: [0.020s CPU, 0.028s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.010s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
23 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.006s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.024s wall-clock]
1430 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
44 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.012s wall-clock]
Reordering and filtering variables...
45 of 45 variables necessary.
23 of 45 mutex groups necessary.
968 of 968 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 45
Translator derived variables: 0
Translator facts: 552
Translator goal facts: 18
Translator mutex groups: 23
Translator total mutex groups size: 529
Translator operators: 968
Translator axioms: 0
Translator task size: 8338
Translator peak memory: 36976 KB
Writing output... [0.000s CPU, 0.005s wall-clock]
Done! [0.080s CPU, 0.087s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.9756e-05s, 24488 KB] reading input...
[t=0.0032152s, 25340 KB] done reading input!
[t=0.0040637s, 25736 KB] Initializing landmark count heuristic...
[t=0.00409319s, 25736 KB] Generating landmark graph...
[t=0.00415425s, 25736 KB] Building a landmark graph with reasonable orders.
[t=0.0042158s, 25736 KB] Initializing Exploration...
[t=0.00449021s, 26000 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0144373s, 26528 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0145236s, 26528 KB] Landmarks generation time: 0.0103709s
[t=0.0145387s, 26528 KB] Discovered 97 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.014561s, 26528 KB] 382 edges
[t=0.0145722s, 26528 KB] approx. reasonable orders
[t=0.0167708s, 26528 KB] approx. obedient reasonable orders
[t=0.0168067s, 26528 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0168172s, 26528 KB] Landmarks generation time: 0.0127213s
[t=0.0168279s, 26528 KB] Discovered 97 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0168362s, 26528 KB] 427 edges
[t=0.0168452s, 26528 KB] Landmark graph generation time: 0.0127593s
[t=0.0168541s, 26528 KB] Landmark graph contains 97 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0168625s, 26528 KB] Landmark graph contains 427 orderings.
[t=0.0172064s, 26528 KB] Simplifying 3828 unary operators... done! [2904 unary operators]
[t=0.0181383s, 26528 KB] time to simplify: 0.000995509s
[t=0.0182672s, 26528 KB] Initializing additive heuristic...
[t=0.0182818s, 26528 KB] Initializing FF heuristic...
[t=0.0183592s, 26528 KB] Building successor generator...done!
[t=0.0185734s, 26528 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0185827s, 26528 KB] time for successor generation creation: 0.000177569s
[t=0.0185992s, 26528 KB] Variables: 45
[t=0.0186087s, 26528 KB] FactPairs: 552
[t=0.0186169s, 26528 KB] Bytes per state: 20
[t=0.018793s, 26528 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0189855s, 26528 KB] 45 initial landmarks, 18 goal landmarks
[t=0.0190559s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0190664s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0190756s, 26528 KB] g=0, 1 evaluated, 0 expanded
[t=0.0190917s, 26528 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0191003s, 26528 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0192413s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0192511s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0192599s, 26528 KB] g=2, 6 evaluated, 5 expanded
[t=0.019392s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0194018s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0194102s, 26528 KB] g=4, 11 evaluated, 10 expanded
[t=0.0195416s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0195506s, 26528 KB] g=6, 16 evaluated, 15 expanded
[t=0.0197322s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0197409s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0197488s, 26528 KB] g=8, 23 evaluated, 22 expanded
[t=0.0199024s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.019913s, 26528 KB] g=10, 29 evaluated, 28 expanded
[t=0.0201066s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0201158s, 26528 KB] g=11, 36 evaluated, 35 expanded
[t=0.0204092s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0204187s, 26528 KB] g=14, 48 evaluated, 47 expanded
[t=0.0207585s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0207684s, 26528 KB] g=16, 62 evaluated, 61 expanded
[t=0.0208293s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0208438s, 26528 KB] g=16, 64 evaluated, 63 expanded
[t=0.0212045s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0212143s, 26528 KB] g=18, 79 evaluated, 78 expanded
[t=0.0212977s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0213065s, 26528 KB] g=18, 82 evaluated, 81 expanded
[t=0.0215694s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0215789s, 26528 KB] g=19, 93 evaluated, 92 expanded
[t=0.0216149s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0216238s, 26528 KB] g=20, 94 evaluated, 93 expanded
[t=0.0216855s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0216945s, 26528 KB] g=20, 96 evaluated, 95 expanded
[t=0.0220785s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0220881s, 26528 KB] g=22, 111 evaluated, 110 expanded
[t=0.0225702s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0225808s, 26528 KB] g=22, 130 evaluated, 129 expanded
[t=0.0226162s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.022625s, 26528 KB] g=24, 131 evaluated, 130 expanded
[t=0.0231314s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0231423s, 26528 KB] g=26, 150 evaluated, 149 expanded
[t=0.0234486s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0234587s, 26528 KB] g=27, 162 evaluated, 161 expanded
[t=0.0241419s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0241523s, 26528 KB] g=30, 189 evaluated, 188 expanded
[t=0.0243808s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.02439s, 26528 KB] g=28, 198 evaluated, 197 expanded
[t=0.0248204s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0248307s, 26528 KB] g=32, 215 evaluated, 214 expanded
[t=0.0248931s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0249022s, 26528 KB] g=30, 217 evaluated, 216 expanded
[t=0.025396s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0254064s, 26528 KB] g=32, 236 evaluated, 235 expanded
[t=0.0256095s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0256217s, 26528 KB] g=34, 242 evaluated, 241 expanded
[t=0.0259039s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0259139s, 26528 KB] g=34, 253 evaluated, 252 expanded
[t=0.0263096s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0263201s, 26528 KB] g=36, 268 evaluated, 267 expanded
[t=0.0266319s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.026642s, 26528 KB] g=38, 280 evaluated, 279 expanded
[t=0.0269871s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0269975s, 26528 KB] g=38, 293 evaluated, 292 expanded
[t=0.0270351s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0270449s, 26528 KB] g=40, 294 evaluated, 293 expanded
[t=0.0274332s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0274461s, 26528 KB] g=42, 309 evaluated, 308 expanded
[t=0.0276684s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0276799s, 26528 KB] g=40, 317 evaluated, 316 expanded
[t=0.0281568s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0281688s, 26528 KB] g=42, 335 evaluated, 334 expanded
[t=0.0287337s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0287498s, 26528 KB] g=44, 357 evaluated, 356 expanded
[t=0.0293425s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.029399s, 26528 KB] g=46, 376 evaluated, 375 expanded
[t=0.0296998s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0297101s, 26528 KB] g=48, 387 evaluated, 386 expanded
[t=0.0297965s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0298059s, 26528 KB] g=48, 390 evaluated, 389 expanded
[t=0.0300119s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0300224s, 26528 KB] g=50, 398 evaluated, 397 expanded
[t=0.030315s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0303277s, 26528 KB] g=52, 409 evaluated, 408 expanded
[t=0.0306369s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0306482s, 26528 KB] g=54, 421 evaluated, 420 expanded
[t=0.0308724s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.030884s, 26528 KB] g=56, 428 evaluated, 427 expanded
[t=0.0351509s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0351726s, 26528 KB] g=73, 606 evaluated, 605 expanded
[t=0.0360209s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.036035s, 26528 KB] g=78, 639 evaluated, 638 expanded
[t=0.0360683s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0360775s, 26528 KB] g=79, 640 evaluated, 639 expanded
[t=0.0380438s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0380543s, 26528 KB] g=94, 725 evaluated, 724 expanded
[t=0.0385029s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0385137s, 26528 KB] g=99, 744 evaluated, 743 expanded
[t=0.0388887s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0388988s, 26528 KB] g=104, 760 evaluated, 759 expanded
[t=0.038951s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0389603s, 26528 KB] g=105, 762 evaluated, 761 expanded
[t=0.0965171s, 26924 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0965997s, 26924 KB] g=149, 3174 evaluated, 3173 expanded
[t=0.0968772s, 26924 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0968892s, 26924 KB] g=150, 3185 evaluated, 3184 expanded
[t=0.0969499s, 26924 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0969595s, 26924 KB] g=151, 3187 evaluated, 3186 expanded
[t=0.0969944s, 26924 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0970114s, 26924 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.097021s, 26924 KB] g=152, 3188 evaluated, 3187 expanded
[t=0.097175s, 26924 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0971849s, 26924 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0971939s, 26924 KB] g=154, 3194 evaluated, 3193 expanded
[t=0.0973011s, 26924 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0973123s, 26924 KB] g=154, 3198 evaluated, 3197 expanded
[t=0.0974377s, 26924 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0974475s, 26924 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0974556s, 26924 KB] g=156, 3203 evaluated, 3202 expanded
[t=0.0978464s, 26924 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0978592s, 26924 KB] g=160, 3219 evaluated, 3218 expanded
[t=0.0979638s, 26924 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0979785s, 26924 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0979871s, 26924 KB] g=162, 3223 evaluated, 3222 expanded
[t=0.0992691s, 26924 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0992888s, 26924 KB] g=174, 3277 evaluated, 3276 expanded
[t=0.0994935s, 26924 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0995062s, 26924 KB] g=178, 3286 evaluated, 3285 expanded
[t=0.0995785s, 26924 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0995889s, 26924 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0995975s, 26924 KB] g=180, 3289 evaluated, 3288 expanded
[t=0.100641s, 26924 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.100659s, 26924 KB] g=198, 3346 evaluated, 3345 expanded
[t=0.100715s, 26924 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.100725s, 26924 KB] g=200, 3349 evaluated, 3348 expanded
[t=0.100892s, 26924 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.100901s, 26924 KB] g=208, 3361 evaluated, 3360 expanded
[t=0.100918s, 26924 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.100927s, 26924 KB] g=209, 3362 evaluated, 3361 expanded
[t=0.100942s, 26924 KB] Solution found!
[t=0.100959s, 26924 KB] Actual search time: 0.0819688s
unstack b14 b15 (1)
put-down b14 (1)
unstack b15 b20 (1)
put-down b15 (1)
unstack b1 b2 (1)
put-down b1 (1)
unstack b2 b10 (1)
put-down b2 (1)
unstack b10 b6 (1)
put-down b10 (1)
unstack b6 b22 (1)
put-down b6 (1)
unstack b20 b12 (1)
put-down b20 (1)
unstack b12 b8 (1)
put-down b12 (1)
unstack b22 b21 (1)
put-down b22 (1)
unstack b21 b3 (1)
stack b21 b15 (1)
unstack b3 b16 (1)
put-down b3 (1)
unstack b4 b18 (1)
put-down b4 (1)
unstack b18 b17 (1)
put-down b18 (1)
unstack b17 b9 (1)
put-down b17 (1)
pick-up b6 (1)
stack b6 b16 (1)
unstack b8 b5 (1)
stack b8 b12 (1)
unstack b9 b13 (1)
stack b9 b11 (1)
pick-up b1 (1)
stack b1 b9 (1)
pick-up b13 (1)
stack b13 b5 (1)
pick-up b18 (1)
stack b18 b13 (1)
pick-up b20 (1)
stack b20 b8 (1)
pick-up b22 (1)
stack b22 b20 (1)
pick-up b3 (1)
stack b3 b18 (1)
pick-up b4 (1)
stack b4 b3 (1)
unstack b6 b16 (1)
put-down b6 (1)
pick-up b16 (1)
stack b16 b1 (1)
pick-up b6 (1)
stack b6 b16 (1)
pick-up b17 (1)
stack b17 b10 (1)
unstack b22 b20 (1)
put-down b22 (1)
unstack b17 b10 (1)
put-down b17 (1)
unstack b20 b8 (1)
put-down b20 (1)
pick-up b17 (1)
stack b17 b10 (1)
pick-up b22 (1)
stack b22 b20 (1)
unstack b8 b12 (1)
put-down b8 (1)
pick-up b12 (1)
stack b12 b4 (1)
pick-up b8 (1)
stack b8 b12 (1)
unstack b22 b20 (1)
put-down b22 (1)
pick-up b20 (1)
stack b20 b8 (1)
pick-up b22 (1)
stack b22 b20 (1)
unstack b6 b16 (1)
put-down b6 (1)
unstack b16 b1 (1)
put-down b16 (1)
pick-up b6 (1)
stack b6 b16 (1)
unstack b1 b9 (1)
put-down b1 (1)
unstack b17 b10 (1)
put-down b17 (1)
unstack b9 b11 (1)
put-down b9 (1)
pick-up b11 (1)
stack b11 b22 (1)
pick-up b1 (1)
stack b1 b9 (1)
unstack b11 b22 (1)
put-down b11 (1)
unstack b22 b20 (1)
put-down b22 (1)
pick-up b11 (1)
stack b11 b22 (1)
pick-up b17 (1)
stack b17 b10 (1)
unstack b1 b9 (1)
put-down b1 (1)
pick-up b9 (1)
stack b9 b11 (1)
pick-up b1 (1)
stack b1 b9 (1)
unstack b6 b16 (1)
put-down b6 (1)
pick-up b16 (1)
stack b16 b1 (1)
pick-up b6 (1)
stack b6 b16 (1)
unstack b20 b8 (1)
put-down b20 (1)
unstack b8 b12 (1)
put-down b8 (1)
pick-up b20 (1)
stack b20 b8 (1)
unstack b12 b4 (1)
put-down b12 (1)
unstack b4 b3 (1)
put-down b4 (1)
pick-up b12 (1)
stack b12 b4 (1)
unstack b20 b8 (1)
put-down b20 (1)
pick-up b8 (1)
stack b8 b12 (1)
pick-up b20 (1)
stack b20 b8 (1)
unstack b3 b18 (1)
put-down b3 (1)
unstack b18 b13 (1)
put-down b18 (1)
pick-up b3 (1)
stack b3 b18 (1)
unstack b17 b10 (1)
put-down b17 (1)
unstack b13 b5 (1)
put-down b13 (1)
unstack b5 b19 (1)
put-down b5 (1)
unstack b19 b7 (1)
put-down b19 (1)
pick-up b7 (1)
stack b7 b14 (1)
pick-up b10 (1)
stack b10 b7 (1)
pick-up b17 (1)
stack b17 b10 (1)
pick-up b5 (1)
stack b5 b19 (1)
pick-up b13 (1)
stack b13 b5 (1)
unstack b3 b18 (1)
put-down b3 (1)
pick-up b18 (1)
stack b18 b13 (1)
pick-up b3 (1)
stack b3 b18 (1)
unstack b20 b8 (1)
put-down b20 (1)
unstack b8 b12 (1)
put-down b8 (1)
pick-up b20 (1)
stack b20 b8 (1)
unstack b12 b4 (1)
put-down b12 (1)
pick-up b4 (1)
stack b4 b3 (1)
pick-up b12 (1)
stack b12 b4 (1)
unstack b20 b8 (1)
put-down b20 (1)
pick-up b8 (1)
stack b8 b12 (1)
pick-up b20 (1)
stack b20 b8 (1)
unstack b6 b16 (1)
put-down b6 (1)
unstack b16 b1 (1)
put-down b16 (1)
unstack b1 b9 (1)
put-down b1 (1)
pick-up b16 (1)
stack b16 b1 (1)
pick-up b6 (1)
stack b6 b16 (1)
unstack b9 b11 (1)
put-down b9 (1)
unstack b11 b22 (1)
put-down b11 (1)
pick-up b22 (1)
stack b22 b20 (1)
pick-up b11 (1)
stack b11 b22 (1)
pick-up b9 (1)
stack b9 b11 (1)
unstack b6 b16 (1)
put-down b6 (1)
unstack b16 b1 (1)
put-down b16 (1)
pick-up b1 (1)
stack b1 b9 (1)
pick-up b16 (1)
stack b16 b1 (1)
pick-up b6 (1)
stack b6 b16 (1)
[t=0.100969s, 26924 KB] Plan length: 210 step(s).
[t=0.100969s, 26924 KB] Plan cost: 210
[t=0.100969s, 26924 KB] Expanded 3362 state(s).
[t=0.100969s, 26924 KB] Reopened 0 state(s).
[t=0.100969s, 26924 KB] Evaluated 3363 state(s).
[t=0.100969s, 26924 KB] Evaluations: 6726
[t=0.100969s, 26924 KB] Generated 32790 state(s).
[t=0.100969s, 26924 KB] Dead ends: 0 state(s).
[t=0.100969s, 26924 KB] Number of registered states: 3363
[t=0.100969s, 26924 KB] Int hash set load factor: 3363/4096 = 0.821045
[t=0.100969s, 26924 KB] Int hash set resizes: 12
[t=0.100969s, 26924 KB] Search time: 0.0821775s
[t=0.100969s, 26924 KB] Total time: 0.100969s
Solution found.
Peak memory: 26924 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.24s
