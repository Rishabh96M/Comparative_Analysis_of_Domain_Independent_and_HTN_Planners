INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_29/bws_problem_29_70.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.017s wall-clock]
2728 relevant atoms
1827 auxiliary atoms
4555 final queue length
7982 total queue pushes
Completing instantiation... [0.030s CPU, 0.030s wall-clock]
Instantiating: [0.050s CPU, 0.049s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
30 uncovered facts
Choosing groups: [0.010s CPU, 0.002s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.001s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.001s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.002s wall-clock]
Translating task: [0.050s CPU, 0.052s wall-clock]
2494 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
58 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.020s wall-clock]
Reordering and filtering variables...
59 of 59 variables necessary.
30 of 59 mutex groups necessary.
1682 of 1682 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.011s wall-clock]
Translator variables: 59
Translator derived variables: 0
Translator facts: 930
Translator goal facts: 25
Translator mutex groups: 30
Translator total mutex groups size: 900
Translator operators: 1682
Translator axioms: 0
Translator task size: 14442
Translator peak memory: 40824 KB
Writing output... [0.010s CPU, 0.009s wall-clock]
Done! [0.160s CPU, 0.161s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=1.9473e-05s, 24488 KB] reading input...
[t=0.00485876s, 26220 KB] done reading input!
[t=0.00596988s, 26616 KB] Initializing landmark count heuristic...
[t=0.00601619s, 26616 KB] Generating landmark graph...
[t=0.00612243s, 26748 KB] Building a landmark graph with reasonable orders.
[t=0.00623391s, 26748 KB] Initializing Exploration...
[t=0.00670938s, 27200 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0296575s, 27860 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0297643s, 27860 KB] Landmarks generation time: 0.023648s
[t=0.0297866s, 27860 KB] Discovered 127 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0298045s, 27860 KB] 611 edges
[t=0.0298144s, 27860 KB] approx. reasonable orders
[t=0.0301606s, 27860 KB] approx. obedient reasonable orders
[t=0.0302246s, 27860 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0302338s, 27860 KB] Landmarks generation time: 0.0242148s
[t=0.0302434s, 27860 KB] Discovered 127 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0302515s, 27860 KB] 613 edges
[t=0.0302598s, 27860 KB] Landmark graph generation time: 0.0242505s
[t=0.0302683s, 27860 KB] Landmark graph contains 127 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0302832s, 27860 KB] Landmark graph contains 613 orderings.
[t=0.0308767s, 27884 KB] Simplifying 6670 unary operators... done! [5046 unary operators]
[t=0.0324339s, 28016 KB] time to simplify: 0.00166625s
[t=0.032644s, 28016 KB] Initializing additive heuristic...
[t=0.0326631s, 28016 KB] Initializing FF heuristic...
[t=0.0327174s, 28016 KB] Building successor generator...done!
[t=0.0330021s, 28016 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0330108s, 28016 KB] time for successor generation creation: 0.000257558s
[t=0.0330239s, 28016 KB] Variables: 59
[t=0.033032s, 28016 KB] FactPairs: 930
[t=0.0330399s, 28016 KB] Bytes per state: 24
[t=0.0331462s, 28016 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0331931s, 28016 KB] 59 initial landmarks, 25 goal landmarks
[t=0.033271s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 68
[t=0.0332805s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 51
[t=0.0332888s, 28016 KB] g=0, 1 evaluated, 0 expanded
[t=0.0333024s, 28016 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 68
[t=0.0333106s, 28016 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 51
[t=0.0335552s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 67
[t=0.0335648s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 50
[t=0.0335727s, 28016 KB] g=2, 7 evaluated, 6 expanded
[t=0.0336194s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 66
[t=0.033628s, 28016 KB] g=3, 8 evaluated, 7 expanded
[t=0.0340447s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 65
[t=0.0340542s, 28016 KB] g=6, 19 evaluated, 18 expanded
[t=0.0344617s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 64
[t=0.0344729s, 28016 KB] g=8, 29 evaluated, 28 expanded
[t=0.0348612s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 49
[t=0.0348701s, 28016 KB] g=10, 39 evaluated, 38 expanded
[t=0.0349174s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 63
[t=0.0349259s, 28016 KB] g=10, 40 evaluated, 39 expanded
[t=0.0352641s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 62
[t=0.0352733s, 28016 KB] g=11, 49 evaluated, 48 expanded
[t=0.0355059s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 48
[t=0.0355145s, 28016 KB] g=12, 55 evaluated, 54 expanded
[t=0.0357439s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 61
[t=0.0357525s, 28016 KB] g=13, 61 evaluated, 60 expanded
[t=0.0362067s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 60
[t=0.0362159s, 28016 KB] g=16, 73 evaluated, 72 expanded
[t=0.0363436s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.036353s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 47
[t=0.0363609s, 28016 KB] g=14, 76 evaluated, 75 expanded
[t=0.0364822s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 58
[t=0.0364908s, 28016 KB] g=15, 79 evaluated, 78 expanded
[t=0.0369099s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0369188s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0369266s, 28016 KB] g=18, 90 evaluated, 89 expanded
[t=0.0373284s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0373408s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.037356s, 28016 KB] g=20, 99 evaluated, 98 expanded
[t=0.037695s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0377058s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.037714s, 28016 KB] g=22, 107 evaluated, 106 expanded
[t=0.0380338s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0380431s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0380512s, 28016 KB] g=24, 115 evaluated, 114 expanded
[t=0.0384762s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.038488s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0384962s, 28016 KB] g=26, 124 evaluated, 123 expanded
[t=0.0388501s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0388602s, 28016 KB] g=28, 133 evaluated, 132 expanded
[t=0.038985s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0389947s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0390025s, 28016 KB] g=28, 136 evaluated, 135 expanded
[t=0.039304s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0393178s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0393259s, 28016 KB] g=30, 144 evaluated, 143 expanded
[t=0.0396597s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0396718s, 28016 KB] g=32, 153 evaluated, 152 expanded
[t=0.0397943s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.039804s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0398115s, 28016 KB] g=32, 156 evaluated, 155 expanded
[t=0.0400762s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0400884s, 28016 KB] g=34, 163 evaluated, 162 expanded
[t=0.0403895s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0404006s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0404087s, 28016 KB] g=36, 171 evaluated, 170 expanded
[t=0.0406744s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0406962s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0407047s, 28016 KB] g=36, 178 evaluated, 177 expanded
[t=0.0410477s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0410584s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0410661s, 28016 KB] g=38, 187 evaluated, 186 expanded
[t=0.0413736s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0413841s, 28016 KB] g=40, 195 evaluated, 194 expanded
[t=0.0414709s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0414799s, 28016 KB] g=41, 197 evaluated, 196 expanded
[t=0.041534s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0415434s, 28016 KB] g=40, 198 evaluated, 197 expanded
[t=0.0415923s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0416014s, 28016 KB] g=42, 199 evaluated, 198 expanded
[t=0.0421487s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0421637s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0421727s, 28016 KB] g=44, 213 evaluated, 212 expanded
[t=0.0427383s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0427519s, 28016 KB] g=44, 227 evaluated, 226 expanded
[t=0.0430381s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0430496s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0430583s, 28016 KB] g=46, 234 evaluated, 233 expanded
[t=0.0436301s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0436428s, 28016 KB] g=50, 249 evaluated, 248 expanded
[t=0.0438722s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0438832s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0438911s, 28016 KB] g=52, 255 evaluated, 254 expanded
[t=0.0456903s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0457105s, 28016 KB] g=62, 302 evaluated, 301 expanded
[t=0.0458853s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0458951s, 28016 KB] g=63, 306 evaluated, 305 expanded
[t=0.0459475s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0459567s, 28016 KB] g=64, 307 evaluated, 306 expanded
[t=0.0464204s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0464343s, 28016 KB] g=66, 318 evaluated, 317 expanded
[t=0.0468322s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0468421s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0468503s, 28016 KB] g=68, 328 evaluated, 327 expanded
[t=0.0471509s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.047161s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0471689s, 28016 KB] g=70, 336 evaluated, 335 expanded
[t=0.0474768s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0474942s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0475092s, 28016 KB] g=72, 343 evaluated, 342 expanded
[t=0.0482036s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0482156s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0482235s, 28016 KB] g=74, 361 evaluated, 360 expanded
[t=0.0493364s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0493465s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0493551s, 28016 KB] g=78, 391 evaluated, 390 expanded
[t=0.049622s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0496311s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0496394s, 28016 KB] g=80, 398 evaluated, 397 expanded
[t=0.0503288s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0503404s, 28016 KB] g=85, 416 evaluated, 415 expanded
[t=0.0503896s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0503985s, 28016 KB] g=86, 417 evaluated, 416 expanded
[t=0.0506423s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0506516s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0506595s, 28016 KB] g=88, 423 evaluated, 422 expanded
[t=0.0508535s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0508624s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0508704s, 28016 KB] g=90, 428 evaluated, 427 expanded
[t=0.0543976s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0544161s, 28016 KB] g=102, 520 evaluated, 519 expanded
[t=0.0549271s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0549375s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0549455s, 28016 KB] g=108, 534 evaluated, 533 expanded
[t=0.0603963s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0604593s, 28016 KB] g=102, 679 evaluated, 678 expanded
[t=0.0614854s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0615123s, 28016 KB] g=106, 704 evaluated, 703 expanded
[t=0.0616768s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0616882s, 28016 KB] g=108, 708 evaluated, 707 expanded
[t=0.0640824s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0640993s, 28016 KB] g=120, 771 evaluated, 770 expanded
[t=0.0644073s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0644177s, 28016 KB] g=124, 780 evaluated, 779 expanded
[t=0.0645239s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.064533s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0645416s, 28016 KB] g=126, 783 evaluated, 782 expanded
[t=0.0671333s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0671483s, 28016 KB] g=149, 876 evaluated, 875 expanded
[t=0.0671909s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0672066s, 28016 KB] g=150, 877 evaluated, 876 expanded
[t=0.0673238s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.067355s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.067364s, 28016 KB] g=152, 881 evaluated, 880 expanded
[t=0.0676227s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0676341s, 28016 KB] g=156, 890 evaluated, 889 expanded
[t=0.0677168s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0677254s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0677332s, 28016 KB] g=158, 893 evaluated, 892 expanded
[t=0.0679449s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0679534s, 28016 KB] g=166, 904 evaluated, 903 expanded
[t=0.0679787s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0679869s, 28016 KB] g=166, 905 evaluated, 904 expanded
[t=0.0680059s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0680149s, 28016 KB] g=167, 906 evaluated, 905 expanded
[t=0.0680308s, 28016 KB] Solution found!
[t=0.0680441s, 28016 KB] Actual search time: 0.0348472s
unstack b11 b12 (1)
put-down b11 (1)
unstack b12 b15 (1)
put-down b12 (1)
unstack b2 b3 (1)
put-down b2 (1)
unstack b3 b1 (1)
put-down b3 (1)
unstack b1 b25 (1)
stack b1 b2 (1)
pick-up b15 (1)
stack b15 b3 (1)
unstack b6 b4 (1)
stack b6 b1 (1)
unstack b25 b14 (1)
put-down b25 (1)
unstack b14 b27 (1)
stack b14 b11 (1)
unstack b27 b10 (1)
stack b27 b6 (1)
unstack b4 b8 (1)
stack b4 b15 (1)
unstack b8 b28 (1)
put-down b8 (1)
unstack b28 b22 (1)
put-down b28 (1)
unstack b7 b20 (1)
stack b7 b10 (1)
unstack b20 b29 (1)
put-down b20 (1)
pick-up b29 (1)
stack b29 b7 (1)
unstack b22 b17 (1)
put-down b22 (1)
unstack b17 b19 (1)
stack b17 b8 (1)
pick-up b12 (1)
stack b12 b17 (1)
unstack b19 b24 (1)
put-down b19 (1)
unstack b24 b26 (1)
stack b24 b9 (1)
pick-up b26 (1)
stack b26 b27 (1)
pick-up b19 (1)
stack b19 b26 (1)
unstack b24 b9 (1)
put-down b24 (1)
pick-up b9 (1)
stack b9 b19 (1)
pick-up b24 (1)
stack b24 b9 (1)
unstack b29 b7 (1)
put-down b29 (1)
unstack b7 b10 (1)
put-down b7 (1)
unstack b10 b5 (1)
put-down b10 (1)
unstack b5 b16 (1)
put-down b5 (1)
unstack b16 b23 (1)
stack b16 b22 (1)
unstack b23 b13 (1)
stack b23 b4 (1)
unstack b13 b21 (1)
stack b13 b28 (1)
pick-up b10 (1)
stack b10 b5 (1)
pick-up b25 (1)
stack b25 b21 (1)
pick-up b7 (1)
stack b7 b10 (1)
pick-up b29 (1)
stack b29 b7 (1)
unstack b16 b22 (1)
put-down b16 (1)
pick-up b22 (1)
stack b22 b13 (1)
pick-up b16 (1)
stack b16 b22 (1)
unstack b25 b21 (1)
put-down b25 (1)
unstack b21 b18 (1)
put-down b21 (1)
pick-up b18 (1)
stack b18 b14 (1)
pick-up b21 (1)
stack b21 b18 (1)
pick-up b25 (1)
stack b25 b21 (1)
unstack b29 b7 (1)
put-down b29 (1)
unstack b7 b10 (1)
put-down b7 (1)
pick-up b29 (1)
stack b29 b7 (1)
unstack b10 b5 (1)
put-down b10 (1)
pick-up b5 (1)
stack b5 b16 (1)
pick-up b10 (1)
stack b10 b5 (1)
unstack b29 b7 (1)
put-down b29 (1)
pick-up b7 (1)
stack b7 b10 (1)
pick-up b29 (1)
stack b29 b7 (1)
unstack b23 b4 (1)
put-down b23 (1)
unstack b4 b15 (1)
put-down b4 (1)
pick-up b23 (1)
stack b23 b4 (1)
unstack b15 b3 (1)
put-down b15 (1)
pick-up b3 (1)
stack b3 b29 (1)
pick-up b15 (1)
stack b15 b3 (1)
unstack b23 b4 (1)
put-down b23 (1)
pick-up b4 (1)
stack b4 b15 (1)
pick-up b23 (1)
stack b23 b4 (1)
unstack b24 b9 (1)
put-down b24 (1)
unstack b9 b19 (1)
put-down b9 (1)
unstack b19 b26 (1)
put-down b19 (1)
pick-up b9 (1)
stack b9 b19 (1)
pick-up b24 (1)
stack b24 b9 (1)
unstack b26 b27 (1)
put-down b26 (1)
unstack b27 b6 (1)
put-down b27 (1)
pick-up b26 (1)
stack b26 b27 (1)
unstack b6 b1 (1)
put-down b6 (1)
unstack b1 b2 (1)
put-down b1 (1)
pick-up b2 (1)
stack b2 b20 (1)
pick-up b1 (1)
stack b1 b2 (1)
pick-up b6 (1)
stack b6 b1 (1)
unstack b26 b27 (1)
put-down b26 (1)
pick-up b27 (1)
stack b27 b6 (1)
pick-up b26 (1)
stack b26 b27 (1)
unstack b24 b9 (1)
put-down b24 (1)
unstack b9 b19 (1)
put-down b9 (1)
pick-up b19 (1)
stack b19 b26 (1)
pick-up b9 (1)
stack b9 b19 (1)
pick-up b24 (1)
stack b24 b9 (1)
[t=0.0680532s, 28016 KB] Plan length: 168 step(s).
[t=0.0680532s, 28016 KB] Plan cost: 168
[t=0.0680532s, 28016 KB] Expanded 906 state(s).
[t=0.0680532s, 28016 KB] Reopened 0 state(s).
[t=0.0680532s, 28016 KB] Evaluated 907 state(s).
[t=0.0680532s, 28016 KB] Evaluations: 1814
[t=0.0680532s, 28016 KB] Generated 8689 state(s).
[t=0.0680532s, 28016 KB] Dead ends: 0 state(s).
[t=0.0680532s, 28016 KB] Number of registered states: 907
[t=0.0680532s, 28016 KB] Int hash set load factor: 907/1024 = 0.885742
[t=0.0680532s, 28016 KB] Int hash set resizes: 10
[t=0.0680532s, 28016 KB] Search time: 0.0349076s
[t=0.0680532s, 28016 KB] Total time: 0.0680532s
Solution found.
Peak memory: 28016 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.28s
