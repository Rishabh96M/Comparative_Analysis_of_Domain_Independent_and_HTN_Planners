INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_30/bws_problem_30_73.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.019s wall-clock]
2912 relevant atoms
1950 auxiliary atoms
4862 final queue length
8527 total queue pushes
Completing instantiation... [0.030s CPU, 0.033s wall-clock]
Instantiating: [0.050s CPU, 0.053s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.010s CPU, 0.002s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
31 uncovered facts
Choosing groups: [0.000s CPU, 0.002s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.001s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.002s wall-clock]
Translating task: [0.050s CPU, 0.051s wall-clock]
2670 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
60 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.023s wall-clock]
Reordering and filtering variables...
61 of 61 variables necessary.
31 of 61 mutex groups necessary.
1800 of 1800 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.012s wall-clock]
Translator variables: 61
Translator derived variables: 0
Translator facts: 992
Translator goal facts: 23
Translator mutex groups: 31
Translator total mutex groups size: 961
Translator operators: 1800
Translator axioms: 0
Translator task size: 15447
Translator peak memory: 41336 KB
Writing output... [0.010s CPU, 0.010s wall-clock]
Done! [0.160s CPU, 0.166s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=5.0569e-05s, 24488 KB] reading input...
[t=0.00601506s, 26364 KB] done reading input!
[t=0.00687018s, 26760 KB] Initializing landmark count heuristic...
[t=0.00689986s, 26760 KB] Generating landmark graph...
[t=0.00698858s, 26892 KB] Building a landmark graph with reasonable orders.
[t=0.00708158s, 27024 KB] Initializing Exploration...
[t=0.00762783s, 27316 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0330451s, 28108 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0331683s, 28108 KB] Landmarks generation time: 0.0261894s
[t=0.0331934s, 28108 KB] Discovered 127 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0332105s, 28108 KB] 526 edges
[t=0.0332212s, 28108 KB] approx. reasonable orders
[t=0.0343957s, 28108 KB] approx. obedient reasonable orders
[t=0.0344424s, 28108 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0344545s, 28108 KB] Landmarks generation time: 0.027552s
[t=0.0344647s, 28108 KB] Discovered 127 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0344726s, 28108 KB] 536 edges
[t=0.0344972s, 28108 KB] Landmark graph generation time: 0.0276044s
[t=0.0345057s, 28108 KB] Landmark graph contains 127 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0345136s, 28108 KB] Landmark graph contains 536 orderings.
[t=0.0351959s, 28136 KB] Simplifying 7140 unary operators... done! [5400 unary operators]
[t=0.0369947s, 28268 KB] time to simplify: 0.00191308s
[t=0.0372042s, 28268 KB] Initializing additive heuristic...
[t=0.0372235s, 28268 KB] Initializing FF heuristic...
[t=0.0372775s, 28268 KB] Building successor generator...done!
[t=0.0375931s, 28268 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0376042s, 28268 KB] time for successor generation creation: 0.000288619s
[t=0.0376315s, 28268 KB] Variables: 61
[t=0.0376396s, 28268 KB] FactPairs: 992
[t=0.0376474s, 28268 KB] Bytes per state: 24
[t=0.0377318s, 28268 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0377654s, 28268 KB] 60 initial landmarks, 23 goal landmarks
[t=0.0378543s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 67
[t=0.0378638s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 50
[t=0.0378723s, 28268 KB] g=0, 1 evaluated, 0 expanded
[t=0.0378864s, 28268 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 67
[t=0.0378952s, 28268 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 50
[t=0.0380093s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 66
[t=0.0380212s, 28268 KB] g=1, 3 evaluated, 2 expanded
[t=0.0383346s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 49
[t=0.0383464s, 28268 KB] g=2, 10 evaluated, 9 expanded
[t=0.0384841s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 65
[t=0.0385012s, 28268 KB] g=3, 12 evaluated, 11 expanded
[t=0.0387255s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 64
[t=0.0387384s, 28268 KB] g=5, 16 evaluated, 15 expanded
[t=0.0393529s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 48
[t=0.0393649s, 28268 KB] g=8, 30 evaluated, 29 expanded
[t=0.0394602s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 63
[t=0.0394695s, 28268 KB] g=8, 32 evaluated, 31 expanded
[t=0.0402071s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 62
[t=0.0402168s, 28268 KB] g=10, 50 evaluated, 49 expanded
[t=0.0411062s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 61
[t=0.0411186s, 28268 KB] g=12, 71 evaluated, 70 expanded
[t=0.041942s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 60
[t=0.0419537s, 28268 KB] g=14, 91 evaluated, 90 expanded
[t=0.0420505s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 47
[t=0.042062s, 28268 KB] g=12, 93 evaluated, 92 expanded
[t=0.0427064s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 46
[t=0.0427194s, 28268 KB] g=14, 109 evaluated, 108 expanded
[t=0.0430342s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 57
[t=0.043046s, 28268 KB] g=16, 116 evaluated, 115 expanded
[t=0.0438615s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0438737s, 28268 KB] g=18, 135 evaluated, 134 expanded
[t=0.0446435s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0446568s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0446662s, 28268 KB] g=20, 153 evaluated, 152 expanded
[t=0.0450664s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0450796s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.0450885s, 28268 KB] g=22, 162 evaluated, 161 expanded
[t=0.0454987s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0455117s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0455205s, 28268 KB] g=24, 172 evaluated, 171 expanded
[t=0.0458538s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0458673s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0458757s, 28268 KB] g=26, 180 evaluated, 179 expanded
[t=0.0462468s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0462659s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0462747s, 28268 KB] g=28, 189 evaluated, 188 expanded
[t=0.0466585s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0466709s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0466789s, 28268 KB] g=30, 198 evaluated, 197 expanded
[t=0.0470496s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0470586s, 28268 KB] g=32, 207 evaluated, 206 expanded
[t=0.0472278s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0472366s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0472443s, 28268 KB] g=32, 211 evaluated, 210 expanded
[t=0.0476333s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0476455s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0476555s, 28268 KB] g=34, 220 evaluated, 219 expanded
[t=0.0479545s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0479639s, 28268 KB] g=36, 227 evaluated, 226 expanded
[t=0.048147s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0481583s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0481664s, 28268 KB] g=36, 231 evaluated, 230 expanded
[t=0.0485711s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0485907s, 28268 KB] g=38, 239 evaluated, 238 expanded
[t=0.0488267s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0488604s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0488807s, 28268 KB] g=38, 243 evaluated, 242 expanded
[t=0.0491891s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0491992s, 28268 KB] g=40, 250 evaluated, 249 expanded
[t=0.0495088s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0495205s, 28268 KB] g=42, 257 evaluated, 256 expanded
[t=0.0496506s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0496601s, 28268 KB] g=42, 260 evaluated, 259 expanded
[t=0.0506143s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0506244s, 28268 KB] g=44, 283 evaluated, 282 expanded
[t=0.0509491s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.050959s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0509676s, 28268 KB] g=46, 291 evaluated, 290 expanded
[t=0.0520251s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0520365s, 28268 KB] g=51, 317 evaluated, 316 expanded
[t=0.0521357s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0521447s, 28268 KB] g=52, 319 evaluated, 318 expanded
[t=0.0525112s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0525205s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0525284s, 28268 KB] g=54, 328 evaluated, 327 expanded
[t=0.0528252s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0528358s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0528441s, 28268 KB] g=56, 335 evaluated, 334 expanded
[t=0.0531493s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0531609s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0531694s, 28268 KB] g=58, 342 evaluated, 341 expanded
[t=0.053425s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0534342s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0534423s, 28268 KB] g=60, 348 evaluated, 347 expanded
[t=0.0546705s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0546822s, 28268 KB] g=64, 377 evaluated, 376 expanded
[t=0.0549351s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0549444s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.054953s, 28268 KB] g=66, 383 evaluated, 382 expanded
[t=0.0578705s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0578838s, 28268 KB] g=75, 456 evaluated, 455 expanded
[t=0.0579347s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0579437s, 28268 KB] g=76, 457 evaluated, 456 expanded
[t=0.0581326s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0581431s, 28268 KB] g=77, 461 evaluated, 460 expanded
[t=0.0581938s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0582064s, 28268 KB] g=78, 462 evaluated, 461 expanded
[t=0.0585434s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0585603s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0585698s, 28268 KB] g=80, 468 evaluated, 467 expanded
[t=0.0586617s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0586709s, 28268 KB] g=81, 470 evaluated, 469 expanded
[t=0.0587191s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0587277s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0587357s, 28268 KB] g=82, 471 evaluated, 470 expanded
[t=0.0589837s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0589942s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0590033s, 28268 KB] g=84, 477 evaluated, 476 expanded
[t=0.0599217s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0599342s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0599433s, 28268 KB] g=90, 500 evaluated, 499 expanded
[t=0.0613095s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0613221s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0613309s, 28268 KB] g=98, 533 evaluated, 532 expanded
[t=0.061459s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0614687s, 28268 KB] g=98, 536 evaluated, 535 expanded
[t=0.0616335s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0616432s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0616521s, 28268 KB] g=100, 540 evaluated, 539 expanded
[t=0.0639998s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0640266s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0640354s, 28268 KB] g=112, 601 evaluated, 600 expanded
[t=0.0643992s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0644139s, 28268 KB] g=116, 610 evaluated, 609 expanded
[t=0.0645429s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0645559s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0645645s, 28268 KB] g=118, 613 evaluated, 612 expanded
[t=0.0662909s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0663139s, 28268 KB] g=136, 666 evaluated, 665 expanded
[t=0.0664137s, 28268 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0664234s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0664319s, 28268 KB] g=138, 669 evaluated, 668 expanded
[t=0.0667087s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0667257s, 28268 KB] g=146, 680 evaluated, 679 expanded
[t=0.0668144s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0668254s, 28268 KB] g=150, 684 evaluated, 683 expanded
[t=0.0668475s, 28268 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.066856s, 28268 KB] g=151, 685 evaluated, 684 expanded
[t=0.0668739s, 28268 KB] Solution found!
[t=0.0668949s, 28268 KB] Actual search time: 0.0291289s
unstack b26 b12 (1)
put-down b26 (1)
unstack b12 b21 (1)
put-down b12 (1)
unstack b19 b3 (1)
put-down b19 (1)
unstack b20 b17 (1)
put-down b20 (1)
unstack b21 b4 (1)
put-down b21 (1)
unstack b22 b16 (1)
put-down b22 (1)
unstack b16 b11 (1)
put-down b16 (1)
unstack b3 b13 (1)
stack b3 b21 (1)
pick-up b12 (1)
stack b12 b3 (1)
unstack b13 b10 (1)
stack b13 b4 (1)
unstack b10 b5 (1)
put-down b10 (1)
pick-up b19 (1)
stack b19 b13 (1)
unstack b11 b1 (1)
put-down b11 (1)
unstack b17 b24 (1)
put-down b17 (1)
unstack b24 b2 (1)
put-down b24 (1)
unstack b5 b18 (1)
stack b5 b26 (1)
pick-up b1 (1)
stack b1 b18 (1)
unstack b6 b28 (1)
stack b6 b11 (1)
pick-up b28 (1)
stack b28 b10 (1)
unstack b2 b23 (1)
put-down b2 (1)
unstack b23 b27 (1)
put-down b23 (1)
pick-up b20 (1)
stack b20 b23 (1)
pick-up b27 (1)
stack b27 b5 (1)
unstack b1 b18 (1)
put-down b1 (1)
unstack b18 b30 (1)
put-down b18 (1)
unstack b30 b9 (1)
stack b30 b24 (1)
pick-up b1 (1)
stack b1 b18 (1)
unstack b9 b7 (1)
stack b9 b22 (1)
pick-up b2 (1)
stack b2 b9 (1)
unstack b7 b14 (1)
stack b7 b6 (1)
unstack b1 b18 (1)
put-down b1 (1)
pick-up b18 (1)
stack b18 b30 (1)
pick-up b1 (1)
stack b1 b18 (1)
unstack b19 b13 (1)
put-down b19 (1)
unstack b13 b4 (1)
put-down b13 (1)
pick-up b19 (1)
stack b19 b13 (1)
unstack b4 b8 (1)
put-down b4 (1)
unstack b8 b29 (1)
stack b8 b20 (1)
unstack b29 b25 (1)
stack b29 b2 (1)
unstack b25 b15 (1)
stack b25 b7 (1)
pick-up b15 (1)
stack b15 b17 (1)
pick-up b4 (1)
stack b4 b8 (1)
unstack b19 b13 (1)
put-down b19 (1)
pick-up b13 (1)
stack b13 b4 (1)
pick-up b19 (1)
stack b19 b13 (1)
unstack b12 b3 (1)
put-down b12 (1)
unstack b3 b21 (1)
put-down b3 (1)
pick-up b21 (1)
stack b21 b27 (1)
pick-up b3 (1)
stack b3 b21 (1)
pick-up b12 (1)
stack b12 b3 (1)
unstack b29 b2 (1)
put-down b29 (1)
unstack b2 b9 (1)
put-down b2 (1)
pick-up b29 (1)
stack b29 b2 (1)
unstack b9 b22 (1)
put-down b9 (1)
pick-up b22 (1)
stack b22 b14 (1)
pick-up b9 (1)
stack b9 b22 (1)
unstack b29 b2 (1)
put-down b29 (1)
pick-up b2 (1)
stack b2 b9 (1)
pick-up b29 (1)
stack b29 b2 (1)
unstack b19 b13 (1)
put-down b19 (1)
unstack b13 b4 (1)
put-down b13 (1)
unstack b4 b8 (1)
put-down b4 (1)
pick-up b13 (1)
stack b13 b4 (1)
pick-up b19 (1)
stack b19 b13 (1)
unstack b8 b20 (1)
put-down b8 (1)
unstack b20 b23 (1)
put-down b20 (1)
pick-up b23 (1)
stack b23 b25 (1)
pick-up b20 (1)
stack b20 b23 (1)
pick-up b8 (1)
stack b8 b20 (1)
unstack b19 b13 (1)
put-down b19 (1)
unstack b13 b4 (1)
put-down b13 (1)
pick-up b19 (1)
stack b19 b13 (1)
pick-up b4 (1)
stack b4 b8 (1)
unstack b19 b13 (1)
put-down b19 (1)
pick-up b13 (1)
stack b13 b4 (1)
pick-up b19 (1)
stack b19 b13 (1)
[t=0.066907s, 28268 KB] Plan length: 152 step(s).
[t=0.066907s, 28268 KB] Plan cost: 152
[t=0.066907s, 28268 KB] Expanded 685 state(s).
[t=0.066907s, 28268 KB] Reopened 0 state(s).
[t=0.066907s, 28268 KB] Evaluated 686 state(s).
[t=0.066907s, 28268 KB] Evaluations: 1372
[t=0.066907s, 28268 KB] Generated 8161 state(s).
[t=0.066907s, 28268 KB] Dead ends: 0 state(s).
[t=0.066907s, 28268 KB] Number of registered states: 686
[t=0.066907s, 28268 KB] Int hash set load factor: 686/1024 = 0.669922
[t=0.066907s, 28268 KB] Int hash set resizes: 10
[t=0.066907s, 28268 KB] Search time: 0.0291757s
[t=0.066907s, 28268 KB] Total time: 0.066907s
Solution found.
Peak memory: 28268 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.29s
