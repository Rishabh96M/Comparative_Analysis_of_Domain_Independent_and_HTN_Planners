INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_20/bws_problem_20_99.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.009s wall-clock]
1342 relevant atoms
900 auxiliary atoms
2242 final queue length
3885 total queue pushes
Completing instantiation... [0.010s CPU, 0.015s wall-clock]
Instantiating: [0.030s CPU, 0.025s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
21 uncovered facts
Choosing groups: [0.010s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.006s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.023s wall-clock]
1180 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
40 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.010s wall-clock]
Reordering and filtering variables...
41 of 41 variables necessary.
21 of 41 mutex groups necessary.
800 of 800 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.005s wall-clock]
Translator variables: 41
Translator derived variables: 0
Translator facts: 462
Translator goal facts: 17
Translator mutex groups: 21
Translator total mutex groups size: 441
Translator operators: 800
Translator axioms: 0
Translator task size: 6901
Translator peak memory: 35940 KB
Writing output... [0.000s CPU, 0.005s wall-clock]
Done! [0.080s CPU, 0.078s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=1.7329e-05s, 24488 KB] reading input...
[t=0.00239336s, 25180 KB] done reading input!
[t=0.00337926s, 25444 KB] Initializing landmark count heuristic...
[t=0.00342416s, 25444 KB] Generating landmark graph...
[t=0.00350697s, 25576 KB] Building a landmark graph with reasonable orders.
[t=0.00356262s, 25576 KB] Initializing Exploration...
[t=0.00381309s, 25744 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0123264s, 26140 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0123951s, 26140 KB] Landmarks generation time: 0.00888814s
[t=0.012409s, 26140 KB] Discovered 92 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0124252s, 26140 KB] 391 edges
[t=0.0124359s, 26140 KB] approx. reasonable orders
[t=0.0148632s, 26140 KB] approx. obedient reasonable orders
[t=0.0149868s, 26140 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.014999s, 26140 KB] Landmarks generation time: 0.0115725s
[t=0.0150094s, 26140 KB] Discovered 92 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0150183s, 26140 KB] 454 edges
[t=0.0150272s, 26140 KB] Landmark graph generation time: 0.0116106s
[t=0.0150364s, 26140 KB] Landmark graph contains 92 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0150448s, 26140 KB] Landmark graph contains 454 orderings.
[t=0.0153669s, 26332 KB] Simplifying 3160 unary operators... done! [2400 unary operators]
[t=0.0161561s, 26332 KB] time to simplify: 0.000842682s
[t=0.0162619s, 26332 KB] Initializing additive heuristic...
[t=0.0162758s, 26332 KB] Initializing FF heuristic...
[t=0.0163397s, 26332 KB] Building successor generator...done!
[t=0.0165171s, 26332 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0165261s, 26332 KB] time for successor generation creation: 0.000146433s
[t=0.0165389s, 26332 KB] Variables: 41
[t=0.0165475s, 26332 KB] FactPairs: 462
[t=0.0165556s, 26332 KB] Bytes per state: 16
[t=0.0166952s, 26332 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0167325s, 26332 KB] 41 initial landmarks, 17 goal landmarks
[t=0.016795s, 26332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0168052s, 26332 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0168143s, 26332 KB] g=0, 1 evaluated, 0 expanded
[t=0.0168292s, 26332 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0168387s, 26332 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0169218s, 26332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0169322s, 26332 KB] g=1, 4 evaluated, 3 expanded
[t=0.0170587s, 26332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0170684s, 26332 KB] g=3, 9 evaluated, 8 expanded
[t=0.0172569s, 26332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0172672s, 26332 KB] g=6, 17 evaluated, 16 expanded
[t=0.0175353s, 26332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0175459s, 26332 KB] g=8, 29 evaluated, 28 expanded
[t=0.0177641s, 26332 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0177771s, 26332 KB] g=6, 38 evaluated, 37 expanded
[t=0.017812s, 26332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0178223s, 26332 KB] g=10, 39 evaluated, 38 expanded
[t=0.0180567s, 26332 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0180721s, 26332 KB] g=8, 49 evaluated, 48 expanded
[t=0.0182379s, 26332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0182564s, 26332 KB] g=12, 56 evaluated, 55 expanded
[t=0.0186309s, 26332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.018646s, 26332 KB] g=14, 72 evaluated, 71 expanded
[t=0.0190616s, 26332 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0190856s, 26332 KB] g=14, 89 evaluated, 88 expanded
[t=0.0192343s, 26332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0192636s, 26332 KB] g=16, 95 evaluated, 94 expanded
[t=0.0197118s, 26332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0197295s, 26332 KB] g=18, 114 evaluated, 113 expanded
[t=0.0203062s, 26332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0203202s, 26332 KB] g=20, 139 evaluated, 138 expanded
[t=0.0205693s, 26332 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0205964s, 26332 KB] g=20, 150 evaluated, 149 expanded
[t=0.0208957s, 26332 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0209087s, 26332 KB] g=22, 163 evaluated, 162 expanded
[t=0.0210094s, 26332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0210197s, 26332 KB] g=22, 167 evaluated, 166 expanded
[t=0.0215296s, 26332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.021559s, 26332 KB] g=24, 188 evaluated, 187 expanded
[t=0.0222914s, 26332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0223197s, 26332 KB] g=26, 218 evaluated, 217 expanded
[t=0.0224898s, 26332 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0225009s, 26332 KB] g=28, 225 evaluated, 224 expanded
[t=0.0228319s, 26332 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0228425s, 26332 KB] g=30, 239 evaluated, 238 expanded
[t=0.0230822s, 26332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0230946s, 26332 KB] g=28, 249 evaluated, 248 expanded
[t=0.0241941s, 26332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0242077s, 26332 KB] g=30, 297 evaluated, 296 expanded
[t=0.024731s, 26332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0247424s, 26332 KB] g=32, 320 evaluated, 319 expanded
[t=0.0258154s, 26332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0258258s, 26332 KB] g=34, 368 evaluated, 367 expanded
[t=0.0261565s, 26332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.026166s, 26332 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0261745s, 26332 KB] g=36, 383 evaluated, 382 expanded
[t=0.0264803s, 26332 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0264901s, 26332 KB] g=38, 397 evaluated, 396 expanded
[t=0.0268786s, 26332 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0268893s, 26332 KB] g=40, 415 evaluated, 414 expanded
[t=0.0270501s, 26332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0270594s, 26332 KB] g=38, 422 evaluated, 421 expanded
[t=0.0273421s, 26332 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0273523s, 26332 KB] g=42, 435 evaluated, 434 expanded
[t=0.0277607s, 26332 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0277725s, 26332 KB] g=44, 454 evaluated, 453 expanded
[t=0.0279963s, 26332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.028006s, 26332 KB] g=40, 464 evaluated, 463 expanded
[t=0.0281183s, 26332 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0281276s, 26332 KB] g=46, 469 evaluated, 468 expanded
[t=0.0284975s, 26332 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0285173s, 26332 KB] g=48, 486 evaluated, 485 expanded
[t=0.0285505s, 26332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0285601s, 26332 KB] g=42, 487 evaluated, 486 expanded
[t=0.0289125s, 26332 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0289232s, 26332 KB] g=44, 504 evaluated, 503 expanded
[t=0.0292156s, 26332 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0292258s, 26332 KB] g=46, 517 evaluated, 516 expanded
[t=0.0293531s, 26332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0293629s, 26332 KB] g=44, 523 evaluated, 522 expanded
[t=0.0295497s, 26332 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0295595s, 26332 KB] g=48, 532 evaluated, 531 expanded
[t=0.0298281s, 26332 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0298404s, 26332 KB] g=50, 545 evaluated, 544 expanded
[t=0.0298917s, 26332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0299016s, 26332 KB] g=46, 547 evaluated, 546 expanded
[t=0.0300937s, 26332 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0301038s, 26332 KB] g=52, 556 evaluated, 555 expanded
[t=0.0303141s, 26332 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.030324s, 26332 KB] g=54, 566 evaluated, 565 expanded
[t=0.0303747s, 26332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0303847s, 26332 KB] g=48, 568 evaluated, 567 expanded
[t=0.0308313s, 26332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0308416s, 26332 KB] g=50, 590 evaluated, 589 expanded
[t=0.0310905s, 26332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0311009s, 26332 KB] g=52, 602 evaluated, 601 expanded
[t=0.031473s, 26332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0314839s, 26332 KB] g=54, 620 evaluated, 619 expanded
[t=0.031588s, 26332 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0315971s, 26332 KB] g=60, 625 evaluated, 624 expanded
[t=0.0317799s, 26332 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0317895s, 26332 KB] g=62, 634 evaluated, 633 expanded
[t=0.03184s, 26332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.031849s, 26332 KB] g=56, 636 evaluated, 635 expanded
[t=0.0319586s, 26332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0319678s, 26332 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.031976s, 26332 KB] g=58, 641 evaluated, 640 expanded
[t=0.0320818s, 26332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0320963s, 26332 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0321051s, 26332 KB] g=60, 644 evaluated, 643 expanded
[t=0.0331669s, 26332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.033183s, 26332 KB] g=82, 704 evaluated, 703 expanded
[t=0.0332554s, 26332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0332653s, 26332 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0332787s, 26332 KB] g=84, 708 evaluated, 707 expanded
[t=0.0334255s, 26332 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0334401s, 26332 KB] g=88, 717 evaluated, 716 expanded
[t=0.0334935s, 26332 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0335058s, 26332 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0335166s, 26332 KB] g=90, 720 evaluated, 719 expanded
[t=0.0336563s, 26332 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0336717s, 26332 KB] g=98, 731 evaluated, 730 expanded
[t=0.0336893s, 26332 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0336992s, 26332 KB] g=99, 732 evaluated, 731 expanded
[t=0.0337155s, 26332 KB] Solution found!
[t=0.0337332s, 26332 KB] Actual search time: 0.0170012s
unstack b7 b10 (1)
put-down b7 (1)
unstack b10 b3 (1)
put-down b10 (1)
unstack b1 b2 (1)
put-down b1 (1)
unstack b12 b9 (1)
put-down b12 (1)
unstack b2 b20 (1)
put-down b2 (1)
unstack b3 b5 (1)
put-down b3 (1)
unstack b5 b18 (1)
put-down b5 (1)
unstack b18 b4 (1)
put-down b18 (1)
unstack b9 b14 (1)
put-down b9 (1)
unstack b14 b19 (1)
stack b14 b4 (1)
unstack b20 b16 (1)
put-down b20 (1)
unstack b16 b11 (1)
put-down b16 (1)
unstack b11 b13 (1)
put-down b11 (1)
unstack b13 b6 (1)
put-down b13 (1)
unstack b6 b17 (1)
put-down b6 (1)
unstack b17 b15 (1)
stack b17 b20 (1)
pick-up b16 (1)
stack b16 b6 (1)
pick-up b1 (1)
stack b1 b16 (1)
pick-up b3 (1)
stack b3 b1 (1)
pick-up b18 (1)
stack b18 b3 (1)
pick-up b10 (1)
stack b10 b18 (1)
pick-up b5 (1)
stack b5 b14 (1)
pick-up b12 (1)
stack b12 b5 (1)
pick-up b13 (1)
stack b13 b12 (1)
pick-up b2 (1)
stack b2 b13 (1)
pick-up b7 (1)
stack b7 b2 (1)
pick-up b9 (1)
stack b9 b17 (1)
pick-up b19 (1)
stack b19 b9 (1)
pick-up b11 (1)
stack b11 b19 (1)
pick-up b15 (1)
stack b15 b11 (1)
unstack b7 b2 (1)
put-down b7 (1)
unstack b2 b13 (1)
put-down b2 (1)
unstack b13 b12 (1)
put-down b13 (1)
pick-up b2 (1)
stack b2 b13 (1)
pick-up b7 (1)
stack b7 b2 (1)
unstack b12 b5 (1)
put-down b12 (1)
unstack b5 b14 (1)
put-down b5 (1)
pick-up b12 (1)
stack b12 b5 (1)
unstack b14 b4 (1)
put-down b14 (1)
unstack b4 b8 (1)
put-down b4 (1)
pick-up b8 (1)
stack b8 b15 (1)
pick-up b14 (1)
stack b14 b4 (1)
unstack b12 b5 (1)
put-down b12 (1)
pick-up b5 (1)
stack b5 b14 (1)
pick-up b12 (1)
stack b12 b5 (1)
unstack b7 b2 (1)
put-down b7 (1)
unstack b2 b13 (1)
put-down b2 (1)
pick-up b13 (1)
stack b13 b12 (1)
pick-up b2 (1)
stack b2 b13 (1)
pick-up b7 (1)
stack b7 b2 (1)
[t=0.033746s, 26332 KB] Plan length: 100 step(s).
[t=0.033746s, 26332 KB] Plan cost: 100
[t=0.033746s, 26332 KB] Expanded 732 state(s).
[t=0.033746s, 26332 KB] Reopened 0 state(s).
[t=0.033746s, 26332 KB] Evaluated 733 state(s).
[t=0.033746s, 26332 KB] Evaluations: 1466
[t=0.033746s, 26332 KB] Generated 7377 state(s).
[t=0.033746s, 26332 KB] Dead ends: 0 state(s).
[t=0.033746s, 26332 KB] Number of registered states: 733
[t=0.033746s, 26332 KB] Int hash set load factor: 733/1024 = 0.71582
[t=0.033746s, 26332 KB] Int hash set resizes: 10
[t=0.033746s, 26332 KB] Search time: 0.0170513s
[t=0.033746s, 26332 KB] Total time: 0.033746s
Solution found.
Peak memory: 26332 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.16s
