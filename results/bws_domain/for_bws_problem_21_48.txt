INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_21/bws_problem_21_48.pddl --sas-file output.sas
Parsing...
Parsing: [0.010s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.009s wall-clock]
1472 relevant atoms
987 auxiliary atoms
2459 final queue length
4268 total queue pushes
Completing instantiation... [0.010s CPU, 0.015s wall-clock]
Instantiating: [0.020s CPU, 0.026s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
22 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.006s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.022s wall-clock]
1302 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
42 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.011s wall-clock]
Reordering and filtering variables...
43 of 43 variables necessary.
22 of 43 mutex groups necessary.
882 of 882 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.006s wall-clock]
Translator variables: 43
Translator derived variables: 0
Translator facts: 506
Translator goal facts: 18
Translator mutex groups: 22
Translator total mutex groups size: 484
Translator operators: 882
Translator axioms: 0
Translator task size: 7603
Translator peak memory: 36452 KB
Writing output... [0.000s CPU, 0.005s wall-clock]
Done! [0.080s CPU, 0.079s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.3823e-05s, 24488 KB] reading input...
[t=0.00265991s, 25268 KB] done reading input!
[t=0.00409538s, 25664 KB] Initializing landmark count heuristic...
[t=0.00414206s, 25664 KB] Generating landmark graph...
[t=0.00420161s, 25664 KB] Building a landmark graph with reasonable orders.
[t=0.00425606s, 25664 KB] Initializing Exploration...
[t=0.00451867s, 25852 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0139514s, 26380 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0140411s, 26380 KB] Landmarks generation time: 0.00984001s
[t=0.0140557s, 26380 KB] Discovered 94 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.014074s, 26380 KB] 468 edges
[t=0.0140845s, 26380 KB] approx. reasonable orders
[t=0.0157459s, 26380 KB] approx. obedient reasonable orders
[t=0.0157757s, 26380 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0157851s, 26380 KB] Landmarks generation time: 0.0116395s
[t=0.0157949s, 26380 KB] Discovered 94 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0158029s, 26380 KB] 503 edges
[t=0.0158115s, 26380 KB] Landmark graph generation time: 0.0116764s
[t=0.01582s, 26380 KB] Landmark graph contains 94 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0158282s, 26380 KB] Landmark graph contains 503 orderings.
[t=0.0161467s, 26380 KB] Simplifying 3486 unary operators... done! [2646 unary operators]
[t=0.0169843s, 26380 KB] time to simplify: 0.00089597s
[t=0.017105s, 26380 KB] Initializing additive heuristic...
[t=0.0171187s, 26380 KB] Initializing FF heuristic...
[t=0.01717s, 26380 KB] Building successor generator...done!
[t=0.017352s, 26380 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0173604s, 26380 KB] time for successor generation creation: 0.000150613s
[t=0.0173715s, 26380 KB] Variables: 43
[t=0.01738s, 26380 KB] FactPairs: 506
[t=0.0173887s, 26380 KB] Bytes per state: 16
[t=0.0174812s, 26380 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0175133s, 26380 KB] 42 initial landmarks, 18 goal landmarks
[t=0.01756s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0175691s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0175774s, 26380 KB] g=0, 1 evaluated, 0 expanded
[t=0.0175902s, 26380 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0175985s, 26380 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0176586s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0176676s, 26380 KB] g=1, 3 evaluated, 2 expanded
[t=0.017768s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0177768s, 26380 KB] g=2, 7 evaluated, 6 expanded
[t=0.0178977s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0179064s, 26380 KB] g=4, 12 evaluated, 11 expanded
[t=0.0179379s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0179466s, 26380 KB] g=4, 13 evaluated, 12 expanded
[t=0.0181146s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0181232s, 26380 KB] g=6, 20 evaluated, 19 expanded
[t=0.0181992s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0182081s, 26380 KB] g=6, 23 evaluated, 22 expanded
[t=0.018504s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.018513s, 26380 KB] g=8, 36 evaluated, 35 expanded
[t=0.0187286s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.018738s, 26380 KB] g=12, 45 evaluated, 44 expanded
[t=0.0188595s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0188682s, 26380 KB] g=10, 50 evaluated, 49 expanded
[t=0.0192763s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0192855s, 26380 KB] g=15, 68 evaluated, 67 expanded
[t=0.0193834s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0193927s, 26380 KB] g=16, 72 evaluated, 71 expanded
[t=0.019606s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0196292s, 26380 KB] g=18, 81 evaluated, 80 expanded
[t=0.0199691s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0199782s, 26380 KB] g=20, 96 evaluated, 95 expanded
[t=0.0203801s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0203894s, 26380 KB] g=22, 114 evaluated, 113 expanded
[t=0.0206222s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0206319s, 26380 KB] g=20, 124 evaluated, 123 expanded
[t=0.0207831s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0207923s, 26380 KB] g=24, 130 evaluated, 129 expanded
[t=0.0209825s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0209916s, 26380 KB] g=22, 138 evaluated, 137 expanded
[t=0.0211832s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0211949s, 26380 KB] g=26, 146 evaluated, 145 expanded
[t=0.0212743s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0212836s, 26380 KB] g=24, 149 evaluated, 148 expanded
[t=0.0215862s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0215961s, 26380 KB] g=28, 162 evaluated, 161 expanded
[t=0.0218038s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0218133s, 26380 KB] g=29, 171 evaluated, 170 expanded
[t=0.0218678s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0218775s, 26380 KB] g=30, 173 evaluated, 172 expanded
[t=0.0222701s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0222847s, 26380 KB] g=32, 190 evaluated, 189 expanded
[t=0.0223443s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.022354s, 26380 KB] g=30, 192 evaluated, 191 expanded
[t=0.0227544s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0227648s, 26380 KB] g=34, 209 evaluated, 208 expanded
[t=0.0227987s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0228076s, 26380 KB] g=32, 210 evaluated, 209 expanded
[t=0.0231751s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.023185s, 26380 KB] g=34, 226 evaluated, 225 expanded
[t=0.0232892s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.023299s, 26380 KB] g=36, 230 evaluated, 229 expanded
[t=0.0236317s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0236475s, 26380 KB] g=36, 242 evaluated, 241 expanded
[t=0.0239766s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0239895s, 26380 KB] g=38, 256 evaluated, 255 expanded
[t=0.0240385s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0240484s, 26380 KB] g=38, 257 evaluated, 256 expanded
[t=0.0243422s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0243561s, 26380 KB] g=40, 270 evaluated, 269 expanded
[t=0.0245673s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0245814s, 26380 KB] g=42, 279 evaluated, 278 expanded
[t=0.0246136s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0246309s, 26380 KB] g=40, 280 evaluated, 279 expanded
[t=0.0250697s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0250889s, 26380 KB] g=42, 299 evaluated, 298 expanded
[t=0.0256816s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0256916s, 26380 KB] g=44, 325 evaluated, 324 expanded
[t=0.0258362s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0258452s, 26380 KB] g=46, 331 evaluated, 330 expanded
[t=0.0260944s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0261038s, 26380 KB] g=48, 342 evaluated, 341 expanded
[t=0.0261586s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.026168s, 26380 KB] g=46, 344 evaluated, 343 expanded
[t=0.0264792s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.02649s, 26380 KB] g=48, 358 evaluated, 357 expanded
[t=0.0268241s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0268421s, 26380 KB] g=50, 372 evaluated, 371 expanded
[t=0.0270838s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0270968s, 26380 KB] g=52, 382 evaluated, 381 expanded
[t=0.0272798s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0272902s, 26380 KB] g=54, 390 evaluated, 389 expanded
[t=0.0275482s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0275607s, 26380 KB] g=54, 401 evaluated, 400 expanded
[t=0.0280427s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0280534s, 26380 KB] g=58, 422 evaluated, 421 expanded
[t=0.028187s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0281962s, 26380 KB] g=60, 428 evaluated, 427 expanded
[t=0.028647s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0286574s, 26380 KB] g=62, 448 evaluated, 447 expanded
[t=0.0288671s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0288764s, 26380 KB] g=64, 457 evaluated, 456 expanded
[t=0.0301867s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0301998s, 26380 KB] g=72, 518 evaluated, 517 expanded
[t=0.0304769s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0304861s, 26380 KB] g=76, 532 evaluated, 531 expanded
[t=0.0305667s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0305753s, 26380 KB] g=78, 536 evaluated, 535 expanded
[t=0.0309468s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0309573s, 26380 KB] g=93, 559 evaluated, 558 expanded
[t=0.0310446s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0310538s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0310619s, 26380 KB] g=96, 565 evaluated, 564 expanded
[t=0.0310838s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.031092s, 26380 KB] g=97, 566 evaluated, 565 expanded
[t=0.0311139s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0311259s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.031134s, 26380 KB] g=98, 567 evaluated, 566 expanded
[t=0.0311867s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.031195s, 26380 KB] g=102, 571 evaluated, 570 expanded
[t=0.0312128s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0312241s, 26380 KB] g=103, 572 evaluated, 571 expanded
[t=0.0312386s, 26380 KB] Solution found!
[t=0.0312504s, 26380 KB] Actual search time: 0.0137348s
unstack b18 b11 (1)
stack b18 b5 (1)
unstack b11 b6 (1)
put-down b11 (1)
unstack b21 b10 (1)
stack b21 b6 (1)
unstack b10 b14 (1)
put-down b10 (1)
unstack b14 b16 (1)
put-down b14 (1)
unstack b16 b8 (1)
put-down b16 (1)
unstack b8 b2 (1)
put-down b8 (1)
unstack b2 b17 (1)
stack b2 b10 (1)
unstack b18 b5 (1)
put-down b18 (1)
unstack b5 b4 (1)
stack b5 b17 (1)
pick-up b18 (1)
stack b18 b5 (1)
unstack b4 b1 (1)
stack b4 b2 (1)
unstack b1 b15 (1)
put-down b1 (1)
unstack b15 b19 (1)
put-down b15 (1)
unstack b19 b20 (1)
stack b19 b4 (1)
unstack b20 b12 (1)
stack b20 b16 (1)
unstack b12 b13 (1)
stack b12 b15 (1)
unstack b13 b9 (1)
stack b13 b20 (1)
pick-up b1 (1)
stack b1 b9 (1)
pick-up b14 (1)
stack b14 b12 (1)
pick-up b8 (1)
stack b8 b13 (1)
unstack b1 b9 (1)
put-down b1 (1)
unstack b9 b3 (1)
stack b9 b18 (1)
pick-up b1 (1)
stack b1 b9 (1)
unstack b21 b6 (1)
put-down b21 (1)
pick-up b6 (1)
stack b6 b14 (1)
pick-up b21 (1)
stack b21 b6 (1)
unstack b3 b7 (1)
put-down b3 (1)
pick-up b7 (1)
stack b7 b8 (1)
pick-up b3 (1)
stack b3 b7 (1)
unstack b19 b4 (1)
put-down b19 (1)
unstack b4 b2 (1)
put-down b4 (1)
pick-up b19 (1)
stack b19 b4 (1)
unstack b2 b10 (1)
put-down b2 (1)
pick-up b10 (1)
stack b10 b1 (1)
pick-up b2 (1)
stack b2 b10 (1)
unstack b19 b4 (1)
put-down b19 (1)
pick-up b4 (1)
stack b4 b2 (1)
pick-up b19 (1)
stack b19 b4 (1)
unstack b21 b6 (1)
put-down b21 (1)
unstack b6 b14 (1)
put-down b6 (1)
pick-up b21 (1)
stack b21 b6 (1)
unstack b14 b12 (1)
put-down b14 (1)
unstack b12 b15 (1)
put-down b12 (1)
pick-up b14 (1)
stack b14 b12 (1)
pick-up b15 (1)
stack b15 b3 (1)
unstack b14 b12 (1)
put-down b14 (1)
pick-up b12 (1)
stack b12 b15 (1)
pick-up b14 (1)
stack b14 b12 (1)
unstack b21 b6 (1)
put-down b21 (1)
pick-up b6 (1)
stack b6 b14 (1)
pick-up b21 (1)
stack b21 b6 (1)
[t=0.0312599s, 26380 KB] Plan length: 104 step(s).
[t=0.0312599s, 26380 KB] Plan cost: 104
[t=0.0312599s, 26380 KB] Expanded 572 state(s).
[t=0.0312599s, 26380 KB] Reopened 0 state(s).
[t=0.0312599s, 26380 KB] Evaluated 573 state(s).
[t=0.0312599s, 26380 KB] Evaluations: 1146
[t=0.0312599s, 26380 KB] Generated 5131 state(s).
[t=0.0312599s, 26380 KB] Dead ends: 0 state(s).
[t=0.0312599s, 26380 KB] Number of registered states: 573
[t=0.0312599s, 26380 KB] Int hash set load factor: 573/1024 = 0.55957
[t=0.0312599s, 26380 KB] Int hash set resizes: 10
[t=0.0312599s, 26380 KB] Search time: 0.013779s
[t=0.0312599s, 26380 KB] Total time: 0.0312599s
Solution found.
Peak memory: 26380 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.16s
