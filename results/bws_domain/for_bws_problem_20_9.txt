INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_20/bws_problem_20_9.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.010s wall-clock]
1342 relevant atoms
900 auxiliary atoms
2242 final queue length
3886 total queue pushes
Completing instantiation... [0.010s CPU, 0.015s wall-clock]
Instantiating: [0.030s CPU, 0.026s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
21 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.006s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.021s wall-clock]
1180 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
40 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.010s wall-clock]
Reordering and filtering variables...
41 of 41 variables necessary.
21 of 41 mutex groups necessary.
800 of 800 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.005s wall-clock]
Translator variables: 41
Translator derived variables: 0
Translator facts: 462
Translator goal facts: 19
Translator mutex groups: 21
Translator total mutex groups size: 441
Translator operators: 800
Translator axioms: 0
Translator task size: 6903
Translator peak memory: 35940 KB
Writing output... [0.000s CPU, 0.004s wall-clock]
Done! [0.080s CPU, 0.077s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.0496e-05s, 24488 KB] reading input...
[t=0.00302669s, 25180 KB] done reading input!
[t=0.00409265s, 25444 KB] Initializing landmark count heuristic...
[t=0.00412381s, 25444 KB] Generating landmark graph...
[t=0.00417878s, 25576 KB] Building a landmark graph with reasonable orders.
[t=0.0042304s, 25576 KB] Initializing Exploration...
[t=0.00453684s, 25744 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0128275s, 26140 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0131598s, 26140 KB] Landmarks generation time: 0.00899646s
[t=0.0131937s, 26140 KB] Discovered 93 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0132388s, 26140 KB] 444 edges
[t=0.0132545s, 26140 KB] approx. reasonable orders
[t=0.0152928s, 26140 KB] approx. obedient reasonable orders
[t=0.0153291s, 26140 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0153398s, 26140 KB] Landmarks generation time: 0.0112124s
[t=0.0153493s, 26140 KB] Discovered 93 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0153574s, 26140 KB] 490 edges
[t=0.0153657s, 26140 KB] Landmark graph generation time: 0.0112488s
[t=0.0153742s, 26140 KB] Landmark graph contains 93 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0153822s, 26140 KB] Landmark graph contains 490 orderings.
[t=0.0157169s, 26348 KB] Simplifying 3160 unary operators... done! [2400 unary operators]
[t=0.0164757s, 26348 KB] time to simplify: 0.000810397s
[t=0.0165775s, 26348 KB] Initializing additive heuristic...
[t=0.0165902s, 26348 KB] Initializing FF heuristic...
[t=0.0166414s, 26348 KB] Building successor generator...done!
[t=0.0168028s, 26348 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0168117s, 26348 KB] time for successor generation creation: 0.000130319s
[t=0.0168233s, 26348 KB] Variables: 41
[t=0.016832s, 26348 KB] FactPairs: 462
[t=0.0168404s, 26348 KB] Bytes per state: 16
[t=0.0169396s, 26348 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.016975s, 26348 KB] 41 initial landmarks, 19 goal landmarks
[t=0.0170232s, 26348 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0170334s, 26348 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0170423s, 26348 KB] g=0, 1 evaluated, 0 expanded
[t=0.0170554s, 26348 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0170645s, 26348 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0172143s, 26348 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0172239s, 26348 KB] g=2, 7 evaluated, 6 expanded
[t=0.0175373s, 26348 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0175482s, 26348 KB] g=4, 21 evaluated, 20 expanded
[t=0.0176655s, 26348 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0176748s, 26348 KB] g=6, 26 evaluated, 25 expanded
[t=0.0179454s, 26348 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0179577s, 26348 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0179665s, 26348 KB] g=8, 37 evaluated, 36 expanded
[t=0.0181269s, 26348 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0181367s, 26348 KB] g=10, 44 evaluated, 43 expanded
[t=0.0182089s, 26348 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0182177s, 26348 KB] g=10, 47 evaluated, 46 expanded
[t=0.0184292s, 26348 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0184393s, 26348 KB] g=12, 57 evaluated, 56 expanded
[t=0.018636s, 26348 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0186449s, 26348 KB] g=14, 66 evaluated, 65 expanded
[t=0.0187392s, 26348 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0187492s, 26348 KB] g=12, 70 evaluated, 69 expanded
[t=0.0190064s, 26348 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0190156s, 26348 KB] g=16, 82 evaluated, 81 expanded
[t=0.0190527s, 26348 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0190623s, 26348 KB] g=14, 83 evaluated, 82 expanded
[t=0.0193785s, 26348 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0193888s, 26348 KB] g=18, 98 evaluated, 97 expanded
[t=0.0198704s, 26348 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.019883s, 26348 KB] g=20, 117 evaluated, 116 expanded
[t=0.0205729s, 26348 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.020583s, 26348 KB] g=22, 149 evaluated, 148 expanded
[t=0.0209866s, 26348 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0209965s, 26348 KB] g=24, 168 evaluated, 167 expanded
[t=0.0210736s, 26348 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0210826s, 26348 KB] g=24, 171 evaluated, 170 expanded
[t=0.0214697s, 26348 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0214794s, 26348 KB] g=26, 189 evaluated, 188 expanded
[t=0.0218346s, 26348 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.021846s, 26348 KB] g=28, 205 evaluated, 204 expanded
[t=0.0220909s, 26348 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0221003s, 26348 KB] g=30, 216 evaluated, 215 expanded
[t=0.0225201s, 26348 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0225302s, 26348 KB] g=27, 236 evaluated, 235 expanded
[t=0.0225873s, 26348 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0225966s, 26348 KB] g=28, 238 evaluated, 237 expanded
[t=0.0229503s, 26348 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0229596s, 26348 KB] g=29, 254 evaluated, 253 expanded
[t=0.0234501s, 26348 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0234644s, 26348 KB] g=32, 275 evaluated, 274 expanded
[t=0.0240024s, 26348 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0240216s, 26348 KB] g=34, 298 evaluated, 297 expanded
[t=0.0244587s, 26348 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.024469s, 26348 KB] g=36, 317 evaluated, 316 expanded
[t=0.0245465s, 26348 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0245602s, 26348 KB] g=36, 320 evaluated, 319 expanded
[t=0.0251379s, 26348 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.02515s, 26348 KB] g=38, 342 evaluated, 341 expanded
[t=0.0252126s, 26348 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0252218s, 26348 KB] g=40, 344 evaluated, 343 expanded
[t=0.0255295s, 26348 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0255391s, 26348 KB] g=42, 358 evaluated, 357 expanded
[t=0.0256161s, 26348 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0256256s, 26348 KB] g=40, 361 evaluated, 360 expanded
[t=0.0258974s, 26348 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0259089s, 26348 KB] g=44, 373 evaluated, 372 expanded
[t=0.0261721s, 26348 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0261876s, 26348 KB] g=42, 385 evaluated, 384 expanded
[t=0.0262227s, 26348 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.026233s, 26348 KB] g=46, 386 evaluated, 385 expanded
[t=0.0264923s, 26348 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0265037s, 26348 KB] g=48, 398 evaluated, 397 expanded
[t=0.0266801s, 26348 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.026692s, 26348 KB] g=44, 406 evaluated, 405 expanded
[t=0.0269285s, 26348 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0269389s, 26348 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0269475s, 26348 KB] g=46, 417 evaluated, 416 expanded
[t=0.0270996s, 26348 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0271111s, 26348 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0271195s, 26348 KB] g=48, 424 evaluated, 423 expanded
[t=0.0272518s, 26348 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0272636s, 26348 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0272744s, 26348 KB] g=50, 430 evaluated, 429 expanded
[t=0.0278548s, 26348 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0278706s, 26348 KB] g=56, 457 evaluated, 456 expanded
[t=0.0279994s, 26348 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0280097s, 26348 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0280192s, 26348 KB] g=58, 463 evaluated, 462 expanded
[t=0.0281097s, 26348 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0281202s, 26348 KB] g=58, 467 evaluated, 466 expanded
[t=0.0282253s, 26348 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0282358s, 26348 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0282445s, 26348 KB] g=60, 472 evaluated, 471 expanded
[t=0.0293207s, 26348 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0293437s, 26348 KB] g=70, 527 evaluated, 526 expanded
[t=0.0294318s, 26348 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0294439s, 26348 KB] g=72, 531 evaluated, 530 expanded
[t=0.0298502s, 26348 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0298712s, 26348 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0298799s, 26348 KB] g=78, 545 evaluated, 544 expanded
[t=0.0313607s, 26348 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0313757s, 26348 KB] g=94, 618 evaluated, 617 expanded
[t=0.0315257s, 26348 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0315376s, 26348 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0315467s, 26348 KB] g=100, 625 evaluated, 624 expanded
[t=0.0410391s, 26348 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0411091s, 26348 KB] g=76, 1110 evaluated, 1109 expanded
[t=0.0412397s, 26348 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0412493s, 26348 KB] g=78, 1117 evaluated, 1116 expanded
[t=0.0429151s, 26348 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0429376s, 26348 KB] g=90, 1213 evaluated, 1212 expanded
[t=0.0431336s, 26348 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.043144s, 26348 KB] g=94, 1225 evaluated, 1224 expanded
[t=0.0431932s, 26348 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0432026s, 26348 KB] g=96, 1228 evaluated, 1227 expanded
[t=0.0437201s, 26348 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0437315s, 26348 KB] g=110, 1266 evaluated, 1265 expanded
[t=0.0437711s, 26348 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0437803s, 26348 KB] g=112, 1269 evaluated, 1268 expanded
[t=0.043827s, 26348 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0438363s, 26348 KB] g=116, 1273 evaluated, 1272 expanded
[t=0.0438521s, 26348 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0438614s, 26348 KB] g=117, 1274 evaluated, 1273 expanded
[t=0.043881s, 26348 KB] Solution found!
[t=0.043909s, 26348 KB] Actual search time: 0.0269374s
unstack b11 b2 (1)
put-down b11 (1)
unstack b15 b19 (1)
put-down b15 (1)
unstack b19 b6 (1)
put-down b19 (1)
unstack b6 b12 (1)
stack b6 b19 (1)
unstack b12 b4 (1)
put-down b12 (1)
unstack b9 b16 (1)
stack b9 b2 (1)
unstack b16 b10 (1)
put-down b16 (1)
unstack b10 b20 (1)
put-down b10 (1)
unstack b20 b1 (1)
stack b20 b6 (1)
unstack b1 b5 (1)
put-down b1 (1)
pick-up b5 (1)
stack b5 b14 (1)
pick-up b11 (1)
stack b11 b5 (1)
unstack b4 b8 (1)
put-down b4 (1)
unstack b8 b7 (1)
stack b8 b9 (1)
unstack b7 b17 (1)
put-down b7 (1)
unstack b17 b3 (1)
stack b17 b4 (1)
unstack b3 b18 (1)
put-down b3 (1)
unstack b18 b13 (1)
stack b18 b20 (1)
pick-up b7 (1)
stack b7 b18 (1)
pick-up b1 (1)
stack b1 b17 (1)
pick-up b13 (1)
stack b13 b11 (1)
pick-up b15 (1)
stack b15 b3 (1)
pick-up b10 (1)
stack b10 b15 (1)
pick-up b12 (1)
stack b12 b10 (1)
pick-up b16 (1)
stack b16 b1 (1)
unstack b8 b9 (1)
put-down b8 (1)
unstack b9 b2 (1)
put-down b9 (1)
pick-up b2 (1)
stack b2 b12 (1)
pick-up b9 (1)
stack b9 b2 (1)
pick-up b8 (1)
stack b8 b9 (1)
unstack b16 b1 (1)
put-down b16 (1)
unstack b1 b17 (1)
put-down b1 (1)
pick-up b16 (1)
stack b16 b1 (1)
unstack b17 b4 (1)
put-down b17 (1)
pick-up b4 (1)
stack b4 b8 (1)
pick-up b17 (1)
stack b17 b4 (1)
unstack b16 b1 (1)
put-down b16 (1)
pick-up b1 (1)
stack b1 b17 (1)
pick-up b16 (1)
stack b16 b1 (1)
unstack b13 b11 (1)
put-down b13 (1)
unstack b11 b5 (1)
put-down b11 (1)
pick-up b13 (1)
stack b13 b11 (1)
unstack b5 b14 (1)
put-down b5 (1)
pick-up b14 (1)
stack b14 b16 (1)
pick-up b5 (1)
stack b5 b14 (1)
unstack b13 b11 (1)
put-down b13 (1)
pick-up b11 (1)
stack b11 b5 (1)
pick-up b13 (1)
stack b13 b11 (1)
unstack b7 b18 (1)
put-down b7 (1)
unstack b18 b20 (1)
put-down b18 (1)
pick-up b7 (1)
stack b7 b18 (1)
unstack b20 b6 (1)
put-down b20 (1)
unstack b6 b19 (1)
put-down b6 (1)
pick-up b19 (1)
stack b19 b13 (1)
pick-up b6 (1)
stack b6 b19 (1)
pick-up b20 (1)
stack b20 b6 (1)
unstack b7 b18 (1)
put-down b7 (1)
pick-up b18 (1)
stack b18 b20 (1)
pick-up b7 (1)
stack b7 b18 (1)
[t=0.0439265s, 26348 KB] Plan length: 118 step(s).
[t=0.0439265s, 26348 KB] Plan cost: 118
[t=0.0439265s, 26348 KB] Expanded 1274 state(s).
[t=0.0439265s, 26348 KB] Reopened 0 state(s).
[t=0.0439265s, 26348 KB] Evaluated 1275 state(s).
[t=0.0439265s, 26348 KB] Evaluations: 2550
[t=0.0439265s, 26348 KB] Generated 8748 state(s).
[t=0.0439265s, 26348 KB] Dead ends: 0 state(s).
[t=0.0439265s, 26348 KB] Number of registered states: 1275
[t=0.0439265s, 26348 KB] Int hash set load factor: 1275/2048 = 0.622559
[t=0.0439265s, 26348 KB] Int hash set resizes: 11
[t=0.0439265s, 26348 KB] Search time: 0.0269874s
[t=0.0439265s, 26348 KB] Total time: 0.0439265s
Solution found.
Peak memory: 26348 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.16s
