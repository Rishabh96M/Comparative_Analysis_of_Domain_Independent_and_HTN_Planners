INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_20/bws_problem_20_43.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.000s CPU, 0.009s wall-clock]
1342 relevant atoms
900 auxiliary atoms
2242 final queue length
3887 total queue pushes
Completing instantiation... [0.020s CPU, 0.014s wall-clock]
Instantiating: [0.030s CPU, 0.024s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
21 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.006s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.021s wall-clock]
1180 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
40 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.010s wall-clock]
Reordering and filtering variables...
41 of 41 variables necessary.
21 of 41 mutex groups necessary.
800 of 800 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.005s wall-clock]
Translator variables: 41
Translator derived variables: 0
Translator facts: 462
Translator goal facts: 15
Translator mutex groups: 21
Translator total mutex groups size: 441
Translator operators: 800
Translator axioms: 0
Translator task size: 6899
Translator peak memory: 35948 KB
Writing output... [0.010s CPU, 0.005s wall-clock]
Done! [0.080s CPU, 0.076s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.88e-05s, 24488 KB] reading input...
[t=0.00245943s, 25180 KB] done reading input!
[t=0.00358733s, 25444 KB] Initializing landmark count heuristic...
[t=0.00362314s, 25444 KB] Generating landmark graph...
[t=0.00368592s, 25576 KB] Building a landmark graph with reasonable orders.
[t=0.00375543s, 25576 KB] Initializing Exploration...
[t=0.00402404s, 25744 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0113589s, 26140 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0114333s, 26140 KB] Landmarks generation time: 0.00774908s
[t=0.0114481s, 26140 KB] Discovered 83 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0114653s, 26140 KB] 261 edges
[t=0.0114757s, 26140 KB] approx. reasonable orders
[t=0.0127785s, 26140 KB] approx. obedient reasonable orders
[t=0.0128023s, 26140 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0128115s, 26140 KB] Landmarks generation time: 0.00918777s
[t=0.0128228s, 26140 KB] Discovered 83 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0128329s, 26140 KB] 285 edges
[t=0.0128562s, 26140 KB] Landmark graph generation time: 0.00924093s
[t=0.0128655s, 26140 KB] Landmark graph contains 83 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0128741s, 26140 KB] Landmark graph contains 285 orderings.
[t=0.013189s, 26292 KB] Simplifying 3160 unary operators... done! [2400 unary operators]
[t=0.0140956s, 26292 KB] time to simplify: 0.000984068s
[t=0.014237s, 26292 KB] Initializing additive heuristic...
[t=0.0142579s, 26292 KB] Initializing FF heuristic...
[t=0.0143204s, 26292 KB] Building successor generator...done!
[t=0.0145033s, 26292 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0145264s, 26292 KB] time for successor generation creation: 0.000139463s
[t=0.0145387s, 26292 KB] Variables: 41
[t=0.0145467s, 26292 KB] FactPairs: 462
[t=0.0145546s, 26292 KB] Bytes per state: 16
[t=0.0147174s, 26292 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0147502s, 26292 KB] 40 initial landmarks, 15 goal landmarks
[t=0.0148464s, 26292 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0148926s, 26292 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0149017s, 26292 KB] g=0, 1 evaluated, 0 expanded
[t=0.0149174s, 26292 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0149262s, 26292 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0150695s, 26292 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0150794s, 26292 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0150876s, 26292 KB] g=2, 7 evaluated, 6 expanded
[t=0.0152208s, 26292 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.01523s, 26292 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0152379s, 26292 KB] g=4, 13 evaluated, 12 expanded
[t=0.0153723s, 26292 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0153813s, 26292 KB] g=6, 19 evaluated, 18 expanded
[t=0.0154326s, 26292 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0154416s, 26292 KB] g=6, 21 evaluated, 20 expanded
[t=0.0156124s, 26292 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0156213s, 26292 KB] g=8, 29 evaluated, 28 expanded
[t=0.0156939s, 26292 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0157026s, 26292 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0157108s, 26292 KB] g=8, 32 evaluated, 31 expanded
[t=0.0158056s, 26292 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0158144s, 26292 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0158224s, 26292 KB] g=10, 36 evaluated, 35 expanded
[t=0.0159148s, 26292 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0159237s, 26292 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0159314s, 26292 KB] g=12, 40 evaluated, 39 expanded
[t=0.0160082s, 26292 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0160189s, 26292 KB] g=13, 43 evaluated, 42 expanded
[t=0.0161776s, 26292 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0161875s, 26292 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0161963s, 26292 KB] g=16, 50 evaluated, 49 expanded
[t=0.0162478s, 26292 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0162572s, 26292 KB] g=17, 52 evaluated, 51 expanded
[t=0.0167608s, 26292 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0167793s, 26292 KB] g=21, 75 evaluated, 74 expanded
[t=0.0168151s, 26292 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0168253s, 26292 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0168337s, 26292 KB] g=22, 76 evaluated, 75 expanded
[t=0.0169929s, 26292 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0170055s, 26292 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0170138s, 26292 KB] g=24, 83 evaluated, 82 expanded
[t=0.0171619s, 26292 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0171754s, 26292 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0171838s, 26292 KB] g=26, 89 evaluated, 88 expanded
[t=0.0173444s, 26292 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0173559s, 26292 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0173646s, 26292 KB] g=28, 96 evaluated, 95 expanded
[t=0.0175054s, 26292 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0175163s, 26292 KB] g=30, 102 evaluated, 101 expanded
[t=0.017576s, 26292 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0175856s, 26292 KB] g=30, 104 evaluated, 103 expanded
[t=0.0177022s, 26292 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0177124s, 26292 KB] g=31, 109 evaluated, 108 expanded
[t=0.0178279s, 26292 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0178388s, 26292 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0178477s, 26292 KB] g=32, 114 evaluated, 113 expanded
[t=0.0178992s, 26292 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0179088s, 26292 KB] g=33, 116 evaluated, 115 expanded
[t=0.0180399s, 26292 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0180493s, 26292 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0180579s, 26292 KB] g=36, 122 evaluated, 121 expanded
[t=0.0184944s, 26292 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0185081s, 26292 KB] g=42, 142 evaluated, 141 expanded
[t=0.0186432s, 26292 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0186717s, 26292 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0186809s, 26292 KB] g=44, 148 evaluated, 147 expanded
[t=0.0187809s, 26292 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0187922s, 26292 KB] g=44, 152 evaluated, 151 expanded
[t=0.0189049s, 26292 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0189164s, 26292 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0189249s, 26292 KB] g=46, 157 evaluated, 156 expanded
[t=0.0198777s, 26292 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0199168s, 26292 KB] g=54, 199 evaluated, 198 expanded
[t=0.0202222s, 26292 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0202413s, 26292 KB] g=58, 213 evaluated, 212 expanded
[t=0.0203309s, 26292 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0203424s, 26292 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0203507s, 26292 KB] g=60, 217 evaluated, 216 expanded
[t=0.0210842s, 26292 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0210994s, 26292 KB] g=76, 255 evaluated, 254 expanded
[t=0.021176s, 26292 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0211859s, 26292 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0211941s, 26292 KB] g=76, 258 evaluated, 257 expanded
[t=0.0212505s, 26292 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0212619s, 26292 KB] g=77, 261 evaluated, 260 expanded
[t=0.0212895s, 26292 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0212995s, 26292 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0213093s, 26292 KB] g=78, 262 evaluated, 261 expanded
[t=0.0213642s, 26292 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0213757s, 26292 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0213842s, 26292 KB] g=80, 265 evaluated, 264 expanded
[t=0.0214458s, 26292 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0214552s, 26292 KB] g=84, 269 evaluated, 268 expanded
[t=0.0214741s, 26292 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0214833s, 26292 KB] g=85, 270 evaluated, 269 expanded
[t=0.0214985s, 26292 KB] Solution found!
[t=0.0215113s, 26292 KB] Actual search time: 0.00675972s
unstack b11 b2 (1)
put-down b11 (1)
unstack b20 b18 (1)
put-down b20 (1)
pick-up b12 (1)
stack b12 b2 (1)
unstack b9 b3 (1)
stack b9 b18 (1)
unstack b10 b7 (1)
stack b10 b3 (1)
unstack b7 b14 (1)
put-down b7 (1)
unstack b14 b15 (1)
put-down b14 (1)
unstack b15 b13 (1)
stack b15 b10 (1)
unstack b13 b8 (1)
put-down b13 (1)
unstack b9 b18 (1)
put-down b9 (1)
unstack b18 b19 (1)
stack b18 b8 (1)
unstack b19 b1 (1)
stack b19 b9 (1)
unstack b1 b5 (1)
stack b1 b20 (1)
pick-up b13 (1)
stack b13 b1 (1)
unstack b5 b16 (1)
stack b5 b15 (1)
pick-up b14 (1)
stack b14 b5 (1)
unstack b16 b4 (1)
put-down b16 (1)
pick-up b4 (1)
stack b4 b19 (1)
unstack b12 b2 (1)
put-down b12 (1)
unstack b2 b17 (1)
put-down b2 (1)
pick-up b17 (1)
stack b17 b11 (1)
pick-up b2 (1)
stack b2 b17 (1)
pick-up b12 (1)
stack b12 b2 (1)
unstack b4 b19 (1)
put-down b4 (1)
unstack b19 b9 (1)
put-down b19 (1)
pick-up b4 (1)
stack b4 b19 (1)
pick-up b9 (1)
stack b9 b18 (1)
unstack b4 b19 (1)
put-down b4 (1)
pick-up b19 (1)
stack b19 b9 (1)
pick-up b4 (1)
stack b4 b19 (1)
unstack b14 b5 (1)
put-down b14 (1)
unstack b5 b15 (1)
put-down b5 (1)
pick-up b14 (1)
stack b14 b5 (1)
unstack b15 b10 (1)
put-down b15 (1)
unstack b10 b3 (1)
put-down b10 (1)
unstack b3 b6 (1)
put-down b3 (1)
pick-up b10 (1)
stack b10 b3 (1)
pick-up b6 (1)
stack b6 b12 (1)
pick-up b16 (1)
stack b16 b6 (1)
pick-up b15 (1)
stack b15 b10 (1)
unstack b14 b5 (1)
put-down b14 (1)
pick-up b5 (1)
stack b5 b15 (1)
pick-up b14 (1)
stack b14 b5 (1)
[t=0.0215223s, 26292 KB] Plan length: 86 step(s).
[t=0.0215223s, 26292 KB] Plan cost: 86
[t=0.0215223s, 26292 KB] Expanded 270 state(s).
[t=0.0215223s, 26292 KB] Reopened 0 state(s).
[t=0.0215223s, 26292 KB] Evaluated 271 state(s).
[t=0.0215223s, 26292 KB] Evaluations: 542
[t=0.0215223s, 26292 KB] Generated 2354 state(s).
[t=0.0215223s, 26292 KB] Dead ends: 0 state(s).
[t=0.0215223s, 26292 KB] Number of registered states: 271
[t=0.0215223s, 26292 KB] Int hash set load factor: 271/512 = 0.529297
[t=0.0215223s, 26292 KB] Int hash set resizes: 9
[t=0.0215223s, 26292 KB] Search time: 0.00680541s
[t=0.0215223s, 26292 KB] Total time: 0.0215223s
Solution found.
Peak memory: 26292 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.14s
