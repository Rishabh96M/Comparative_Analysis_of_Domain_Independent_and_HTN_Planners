INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_28/bws_problem_28_27.pddl --sas-file output.sas
Parsing...
Parsing: [0.010s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.017s wall-clock]
2550 relevant atoms
1708 auxiliary atoms
4258 final queue length
7453 total queue pushes
Completing instantiation... [0.030s CPU, 0.026s wall-clock]
Instantiating: [0.040s CPU, 0.045s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.002s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
29 uncovered facts
Choosing groups: [0.000s CPU, 0.002s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.002s wall-clock]
Translating task: [0.050s CPU, 0.044s wall-clock]
2324 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
56 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.019s wall-clock]
Reordering and filtering variables...
57 of 57 variables necessary.
29 of 57 mutex groups necessary.
1568 of 1568 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.020s CPU, 0.011s wall-clock]
Translator variables: 57
Translator derived variables: 0
Translator facts: 870
Translator goal facts: 24
Translator mutex groups: 29
Translator total mutex groups size: 841
Translator operators: 1568
Translator axioms: 0
Translator task size: 13468
Translator peak memory: 40316 KB
Writing output... [0.010s CPU, 0.008s wall-clock]
Done! [0.150s CPU, 0.143s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=3.519e-05s, 24488 KB] reading input...
[t=0.00503851s, 26076 KB] done reading input!
[t=0.00618454s, 26472 KB] Initializing landmark count heuristic...
[t=0.00622074s, 26472 KB] Generating landmark graph...
[t=0.00630403s, 26604 KB] Building a landmark graph with reasonable orders.
[t=0.00639505s, 26604 KB] Initializing Exploration...
[t=0.006859s, 27016 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0313224s, 27808 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0314183s, 27808 KB] Landmarks generation time: 0.0251151s
[t=0.0314402s, 27808 KB] Discovered 126 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0314567s, 27808 KB] 773 edges
[t=0.0314664s, 27808 KB] approx. reasonable orders
[t=0.0327398s, 27808 KB] approx. obedient reasonable orders
[t=0.0327843s, 27808 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0327939s, 27808 KB] Landmarks generation time: 0.0265683s
[t=0.0328042s, 27808 KB] Discovered 126 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0328116s, 27808 KB] 788 edges
[t=0.0328197s, 27808 KB] Landmark graph generation time: 0.0266058s
[t=0.0328279s, 27808 KB] Landmark graph contains 126 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0328357s, 27808 KB] Landmark graph contains 788 orderings.
[t=0.0333824s, 27832 KB] Simplifying 6216 unary operators... done! [4704 unary operators]
[t=0.0348222s, 27832 KB] time to simplify: 0.00153672s
[t=0.0350232s, 27984 KB] Initializing additive heuristic...
[t=0.0350423s, 27984 KB] Initializing FF heuristic...
[t=0.0351004s, 27984 KB] Building successor generator...done!
[t=0.0354022s, 27984 KB] peak memory difference for successor generator creation: 0 KB
[t=0.035411s, 27984 KB] time for successor generation creation: 0.000266331s
[t=0.035424s, 27984 KB] Variables: 57
[t=0.035432s, 27984 KB] FactPairs: 870
[t=0.0354396s, 27984 KB] Bytes per state: 24
[t=0.035559s, 27984 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.035595s, 27984 KB] 57 initial landmarks, 24 goal landmarks
[t=0.0357236s, 27984 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 69
[t=0.0357372s, 27984 KB] New best heuristic value for ff(transform = adapt_costs(one)): 50
[t=0.0357457s, 27984 KB] g=0, 1 evaluated, 0 expanded
[t=0.0357593s, 27984 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 69
[t=0.0357683s, 27984 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 50
[t=0.0359277s, 27984 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 68
[t=0.0359373s, 27984 KB] New best heuristic value for ff(transform = adapt_costs(one)): 49
[t=0.0359452s, 27984 KB] g=2, 5 evaluated, 4 expanded
[t=0.0360926s, 27984 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 67
[t=0.0361037s, 27984 KB] New best heuristic value for ff(transform = adapt_costs(one)): 48
[t=0.0361115s, 27984 KB] g=4, 9 evaluated, 8 expanded
[t=0.0362687s, 27984 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 66
[t=0.0362777s, 27984 KB] g=6, 13 evaluated, 12 expanded
[t=0.0365893s, 27984 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 65
[t=0.0366026s, 27984 KB] g=8, 21 evaluated, 20 expanded
[t=0.0367924s, 27984 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 64
[t=0.0368266s, 27984 KB] g=10, 26 evaluated, 25 expanded
[t=0.0371191s, 27984 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 61
[t=0.037133s, 27984 KB] New best heuristic value for ff(transform = adapt_costs(one)): 47
[t=0.0371412s, 27984 KB] g=12, 33 evaluated, 32 expanded
[t=0.0373816s, 27984 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 58
[t=0.0373918s, 27984 KB] New best heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0373999s, 27984 KB] g=14, 39 evaluated, 38 expanded
[t=0.0376699s, 27984 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 57
[t=0.0376817s, 27984 KB] g=16, 46 evaluated, 45 expanded
[t=0.0380032s, 27984 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0380155s, 27984 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0380275s, 27984 KB] g=18, 54 evaluated, 53 expanded
[t=0.0384089s, 27984 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0384272s, 27984 KB] g=20, 62 evaluated, 61 expanded
[t=0.0387521s, 27984 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0387657s, 27984 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.038774s, 27984 KB] g=22, 70 evaluated, 69 expanded
[t=0.0390813s, 27984 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0390912s, 27984 KB] g=24, 78 evaluated, 77 expanded
[t=0.03914s, 27984 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0391497s, 27984 KB] g=24, 79 evaluated, 78 expanded
[t=0.0397783s, 27984 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0397881s, 27984 KB] g=26, 96 evaluated, 95 expanded
[t=0.0404045s, 27984 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0404136s, 27984 KB] g=28, 113 evaluated, 112 expanded
[t=0.0404606s, 27984 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0404701s, 27984 KB] g=28, 114 evaluated, 113 expanded
[t=0.0412241s, 27984 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0412376s, 27984 KB] g=30, 132 evaluated, 131 expanded
[t=0.0413891s, 27984 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0413978s, 27984 KB] g=31, 136 evaluated, 135 expanded
[t=0.0414452s, 27984 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0414535s, 27984 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0414611s, 27984 KB] g=32, 137 evaluated, 136 expanded
[t=0.0417837s, 27984 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0417934s, 27984 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0418045s, 27984 KB] g=34, 146 evaluated, 145 expanded
[t=0.042132s, 27984 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.042141s, 27984 KB] g=36, 155 evaluated, 154 expanded
[t=0.042223s, 27984 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0422317s, 27984 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0422393s, 27984 KB] g=36, 157 evaluated, 156 expanded
[t=0.0425314s, 27984 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0425418s, 27984 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0425495s, 27984 KB] g=38, 165 evaluated, 164 expanded
[t=0.0428925s, 27984 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0429022s, 27984 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0429101s, 27984 KB] g=40, 174 evaluated, 173 expanded
[t=0.0432869s, 27984 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0432992s, 27984 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0433149s, 27984 KB] g=42, 182 evaluated, 181 expanded
[t=0.0436105s, 27984 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.04362s, 27984 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.043628s, 27984 KB] g=44, 190 evaluated, 189 expanded
[t=0.0446207s, 27984 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0446316s, 27984 KB] g=49, 218 evaluated, 217 expanded
[t=0.0446788s, 27984 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0446875s, 27984 KB] g=50, 219 evaluated, 218 expanded
[t=0.0450147s, 27984 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0450241s, 27984 KB] g=51, 228 evaluated, 227 expanded
[t=0.0451063s, 27984 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0451151s, 27984 KB] g=52, 230 evaluated, 229 expanded
[t=0.0453995s, 27984 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0454088s, 27984 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0454165s, 27984 KB] g=54, 238 evaluated, 237 expanded
[t=0.0462915s, 27984 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0463063s, 27984 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0463149s, 27984 KB] g=56, 260 evaluated, 259 expanded
[t=0.0465864s, 27984 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0465988s, 27984 KB] g=59, 267 evaluated, 266 expanded
[t=0.0466494s, 27984 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0466593s, 27984 KB] g=60, 268 evaluated, 267 expanded
[t=0.0469278s, 27984 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0469466s, 27984 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0469543s, 27984 KB] g=62, 275 evaluated, 274 expanded
[t=0.0471721s, 27984 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0471927s, 27984 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0472008s, 27984 KB] g=64, 281 evaluated, 280 expanded
[t=0.047431s, 27984 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0474425s, 27984 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0474503s, 27984 KB] g=66, 287 evaluated, 286 expanded
[t=0.0487806s, 27984 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0488037s, 27984 KB] g=70, 323 evaluated, 322 expanded
[t=0.0490291s, 27984 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0490406s, 27984 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.049049s, 27984 KB] g=72, 328 evaluated, 327 expanded
[t=0.0517802s, 27984 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.051802s, 27984 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0518119s, 27984 KB] g=80, 401 evaluated, 400 expanded
[t=0.0519588s, 27984 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.051976s, 27984 KB] g=80, 405 evaluated, 404 expanded
[t=0.0521537s, 27984 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0521629s, 27984 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0521705s, 27984 KB] g=82, 410 evaluated, 409 expanded
[t=0.0547873s, 27984 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0548158s, 27984 KB] g=92, 484 evaluated, 483 expanded
[t=0.0549972s, 27984 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.05501s, 27984 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0550187s, 27984 KB] g=94, 489 evaluated, 488 expanded
[t=0.0556372s, 27984 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0556511s, 27984 KB] g=98, 505 evaluated, 504 expanded
[t=0.0557921s, 27984 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0558012s, 27984 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0558091s, 27984 KB] g=100, 509 evaluated, 508 expanded
[t=0.0575334s, 27984 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0575971s, 27984 KB] g=112, 556 evaluated, 555 expanded
[t=0.058199s, 27984 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0582412s, 27984 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0582599s, 27984 KB] g=118, 563 evaluated, 562 expanded
[t=0.0657415s, 27984 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0658006s, 27984 KB] g=149, 781 evaluated, 780 expanded
[t=0.0658557s, 27984 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0658643s, 27984 KB] g=150, 782 evaluated, 781 expanded
[t=0.066325s, 27984 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0663345s, 27984 KB] g=154, 798 evaluated, 797 expanded
[t=0.0664528s, 27984 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0664614s, 27984 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0664699s, 27984 KB] g=156, 802 evaluated, 801 expanded
[t=0.0667469s, 27984 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0667612s, 27984 KB] g=160, 811 evaluated, 810 expanded
[t=0.0668448s, 27984 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0668531s, 27984 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0668614s, 27984 KB] g=162, 814 evaluated, 813 expanded
[t=0.0677821s, 27984 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0677916s, 27984 KB] g=178, 855 evaluated, 854 expanded
[t=0.0679716s, 27984 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0680202s, 27984 KB] g=186, 865 evaluated, 864 expanded
[t=0.0680667s, 27984 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0680755s, 27984 KB] g=187, 866 evaluated, 865 expanded
[t=0.068091s, 27984 KB] Solution found!
[t=0.0681026s, 27984 KB] Actual search time: 0.0324806s
unstack b12 b11 (1)
put-down b12 (1)
unstack b11 b24 (1)
put-down b11 (1)
unstack b23 b8 (1)
put-down b23 (1)
unstack b7 b3 (1)
put-down b7 (1)
unstack b3 b21 (1)
put-down b3 (1)
unstack b21 b26 (1)
stack b21 b3 (1)
unstack b26 b18 (1)
stack b26 b11 (1)
unstack b18 b15 (1)
put-down b18 (1)
unstack b15 b5 (1)
stack b15 b12 (1)
unstack b8 b27 (1)
put-down b8 (1)
unstack b27 b13 (1)
stack b27 b18 (1)
unstack b13 b16 (1)
stack b13 b7 (1)
unstack b16 b14 (1)
put-down b16 (1)
unstack b14 b22 (1)
put-down b14 (1)
unstack b22 b2 (1)
put-down b22 (1)
unstack b2 b9 (1)
stack b2 b5 (1)
pick-up b23 (1)
stack b23 b22 (1)
unstack b9 b28 (1)
stack b9 b13 (1)
unstack b28 b10 (1)
stack b28 b23 (1)
unstack b10 b20 (1)
stack b10 b27 (1)
pick-up b16 (1)
stack b16 b28 (1)
pick-up b20 (1)
stack b20 b8 (1)
unstack b2 b5 (1)
put-down b2 (1)
unstack b5 b25 (1)
put-down b5 (1)
unstack b25 b4 (1)
stack b25 b24 (1)
unstack b4 b17 (1)
stack b4 b10 (1)
pick-up b5 (1)
stack b5 b25 (1)
pick-up b2 (1)
stack b2 b5 (1)
unstack b17 b1 (1)
put-down b17 (1)
unstack b1 b19 (1)
stack b1 b9 (1)
pick-up b17 (1)
stack b17 b1 (1)
unstack b19 b6 (1)
stack b19 b21 (1)
pick-up b6 (1)
stack b6 b26 (1)
unstack b20 b8 (1)
put-down b20 (1)
pick-up b8 (1)
stack b8 b17 (1)
pick-up b20 (1)
stack b20 b8 (1)
unstack b19 b21 (1)
put-down b19 (1)
unstack b21 b3 (1)
put-down b21 (1)
pick-up b3 (1)
stack b3 b15 (1)
pick-up b21 (1)
stack b21 b3 (1)
pick-up b19 (1)
stack b19 b21 (1)
unstack b2 b5 (1)
put-down b2 (1)
unstack b5 b25 (1)
put-down b5 (1)
pick-up b2 (1)
stack b2 b5 (1)
unstack b25 b24 (1)
put-down b25 (1)
pick-up b24 (1)
stack b24 b19 (1)
pick-up b25 (1)
stack b25 b24 (1)
unstack b2 b5 (1)
put-down b2 (1)
pick-up b5 (1)
stack b5 b25 (1)
pick-up b2 (1)
stack b2 b5 (1)
unstack b4 b10 (1)
put-down b4 (1)
unstack b10 b27 (1)
put-down b10 (1)
pick-up b4 (1)
stack b4 b10 (1)
unstack b27 b18 (1)
put-down b27 (1)
pick-up b18 (1)
stack b18 b20 (1)
unstack b4 b10 (1)
put-down b4 (1)
pick-up b10 (1)
stack b10 b27 (1)
pick-up b4 (1)
stack b4 b10 (1)
unstack b18 b20 (1)
put-down b18 (1)
unstack b20 b8 (1)
put-down b20 (1)
pick-up b18 (1)
stack b18 b20 (1)
unstack b4 b10 (1)
put-down b4 (1)
unstack b10 b27 (1)
put-down b10 (1)
pick-up b27 (1)
stack b27 b18 (1)
pick-up b10 (1)
stack b10 b27 (1)
pick-up b4 (1)
stack b4 b10 (1)
unstack b8 b17 (1)
put-down b8 (1)
unstack b17 b1 (1)
put-down b17 (1)
pick-up b8 (1)
stack b8 b17 (1)
unstack b1 b9 (1)
put-down b1 (1)
unstack b9 b13 (1)
put-down b9 (1)
unstack b13 b7 (1)
put-down b13 (1)
pick-up b1 (1)
stack b1 b9 (1)
pick-up b7 (1)
stack b7 b16 (1)
pick-up b13 (1)
stack b13 b7 (1)
unstack b1 b9 (1)
put-down b1 (1)
pick-up b9 (1)
stack b9 b13 (1)
pick-up b1 (1)
stack b1 b9 (1)
unstack b8 b17 (1)
put-down b8 (1)
pick-up b17 (1)
stack b17 b1 (1)
pick-up b8 (1)
stack b8 b17 (1)
unstack b4 b10 (1)
put-down b4 (1)
unstack b10 b27 (1)
put-down b10 (1)
unstack b27 b18 (1)
put-down b27 (1)
pick-up b10 (1)
stack b10 b27 (1)
pick-up b4 (1)
stack b4 b10 (1)
unstack b18 b20 (1)
put-down b18 (1)
pick-up b20 (1)
stack b20 b8 (1)
pick-up b18 (1)
stack b18 b20 (1)
unstack b4 b10 (1)
put-down b4 (1)
unstack b10 b27 (1)
put-down b10 (1)
pick-up b27 (1)
stack b27 b18 (1)
pick-up b10 (1)
stack b10 b27 (1)
pick-up b4 (1)
stack b4 b10 (1)
[t=0.0681112s, 27984 KB] Plan length: 188 step(s).
[t=0.0681112s, 27984 KB] Plan cost: 188
[t=0.0681112s, 27984 KB] Expanded 866 state(s).
[t=0.0681112s, 27984 KB] Reopened 0 state(s).
[t=0.0681112s, 27984 KB] Evaluated 867 state(s).
[t=0.0681112s, 27984 KB] Evaluations: 1734
[t=0.0681112s, 27984 KB] Generated 8319 state(s).
[t=0.0681112s, 27984 KB] Dead ends: 0 state(s).
[t=0.0681112s, 27984 KB] Number of registered states: 867
[t=0.0681112s, 27984 KB] Int hash set load factor: 867/1024 = 0.84668
[t=0.0681112s, 27984 KB] Int hash set resizes: 10
[t=0.0681112s, 27984 KB] Search time: 0.0325526s
[t=0.0681112s, 27984 KB] Total time: 0.0681112s
Solution found.
Peak memory: 27984 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.26s
