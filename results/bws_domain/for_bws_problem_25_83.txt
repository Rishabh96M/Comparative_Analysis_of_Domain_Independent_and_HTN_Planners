INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_25/bws_problem_25_83.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.013s wall-clock]
2052 relevant atoms
1375 auxiliary atoms
3427 final queue length
5983 total queue pushes
Completing instantiation... [0.020s CPU, 0.021s wall-clock]
Instantiating: [0.040s CPU, 0.036s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.002s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
26 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.009s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.001s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.040s CPU, 0.033s wall-clock]
1850 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
50 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.020s wall-clock]
Reordering and filtering variables...
51 of 51 variables necessary.
26 of 51 mutex groups necessary.
1250 of 1250 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.008s wall-clock]
Translator variables: 51
Translator derived variables: 0
Translator facts: 702
Translator goal facts: 17
Translator mutex groups: 26
Translator total mutex groups size: 676
Translator operators: 1250
Translator axioms: 0
Translator task size: 10746
Translator peak memory: 38384 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.120s CPU, 0.118s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=1.9079e-05s, 24488 KB] reading input...
[t=0.00355701s, 25632 KB] done reading input!
[t=0.00449722s, 26028 KB] Initializing landmark count heuristic...
[t=0.00452748s, 26028 KB] Generating landmark graph...
[t=0.00460939s, 26160 KB] Building a landmark graph with reasonable orders.
[t=0.00469042s, 26160 KB] Initializing Exploration...
[t=0.00505117s, 26532 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0175833s, 26928 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0176684s, 26928 KB] Landmarks generation time: 0.0130578s
[t=0.0176821s, 26928 KB] Discovered 98 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0176983s, 26928 KB] 329 edges
[t=0.0177076s, 26928 KB] approx. reasonable orders
[t=0.021086s, 26928 KB] approx. obedient reasonable orders
[t=0.0212297s, 26928 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0212406s, 26928 KB] Landmarks generation time: 0.0167114s
[t=0.0212515s, 26928 KB] Discovered 98 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0212613s, 26928 KB] 384 edges
[t=0.0212728s, 26928 KB] Landmark graph generation time: 0.0167528s
[t=0.021282s, 26928 KB] Landmark graph contains 98 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0212903s, 26928 KB] Landmark graph contains 384 orderings.
[t=0.0217965s, 26928 KB] Simplifying 4950 unary operators... done! [3750 unary operators]
[t=0.0229966s, 27060 KB] time to simplify: 0.00128444s
[t=0.0231594s, 27060 KB] Initializing additive heuristic...
[t=0.0231758s, 27060 KB] Initializing FF heuristic...
[t=0.0232295s, 27060 KB] Building successor generator...done!
[t=0.0234789s, 27060 KB] peak memory difference for successor generator creation: 0 KB
[t=0.023489s, 27060 KB] time for successor generation creation: 0.000215281s
[t=0.023502s, 27060 KB] Variables: 51
[t=0.0235104s, 27060 KB] FactPairs: 702
[t=0.0235183s, 27060 KB] Bytes per state: 20
[t=0.0236142s, 27060 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0236474s, 27060 KB] 47 initial landmarks, 17 goal landmarks
[t=0.0237076s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0237172s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0237255s, 27060 KB] g=0, 1 evaluated, 0 expanded
[t=0.0237397s, 27060 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0237485s, 27060 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.023982s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0239925s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0240011s, 27060 KB] g=2, 8 evaluated, 7 expanded
[t=0.0242476s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0242598s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0242681s, 27060 KB] g=4, 15 evaluated, 14 expanded
[t=0.0245095s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.024521s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0245292s, 27060 KB] g=6, 22 evaluated, 21 expanded
[t=0.0247394s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0247482s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0247558s, 27060 KB] g=8, 29 evaluated, 28 expanded
[t=0.0249663s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0249748s, 27060 KB] g=10, 36 evaluated, 35 expanded
[t=0.0251008s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0251094s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0251172s, 27060 KB] g=10, 40 evaluated, 39 expanded
[t=0.0252957s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0253043s, 27060 KB] g=12, 46 evaluated, 45 expanded
[t=0.0254853s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0254997s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0255108s, 27060 KB] g=12, 52 evaluated, 51 expanded
[t=0.0256879s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0256964s, 27060 KB] g=14, 58 evaluated, 57 expanded
[t=0.0258187s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0258272s, 27060 KB] g=14, 62 evaluated, 61 expanded
[t=0.0260895s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0260989s, 27060 KB] g=16, 71 evaluated, 70 expanded
[t=0.0264211s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0264401s, 27060 KB] g=17, 81 evaluated, 80 expanded
[t=0.026984s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0270123s, 27060 KB] g=18, 99 evaluated, 98 expanded
[t=0.0271942s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0272065s, 27060 KB] g=20, 104 evaluated, 103 expanded
[t=0.0274636s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0274729s, 27060 KB] g=20, 112 evaluated, 111 expanded
[t=0.0277764s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0277857s, 27060 KB] g=22, 122 evaluated, 121 expanded
[t=0.0279448s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0279539s, 27060 KB] g=22, 127 evaluated, 126 expanded
[t=0.0281258s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.028135s, 27060 KB] g=24, 132 evaluated, 131 expanded
[t=0.0282065s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0282153s, 27060 KB] g=25, 134 evaluated, 133 expanded
[t=0.0284797s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0284913s, 27060 KB] g=26, 142 evaluated, 141 expanded
[t=0.0285609s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.02858s, 27060 KB] g=27, 144 evaluated, 143 expanded
[t=0.0287417s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0287515s, 27060 KB] g=28, 149 evaluated, 148 expanded
[t=0.0288224s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0288342s, 27060 KB] g=29, 151 evaluated, 150 expanded
[t=0.0291042s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.029117s, 27060 KB] g=30, 157 evaluated, 156 expanded
[t=0.0292476s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.029257s, 27060 KB] g=31, 161 evaluated, 160 expanded
[t=0.0297966s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0298067s, 27060 KB] g=34, 179 evaluated, 178 expanded
[t=0.0302324s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0302421s, 27060 KB] g=36, 193 evaluated, 192 expanded
[t=0.0305645s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0305737s, 27060 KB] g=37, 204 evaluated, 203 expanded
[t=0.030613s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0306263s, 27060 KB] g=38, 205 evaluated, 204 expanded
[t=0.0311502s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0311597s, 27060 KB] g=40, 223 evaluated, 222 expanded
[t=0.031427s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0314363s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0314447s, 27060 KB] g=42, 232 evaluated, 231 expanded
[t=0.0316982s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0317073s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0317154s, 27060 KB] g=44, 241 evaluated, 240 expanded
[t=0.0319196s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0319291s, 27060 KB] g=45, 249 evaluated, 248 expanded
[t=0.0319626s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0319716s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0319795s, 27060 KB] g=46, 250 evaluated, 249 expanded
[t=0.0321895s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0321984s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.032207s, 27060 KB] g=48, 259 evaluated, 258 expanded
[t=0.0323835s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0324007s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0324101s, 27060 KB] g=50, 267 evaluated, 266 expanded
[t=0.0325662s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0325766s, 27060 KB] g=52, 274 evaluated, 273 expanded
[t=0.0328033s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0328137s, 27060 KB] g=54, 283 evaluated, 282 expanded
[t=0.0329998s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0330096s, 27060 KB] g=56, 291 evaluated, 290 expanded
[t=0.0330629s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0330717s, 27060 KB] g=52, 293 evaluated, 292 expanded
[t=0.0331834s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0331926s, 27060 KB] g=56, 298 evaluated, 297 expanded
[t=0.0333012s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0333098s, 27060 KB] g=54, 303 evaluated, 302 expanded
[t=0.0334364s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0334454s, 27060 KB] g=56, 309 evaluated, 308 expanded
[t=0.0335548s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.033569s, 27060 KB] g=58, 314 evaluated, 313 expanded
[t=0.0336786s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0336873s, 27060 KB] g=58, 318 evaluated, 317 expanded
[t=0.0337127s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0337213s, 27060 KB] g=59, 319 evaluated, 318 expanded
[t=0.0337509s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0337596s, 27060 KB] g=60, 320 evaluated, 319 expanded
[t=0.0338167s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0338251s, 27060 KB] g=62, 322 evaluated, 321 expanded
[t=0.0338524s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0338623s, 27060 KB] g=63, 323 evaluated, 322 expanded
[t=0.0339235s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0339321s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0339402s, 27060 KB] g=66, 326 evaluated, 325 expanded
[t=0.0339958s, 27060 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0340333s, 27060 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0340437s, 27060 KB] g=67, 327 evaluated, 326 expanded
[t=0.0340602s, 27060 KB] Solution found!
[t=0.0340711s, 27060 KB] Actual search time: 0.0104209s
unstack b13 b18 (1)
put-down b13 (1)
unstack b24 b4 (1)
put-down b24 (1)
unstack b16 b25 (1)
stack b16 b24 (1)
unstack b9 b14 (1)
put-down b9 (1)
pick-up b20 (1)
stack b20 b9 (1)
unstack b4 b2 (1)
stack b4 b13 (1)
unstack b14 b21 (1)
put-down b14 (1)
pick-up b18 (1)
stack b18 b2 (1)
unstack b21 b17 (1)
put-down b21 (1)
unstack b17 b10 (1)
stack b17 b14 (1)
unstack b10 b7 (1)
put-down b10 (1)
unstack b1 b23 (1)
stack b1 b10 (1)
pick-up b23 (1)
stack b23 b25 (1)
unstack b7 b22 (1)
stack b7 b4 (1)
unstack b17 b14 (1)
put-down b17 (1)
unstack b18 b2 (1)
put-down b18 (1)
unstack b23 b25 (1)
put-down b23 (1)
unstack b25 b8 (1)
put-down b25 (1)
unstack b8 b19 (1)
stack b8 b1 (1)
unstack b19 b15 (1)
stack b19 b7 (1)
unstack b15 b11 (1)
put-down b15 (1)
unstack b11 b3 (1)
stack b11 b16 (1)
unstack b3 b5 (1)
stack b3 b11 (1)
pick-up b14 (1)
stack b14 b15 (1)
pick-up b17 (1)
stack b17 b14 (1)
pick-up b2 (1)
stack b2 b19 (1)
pick-up b18 (1)
stack b18 b2 (1)
unstack b22 b6 (1)
put-down b22 (1)
pick-up b5 (1)
stack b5 b21 (1)
pick-up b22 (1)
stack b22 b23 (1)
pick-up b25 (1)
stack b25 b5 (1)
unstack b22 b23 (1)
put-down b22 (1)
pick-up b23 (1)
stack b23 b25 (1)
pick-up b22 (1)
stack b22 b23 (1)
[t=0.0340805s, 27060 KB] Plan length: 68 step(s).
[t=0.0340805s, 27060 KB] Plan cost: 68
[t=0.0340805s, 27060 KB] Expanded 327 state(s).
[t=0.0340805s, 27060 KB] Reopened 0 state(s).
[t=0.0340805s, 27060 KB] Evaluated 328 state(s).
[t=0.0340805s, 27060 KB] Evaluations: 656
[t=0.0340805s, 27060 KB] Generated 3556 state(s).
[t=0.0340805s, 27060 KB] Dead ends: 0 state(s).
[t=0.0340805s, 27060 KB] Number of registered states: 328
[t=0.0340805s, 27060 KB] Int hash set load factor: 328/512 = 0.640625
[t=0.0340805s, 27060 KB] Int hash set resizes: 9
[t=0.0340805s, 27060 KB] Search time: 0.0104666s
[t=0.0340805s, 27060 KB] Total time: 0.0340805s
Solution found.
Peak memory: 27060 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.20s
