INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_21/bws_problem_21_63.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.009s wall-clock]
1472 relevant atoms
987 auxiliary atoms
2459 final queue length
4268 total queue pushes
Completing instantiation... [0.020s CPU, 0.017s wall-clock]
Instantiating: [0.030s CPU, 0.027s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
22 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.006s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.022s wall-clock]
1302 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
42 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.013s wall-clock]
Reordering and filtering variables...
43 of 43 variables necessary.
22 of 43 mutex groups necessary.
882 of 882 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 43
Translator derived variables: 0
Translator facts: 506
Translator goal facts: 17
Translator mutex groups: 22
Translator total mutex groups size: 484
Translator operators: 882
Translator axioms: 0
Translator task size: 7602
Translator peak memory: 36452 KB
Writing output... [0.000s CPU, 0.004s wall-clock]
Done! [0.080s CPU, 0.082s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.0296e-05s, 24488 KB] reading input...
[t=0.00359827s, 25268 KB] done reading input!
[t=0.00506821s, 25664 KB] Initializing landmark count heuristic...
[t=0.00512437s, 25664 KB] Generating landmark graph...
[t=0.00520326s, 25664 KB] Building a landmark graph with reasonable orders.
[t=0.00525991s, 25664 KB] Initializing Exploration...
[t=0.00552416s, 25852 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0144869s, 26380 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.01467s, 26380 KB] Landmarks generation time: 0.00946639s
[t=0.0146865s, 26380 KB] Discovered 95 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0147035s, 26380 KB] 535 edges
[t=0.0147133s, 26380 KB] approx. reasonable orders
[t=0.0172415s, 26380 KB] approx. obedient reasonable orders
[t=0.0174365s, 26380 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0174466s, 26380 KB] Landmarks generation time: 0.0123083s
[t=0.0174557s, 26380 KB] Discovered 95 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0174642s, 26380 KB] 614 edges
[t=0.0174723s, 26380 KB] Landmark graph generation time: 0.0123551s
[t=0.0174807s, 26380 KB] Landmark graph contains 95 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0174887s, 26380 KB] Landmark graph contains 614 orderings.
[t=0.0177696s, 26380 KB] Simplifying 3486 unary operators... done! [2646 unary operators]
[t=0.0186277s, 26380 KB] time to simplify: 0.000917446s
[t=0.0187396s, 26380 KB] Initializing additive heuristic...
[t=0.0187533s, 26380 KB] Initializing FF heuristic...
[t=0.0188222s, 26380 KB] Building successor generator...done!
[t=0.0190097s, 26380 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0190182s, 26380 KB] time for successor generation creation: 0.000156034s
[t=0.0190298s, 26380 KB] Variables: 43
[t=0.0190378s, 26380 KB] FactPairs: 506
[t=0.0190459s, 26380 KB] Bytes per state: 16
[t=0.0191328s, 26380 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0191642s, 26380 KB] 43 initial landmarks, 17 goal landmarks
[t=0.0192104s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0192194s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0192278s, 26380 KB] g=0, 1 evaluated, 0 expanded
[t=0.0192402s, 26380 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0192482s, 26380 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0192834s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0192923s, 26380 KB] g=1, 2 evaluated, 1 expanded
[t=0.01946s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0194693s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0194774s, 26380 KB] g=4, 9 evaluated, 8 expanded
[t=0.0195953s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0196045s, 26380 KB] g=6, 14 evaluated, 13 expanded
[t=0.0197026s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0197115s, 26380 KB] g=6, 18 evaluated, 17 expanded
[t=0.0200005s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0200101s, 26380 KB] g=8, 31 evaluated, 30 expanded
[t=0.0202749s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0202838s, 26380 KB] g=10, 43 evaluated, 42 expanded
[t=0.0204463s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.020457s, 26380 KB] g=10, 50 evaluated, 49 expanded
[t=0.0207058s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0207204s, 26380 KB] g=12, 58 evaluated, 57 expanded
[t=0.0207917s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0208061s, 26380 KB] g=12, 59 evaluated, 58 expanded
[t=0.0212243s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0212446s, 26380 KB] g=14, 74 evaluated, 73 expanded
[t=0.0216158s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0216283s, 26380 KB] g=16, 90 evaluated, 89 expanded
[t=0.0218355s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0218449s, 26380 KB] g=18, 99 evaluated, 98 expanded
[t=0.0220966s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0221063s, 26380 KB] g=18, 110 evaluated, 109 expanded
[t=0.0224806s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0224902s, 26380 KB] g=20, 126 evaluated, 125 expanded
[t=0.022714s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0227243s, 26380 KB] g=21, 135 evaluated, 134 expanded
[t=0.0233335s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0233423s, 26380 KB] g=24, 161 evaluated, 160 expanded
[t=0.0236179s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0236268s, 26380 KB] g=26, 173 evaluated, 172 expanded
[t=0.0237785s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0237875s, 26380 KB] g=26, 179 evaluated, 178 expanded
[t=0.0244353s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0244443s, 26380 KB] g=28, 208 evaluated, 207 expanded
[t=0.024477s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0244855s, 26380 KB] g=28, 209 evaluated, 208 expanded
[t=0.024916s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0249252s, 26380 KB] g=30, 229 evaluated, 228 expanded
[t=0.0250474s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0250561s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.025064s, 26380 KB] g=30, 234 evaluated, 233 expanded
[t=0.0253549s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0253642s, 26380 KB] g=32, 247 evaluated, 246 expanded
[t=0.0255549s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0255637s, 26380 KB] g=32, 255 evaluated, 254 expanded
[t=0.0262782s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0262896s, 26380 KB] g=34, 286 evaluated, 285 expanded
[t=0.0267201s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0267302s, 26380 KB] g=36, 305 evaluated, 304 expanded
[t=0.026808s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0268172s, 26380 KB] g=34, 308 evaluated, 307 expanded
[t=0.0271823s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0271913s, 26380 KB] g=38, 324 evaluated, 323 expanded
[t=0.0275492s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0275582s, 26380 KB] g=40, 340 evaluated, 339 expanded
[t=0.027588s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0275969s, 26380 KB] g=36, 341 evaluated, 340 expanded
[t=0.0279435s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0279527s, 26380 KB] g=42, 357 evaluated, 356 expanded
[t=0.0282926s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0283015s, 26380 KB] g=44, 373 evaluated, 372 expanded
[t=0.0286388s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0286511s, 26380 KB] g=46, 389 evaluated, 388 expanded
[t=0.0289232s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0289326s, 26380 KB] g=38, 402 evaluated, 401 expanded
[t=0.0289642s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0289728s, 26380 KB] g=48, 403 evaluated, 402 expanded
[t=0.0296035s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0296134s, 26380 KB] g=40, 435 evaluated, 434 expanded
[t=0.0300994s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0301101s, 26380 KB] g=42, 460 evaluated, 459 expanded
[t=0.0308836s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.030897s, 26380 KB] g=44, 499 evaluated, 498 expanded
[t=0.0309799s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0309888s, 26380 KB] g=52, 503 evaluated, 502 expanded
[t=0.0313051s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0313152s, 26380 KB] g=54, 517 evaluated, 516 expanded
[t=0.0316514s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0316611s, 26380 KB] g=46, 534 evaluated, 533 expanded
[t=0.0322866s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0322973s, 26380 KB] g=48, 568 evaluated, 567 expanded
[t=0.0325921s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0326018s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0326097s, 26380 KB] g=50, 585 evaluated, 584 expanded
[t=0.0327413s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0327583s, 26380 KB] g=52, 593 evaluated, 592 expanded
[t=0.0330039s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0330131s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0330211s, 26380 KB] g=52, 606 evaluated, 605 expanded
[t=0.0331541s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0331643s, 26380 KB] g=54, 613 evaluated, 612 expanded
[t=0.0333884s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0333982s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0334064s, 26380 KB] g=54, 626 evaluated, 625 expanded
[t=0.033499s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0335077s, 26380 KB] g=56, 632 evaluated, 631 expanded
[t=0.0336746s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0336836s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.033692s, 26380 KB] g=56, 642 evaluated, 641 expanded
[t=0.0337685s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0337776s, 26380 KB] g=58, 647 evaluated, 646 expanded
[t=0.033894s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0339027s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0339109s, 26380 KB] g=58, 654 evaluated, 653 expanded
[t=0.0339684s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0339796s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0339879s, 26380 KB] g=60, 658 evaluated, 657 expanded
[t=0.0340347s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0340433s, 26380 KB] g=62, 661 evaluated, 660 expanded
[t=0.0340644s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.034073s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0340809s, 26380 KB] g=62, 662 evaluated, 661 expanded
[t=0.0340978s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0341063s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0341143s, 26380 KB] g=63, 663 evaluated, 662 expanded
[t=0.0341287s, 26380 KB] Solution found!
[t=0.0341389s, 26380 KB] Actual search time: 0.0149717s
unstack b10 b3 (1)
put-down b10 (1)
unstack b3 b4 (1)
put-down b3 (1)
unstack b4 b11 (1)
put-down b4 (1)
unstack b11 b6 (1)
put-down b11 (1)
unstack b8 b13 (1)
put-down b8 (1)
unstack b9 b14 (1)
put-down b9 (1)
unstack b14 b17 (1)
put-down b14 (1)
unstack b17 b18 (1)
put-down b17 (1)
unstack b13 b1 (1)
put-down b13 (1)
unstack b6 b16 (1)
put-down b6 (1)
unstack b16 b15 (1)
put-down b16 (1)
unstack b15 b7 (1)
stack b15 b13 (1)
unstack b7 b19 (1)
put-down b7 (1)
unstack b19 b21 (1)
stack b19 b6 (1)
unstack b21 b5 (1)
stack b21 b19 (1)
unstack b5 b20 (1)
put-down b5 (1)
unstack b20 b2 (1)
put-down b20 (1)
unstack b2 b12 (1)
put-down b2 (1)
pick-up b12 (1)
stack b12 b21 (1)
pick-up b17 (1)
stack b17 b15 (1)
pick-up b1 (1)
stack b1 b17 (1)
pick-up b4 (1)
stack b4 b20 (1)
pick-up b5 (1)
stack b5 b4 (1)
pick-up b7 (1)
stack b7 b5 (1)
pick-up b10 (1)
stack b10 b7 (1)
pick-up b8 (1)
stack b8 b12 (1)
pick-up b9 (1)
stack b9 b8 (1)
pick-up b2 (1)
stack b2 b9 (1)
pick-up b14 (1)
stack b14 b2 (1)
pick-up b11 (1)
stack b11 b14 (1)
pick-up b18 (1)
stack b18 b11 (1)
pick-up b16 (1)
stack b16 b18 (1)
[t=0.0341478s, 26380 KB] Plan length: 64 step(s).
[t=0.0341478s, 26380 KB] Plan cost: 64
[t=0.0341478s, 26380 KB] Expanded 663 state(s).
[t=0.0341478s, 26380 KB] Reopened 0 state(s).
[t=0.0341478s, 26380 KB] Evaluated 664 state(s).
[t=0.0341478s, 26380 KB] Evaluations: 1328
[t=0.0341478s, 26380 KB] Generated 7953 state(s).
[t=0.0341478s, 26380 KB] Dead ends: 0 state(s).
[t=0.0341478s, 26380 KB] Number of registered states: 664
[t=0.0341478s, 26380 KB] Int hash set load factor: 664/1024 = 0.648438
[t=0.0341478s, 26380 KB] Int hash set resizes: 10
[t=0.0341478s, 26380 KB] Search time: 0.0150154s
[t=0.0341478s, 26380 KB] Total time: 0.0341478s
Solution found.
Peak memory: 26380 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.16s
