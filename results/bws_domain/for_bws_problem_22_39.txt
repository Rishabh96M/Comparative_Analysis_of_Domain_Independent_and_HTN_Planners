INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_22/bws_problem_22_39.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.009s wall-clock]
1608 relevant atoms
1078 auxiliary atoms
2686 final queue length
4672 total queue pushes
Completing instantiation... [0.010s CPU, 0.016s wall-clock]
Instantiating: [0.020s CPU, 0.027s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
23 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.006s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.025s wall-clock]
1430 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
44 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.012s wall-clock]
Reordering and filtering variables...
45 of 45 variables necessary.
23 of 45 mutex groups necessary.
968 of 968 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.006s wall-clock]
Translator variables: 45
Translator derived variables: 0
Translator facts: 552
Translator goal facts: 15
Translator mutex groups: 23
Translator total mutex groups size: 529
Translator operators: 968
Translator axioms: 0
Translator task size: 8335
Translator peak memory: 36972 KB
Writing output... [0.010s CPU, 0.005s wall-clock]
Done! [0.080s CPU, 0.084s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.2794e-05s, 24488 KB] reading input...
[t=0.00263878s, 25340 KB] done reading input!
[t=0.00340516s, 25736 KB] Initializing landmark count heuristic...
[t=0.00343096s, 25736 KB] Generating landmark graph...
[t=0.00349043s, 25736 KB] Building a landmark graph with reasonable orders.
[t=0.00354758s, 25736 KB] Initializing Exploration...
[t=0.00386843s, 26000 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0128965s, 26396 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0130009s, 26396 KB] Landmarks generation time: 0.0095106s
[t=0.0130144s, 26396 KB] Discovered 84 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0130361s, 26396 KB] 256 edges
[t=0.0130471s, 26396 KB] approx. reasonable orders
[t=0.0149705s, 26396 KB] approx. obedient reasonable orders
[t=0.0149948s, 26396 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0150054s, 26396 KB] Landmarks generation time: 0.0115717s
[t=0.015015s, 26396 KB] Discovered 84 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0150234s, 26396 KB] 293 edges
[t=0.0150326s, 26396 KB] Landmark graph generation time: 0.0116089s
[t=0.0150415s, 26396 KB] Landmark graph contains 84 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0150501s, 26396 KB] Landmark graph contains 293 orderings.
[t=0.0153888s, 26396 KB] Simplifying 3828 unary operators... done! [2904 unary operators]
[t=0.0163154s, 26528 KB] time to simplify: 0.00099876s
[t=0.0164593s, 26528 KB] Initializing additive heuristic...
[t=0.0164802s, 26528 KB] Initializing FF heuristic...
[t=0.0165446s, 26528 KB] Building successor generator...done!
[t=0.0168017s, 26528 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0168111s, 26528 KB] time for successor generation creation: 0.00021998s
[t=0.016827s, 26528 KB] Variables: 45
[t=0.0168352s, 26528 KB] FactPairs: 552
[t=0.0168432s, 26528 KB] Bytes per state: 20
[t=0.016948s, 26528 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0169833s, 26528 KB] 41 initial landmarks, 15 goal landmarks
[t=0.0170387s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0170484s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0170569s, 26528 KB] g=0, 1 evaluated, 0 expanded
[t=0.0170712s, 26528 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0170799s, 26528 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0171442s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0171533s, 26528 KB] g=1, 3 evaluated, 2 expanded
[t=0.0171896s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0171989s, 26528 KB] g=2, 4 evaluated, 3 expanded
[t=0.0174627s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0174736s, 26528 KB] g=3, 14 evaluated, 13 expanded
[t=0.0175087s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0175179s, 26528 KB] g=4, 15 evaluated, 14 expanded
[t=0.0178497s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0178611s, 26528 KB] g=5, 28 evaluated, 27 expanded
[t=0.0180263s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0180356s, 26528 KB] g=6, 34 evaluated, 33 expanded
[t=0.0183283s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0183373s, 26528 KB] g=8, 46 evaluated, 45 expanded
[t=0.0183714s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0183802s, 26528 KB] g=8, 47 evaluated, 46 expanded
[t=0.0187959s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0188105s, 26528 KB] g=10, 64 evaluated, 63 expanded
[t=0.0193091s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0193194s, 26528 KB] g=12, 84 evaluated, 83 expanded
[t=0.0198082s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0198226s, 26528 KB] g=14, 103 evaluated, 102 expanded
[t=0.0200873s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0200972s, 26528 KB] g=15, 113 evaluated, 112 expanded
[t=0.0207734s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0207843s, 26528 KB] g=18, 140 evaluated, 139 expanded
[t=0.0215509s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0215629s, 26528 KB] g=20, 171 evaluated, 170 expanded
[t=0.0217195s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0217306s, 26528 KB] g=14, 177 evaluated, 176 expanded
[t=0.022127s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0221524s, 26528 KB] g=16, 193 evaluated, 192 expanded
[t=0.0224486s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0224609s, 26528 KB] g=22, 204 evaluated, 203 expanded
[t=0.0226214s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0226336s, 26528 KB] g=18, 210 evaluated, 209 expanded
[t=0.0230322s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0230542s, 26528 KB] g=20, 226 evaluated, 225 expanded
[t=0.0232399s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0232568s, 26528 KB] g=24, 233 evaluated, 232 expanded
[t=0.0237003s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0237204s, 26528 KB] g=25, 250 evaluated, 249 expanded
[t=0.0237846s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0237955s, 26528 KB] g=26, 252 evaluated, 251 expanded
[t=0.0246927s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0247123s, 26528 KB] g=28, 286 evaluated, 285 expanded
[t=0.0253694s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0253855s, 26528 KB] g=26, 312 evaluated, 311 expanded
[t=0.025422s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0254319s, 26528 KB] g=30, 313 evaluated, 312 expanded
[t=0.0257155s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0257286s, 26528 KB] g=28, 324 evaluated, 323 expanded
[t=0.0260626s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0260737s, 26528 KB] g=30, 337 evaluated, 336 expanded
[t=0.0261349s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0261443s, 26528 KB] g=32, 339 evaluated, 338 expanded
[t=0.0264028s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0264128s, 26528 KB] g=32, 349 evaluated, 348 expanded
[t=0.0267524s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.026776s, 26528 KB] g=34, 360 evaluated, 359 expanded
[t=0.0268913s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0269009s, 26528 KB] g=34, 364 evaluated, 363 expanded
[t=0.027392s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0274073s, 26528 KB] g=36, 383 evaluated, 382 expanded
[t=0.0279746s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0279998s, 26528 KB] g=38, 405 evaluated, 404 expanded
[t=0.0281764s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0281871s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0281961s, 26528 KB] g=40, 412 evaluated, 411 expanded
[t=0.0283441s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0283539s, 26528 KB] g=42, 418 evaluated, 417 expanded
[t=0.0284102s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0284209s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0284289s, 26528 KB] g=42, 420 evaluated, 419 expanded
[t=0.0285561s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0285708s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.02858s, 26528 KB] g=44, 425 evaluated, 424 expanded
[t=0.0288004s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0288173s, 26528 KB] g=48, 434 evaluated, 433 expanded
[t=0.0289421s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0289581s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0289764s, 26528 KB] g=50, 439 evaluated, 438 expanded
[t=0.0290094s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0290188s, 26528 KB] g=51, 440 evaluated, 439 expanded
[t=0.0290507s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0290611s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0290695s, 26528 KB] g=52, 441 evaluated, 440 expanded
[t=0.0291425s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0291549s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0291643s, 26528 KB] g=54, 444 evaluated, 443 expanded
[t=0.0295031s, 26528 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.029521s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0295293s, 26528 KB] g=66, 460 evaluated, 459 expanded
[t=0.0295987s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0296087s, 26528 KB] g=70, 464 evaluated, 463 expanded
[t=0.0296262s, 26528 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0296351s, 26528 KB] g=71, 465 evaluated, 464 expanded
[t=0.0296505s, 26528 KB] Solution found!
[t=0.0296622s, 26528 KB] Actual search time: 0.0126765s
unstack b1 b2 (1)
put-down b1 (1)
unstack b17 b5 (1)
put-down b17 (1)
unstack b2 b15 (1)
put-down b2 (1)
unstack b15 b14 (1)
put-down b15 (1)
unstack b6 b12 (1)
put-down b6 (1)
unstack b13 b21 (1)
put-down b13 (1)
unstack b14 b18 (1)
put-down b14 (1)
unstack b18 b20 (1)
put-down b18 (1)
unstack b19 b22 (1)
put-down b19 (1)
unstack b21 b9 (1)
put-down b21 (1)
unstack b22 b7 (1)
stack b22 b5 (1)
unstack b7 b3 (1)
stack b7 b13 (1)
unstack b3 b10 (1)
stack b3 b20 (1)
unstack b10 b4 (1)
put-down b10 (1)
pick-up b11 (1)
stack b11 b7 (1)
pick-up b2 (1)
stack b2 b11 (1)
pick-up b12 (1)
stack b12 b10 (1)
pick-up b14 (1)
stack b14 b22 (1)
pick-up b19 (1)
stack b19 b12 (1)
pick-up b1 (1)
stack b1 b19 (1)
pick-up b21 (1)
stack b21 b4 (1)
pick-up b18 (1)
stack b18 b21 (1)
unstack b3 b20 (1)
put-down b3 (1)
unstack b20 b16 (1)
put-down b20 (1)
pick-up b16 (1)
stack b16 b14 (1)
pick-up b17 (1)
stack b17 b16 (1)
pick-up b3 (1)
stack b3 b20 (1)
unstack b2 b11 (1)
put-down b2 (1)
unstack b11 b7 (1)
put-down b11 (1)
pick-up b2 (1)
stack b2 b11 (1)
unstack b7 b13 (1)
put-down b7 (1)
pick-up b13 (1)
stack b13 b9 (1)
pick-up b7 (1)
stack b7 b13 (1)
unstack b2 b11 (1)
put-down b2 (1)
pick-up b11 (1)
stack b11 b7 (1)
pick-up b2 (1)
stack b2 b11 (1)
[t=0.0296722s, 26528 KB] Plan length: 72 step(s).
[t=0.0296722s, 26528 KB] Plan cost: 72
[t=0.0296722s, 26528 KB] Expanded 465 state(s).
[t=0.0296722s, 26528 KB] Reopened 0 state(s).
[t=0.0296722s, 26528 KB] Evaluated 466 state(s).
[t=0.0296722s, 26528 KB] Evaluations: 932
[t=0.0296722s, 26528 KB] Generated 5585 state(s).
[t=0.0296722s, 26528 KB] Dead ends: 0 state(s).
[t=0.0296722s, 26528 KB] Number of registered states: 466
[t=0.0296722s, 26528 KB] Int hash set load factor: 466/512 = 0.910156
[t=0.0296722s, 26528 KB] Int hash set resizes: 9
[t=0.0296722s, 26528 KB] Search time: 0.0127247s
[t=0.0296722s, 26528 KB] Total time: 0.0296722s
Solution found.
Peak memory: 26528 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.17s
