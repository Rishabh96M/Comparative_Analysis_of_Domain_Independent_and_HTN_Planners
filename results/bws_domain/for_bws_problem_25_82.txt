INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_25/bws_problem_25_82.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.013s wall-clock]
2052 relevant atoms
1375 auxiliary atoms
3427 final queue length
5982 total queue pushes
Completing instantiation... [0.020s CPU, 0.021s wall-clock]
Instantiating: [0.040s CPU, 0.035s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
26 uncovered facts
Choosing groups: [0.000s CPU, 0.002s wall-clock]
Building translation key... [0.010s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.008s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.002s wall-clock]
Translating task: [0.030s CPU, 0.033s wall-clock]
1850 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
50 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.022s wall-clock]
Reordering and filtering variables...
51 of 51 variables necessary.
26 of 51 mutex groups necessary.
1250 of 1250 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.008s wall-clock]
Translator variables: 51
Translator derived variables: 0
Translator facts: 702
Translator goal facts: 22
Translator mutex groups: 26
Translator total mutex groups size: 676
Translator operators: 1250
Translator axioms: 0
Translator task size: 10751
Translator peak memory: 38388 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.120s CPU, 0.120s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=9.8673e-05s, 24488 KB] reading input...
[t=0.00384073s, 25632 KB] done reading input!
[t=0.00509794s, 26028 KB] Initializing landmark count heuristic...
[t=0.005152s, 26028 KB] Generating landmark graph...
[t=0.00522532s, 26160 KB] Building a landmark graph with reasonable orders.
[t=0.00530466s, 26160 KB] Initializing Exploration...
[t=0.00572423s, 26532 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0243946s, 27060 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0244999s, 27060 KB] Landmarks generation time: 0.0192823s
[t=0.0245218s, 27060 KB] Discovered 113 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0245401s, 27060 KB] 476 edges
[t=0.0245505s, 27060 KB] approx. reasonable orders
[t=0.0250233s, 27060 KB] approx. obedient reasonable orders
[t=0.0250555s, 27060 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0250647s, 27060 KB] Landmarks generation time: 0.0199093s
[t=0.0250743s, 27060 KB] Discovered 113 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0250822s, 27060 KB] 480 edges
[t=0.0250905s, 27060 KB] Landmark graph generation time: 0.0199452s
[t=0.0250988s, 27060 KB] Landmark graph contains 113 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0251067s, 27060 KB] Landmark graph contains 480 orderings.
[t=0.0257729s, 27060 KB] Simplifying 4950 unary operators... done! [3750 unary operators]
[t=0.0274424s, 27192 KB] time to simplify: 0.00176393s
[t=0.0276627s, 27192 KB] Initializing additive heuristic...
[t=0.0276837s, 27192 KB] Initializing FF heuristic...
[t=0.0277511s, 27192 KB] Building successor generator...done!
[t=0.0281513s, 27192 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0281646s, 27192 KB] time for successor generation creation: 0.000351619s
[t=0.0281825s, 27192 KB] Variables: 51
[t=0.0281955s, 27192 KB] FactPairs: 702
[t=0.0282079s, 27192 KB] Bytes per state: 20
[t=0.0283404s, 27192 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0284008s, 27192 KB] 51 initial landmarks, 22 goal landmarks
[t=0.0285176s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 62
[t=0.0285311s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 46
[t=0.028553s, 27192 KB] g=0, 1 evaluated, 0 expanded
[t=0.028574s, 27192 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 62
[t=0.028587s, 27192 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 46
[t=0.0288803s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 61
[t=0.0288961s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0289094s, 27192 KB] g=2, 7 evaluated, 6 expanded
[t=0.0291788s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 60
[t=0.0291927s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.0292055s, 27192 KB] g=4, 13 evaluated, 12 expanded
[t=0.0294767s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.02949s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.029502s, 27192 KB] g=6, 19 evaluated, 18 expanded
[t=0.0297717s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 57
[t=0.0297842s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0297969s, 27192 KB] g=8, 25 evaluated, 24 expanded
[t=0.030027s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0300395s, 27192 KB] g=10, 30 evaluated, 29 expanded
[t=0.0301943s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0302123s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0302263s, 27192 KB] g=10, 33 evaluated, 32 expanded
[t=0.0305439s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0305806s, 27192 KB] g=12, 38 evaluated, 37 expanded
[t=0.0310448s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0310846s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0311037s, 27192 KB] g=14, 45 evaluated, 44 expanded
[t=0.03173s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0317686s, 27192 KB] g=16, 52 evaluated, 51 expanded
[t=0.0322774s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0323102s, 27192 KB] g=17, 56 evaluated, 55 expanded
[t=0.0324158s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0324416s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0324715s, 27192 KB] g=18, 57 evaluated, 56 expanded
[t=0.033196s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0332171s, 27192 KB] g=20, 64 evaluated, 63 expanded
[t=0.0337348s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0337445s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0337522s, 27192 KB] g=22, 80 evaluated, 79 expanded
[t=0.0340442s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0340539s, 27192 KB] g=24, 89 evaluated, 88 expanded
[t=0.0341262s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.034135s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0341428s, 27192 KB] g=24, 91 evaluated, 90 expanded
[t=0.0344031s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0344129s, 27192 KB] g=26, 99 evaluated, 98 expanded
[t=0.0348882s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0348977s, 27192 KB] g=28, 115 evaluated, 114 expanded
[t=0.0351495s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0351635s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0351747s, 27192 KB] g=28, 122 evaluated, 121 expanded
[t=0.035492s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0355034s, 27192 KB] g=30, 130 evaluated, 129 expanded
[t=0.0355547s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0355639s, 27192 KB] g=30, 131 evaluated, 130 expanded
[t=0.0359786s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0359897s, 27192 KB] g=32, 145 evaluated, 144 expanded
[t=0.0362177s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0362271s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0362352s, 27192 KB] g=34, 152 evaluated, 151 expanded
[t=0.0365194s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0365349s, 27192 KB] g=36, 160 evaluated, 159 expanded
[t=0.0365849s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0365999s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.036608s, 27192 KB] g=36, 161 evaluated, 160 expanded
[t=0.0368416s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0368513s, 27192 KB] g=38, 168 evaluated, 167 expanded
[t=0.0368916s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0369s, 27192 KB] g=38, 169 evaluated, 168 expanded
[t=0.0372827s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.037292s, 27192 KB] g=40, 182 evaluated, 181 expanded
[t=0.0375056s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0375142s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0375219s, 27192 KB] g=42, 189 evaluated, 188 expanded
[t=0.0379656s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0379746s, 27192 KB] g=45, 204 evaluated, 203 expanded
[t=0.0380145s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0380233s, 27192 KB] g=46, 205 evaluated, 204 expanded
[t=0.0382362s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0382471s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0382639s, 27192 KB] g=48, 212 evaluated, 211 expanded
[t=0.0384483s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0384568s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0384645s, 27192 KB] g=50, 218 evaluated, 217 expanded
[t=0.039051s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0390615s, 27192 KB] g=54, 238 evaluated, 237 expanded
[t=0.0392571s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0392668s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0392748s, 27192 KB] g=56, 243 evaluated, 242 expanded
[t=0.0400647s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0400855s, 27192 KB] g=62, 267 evaluated, 266 expanded
[t=0.0402783s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0402878s, 27192 KB] g=64, 273 evaluated, 272 expanded
[t=0.0404598s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0404725s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0404816s, 27192 KB] g=66, 278 evaluated, 277 expanded
[t=0.040644s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0406546s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0406629s, 27192 KB] g=68, 283 evaluated, 282 expanded
[t=0.0407944s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0408053s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0408136s, 27192 KB] g=70, 287 evaluated, 286 expanded
[t=0.042248s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0422632s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0422728s, 27192 KB] g=78, 335 evaluated, 334 expanded
[t=0.0423989s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0424082s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0424163s, 27192 KB] g=80, 339 evaluated, 338 expanded
[t=0.0437955s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0438069s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.043815s, 27192 KB] g=92, 389 evaluated, 388 expanded
[t=0.0440621s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0440716s, 27192 KB] g=96, 398 evaluated, 397 expanded
[t=0.0441596s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.044169s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0441771s, 27192 KB] g=98, 401 evaluated, 400 expanded
[t=0.0497177s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0497625s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0497726s, 27192 KB] g=138, 643 evaluated, 642 expanded
[t=0.0498585s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.04987s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0498787s, 27192 KB] g=140, 647 evaluated, 646 expanded
[t=0.0500545s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0500644s, 27192 KB] g=144, 656 evaluated, 655 expanded
[t=0.0501251s, 27192 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0501361s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0501468s, 27192 KB] g=146, 659 evaluated, 658 expanded
[t=0.0508382s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.050854s, 27192 KB] g=162, 698 evaluated, 697 expanded
[t=0.051004s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0510133s, 27192 KB] g=170, 708 evaluated, 707 expanded
[t=0.0510734s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0510826s, 27192 KB] g=174, 712 evaluated, 711 expanded
[t=0.0511091s, 27192 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0511193s, 27192 KB] g=175, 713 evaluated, 712 expanded
[t=0.0511357s, 27192 KB] Solution found!
[t=0.0511511s, 27192 KB] Actual search time: 0.0227318s
unstack b10 b6 (1)
put-down b10 (1)
unstack b11 b17 (1)
put-down b11 (1)
unstack b2 b22 (1)
put-down b2 (1)
unstack b17 b13 (1)
stack b17 b3 (1)
unstack b6 b23 (1)
stack b6 b13 (1)
unstack b19 b12 (1)
put-down b19 (1)
unstack b12 b16 (1)
stack b12 b11 (1)
unstack b16 b20 (1)
put-down b16 (1)
unstack b20 b4 (1)
stack b20 b17 (1)
unstack b23 b21 (1)
put-down b23 (1)
unstack b21 b25 (1)
stack b21 b12 (1)
pick-up b22 (1)
stack b22 b21 (1)
unstack b25 b7 (1)
put-down b25 (1)
unstack b7 b8 (1)
stack b7 b25 (1)
pick-up b16 (1)
stack b16 b8 (1)
unstack b4 b9 (1)
put-down b4 (1)
unstack b9 b14 (1)
stack b9 b7 (1)
pick-up b19 (1)
stack b19 b9 (1)
unstack b14 b15 (1)
put-down b14 (1)
pick-up b23 (1)
stack b23 b14 (1)
pick-up b4 (1)
stack b4 b15 (1)
unstack b16 b8 (1)
put-down b16 (1)
unstack b8 b18 (1)
stack b8 b6 (1)
pick-up b16 (1)
stack b16 b8 (1)
pick-up b18 (1)
stack b18 b16 (1)
unstack b4 b15 (1)
put-down b4 (1)
pick-up b15 (1)
stack b15 b18 (1)
pick-up b4 (1)
stack b4 b15 (1)
unstack b20 b17 (1)
put-down b20 (1)
unstack b17 b3 (1)
put-down b17 (1)
unstack b3 b5 (1)
stack b3 b4 (1)
pick-up b17 (1)
stack b17 b3 (1)
unstack b5 b24 (1)
stack b5 b23 (1)
pick-up b20 (1)
stack b20 b17 (1)
pick-up b24 (1)
stack b24 b22 (1)
unstack b5 b23 (1)
put-down b5 (1)
unstack b23 b14 (1)
put-down b23 (1)
pick-up b14 (1)
stack b14 b24 (1)
pick-up b23 (1)
stack b23 b14 (1)
pick-up b5 (1)
stack b5 b23 (1)
unstack b19 b9 (1)
put-down b19 (1)
unstack b9 b7 (1)
put-down b9 (1)
pick-up b19 (1)
stack b19 b9 (1)
unstack b7 b25 (1)
put-down b7 (1)
pick-up b25 (1)
stack b25 b5 (1)
pick-up b7 (1)
stack b7 b25 (1)
unstack b19 b9 (1)
put-down b19 (1)
pick-up b9 (1)
stack b9 b7 (1)
pick-up b19 (1)
stack b19 b9 (1)
unstack b20 b17 (1)
put-down b20 (1)
unstack b17 b3 (1)
put-down b17 (1)
pick-up b20 (1)
stack b20 b17 (1)
unstack b3 b4 (1)
put-down b3 (1)
unstack b4 b15 (1)
put-down b4 (1)
unstack b15 b18 (1)
put-down b15 (1)
pick-up b4 (1)
stack b4 b15 (1)
pick-up b3 (1)
stack b3 b4 (1)
unstack b20 b17 (1)
put-down b20 (1)
pick-up b17 (1)
stack b17 b3 (1)
pick-up b20 (1)
stack b20 b17 (1)
unstack b18 b16 (1)
put-down b18 (1)
unstack b16 b8 (1)
put-down b16 (1)
pick-up b18 (1)
stack b18 b16 (1)
unstack b8 b6 (1)
put-down b8 (1)
unstack b6 b13 (1)
put-down b6 (1)
unstack b13 b1 (1)
put-down b13 (1)
pick-up b1 (1)
stack b1 b19 (1)
pick-up b13 (1)
stack b13 b1 (1)
pick-up b6 (1)
stack b6 b13 (1)
pick-up b8 (1)
stack b8 b6 (1)
unstack b18 b16 (1)
put-down b18 (1)
pick-up b16 (1)
stack b16 b8 (1)
pick-up b18 (1)
stack b18 b16 (1)
unstack b20 b17 (1)
put-down b20 (1)
unstack b17 b3 (1)
put-down b17 (1)
unstack b3 b4 (1)
put-down b3 (1)
pick-up b17 (1)
stack b17 b3 (1)
pick-up b20 (1)
stack b20 b17 (1)
unstack b4 b15 (1)
put-down b4 (1)
pick-up b15 (1)
stack b15 b18 (1)
pick-up b4 (1)
stack b4 b15 (1)
unstack b20 b17 (1)
put-down b20 (1)
unstack b17 b3 (1)
put-down b17 (1)
pick-up b20 (1)
stack b20 b17 (1)
pick-up b3 (1)
stack b3 b4 (1)
unstack b20 b17 (1)
put-down b20 (1)
pick-up b17 (1)
stack b17 b3 (1)
pick-up b20 (1)
stack b20 b17 (1)
[t=0.0511611s, 27192 KB] Plan length: 176 step(s).
[t=0.0511611s, 27192 KB] Plan cost: 176
[t=0.0511611s, 27192 KB] Expanded 713 state(s).
[t=0.0511611s, 27192 KB] Reopened 0 state(s).
[t=0.0511611s, 27192 KB] Evaluated 714 state(s).
[t=0.0511611s, 27192 KB] Evaluations: 1428
[t=0.0511611s, 27192 KB] Generated 5971 state(s).
[t=0.0511611s, 27192 KB] Dead ends: 0 state(s).
[t=0.0511611s, 27192 KB] Number of registered states: 714
[t=0.0511611s, 27192 KB] Int hash set load factor: 714/1024 = 0.697266
[t=0.0511611s, 27192 KB] Int hash set resizes: 10
[t=0.0511611s, 27192 KB] Search time: 0.0228212s
[t=0.0511611s, 27192 KB] Total time: 0.0511611s
Solution found.
Peak memory: 27192 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.22s
