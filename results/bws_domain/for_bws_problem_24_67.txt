INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_24/bws_problem_24_67.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.012s wall-clock]
1898 relevant atoms
1272 auxiliary atoms
3170 final queue length
5526 total queue pushes
Completing instantiation... [0.020s CPU, 0.019s wall-clock]
Instantiating: [0.040s CPU, 0.033s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
25 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.007s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.029s wall-clock]
1704 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
48 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.020s wall-clock]
Reordering and filtering variables...
49 of 49 variables necessary.
25 of 49 mutex groups necessary.
1152 of 1152 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.009s wall-clock]
Translator variables: 49
Translator derived variables: 0
Translator facts: 650
Translator goal facts: 20
Translator mutex groups: 25
Translator total mutex groups size: 625
Translator operators: 1152
Translator axioms: 0
Translator task size: 9912
Translator peak memory: 37880 KB
Writing output... [0.010s CPU, 0.006s wall-clock]
Done! [0.110s CPU, 0.107s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.1132e-05s, 24488 KB] reading input...
[t=0.00331158s, 25532 KB] done reading input!
[t=0.00419521s, 25928 KB] Initializing landmark count heuristic...
[t=0.0042209s, 25928 KB] Generating landmark graph...
[t=0.004287s, 25928 KB] Building a landmark graph with reasonable orders.
[t=0.00435757s, 26060 KB] Initializing Exploration...
[t=0.00467787s, 26388 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0182104s, 26920 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0183566s, 26920 KB] Landmarks generation time: 0.0140728s
[t=0.0183723s, 26920 KB] Discovered 106 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0183925s, 26920 KB] 506 edges
[t=0.0184029s, 26920 KB] approx. reasonable orders
[t=0.0222911s, 26920 KB] approx. obedient reasonable orders
[t=0.0226447s, 26920 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0226575s, 26920 KB] Landmarks generation time: 0.0184355s
[t=0.022668s, 26920 KB] Discovered 106 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0226766s, 26920 KB] 602 edges
[t=0.0226853s, 26920 KB] Landmark graph generation time: 0.0184721s
[t=0.0226946s, 26920 KB] Landmark graph contains 106 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0227028s, 26920 KB] Landmark graph contains 602 orderings.
[t=0.0231366s, 26920 KB] Simplifying 4560 unary operators... done! [3456 unary operators]
[t=0.0245056s, 26920 KB] time to simplify: 0.00145753s
[t=0.0246658s, 26920 KB] Initializing additive heuristic...
[t=0.024682s, 26920 KB] Initializing FF heuristic...
[t=0.0247551s, 26920 KB] Building successor generator...done!
[t=0.0249918s, 26920 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0250001s, 26920 KB] time for successor generation creation: 0.000205326s
[t=0.0250156s, 26920 KB] Variables: 49
[t=0.0250246s, 26920 KB] FactPairs: 650
[t=0.0250323s, 26920 KB] Bytes per state: 20
[t=0.0251811s, 26920 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0252288s, 26920 KB] 47 initial landmarks, 20 goal landmarks
[t=0.0252937s, 26920 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.025303s, 26920 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0253265s, 26920 KB] g=0, 1 evaluated, 0 expanded
[t=0.0253403s, 26920 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.0253492s, 26920 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.025522s, 26920 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 58
[t=0.0255334s, 26920 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0255418s, 26920 KB] g=2, 6 evaluated, 5 expanded
[t=0.0256908s, 26920 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 57
[t=0.0257011s, 26920 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0257096s, 26920 KB] g=4, 11 evaluated, 10 expanded
[t=0.0258283s, 26920 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0258392s, 26920 KB] g=5, 15 evaluated, 14 expanded
[t=0.0259073s, 26920 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0259163s, 26920 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0259242s, 26920 KB] g=6, 17 evaluated, 16 expanded
[t=0.0260145s, 26920 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0260252s, 26920 KB] g=7, 20 evaluated, 19 expanded
[t=0.0262002s, 26920 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0262131s, 26920 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0262213s, 26920 KB] g=8, 26 evaluated, 25 expanded
[t=0.0262826s, 26920 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0262914s, 26920 KB] g=9, 28 evaluated, 27 expanded
[t=0.0264947s, 26920 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0265036s, 26920 KB] g=12, 35 evaluated, 34 expanded
[t=0.0265692s, 26920 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0265903s, 26920 KB] g=12, 37 evaluated, 36 expanded
[t=0.026739s, 26920 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0267477s, 26920 KB] g=14, 42 evaluated, 41 expanded
[t=0.0268651s, 26920 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0268736s, 26920 KB] g=14, 46 evaluated, 45 expanded
[t=0.0270754s, 26920 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0270849s, 26920 KB] g=15, 53 evaluated, 52 expanded
[t=0.0275463s, 26920 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0275574s, 26920 KB] g=18, 68 evaluated, 67 expanded
[t=0.0279634s, 26920 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0279741s, 26920 KB] g=20, 82 evaluated, 81 expanded
[t=0.0283603s, 26920 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0283717s, 26920 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0283809s, 26920 KB] g=22, 96 evaluated, 95 expanded
[t=0.0286258s, 26920 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0286345s, 26920 KB] g=24, 105 evaluated, 104 expanded
[t=0.0286971s, 26920 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0287056s, 26920 KB] g=24, 107 evaluated, 106 expanded
[t=0.0290487s, 26920 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0290579s, 26920 KB] g=26, 120 evaluated, 119 expanded
[t=0.0293922s, 26920 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0294094s, 26920 KB] g=26, 131 evaluated, 130 expanded
[t=0.0296939s, 26920 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0297047s, 26920 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.029714s, 26920 KB] g=28, 141 evaluated, 140 expanded
[t=0.0299383s, 26920 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0299477s, 26920 KB] g=30, 149 evaluated, 148 expanded
[t=0.0303094s, 26920 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0303211s, 26920 KB] g=32, 162 evaluated, 161 expanded
[t=0.0313313s, 26920 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0313416s, 26920 KB] g=32, 199 evaluated, 198 expanded
[t=0.0317032s, 26920 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0317131s, 26920 KB] g=38, 212 evaluated, 211 expanded
[t=0.0318588s, 26920 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0318685s, 26920 KB] g=34, 217 evaluated, 216 expanded
[t=0.0323442s, 26920 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.032354s, 26920 KB] g=36, 234 evaluated, 233 expanded
[t=0.0326099s, 26920 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0326197s, 26920 KB] g=42, 243 evaluated, 242 expanded
[t=0.0329532s, 26920 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0329798s, 26920 KB] g=38, 255 evaluated, 254 expanded
[t=0.0330941s, 26920 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0331038s, 26920 KB] g=44, 258 evaluated, 257 expanded
[t=0.0334815s, 26920 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.033491s, 26920 KB] g=46, 272 evaluated, 271 expanded
[t=0.0335547s, 26920 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0335629s, 26920 KB] g=40, 274 evaluated, 273 expanded
[t=0.0341161s, 26920 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0341303s, 26920 KB] g=42, 295 evaluated, 294 expanded
[t=0.0346421s, 26920 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0346521s, 26920 KB] g=44, 315 evaluated, 314 expanded
[t=0.0349449s, 26920 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0349536s, 26920 KB] g=52, 326 evaluated, 325 expanded
[t=0.0352816s, 26920 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0352912s, 26920 KB] g=54, 338 evaluated, 337 expanded
[t=0.0353254s, 26920 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0353357s, 26920 KB] g=46, 339 evaluated, 338 expanded
[t=0.0359019s, 26920 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0359115s, 26920 KB] g=48, 361 evaluated, 360 expanded
[t=0.0361768s, 26920 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0361857s, 26920 KB] g=58, 371 evaluated, 370 expanded
[t=0.036496s, 26920 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0365053s, 26920 KB] g=60, 383 evaluated, 382 expanded
[t=0.0366978s, 26920 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0367066s, 26920 KB] g=62, 390 evaluated, 389 expanded
[t=0.0369798s, 26920 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0369895s, 26920 KB] g=50, 400 evaluated, 399 expanded
[t=0.0370794s, 26920 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0370877s, 26920 KB] g=64, 403 evaluated, 402 expanded
[t=0.0373323s, 26920 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0373419s, 26920 KB] g=66, 412 evaluated, 411 expanded
[t=0.0375355s, 26920 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.037544s, 26920 KB] g=68, 419 evaluated, 418 expanded
[t=0.03758s, 26920 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0375887s, 26920 KB] g=52, 420 evaluated, 419 expanded
[t=0.0382896s, 26920 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.038299s, 26920 KB] g=54, 445 evaluated, 444 expanded
[t=0.0388002s, 26920 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0388107s, 26920 KB] g=56, 463 evaluated, 462 expanded
[t=0.0390762s, 26920 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0390935s, 26920 KB] g=57, 470 evaluated, 469 expanded
[t=0.0396847s, 26920 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0396996s, 26920 KB] g=58, 490 evaluated, 489 expanded
[t=0.0399066s, 26920 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0399157s, 26920 KB] g=59, 497 evaluated, 496 expanded
[t=0.0404305s, 26920 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0404459s, 26920 KB] g=60, 514 evaluated, 513 expanded
[t=0.0406442s, 26920 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0406539s, 26920 KB] g=61, 521 evaluated, 520 expanded
[t=0.0407453s, 26920 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0407542s, 26920 KB] g=82, 524 evaluated, 523 expanded
[t=0.0408443s, 26920 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0408531s, 26920 KB] g=62, 527 evaluated, 526 expanded
[t=0.0409685s, 26920 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0409774s, 26920 KB] g=63, 531 evaluated, 530 expanded
[t=0.0412042s, 26920 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.041214s, 26920 KB] g=64, 539 evaluated, 538 expanded
[t=0.0413294s, 26920 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0413389s, 26920 KB] g=65, 543 evaluated, 542 expanded
[t=0.0414536s, 26920 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0414623s, 26920 KB] g=66, 547 evaluated, 546 expanded
[t=0.0415521s, 26920 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0415609s, 26920 KB] g=67, 550 evaluated, 549 expanded
[t=0.041676s, 26920 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0416852s, 26920 KB] g=68, 554 evaluated, 553 expanded
[t=0.0417484s, 26920 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.041757s, 26920 KB] g=69, 556 evaluated, 555 expanded
[t=0.0417924s, 26920 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0418015s, 26920 KB] g=70, 557 evaluated, 556 expanded
[t=0.0697447s, 26920 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0698168s, 26920 KB] g=108, 1593 evaluated, 1592 expanded
[t=0.070312s, 26920 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0703227s, 26920 KB] g=112, 1611 evaluated, 1610 expanded
[t=0.0704703s, 26920 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0704797s, 26920 KB] g=114, 1616 evaluated, 1615 expanded
[t=0.0743351s, 26920 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0743562s, 26920 KB] g=136, 1772 evaluated, 1771 expanded
[t=0.074766s, 26920 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0747771s, 26920 KB] g=140, 1789 evaluated, 1788 expanded
[t=0.0748946s, 26920 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0749035s, 26920 KB] g=142, 1794 evaluated, 1793 expanded
[t=0.0751287s, 26920 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.075139s, 26920 KB] g=150, 1806 evaluated, 1805 expanded
[t=0.0751756s, 26920 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0751855s, 26920 KB] g=150, 1808 evaluated, 1807 expanded
[t=0.0752033s, 26920 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0752117s, 26920 KB] g=151, 1809 evaluated, 1808 expanded
[t=0.0752269s, 26920 KB] Solution found!
[t=0.0752401s, 26920 KB] Actual search time: 0.0500087s
unstack b10 b13 (1)
put-down b10 (1)
unstack b24 b22 (1)
put-down b24 (1)
unstack b13 b6 (1)
stack b13 b10 (1)
unstack b2 b17 (1)
stack b2 b24 (1)
unstack b22 b12 (1)
put-down b22 (1)
unstack b12 b1 (1)
put-down b12 (1)
unstack b18 b4 (1)
put-down b18 (1)
unstack b4 b7 (1)
put-down b4 (1)
unstack b6 b14 (1)
put-down b6 (1)
unstack b14 b19 (1)
stack b14 b7 (1)
unstack b19 b5 (1)
stack b19 b2 (1)
unstack b5 b15 (1)
put-down b5 (1)
pick-up b15 (1)
stack b15 b19 (1)
pick-up b4 (1)
stack b4 b15 (1)
unstack b1 b8 (1)
stack b1 b6 (1)
pick-up b12 (1)
stack b12 b18 (1)
unstack b14 b7 (1)
put-down b14 (1)
unstack b7 b11 (1)
put-down b7 (1)
pick-up b14 (1)
stack b14 b7 (1)
unstack b11 b21 (1)
put-down b11 (1)
unstack b21 b9 (1)
stack b21 b1 (1)
pick-up b5 (1)
stack b5 b9 (1)
pick-up b8 (1)
stack b8 b21 (1)
unstack b5 b9 (1)
put-down b5 (1)
unstack b9 b3 (1)
stack b9 b8 (1)
pick-up b11 (1)
stack b11 b3 (1)
pick-up b5 (1)
stack b5 b9 (1)
unstack b11 b3 (1)
put-down b11 (1)
unstack b3 b23 (1)
stack b3 b14 (1)
pick-up b11 (1)
stack b11 b3 (1)
unstack b23 b16 (1)
stack b23 b12 (1)
unstack b16 b20 (1)
stack b16 b5 (1)
pick-up b20 (1)
stack b20 b13 (1)
pick-up b22 (1)
stack b22 b23 (1)
unstack b16 b5 (1)
put-down b16 (1)
unstack b5 b9 (1)
put-down b5 (1)
unstack b9 b8 (1)
put-down b9 (1)
pick-up b5 (1)
stack b5 b9 (1)
pick-up b16 (1)
stack b16 b5 (1)
unstack b22 b23 (1)
put-down b22 (1)
unstack b23 b12 (1)
put-down b23 (1)
pick-up b22 (1)
stack b22 b23 (1)
unstack b12 b18 (1)
put-down b12 (1)
pick-up b18 (1)
stack b18 b16 (1)
pick-up b12 (1)
stack b12 b18 (1)
unstack b22 b23 (1)
put-down b22 (1)
pick-up b23 (1)
stack b23 b12 (1)
pick-up b22 (1)
stack b22 b23 (1)
unstack b8 b21 (1)
put-down b8 (1)
unstack b21 b1 (1)
put-down b21 (1)
pick-up b8 (1)
stack b8 b21 (1)
unstack b1 b6 (1)
put-down b1 (1)
pick-up b6 (1)
stack b6 b11 (1)
pick-up b1 (1)
stack b1 b6 (1)
unstack b8 b21 (1)
put-down b8 (1)
pick-up b21 (1)
stack b21 b1 (1)
pick-up b8 (1)
stack b8 b21 (1)
unstack b22 b23 (1)
put-down b22 (1)
unstack b23 b12 (1)
put-down b23 (1)
unstack b12 b18 (1)
put-down b12 (1)
pick-up b23 (1)
stack b23 b12 (1)
pick-up b22 (1)
stack b22 b23 (1)
unstack b18 b16 (1)
put-down b18 (1)
unstack b16 b5 (1)
put-down b16 (1)
pick-up b18 (1)
stack b18 b16 (1)
unstack b5 b9 (1)
put-down b5 (1)
pick-up b9 (1)
stack b9 b8 (1)
pick-up b5 (1)
stack b5 b9 (1)
unstack b18 b16 (1)
put-down b18 (1)
pick-up b16 (1)
stack b16 b5 (1)
pick-up b18 (1)
stack b18 b16 (1)
unstack b22 b23 (1)
put-down b22 (1)
unstack b23 b12 (1)
put-down b23 (1)
pick-up b12 (1)
stack b12 b18 (1)
pick-up b23 (1)
stack b23 b12 (1)
pick-up b22 (1)
stack b22 b23 (1)
[t=0.0752499s, 26920 KB] Plan length: 152 step(s).
[t=0.0752499s, 26920 KB] Plan cost: 152
[t=0.0752499s, 26920 KB] Expanded 1809 state(s).
[t=0.0752499s, 26920 KB] Reopened 0 state(s).
[t=0.0752499s, 26920 KB] Evaluated 1810 state(s).
[t=0.0752499s, 26920 KB] Evaluations: 3620
[t=0.0752499s, 26920 KB] Generated 17468 state(s).
[t=0.0752499s, 26920 KB] Dead ends: 0 state(s).
[t=0.0752499s, 26920 KB] Number of registered states: 1810
[t=0.0752499s, 26920 KB] Int hash set load factor: 1810/2048 = 0.883789
[t=0.0752499s, 26920 KB] Int hash set resizes: 11
[t=0.0752499s, 26920 KB] Search time: 0.0500695s
[t=0.0752499s, 26920 KB] Total time: 0.0752499s
Solution found.
Peak memory: 26920 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.23s
