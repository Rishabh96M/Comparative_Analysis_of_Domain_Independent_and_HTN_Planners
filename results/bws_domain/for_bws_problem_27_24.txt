INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_27/bws_problem_27_24.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.000s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.014s wall-clock]
2378 relevant atoms
1593 auxiliary atoms
3971 final queue length
6947 total queue pushes
Completing instantiation... [0.030s CPU, 0.024s wall-clock]
Instantiating: [0.040s CPU, 0.040s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
28 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.010s CPU, 0.008s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.001s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.001s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.040s CPU, 0.042s wall-clock]
2160 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
54 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.018s wall-clock]
Reordering and filtering variables...
55 of 55 variables necessary.
28 of 55 mutex groups necessary.
1458 of 1458 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.009s wall-clock]
Translator variables: 55
Translator derived variables: 0
Translator facts: 812
Translator goal facts: 25
Translator mutex groups: 28
Translator total mutex groups size: 784
Translator operators: 1458
Translator axioms: 0
Translator task size: 12530
Translator peak memory: 39544 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.130s CPU, 0.130s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=1.9584e-05s, 24488 KB] reading input...
[t=0.00400371s, 25936 KB] done reading input!
[t=0.00484509s, 26332 KB] Initializing landmark count heuristic...
[t=0.00487486s, 26332 KB] Generating landmark graph...
[t=0.00495971s, 26332 KB] Building a landmark graph with reasonable orders.
[t=0.00504464s, 26464 KB] Initializing Exploration...
[t=0.0054679s, 26732 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0249455s, 27524 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0251438s, 27524 KB] Landmarks generation time: 0.0201931s
[t=0.0251669s, 27524 KB] Discovered 124 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0251831s, 27524 KB] 650 edges
[t=0.0251927s, 27524 KB] approx. reasonable orders
[t=0.0269648s, 27524 KB] approx. obedient reasonable orders
[t=0.0270125s, 27524 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0270219s, 27524 KB] Landmarks generation time: 0.0221444s
[t=0.0270352s, 27524 KB] Discovered 124 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0270447s, 27524 KB] 674 edges
[t=0.0270526s, 27524 KB] Landmark graph generation time: 0.0221847s
[t=0.0270609s, 27524 KB] Landmark graph contains 124 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0270688s, 27524 KB] Landmark graph contains 674 orderings.
[t=0.0276556s, 27548 KB] Simplifying 5778 unary operators... done! [4374 unary operators]
[t=0.0290794s, 27548 KB] time to simplify: 0.00152111s
[t=0.0292952s, 27548 KB] Initializing additive heuristic...
[t=0.0293127s, 27548 KB] Initializing FF heuristic...
[t=0.0293835s, 27548 KB] Building successor generator...done!
[t=0.0296435s, 27548 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0296526s, 27548 KB] time for successor generation creation: 0.000224279s
[t=0.0296656s, 27548 KB] Variables: 55
[t=0.029674s, 27548 KB] FactPairs: 812
[t=0.0296829s, 27548 KB] Bytes per state: 24
[t=0.029771s, 27548 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0298049s, 27548 KB] 55 initial landmarks, 25 goal landmarks
[t=0.0298671s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 69
[t=0.0298773s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 51
[t=0.0298859s, 27548 KB] g=0, 1 evaluated, 0 expanded
[t=0.0299004s, 27548 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 69
[t=0.0299092s, 27548 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 51
[t=0.0301831s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 68
[t=0.0301929s, 27548 KB] g=2, 8 evaluated, 7 expanded
[t=0.0302379s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 50
[t=0.0302465s, 27548 KB] g=2, 9 evaluated, 8 expanded
[t=0.0306356s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 67
[t=0.0306455s, 27548 KB] g=4, 20 evaluated, 19 expanded
[t=0.0307242s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 66
[t=0.0307332s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 49
[t=0.0307413s, 27548 KB] g=4, 22 evaluated, 21 expanded
[t=0.0307866s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 65
[t=0.0307954s, 27548 KB] g=5, 23 evaluated, 22 expanded
[t=0.031152s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 64
[t=0.0311614s, 27548 KB] g=8, 33 evaluated, 32 expanded
[t=0.0312767s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 63
[t=0.0312855s, 27548 KB] g=9, 36 evaluated, 35 expanded
[t=0.0314393s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 48
[t=0.0314484s, 27548 KB] g=6, 40 evaluated, 39 expanded
[t=0.0315272s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 62
[t=0.0315357s, 27548 KB] g=7, 42 evaluated, 41 expanded
[t=0.0318548s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 61
[t=0.0318641s, 27548 KB] g=10, 51 evaluated, 50 expanded
[t=0.031947s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 60
[t=0.0319571s, 27548 KB] g=11, 53 evaluated, 52 expanded
[t=0.0321426s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 47
[t=0.0321513s, 27548 KB] g=10, 58 evaluated, 57 expanded
[t=0.032561s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 58
[t=0.0325747s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 46
[t=0.0325837s, 27548 KB] g=12, 69 evaluated, 68 expanded
[t=0.0331832s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 57
[t=0.0331946s, 27548 KB] g=14, 86 evaluated, 85 expanded
[t=0.033477s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0334868s, 27548 KB] g=16, 94 evaluated, 93 expanded
[t=0.0336721s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 55
[t=0.0336813s, 27548 KB] g=16, 99 evaluated, 98 expanded
[t=0.033933s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 54
[t=0.0339422s, 27548 KB] g=18, 106 evaluated, 105 expanded
[t=0.0342376s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0342471s, 27548 KB] g=20, 114 evaluated, 113 expanded
[t=0.0345762s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0345861s, 27548 KB] g=22, 123 evaluated, 122 expanded
[t=0.0347078s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 45
[t=0.0347169s, 27548 KB] g=22, 126 evaluated, 125 expanded
[t=0.0352228s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0352324s, 27548 KB] g=24, 140 evaluated, 139 expanded
[t=0.0355977s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0356079s, 27548 KB] g=26, 150 evaluated, 149 expanded
[t=0.0358275s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.0358367s, 27548 KB] g=26, 156 evaluated, 155 expanded
[t=0.036185s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0361952s, 27548 KB] g=28, 166 evaluated, 165 expanded
[t=0.0369171s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0369356s, 27548 KB] g=30, 187 evaluated, 186 expanded
[t=0.0372894s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 43
[t=0.0373037s, 27548 KB] g=30, 196 evaluated, 195 expanded
[t=0.0377139s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0377296s, 27548 KB] g=32, 208 evaluated, 207 expanded
[t=0.0380169s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0380308s, 27548 KB] g=32, 216 evaluated, 215 expanded
[t=0.0384396s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.038454s, 27548 KB] g=34, 228 evaluated, 227 expanded
[t=0.0391335s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0391461s, 27548 KB] g=36, 248 evaluated, 247 expanded
[t=0.039755s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0397665s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0397745s, 27548 KB] g=38, 265 evaluated, 264 expanded
[t=0.0400925s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0401065s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.040129s, 27548 KB] g=40, 274 evaluated, 273 expanded
[t=0.0404139s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0404238s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0404323s, 27548 KB] g=42, 282 evaluated, 281 expanded
[t=0.0412603s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0412781s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0412863s, 27548 KB] g=46, 305 evaluated, 304 expanded
[t=0.041567s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0415806s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0415885s, 27548 KB] g=48, 313 evaluated, 312 expanded
[t=0.0488901s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0489174s, 27548 KB] g=60, 523 evaluated, 522 expanded
[t=0.0496585s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.049674s, 27548 KB] g=62, 543 evaluated, 542 expanded
[t=0.0501011s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0501117s, 27548 KB] g=64, 555 evaluated, 554 expanded
[t=0.0501604s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0501706s, 27548 KB] g=64, 556 evaluated, 555 expanded
[t=0.0509381s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0509476s, 27548 KB] g=66, 578 evaluated, 577 expanded
[t=0.0509927s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.051003s, 27548 KB] g=66, 579 evaluated, 578 expanded
[t=0.0516995s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0517101s, 27548 KB] g=68, 599 evaluated, 598 expanded
[t=0.0519583s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0519683s, 27548 KB] g=68, 606 evaluated, 605 expanded
[t=0.0523208s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0523304s, 27548 KB] g=70, 616 evaluated, 615 expanded
[t=0.0528071s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0528178s, 27548 KB] g=70, 630 evaluated, 629 expanded
[t=0.053372s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0533873s, 27548 KB] g=74, 646 evaluated, 645 expanded
[t=0.0535026s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0535131s, 27548 KB] g=72, 649 evaluated, 648 expanded
[t=0.0540314s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0540456s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0540547s, 27548 KB] g=74, 664 evaluated, 663 expanded
[t=0.0543598s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0543732s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0543813s, 27548 KB] g=76, 672 evaluated, 671 expanded
[t=0.0547676s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0547784s, 27548 KB] g=79, 683 evaluated, 682 expanded
[t=0.0548245s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0548336s, 27548 KB] g=80, 684 evaluated, 683 expanded
[t=0.0551147s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0551275s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0551365s, 27548 KB] g=82, 692 evaluated, 691 expanded
[t=0.0553856s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0553975s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0554065s, 27548 KB] g=84, 699 evaluated, 698 expanded
[t=0.0556155s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0556253s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0556337s, 27548 KB] g=86, 705 evaluated, 704 expanded
[t=0.0560704s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0560806s, 27548 KB] g=90, 718 evaluated, 717 expanded
[t=0.0562529s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0562621s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0562699s, 27548 KB] g=92, 723 evaluated, 722 expanded
[t=0.0567644s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0567737s, 27548 KB] g=96, 738 evaluated, 737 expanded
[t=0.0569135s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0569225s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0569308s, 27548 KB] g=98, 742 evaluated, 741 expanded
[t=0.0686246s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.068647s, 27548 KB] g=116, 1098 evaluated, 1097 expanded
[t=0.0688153s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0688257s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0688338s, 27548 KB] g=118, 1103 evaluated, 1102 expanded
[t=0.0706561s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0706823s, 27548 KB] g=126, 1161 evaluated, 1160 expanded
[t=0.0711591s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0711846s, 27548 KB] g=130, 1177 evaluated, 1176 expanded
[t=0.0713051s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.071317s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0713248s, 27548 KB] g=132, 1181 evaluated, 1180 expanded
[t=0.0822164s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0822379s, 27548 KB] g=154, 1563 evaluated, 1562 expanded
[t=0.0826901s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0826999s, 27548 KB] g=158, 1579 evaluated, 1578 expanded
[t=0.0828183s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0828344s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0828425s, 27548 KB] g=160, 1583 evaluated, 1582 expanded
[t=0.0835573s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0835696s, 27548 KB] g=168, 1609 evaluated, 1608 expanded
[t=0.0836577s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0836665s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0836742s, 27548 KB] g=170, 1612 evaluated, 1611 expanded
[t=0.0862071s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0862293s, 27548 KB] g=200, 1719 evaluated, 1718 expanded
[t=0.08642s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0864309s, 27548 KB] g=204, 1728 evaluated, 1727 expanded
[t=0.0864949s, 27548 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0865047s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.086513s, 27548 KB] g=206, 1731 evaluated, 1730 expanded
[t=0.0868144s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0868386s, 27548 KB] g=218, 1749 evaluated, 1748 expanded
[t=0.0869058s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0869152s, 27548 KB] g=222, 1753 evaluated, 1752 expanded
[t=0.0869343s, 27548 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.086943s, 27548 KB] g=223, 1754 evaluated, 1753 expanded
[t=0.0869628s, 27548 KB] Solution found!
[t=0.0870006s, 27548 KB] Actual search time: 0.0571924s
pick-up b2 (1)
stack b2 b13 (1)
unstack b3 b19 (1)
stack b3 b21 (1)
unstack b7 b5 (1)
stack b7 b2 (1)
unstack b19 b15 (1)
put-down b19 (1)
unstack b15 b25 (1)
put-down b15 (1)
unstack b25 b4 (1)
put-down b25 (1)
unstack b27 b8 (1)
stack b27 b15 (1)
pick-up b8 (1)
stack b8 b27 (1)
unstack b4 b26 (1)
put-down b4 (1)
unstack b26 b17 (1)
put-down b26 (1)
unstack b17 b22 (1)
put-down b17 (1)
pick-up b19 (1)
stack b19 b17 (1)
unstack b22 b12 (1)
put-down b22 (1)
unstack b12 b23 (1)
put-down b12 (1)
unstack b23 b24 (1)
put-down b23 (1)
pick-up b25 (1)
stack b25 b23 (1)
unstack b24 b9 (1)
put-down b24 (1)
pick-up b26 (1)
stack b26 b22 (1)
pick-up b12 (1)
stack b12 b26 (1)
pick-up b5 (1)
stack b5 b12 (1)
pick-up b9 (1)
stack b9 b7 (1)
unstack b3 b21 (1)
put-down b3 (1)
pick-up b21 (1)
stack b21 b24 (1)
pick-up b3 (1)
stack b3 b21 (1)
unstack b9 b7 (1)
put-down b9 (1)
unstack b7 b2 (1)
put-down b7 (1)
unstack b2 b13 (1)
put-down b2 (1)
unstack b13 b14 (1)
put-down b13 (1)
unstack b14 b20 (1)
put-down b14 (1)
unstack b20 b1 (1)
put-down b20 (1)
unstack b1 b11 (1)
stack b1 b3 (1)
unstack b11 b6 (1)
put-down b11 (1)
unstack b6 b16 (1)
stack b6 b8 (1)
pick-up b14 (1)
stack b14 b6 (1)
pick-up b2 (1)
stack b2 b13 (1)
pick-up b4 (1)
stack b4 b1 (1)
pick-up b7 (1)
stack b7 b2 (1)
pick-up b9 (1)
stack b9 b7 (1)
unstack b16 b18 (1)
put-down b16 (1)
unstack b18 b10 (1)
stack b18 b9 (1)
pick-up b10 (1)
stack b10 b5 (1)
pick-up b11 (1)
stack b11 b10 (1)
pick-up b16 (1)
stack b16 b18 (1)
unstack b19 b17 (1)
put-down b19 (1)
pick-up b17 (1)
stack b17 b14 (1)
pick-up b19 (1)
stack b19 b17 (1)
unstack b25 b23 (1)
put-down b25 (1)
pick-up b23 (1)
stack b23 b11 (1)
pick-up b25 (1)
stack b25 b23 (1)
unstack b16 b18 (1)
put-down b16 (1)
unstack b18 b9 (1)
put-down b18 (1)
unstack b9 b7 (1)
put-down b9 (1)
pick-up b18 (1)
stack b18 b9 (1)
pick-up b16 (1)
stack b16 b18 (1)
unstack b7 b2 (1)
put-down b7 (1)
unstack b2 b13 (1)
put-down b2 (1)
pick-up b13 (1)
stack b13 b4 (1)
pick-up b2 (1)
stack b2 b13 (1)
pick-up b7 (1)
stack b7 b2 (1)
unstack b16 b18 (1)
put-down b16 (1)
unstack b18 b9 (1)
put-down b18 (1)
pick-up b16 (1)
stack b16 b18 (1)
pick-up b9 (1)
stack b9 b7 (1)
unstack b16 b18 (1)
put-down b16 (1)
pick-up b18 (1)
stack b18 b9 (1)
pick-up b16 (1)
stack b16 b18 (1)
unstack b19 b17 (1)
put-down b19 (1)
unstack b17 b14 (1)
put-down b17 (1)
unstack b14 b6 (1)
put-down b14 (1)
pick-up b17 (1)
stack b17 b14 (1)
pick-up b19 (1)
stack b19 b17 (1)
unstack b6 b8 (1)
put-down b6 (1)
unstack b8 b27 (1)
put-down b8 (1)
pick-up b6 (1)
stack b6 b8 (1)
unstack b27 b15 (1)
put-down b27 (1)
pick-up b15 (1)
stack b15 b20 (1)
pick-up b27 (1)
stack b27 b15 (1)
unstack b6 b8 (1)
put-down b6 (1)
pick-up b8 (1)
stack b8 b27 (1)
pick-up b6 (1)
stack b6 b8 (1)
unstack b19 b17 (1)
put-down b19 (1)
unstack b17 b14 (1)
put-down b17 (1)
pick-up b14 (1)
stack b14 b6 (1)
pick-up b17 (1)
stack b17 b14 (1)
pick-up b19 (1)
stack b19 b17 (1)
unstack b25 b23 (1)
put-down b25 (1)
unstack b23 b11 (1)
put-down b23 (1)
pick-up b25 (1)
stack b25 b23 (1)
unstack b11 b10 (1)
put-down b11 (1)
unstack b10 b5 (1)
put-down b10 (1)
pick-up b11 (1)
stack b11 b10 (1)
unstack b25 b23 (1)
put-down b25 (1)
pick-up b23 (1)
stack b23 b11 (1)
pick-up b25 (1)
stack b25 b23 (1)
unstack b5 b12 (1)
put-down b5 (1)
unstack b12 b26 (1)
put-down b12 (1)
pick-up b5 (1)
stack b5 b12 (1)
unstack b26 b22 (1)
put-down b26 (1)
pick-up b22 (1)
stack b22 b16 (1)
pick-up b26 (1)
stack b26 b22 (1)
unstack b5 b12 (1)
put-down b5 (1)
pick-up b12 (1)
stack b12 b26 (1)
pick-up b5 (1)
stack b5 b12 (1)
unstack b25 b23 (1)
put-down b25 (1)
unstack b23 b11 (1)
put-down b23 (1)
pick-up b25 (1)
stack b25 b23 (1)
unstack b11 b10 (1)
put-down b11 (1)
pick-up b10 (1)
stack b10 b5 (1)
pick-up b11 (1)
stack b11 b10 (1)
unstack b25 b23 (1)
put-down b25 (1)
pick-up b23 (1)
stack b23 b11 (1)
pick-up b25 (1)
stack b25 b23 (1)
[t=0.0870109s, 27548 KB] Plan length: 224 step(s).
[t=0.0870109s, 27548 KB] Plan cost: 224
[t=0.0870109s, 27548 KB] Expanded 1754 state(s).
[t=0.0870109s, 27548 KB] Reopened 0 state(s).
[t=0.0870109s, 27548 KB] Evaluated 1755 state(s).
[t=0.0870109s, 27548 KB] Evaluations: 3510
[t=0.0870109s, 27548 KB] Generated 14588 state(s).
[t=0.0870109s, 27548 KB] Dead ends: 0 state(s).
[t=0.0870109s, 27548 KB] Number of registered states: 1755
[t=0.0870109s, 27548 KB] Int hash set load factor: 1755/2048 = 0.856934
[t=0.0870109s, 27548 KB] Int hash set resizes: 11
[t=0.0870109s, 27548 KB] Search time: 0.0572402s
[t=0.0870109s, 27548 KB] Total time: 0.0870109s
Solution found.
Peak memory: 27548 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.27s
