INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_21/bws_problem_21_29.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.009s wall-clock]
1472 relevant atoms
987 auxiliary atoms
2459 final queue length
4272 total queue pushes
Completing instantiation... [0.010s CPU, 0.015s wall-clock]
Instantiating: [0.020s CPU, 0.025s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.010s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
22 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.006s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.022s wall-clock]
1302 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
42 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.011s wall-clock]
Reordering and filtering variables...
43 of 43 variables necessary.
22 of 43 mutex groups necessary.
882 of 882 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.005s wall-clock]
Translator variables: 43
Translator derived variables: 0
Translator facts: 506
Translator goal facts: 14
Translator mutex groups: 22
Translator total mutex groups size: 484
Translator operators: 882
Translator axioms: 0
Translator task size: 7599
Translator peak memory: 36456 KB
Writing output... [0.000s CPU, 0.005s wall-clock]
Done! [0.070s CPU, 0.078s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=1.7277e-05s, 24488 KB] reading input...
[t=0.00252923s, 25268 KB] done reading input!
[t=0.00343132s, 25664 KB] Initializing landmark count heuristic...
[t=0.0034639s, 25664 KB] Generating landmark graph...
[t=0.00351961s, 25664 KB] Building a landmark graph with reasonable orders.
[t=0.00357412s, 25664 KB] Initializing Exploration...
[t=0.00382849s, 25852 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0110677s, 26248 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0110992s, 26248 KB] Landmarks generation time: 0.00757865s
[t=0.0111119s, 26248 KB] Discovered 84 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0111268s, 26248 KB] 205 edges
[t=0.0111356s, 26248 KB] approx. reasonable orders
[t=0.0131189s, 26248 KB] approx. obedient reasonable orders
[t=0.0132348s, 26248 KB] Removed 3 reasonable or obedient reasonable orders
[t=0.0132469s, 26248 KB] Landmarks generation time: 0.00978124s
[t=0.0132575s, 26248 KB] Discovered 84 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0132658s, 26248 KB] 265 edges
[t=0.0132747s, 26248 KB] Landmark graph generation time: 0.00981809s
[t=0.0132837s, 26248 KB] Landmark graph contains 84 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0132921s, 26248 KB] Landmark graph contains 265 orderings.
[t=0.0135875s, 26248 KB] Simplifying 3486 unary operators... done! [2646 unary operators]
[t=0.0144353s, 26380 KB] time to simplify: 0.000906331s
[t=0.014549s, 26380 KB] Initializing additive heuristic...
[t=0.014564s, 26380 KB] Initializing FF heuristic...
[t=0.0146163s, 26380 KB] Building successor generator...done!
[t=0.0148062s, 26380 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0148312s, 26380 KB] time for successor generation creation: 0.000156866s
[t=0.0148447s, 26380 KB] Variables: 43
[t=0.0148535s, 26380 KB] FactPairs: 506
[t=0.0148618s, 26380 KB] Bytes per state: 16
[t=0.014961s, 26380 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0149945s, 26380 KB] 42 initial landmarks, 14 goal landmarks
[t=0.015068s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0150778s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0150868s, 26380 KB] g=0, 1 evaluated, 0 expanded
[t=0.0151014s, 26380 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0151107s, 26380 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0153245s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0153348s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.015343s, 26380 KB] g=2, 9 evaluated, 8 expanded
[t=0.0155406s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0155509s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0155627s, 26380 KB] g=4, 17 evaluated, 16 expanded
[t=0.0157609s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0157724s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0157815s, 26380 KB] g=6, 25 evaluated, 24 expanded
[t=0.0159779s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.0159887s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0159972s, 26380 KB] g=8, 33 evaluated, 32 expanded
[t=0.016187s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0161988s, 26380 KB] g=10, 41 evaluated, 40 expanded
[t=0.0162563s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0162659s, 26380 KB] g=10, 43 evaluated, 42 expanded
[t=0.0165312s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.016546s, 26380 KB] g=12, 54 evaluated, 53 expanded
[t=0.0166686s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0166792s, 26380 KB] g=12, 59 evaluated, 58 expanded
[t=0.0169382s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0169494s, 26380 KB] g=14, 70 evaluated, 69 expanded
[t=0.0170832s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0170937s, 26380 KB] g=13, 75 evaluated, 74 expanded
[t=0.0173562s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0173666s, 26380 KB] g=16, 86 evaluated, 85 expanded
[t=0.0176927s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0177051s, 26380 KB] g=16, 99 evaluated, 98 expanded
[t=0.0177417s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0177515s, 26380 KB] g=18, 100 evaluated, 99 expanded
[t=0.0180632s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0180764s, 26380 KB] g=20, 113 evaluated, 112 expanded
[t=0.0181591s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.018171s, 26380 KB] g=18, 116 evaluated, 115 expanded
[t=0.0184788s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0184982s, 26380 KB] g=22, 128 evaluated, 127 expanded
[t=0.0186436s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0186591s, 26380 KB] g=20, 133 evaluated, 132 expanded
[t=0.0188552s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0188687s, 26380 KB] g=24, 141 evaluated, 140 expanded
[t=0.0190674s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0190825s, 26380 KB] g=22, 149 evaluated, 148 expanded
[t=0.0191181s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.019128s, 26380 KB] g=26, 150 evaluated, 149 expanded
[t=0.0194791s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0194959s, 26380 KB] g=24, 165 evaluated, 164 expanded
[t=0.0199411s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0199554s, 26380 KB] g=26, 184 evaluated, 183 expanded
[t=0.0199901s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0199997s, 26380 KB] g=32, 185 evaluated, 184 expanded
[t=0.0203432s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.020366s, 26380 KB] g=28, 200 evaluated, 199 expanded
[t=0.0207912s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0208032s, 26380 KB] g=30, 218 evaluated, 217 expanded
[t=0.0210815s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0210924s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0211015s, 26380 KB] g=32, 230 evaluated, 229 expanded
[t=0.0212645s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0212745s, 26380 KB] g=34, 237 evaluated, 236 expanded
[t=0.0213064s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0213159s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0213241s, 26380 KB] g=34, 238 evaluated, 237 expanded
[t=0.0214549s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0214638s, 26380 KB] g=36, 244 evaluated, 243 expanded
[t=0.0216218s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0216316s, 26380 KB] g=38, 251 evaluated, 250 expanded
[t=0.0218553s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0218721s, 26380 KB] g=40, 260 evaluated, 259 expanded
[t=0.0219378s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0219475s, 26380 KB] g=38, 262 evaluated, 261 expanded
[t=0.0223228s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0223342s, 26380 KB] g=40, 281 evaluated, 280 expanded
[t=0.022563s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0225727s, 26380 KB] g=46, 293 evaluated, 292 expanded
[t=0.0226814s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.02269s, 26380 KB] g=48, 298 evaluated, 297 expanded
[t=0.0231174s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0231351s, 26380 KB] g=54, 320 evaluated, 319 expanded
[t=0.0242843s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0242961s, 26380 KB] g=62, 381 evaluated, 380 expanded
[t=0.0243249s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.024334s, 26380 KB] g=63, 382 evaluated, 381 expanded
[t=0.0244221s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0244314s, 26380 KB] g=64, 386 evaluated, 385 expanded
[t=0.0244579s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0244669s, 26380 KB] g=65, 387 evaluated, 386 expanded
[t=0.0245336s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0245426s, 26380 KB] g=66, 390 evaluated, 389 expanded
[t=0.0245685s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0245774s, 26380 KB] g=67, 391 evaluated, 390 expanded
[t=0.0246483s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0246571s, 26380 KB] g=71, 395 evaluated, 394 expanded
[t=0.0247159s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0247248s, 26380 KB] g=74, 398 evaluated, 397 expanded
[t=0.0247466s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0247551s, 26380 KB] g=75, 399 evaluated, 398 expanded
[t=0.024808s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0248169s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0248251s, 26380 KB] g=78, 402 evaluated, 401 expanded
[t=0.0248429s, 26380 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0248517s, 26380 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0248597s, 26380 KB] g=79, 403 evaluated, 402 expanded
[t=0.0248747s, 26380 KB] Solution found!
[t=0.0248857s, 26380 KB] Actual search time: 0.00988826s
unstack b10 b16 (1)
put-down b10 (1)
unstack b21 b4 (1)
put-down b21 (1)
unstack b4 b13 (1)
put-down b4 (1)
unstack b6 b15 (1)
put-down b6 (1)
unstack b13 b18 (1)
put-down b13 (1)
unstack b18 b8 (1)
put-down b18 (1)
unstack b8 b3 (1)
put-down b8 (1)
unstack b16 b9 (1)
stack b16 b6 (1)
unstack b20 b19 (1)
stack b20 b10 (1)
unstack b19 b2 (1)
put-down b19 (1)
unstack b2 b11 (1)
stack b2 b3 (1)
unstack b11 b7 (1)
put-down b11 (1)
pick-up b7 (1)
stack b7 b2 (1)
pick-up b9 (1)
stack b9 b15 (1)
pick-up b13 (1)
stack b13 b20 (1)
pick-up b12 (1)
stack b12 b13 (1)
pick-up b8 (1)
stack b8 b12 (1)
unstack b1 b5 (1)
stack b1 b14 (1)
pick-up b11 (1)
stack b11 b5 (1)
pick-up b19 (1)
stack b19 b11 (1)
unstack b9 b15 (1)
put-down b9 (1)
unstack b15 b17 (1)
put-down b15 (1)
pick-up b17 (1)
stack b17 b19 (1)
pick-up b9 (1)
stack b9 b15 (1)
unstack b1 b14 (1)
put-down b1 (1)
unstack b17 b19 (1)
put-down b17 (1)
pick-up b14 (1)
stack b14 b17 (1)
pick-up b1 (1)
stack b1 b14 (1)
unstack b19 b11 (1)
put-down b19 (1)
unstack b11 b5 (1)
put-down b11 (1)
pick-up b5 (1)
stack b5 b16 (1)
pick-up b11 (1)
stack b11 b5 (1)
pick-up b19 (1)
stack b19 b11 (1)
unstack b1 b14 (1)
put-down b1 (1)
unstack b14 b17 (1)
put-down b14 (1)
pick-up b1 (1)
stack b1 b14 (1)
pick-up b17 (1)
stack b17 b19 (1)
unstack b1 b14 (1)
put-down b1 (1)
pick-up b14 (1)
stack b14 b17 (1)
pick-up b1 (1)
stack b1 b14 (1)
[t=0.0248954s, 26380 KB] Plan length: 80 step(s).
[t=0.0248954s, 26380 KB] Plan cost: 80
[t=0.0248954s, 26380 KB] Expanded 403 state(s).
[t=0.0248954s, 26380 KB] Reopened 0 state(s).
[t=0.0248954s, 26380 KB] Evaluated 404 state(s).
[t=0.0248954s, 26380 KB] Evaluations: 808
[t=0.0248954s, 26380 KB] Generated 4849 state(s).
[t=0.0248954s, 26380 KB] Dead ends: 0 state(s).
[t=0.0248954s, 26380 KB] Number of registered states: 404
[t=0.0248954s, 26380 KB] Int hash set load factor: 404/512 = 0.789062
[t=0.0248954s, 26380 KB] Int hash set resizes: 9
[t=0.0248954s, 26380 KB] Search time: 0.00993478s
[t=0.0248954s, 26380 KB] Total time: 0.0248954s
Solution found.
Peak memory: 26380 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.15s
