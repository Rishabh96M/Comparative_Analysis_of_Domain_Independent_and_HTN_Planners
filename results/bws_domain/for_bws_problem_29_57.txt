INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_29/bws_problem_29_57.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.020s CPU, 0.016s wall-clock]
2728 relevant atoms
1827 auxiliary atoms
4555 final queue length
7981 total queue pushes
Completing instantiation... [0.030s CPU, 0.029s wall-clock]
Instantiating: [0.050s CPU, 0.047s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
30 uncovered facts
Choosing groups: [0.010s CPU, 0.002s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.001s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.001s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.002s wall-clock]
Translating task: [0.050s CPU, 0.052s wall-clock]
2494 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
58 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.021s wall-clock]
Reordering and filtering variables...
59 of 59 variables necessary.
30 of 59 mutex groups necessary.
1682 of 1682 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.011s wall-clock]
Translator variables: 59
Translator derived variables: 0
Translator facts: 930
Translator goal facts: 24
Translator mutex groups: 30
Translator total mutex groups size: 900
Translator operators: 1682
Translator axioms: 0
Translator task size: 14441
Translator peak memory: 40824 KB
Writing output... [0.010s CPU, 0.009s wall-clock]
Done! [0.150s CPU, 0.156s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=1.983e-05s, 24488 KB] reading input...
[t=0.00473592s, 26220 KB] done reading input!
[t=0.00554079s, 26616 KB] Initializing landmark count heuristic...
[t=0.00556769s, 26616 KB] Generating landmark graph...
[t=0.00568321s, 26748 KB] Building a landmark graph with reasonable orders.
[t=0.00579445s, 26748 KB] Initializing Exploration...
[t=0.00628628s, 27200 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0300784s, 27860 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0301931s, 27860 KB] Landmarks generation time: 0.0245226s
[t=0.0302184s, 27860 KB] Discovered 128 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.030239s, 27860 KB] 583 edges
[t=0.0302494s, 27860 KB] approx. reasonable orders
[t=0.0302592s, 27860 KB] approx. obedient reasonable orders
[t=0.0302966s, 27860 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0303055s, 27860 KB] Landmarks generation time: 0.0247358s
[t=0.0303147s, 27860 KB] Discovered 128 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0303224s, 27860 KB] 583 edges
[t=0.0303304s, 27860 KB] Landmark graph generation time: 0.0247698s
[t=0.0303385s, 27860 KB] Landmark graph contains 128 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0303467s, 27860 KB] Landmark graph contains 583 orderings.
[t=0.0309384s, 27884 KB] Simplifying 6670 unary operators... done! [5046 unary operators]
[t=0.0325709s, 28016 KB] time to simplify: 0.00173877s
[t=0.0327712s, 28016 KB] Initializing additive heuristic...
[t=0.0327893s, 28016 KB] Initializing FF heuristic...
[t=0.0328408s, 28016 KB] Building successor generator...done!
[t=0.0331363s, 28016 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0331462s, 28016 KB] time for successor generation creation: 0.000265327s
[t=0.0331603s, 28016 KB] Variables: 59
[t=0.0331693s, 28016 KB] FactPairs: 930
[t=0.0331773s, 28016 KB] Bytes per state: 24
[t=0.0332764s, 28016 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0333093s, 28016 KB] 59 initial landmarks, 24 goal landmarks
[t=0.0333744s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 69
[t=0.0333837s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 51
[t=0.0333919s, 28016 KB] g=0, 1 evaluated, 0 expanded
[t=0.0334049s, 28016 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 69
[t=0.0334133s, 28016 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 51
[t=0.0334652s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 68
[t=0.0334741s, 28016 KB] g=1, 2 evaluated, 1 expanded
[t=0.033525s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 67
[t=0.0335338s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 50
[t=0.0335415s, 28016 KB] g=2, 3 evaluated, 2 expanded
[t=0.0337273s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 66
[t=0.0337371s, 28016 KB] g=4, 7 evaluated, 6 expanded
[t=0.0340468s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 65
[t=0.034056s, 28016 KB] g=6, 14 evaluated, 13 expanded
[t=0.0344059s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 64
[t=0.0344161s, 28016 KB] g=8, 23 evaluated, 22 expanded
[t=0.0349632s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 63
[t=0.0349745s, 28016 KB] g=10, 37 evaluated, 36 expanded
[t=0.0351872s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 62
[t=0.0352051s, 28016 KB] g=11, 42 evaluated, 41 expanded
[t=0.0352745s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 60
[t=0.0352873s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 49
[t=0.0352961s, 28016 KB] g=12, 43 evaluated, 42 expanded
[t=0.0356217s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 59
[t=0.0356334s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 48
[t=0.0356569s, 28016 KB] g=14, 51 evaluated, 50 expanded
[t=0.0360927s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 58
[t=0.0361137s, 28016 KB] g=16, 60 evaluated, 59 expanded
[t=0.0361631s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 47
[t=0.0361719s, 28016 KB] g=16, 61 evaluated, 60 expanded
[t=0.0368387s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 56
[t=0.0368519s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 46
[t=0.0368605s, 28016 KB] g=18, 78 evaluated, 77 expanded
[t=0.0371817s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0371964s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 44
[t=0.0372048s, 28016 KB] g=20, 86 evaluated, 85 expanded
[t=0.0373711s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0373834s, 28016 KB] g=21, 90 evaluated, 89 expanded
[t=0.0379311s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0379497s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0379579s, 28016 KB] g=24, 104 evaluated, 103 expanded
[t=0.038365s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0383753s, 28016 KB] g=26, 114 evaluated, 113 expanded
[t=0.0385237s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 41
[t=0.0385329s, 28016 KB] g=26, 117 evaluated, 116 expanded
[t=0.0391382s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0391484s, 28016 KB] g=28, 132 evaluated, 131 expanded
[t=0.0394808s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.0394914s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0395024s, 28016 KB] g=30, 140 evaluated, 139 expanded
[t=0.0399169s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 43
[t=0.0399276s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.039936s, 28016 KB] g=32, 150 evaluated, 149 expanded
[t=0.0402992s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0403093s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.040318s, 28016 KB] g=34, 159 evaluated, 158 expanded
[t=0.0407297s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 40
[t=0.0407453s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0407536s, 28016 KB] g=36, 169 evaluated, 168 expanded
[t=0.0414343s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0414449s, 28016 KB] g=39, 186 evaluated, 185 expanded
[t=0.0414958s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.041505s, 28016 KB] g=40, 187 evaluated, 186 expanded
[t=0.0418698s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 36
[t=0.0418796s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0418964s, 28016 KB] g=42, 196 evaluated, 195 expanded
[t=0.0422224s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0422321s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0422446s, 28016 KB] g=44, 204 evaluated, 203 expanded
[t=0.0425215s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 33
[t=0.0425312s, 28016 KB] g=45, 211 evaluated, 210 expanded
[t=0.0425837s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0425925s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0426005s, 28016 KB] g=46, 212 evaluated, 211 expanded
[t=0.0429565s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0429679s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0429759s, 28016 KB] g=48, 221 evaluated, 220 expanded
[t=0.0432551s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.0432644s, 28016 KB] g=48, 228 evaluated, 227 expanded
[t=0.0435491s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0435587s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0435674s, 28016 KB] g=50, 235 evaluated, 234 expanded
[t=0.0448688s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0448792s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0448875s, 28016 KB] g=54, 268 evaluated, 267 expanded
[t=0.0451605s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0451696s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0451776s, 28016 KB] g=56, 275 evaluated, 274 expanded
[t=0.0464714s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0464865s, 28016 KB] g=61, 308 evaluated, 307 expanded
[t=0.0465367s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.0465454s, 28016 KB] g=62, 309 evaluated, 308 expanded
[t=0.0468659s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0468752s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0468834s, 28016 KB] g=64, 317 evaluated, 316 expanded
[t=0.0471608s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0471703s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0471783s, 28016 KB] g=66, 324 evaluated, 323 expanded
[t=0.0474467s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0474562s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.047465s, 28016 KB] g=68, 331 evaluated, 330 expanded
[t=0.0477127s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0477233s, 28016 KB] g=69, 337 evaluated, 336 expanded
[t=0.047774s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0477852s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0477973s, 28016 KB] g=70, 338 evaluated, 337 expanded
[t=0.0480625s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0480721s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0480806s, 28016 KB] g=72, 345 evaluated, 344 expanded
[t=0.0486973s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0487068s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0487152s, 28016 KB] g=76, 362 evaluated, 361 expanded
[t=0.0489283s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0489371s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0489449s, 28016 KB] g=78, 368 evaluated, 367 expanded
[t=0.0497732s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.049783s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.049791s, 28016 KB] g=82, 393 evaluated, 392 expanded
[t=0.0499593s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0499681s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0499771s, 28016 KB] g=84, 398 evaluated, 397 expanded
[t=0.0516539s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0516717s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0516811s, 28016 KB] g=92, 447 evaluated, 446 expanded
[t=0.0517929s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0518025s, 28016 KB] g=92, 450 evaluated, 449 expanded
[t=0.0519396s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0519493s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.051958s, 28016 KB] g=94, 454 evaluated, 453 expanded
[t=0.0528993s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0529117s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0529201s, 28016 KB] g=102, 485 evaluated, 484 expanded
[t=0.052988s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0529973s, 28016 KB] g=102, 487 evaluated, 486 expanded
[t=0.0530944s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0531034s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0531123s, 28016 KB] g=104, 490 evaluated, 489 expanded
[t=0.0534621s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0534741s, 28016 KB] g=114, 504 evaluated, 503 expanded
[t=0.0535505s, 28016 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0535599s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0535682s, 28016 KB] g=116, 507 evaluated, 506 expanded
[t=0.053656s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0536657s, 28016 KB] g=120, 511 evaluated, 510 expanded
[t=0.0537149s, 28016 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.053725s, 28016 KB] g=121, 512 evaluated, 511 expanded
[t=0.0537487s, 28016 KB] Solution found!
[t=0.05378s, 28016 KB] Actual search time: 0.0204689s
unstack b12 b6 (1)
stack b12 b25 (1)
unstack b14 b11 (1)
put-down b14 (1)
unstack b11 b5 (1)
put-down b11 (1)
unstack b3 b24 (1)
put-down b3 (1)
unstack b24 b19 (1)
put-down b24 (1)
unstack b19 b4 (1)
stack b19 b3 (1)
unstack b5 b8 (1)
put-down b5 (1)
unstack b8 b10 (1)
put-down b8 (1)
unstack b4 b23 (1)
stack b4 b10 (1)
unstack b23 b18 (1)
stack b23 b8 (1)
unstack b18 b29 (1)
put-down b18 (1)
unstack b6 b20 (1)
stack b6 b23 (1)
pick-up b24 (1)
stack b24 b29 (1)
unstack b20 b26 (1)
put-down b20 (1)
unstack b26 b13 (1)
put-down b26 (1)
unstack b13 b21 (1)
stack b13 b4 (1)
unstack b21 b1 (1)
put-down b21 (1)
pick-up b18 (1)
stack b18 b13 (1)
unstack b12 b25 (1)
put-down b12 (1)
unstack b25 b2 (1)
stack b25 b11 (1)
pick-up b12 (1)
stack b12 b25 (1)
unstack b2 b27 (1)
stack b2 b1 (1)
unstack b27 b22 (1)
stack b27 b5 (1)
pick-up b22 (1)
stack b22 b14 (1)
pick-up b20 (1)
stack b20 b22 (1)
unstack b24 b29 (1)
put-down b24 (1)
pick-up b29 (1)
stack b29 b26 (1)
pick-up b24 (1)
stack b24 b29 (1)
unstack b2 b1 (1)
put-down b2 (1)
unstack b1 b16 (1)
put-down b1 (1)
unstack b16 b28 (1)
stack b16 b21 (1)
pick-up b1 (1)
stack b1 b16 (1)
unstack b28 b17 (1)
stack b28 b6 (1)
unstack b17 b7 (1)
put-down b17 (1)
unstack b7 b15 (1)
stack b7 b24 (1)
pick-up b2 (1)
stack b2 b1 (1)
unstack b15 b9 (1)
put-down b15 (1)
pick-up b9 (1)
stack b9 b28 (1)
pick-up b15 (1)
stack b15 b9 (1)
unstack b19 b3 (1)
put-down b19 (1)
pick-up b3 (1)
stack b3 b17 (1)
pick-up b19 (1)
stack b19 b3 (1)
unstack b12 b25 (1)
put-down b12 (1)
unstack b25 b11 (1)
put-down b25 (1)
pick-up b11 (1)
stack b11 b2 (1)
pick-up b25 (1)
stack b25 b11 (1)
pick-up b12 (1)
stack b12 b25 (1)
unstack b20 b22 (1)
put-down b20 (1)
unstack b22 b14 (1)
put-down b22 (1)
pick-up b14 (1)
stack b14 b15 (1)
pick-up b22 (1)
stack b22 b14 (1)
pick-up b20 (1)
stack b20 b22 (1)
unstack b18 b13 (1)
put-down b18 (1)
unstack b13 b4 (1)
put-down b13 (1)
pick-up b18 (1)
stack b18 b13 (1)
unstack b4 b10 (1)
put-down b4 (1)
pick-up b10 (1)
stack b10 b20 (1)
pick-up b4 (1)
stack b4 b10 (1)
unstack b18 b13 (1)
put-down b18 (1)
pick-up b13 (1)
stack b13 b4 (1)
pick-up b18 (1)
stack b18 b13 (1)
[t=0.0537948s, 28016 KB] Plan length: 122 step(s).
[t=0.0537948s, 28016 KB] Plan cost: 122
[t=0.0537948s, 28016 KB] Expanded 512 state(s).
[t=0.0537948s, 28016 KB] Reopened 0 state(s).
[t=0.0537948s, 28016 KB] Evaluated 513 state(s).
[t=0.0537948s, 28016 KB] Evaluations: 1026
[t=0.0537948s, 28016 KB] Generated 5354 state(s).
[t=0.0537948s, 28016 KB] Dead ends: 0 state(s).
[t=0.0537948s, 28016 KB] Number of registered states: 513
[t=0.0537948s, 28016 KB] Int hash set load factor: 513/1024 = 0.500977
[t=0.0537948s, 28016 KB] Int hash set resizes: 10
[t=0.0537948s, 28016 KB] Search time: 0.0205187s
[t=0.0537948s, 28016 KB] Total time: 0.0537948s
Solution found.
Peak memory: 28016 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.26s
