INFO     planner time limit: None
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: None
INFO     translator memory limit: None
INFO     translator command line string: /usr/bin/python3 /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/translate/translate.py bws_domain_actions.pddl ../bws_domain/problem_size_24/bws_problem_24_62.pddl --sas-file output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.000s wall-clock]
Generated 21 rules.
Computing model... [0.010s CPU, 0.012s wall-clock]
1898 relevant atoms
1272 auxiliary atoms
3170 final queue length
5526 total queue pushes
Completing instantiation... [0.020s CPU, 0.020s wall-clock]
Instantiating: [0.030s CPU, 0.034s wall-clock]
Computing fact groups...
Finding invariants...
10 initial candidates
Finding invariants: [0.000s CPU, 0.002s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
25 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.008s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.030s CPU, 0.030s wall-clock]
1704 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
48 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.018s wall-clock]
Reordering and filtering variables...
49 of 49 variables necessary.
25 of 49 mutex groups necessary.
1152 of 1152 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.007s wall-clock]
Translator variables: 49
Translator derived variables: 0
Translator facts: 650
Translator goal facts: 19
Translator mutex groups: 25
Translator total mutex groups size: 625
Translator operators: 1152
Translator axioms: 0
Translator task size: 9911
Translator peak memory: 37884 KB
Writing output... [0.010s CPU, 0.006s wall-clock]
Done! [0.100s CPU, 0.107s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: output.sas
INFO     search time limit: None
INFO     search memory limit: None
INFO     search command line string: /home/rishabh_mukund/Workspace/AI_Planning/fast-downward-22.12/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file sas_plan < output.sas
[t=2.4363e-05s, 24488 KB] reading input...
[t=0.00325555s, 25532 KB] done reading input!
[t=0.00450718s, 25928 KB] Initializing landmark count heuristic...
[t=0.00459218s, 25928 KB] Generating landmark graph...
[t=0.00469081s, 25928 KB] Building a landmark graph with reasonable orders.
[t=0.00476832s, 26060 KB] Initializing Exploration...
[t=0.00515394s, 26388 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0181856s, 26916 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0184031s, 26916 KB] Landmarks generation time: 0.0137154s
[t=0.0184196s, 26916 KB] Discovered 100 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0184542s, 26916 KB] 525 edges
[t=0.0184668s, 26916 KB] approx. reasonable orders
[t=0.0200059s, 26916 KB] approx. obedient reasonable orders
[t=0.0200596s, 26916 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.02007s, 26916 KB] Landmarks generation time: 0.0154754s
[t=0.0200812s, 26916 KB] Discovered 100 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0200896s, 26916 KB] 549 edges
[t=0.0200989s, 26916 KB] Landmark graph generation time: 0.0155151s
[t=0.0201089s, 26916 KB] Landmark graph contains 100 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0201176s, 26916 KB] Landmark graph contains 549 orderings.
[t=0.0207306s, 26916 KB] Simplifying 4560 unary operators... done! [3456 unary operators]
[t=0.0218136s, 26916 KB] time to simplify: 0.00115514s
[t=0.0219559s, 26916 KB] Initializing additive heuristic...
[t=0.0219708s, 26916 KB] Initializing FF heuristic...
[t=0.0220234s, 26916 KB] Building successor generator...done!
[t=0.0222485s, 26916 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0222569s, 26916 KB] time for successor generation creation: 0.000190569s
[t=0.02227s, 26916 KB] Variables: 49
[t=0.022278s, 26916 KB] FactPairs: 650
[t=0.0222857s, 26916 KB] Bytes per state: 20
[t=0.0223864s, 26916 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0224191s, 26916 KB] 47 initial landmarks, 19 goal landmarks
[t=0.022477s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0224864s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0224948s, 26916 KB] g=0, 1 evaluated, 0 expanded
[t=0.022508s, 26916 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 53
[t=0.0225168s, 26916 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0226463s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 52
[t=0.0226555s, 26916 KB] g=1, 5 evaluated, 4 expanded
[t=0.0229137s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 51
[t=0.0229229s, 26916 KB] g=3, 14 evaluated, 13 expanded
[t=0.0230444s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0230531s, 26916 KB] g=4, 18 evaluated, 17 expanded
[t=0.0232252s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 50
[t=0.0232346s, 26916 KB] g=6, 24 evaluated, 23 expanded
[t=0.0232816s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0232935s, 26916 KB] g=6, 25 evaluated, 24 expanded
[t=0.0236496s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 49
[t=0.0236588s, 26916 KB] g=8, 37 evaluated, 36 expanded
[t=0.0240484s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 48
[t=0.0240635s, 26916 KB] g=10, 50 evaluated, 49 expanded
[t=0.0244251s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 47
[t=0.0244377s, 26916 KB] g=11, 60 evaluated, 59 expanded
[t=0.0248302s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 46
[t=0.02484s, 26916 KB] g=13, 73 evaluated, 72 expanded
[t=0.0249408s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0249498s, 26916 KB] g=14, 76 evaluated, 75 expanded
[t=0.0253442s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 45
[t=0.0253592s, 26916 KB] g=16, 90 evaluated, 89 expanded
[t=0.025594s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.0256037s, 26916 KB] g=18, 98 evaluated, 97 expanded
[t=0.0256433s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 44
[t=0.0256527s, 26916 KB] g=18, 99 evaluated, 98 expanded
[t=0.0261173s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 42
[t=0.0261269s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0261354s, 26916 KB] g=20, 115 evaluated, 114 expanded
[t=0.0262104s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 41
[t=0.0262196s, 26916 KB] g=21, 117 evaluated, 116 expanded
[t=0.0262591s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 39
[t=0.0262679s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.026276s, 26916 KB] g=22, 118 evaluated, 117 expanded
[t=0.0265086s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 38
[t=0.026518s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0265261s, 26916 KB] g=24, 126 evaluated, 125 expanded
[t=0.0267963s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 37
[t=0.0268054s, 26916 KB] g=26, 135 evaluated, 134 expanded
[t=0.0268463s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 35
[t=0.0268555s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0268638s, 26916 KB] g=26, 136 evaluated, 135 expanded
[t=0.0270987s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 34
[t=0.0271079s, 26916 KB] g=28, 144 evaluated, 143 expanded
[t=0.027147s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0271561s, 26916 KB] g=28, 145 evaluated, 144 expanded
[t=0.0275862s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0275979s, 26916 KB] g=28, 160 evaluated, 159 expanded
[t=0.0278325s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0278421s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0278507s, 26916 KB] g=30, 168 evaluated, 167 expanded
[t=0.0280557s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 29
[t=0.028065s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0280731s, 26916 KB] g=32, 175 evaluated, 174 expanded
[t=0.0290389s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 28
[t=0.0290529s, 26916 KB] g=38, 209 evaluated, 208 expanded
[t=0.029608s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0296221s, 26916 KB] g=36, 226 evaluated, 225 expanded
[t=0.0296902s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 25
[t=0.0296995s, 26916 KB] g=40, 228 evaluated, 227 expanded
[t=0.0300144s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.030025s, 26916 KB] g=38, 239 evaluated, 238 expanded
[t=0.0303169s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.0303358s, 26916 KB] g=42, 249 evaluated, 248 expanded
[t=0.0308794s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0308994s, 26916 KB] g=44, 268 evaluated, 267 expanded
[t=0.0313728s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0313978s, 26916 KB] g=46, 284 evaluated, 283 expanded
[t=0.0321367s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0321471s, 26916 KB] g=50, 309 evaluated, 308 expanded
[t=0.0324742s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0324873s, 26916 KB] g=52, 320 evaluated, 319 expanded
[t=0.0326582s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.0326686s, 26916 KB] g=54, 326 evaluated, 325 expanded
[t=0.0338669s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0338858s, 26916 KB] g=64, 369 evaluated, 368 expanded
[t=0.0341235s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.034141s, 26916 KB] g=66, 377 evaluated, 376 expanded
[t=0.0344203s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0344367s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0344474s, 26916 KB] g=68, 385 evaluated, 384 expanded
[t=0.0346579s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0346706s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0346793s, 26916 KB] g=70, 392 evaluated, 391 expanded
[t=0.0348524s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0348629s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0348726s, 26916 KB] g=72, 398 evaluated, 397 expanded
[t=0.0356515s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0356754s, 26916 KB] g=76, 423 evaluated, 422 expanded
[t=0.0358293s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.035839s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0358474s, 26916 KB] g=78, 428 evaluated, 427 expanded
[t=0.0369884s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0369991s, 26916 KB] g=86, 469 evaluated, 468 expanded
[t=0.0371721s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0371811s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0371895s, 26916 KB] g=88, 475 evaluated, 474 expanded
[t=0.0378344s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0378441s, 26916 KB] g=96, 498 evaluated, 497 expanded
[t=0.0379066s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0379157s, 26916 KB] g=97, 500 evaluated, 499 expanded
[t=0.0379522s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0379674s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.037976s, 26916 KB] g=98, 501 evaluated, 500 expanded
[t=0.038093s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0381019s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.03811s, 26916 KB] g=100, 505 evaluated, 504 expanded
[t=0.0381725s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0381815s, 26916 KB] g=100, 507 evaluated, 506 expanded
[t=0.0382697s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0382785s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0382871s, 26916 KB] g=102, 510 evaluated, 509 expanded
[t=0.0432058s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0432295s, 26916 KB] g=136, 698 evaluated, 697 expanded
[t=0.0434729s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0434822s, 26916 KB] g=140, 707 evaluated, 706 expanded
[t=0.0435601s, 26916 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0435694s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0435773s, 26916 KB] g=142, 710 evaluated, 709 expanded
[t=0.043905s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0439138s, 26916 KB] g=154, 727 evaluated, 726 expanded
[t=0.0439824s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.043991s, 26916 KB] g=158, 731 evaluated, 730 expanded
[t=0.0440082s, 26916 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0440163s, 26916 KB] g=159, 732 evaluated, 731 expanded
[t=0.0440317s, 26916 KB] Solution found!
[t=0.0440434s, 26916 KB] Actual search time: 0.0216217s
unstack b6 b10 (1)
put-down b6 (1)
unstack b10 b21 (1)
stack b10 b15 (1)
unstack b18 b12 (1)
stack b18 b21 (1)
unstack b12 b24 (1)
put-down b12 (1)
unstack b24 b2 (1)
put-down b24 (1)
unstack b2 b5 (1)
put-down b2 (1)
unstack b5 b17 (1)
stack b5 b12 (1)
unstack b17 b1 (1)
put-down b17 (1)
unstack b1 b20 (1)
stack b1 b10 (1)
unstack b20 b14 (1)
stack b20 b17 (1)
unstack b14 b22 (1)
stack b14 b20 (1)
unstack b22 b3 (1)
put-down b22 (1)
unstack b3 b9 (1)
stack b3 b1 (1)
unstack b9 b4 (1)
stack b9 b18 (1)
pick-up b24 (1)
stack b24 b9 (1)
pick-up b6 (1)
stack b6 b4 (1)
unstack b3 b1 (1)
put-down b3 (1)
unstack b1 b10 (1)
put-down b1 (1)
unstack b10 b15 (1)
put-down b10 (1)
unstack b15 b23 (1)
stack b15 b5 (1)
unstack b23 b7 (1)
put-down b23 (1)
pick-up b10 (1)
stack b10 b15 (1)
pick-up b1 (1)
stack b1 b10 (1)
unstack b6 b4 (1)
put-down b6 (1)
pick-up b4 (1)
stack b4 b7 (1)
pick-up b6 (1)
stack b6 b4 (1)
pick-up b3 (1)
stack b3 b1 (1)
unstack b6 b4 (1)
put-down b6 (1)
unstack b4 b7 (1)
put-down b4 (1)
pick-up b6 (1)
stack b6 b4 (1)
unstack b7 b11 (1)
put-down b7 (1)
unstack b11 b13 (1)
put-down b11 (1)
unstack b13 b8 (1)
put-down b13 (1)
pick-up b2 (1)
stack b2 b13 (1)
pick-up b7 (1)
stack b7 b11 (1)
pick-up b8 (1)
stack b8 b19 (1)
unstack b6 b4 (1)
put-down b6 (1)
pick-up b4 (1)
stack b4 b7 (1)
pick-up b6 (1)
stack b6 b4 (1)
unstack b14 b20 (1)
put-down b14 (1)
unstack b20 b17 (1)
put-down b20 (1)
pick-up b17 (1)
stack b17 b3 (1)
pick-up b20 (1)
stack b20 b17 (1)
pick-up b14 (1)
stack b14 b20 (1)
unstack b24 b9 (1)
put-down b24 (1)
unstack b9 b18 (1)
put-down b9 (1)
unstack b18 b21 (1)
put-down b18 (1)
pick-up b21 (1)
stack b21 b23 (1)
pick-up b18 (1)
stack b18 b21 (1)
pick-up b9 (1)
stack b9 b18 (1)
pick-up b24 (1)
stack b24 b9 (1)
unstack b14 b20 (1)
put-down b14 (1)
unstack b20 b17 (1)
put-down b20 (1)
pick-up b14 (1)
stack b14 b20 (1)
unstack b17 b3 (1)
put-down b17 (1)
unstack b3 b1 (1)
put-down b3 (1)
pick-up b17 (1)
stack b17 b3 (1)
unstack b14 b20 (1)
put-down b14 (1)
pick-up b20 (1)
stack b20 b17 (1)
pick-up b14 (1)
stack b14 b20 (1)
unstack b1 b10 (1)
put-down b1 (1)
unstack b10 b15 (1)
put-down b10 (1)
pick-up b1 (1)
stack b1 b10 (1)
unstack b15 b5 (1)
put-down b15 (1)
unstack b5 b12 (1)
put-down b5 (1)
pick-up b12 (1)
stack b12 b22 (1)
pick-up b5 (1)
stack b5 b12 (1)
pick-up b15 (1)
stack b15 b5 (1)
unstack b1 b10 (1)
put-down b1 (1)
pick-up b10 (1)
stack b10 b15 (1)
pick-up b1 (1)
stack b1 b10 (1)
unstack b14 b20 (1)
put-down b14 (1)
unstack b20 b17 (1)
put-down b20 (1)
pick-up b14 (1)
stack b14 b20 (1)
unstack b17 b3 (1)
put-down b17 (1)
pick-up b3 (1)
stack b3 b1 (1)
pick-up b17 (1)
stack b17 b3 (1)
unstack b14 b20 (1)
put-down b14 (1)
pick-up b20 (1)
stack b20 b17 (1)
pick-up b14 (1)
stack b14 b20 (1)
[t=0.0440527s, 26916 KB] Plan length: 160 step(s).
[t=0.0440527s, 26916 KB] Plan cost: 160
[t=0.0440527s, 26916 KB] Expanded 732 state(s).
[t=0.0440527s, 26916 KB] Reopened 0 state(s).
[t=0.0440527s, 26916 KB] Evaluated 733 state(s).
[t=0.0440527s, 26916 KB] Evaluations: 1466
[t=0.0440527s, 26916 KB] Generated 6965 state(s).
[t=0.0440527s, 26916 KB] Dead ends: 0 state(s).
[t=0.0440527s, 26916 KB] Number of registered states: 733
[t=0.0440527s, 26916 KB] Int hash set load factor: 733/1024 = 0.71582
[t=0.0440527s, 26916 KB] Int hash set resizes: 10
[t=0.0440527s, 26916 KB] Search time: 0.0216669s
[t=0.0440527s, 26916 KB] Total time: 0.0440527s
Solution found.
Peak memory: 26916 KB
Remove intermediate file output.sas
search exit code: 0

INFO     Planner time: 0.19s
